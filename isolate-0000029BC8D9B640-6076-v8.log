v8-version,9,4,146,24,-node.20,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff7c00e0000,0x7ff7c3e02000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7ffdf6780000,0x7ffdf6970000,0
shared-library,C:\\Program Files\\AVG\\Antivirus\\aswhook.dll,0x7ffdc9740000,0x7ffdc9759000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7ffdf5e50000,0x7ffdf5f02000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7ffdf3c40000,0x7ffdf3ee5000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7ffdf66d0000,0x7ffdf673f000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7ffdf5f20000,0x7ffdf6040000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7ffdebf00000,0x7ffdec0f4000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7ffdf6560000,0x7ffdf6568000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7ffdf5000000,0x7ffdf50a3000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7ffdf4ae0000,0x7ffdf4b7e000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7ffdf4080000,0x7ffdf417a000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7ffdf6570000,0x7ffdf6607000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7ffdf50e0000,0x7ffdf5274000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7ffdf2c00000,0x7ffdf2c3a000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7ffdf3fe0000,0x7ffdf4001000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7ffdf3620000,0x7ffdf3645000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7ffdf50b0000,0x7ffdf50d6000,0
shared-library,C:\\WINDOWS\\System32\\profapi.dll,0x7ffdf37a0000,0x7ffdf37c3000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7ffdf3880000,0x7ffdf3a16000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7ffdf3b70000,0x7ffdf3c0e000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7ffdf3a20000,0x7ffdf3b69000,0
shared-library,C:\\WINDOWS\\System32\\MSASN1.dll,0x7ffdf3730000,0x7ffdf3742000,0
shared-library,C:\\WINDOWS\\System32\\bcrypt.dll,0x7ffdf3c10000,0x7ffdf3c36000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7ffdf1710000,0x7ffdf1734000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7ffdf30c0000,0x7ffdf30cc000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMMBASE.dll,0x7ffdf16e0000,0x7ffdf170d000,0
shared-library,C:\\WINDOWS\\System32\\bcryptPrimitives.dll,0x7ffdf3ef0000,0x7ffdf3f71000,0
shared-library,C:\\WINDOWS\\System32\\cfgmgr32.dll,0x7ffdf4010000,0x7ffdf405a000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7ffdf5970000,0x7ffdf599e000,0
shared-library,C:\\WINDOWS\\System32\\powrprof.dll,0x7ffdf3750000,0x7ffdf379a000,0
shared-library,C:\\WINDOWS\\System32\\UMPDC.dll,0x7ffdf3700000,0x7ffdf3710000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7ffdf1a40000,0x7ffdf1ad9000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7ffdf4cc0000,0x7ffdf4ff6000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7ffdf2ef0000,0x7ffdf2f57000,0
shared-library,C:\\WINDOWS\\System32\\kernel.appcore.dll,0x7ffdf3710000,0x7ffdf3721000,0
shared-library-end
tick,0x7ffdf681c774,108945,0,0x0,6
profiler,begin,1000
new,CodeRange,0x29bccd30000,0
new,MemoryChunk,0xb1e8400000,262144
new,MemoryChunk,0x11cb800000,262144
new,MemoryChunk,0x14124680000,262144
new,MemoryChunk,0x35934ec0000,262144
new,MemoryChunk,0x21638840000,262144
heap-capacity,1031072
heap-available,4346136384
new,MemoryChunk,0x359b0d40000,262144
new,MemoryChunk,0xaf04180000,262144
new,MemoryChunk,0x2711fd40000,262144
new,MemoryChunk,0x3d28e280000,262144
new,MemoryChunk,0x1599be40000,262144
new,MemoryChunk,0x10586640000,262144
tick,0x7ff7c07e51fa,110557,0,0x0,6
new,MemoryChunk,0x2b5dd700000,262144
new,MemoryChunk,0x29bccd40000,262144
new,MemoryChunk,0x3842ddc0000,262144
code-creation,Builtin,2,112269,0x7ff7c0c504a4,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,112280,0x7ff7c0c50a04,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,112286,0x7ff7c0c50be4,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,112292,0x7ff7c0c50e64,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,112298,0x7ff7c0c50f44,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,112325,0x7ff7c0c510c4,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,112333,0x7ff7c0c51164,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,112338,0x7ff7c0c511a4,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,112344,0x7ff7c0c51324,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,112349,0x7ff7c0c514e4,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,112355,0x7ff7c0c516a4,104,CallBoundFunction
code-creation,Builtin,2,112360,0x7ff7c0c51724,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,112365,0x7ff7c0c517a4,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,112371,0x7ff7c0c51824,120,Call_ReceiverIsAny
code-creation,Builtin,2,112376,0x7ff7c0c518a4,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,112381,0x7ff7c0c51ca4,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,112387,0x7ff7c0c520a4,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,112393,0x7ff7c0c524e4,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,112399,0x7ff7c0c52924,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,112404,0x7ff7c0c52d64,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,112411,0x7ff7c0c531a4,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,112416,0x7ff7c0c53564,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,112422,0x7ff7c0c53924,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,112427,0x7ff7c0c53ce4,736,CallProxy
code-creation,Builtin,2,112432,0x7ff7c0c53fe4,148,CallVarargs
code-creation,Builtin,2,112437,0x7ff7c0c54084,944,CallWithSpread
code-creation,Builtin,2,112443,0x7ff7c0c54444,1956,CallWithSpread_Baseline
code-creation,Builtin,2,112449,0x7ff7c0c54c04,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,112454,0x7ff7c0c553a4,864,CallWithArrayLike
code-creation,Builtin,2,112459,0x7ff7c0c55724,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,112464,0x7ff7c0c55e44,156,CallForwardVarargs
code-creation,Builtin,2,112469,0x7ff7c0c55ee4,156,CallFunctionForwardVarargs
code-creation,Builtin,2,112475,0x7ff7c0c55f84,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,112480,0x7ff7c0c56024,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,112486,0x7ff7c0c56124,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,112492,0x7ff7c0c56264,28,ConstructFunction
code-creation,Builtin,2,112497,0x7ff7c0c56284,104,ConstructBoundFunction
code-creation,Builtin,2,112502,0x7ff7c0c56304,28,ConstructedNonConstructable
code-creation,Builtin,2,112507,0x7ff7c0c56324,100,Construct
code-creation,Builtin,2,112512,0x7ff7c0c563a4,148,ConstructVarargs
code-creation,Builtin,2,112517,0x7ff7c0c56444,968,ConstructWithSpread
code-creation,Builtin,2,112522,0x7ff7c0c56824,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,112528,0x7ff7c0c56f04,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,112533,0x7ff7c0c57604,924,ConstructWithArrayLike
code-creation,Builtin,2,112539,0x7ff7c0c579a4,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,112545,0x7ff7c0c58024,196,ConstructForwardVarargs
code-creation,Builtin,2,112550,0x7ff7c0c58104,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,112555,0x7ff7c0c581e4,804,Construct_Baseline
code-creation,Builtin,2,112560,0x7ff7c0c58524,820,Construct_WithFeedback
code-creation,Builtin,2,112580,0x7ff7c0c58864,476,JSConstructStubGeneric
code-creation,Builtin,2,112585,0x7ff7c0c58a44,376,JSBuiltinsConstructStub
code-creation,Builtin,2,112592,0x7ff7c0c58bc4,676,FastNewObject
code-creation,Builtin,2,112597,0x7ff7c0c58e84,292,FastNewClosure
code-creation,Builtin,2,112603,0x7ff7c0c58fc4,720,ConstructProxy
code-creation,Builtin,2,112608,0x7ff7c0c592a4,360,JSEntry
code-creation,Builtin,2,112613,0x7ff7c0c59424,360,JSConstructEntry
code-creation,Builtin,2,112618,0x7ff7c0c595a4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,112637,0x7ff7c0c59724,96,JSEntryTrampoline
code-creation,Builtin,2,112644,0x7ff7c0c597a4,96,JSConstructEntryTrampoline
code-creation,Builtin,2,112649,0x7ff7c0c59824,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,112654,0x7ff7c0c59944,1116,StringCodePointAt
code-creation,Builtin,2,112659,0x7ff7c0c59da4,1552,StringFromCodePointAt
code-creation,Builtin,2,112665,0x7ff7c0c5a3c4,544,StringEqual
code-creation,Builtin,2,112672,0x7ff7c0c5a604,276,StringGreaterThan
code-creation,Builtin,2,112677,0x7ff7c0c5a724,276,StringGreaterThanOrEqual
code-creation,Builtin,2,112683,0x7ff7c0c5a844,276,StringLessThan
code-creation,Builtin,2,112688,0x7ff7c0c5a964,276,StringLessThanOrEqual
code-creation,Builtin,2,112694,0x7ff7c0c5aa84,2492,StringSubstring
code-creation,Builtin,2,112699,0x7ff7c0c5b444,80,OrderedHashTableHealIndex
code-creation,Builtin,2,112705,0x7ff7c0c5b4a4,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,112711,0x7ff7c0c5b944,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,112717,0x7ff7c0c5b9a4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,112723,0x7ff7c0c5ba04,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,112729,0x7ff7c0c5ba64,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,112735,0x7ff7c0c5bac4,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,112741,0x7ff7c0c5bb24,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,112747,0x7ff7c0c5bb84,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,112753,0x7ff7c0c5bbe4,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,112760,0x7ff7c0c5bcc4,52,InterpreterOnStackReplacement
code-creation,Builtin,2,112766,0x7ff7c0c5bd04,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,112772,0x7ff7c0c5bf64,56,BaselineOnStackReplacement
code-creation,Builtin,2,112778,0x7ff7c0c5bfa4,84,BaselineLeaveFrame
code-creation,Builtin,2,112783,0x7ff7c0c5c004,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,112789,0x7ff7c0c5c0e4,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,112795,0x7ff7c0c5c1e4,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,112801,0x7ff7c0c5c2c4,1004,CompileLazy
code-creation,Builtin,2,112806,0x7ff7c0c5c6c4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,112811,0x7ff7c0c5c724,252,InstantiateAsmJs
code-creation,Builtin,2,112816,0x7ff7c0c5c824,32,NotifyDeoptimized
code-creation,Builtin,2,112821,0x7ff7c0c5c864,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,112827,0x7ff7c0c5cb84,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,112832,0x7ff7c0c5cea4,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,112837,0x7ff7c0c5d1c4,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,112842,0x7ff7c0c5d4e4,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,112847,0x7ff7c0c5d524,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,112852,0x7ff7c0c5d564,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,112858,0x7ff7c0c5d5a4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,112864,0x7ff7c0c5d604,288,CallApiCallback
code-creation,Builtin,2,112869,0x7ff7c0c5d744,268,CallApiGetter
code-creation,Builtin,2,112873,0x7ff7c0c5d864,12,HandleApiCall
code-creation,Builtin,2,112878,0x7ff7c0c5d884,12,HandleApiCallAsFunction
code-creation,Builtin,2,112883,0x7ff7c0c5d8a4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,112888,0x7ff7c0c5d8c4,64,AllocateInYoungGeneration
code-creation,Builtin,2,112895,0x7ff7c0c5d924,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,112900,0x7ff7c0c5d964,64,AllocateInOldGeneration
code-creation,Builtin,2,112906,0x7ff7c0c5d9c4,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,112911,0x7ff7c0c5da04,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,112916,0x7ff7c0c5dbc4,496,GrowFastDoubleElements
code-creation,Builtin,2,112922,0x7ff7c0c5ddc4,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,112927,0x7ff7c0c5df64,388,DebugBreakTrampoline
code-creation,Builtin,2,112932,0x7ff7c0c5e104,180,ToNumber
code-creation,Builtin,2,112937,0x7ff7c0c5e1c4,292,ToNumber_Baseline
code-creation,Builtin,2,112943,0x7ff7c0c5e304,360,ToNumeric_Baseline
code-creation,Builtin,2,112949,0x7ff7c0c5e484,104,PlainPrimitiveToNumber
code-creation,Builtin,2,112954,0x7ff7c0c5e504,212,ToNumberConvertBigInt
code-creation,Builtin,2,112959,0x7ff7c0c5e5e4,132,Typeof
code-creation,Builtin,2,112965,0x7ff7c0c5e684,104,BigIntToI64
code-creation,Builtin,2,112970,0x7ff7c0c5e704,4,BigIntToI32Pair
code-creation,Builtin,2,112975,0x7ff7c0c5e724,232,I64ToBigInt
code-creation,Builtin,2,112980,0x7ff7c0c5e824,4,I32PairToBigInt
code-creation,Builtin,2,112985,0x7ff7c0c5e844,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,112990,0x7ff7c0c5e8c4,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,112996,0x7ff7c0c5f964,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,113001,0x7ff7c0c63764,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,113006,0x7ff7c0c63884,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,113011,0x7ff7c0c638c4,12,LoadIC_StringLength
code-creation,Builtin,2,113017,0x7ff7c0c638e4,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,113022,0x7ff7c0c63904,3056,LoadIC_NoFeedback
code-creation,Builtin,2,113027,0x7ff7c0c64504,32,StoreGlobalIC_Slow
code-creation,Builtin,2,113032,0x7ff7c0c64544,7332,StoreIC_NoFeedback
code-creation,Builtin,2,113037,0x7ff7c0c66204,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,113043,0x7ff7c0c662c4,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,113049,0x7ff7c0c66324,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,113056,0x7ff7c0c66424,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,113062,0x7ff7c0c66524,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,113069,0x7ff7c0c66624,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,113075,0x7ff7c0c66724,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,113081,0x7ff7c0c69f44,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,113087,0x7ff7c0c6c4e4,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,113093,0x7ff7c0c6f924,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,113098,0x7ff7c0c71104,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,113104,0x7ff7c0c73244,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,113110,0x7ff7c0c77e04,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,113115,0x7ff7c0c79f44,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,113121,0x7ff7c0c7ca64,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,113127,0x7ff7c0c7cd84,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,113132,0x7ff7c0c7ce44,72,HasIndexedInterceptorIC
code-creation,Builtin,2,113137,0x7ff7c0c7cea4,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,113142,0x7ff7c0c7cf24,224,DynamicCheckMaps
code-creation,Builtin,2,113149,0x7ff7c0c7d024,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,113154,0x7ff7c0c7d0a4,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,113160,0x7ff7c0c7d164,152,EnqueueMicrotask
code-creation,Builtin,2,113165,0x7ff7c0c7d204,8,RunMicrotasksTrampoline
code-creation,Builtin,2,113171,0x7ff7c0c7d224,3476,RunMicrotasks
code-creation,Builtin,2,113176,0x7ff7c0c7dfc4,2636,HasProperty
code-creation,Builtin,2,113181,0x7ff7c0c7ea24,1156,DeleteProperty
code-creation,Builtin,2,113186,0x7ff7c0c7eec4,1972,CopyDataProperties
code-creation,Builtin,2,113191,0x7ff7c0c7f684,9184,SetDataProperties
code-creation,Builtin,2,113196,0x7ff7c0c81a84,28,Abort
code-creation,Builtin,2,113201,0x7ff7c0c81aa4,28,AbortCSAAssert
code-creation,Builtin,2,113206,0x7ff7c0c81ac4,12,EmptyFunction
code-creation,Builtin,2,113211,0x7ff7c0c81ae4,12,Illegal
code-creation,Builtin,2,113216,0x7ff7c0c81b04,12,StrictPoisonPillThrower
code-creation,Builtin,2,113221,0x7ff7c0c81b24,12,UnsupportedThrower
code-creation,Builtin,2,113226,0x7ff7c0c81b44,64,ReturnReceiver
code-creation,Builtin,2,113232,0x7ff7c0c81ba4,28,ArrayConstructor
code-creation,Builtin,2,113253,0x7ff7c0c81bc4,404,ArrayConstructorImpl
code-creation,Builtin,2,113260,0x7ff7c0c81d64,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,113266,0x7ff7c0c81e44,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,113272,0x7ff7c0c81f24,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,113278,0x7ff7c0c81fe4,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,113284,0x7ff7c0c820a4,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,113291,0x7ff7c0c82164,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,113298,0x7ff7c0c82224,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,113305,0x7ff7c0c822e4,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,113312,0x7ff7c0c823a4,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,113317,0x7ff7c0c825c4,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,113323,0x7ff7c0c827c4,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,113330,0x7ff7c0c82984,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,113336,0x7ff7c0c82b24,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,113342,0x7ff7c0c82ce4,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,113348,0x7ff7c0c82e84,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,113354,0x7ff7c0c83064,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,113360,0x7ff7c0c83204,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,113366,0x7ff7c0c83264,12,ArrayConcat
code-creation,Builtin,2,113370,0x7ff7c0c83284,12,ArrayPrototypeFill
code-creation,Builtin,2,113376,0x7ff7c0c832a4,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,113381,0x7ff7c0c83664,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,113386,0x7ff7c0c83704,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,113393,0x7ff7c0c837e4,548,ArrayIncludes
code-creation,Builtin,2,113398,0x7ff7c0c83a24,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,113404,0x7ff7c0c83d84,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,113410,0x7ff7c0c83e04,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,113416,0x7ff7c0c83e84,552,ArrayIndexOf
code-creation,Builtin,2,113421,0x7ff7c0c840c4,12,ArrayPop
code-creation,Builtin,2,113427,0x7ff7c0c840e4,616,ArrayPrototypePop
code-creation,Builtin,2,113433,0x7ff7c0c84364,12,ArrayPush
code-creation,Builtin,2,113438,0x7ff7c0c84384,2424,ArrayPrototypePush
code-creation,Builtin,2,113443,0x7ff7c0c84d04,12,ArrayShift
code-creation,Builtin,2,113448,0x7ff7c0c84d24,12,ArrayUnshift
code-creation,Builtin,2,113453,0x7ff7c0c84d44,956,CloneFastJSArray
code-creation,Builtin,2,113458,0x7ff7c0c85104,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,113464,0x7ff7c0c859a4,976,ExtractFastJSArray
code-creation,Builtin,2,113469,0x7ff7c0c85d84,260,ArrayPrototypeEntries
code-creation,Builtin,2,113474,0x7ff7c0c85ea4,248,ArrayPrototypeKeys
code-creation,Builtin,2,113479,0x7ff7c0c85fa4,260,ArrayPrototypeValues
code-creation,Builtin,2,113485,0x7ff7c0c860c4,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,113490,0x7ff7c0c87224,4168,FlattenIntoArray
code-creation,Builtin,2,113495,0x7ff7c0c88284,4172,FlatMapIntoArray
code-creation,Builtin,2,113500,0x7ff7c0c892e4,372,ArrayPrototypeFlat
code-creation,Builtin,2,113505,0x7ff7c0c89464,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,113510,0x7ff7c0c89624,12,ArrayBufferConstructor
code-creation,Builtin,2,113515,0x7ff7c0c89644,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,113521,0x7ff7c0c89664,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,113526,0x7ff7c0c89684,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,113533,0x7ff7c0c896a4,804,AsyncFunctionEnter
code-creation,Builtin,2,113539,0x7ff7c0c899e4,132,AsyncFunctionReject
code-creation,Builtin,2,113544,0x7ff7c0c89a84,128,AsyncFunctionResolve
code-creation,Builtin,2,113549,0x7ff7c0c89b24,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,113555,0x7ff7c0c89b44,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,113561,0x7ff7c0c8a644,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,113566,0x7ff7c0c8b144,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,113572,0x7ff7c0c8b204,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,113577,0x7ff7c0c8b2c4,12,BigIntConstructor
code-creation,Builtin,2,113582,0x7ff7c0c8b2e4,12,BigIntAsUintN
code-creation,Builtin,2,113587,0x7ff7c0c8b304,12,BigIntAsIntN
code-creation,Builtin,2,113592,0x7ff7c0c8b324,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,113597,0x7ff7c0c8b344,12,BigIntPrototypeToString
code-creation,Builtin,2,113603,0x7ff7c0c8b364,12,BigIntPrototypeValueOf
code-creation,Builtin,2,113608,0x7ff7c0c8b384,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,113613,0x7ff7c0c8b3a4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,113619,0x7ff7c0c8b3c4,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,113624,0x7ff7c0c8b3e4,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,113630,0x7ff7c0c8b404,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,113636,0x7ff7c0c8b424,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,113642,0x7ff7c0c8b444,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,113648,0x7ff7c0c8b464,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,113653,0x7ff7c0c8b484,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,113658,0x7ff7c0c8b4a4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,113664,0x7ff7c0c8b4c4,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,113669,0x7ff7c0c8b4e4,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,113675,0x7ff7c0c8b504,12,CallSitePrototypeGetThis
code-creation,Builtin,2,113681,0x7ff7c0c8b524,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,113686,0x7ff7c0c8b544,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,113692,0x7ff7c0c8b564,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,113698,0x7ff7c0c8b584,12,CallSitePrototypeIsEval
code-creation,Builtin,2,113703,0x7ff7c0c8b5a4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,113709,0x7ff7c0c8b5c4,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,113714,0x7ff7c0c8b5e4,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,113721,0x7ff7c0c8b604,12,CallSitePrototypeToString
code-creation,Builtin,2,113726,0x7ff7c0c8b624,12,ConsoleDebug
code-creation,Builtin,2,113731,0x7ff7c0c8b644,12,ConsoleError
code-creation,Builtin,2,113736,0x7ff7c0c8b664,12,ConsoleInfo
code-creation,Builtin,2,113741,0x7ff7c0c8b684,12,ConsoleLog
code-creation,Builtin,2,113746,0x7ff7c0c8b6a4,12,ConsoleWarn
code-creation,Builtin,2,113751,0x7ff7c0c8b6c4,12,ConsoleDir
code-creation,Builtin,2,113756,0x7ff7c0c8b6e4,12,ConsoleDirXml
code-creation,Builtin,2,113761,0x7ff7c0c8b704,12,ConsoleTable
code-creation,Builtin,2,113766,0x7ff7c0c8b724,12,ConsoleTrace
code-creation,Builtin,2,113771,0x7ff7c0c8b744,12,ConsoleGroup
code-creation,Builtin,2,113776,0x7ff7c0c8b764,12,ConsoleGroupCollapsed
code-creation,Builtin,2,113781,0x7ff7c0c8b784,12,ConsoleGroupEnd
code-creation,Builtin,2,113787,0x7ff7c0c8b7a4,12,ConsoleClear
code-creation,Builtin,2,113791,0x7ff7c0c8b7c4,12,ConsoleCount
code-creation,Builtin,2,113796,0x7ff7c0c8b7e4,12,ConsoleCountReset
code-creation,Builtin,2,113801,0x7ff7c0c8b804,12,ConsoleAssert
code-creation,Builtin,2,113806,0x7ff7c0c8b824,12,ConsoleProfile
code-creation,Builtin,2,113812,0x7ff7c0c8b844,12,ConsoleProfileEnd
code-creation,Builtin,2,113818,0x7ff7c0c8b864,12,ConsoleTime
code-creation,Builtin,2,113823,0x7ff7c0c8b884,12,ConsoleTimeLog
code-creation,Builtin,2,113829,0x7ff7c0c8b8a4,12,ConsoleTimeEnd
code-creation,Builtin,2,113834,0x7ff7c0c8b8c4,12,ConsoleTimeStamp
code-creation,Builtin,2,113840,0x7ff7c0c8b8e4,12,ConsoleContext
code-creation,Builtin,2,113845,0x7ff7c0c8b904,12,DataViewConstructor
code-creation,Builtin,2,113851,0x7ff7c0c8b924,12,DateConstructor
code-creation,Builtin,2,113856,0x7ff7c0c8b944,216,DatePrototypeGetDate
code-creation,Builtin,2,113861,0x7ff7c0c8ba24,216,DatePrototypeGetDay
code-creation,Builtin,2,113866,0x7ff7c0c8bb04,216,DatePrototypeGetFullYear
code-creation,Builtin,2,113871,0x7ff7c0c8bbe4,216,DatePrototypeGetHours
code-creation,Builtin,2,113878,0x7ff7c0c8bcc4,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,113883,0x7ff7c0c8bda4,216,DatePrototypeGetMinutes
code-creation,Builtin,2,113890,0x7ff7c0c8be84,216,DatePrototypeGetMonth
code-creation,Builtin,2,113896,0x7ff7c0c8bf64,216,DatePrototypeGetSeconds
code-creation,Builtin,2,113901,0x7ff7c0c8c044,124,DatePrototypeGetTime
code-creation,Builtin,2,113906,0x7ff7c0c8c0c4,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,113911,0x7ff7c0c8c1a4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,113916,0x7ff7c0c8c284,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,113922,0x7ff7c0c8c364,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,113928,0x7ff7c0c8c444,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,113933,0x7ff7c0c8c524,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,113938,0x7ff7c0c8c604,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,113944,0x7ff7c0c8c6e4,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,113949,0x7ff7c0c8c7c4,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,113955,0x7ff7c0c8c8a4,124,DatePrototypeValueOf
code-creation,Builtin,2,113960,0x7ff7c0c8c924,352,DatePrototypeToPrimitive
code-creation,Builtin,2,113965,0x7ff7c0c8caa4,12,DatePrototypeGetYear
code-creation,Builtin,2,113971,0x7ff7c0c8cac4,12,DatePrototypeSetYear
code-creation,Builtin,2,113976,0x7ff7c0c8cae4,12,DateNow
code-creation,Builtin,2,113981,0x7ff7c0c8cb04,12,DateParse
code-creation,Builtin,2,113985,0x7ff7c0c8cb24,12,DatePrototypeSetDate
code-creation,Builtin,2,113991,0x7ff7c0c8cb44,12,DatePrototypeSetFullYear
code-creation,Builtin,2,113996,0x7ff7c0c8cb64,12,DatePrototypeSetHours
code-creation,Builtin,2,114001,0x7ff7c0c8cb84,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,114006,0x7ff7c0c8cba4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,114012,0x7ff7c0c8cbc4,12,DatePrototypeSetMonth
code-creation,Builtin,2,114017,0x7ff7c0c8cbe4,12,DatePrototypeSetSeconds
code-creation,Builtin,2,114022,0x7ff7c0c8cc04,12,DatePrototypeSetTime
code-creation,Builtin,2,114027,0x7ff7c0c8cc24,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,114032,0x7ff7c0c8cc44,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,114038,0x7ff7c0c8cc64,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,114043,0x7ff7c0c8cc84,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,114048,0x7ff7c0c8cca4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,114054,0x7ff7c0c8ccc4,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,114059,0x7ff7c0c8cce4,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,114064,0x7ff7c0c8cd04,12,DatePrototypeToDateString
code-creation,Builtin,2,114069,0x7ff7c0c8cd24,12,DatePrototypeToISOString
code-creation,Builtin,2,114074,0x7ff7c0c8cd44,12,DatePrototypeToUTCString
code-creation,Builtin,2,114080,0x7ff7c0c8cd64,12,DatePrototypeToString
code-creation,Builtin,2,114085,0x7ff7c0c8cd84,12,DatePrototypeToTimeString
code-creation,Builtin,2,114090,0x7ff7c0c8cda4,12,DatePrototypeToJson
code-creation,Builtin,2,114095,0x7ff7c0c8cdc4,12,DateUTC
code-creation,Builtin,2,114100,0x7ff7c0c8cde4,12,ErrorConstructor
code-creation,Builtin,2,114106,0x7ff7c0c8ce04,12,ErrorCaptureStackTrace
code-creation,Builtin,2,114111,0x7ff7c0c8ce24,12,ErrorPrototypeToString
code-creation,Builtin,2,114116,0x7ff7c0c8ce44,12,FunctionConstructor
code-creation,Builtin,2,114122,0x7ff7c0c8ce64,68,FunctionPrototypeApply
code-creation,Builtin,2,114127,0x7ff7c0c8cec4,12,FunctionPrototypeBind
code-creation,Builtin,2,114132,0x7ff7c0c8cee4,32,FunctionPrototypeCall
code-creation,Builtin,2,114137,0x7ff7c0c8cf24,12,FunctionPrototypeToString
code-creation,Builtin,2,114143,0x7ff7c0c8cf44,192,CreateIterResultObject
code-creation,Builtin,2,114149,0x7ff7c0c8d024,788,CreateGeneratorObject
code-creation,Builtin,2,114154,0x7ff7c0c8d344,12,GeneratorFunctionConstructor
code-creation,Builtin,2,114160,0x7ff7c0c8d364,412,GeneratorPrototypeNext
code-creation,Builtin,2,114165,0x7ff7c0c8d504,420,GeneratorPrototypeReturn
code-creation,Builtin,2,114170,0x7ff7c0c8d6c4,424,GeneratorPrototypeThrow
code-creation,Builtin,2,114176,0x7ff7c0c8d884,12,AsyncFunctionConstructor
code-creation,Builtin,2,114181,0x7ff7c0c8d8a4,372,SuspendGeneratorBaseline
code-creation,Builtin,2,114186,0x7ff7c0c8da24,88,ResumeGeneratorBaseline
code-creation,Builtin,2,114192,0x7ff7c0c8da84,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,114197,0x7ff7c0c8dac4,12,GlobalDecodeURI
code-creation,Builtin,2,114202,0x7ff7c0c8dae4,12,GlobalDecodeURIComponent
code-creation,Builtin,2,114207,0x7ff7c0c8db04,12,GlobalEncodeURI
code-creation,Builtin,2,114213,0x7ff7c0c8db24,12,GlobalEncodeURIComponent
code-creation,Builtin,2,114218,0x7ff7c0c8db44,12,GlobalEscape
code-creation,Builtin,2,114223,0x7ff7c0c8db64,12,GlobalUnescape
code-creation,Builtin,2,114229,0x7ff7c0c8db84,12,GlobalEval
code-creation,Builtin,2,114234,0x7ff7c0c8dba4,132,GlobalIsFinite
code-creation,Builtin,2,114239,0x7ff7c0c8dc44,124,GlobalIsNaN
code-creation,Builtin,2,114246,0x7ff7c0c8dcc4,12,JsonParse
code-creation,Builtin,2,114251,0x7ff7c0c8dce4,12,JsonStringify
code-creation,Builtin,2,114256,0x7ff7c0c8dd04,4608,LoadIC
code-creation,Builtin,2,114262,0x7ff7c0c8ef24,4296,LoadIC_Megamorphic
code-creation,Builtin,2,114267,0x7ff7c0c90004,4520,LoadIC_Noninlined
code-creation,Builtin,2,114272,0x7ff7c0c911c4,44,LoadICTrampoline
code-creation,Builtin,2,114277,0x7ff7c0c91204,24,LoadICBaseline
code-creation,Builtin,2,114282,0x7ff7c0c91224,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,114288,0x7ff7c0c91264,7376,LoadSuperIC
code-creation,Builtin,2,114293,0x7ff7c0c92f44,24,LoadSuperICBaseline
code-creation,Builtin,2,114299,0x7ff7c0c92f64,8148,KeyedLoadIC
code-creation,Builtin,2,114304,0x7ff7c0c94f44,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,114310,0x7ff7c0c98284,44,KeyedLoadICTrampoline
code-creation,Builtin,2,114316,0x7ff7c0c982c4,24,KeyedLoadICBaseline
code-creation,Builtin,2,114322,0x7ff7c0c982e4,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,114327,0x7ff7c0c98324,5104,StoreGlobalIC
code-creation,Builtin,2,114333,0x7ff7c0c99724,44,StoreGlobalICTrampoline
code-creation,Builtin,2,114338,0x7ff7c0c99764,24,StoreGlobalICBaseline
code-creation,Builtin,2,114344,0x7ff7c0c99784,5340,StoreIC
code-creation,Builtin,2,114349,0x7ff7c0c9ac64,44,StoreICTrampoline
code-creation,Builtin,2,114355,0x7ff7c0c9aca4,24,StoreICBaseline
code-creation,Builtin,2,114360,0x7ff7c0c9acc4,5780,KeyedStoreIC
code-creation,Builtin,2,114366,0x7ff7c0c9c364,44,KeyedStoreICTrampoline
code-creation,Builtin,2,114373,0x7ff7c0c9c3a4,24,KeyedStoreICBaseline
code-creation,Builtin,2,114378,0x7ff7c0c9c3c4,404,StoreInArrayLiteralIC
code-creation,Builtin,2,114384,0x7ff7c0c9c564,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,114390,0x7ff7c0c9c584,140,LookupContextBaseline
code-creation,Builtin,2,114395,0x7ff7c0c9c624,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,114401,0x7ff7c0c9c6c4,3244,LoadGlobalIC
code-creation,Builtin,2,114406,0x7ff7c0c9d384,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,114411,0x7ff7c0c9e024,44,LoadGlobalICTrampoline
code-creation,Builtin,2,114416,0x7ff7c0c9e064,24,LoadGlobalICBaseline
code-creation,Builtin,2,114421,0x7ff7c0c9e084,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,114427,0x7ff7c0c9e0c4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,114432,0x7ff7c0c9e0e4,140,LookupGlobalICBaseline
code-creation,Builtin,2,114438,0x7ff7c0c9e184,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,114444,0x7ff7c0c9e224,2064,CloneObjectIC
code-creation,Builtin,2,114449,0x7ff7c0c9ea44,24,CloneObjectICBaseline
code-creation,Builtin,2,114454,0x7ff7c0c9ea64,1988,CloneObjectIC_Slow
code-creation,Builtin,2,114481,0x7ff7c0c9f244,2756,KeyedHasIC
code-creation,Builtin,2,114489,0x7ff7c0c9fd24,24,KeyedHasICBaseline
code-creation,Builtin,2,114495,0x7ff7c0c9fd44,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,114501,0x7ff7c0ca07a4,1436,IterableToList
code-creation,Builtin,2,114507,0x7ff7c0ca0d44,1240,IterableToFixedArray
code-creation,Builtin,2,114513,0x7ff7c0ca1224,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,114518,0x7ff7c0ca1524,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,114524,0x7ff7c0ca1564,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,114530,0x7ff7c0ca15e4,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,114536,0x7ff7c0ca19c4,1616,StringListFromIterable
code-creation,Builtin,2,114541,0x7ff7c0ca2024,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,114547,0x7ff7c0ca2504,4156,MapConstructor
code-creation,Builtin,2,114552,0x7ff7c0ca3544,1996,MapPrototypeSet
code-creation,Builtin,2,114557,0x7ff7c0ca3d24,1524,MapPrototypeDelete
code-creation,Builtin,2,114611,0x7ff7c0ca4324,204,MapPrototypeGet
code-creation,Builtin,2,114624,0x7ff7c0ca4404,164,MapPrototypeHas
code-creation,Builtin,2,114630,0x7ff7c0ca44c4,12,MapPrototypeClear
code-creation,Builtin,2,114636,0x7ff7c0ca44e4,284,MapPrototypeEntries
code-creation,Builtin,2,114641,0x7ff7c0ca4604,144,MapPrototypeGetSize
code-creation,Builtin,2,114646,0x7ff7c0ca46a4,492,MapPrototypeForEach
code-creation,Builtin,2,114651,0x7ff7c0ca48a4,284,MapPrototypeKeys
code-creation,Builtin,2,114656,0x7ff7c0ca49c4,284,MapPrototypeValues
code-creation,Builtin,2,114661,0x7ff7c0ca4ae4,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,114666,0x7ff7c0ca4f04,1168,MapIteratorToList
code-creation,Builtin,2,114672,0x7ff7c0ca53a4,12,NumberPrototypeToExponential
code-creation,Builtin,2,114677,0x7ff7c0ca53c4,12,NumberPrototypeToFixed
code-creation,Builtin,2,114682,0x7ff7c0ca53e4,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,114688,0x7ff7c0ca5404,12,NumberPrototypeToPrecision
code-creation,Builtin,2,114694,0x7ff7c0ca5424,328,SameValue
code-creation,Builtin,2,114699,0x7ff7c0ca5584,204,SameValueNumbersOnly
code-creation,Builtin,2,114704,0x7ff7c0ca5664,792,Add_Baseline
code-creation,Builtin,2,114709,0x7ff7c0ca5984,828,Subtract_Baseline
code-creation,Builtin,2,114714,0x7ff7c0ca5cc4,808,Multiply_Baseline
code-creation,Builtin,2,114719,0x7ff7c0ca6004,832,Divide_Baseline
code-creation,Builtin,2,114725,0x7ff7c0ca6364,764,Modulus_Baseline
code-creation,Builtin,2,114730,0x7ff7c0ca6664,808,Exponentiate_Baseline
code-creation,Builtin,2,114736,0x7ff7c0ca69a4,708,BitwiseAnd_Baseline
code-creation,Builtin,2,114742,0x7ff7c0ca6c84,700,BitwiseOr_Baseline
code-creation,Builtin,2,114748,0x7ff7c0ca6f44,708,BitwiseXor_Baseline
code-creation,Builtin,2,114754,0x7ff7c0ca7224,720,ShiftLeft_Baseline
code-creation,Builtin,2,114760,0x7ff7c0ca7504,720,ShiftRight_Baseline
code-creation,Builtin,2,114765,0x7ff7c0ca77e4,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,114771,0x7ff7c0ca7b44,720,Add_WithFeedback
code-creation,Builtin,2,114776,0x7ff7c0ca7e24,780,Subtract_WithFeedback
code-creation,Builtin,2,114781,0x7ff7c0ca8144,776,Multiply_WithFeedback
code-creation,Builtin,2,114786,0x7ff7c0ca8464,804,Divide_WithFeedback
code-creation,Builtin,2,114791,0x7ff7c0ca87a4,724,Modulus_WithFeedback
code-creation,Builtin,2,114796,0x7ff7c0ca8a84,764,Exponentiate_WithFeedback
code-creation,Builtin,2,114801,0x7ff7c0ca8d84,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,114807,0x7ff7c0ca9044,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,114812,0x7ff7c0ca9304,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,114818,0x7ff7c0ca95c4,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,114823,0x7ff7c0ca9884,692,ShiftRight_WithFeedback
code-creation,Builtin,2,114828,0x7ff7c0ca9b44,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,114833,0x7ff7c0ca9e84,1696,Equal_Baseline
code-creation,Builtin,2,114838,0x7ff7c0caa544,908,StrictEqual_Baseline
code-creation,Builtin,2,114844,0x7ff7c0caa8e4,1264,LessThan_Baseline
code-creation,Builtin,2,114852,0x7ff7c0caade4,1264,GreaterThan_Baseline
code-creation,Builtin,2,114858,0x7ff7c0cab2e4,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,114864,0x7ff7c0cab7e4,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,114869,0x7ff7c0cabce4,1620,Equal_WithFeedback
code-creation,Builtin,2,114874,0x7ff7c0cac344,940,StrictEqual_WithFeedback
code-creation,Builtin,2,114879,0x7ff7c0cac704,1240,LessThan_WithFeedback
code-creation,Builtin,2,114885,0x7ff7c0cacbe4,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,114891,0x7ff7c0cad0c4,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,114897,0x7ff7c0cad5a4,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,114903,0x7ff7c0cada84,332,BitwiseNot_Baseline
code-creation,Builtin,2,114908,0x7ff7c0cadbe4,460,Decrement_Baseline
code-creation,Builtin,2,114913,0x7ff7c0caddc4,464,Increment_Baseline
code-creation,Builtin,2,114918,0x7ff7c0cadfa4,488,Negate_Baseline
code-creation,Builtin,2,114923,0x7ff7c0cae1a4,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,114928,0x7ff7c0cae2e4,440,Decrement_WithFeedback
code-creation,Builtin,2,114933,0x7ff7c0cae4a4,444,Increment_WithFeedback
code-creation,Builtin,2,114938,0x7ff7c0cae664,472,Negate_WithFeedback
code-creation,Builtin,2,114943,0x7ff7c0cae844,252,ObjectAssign
code-creation,Builtin,2,114949,0x7ff7c0cae944,864,ObjectCreate
code-creation,Builtin,2,114954,0x7ff7c0caecc4,12,ObjectDefineGetter
code-creation,Builtin,2,114959,0x7ff7c0caece4,12,ObjectDefineProperties
code-creation,Builtin,2,114964,0x7ff7c0caed04,12,ObjectDefineProperty
code-creation,Builtin,2,114969,0x7ff7c0caed24,12,ObjectDefineSetter
code-creation,Builtin,2,114974,0x7ff7c0caed44,1516,ObjectEntries
code-creation,Builtin,2,114979,0x7ff7c0caf344,12,ObjectFreeze
code-creation,Builtin,2,114985,0x7ff7c0caf364,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,114990,0x7ff7c0cb0964,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,114995,0x7ff7c0cb0984,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,115001,0x7ff7c0cb0be4,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,115006,0x7ff7c0cb0c04,164,ObjectHasOwn
code-creation,Builtin,2,115011,0x7ff7c0cb0cc4,388,ObjectIs
code-creation,Builtin,2,115015,0x7ff7c0cb0e64,12,ObjectIsFrozen
code-creation,Builtin,2,115020,0x7ff7c0cb0e84,12,ObjectIsSealed
code-creation,Builtin,2,115025,0x7ff7c0cb0ea4,536,ObjectKeys
code-creation,Builtin,2,115030,0x7ff7c0cb10c4,12,ObjectLookupGetter
code-creation,Builtin,2,115035,0x7ff7c0cb10e4,12,ObjectLookupSetter
code-creation,Builtin,2,115041,0x7ff7c0cb1104,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,115046,0x7ff7c0cb1a04,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,115051,0x7ff7c0cb1ae4,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,115056,0x7ff7c0cb1b04,12,ObjectPrototypeGetProto
code-creation,Builtin,2,115062,0x7ff7c0cb1b24,12,ObjectPrototypeSetProto
code-creation,Builtin,2,115067,0x7ff7c0cb1b44,12,ObjectSeal
code-creation,Builtin,2,115072,0x7ff7c0cb1b64,1108,ObjectToString
code-creation,Builtin,2,115077,0x7ff7c0cb1fc4,1284,ObjectValues
code-creation,Builtin,2,115082,0x7ff7c0cb24e4,280,OrdinaryHasInstance
code-creation,Builtin,2,115087,0x7ff7c0cb2604,344,InstanceOf
code-creation,Builtin,2,115092,0x7ff7c0cb2764,632,InstanceOf_WithFeedback
code-creation,Builtin,2,115097,0x7ff7c0cb29e4,648,InstanceOf_Baseline
code-creation,Builtin,2,115102,0x7ff7c0cb2c84,268,ForInEnumerate
code-creation,Builtin,2,115107,0x7ff7c0cb2da4,148,ForInPrepare
tick,0x7ffdf67ba8cf,115113,0,0x0,6
tick,0x7ffdf681c7f4,115127,0,0x0,6
code-creation,Builtin,2,115135,0x7ff7c0cb2e44,2584,ForInFilter
code-creation,Builtin,2,115147,0x7ff7c0cb3864,52,ReflectApply
code-creation,Builtin,2,115152,0x7ff7c0cb38a4,60,ReflectConstruct
code-creation,Builtin,2,115158,0x7ff7c0cb38e4,12,ReflectDefineProperty
code-creation,Builtin,2,115163,0x7ff7c0cb3904,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,115168,0x7ff7c0cb3924,12,ReflectOwnKeys
code-creation,Builtin,2,115173,0x7ff7c0cb3944,12,ReflectSet
code-creation,Builtin,2,115178,0x7ff7c0cb3964,12,RegExpCapture1Getter
code-creation,Builtin,2,115184,0x7ff7c0cb3984,12,RegExpCapture2Getter
code-creation,Builtin,2,115190,0x7ff7c0cb39a4,12,RegExpCapture3Getter
code-creation,Builtin,2,115197,0x7ff7c0cb39c4,12,RegExpCapture4Getter
code-creation,Builtin,2,115202,0x7ff7c0cb39e4,12,RegExpCapture5Getter
code-creation,Builtin,2,115207,0x7ff7c0cb3a04,12,RegExpCapture6Getter
code-creation,Builtin,2,115212,0x7ff7c0cb3a24,12,RegExpCapture7Getter
code-creation,Builtin,2,115218,0x7ff7c0cb3a44,12,RegExpCapture8Getter
code-creation,Builtin,2,115223,0x7ff7c0cb3a64,12,RegExpCapture9Getter
code-creation,Builtin,2,115228,0x7ff7c0cb3a84,2212,RegExpConstructor
code-creation,Builtin,2,115233,0x7ff7c0cb4344,12,RegExpInputGetter
code-creation,Builtin,2,115238,0x7ff7c0cb4364,12,RegExpInputSetter
code-creation,Builtin,2,115243,0x7ff7c0cb4384,12,RegExpLastMatchGetter
code-creation,Builtin,2,115248,0x7ff7c0cb43a4,12,RegExpLastParenGetter
code-creation,Builtin,2,115253,0x7ff7c0cb43c4,12,RegExpLeftContextGetter
code-creation,Builtin,2,115258,0x7ff7c0cb43e4,908,RegExpPrototypeCompile
code-creation,Builtin,2,115264,0x7ff7c0cb4784,12,RegExpPrototypeToString
code-creation,Builtin,2,115269,0x7ff7c0cb47a4,12,RegExpRightContextGetter
code-creation,Builtin,2,115274,0x7ff7c0cb47c4,252,RegExpExecAtom
code-creation,Builtin,2,115279,0x7ff7c0cb48c4,1040,RegExpExecInternal
code-creation,Builtin,2,115284,0x7ff7c0cb4ce4,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,115290,0x7ff7c0cb4d04,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,115295,0x7ff7c0cb4d24,2684,SetConstructor
code-creation,Builtin,2,115300,0x7ff7c0cb57a4,1284,SetPrototypeHas
code-creation,Builtin,2,115305,0x7ff7c0cb5cc4,1736,SetPrototypeAdd
code-creation,Builtin,2,115311,0x7ff7c0cb63a4,1476,SetPrototypeDelete
code-creation,Builtin,2,115316,0x7ff7c0cb6984,12,SetPrototypeClear
code-creation,Builtin,2,115321,0x7ff7c0cb69a4,284,SetPrototypeEntries
code-creation,Builtin,2,115326,0x7ff7c0cb6ac4,144,SetPrototypeGetSize
code-creation,Builtin,2,115331,0x7ff7c0cb6b64,444,SetPrototypeForEach
code-creation,Builtin,2,115336,0x7ff7c0cb6d24,284,SetPrototypeValues
code-creation,Builtin,2,115341,0x7ff7c0cb6e44,988,SetIteratorPrototypeNext
code-creation,Builtin,2,115347,0x7ff7c0cb7224,1112,SetOrSetIteratorToList
code-creation,Builtin,2,115352,0x7ff7c0cb7684,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,115357,0x7ff7c0cb76a4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,115363,0x7ff7c0cb76c4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,115368,0x7ff7c0cb76e4,1280,AtomicsLoad
code-creation,Builtin,2,115373,0x7ff7c0cb7c04,1008,AtomicsStore
code-creation,Builtin,2,115378,0x7ff7c0cb8004,1704,AtomicsExchange
code-creation,Builtin,2,115383,0x7ff7c0cb86c4,2092,AtomicsCompareExchange
code-creation,Builtin,2,115388,0x7ff7c0cb8f04,1804,AtomicsAdd
code-creation,Builtin,2,115393,0x7ff7c0cb9624,1804,AtomicsSub
code-creation,Builtin,2,115398,0x7ff7c0cb9d44,1804,AtomicsAnd
code-creation,Builtin,2,115403,0x7ff7c0cba464,1804,AtomicsOr
code-creation,Builtin,2,115408,0x7ff7c0cbab84,1804,AtomicsXor
code-creation,Builtin,2,115413,0x7ff7c0cbb2a4,12,AtomicsNotify
code-creation,Builtin,2,115418,0x7ff7c0cbb2c4,12,AtomicsIsLockFree
code-creation,Builtin,2,115423,0x7ff7c0cbb2e4,12,AtomicsWait
code-creation,Builtin,2,115428,0x7ff7c0cbb304,12,AtomicsWaitAsync
code-creation,Builtin,2,115433,0x7ff7c0cbb324,12,StringFromCodePoint
code-creation,Builtin,2,115438,0x7ff7c0cbb344,1428,StringFromCharCode
code-creation,Builtin,2,115443,0x7ff7c0cbb8e4,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,115448,0x7ff7c0cbb904,4360,StringPrototypeMatchAll
code-creation,Builtin,2,115453,0x7ff7c0cbca24,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,115459,0x7ff7c0cbca44,1228,StringPrototypeReplace
code-creation,Builtin,2,115464,0x7ff7c0cbcf24,2900,StringPrototypeSplit
code-creation,Builtin,2,115470,0x7ff7c0cbda84,12,StringRaw
code-creation,Builtin,2,115475,0x7ff7c0cbdaa4,12,SymbolConstructor
code-creation,Builtin,2,115480,0x7ff7c0cbdac4,12,SymbolFor
code-creation,Builtin,2,115485,0x7ff7c0cbdae4,12,SymbolKeyFor
code-creation,Builtin,2,115491,0x7ff7c0cbdb04,88,TypedArrayBaseConstructor
code-creation,Builtin,2,115496,0x7ff7c0cbdb64,256,TypedArrayConstructor
code-creation,Builtin,2,115501,0x7ff7c0cbdc84,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,115507,0x7ff7c0cbdca4,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,115512,0x7ff7c0cbe024,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,115518,0x7ff7c0cbe1a4,584,TypedArrayPrototypeLength
code-creation,Builtin,2,115523,0x7ff7c0cbe404,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,115529,0x7ff7c0cbe424,12,TypedArrayPrototypeFill
code-creation,Builtin,2,115534,0x7ff7c0cbe444,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,115540,0x7ff7c0cbe464,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,115545,0x7ff7c0cbe484,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,115550,0x7ff7c0cbe4a4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,115556,0x7ff7c0cbe4c4,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,115561,0x7ff7c0cbe604,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,115566,0x7ff7c0cc0fc4,792,GenericJSToWasmWrapper
code-creation,Builtin,2,115571,0x7ff7c0cc12e4,148,WasmCompileLazy
code-creation,Builtin,2,115576,0x7ff7c0cc1384,168,WasmDebugBreak
code-creation,Builtin,2,115581,0x7ff7c0cc1444,16,WasmOnStackReplace
code-creation,Builtin,2,115586,0x7ff7c0cc1464,140,WasmFloat32ToNumber
code-creation,Builtin,2,115592,0x7ff7c0cc1504,152,WasmFloat64ToNumber
code-creation,Builtin,2,115597,0x7ff7c0cc15a4,4,WasmI32AtomicWait32
code-creation,Builtin,2,115602,0x7ff7c0cc15c4,4,WasmI64AtomicWait32
code-creation,Builtin,2,115607,0x7ff7c0cc15e4,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,115612,0x7ff7c0cc1604,4320,WeakMapConstructor
code-creation,Builtin,2,115617,0x7ff7c0cc2704,196,WeakMapLookupHashIndex
code-creation,Builtin,2,115622,0x7ff7c0cc27e4,220,WeakMapGet
code-creation,Builtin,2,115627,0x7ff7c0cc28c4,176,WeakMapPrototypeHas
code-creation,Builtin,2,115633,0x7ff7c0cc2984,204,WeakMapPrototypeSet
code-creation,Builtin,2,115638,0x7ff7c0cc2a64,144,WeakMapPrototypeDelete
code-creation,Builtin,2,115643,0x7ff7c0cc2b04,2876,WeakSetConstructor
code-creation,Builtin,2,115648,0x7ff7c0cc3644,176,WeakSetPrototypeHas
code-creation,Builtin,2,115653,0x7ff7c0cc3704,204,WeakSetPrototypeAdd
code-creation,Builtin,2,115658,0x7ff7c0cc37e4,144,WeakSetPrototypeDelete
code-creation,Builtin,2,115663,0x7ff7c0cc3884,372,WeakCollectionDelete
code-creation,Builtin,2,115669,0x7ff7c0cc3a04,764,WeakCollectionSet
code-creation,Builtin,2,115674,0x7ff7c0cc3d04,296,AsyncGeneratorResolve
code-creation,Builtin,2,115679,0x7ff7c0cc3e44,100,AsyncGeneratorReject
code-creation,Builtin,2,115684,0x7ff7c0cc3ec4,2760,AsyncGeneratorYield
code-creation,Builtin,2,115689,0x7ff7c0cc49a4,2872,AsyncGeneratorReturn
code-creation,Builtin,2,115694,0x7ff7c0cc54e4,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,115699,0x7ff7c0cc5624,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,115705,0x7ff7c0cc5644,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,115710,0x7ff7c0cc5a44,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,115716,0x7ff7c0cc5e64,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,115721,0x7ff7c0cc6284,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,115726,0x7ff7c0cc6d44,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,115732,0x7ff7c0cc7804,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,115737,0x7ff7c0cc7884,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,115742,0x7ff7c0cc7924,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,115748,0x7ff7c0cc79a4,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,115754,0x7ff7c0cc7a24,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,115759,0x7ff7c0cc7aa4,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,115765,0x7ff7c0cc7b44,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,115770,0x7ff7c0cc8184,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,115776,0x7ff7c0cc8844,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,115782,0x7ff7c0cc8f04,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,115787,0x7ff7c0cc8f84,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,115793,0x7ff7c0cc9084,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,115800,0x7ff7c0cc9184,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,115806,0x7ff7c0cc9264,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,115812,0x7ff7c0cc9404,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,115817,0x7ff7c0cc95a4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,115823,0x7ff7c0cc96a4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,115829,0x7ff7c0cc97a4,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,115835,0x7ff7c0cc98a4,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,115841,0x7ff7c0cc9a44,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,115847,0x7ff7c0cc9be4,4,DirectCEntry
code-creation,Builtin,2,115852,0x7ff7c0cc9c04,1096,StringAdd_CheckNone
code-creation,Builtin,2,115857,0x7ff7c0cca064,2484,SubString
code-creation,Builtin,2,115862,0x7ff7c0ccaa24,16,StackCheck
code-creation,Builtin,2,115867,0x7ff7c0ccaa44,84,DoubleToI
code-creation,Builtin,2,115872,0x7ff7c0ccaaa4,2236,GetProperty
code-creation,Builtin,2,115877,0x7ff7c0ccb364,2308,GetPropertyWithReceiver
code-creation,Builtin,2,115882,0x7ff7c0ccbc84,16004,SetProperty
code-creation,Builtin,2,115887,0x7ff7c0ccfb24,13480,SetPropertyInLiteral
code-creation,Builtin,2,115893,0x7ff7c0cd2fe4,8,MemCopyUint8Uint8
code-creation,Builtin,2,115898,0x7ff7c0cd3004,8,MemMove
code-creation,Builtin,2,115902,0x7ff7c0cd3024,12,IsTraceCategoryEnabled
code-creation,Builtin,2,115907,0x7ff7c0cd3044,12,Trace
code-creation,Builtin,2,115912,0x7ff7c0cd3064,12,FinalizationRegistryUnregister
code-creation,Builtin,2,115917,0x7ff7c0cd3084,416,AsyncModuleEvaluate
code-creation,Builtin,2,115923,0x7ff7c0cd3244,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,115928,0x7ff7c0cd3264,12,CallAsyncModuleRejected
code-creation,Builtin,2,115933,0x7ff7c0cd3284,260,AggregateErrorConstructor
code-creation,Builtin,2,115939,0x7ff7c0cd33a4,856,ArrayPrototypeAt
code-creation,Builtin,2,115944,0x7ff7c0cd3704,656,ArrayPrototypeConcat
code-creation,Builtin,2,115949,0x7ff7c0cd39a4,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,115954,0x7ff7c0cd5084,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,115959,0x7ff7c0cd5164,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,115965,0x7ff7c0cd53e4,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,115970,0x7ff7c0cd60e4,1464,ArrayEvery
code-creation,Builtin,2,115975,0x7ff7c0cd66a4,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,115981,0x7ff7c0cd67c4,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,115986,0x7ff7c0cd6ba4,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,115992,0x7ff7c0cd79a4,4260,ArrayFilter
code-creation,Builtin,2,115996,0x7ff7c0cd8a64,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,116002,0x7ff7c0cd8b44,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,116007,0x7ff7c0cd8b84,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,116013,0x7ff7c0cd8cc4,528,ArrayFindLoopContinuation
code-creation,Builtin,2,116019,0x7ff7c0cd8ee4,1460,ArrayPrototypeFind
code-creation,Builtin,2,116024,0x7ff7c0cd94a4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,116029,0x7ff7c0cd9584,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,116035,0x7ff7c0cd95c4,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,116040,0x7ff7c0cd9704,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,116047,0x7ff7c0cd9924,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,116053,0x7ff7c0cd9ee4,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,116059,0x7ff7c0cda0c4,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,116064,0x7ff7c0cda784,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,116070,0x7ff7c0cda964,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,116075,0x7ff7c0cdb024,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,116081,0x7ff7c0cdb104,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,116086,0x7ff7c0cdb1e4,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,116092,0x7ff7c0cdbe44,1328,ArrayForEach
code-creation,Builtin,2,116097,0x7ff7c0cdc384,3572,ArrayFrom
code-creation,Builtin,2,116102,0x7ff7c0cdd184,148,ArrayIsArray
code-creation,Builtin,2,116106,0x7ff7c0cdd224,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,116112,0x7ff7c0cdd3c4,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,116118,0x7ff7c0cdd404,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,116123,0x7ff7c0cdd4a4,312,ConvertToLocaleString
code-creation,Builtin,2,116128,0x7ff7c0cdd5e4,752,JoinStackPush
code-creation,Builtin,2,116133,0x7ff7c0cdd8e4,272,JoinStackPop
code-creation,Builtin,2,116138,0x7ff7c0cdda04,6628,ArrayPrototypeJoin
code-creation,Builtin,2,116143,0x7ff7c0cdf404,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,116149,0x7ff7c0ce0904,236,ArrayPrototypeToString
code-creation,Builtin,2,116154,0x7ff7c0ce0a04,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,116159,0x7ff7c0ce2144,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,116164,0x7ff7c0ce3364,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,116170,0x7ff7c0ce4264,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,116175,0x7ff7c0ce4384,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,116181,0x7ff7c0ce4484,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,116186,0x7ff7c0ce46a4,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,116192,0x7ff7c0ce5324,3912,ArrayMap
code-creation,Builtin,2,116196,0x7ff7c0ce6284,1000,ArrayOf
code-creation,Builtin,2,116201,0x7ff7c0ce6684,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,116207,0x7ff7c0ce6844,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,116212,0x7ff7c0ce6924,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,116218,0x7ff7c0ce6a04,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,116224,0x7ff7c0ce76a4,2000,ArrayReduceRight
code-creation,Builtin,2,116229,0x7ff7c0ce7e84,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,116235,0x7ff7c0ce7f44,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,116240,0x7ff7c0ce8024,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,116245,0x7ff7c0ce8104,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,116251,0x7ff7c0ce8dc4,1604,ArrayReduce
code-creation,Builtin,2,116255,0x7ff7c0ce9424,3216,ArrayPrototypeReverse
code-creation,Builtin,2,116261,0x7ff7c0cea0c4,3592,ArrayPrototypeShift
code-creation,Builtin,2,116266,0x7ff7c0ceaee4,5220,ArrayPrototypeSlice
code-creation,Builtin,2,116271,0x7ff7c0cec364,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,116277,0x7ff7c0cec444,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,116282,0x7ff7c0cec6a4,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,116287,0x7ff7c0ced3a4,1448,ArraySome
code-creation,Builtin,2,116292,0x7ff7c0ced964,14216,ArrayPrototypeSplice
code-creation,Builtin,2,116297,0x7ff7c0cf1104,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,116303,0x7ff7c0cf1de4,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,116308,0x7ff7c0cf1f44,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,116314,0x7ff7c0cf20a4,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,116319,0x7ff7c0cf2184,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,116325,0x7ff7c0cf22e4,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,116331,0x7ff7c0cf23c4,96,ArrayBufferIsView
code-creation,Builtin,2,116336,0x7ff7c0cf2444,396,ToInteger
code-creation,Builtin,2,116341,0x7ff7c0cf25e4,3084,FastCreateDataProperty
code-creation,Builtin,2,116347,0x7ff7c0cf3204,676,CheckNumberInRange
code-creation,Builtin,2,116352,0x7ff7c0cf34c4,584,CheckSameObject
code-creation,Builtin,2,116357,0x7ff7c0cf3724,904,BooleanConstructor
code-creation,Builtin,2,116362,0x7ff7c0cf3ac4,164,BooleanPrototypeToString
code-creation,Builtin,2,116367,0x7ff7c0cf3b84,156,BooleanPrototypeValueOf
code-creation,Builtin,2,116372,0x7ff7c0cf3c24,1184,BigIntAddNoThrow
code-creation,Builtin,2,116377,0x7ff7c0cf40e4,1280,BigIntAdd
code-creation,Builtin,2,116382,0x7ff7c0cf4604,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,116387,0x7ff7c0cf4ac4,1280,BigIntSubtract
code-creation,Builtin,2,116392,0x7ff7c0cf4fe4,284,BigIntUnaryMinus
code-creation,Builtin,2,116398,0x7ff7c0cf5104,1360,ToString
code-creation,Builtin,2,116402,0x7ff7c0cf5664,156,StringPrototypeToString
code-creation,Builtin,2,116407,0x7ff7c0cf5704,156,StringPrototypeValueOf
code-creation,Builtin,2,116412,0x7ff7c0cf57a4,2480,StringToList
code-creation,Builtin,2,116417,0x7ff7c0cf6164,1012,StringPrototypeCharAt
code-creation,Builtin,2,116422,0x7ff7c0cf6564,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,116428,0x7ff7c0cf6824,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,116433,0x7ff7c0cf6d44,400,StringPrototypeConcat
code-creation,Builtin,2,116438,0x7ff7c0cf6ee4,992,StringConstructor
code-creation,Builtin,2,116443,0x7ff7c0cf72e4,1436,StringAddConvertLeft
code-creation,Builtin,2,116448,0x7ff7c0cf7884,1464,StringAddConvertRight
code-creation,Builtin,2,116453,0x7ff7c0cf7e44,816,StringCharAt
code-creation,Builtin,2,116458,0x7ff7c0cf8184,16,FastNewClosureBaseline
code-creation,Builtin,2,116463,0x7ff7c0cf81a4,196,FastNewFunctionContextEval
code-creation,Builtin,2,116469,0x7ff7c0cf8284,196,FastNewFunctionContextFunction
code-creation,Builtin,2,116474,0x7ff7c0cf8364,248,CreateRegExpLiteral
code-creation,Builtin,2,116479,0x7ff7c0cf8464,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,116484,0x7ff7c0cf88a4,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,116489,0x7ff7c0cf8aa4,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,116495,0x7ff7c0cf9184,384,ObjectConstructor
code-creation,Builtin,2,116499,0x7ff7c0cf9324,176,CreateEmptyLiteralObject
code-creation,Builtin,2,116505,0x7ff7c0cf93e4,536,NumberConstructor
code-creation,Builtin,2,116510,0x7ff7c0cf9604,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,116515,0x7ff7c0cf9664,64,StringToNumber
code-creation,Builtin,2,116520,0x7ff7c0cf96c4,184,NonNumberToNumber
code-creation,Builtin,2,116526,0x7ff7c0cf9784,240,NonNumberToNumeric
code-creation,Builtin,2,116531,0x7ff7c0cf9884,36,ToNumeric
code-creation,Builtin,2,116536,0x7ff7c0cf98c4,1184,NumberToString
code-creation,Builtin,2,116540,0x7ff7c0cf9d84,92,ToBoolean
code-creation,Builtin,2,116545,0x7ff7c0cf9de4,96,ToBooleanForBaselineJump
code-creation,Builtin,2,116551,0x7ff7c0cf9e64,728,ToLength
code-creation,Builtin,2,116556,0x7ff7c0cfa144,1312,ToName
code-creation,Builtin,2,116561,0x7ff7c0cfa684,756,ToObject
code-creation,Builtin,2,116576,0x7ff7c0cfa984,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,116583,0x7ff7c0cfaa64,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,116588,0x7ff7c0cfab44,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,116594,0x7ff7c0cfac24,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,116599,0x7ff7c0cfad64,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,116605,0x7ff7c0cfaea4,216,FastConsoleAssert
code-creation,Builtin,2,116610,0x7ff7c0cfaf84,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,116616,0x7ff7c0cfb044,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,116622,0x7ff7c0cfb1a4,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,116628,0x7ff7c0cfb304,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,116633,0x7ff7c0cfb544,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,116639,0x7ff7c0cfb784,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,116645,0x7ff7c0cfba24,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,116652,0x7ff7c0cfbcc4,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,116658,0x7ff7c0cfc004,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,116664,0x7ff7c0cfc2c4,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,116670,0x7ff7c0cfc624,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,116676,0x7ff7c0cfc9c4,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,116682,0x7ff7c0cfcda4,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,116689,0x7ff7c0cfd1a4,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,116694,0x7ff7c0cfd564,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,116700,0x7ff7c0cfd924,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,116707,0x7ff7c0cfdd44,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,116713,0x7ff7c0cfe164,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,116719,0x7ff7c0cfe5a4,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,116725,0x7ff7c0cfe9e4,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,116731,0x7ff7c0cfee04,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,116738,0x7ff7c0cff264,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,116744,0x7ff7c0cff624,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,116749,0x7ff7c0cff9e4,828,FinalizationRegistryConstructor
code-creation,Builtin,2,116755,0x7ff7c0cffd24,1152,FinalizationRegistryRegister
code-creation,Builtin,2,116760,0x7ff7c0d001c4,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,116767,0x7ff7c0d00464,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,116773,0x7ff7c0d005c4,924,FastFunctionPrototypeBind
code-creation,Builtin,2,116779,0x7ff7c0d00964,88,IncBlockCounter
code-creation,Builtin,2,116785,0x7ff7c0d009c4,228,GetTemplateObject
code-creation,Builtin,2,116791,0x7ff7c0d00ac4,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,116797,0x7ff7c0d00ae4,92,ForInNext
code-creation,Builtin,2,116802,0x7ff7c0d00b44,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,116807,0x7ff7c0d00be4,116,GetIteratorWithFeedback
code-creation,Builtin,2,116813,0x7ff7c0d00c64,100,GetIteratorBaseline
code-creation,Builtin,2,116818,0x7ff7c0d00ce4,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,116823,0x7ff7c0d00e04,1084,CallIteratorWithFeedback
code-creation,Builtin,2,116829,0x7ff7c0d01244,288,MathAbs
code-creation,Builtin,2,116835,0x7ff7c0d01384,428,MathCeil
code-creation,Builtin,2,116840,0x7ff7c0d01544,432,MathFloor
code-creation,Builtin,2,116845,0x7ff7c0d01704,488,MathRound
code-creation,Builtin,2,116850,0x7ff7c0d01904,428,MathTrunc
code-creation,Builtin,2,116855,0x7ff7c0d01ac4,368,MathPow
code-creation,Builtin,2,116860,0x7ff7c0d01c44,396,MathMax
code-creation,Builtin,2,116865,0x7ff7c0d01de4,404,MathMin
code-creation,Builtin,2,116869,0x7ff7c0d01f84,320,MathAcos
code-creation,Builtin,2,116874,0x7ff7c0d020e4,320,MathAcosh
code-creation,Builtin,2,116879,0x7ff7c0d02244,320,MathAsin
code-creation,Builtin,2,116884,0x7ff7c0d023a4,320,MathAsinh
tick,0x7ffdf681c7f4,116889,0,0x0,6
code-creation,Builtin,2,116904,0x7ff7c0d02504,320,MathAtan
code-creation,Builtin,2,116910,0x7ff7c0d02664,416,MathAtan2
code-creation,Builtin,2,116915,0x7ff7c0d02824,320,MathAtanh
code-creation,Builtin,2,116920,0x7ff7c0d02984,320,MathCbrt
code-creation,Builtin,2,116925,0x7ff7c0d02ae4,168,MathClz32
code-creation,Builtin,2,116930,0x7ff7c0d02ba4,320,MathCos
code-creation,Builtin,2,116936,0x7ff7c0d02d04,320,MathCosh
code-creation,Builtin,2,116941,0x7ff7c0d02e64,320,MathExp
code-creation,Builtin,2,116945,0x7ff7c0d02fc4,320,MathExpm1
code-creation,Builtin,2,116950,0x7ff7c0d03124,272,MathFround
code-creation,Builtin,2,116955,0x7ff7c0d03244,304,MathImul
code-creation,Builtin,2,116959,0x7ff7c0d03384,320,MathLog
code-creation,Builtin,2,116964,0x7ff7c0d034e4,320,MathLog1p
code-creation,Builtin,2,116969,0x7ff7c0d03644,320,MathLog10
code-creation,Builtin,2,116974,0x7ff7c0d037a4,320,MathLog2
code-creation,Builtin,2,116979,0x7ff7c0d03904,320,MathSin
code-creation,Builtin,2,117026,0x7ff7c0d03a64,180,MathSign
code-creation,Builtin,2,117033,0x7ff7c0d03b24,320,MathSinh
code-creation,Builtin,2,117037,0x7ff7c0d03c84,268,MathSqrt
code-creation,Builtin,2,117042,0x7ff7c0d03da4,320,MathTan
code-creation,Builtin,2,117047,0x7ff7c0d03f04,320,MathTanh
code-creation,Builtin,2,117052,0x7ff7c0d04064,1060,MathHypot
code-creation,Builtin,2,117057,0x7ff7c0d044a4,332,MathRandom
code-creation,Builtin,2,117062,0x7ff7c0d04604,2956,NumberPrototypeToString
code-creation,Builtin,2,117068,0x7ff7c0d051a4,136,NumberIsFinite
code-creation,Builtin,2,117073,0x7ff7c0d05244,340,NumberIsInteger
code-creation,Builtin,2,117077,0x7ff7c0d053a4,116,NumberIsNaN
code-creation,Builtin,2,117082,0x7ff7c0d05424,372,NumberIsSafeInteger
code-creation,Builtin,2,117088,0x7ff7c0d055a4,156,NumberPrototypeValueOf
code-creation,Builtin,2,117093,0x7ff7c0d05644,196,NumberParseFloat
code-creation,Builtin,2,117098,0x7ff7c0d05724,248,ParseInt
code-creation,Builtin,2,117103,0x7ff7c0d05824,84,NumberParseInt
code-creation,Builtin,2,117108,0x7ff7c0d05884,860,Add
code-creation,Builtin,2,117112,0x7ff7c0d05be4,424,Subtract
code-creation,Builtin,2,117117,0x7ff7c0d05da4,608,Multiply
code-creation,Builtin,2,117122,0x7ff7c0d06024,532,Divide
code-creation,Builtin,2,117127,0x7ff7c0d06244,592,Modulus
code-creation,Builtin,2,117132,0x7ff7c0d064a4,524,Exponentiate
code-creation,Builtin,2,117137,0x7ff7c0d066c4,344,Negate
code-creation,Builtin,2,117142,0x7ff7c0d06824,112,BitwiseNot
code-creation,Builtin,2,117146,0x7ff7c0d068a4,112,Decrement
code-creation,Builtin,2,117151,0x7ff7c0d06924,112,Increment
code-creation,Builtin,2,117156,0x7ff7c0d069a4,392,ShiftLeft
code-creation,Builtin,2,117161,0x7ff7c0d06b44,392,ShiftRight
code-creation,Builtin,2,117166,0x7ff7c0d06ce4,508,ShiftRightLogical
code-creation,Builtin,2,117171,0x7ff7c0d06ee4,388,BitwiseAnd
code-creation,Builtin,2,117176,0x7ff7c0d07084,388,BitwiseOr
code-creation,Builtin,2,117181,0x7ff7c0d07224,388,BitwiseXor
code-creation,Builtin,2,117186,0x7ff7c0d073c4,796,LessThan
code-creation,Builtin,2,117191,0x7ff7c0d076e4,796,LessThanOrEqual
code-creation,Builtin,2,117195,0x7ff7c0d07a04,796,GreaterThan
code-creation,Builtin,2,117200,0x7ff7c0d07d24,796,GreaterThanOrEqual
code-creation,Builtin,2,117206,0x7ff7c0d08044,860,Equal
code-creation,Builtin,2,117210,0x7ff7c0d083a4,348,StrictEqual
code-creation,Builtin,2,117215,0x7ff7c0d08504,3132,ObjectFromEntries
code-creation,Builtin,2,117220,0x7ff7c0d09144,756,CreateObjectWithoutProperties
code-creation,Builtin,2,117226,0x7ff7c0d09444,144,ObjectIsExtensible
code-creation,Builtin,2,117231,0x7ff7c0d094e4,148,ObjectPreventExtensions
code-creation,Builtin,2,117236,0x7ff7c0d09584,144,ObjectGetPrototypeOf
code-creation,Builtin,2,117241,0x7ff7c0d09624,300,ObjectSetPrototypeOf
code-creation,Builtin,2,117246,0x7ff7c0d09764,80,ObjectPrototypeToString
code-creation,Builtin,2,117251,0x7ff7c0d097c4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,117256,0x7ff7c0d09844,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,117262,0x7ff7c0d09904,868,FulfillPromise
code-creation,Builtin,2,117266,0x7ff7c0d09c84,988,RejectPromise
code-creation,Builtin,2,117271,0x7ff7c0d0a064,2416,NewPromiseCapability
code-creation,Builtin,2,117276,0x7ff7c0d0a9e4,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,117282,0x7ff7c0d0aaa4,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,117287,0x7ff7c0d0ab44,1416,PerformPromiseThen
code-creation,Builtin,2,117293,0x7ff7c0d0b0e4,648,PromiseReject
code-creation,Builtin,2,117298,0x7ff7c0d0b384,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,117303,0x7ff7c0d0b4a4,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,117308,0x7ff7c0d0b524,4560,PromiseAll
code-creation,Builtin,2,117313,0x7ff7c0d0c704,4880,PromiseAllSettled
code-creation,Builtin,2,117318,0x7ff7c0d0da24,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,117324,0x7ff7c0d0de84,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,117329,0x7ff7c0d0e404,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,117336,0x7ff7c0d0e984,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,117342,0x7ff7c0d0ee24,2368,PromiseAny
code-creation,Builtin,2,117346,0x7ff7c0d0f784,2908,PromiseConstructor
code-creation,Builtin,2,117351,0x7ff7c0d102e4,296,PromisePrototypeCatch
code-creation,Builtin,2,117357,0x7ff7c0d10424,88,PromiseValueThunkFinally
code-creation,Builtin,2,117362,0x7ff7c0d10484,84,PromiseThrowerFinally
code-creation,Builtin,2,117367,0x7ff7c0d104e4,904,PromiseCatchFinally
code-creation,Builtin,2,117372,0x7ff7c0d10884,904,PromiseThenFinally
code-creation,Builtin,2,117377,0x7ff7c0d10c24,1700,PromisePrototypeFinally
code-creation,Builtin,2,117383,0x7ff7c0d112e4,1336,PromiseRace
code-creation,Builtin,2,117388,0x7ff7c0d11824,268,PromiseFulfillReactionJob
code-creation,Builtin,2,117393,0x7ff7c0d11944,364,PromiseRejectReactionJob
code-creation,Builtin,2,117398,0x7ff7c0d11ac4,156,PromiseResolveTrampoline
code-creation,Builtin,2,117403,0x7ff7c0d11b64,656,PromiseResolve
code-creation,Builtin,2,117408,0x7ff7c0d11e04,712,ResolvePromise
code-creation,Builtin,2,117413,0x7ff7c0d120e4,2224,PromisePrototypeThen
code-creation,Builtin,2,117419,0x7ff7c0d129a4,1144,PromiseResolveThenableJob
code-creation,Builtin,2,117424,0x7ff7c0d12e24,448,ProxyConstructor
code-creation,Builtin,2,117429,0x7ff7c0d13004,1760,ProxyDeleteProperty
code-creation,Builtin,2,117434,0x7ff7c0d13704,2112,ProxyGetProperty
code-creation,Builtin,2,117439,0x7ff7c0d13f64,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,117444,0x7ff7c0d143a4,1668,ProxyHasProperty
code-creation,Builtin,2,117449,0x7ff7c0d14a44,760,ProxyIsExtensible
code-creation,Builtin,2,117454,0x7ff7c0d14d44,800,ProxyPreventExtensions
code-creation,Builtin,2,117460,0x7ff7c0d15084,1148,ProxyRevocable
code-creation,Builtin,2,117465,0x7ff7c0d15504,120,ProxyRevoke
code-creation,Builtin,2,117470,0x7ff7c0d15584,2216,ProxySetProperty
code-creation,Builtin,2,117475,0x7ff7c0d15e44,1292,ProxySetPrototypeOf
code-creation,Builtin,2,117480,0x7ff7c0d16364,208,ReflectIsExtensible
code-creation,Builtin,2,117485,0x7ff7c0d16444,212,ReflectPreventExtensions
code-creation,Builtin,2,117490,0x7ff7c0d16524,188,ReflectGetPrototypeOf
code-creation,Builtin,2,117495,0x7ff7c0d165e4,292,ReflectSetPrototypeOf
code-creation,Builtin,2,117500,0x7ff7c0d16724,284,ReflectGet
code-creation,Builtin,2,117505,0x7ff7c0d16844,160,ReflectDeleteProperty
code-creation,Builtin,2,117511,0x7ff7c0d16904,148,ReflectHas
code-creation,Builtin,2,117515,0x7ff7c0d169a4,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,117520,0x7ff7c0d17dc4,5104,RegExpPrototypeExec
code-creation,Builtin,2,117527,0x7ff7c0d191c4,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,117532,0x7ff7c0d19b04,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,117538,0x7ff7c0d1bfe4,8840,RegExpMatchFast
code-creation,Builtin,2,117543,0x7ff7c0d1e284,3600,RegExpPrototypeMatch
code-creation,Builtin,2,117548,0x7ff7c0d1f0a4,6328,RegExpReplace
code-creation,Builtin,2,117553,0x7ff7c0d20964,524,RegExpPrototypeReplace
code-creation,Builtin,2,117558,0x7ff7c0d20b84,1424,RegExpSearchFast
code-creation,Builtin,2,117563,0x7ff7c0d21124,1640,RegExpPrototypeSearch
code-creation,Builtin,2,117568,0x7ff7c0d217a4,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,117573,0x7ff7c0d21884,5872,RegExpSplit
code-creation,Builtin,2,117578,0x7ff7c0d22f84,476,RegExpPrototypeSplit
code-creation,Builtin,2,117584,0x7ff7c0d23164,2252,RegExpPrototypeTest
code-creation,Builtin,2,117589,0x7ff7c0d23a44,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,117594,0x7ff7c0d23fa4,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,117599,0x7ff7c0d240a4,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,117605,0x7ff7c0d241a4,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,117610,0x7ff7c0d242a4,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,117615,0x7ff7c0d243a4,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,117621,0x7ff7c0d244a4,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,117626,0x7ff7c0d245a4,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,117632,0x7ff7c0d246c4,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,117638,0x7ff7c0d247e4,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,117643,0x7ff7c0d250c4,1500,StringPrototypeAt
code-creation,Builtin,2,117648,0x7ff7c0d256a4,3008,StringPrototypeEndsWith
code-creation,Builtin,2,117653,0x7ff7c0d26284,480,CreateHTML
code-creation,Builtin,2,117658,0x7ff7c0d26484,164,StringPrototypeAnchor
code-creation,Builtin,2,117664,0x7ff7c0d26544,128,StringPrototypeBig
code-creation,Builtin,2,117669,0x7ff7c0d265e4,128,StringPrototypeBlink
code-creation,Builtin,2,117674,0x7ff7c0d26684,128,StringPrototypeBold
code-creation,Builtin,2,117679,0x7ff7c0d26724,168,StringPrototypeFontcolor
code-creation,Builtin,2,117684,0x7ff7c0d267e4,168,StringPrototypeFontsize
code-creation,Builtin,2,117690,0x7ff7c0d268a4,128,StringPrototypeFixed
code-creation,Builtin,2,117695,0x7ff7c0d26944,128,StringPrototypeItalics
code-creation,Builtin,2,117700,0x7ff7c0d269e4,168,StringPrototypeLink
code-creation,Builtin,2,117705,0x7ff7c0d26aa4,128,StringPrototypeSmall
code-creation,Builtin,2,117710,0x7ff7c0d26b44,128,StringPrototypeStrike
code-creation,Builtin,2,117715,0x7ff7c0d26be4,128,StringPrototypeSub
code-creation,Builtin,2,117720,0x7ff7c0d26c84,128,StringPrototypeSup
code-creation,Builtin,2,117725,0x7ff7c0d26d24,1028,StringPrototypeIncludes
code-creation,Builtin,2,117730,0x7ff7c0d27144,628,StringPrototypeIndexOf
code-creation,Builtin,2,117735,0x7ff7c0d273c4,344,StringPrototypeIterator
code-creation,Builtin,2,117741,0x7ff7c0d27524,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,117746,0x7ff7c0d27d24,1304,StringPrototypeMatch
code-creation,Builtin,2,117751,0x7ff7c0d28244,1304,StringPrototypeSearch
code-creation,Builtin,2,117757,0x7ff7c0d28764,824,StringPrototypePadStart
code-creation,Builtin,2,117762,0x7ff7c0d28aa4,824,StringPrototypePadEnd
code-creation,Builtin,2,117767,0x7ff7c0d28de4,120,StringRepeat
code-creation,Builtin,2,117772,0x7ff7c0d28e64,400,StringPrototypeRepeat
code-creation,Builtin,2,117777,0x7ff7c0d29004,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,117782,0x7ff7c0d2bbc4,3388,StringPrototypeSlice
code-creation,Builtin,2,117788,0x7ff7c0d2c904,3028,StringPrototypeStartsWith
code-creation,Builtin,2,117793,0x7ff7c0d2d4e4,3328,StringPrototypeSubstr
code-creation,Builtin,2,117798,0x7ff7c0d2e204,3260,StringPrototypeSubstring
code-creation,Builtin,2,117803,0x7ff7c0d2eec4,6916,StringPrototypeTrim
code-creation,Builtin,2,117808,0x7ff7c0d309e4,6332,StringPrototypeTrimStart
code-creation,Builtin,2,117813,0x7ff7c0d322a4,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,117818,0x7ff7c0d33984,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,117824,0x7ff7c0d33a44,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,117829,0x7ff7c0d33ae4,172,SymbolPrototypeToString
code-creation,Builtin,2,117834,0x7ff7c0d33ba4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,117839,0x7ff7c0d33c44,832,TypedArrayPrototypeAt
code-creation,Builtin,2,117844,0x7ff7c0d33fa4,10064,CreateTypedArray
code-creation,Builtin,2,117849,0x7ff7c0d36704,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,117854,0x7ff7c0d36b04,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,117860,0x7ff7c0d36c84,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,117865,0x7ff7c0d37a44,996,TypedArrayPrototypeFind
code-creation,Builtin,2,117870,0x7ff7c0d37e44,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,117876,0x7ff7c0d38244,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,117881,0x7ff7c0d38404,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,117887,0x7ff7c0d388c4,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,117892,0x7ff7c0d38a84,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,117897,0x7ff7c0d38f64,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,117903,0x7ff7c0d392e4,2352,TypedArrayFrom
code-creation,Builtin,2,117908,0x7ff7c0d39c24,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,117913,0x7ff7c0d39da4,1028,TypedArrayOf
code-creation,Builtin,2,117918,0x7ff7c0d3a1c4,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,117924,0x7ff7c0d3a584,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,117929,0x7ff7c0d3a944,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,117934,0x7ff7c0d3b324,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,117940,0x7ff7c0d3bf24,992,TypedArrayPrototypeSome
code-creation,Builtin,2,117946,0x7ff7c0d3c324,1060,TypedArrayMergeSort
code-creation,Builtin,2,117951,0x7ff7c0d3c764,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,117957,0x7ff7c0d3cdc4,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,117962,0x7ff7c0d3d884,372,TypedArrayPrototypeValues
code-creation,Builtin,2,117967,0x7ff7c0d3da04,952,WeakRefConstructor
code-creation,Builtin,2,117972,0x7ff7c0d3ddc4,184,WeakRefDeref
code-creation,Builtin,2,117977,0x7ff7c0d3de84,680,NewSloppyArgumentsElements
code-creation,Builtin,2,117982,0x7ff7c0d3e144,296,NewStrictArgumentsElements
code-creation,Builtin,2,117988,0x7ff7c0d3e284,320,NewRestArgumentsElements
code-creation,Builtin,2,117994,0x7ff7c0d3e3e4,1388,FastNewSloppyArguments
code-creation,Builtin,2,117999,0x7ff7c0d3e964,524,FastNewStrictArguments
code-creation,Builtin,2,118004,0x7ff7c0d3eb84,556,FastNewRestArguments
code-creation,Builtin,2,118009,0x7ff7c0d3edc4,676,StringSlowFlatten
code-creation,Builtin,2,118014,0x7ff7c0d3f084,2068,StringIndexOf
code-creation,Builtin,2,118019,0x7ff7c0d3f8a4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,118024,0x7ff7c0d3f8c4,20,TestHelperPlus1
code-creation,Builtin,2,118030,0x7ff7c0d3f8e4,20,TestHelperPlus2
code-creation,Builtin,2,118035,0x7ff7c0d3f904,96,NewSmiBox
code-creation,Builtin,2,118040,0x7ff7c0d3f984,24,ReturnTwoValues
code-creation,Builtin,2,118044,0x7ff7c0d3f9a4,32,Load_FastSmiElements_0
code-creation,Builtin,2,118050,0x7ff7c0d3f9e4,32,Load_FastObjectElements_0
code-creation,Builtin,2,118055,0x7ff7c0d3fa24,144,Load_FastDoubleElements_0
code-creation,Builtin,2,118060,0x7ff7c0d3fac4,32,Store_FastSmiElements_0
code-creation,Builtin,2,118065,0x7ff7c0d3fb04,96,Store_FastObjectElements_0
code-creation,Builtin,2,118070,0x7ff7c0d3fb84,48,Store_FastDoubleElements_0
code-creation,Builtin,2,118076,0x7ff7c0d3fbc4,36,Delete_FastSmiElements_0
code-creation,Builtin,2,118081,0x7ff7c0d3fc04,36,Delete_FastObjectElements_0
code-creation,Builtin,2,118087,0x7ff7c0d3fc44,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,118092,0x7ff7c0d3fc84,308,SortCompareDefault
code-creation,Builtin,2,118097,0x7ff7c0d3fdc4,92,SortCompareUserFn
code-creation,Builtin,2,118102,0x7ff7c0d3fe24,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,118107,0x7ff7c0d3fe44,312,Copy
code-creation,Builtin,2,118112,0x7ff7c0d3ff84,5776,MergeAt
code-creation,Builtin,2,118117,0x7ff7c0d41624,792,GallopLeft
code-creation,Builtin,2,118122,0x7ff7c0d41944,832,GallopRight
code-creation,Builtin,2,118127,0x7ff7c0d41ca4,3832,ArrayTimSort
code-creation,Builtin,2,118132,0x7ff7c0d42ba4,2112,ArrayPrototypeSort
code-creation,Builtin,2,118137,0x7ff7c0d43404,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,118142,0x7ff7c0d43484,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,118147,0x7ff7c0d43504,76,WasmTaggedToFloat64
code-creation,Builtin,2,118152,0x7ff7c0d43564,72,WasmMemoryGrow
code-creation,Builtin,2,118157,0x7ff7c0d435c4,100,WasmTableInit
code-creation,Builtin,2,118162,0x7ff7c0d43644,100,WasmTableCopy
code-creation,Builtin,2,118167,0x7ff7c0d436c4,84,WasmTableFill
code-creation,Builtin,2,118172,0x7ff7c0d43724,72,WasmTableGrow
code-creation,Builtin,2,118177,0x7ff7c0d43784,144,WasmTableGet
code-creation,Builtin,2,118181,0x7ff7c0d43824,236,WasmTableSet
code-creation,Builtin,2,118186,0x7ff7c0d43924,88,WasmRefFunc
code-creation,Builtin,2,118191,0x7ff7c0d43984,144,WasmAllocateFixedArray
code-creation,Builtin,2,118197,0x7ff7c0d43a24,44,WasmThrow
code-creation,Builtin,2,118202,0x7ff7c0d43a64,52,WasmRethrow
code-creation,Builtin,2,118207,0x7ff7c0d43aa4,44,WasmTriggerTierUp
code-creation,Builtin,2,118211,0x7ff7c0d43ae4,32,WasmStackGuard
code-creation,Builtin,2,118216,0x7ff7c0d43b24,32,WasmStackOverflow
code-creation,Builtin,2,118222,0x7ff7c0d43b64,40,WasmTraceMemory
code-creation,Builtin,2,118227,0x7ff7c0d43ba4,32,WasmTraceEnter
code-creation,Builtin,2,118232,0x7ff7c0d43be4,40,WasmTraceExit
code-creation,Builtin,2,118237,0x7ff7c0d43c24,332,WasmAllocateJSArray
code-creation,Builtin,2,118242,0x7ff7c0d43d84,104,WasmAllocatePair
code-creation,Builtin,2,118247,0x7ff7c0d43e04,64,WasmAllocateRtt
code-creation,Builtin,2,118252,0x7ff7c0d43e64,72,WasmAllocateFreshRtt
code-creation,Builtin,2,118257,0x7ff7c0d43ec4,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,118262,0x7ff7c0d43f44,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,118267,0x7ff7c0d43fe4,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,118273,0x7ff7c0d440a4,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,118278,0x7ff7c0d44164,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,118283,0x7ff7c0d441e4,60,WasmArrayCopy
code-creation,Builtin,2,118288,0x7ff7c0d44224,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,118293,0x7ff7c0d44324,52,WasmSubtypeCheck
code-creation,Builtin,2,118298,0x7ff7c0d44364,8,WasmInt32ToNumber
code-creation,Builtin,2,118303,0x7ff7c0d44384,116,WasmUint32ToNumber
code-creation,Builtin,2,118308,0x7ff7c0d44404,144,UintPtr53ToNumber
code-creation,Builtin,2,118313,0x7ff7c0d444a4,96,WasmAtomicNotify
code-creation,Builtin,2,118318,0x7ff7c0d44524,116,WasmI32AtomicWait64
code-creation,Builtin,2,118323,0x7ff7c0d445a4,116,WasmI64AtomicWait64
code-creation,Builtin,2,118329,0x7ff7c0d44624,580,WasmGetOwnProperty
code-creation,Builtin,2,118333,0x7ff7c0d44884,40,WasmTrap
code-creation,Builtin,2,118338,0x7ff7c0d448c4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,118343,0x7ff7c0d448e4,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,118349,0x7ff7c0d44904,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,118354,0x7ff7c0d44924,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,118359,0x7ff7c0d44944,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,118365,0x7ff7c0d44964,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,118370,0x7ff7c0d44984,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,118375,0x7ff7c0d449a4,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,118380,0x7ff7c0d449c4,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,118385,0x7ff7c0d449e4,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,118391,0x7ff7c0d44a04,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,118396,0x7ff7c0d44a24,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,118402,0x7ff7c0d44a44,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,118407,0x7ff7c0d44a64,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,118412,0x7ff7c0d44a84,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,118417,0x7ff7c0d44aa4,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,118422,0x7ff7c0d44ac4,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,118428,0x7ff7c0d44b84,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,118433,0x7ff7c0d44ba4,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,118439,0x7ff7c0d44c24,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,118445,0x7ff7c0d44ca4,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,118451,0x7ff7c0d44cc4,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,118456,0x7ff7c0d44da4,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,118462,0x7ff7c0d44ea4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,118467,0x7ff7c0d44ec4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,118472,0x7ff7c0d44ee4,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,118478,0x7ff7c0d44f04,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,118483,0x7ff7c0d44f24,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,118489,0x7ff7c0d44fc4,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,118494,0x7ff7c0d44fe4,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,118499,0x7ff7c0d45024,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,118505,0x7ff7c0d45064,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,118511,0x7ff7c0d450a4,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,118517,0x7ff7c0d45b24,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,118523,0x7ff7c0d45b44,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,118528,0x7ff7c0d45b84,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,118534,0x7ff7c0d45ba4,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,118540,0x7ff7c0d45c64,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,118545,0x7ff7c0d45d24,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,118550,0x7ff7c0d45da4,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,118556,0x7ff7c0d45de4,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,118562,0x7ff7c0d45e84,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,118567,0x7ff7c0d45f04,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,118611,0x7ff7c0d45f24,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,118617,0x7ff7c0d45fc4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,118623,0x7ff7c0d45fe4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,118628,0x7ff7c0d46004,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,118634,0x7ff7c0d46284,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,118641,0x7ff7c0d46364,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,118647,0x7ff7c0d463a4,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,118654,0x7ff7c0d46484,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,118660,0x7ff7c0d46584,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,118666,0x7ff7c0d465c4,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,118673,0x7ff7c0d466a4,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,118678,0x7ff7c0d466c4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,118684,0x7ff7c0d466e4,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,118690,0x7ff7c0d467a4,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,118697,0x7ff7c0d467c4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,118702,0x7ff7c0d467e4,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,118708,0x7ff7c0d468a4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,118714,0x7ff7c0d468c4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,118720,0x7ff7c0d468e4,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,118726,0x7ff7c0d469a4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,118732,0x7ff7c0d469c4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,118739,0x7ff7c0d469e4,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,118745,0x7ff7c0d46aa4,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,118751,0x7ff7c0d46b44,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,118757,0x7ff7c0d46c04,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,118763,0x7ff7c0d46cc4,12,CollatorConstructor
code-creation,Builtin,2,118769,0x7ff7c0d46ce4,12,CollatorInternalCompare
code-creation,Builtin,2,118775,0x7ff7c0d46d04,12,CollatorPrototypeCompare
code-creation,Builtin,2,118781,0x7ff7c0d46d24,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,118786,0x7ff7c0d46d44,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,118792,0x7ff7c0d46d64,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,118797,0x7ff7c0d46d84,12,DatePrototypeToLocaleString
code-creation,Builtin,2,118802,0x7ff7c0d46da4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,118808,0x7ff7c0d46dc4,12,DateTimeFormatConstructor
code-creation,Builtin,2,118813,0x7ff7c0d46de4,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,118819,0x7ff7c0d46e04,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,118825,0x7ff7c0d46e24,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,118831,0x7ff7c0d46e44,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,118837,0x7ff7c0d46e64,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,118842,0x7ff7c0d46e84,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,118848,0x7ff7c0d46ea4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,118853,0x7ff7c0d46ec4,12,DisplayNamesConstructor
code-creation,Builtin,2,118858,0x7ff7c0d46ee4,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,118863,0x7ff7c0d46f04,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,118869,0x7ff7c0d46f24,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,118874,0x7ff7c0d46f44,12,IntlGetCanonicalLocales
code-creation,Builtin,2,118880,0x7ff7c0d46f64,12,ListFormatConstructor
code-creation,Builtin,2,118885,0x7ff7c0d46f84,224,ListFormatPrototypeFormat
code-creation,Builtin,2,118890,0x7ff7c0d47084,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,118895,0x7ff7c0d47184,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,118901,0x7ff7c0d471a4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,118907,0x7ff7c0d471c4,12,LocaleConstructor
code-creation,Builtin,2,118913,0x7ff7c0d471e4,12,LocalePrototypeBaseName
code-creation,Builtin,2,118918,0x7ff7c0d47204,12,LocalePrototypeCalendar
code-creation,Builtin,2,118923,0x7ff7c0d47224,12,LocalePrototypeCalendars
code-creation,Builtin,2,118928,0x7ff7c0d47244,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,118934,0x7ff7c0d47264,12,LocalePrototypeCollation
code-creation,Builtin,2,118941,0x7ff7c0d47284,12,LocalePrototypeCollations
code-creation,Builtin,2,118947,0x7ff7c0d472a4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,118953,0x7ff7c0d472c4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,118959,0x7ff7c0d472e4,12,LocalePrototypeLanguage
code-creation,Builtin,2,118965,0x7ff7c0d47304,12,LocalePrototypeMaximize
code-creation,Builtin,2,118970,0x7ff7c0d47324,12,LocalePrototypeMinimize
code-creation,Builtin,2,118976,0x7ff7c0d47344,12,LocalePrototypeNumeric
code-creation,Builtin,2,118981,0x7ff7c0d47364,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,118986,0x7ff7c0d47384,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,118992,0x7ff7c0d473a4,12,LocalePrototypeRegion
code-creation,Builtin,2,118997,0x7ff7c0d473c4,12,LocalePrototypeScript
code-creation,Builtin,2,119002,0x7ff7c0d473e4,12,LocalePrototypeTextInfo
code-creation,Builtin,2,119007,0x7ff7c0d47404,12,LocalePrototypeTimeZones
code-creation,Builtin,2,119012,0x7ff7c0d47424,12,LocalePrototypeToString
code-creation,Builtin,2,119018,0x7ff7c0d47444,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,119023,0x7ff7c0d47464,12,NumberFormatConstructor
code-creation,Builtin,2,119028,0x7ff7c0d47484,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,119033,0x7ff7c0d474a4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,119039,0x7ff7c0d474c4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,119045,0x7ff7c0d474e4,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,119051,0x7ff7c0d47504,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,119056,0x7ff7c0d47524,12,PluralRulesConstructor
code-creation,Builtin,2,119061,0x7ff7c0d47544,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,119066,0x7ff7c0d47564,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,119072,0x7ff7c0d47584,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,119077,0x7ff7c0d475a4,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,119084,0x7ff7c0d475c4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,119090,0x7ff7c0d475e4,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,119095,0x7ff7c0d47604,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,119101,0x7ff7c0d47624,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,119107,0x7ff7c0d47644,12,SegmenterConstructor
code-creation,Builtin,2,119112,0x7ff7c0d47664,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,119119,0x7ff7c0d47684,12,SegmenterPrototypeSegment
code-creation,Builtin,2,119124,0x7ff7c0d476a4,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,119129,0x7ff7c0d476c4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,119134,0x7ff7c0d476e4,12,SegmentsPrototypeContaining
code-creation,Builtin,2,119139,0x7ff7c0d47704,12,SegmentsPrototypeIterator
code-creation,Builtin,2,119145,0x7ff7c0d47724,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,119150,0x7ff7c0d47744,12,StringPrototypeToLocaleLowerCase
tick,0x7ff7c07c7ee2,119156,0,0x0,6
code-creation,Builtin,2,119171,0x7ff7c0d47764,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,119178,0x7ff7c0d47784,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,119183,0x7ff7c0d47864,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,119189,0x7ff7c0d47884,636,StringToLowerCaseIntl
code-creation,Builtin,2,119194,0x7ff7c0d47b04,12,V8BreakIteratorConstructor
code-creation,Builtin,2,119199,0x7ff7c0d47b24,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,119205,0x7ff7c0d47b44,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,119210,0x7ff7c0d47b64,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,119215,0x7ff7c0d47b84,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,119221,0x7ff7c0d47ba4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,119226,0x7ff7c0d47bc4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,119231,0x7ff7c0d47be4,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,119237,0x7ff7c0d47c04,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,119242,0x7ff7c0d47c24,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,119248,0x7ff7c0d47c44,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,119253,0x7ff7c0d47c64,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,119258,0x7ff7c0d47c84,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,119265,0x7ff7c0d47ca4,24,Wide
code-creation,BytecodeHandler,0,119270,0x7ff7c0d47cc4,24,ExtraWide
code-creation,BytecodeHandler,0,119275,0x7ff7c0d47ce4,104,DebugBreakWide
code-creation,BytecodeHandler,0,119280,0x7ff7c0d47d64,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,119286,0x7ff7c0d47de4,164,DebugBreak0
code-creation,BytecodeHandler,0,119291,0x7ff7c0d47ea4,104,DebugBreak1
code-creation,BytecodeHandler,0,119297,0x7ff7c0d47f24,104,DebugBreak2
code-creation,BytecodeHandler,0,119302,0x7ff7c0d47fa4,104,DebugBreak3
code-creation,BytecodeHandler,0,119307,0x7ff7c0d48024,104,DebugBreak4
code-creation,BytecodeHandler,0,119312,0x7ff7c0d480a4,104,DebugBreak5
code-creation,BytecodeHandler,0,119317,0x7ff7c0d48124,104,DebugBreak6
code-creation,BytecodeHandler,0,119323,0x7ff7c0d481a4,32,Ldar
code-creation,BytecodeHandler,0,119328,0x7ff7c0d481e4,68,LdaZero
code-creation,BytecodeHandler,0,119333,0x7ff7c0d48244,76,LdaSmi
code-creation,BytecodeHandler,0,119338,0x7ff7c0d482a4,68,LdaUndefined
code-creation,BytecodeHandler,0,119343,0x7ff7c0d48304,68,LdaNull
code-creation,BytecodeHandler,0,119348,0x7ff7c0d48364,68,LdaTheHole
code-creation,BytecodeHandler,0,119353,0x7ff7c0d483c4,20,LdaTrue
code-creation,BytecodeHandler,0,119358,0x7ff7c0d483e4,20,LdaFalse
code-creation,BytecodeHandler,0,119363,0x7ff7c0d48404,76,LdaConstant
code-creation,BytecodeHandler,0,119368,0x7ff7c0d48464,132,LdaContextSlot
code-creation,BytecodeHandler,0,119374,0x7ff7c0d48504,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,119379,0x7ff7c0d485a4,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,119385,0x7ff7c0d48604,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,119390,0x7ff7c0d48664,32,Star
code-creation,BytecodeHandler,0,119395,0x7ff7c0d486a4,40,Mov
code-creation,BytecodeHandler,0,119400,0x7ff7c0d486e4,40,PushContext
code-creation,BytecodeHandler,0,119405,0x7ff7c0d48724,36,PopContext
code-creation,BytecodeHandler,0,119411,0x7ff7c0d48764,48,TestReferenceEqual
code-creation,BytecodeHandler,0,119416,0x7ff7c0d487a4,52,TestUndetectable
code-creation,BytecodeHandler,0,119422,0x7ff7c0d487e4,36,TestNull
code-creation,BytecodeHandler,0,119428,0x7ff7c0d48824,36,TestUndefined
code-creation,BytecodeHandler,0,119433,0x7ff7c0d48864,336,TestTypeOf
code-creation,BytecodeHandler,0,119438,0x7ff7c0d489c4,6036,LdaGlobal
code-creation,BytecodeHandler,0,119443,0x7ff7c0d4a164,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,119448,0x7ff7c0d4b324,168,StaGlobal
code-creation,BytecodeHandler,0,119454,0x7ff7c0d4b3e4,160,StaContextSlot
code-creation,BytecodeHandler,0,119459,0x7ff7c0d4b4a4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,119464,0x7ff7c0d4b524,124,LdaLookupSlot
code-creation,BytecodeHandler,0,119470,0x7ff7c0d4b5a4,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,119475,0x7ff7c0d4b6a4,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,119480,0x7ff7c0d4c964,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,119486,0x7ff7c0d4c9e4,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,119492,0x7ff7c0d4cae4,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,119498,0x7ff7c0d4dd84,220,StaLookupSlot
code-creation,BytecodeHandler,0,119503,0x7ff7c0d4de64,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,119508,0x7ff7c0d4f2e4,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,119514,0x7ff7c0d4f3a4,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,119519,0x7ff7c0d4f484,160,LdaModuleVariable
code-creation,BytecodeHandler,0,119524,0x7ff7c0d4f544,292,StaModuleVariable
code-creation,BytecodeHandler,0,119529,0x7ff7c0d4f684,172,StaNamedProperty
code-creation,BytecodeHandler,0,119535,0x7ff7c0d4f744,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,119541,0x7ff7c0d4f804,164,StaKeyedProperty
code-creation,BytecodeHandler,0,119547,0x7ff7c0d4f8c4,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,119552,0x7ff7c0d4f984,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,119558,0x7ff7c0d4fa64,160,CollectTypeProfile
code-creation,BytecodeHandler,0,119563,0x7ff7c0d4fb24,1028,Add
code-creation,BytecodeHandler,0,119568,0x7ff7c0d4ff44,1064,Sub
code-creation,BytecodeHandler,0,119573,0x7ff7c0d50384,1024,Mul
code-creation,BytecodeHandler,0,119579,0x7ff7c0d507a4,988,Div
code-creation,BytecodeHandler,0,119584,0x7ff7c0d50b84,912,Mod
code-creation,BytecodeHandler,0,119589,0x7ff7c0d50f24,964,Exp
code-creation,BytecodeHandler,0,119594,0x7ff7c0d51304,876,BitwiseOr
code-creation,BytecodeHandler,0,119599,0x7ff7c0d51684,888,BitwiseXor
code-creation,BytecodeHandler,0,119604,0x7ff7c0d51a04,888,BitwiseAnd
code-creation,BytecodeHandler,0,119609,0x7ff7c0d51d84,900,ShiftLeft
code-creation,BytecodeHandler,0,119614,0x7ff7c0d52124,900,ShiftRight
code-creation,BytecodeHandler,0,119619,0x7ff7c0d524c4,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,119625,0x7ff7c0d528c4,960,AddSmi
code-creation,BytecodeHandler,0,119630,0x7ff7c0d52ca4,1000,SubSmi
code-creation,BytecodeHandler,0,119635,0x7ff7c0d530a4,916,MulSmi
code-creation,BytecodeHandler,0,119640,0x7ff7c0d53444,920,DivSmi
code-creation,BytecodeHandler,0,119645,0x7ff7c0d537e4,816,ModSmi
code-creation,BytecodeHandler,0,119650,0x7ff7c0d53b24,872,ExpSmi
code-creation,BytecodeHandler,0,119655,0x7ff7c0d53ea4,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,119660,0x7ff7c0d540a4,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,119666,0x7ff7c0d542a4,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,119671,0x7ff7c0d544a4,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,119676,0x7ff7c0d546a4,488,ShiftRightSmi
code-creation,BytecodeHandler,0,119681,0x7ff7c0d548a4,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,119686,0x7ff7c0d54b44,656,Inc
code-creation,BytecodeHandler,0,119691,0x7ff7c0d54de4,656,Dec
code-creation,BytecodeHandler,0,119696,0x7ff7c0d55084,640,Negate
code-creation,BytecodeHandler,0,119701,0x7ff7c0d55324,480,BitwiseNot
code-creation,BytecodeHandler,0,119706,0x7ff7c0d55524,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,119712,0x7ff7c0d555a4,36,LogicalNot
code-creation,BytecodeHandler,0,119717,0x7ff7c0d555e4,208,TypeOf
code-creation,BytecodeHandler,0,119723,0x7ff7c0d556c4,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,119728,0x7ff7c0d55744,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,119734,0x7ff7c0d557c4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,119739,0x7ff7c0d55804,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,119745,0x7ff7c0d55c84,1132,CallProperty
code-creation,BytecodeHandler,0,119750,0x7ff7c0d56104,1012,CallProperty0
code-creation,BytecodeHandler,0,119755,0x7ff7c0d56504,1028,CallProperty1
code-creation,BytecodeHandler,0,119760,0x7ff7c0d56924,1040,CallProperty2
code-creation,BytecodeHandler,0,119765,0x7ff7c0d56d44,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,119771,0x7ff7c0d57144,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,119776,0x7ff7c0d57564,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,119782,0x7ff7c0d57964,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,119787,0x7ff7c0d57d84,1132,CallWithSpread
code-creation,BytecodeHandler,0,119792,0x7ff7c0d58204,124,CallRuntime
code-creation,BytecodeHandler,0,119798,0x7ff7c0d58284,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,119803,0x7ff7c0d58324,80,CallJSRuntime
code-creation,BytecodeHandler,0,119808,0x7ff7c0d58384,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,119813,0x7ff7c0d58864,1020,Construct
code-creation,BytecodeHandler,0,119818,0x7ff7c0d58c64,536,ConstructWithSpread
code-creation,BytecodeHandler,0,119824,0x7ff7c0d58e84,1936,TestEqual
code-creation,BytecodeHandler,0,119829,0x7ff7c0d59624,1064,TestEqualStrict
code-creation,BytecodeHandler,0,119834,0x7ff7c0d59a64,1624,TestLessThan
code-creation,BytecodeHandler,0,119839,0x7ff7c0d5a0c4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,119845,0x7ff7c0d5a724,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,119850,0x7ff7c0d5ad84,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,119855,0x7ff7c0d5b3e4,860,TestInstanceOf
code-creation,BytecodeHandler,0,119860,0x7ff7c0d5b744,156,TestIn
code-creation,BytecodeHandler,0,119866,0x7ff7c0d5b7e4,112,ToName
code-creation,BytecodeHandler,0,119871,0x7ff7c0d5b864,212,ToNumber
code-creation,BytecodeHandler,0,119876,0x7ff7c0d5b944,232,ToNumeric
code-creation,BytecodeHandler,0,119882,0x7ff7c0d5ba44,112,ToObject
code-creation,BytecodeHandler,0,119887,0x7ff7c0d5bac4,116,ToString
code-creation,BytecodeHandler,0,119892,0x7ff7c0d5bb44,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,119897,0x7ff7c0d5bce4,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,119902,0x7ff7c0d5c2a4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,119908,0x7ff7c0d5c304,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,119914,0x7ff7c0d5c624,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,119919,0x7ff7c0d5ce84,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,119925,0x7ff7c0d5cf84,168,CloneObject
code-creation,BytecodeHandler,0,119930,0x7ff7c0d5d044,212,GetTemplateObject
code-creation,BytecodeHandler,0,119935,0x7ff7c0d5d124,328,CreateClosure
code-creation,BytecodeHandler,0,119940,0x7ff7c0d5d284,120,CreateBlockContext
code-creation,BytecodeHandler,0,119946,0x7ff7c0d5d304,132,CreateCatchContext
code-creation,BytecodeHandler,0,119951,0x7ff7c0d5d3a4,256,CreateFunctionContext
code-creation,BytecodeHandler,0,119957,0x7ff7c0d5d4c4,256,CreateEvalContext
code-creation,BytecodeHandler,0,119962,0x7ff7c0d5d5e4,132,CreateWithContext
code-creation,BytecodeHandler,0,119968,0x7ff7c0d5d684,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,119973,0x7ff7c0d5dcc4,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,119979,0x7ff7c0d5df24,632,CreateRestParameter
code-creation,BytecodeHandler,0,119984,0x7ff7c0d5e1a4,424,JumpLoop
code-creation,BytecodeHandler,0,119989,0x7ff7c0d5e364,44,Jump
code-creation,BytecodeHandler,0,119994,0x7ff7c0d5e3a4,56,JumpConstant
code-creation,BytecodeHandler,0,119999,0x7ff7c0d5e3e4,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,120005,0x7ff7c0d5e444,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,120010,0x7ff7c0d5e4a4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,120016,0x7ff7c0d5e504,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,120022,0x7ff7c0d5e564,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,120028,0x7ff7c0d5e5c4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,120033,0x7ff7c0d5e624,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,120038,0x7ff7c0d5e684,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,120044,0x7ff7c0d5e6e4,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,120050,0x7ff7c0d5e784,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,120055,0x7ff7c0d5e824,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,120061,0x7ff7c0d5e8c4,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,120066,0x7ff7c0d5e964,64,JumpIfTrue
code-creation,BytecodeHandler,0,120071,0x7ff7c0d5e9c4,64,JumpIfFalse
code-creation,BytecodeHandler,0,120076,0x7ff7c0d5ea24,64,JumpIfNull
code-creation,BytecodeHandler,0,120082,0x7ff7c0d5ea84,64,JumpIfNotNull
code-creation,BytecodeHandler,0,120087,0x7ff7c0d5eae4,64,JumpIfUndefined
code-creation,BytecodeHandler,0,120092,0x7ff7c0d5eb44,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,120098,0x7ff7c0d5eba4,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,120103,0x7ff7c0d5ec04,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,120108,0x7ff7c0d5ec64,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,120114,0x7ff7c0d5ece4,464,ForInEnumerate
code-creation,BytecodeHandler,0,120119,0x7ff7c0d5eec4,252,ForInPrepare
code-creation,BytecodeHandler,0,120124,0x7ff7c0d5efc4,60,ForInContinue
code-creation,BytecodeHandler,0,120129,0x7ff7c0d5f004,256,ForInNext
code-creation,BytecodeHandler,0,120135,0x7ff7c0d5f124,48,ForInStep
code-creation,BytecodeHandler,0,120140,0x7ff7c0d5f164,36,SetPendingMessage
code-creation,BytecodeHandler,0,120145,0x7ff7c0d5f1a4,116,Throw
code-creation,BytecodeHandler,0,120150,0x7ff7c0d5f224,116,ReThrow
code-creation,BytecodeHandler,0,120155,0x7ff7c0d5f2a4,112,Return
code-creation,BytecodeHandler,0,120160,0x7ff7c0d5f324,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,120166,0x7ff7c0d5f404,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,120172,0x7ff7c0d5f4a4,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,120177,0x7ff7c0d5f544,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,120183,0x7ff7c0d5f5e4,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,120188,0x7ff7c0d5f664,512,SuspendGenerator
code-creation,BytecodeHandler,0,120194,0x7ff7c0d5f884,128,ResumeGenerator
code-creation,BytecodeHandler,0,120199,0x7ff7c0d5f924,152,GetIterator
code-creation,BytecodeHandler,0,120205,0x7ff7c0d5f9c4,116,Debugger
code-creation,BytecodeHandler,0,120210,0x7ff7c0d5fa44,124,IncBlockCounter
code-creation,BytecodeHandler,0,120216,0x7ff7c0d5fac4,56,Abort
code-creation,BytecodeHandler,0,120221,0x7ff7c0d5fb04,32,Star0
code-creation,BytecodeHandler,0,120226,0x7ff7c0d5fb44,60,Illegal
code-creation,BytecodeHandler,0,120233,0x7ff7c0d5fb84,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,120238,0x7ff7c0d5fc04,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,120244,0x7ff7c0d5fc84,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,120249,0x7ff7c0d5fd04,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,120255,0x7ff7c0d5fd84,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,120260,0x7ff7c0d5fe04,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,120265,0x7ff7c0d5fe84,32,Ldar.Wide
code-creation,BytecodeHandler,0,120270,0x7ff7c0d5fec4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,120276,0x7ff7c0d5ff04,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,120281,0x7ff7c0d5ff44,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,120287,0x7ff7c0d5ffa4,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,120292,0x7ff7c0d60004,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,120298,0x7ff7c0d60044,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,120304,0x7ff7c0d60084,32,Star.Wide
code-creation,BytecodeHandler,0,120310,0x7ff7c0d600c4,40,Mov.Wide
code-creation,BytecodeHandler,0,120316,0x7ff7c0d60104,40,PushContext.Wide
code-creation,BytecodeHandler,0,120321,0x7ff7c0d60144,36,PopContext.Wide
code-creation,BytecodeHandler,0,120326,0x7ff7c0d60184,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,120332,0x7ff7c0d601c4,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,120337,0x7ff7c0d61404,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,120343,0x7ff7c0d62604,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,120348,0x7ff7c0d626c4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,120354,0x7ff7c0d62784,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,120359,0x7ff7c0d62804,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,120365,0x7ff7c0d628a4,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,120370,0x7ff7c0d629a4,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,120376,0x7ff7c0d63ca4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,120382,0x7ff7c0d63d44,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,120388,0x7ff7c0d63e44,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,120394,0x7ff7c0d65124,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,120400,0x7ff7c0d65204,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,120405,0x7ff7c0d66684,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,120411,0x7ff7c0d66744,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,120416,0x7ff7c0d66804,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,120422,0x7ff7c0d668c4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,120428,0x7ff7c0d66a04,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,120433,0x7ff7c0d66ac4,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,120439,0x7ff7c0d66b84,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,120444,0x7ff7c0d66c44,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,120450,0x7ff7c0d66d04,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,120456,0x7ff7c0d66de4,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,120461,0x7ff7c0d66ea4,984,Add.Wide
code-creation,BytecodeHandler,0,120466,0x7ff7c0d67284,1020,Sub.Wide
code-creation,BytecodeHandler,0,120472,0x7ff7c0d67684,972,Mul.Wide
code-creation,BytecodeHandler,0,120477,0x7ff7c0d67a64,988,Div.Wide
code-creation,BytecodeHandler,0,120482,0x7ff7c0d67e44,916,Mod.Wide
code-creation,BytecodeHandler,0,120487,0x7ff7c0d681e4,988,Exp.Wide
code-creation,BytecodeHandler,0,120492,0x7ff7c0d685c4,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,120497,0x7ff7c0d68964,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,120503,0x7ff7c0d68d04,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,120508,0x7ff7c0d690a4,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,120514,0x7ff7c0d69464,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,120519,0x7ff7c0d69824,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,120525,0x7ff7c0d69c44,916,AddSmi.Wide
code-creation,BytecodeHandler,0,120530,0x7ff7c0d69fe4,960,SubSmi.Wide
code-creation,BytecodeHandler,0,120535,0x7ff7c0d6a3c4,912,MulSmi.Wide
code-creation,BytecodeHandler,0,120540,0x7ff7c0d6a764,920,DivSmi.Wide
code-creation,BytecodeHandler,0,120547,0x7ff7c0d6ab04,816,ModSmi.Wide
code-creation,BytecodeHandler,0,120624,0x7ff7c0d6ae44,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,120633,0x7ff7c0d6b1c4,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,120639,0x7ff7c0d6b3c4,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,120645,0x7ff7c0d6b5c4,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,120650,0x7ff7c0d6b7c4,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,120656,0x7ff7c0d6b9c4,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,120661,0x7ff7c0d6bbc4,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,120667,0x7ff7c0d6be64,616,Inc.Wide
code-creation,BytecodeHandler,0,120672,0x7ff7c0d6c0e4,616,Dec.Wide
code-creation,BytecodeHandler,0,120679,0x7ff7c0d6c364,648,Negate.Wide
code-creation,BytecodeHandler,0,120686,0x7ff7c0d6c604,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,120691,0x7ff7c0d6c804,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,120698,0x7ff7c0d6c884,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,120704,0x7ff7c0d6c904,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,120710,0x7ff7c0d6c944,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,120716,0x7ff7c0d6cdc4,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,120723,0x7ff7c0d6d244,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,120729,0x7ff7c0d6d644,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,120735,0x7ff7c0d6da64,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,120741,0x7ff7c0d6de84,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,120748,0x7ff7c0d6e284,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,120754,0x7ff7c0d6e6a4,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,120760,0x7ff7c0d6eac4,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,120766,0x7ff7c0d6eee4,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,120772,0x7ff7c0d6f364,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,120778,0x7ff7c0d6f404,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,120785,0x7ff7c0d6f4c4,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,120791,0x7ff7c0d6f524,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,120796,0x7ff7c0d6fa04,968,Construct.Wide
code-creation,BytecodeHandler,0,120803,0x7ff7c0d6fde4,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,120808,0x7ff7c0d6ffc4,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,120814,0x7ff7c0d70784,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,120819,0x7ff7c0d70bc4,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,120825,0x7ff7c0d711c4,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,120830,0x7ff7c0d717c4,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,120836,0x7ff7c0d71dc4,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,120842,0x7ff7c0d723c4,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,120847,0x7ff7c0d72744,160,TestIn.Wide
code-creation,BytecodeHandler,0,120852,0x7ff7c0d72804,116,ToName.Wide
code-creation,BytecodeHandler,0,120858,0x7ff7c0d72884,216,ToNumber.Wide
code-creation,BytecodeHandler,0,120863,0x7ff7c0d72964,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,120868,0x7ff7c0d72a64,116,ToObject.Wide
code-creation,BytecodeHandler,0,120874,0x7ff7c0d72ae4,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,120879,0x7ff7c0d72c84,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,120885,0x7ff7c0d73204,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,120890,0x7ff7c0d73524,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,120896,0x7ff7c0d73d24,172,CloneObject.Wide
tick,0x7ffdf679b393,120903,0,0x0,6
code-creation,BytecodeHandler,0,120918,0x7ff7c0d73de4,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,120926,0x7ff7c0d73ea4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,120932,0x7ff7c0d74004,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,120937,0x7ff7c0d74084,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,120943,0x7ff7c0d74124,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,120949,0x7ff7c0d74244,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,120954,0x7ff7c0d74364,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,120959,0x7ff7c0d74404,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,120965,0x7ff7c0d745c4,44,Jump.Wide
code-creation,BytecodeHandler,0,120970,0x7ff7c0d74604,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,120976,0x7ff7c0d74644,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,120982,0x7ff7c0d746a4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,120987,0x7ff7c0d74704,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,120994,0x7ff7c0d74764,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,121000,0x7ff7c0d747c4,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,121006,0x7ff7c0d74824,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,121012,0x7ff7c0d74884,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,121018,0x7ff7c0d748e4,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,121024,0x7ff7c0d74944,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,121030,0x7ff7c0d749e4,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,121036,0x7ff7c0d74a84,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,121041,0x7ff7c0d74b24,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,121046,0x7ff7c0d74bc4,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,121052,0x7ff7c0d74c24,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,121057,0x7ff7c0d74c84,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,121063,0x7ff7c0d74ce4,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,121069,0x7ff7c0d74d44,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,121074,0x7ff7c0d74da4,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,121080,0x7ff7c0d74e04,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,121086,0x7ff7c0d74e64,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,121091,0x7ff7c0d74ec4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,121097,0x7ff7c0d74f44,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,121102,0x7ff7c0d75124,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,121108,0x7ff7c0d75224,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,121114,0x7ff7c0d75264,260,ForInNext.Wide
code-creation,BytecodeHandler,0,121119,0x7ff7c0d75384,48,ForInStep.Wide
code-creation,BytecodeHandler,0,121124,0x7ff7c0d753c4,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,121130,0x7ff7c0d75464,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,121136,0x7ff7c0d75524,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,121141,0x7ff7c0d755a4,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,121147,0x7ff7c0d757c4,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,121153,0x7ff7c0d75864,156,GetIterator.Wide
code-creation,BytecodeHandler,0,121158,0x7ff7c0d75904,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,121164,0x7ff7c0d759a4,56,Abort.Wide
code-creation,BytecodeHandler,0,121169,0x7ff7c0d759e4,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,121175,0x7ff7c0d75a64,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,121180,0x7ff7c0d75ae4,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,121186,0x7ff7c0d75b64,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,121191,0x7ff7c0d75be4,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,121197,0x7ff7c0d75c64,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,121202,0x7ff7c0d75ce4,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,121208,0x7ff7c0d75d24,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,121213,0x7ff7c0d75d44,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,121219,0x7ff7c0d75d84,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,121224,0x7ff7c0d75de4,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,121230,0x7ff7c0d75e44,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,121236,0x7ff7c0d75e84,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,121242,0x7ff7c0d75ec4,28,Star.ExtraWide
code-creation,BytecodeHandler,0,121247,0x7ff7c0d75ee4,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,121253,0x7ff7c0d75f24,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,121258,0x7ff7c0d75f64,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,121263,0x7ff7c0d75fa4,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,121269,0x7ff7c0d75fe4,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,121275,0x7ff7c0d77224,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,121281,0x7ff7c0d78424,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,121287,0x7ff7c0d784e4,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,121293,0x7ff7c0d78584,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,121299,0x7ff7c0d78604,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,121304,0x7ff7c0d786a4,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,121310,0x7ff7c0d787a4,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,121316,0x7ff7c0d79aa4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,121322,0x7ff7c0d79b44,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,121328,0x7ff7c0d79c44,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,121334,0x7ff7c0d7af24,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,121340,0x7ff7c0d7b004,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,121346,0x7ff7c0d7c464,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,121352,0x7ff7c0d7c524,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,121357,0x7ff7c0d7c5c4,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,121363,0x7ff7c0d7c684,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,121368,0x7ff7c0d7c7c4,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,121374,0x7ff7c0d7c884,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,121380,0x7ff7c0d7c944,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,121386,0x7ff7c0d7ca04,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,121392,0x7ff7c0d7cac4,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,121397,0x7ff7c0d7cba4,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,121403,0x7ff7c0d7cc64,980,Add.ExtraWide
code-creation,BytecodeHandler,0,121408,0x7ff7c0d7d044,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,121413,0x7ff7c0d7d444,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,121418,0x7ff7c0d7d824,988,Div.ExtraWide
code-creation,BytecodeHandler,0,121424,0x7ff7c0d7dc04,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,121429,0x7ff7c0d7dfa4,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,121434,0x7ff7c0d7e384,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,121440,0x7ff7c0d7e724,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,121445,0x7ff7c0d7eac4,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,121451,0x7ff7c0d7ee64,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,121456,0x7ff7c0d7f224,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,121462,0x7ff7c0d7f5e4,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,121468,0x7ff7c0d7fa04,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,121473,0x7ff7c0d7fda4,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,121479,0x7ff7c0d80184,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,121484,0x7ff7c0d80524,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,121490,0x7ff7c0d808c4,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,121495,0x7ff7c0d80c04,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,121500,0x7ff7c0d80f84,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,121506,0x7ff7c0d81184,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,121512,0x7ff7c0d81384,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,121521,0x7ff7c0d81584,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,121526,0x7ff7c0d81784,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,121532,0x7ff7c0d81984,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,121538,0x7ff7c0d81c24,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,121543,0x7ff7c0d81ea4,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,121549,0x7ff7c0d82124,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,121554,0x7ff7c0d823c4,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,121560,0x7ff7c0d825c4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,121567,0x7ff7c0d82644,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,121573,0x7ff7c0d826c4,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,121578,0x7ff7c0d82704,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,121584,0x7ff7c0d82b84,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,121590,0x7ff7c0d83004,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,121595,0x7ff7c0d83404,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,121601,0x7ff7c0d83824,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,121607,0x7ff7c0d83c44,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,121613,0x7ff7c0d84044,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,121619,0x7ff7c0d84464,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,121625,0x7ff7c0d84864,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,121630,0x7ff7c0d84c84,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,121636,0x7ff7c0d85104,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,121642,0x7ff7c0d851a4,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,121648,0x7ff7c0d85264,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,121653,0x7ff7c0d852c4,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,121659,0x7ff7c0d857a4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,121664,0x7ff7c0d85b84,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,121670,0x7ff7c0d85d64,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,121676,0x7ff7c0d86524,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,121681,0x7ff7c0d86964,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,121687,0x7ff7c0d86f64,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,121693,0x7ff7c0d87564,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,121699,0x7ff7c0d87b64,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,121705,0x7ff7c0d88164,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,121710,0x7ff7c0d884e4,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,121716,0x7ff7c0d88584,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,121721,0x7ff7c0d88604,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,121726,0x7ff7c0d886e4,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,121732,0x7ff7c0d887e4,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,121738,0x7ff7c0d88864,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,121743,0x7ff7c0d88a04,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,121749,0x7ff7c0d88f84,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,121755,0x7ff7c0d892a4,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,121761,0x7ff7c0d89aa4,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,121766,0x7ff7c0d89b64,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,121772,0x7ff7c0d89c24,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,121778,0x7ff7c0d89d84,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,121784,0x7ff7c0d89e04,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,121789,0x7ff7c0d89ea4,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,121795,0x7ff7c0d89fc4,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,121801,0x7ff7c0d8a0e4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,121806,0x7ff7c0d8a184,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,121812,0x7ff7c0d8a344,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,121817,0x7ff7c0d8a384,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,121823,0x7ff7c0d8a3c4,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,121829,0x7ff7c0d8a424,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,121835,0x7ff7c0d8a484,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,121841,0x7ff7c0d8a4e4,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,121891,0x7ff7c0d8a544,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,121899,0x7ff7c0d8a5a4,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,121905,0x7ff7c0d8a604,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,121910,0x7ff7c0d8a664,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,121917,0x7ff7c0d8a6c4,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,121923,0x7ff7c0d8a764,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,121929,0x7ff7c0d8a804,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,121935,0x7ff7c0d8a8a4,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,121940,0x7ff7c0d8a944,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,121946,0x7ff7c0d8a9a4,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,121951,0x7ff7c0d8aa04,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,121957,0x7ff7c0d8aa64,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,121962,0x7ff7c0d8aac4,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,121968,0x7ff7c0d8ab24,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,121974,0x7ff7c0d8ab84,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,121980,0x7ff7c0d8abe4,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,121985,0x7ff7c0d8ac44,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,121991,0x7ff7c0d8acc4,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,121997,0x7ff7c0d8aea4,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,122002,0x7ff7c0d8afa4,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,122008,0x7ff7c0d8afe4,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,122014,0x7ff7c0d8b104,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,122019,0x7ff7c0d8b144,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,122025,0x7ff7c0d8b1e4,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,122031,0x7ff7c0d8b2a4,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,122037,0x7ff7c0d8b324,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,122043,0x7ff7c0d8b544,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,122048,0x7ff7c0d8b5c4,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,122054,0x7ff7c0d8b664,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,122060,0x7ff7c0d8b6e4,56,Abort.ExtraWide
new,MemoryChunk,0x1e732980000,262144
new,MemoryChunk,0x251e1500000,262144
tick,0x7ff7c03ad706,122635,0,0x0,5
new,MemoryChunk,0x3b88e740000,262144
tick,0x7ff7c0ac34f9,124637,0,0x0,5
new,MemoryChunk,0x3e2f0700000,262144
new,MemoryChunk,0x1de1b540000,262144
code-creation,Eval,10,126044,0x1de1b541fae,5, node:internal/main/run_main_module:1:1,0x1de1b541e68,~
script-source,95,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x1de1b541fae,95,0,649,C0O0C4O649,,
code-creation,Function,10,126098,0x1de1b542056,58, node:internal/main/run_main_module:1:1,0x1de1b541f28,~
code-source-info,0x1de1b542056,95,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,126331,0x1de1b542296,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x359b0d4fdc0,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x1de1b542296,9,10647,11000,C0O10657C2O10668C4O10664C9O10685C13O10706C14O10729C19O10742C24O10746C29O10746C35O10890C37O10900C47O10948C60O10906C65O10900C66O10970C71O10970C75O10997,,
tick,0x7ff7c09ef47c,126938,0,0x0,3,0x7ff7c08240c0,0x1de1b542059
code-creation,LazyCompile,10,126985,0x1de1b542fa6,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x359b0d4fcf0,~
code-source-info,0x1de1b542fa6,9,9827,10410,C0O9846C6O9861C12O9891C16O9899C17O9930C22O9939C23O9952C30O9998C37O10029C45O9998C63O10131C70O10131C75O10167C89O10202C103O10159C108O10242C109O10254C124O10286C126O10299C141O10322C152O10341C160O10373C165O10322C170O10397C174O10405,,
code-creation,Eval,10,127336,0x1de1b543f7e,5, node:internal/bootstrap/pre_execution:1:1,0x1de1b543b88,~
script-source,96,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (!getOptionValue('--experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  emitExperimentalWarning('Fetch');\x0d\n\x0d\n  const undici = require('internal/deps/undici/undici');\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C undici.fetch);\x0d\n  exposeInterface(globalThis\x2C 'FormData'\x2C undici.FormData);\x0d\n  exposeInterface(globalThis\x2C 'Headers'\x2C undici.Headers);\x0d\n  exposeInterface(globalThis\x2C 'Request'\x2C undici.Request);\x0d\n  exposeInterface(globalThis\x2C 'Response'\x2C undici.Response);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let webcrypto;\x0d\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                       ObjectGetOwnPropertyDescriptor({\x0d\n                         get crypto() {\x0d\n                           webcrypto ??= require('internal/crypto/webcrypto');\x0d\n                           return webcrypto.crypto;\x0d\n                         }\x0d\n                       }\x2C 'crypto'));\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    webcrypto ??= require('internal/crypto/webcrypto');\x0d\n    ObjectDefineProperty(globalThis\x2C 'Crypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.Crypto\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'CryptoKey'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.CryptoKey\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'SubtleCrypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.SubtleCrypto\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupFetch\x2C\x0d\n  setupWebCrypto\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x1de1b543f7e,96,0,18262,C0O0C4O18262,,
code-creation,Function,10,128124,0x1de1b544bae,497, node:internal/bootstrap/pre_execution:1:1,0x1de1b543ef8,~
code-source-info,0x1de1b544bae,96,0,18262,C0O0C214O28C220O47C226O72C232O107C238O119C244O135C250O165C256O253C262O253C267O209C273O228C279O319C285O319C290O291C296O429C302O429C307O359C313O379C319O407C325O477C331O477C336O466C342O539C348O539C353O565C358O505C364O589C370O589C374O589C376O17813C383O17835C389O17858C395O17881C401O17905C407O17920C413O17939C419O17957C425O17976C431O18007C437O18034C443O18058C449O18089C455O18122C461O18145C467O18173C473O18197C479O18218C485O18242C491O17828C496O18261,,
code-creation,LazyCompile,10,128345,0x1de1b546476,225,prepareMainThreadExecution node:internal/bootstrap/pre_execution:28:36,0x1de1b543fb0,~
code-source-info,0x1de1b
code-creation,LazyCompile,10,128458,0x1de1b547886,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x3d28e28bdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x1de1b547886,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
tick,0x7ffdf67ba8cf,129870,0,0x0,3,0x7ff7c08240c0,0x1de1b546485,0x1de1b542065
code-creation,LazyCompile,10,129938,0x1de1b54a0be,397,patchProcessObject node:internal/bootstrap/pre_execution:89:28,0x1de1b544000,~
code-source-info,0x1de1b54a0be
code-creation,LazyCompile,10,130026,0x1de1b54a3ee,69,internalBinding node:internal/bootstrap/loaders:164:45,0x359b0d4f840,~
code-source-info,0x1de1b54a3ee,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,130130,0x1de1b54a6a6,69,refreshHrtimeBuffer node:internal/process/per_thread:66:29,0x3d28e298598,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x1de1b54a6a6,30,1477,1925,C0O1668C7O1695C10O1703C17O1679C25O1677C31O1858C38O1894C41O1902C53O1875C61O1873C68O1924,,
tick,0x7ff7c11d2bf4,130700,0,0x0,3,0x7ff7c08240c0,0x1de1b54a0e6,0x1de1b54648b,0x1de1b542065
code-creation,LazyCompile,10,130893,0x1de1b54b766,832,resolve node:path:158:10,0x1599be4d510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x1de1b54b766,41,4875,9786,C0O4875C3O4913C6O4941C9O4973C11O5005C15O5012C19O5019C21O5019C26O5044C28O5057C29O5063C34O5080C36O5091C40O5105C49O5105C54O5186C60O5193C65O5213C69O5267C75O5274C80O5292C84O5307C89O5307C96O5706C99O5721C110O5729C114O5724C123O5758C128O5758C133O5907C137O5947C142O5974C156O5974C163O5947C170O6025C174O6025C178O6008C185O6084C192O6084C200O6123C202O6119C207O6158C217O6234C222O6263C224O6286C227O6314C229O6341C237O6341C243O6416C245O6424C250O6442C253O6446C259O6534C262O6558C266O6602C269O6606C275O6802C277O6832C282O6852C290O6852C297O6836C303O6967C306O6992C307O7071C309O7065C319O7109C323O7109C330O7093C336O7161C341O7056C344O7190C346O7196C353O7207C358O7250C372O7250C378O7325C383O7411C385O7405C395O7450C399O7450C406O7434C412O7504C417O7396C420O7537C422O7543C429O7554C434O7608C439O7702C441O7696C451O7744C455O7744C462O7728C468O7800C473O7687C476O7837C478O7843C485O7856C490O7927C495O7962C508O7976C521O7976C531O8032C538O8119C543O8157C546O8161C554O8209C561O8209C569O8248C571O8244C576O8304C591O8313C597O8356C600O8378C602O8386C612O8409C620O8409C627O8393C633O8554C635O8584C638O8637C644O8644C649O8679C655O8686C660O8704C665O8708C672O8762C676O8762C680O8743C685O8894C689O8933C694O8987C698O9039C704O9046C709O9062C713O9094C719O9123C734O9163C739O9188C742O9228C746O9261C752O9268C757O9286C759O5027C764O4987C770O9529C775O9575C789O9544C795O9660C801O9696C811O9715C819O9742C823O9759C831O9781,,
tick,0x7ff7c017188f,132923,0,0x0,3,0x7ff7c08240c0,0x1de1b54a180,0x1de1b54648b,0x1de1b542065
code-creation,LazyCompile,10,132961,0x1de1b54ed7e,30,validateString node:internal/validators:118:24,0x359b0d7ce70,~
script-source,15,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x1de1b54ed7e,15,3534,3646,C0O3553C6O3589C22O3595C27O3589C29O3645,,
code-creation,LazyCompile,10,133332,0x1de1b54f71e,17,isPathSeparator node:path:52:25,0x1599be4cf90,~
code-source-info,0x1de1b54f71e,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,133366,0x1de1b54f81e,35,isWindowsDeviceRoot node:path:60:29,0x1599be4d408,~
code-source-info,0x1de1b54f81e,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,133413,0x1de1b54f93e,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x359b0d7eee8,~
script-source,94,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x1de1b54f93e,94,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,133669,0x1de1b54ffa6,442,normalizeString node:path:66:25,0x1599be4d458,~
code-source-info,0x1de1b54ffa6,41,2226,4212,C0O2292C3O2323C5O2345C8O2363C10O2380C12O2399C14O2412C18O2404C23O2445C27O2438C32O2460C37O2467C45O2517C51O2547C53O2571C58O2609C64O2641C66O2661C69O2655C76O2673C83O2713C85O2722C90O2748C97O2755C104O2780C111O2802C114O2837C118O2844C122O2802C130O2853C132O2849C139O2878C142O2913C146O2920C150O2878C158O2929C160O2925C165O2960C172O2967C177O3010C182O3010C188O3067C190O3086C195O3111C198O3136C202O3196C215O3202C221O3304C225O3311C231O3317C234O3317C239O3315C243O3389C246O3417C248O3440C250O3476C256O3483C261O3505C264O3528C266O3564C269O3592C271O3615C273O3658C277O3702C283O3709C293O3718C308O3751C313O3818C319O3825C324O3841C326O3851C330O3863C335O3900C345O3863C363O3936C370O3979C380O3942C386O3997C388O4019C391O4031C395O4052C398O4074C402O4096C404O4109C406O4105C413O4126C418O4143C425O4172C428O2422C433O2386C439O4198C441O4209,,
code-creation,LazyCompile,10,133817,0x1de1b5506c6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:130:33,0x1de1b544050,~
code-source-info,0x1de1b5506c6,96,4358,4593,C16O4411C21O4411C26O4438C28O4456C36O4486C43O4552C49O4571C56O4456C62O4592,,
code-creation,LazyCompile,10,133867,0x1de1b550866,82,getOptionValue node:internal/options:39:24,0x2b5dd73db40,~
script-source,91,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0x1de1b550866,91,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,133988,0x1de1b550c16,33,getCLIOptionsFromBinding node:internal/options:18:34,0x2b5dd73d848,~
code-source-info,0x1de1b550c16,91,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,134232,0x1de1b550d96,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:277:33,0x1de1b5443c0,~
code-source-info,0x1de1b550d96,96,8711,8942,C0O8754C6O8754C11O8727C16O8827C22O8827C27O8798C32O8870C35O8895C40O8870C45O8941,,
code-creation,LazyCompile,10,134283,0x1de1b550f2e,77,toggleTraceCategoryState node:internal/process/per_thread:390:34,0x3d28e298cb8,~
code-source-info,0x1de1b550f2e,30,11548,11855,C0O11573C4O11603C10O11639C16O11671C21O11715C26O11716C33O11660C39O11742C44O11763C49O11763C55O11783C61O11816C66O11837C71O11837C76O11854,,
code-creation,LazyCompile,10,134325,0x1de1b5510de,42,setupPerfHooks node:internal/bootstrap/pre_execution:283:24,0x1de1b544410,~
code-source-info,0x1de1b5510de,96,8969,9092,C0O8977C6O8977C11O9013C16O9014C20O9038C26O9038C31O9068C36O9069C41O9091,,
code-creation,LazyCompile,10,134369,0x1de1b55125e,42,refreshTimeOrigin node:internal/perf/performance:181:27,0x1058666b218,~
script-source,73,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('name');\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('type');\x0d\n  }\x0d\n  type = `${type}`;\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x1de1b55125e,73,4040,4203,C0O4048C7O4069C10O4081C25O4168C28O4168C35O4048C41O4202,,
code-creation,LazyCompile,10,134657,0x1de1b551986,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x1599be62118,~
script-source,46,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x1de1b551986,46,549,589,C0O557C5O570C11O568C18O588,,
tick,0x7ffdf679b38d,134732,0,0x0,3,0x7ff7c08240c0,0x1de1b5510ee,0x1de1b546498,0x1de1b542065
code-creation,LazyCompile,10,134751,0x1de1b551bf6,62,setupInspectorHooks node:internal/bootstrap/pre_execution:288:29,0x1de1b544460,~
code-source-info,0x1de1b551bf6,96,9124,9690,C0O9473C6O9477C11O9502C17O9571C23O9571C28O9539C33O9554C38O9618C44O9618C49O9646C54O9647C61O9689,,
code-creation,Eval,10,134849,0x1de1b551fa6,5, node:internal/inspector_async_hook:1:1,0x1de1b551df0,~
script-source,97,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x1de1b551fa6,97,0,2048,C0O0C4O2048,,
code-creation,Function,10,134955,0x1de1b5521c6,79, node:internal/inspector_async_hook:1:1,0x1de1b551f20,~
code-source-info,0x1de1b5521c6,97,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,135036,0x1de1b55282e,69,setupWarningHandler node:internal/bootstrap/pre_execution:142:29,0x1de1b5440a0,~
code-source-info,0x1de1b55282e,96,4625,4830,C0O4663C6O4663C11O4646C16O4703C24O4707C33O4752C38O4756C45O4773C50O4789C53O4797C61O4797C68O4829,,
code-creation,LazyCompile,10,135132,0x1de1b55298e,20,addListener node:events:618:58,0x2711fd6ba38,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x1de1b55298e,23,18854,18928,C0O18876C14O18883C19O18925,,
code-creation,LazyCompile,10,136536,0x1de1b555056,378,_addListener node:events:555:22,0x2711fd6b998,~
code-source-info,0x1de1b
code-creation,LazyCompile,10,136662,0x1de1b555366,15,checkListener node:events:258:23,0x2711fd6b2f8,~
code-source-info,0x1de1b555366,23,7884,7942,C0O7900C8O7900C14O7941,,
tick,0x7ff7c09e527d,136691,0,0x0,3,0x7ff7c08240c0,0x1de1b55299c,0x1de1b55286b,0x1de1b5464a4,0x1de1b542065
code-creation,LazyCompile,10,136739,0x1de1b555456,30, node:internal/validators:236:42,0x359b0d7d308,~
code-source-info,0x1de1b555456,15,7461,7580,C0O7483C6O7521C22O7527C27O7521C29O7579,,
code-creation,LazyCompile,10,136861,0x1de1b5556d6,380,emit node:events:475:44,0x2711fd6b8d8,~
code-source-info,0x1de1b5556d
code-creation,LazyCompile,10,136982,0x1de1b555a7e,172,startListeningIfSignal node:internal/process/signal:22:32,0x359b0d7dca8,~
script-source,93,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x1de1b555a7e,93,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,137090,0x1de1b555e3e,19,isSignal node:internal/process/signal:17:18,0x359b0d7daf0,~
code-source-info,0x1de1b555e3e,93,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,137138,0x1de1b556076,156,setupFetch node:internal/bootstrap/pre_execution:153:20,0x1de1b5440f0,~
code-source-info,0x1de1b556076,96,4888,5357,C0O4896C8O4901C14O4948C15O4955C16O4966C24O4966C28O5020C34O5020C39O5063C46O5079C52O5107C57O5063C62O5118C69O5134C75O5165C80O5118C85O5179C92O5195C98O5225C103O5179C108O5238C115O5254C121O5284C126O5238C131O5297C138O5313C144O5344C149O5297C155O5356,,
new,MemoryChunk,0x29bccd80000,262144
code-creation,Function,11,137255,0x29bccd83060,572,getOptionValue node:internal/options:39:24,0x2b5dd73db40,^
code-source-info,0x29bccd83060,91,940,1190,,,
code-creation,Function,11,137280,0x29bccd83300,216,isPathSeparator node:path:52:25,0x1599be4cf90,^
code-source-info,0x29bccd83300,41,1794,1876,,,
code-creation,Function,11,137324,0x29bccd83440,3076,normalizeString node:path:66:25,0x1599be4d458,^
code-source-info,0x29bccd83440,41,2226,4212,,,
code-creation,LazyCompile,10,137393,0x1de1b556886,268,setupWebCrypto node:internal/bootstrap/pre_execution:170:24,0x1de1b544140,~
code-source-info,0x1de1b556886,96,5490,6624,C0O5490C8O5498C13O5510C18O5517C23O5527C33O5562C39O5562C45O5620C46O5627C47O5642C48O5642C50O5656C61O5677C71O5723C102O5723C108O5656C113O6000C121O6004C126O6029C132O6049C146O6063C150O6059C152O6106C163O6127C177O6251C185O6106C190O6272C201O6293C215O6420C223O6272C228O6444C239O6465C253O6595C261O6444C267O6623,,
code-creation,LazyCompile,10,137467,0x1de1b556b06,5,get node:internal/bootstrap/node:135:6,0x359b0d54a28,~
script-source,10,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\x0d\n// responsible for setting up node.js core before executing main scripts\x0d\n// under `lib/internal/main/`.\x0d\n//\x0d\n// This file is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority\x0d\n// of the code here focuses on setting up the global proxy and the process\x0d\n// object in a synchronous manner.\x0d\n// As special caution is given to the performance of the startup process\x2C\x0d\n// many dependencies are invoked lazily.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `NativeModule`.\x0d\n//\x0d\n// This file is run to bootstrap both the main thread and the worker threads.\x0d\n// After this file is run\x2C certain properties are setup according to the\x0d\n// configuration of the Node.js instance using the files in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/bootstrap/pre_execution.js` depending on the runtime states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFill\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPreventExtensions\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  ReflectSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst nativeModule = internalBinding('native_module');\x0d\n\x0d\n// TODO(@jasnell): Once this has gone through one full major\x0d\n// release cycle\x2C remove the Proxy and setter and update the\x0d\n// getter to either return a read-only object or always return\x0d\n// a freshly parsed version of nativeModule.config.\x0d\n\x0d\nconst deprecationHandler = {\x0d\n  warned: false\x2C\x0d\n  message: 'Setting process.config is deprecated. ' +\x0d\n           'In the future the property will be read-only.'\x2C\x0d\n  code: 'DEP0150'\x2C\x0d\n  maybeWarn() {\x0d\n    if (!this.warned) {\x0d\n      process.emitWarning(this.message\x2C {\x0d\n        type: 'DeprecationWarning'\x2C\x0d\n        code: this.code\x0d\n      });\x0d\n      this.warned = true;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C key\x2C descriptor) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\x0d\n  }\x2C\x0d\n\x0d\n  deleteProperty(target\x2C key) {\x0d\n    this.maybeWarn();\x0d\n    delete target[key];\x0d\n  }\x2C\x0d\n\x0d\n  preventExtensions(target) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectPreventExtensions(target);\x0d\n  }\x2C\x0d\n\x0d\n  set(target\x2C key\x2C value) {\x0d\n    this.maybeWarn();\x0d\n    return ReflectSet(target\x2C key\x2C value);\x0d\n  }\x2C\x0d\n\x0d\n  get(target\x2C key\x2C receiver) {\x0d\n    const val = ReflectGet(target\x2C key\x2C receiver);\x0d\n    if (val != null && typeof val === 'object') {\x0d\n      // eslint-disable-next-line node-core/prefer-primordials\x0d\n      return new Proxy(val\x2C deprecationHandler);\x0d\n    }\x0d\n    return val;\x0d\n  }\x2C\x0d\n\x0d\n  setPrototypeOf(target\x2C proto) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectSetPrototypeOf(target\x2C proto);\x0d\n  }\x0d\n};\x0d\n\x0d\n// eslint-disable-next-line node-core/prefer-primordials\x0d\nlet processConfig = new Proxy(\x0d\n  JSONParse(nativeModule.config)\x2C\x0d\n  deprecationHandler);\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return processConfig; }\x2C\x0d\n  set(value) {\x0d\n    deprecationHandler.maybeWarn();\x0d\n    processConfig = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n\x0d\n  process.getActiveResourcesInfo = function() {\x0d\n    const timerCounts = internalTimers.getTimerCounts();\x0d\n    return ArrayPrototypeConcat(\x0d\n      rawMethods._getActiveRequestsInfo()\x2C\x0d\n      rawMethods._getActiveHandlesInfo()\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\x0d\n  };\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\nif (!config.noBrowserGlobals) {\x0d\n  // Override global console from the one provided by the VM\x0d\n  // to the one implemented by Node.js\x0d\n  // https://console.spec.whatwg.org/#console-namespace\x0d\n  exposeNamespace(globalThis\x2C 'console'\x2C\x0d\n                  createGlobalConsole(globalThis.console));\x0d\n\x0d\n  const { URL\x2C URLSearchParams } = require('internal/url');\x0d\n  // https://url.spec.whatwg.org/#url\x0d\n  exposeInterface(globalThis\x2C 'URL'\x2C URL);\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams\x0d\n  exposeInterface(globalThis\x2C 'URLSearchParams'\x2C URLSearchParams);\x0d\n\x0d\n  const {\x0d\n    TextEncoder\x2C TextDecoder\x0d\n  } = require('internal/encoding');\x0d\n  // https://encoding.spec.whatwg.org/#textencoder\x0d\n  exposeInterface(globalThis\x2C 'TextEncoder'\x2C TextEncoder);\x0d\n  // https://encoding.spec.whatwg.org/#textdecoder\x0d\n  exposeInterface(globalThis\x2C 'TextDecoder'\x2C TextDecoder);\x0d\n\x0d\n  const {\x0d\n    AbortController\x2C\x0d\n    AbortSignal\x2C\x0d\n  } = require('internal/abort_controller');\x0d\n  exposeInterface(globalThis\x2C 'AbortController'\x2C AbortController);\x0d\n  exposeInterface(globalThis\x2C 'AbortSignal'\x2C AbortSignal);\x0d\n\x0d\n  const {\x0d\n    EventTarget\x2C\x0d\n    Event\x2C\x0d\n  } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'EventTarget'\x2C EventTarget);\x0d\n  exposeInterface(globalThis\x2C 'Event'\x2C Event);\x0d\n  const {\x0d\n    MessageChannel\x2C\x0d\n    MessagePort\x2C\x0d\n    MessageEvent\x2C\x0d\n  } = require('internal/worker/io');\x0d\n  exposeInterface(globalThis\x2C 'MessageChannel'\x2C MessageChannel);\x0d\n  exposeInterface(globalThis\x2C 'MessagePort'\x2C MessagePort);\x0d\n  exposeInterface(globalThis\x2C 'MessageEvent'\x2C MessageEvent);\x0d\n\x0d\n  // https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope\x0d\n  const timers = require('timers');\x0d\n  defineOperation(globalThis\x2C 'clearInterval'\x2C timers.clearInterval);\x0d\n  defineOperation(globalThis\x2C 'clearTimeout'\x2C timers.clearTimeout);\x0d\n  defineOperation(globalThis\x2C 'setInterval'\x2C timers.setInterval);\x0d\n  defineOperation(globalThis\x2C 'setTimeout'\x2C timers.setTimeout);\x0d\n\x0d\n  defineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\n  // https://www.w3.org/TR/hr-time-2/#the-performance-attribute\x0d\n  defineReplacableAttribute(globalThis\x2C 'performance'\x2C\x0d\n                            require('perf_hooks').performance);\x0d\n\x0d\n  // Non-standard extensions:\x0d\n  defineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\n  defineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n}\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because snapshot is built without code cache.\x0d\n  // TODO(joyeecheung): https://github.com/nodejs/node/issues/31074\x0d\n  // Make it possible to build snapshot with code cache\x0d\n  get cached_builtins() {\x0d\n    return nativeModule.hasCachedBuiltins();\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n// Preload modules so that they are included in the builtin snapshot.\x0d\nrequire('fs');\x0d\nrequire('v8');\x0d\nrequire('vm');\x0d\nrequire('url');\x0d\nrequire('internal/options');\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x0d\n  });\x0d\n  // Make process globally available to users by putting it on the global proxy\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    value: process\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n    atob\x2C\x0d\n    btoa\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    'Buffer': {\x0d\n      value: Buffer\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'atob': {\x0d\n      value: atob\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'btoa': {\x0d\n      value: btoa\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction createGlobalConsole(consoleFromVM) {\x0d\n  const consoleFromNode =\x0d\n    require('internal/console/global');\x0d\n  if (config.hasInspector) {\x0d\n    const inspector = require('internal/util/inspector');\x0d\n    // This will be exposed by `require('inspector').console` later.\x0d\n    inspector.consoleFromVM = consoleFromVM;\x0d\n    // TODO(joyeecheung): postpone this until the first time inspector\x0d\n    // is activated.\x0d\n    inspector.wrapConsole(consoleFromNode\x2C consoleFromVM);\x0d\n    const { setConsoleExtensionInstaller } = internalBinding('inspector');\x0d\n    // Setup inspector command line API.\x0d\n    setConsoleExtensionInstaller(inspector.installConsoleExtensions);\x0d\n  }\x0d\n  return consoleFromNode;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#Replaceable\x0d\nfunction defineReplacableAttribute(target\x2C name\x2C value) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x1de1b556b06,10,4267,4295,C0O4272C4O4293,,
code-creation,LazyCompile,10,138167,0x1de1b557c76,52,get node:internal/bootstrap/node:112:6,0x359b0d54988,~
code-source-info,0x1de1b557c76,10,3630,3901,C0O3673C14O3673C20O3713C29O3830C35O3852C43O3837C48O3872C49O3885C51O3896,,
code-creation,LazyCompile,10,138235,0x1de1b557e9e,75,setupDebugEnv node:internal/bootstrap/pre_execution:249:23,0x1de1b5442d0,~
code-source-info,0x1de1b557e9e,96,7933,8148,C0O7941C6O7941C11O7974C19O8002C24O8006C29O7975C34O8022C42O8026C48O8071C54O8071C59O8108C64O8121C69O8122C74O8147,,
code-creation,LazyCompile,10,138311,0x1de1b5582d6,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x2711fd619f0,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x1de1b5582d6,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
tick,0x7ff7c0a29640,138570,0,0x0,3,0x7ff7c08240c0,0x1de1b5464ea,0x1de1b542065
code-creation,LazyCompile,10,138587,0x1de1b5588de,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:228:40,0x1de1b544208,~
code-source-info,0x1de1b5588de,96,7477,7671,C0O7485C8O7490C14O7531C15O7538C16O7574C22O7574C27O7555C32O7626C38O7660C43O7660C48O7670,,
code-creation,LazyCompile,10,138648,0x1de1b558af6,62,initializeReport node:internal/bootstrap/pre_execution:238:26,0x1de1b544258,~
code-source-info,0x1de1b558af6,96,7700,7907,C0O7700C8O7727C16O7727C21O7716C27O7766C42O7787C47O7861C55O7766C61O7906,,
code-creation,Eval,10,138797,0x1de1b5590a6,5, node:internal/process/report:1:1,0x1de1b558eb0,~
script-source,98,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x1de1b5590a6,98,0,2666,C0O0C4O2666,,
code-creation,Function,10,138938,0x1de1b559bb6,306, node:internal/process/report:1:1,0x1de1b559020,~
code-source-info,0x1de1b559bb6,98,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,139115,0x1de1b55ba6e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:257:40,0x1de1b544320,~
code-source-info,0x1de1b55ba6e,96,8252,8352,C0O8289C6O8289C11O8268C16O8330C20O8351,,
code-creation,LazyCompile,10,139165,0x1de1b55bb76,57,addSignalHandler node:internal/process/report:98:26,0x1de1b5590d8,~
code-source-info,0x1de1b55bb76,98,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,139215,0x1de1b55c13e,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:263:46,0x1de1b544370,~
code-source-info,0x1de1b55c13e,96,8401,8675,C0O8401C8O8424C18O8424C23O8470C25O8488C26O8495C27O8501C35O8501C40O8531C45O8532C50O8593C58O8593C63O8571C69O8613C74O8621C79O8624C84O8621C91O8674,,
code-creation,LazyCompile,10,139276,0x1de1b55c3ce,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:393:37,0x1de1b544540,~
code-source-info,0x1de1b55c3ce,96,12545,13091,C0O12553C3O12565C8O12569C14O12608C20O12608C25O12654C33O12677C38O12681C46O12654C52O12708C53O12718C57O12708C61O12802C64O12817C73O12878C76O12886C81O12890C90O12938C93O12953C102O12997C108O12997C113O13021C118O13022C124O13062C127O13077C132O13062C137O13090,,
code-creation,LazyCompile,10,139347,0x1de1b55c55e,21,assert node:internal/assert:11:16,0x2711fd609c8,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x1de1b55c55e,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,139840,0x1de1b55d3d6,5, node:child_process:1:1,0x1de1b55cf00,~
script-source,99,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x1de1b55d3d6,99,0,25421,C0O0C4O25421,,
code-creation,Function,10,141101,0x1de1b55de36,748, node:child_process:1:1,0x1de1b55d350,~
code-source-info,0x1de1b55de
tick,0x7ffdf679b393,141197,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x1de1b542fec,0x1de1b5422dd,0x1de1b55c43a,0x1de1b546502,0x1de1b542065
code-creation,LazyCompile,10,141348,0x1de1b560406,82,debuglog node:internal/util/debuglog:71:18,0x2711fd61d40,~
code-source-info,0x1de1b560406,22,2302,3328,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3216C74O3169C79O3311C81O3325,,
code-creation,Eval,10,142056,0x1de1b5633ee,5, node:internal/child_process:1:1,0x1de1b562cf0,~
script-source,100,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x1de1b5633ee,100,0,32650,C0O0C4O32650,,
tick,0x7ff7c01718ab,143410,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x1de1b542fec,0x1de1b5422dd,0x1de1b55e07a,0x1de1b54300d,0x1de1b5422dd,0x1de1b55c43a,0x1de1b546502,0x1de1b542065
code-creation,Function,10,143431,0x1de1b564a0e,1265, node:internal/child_process:1:1,0x1de1b563368,~
code-source-info,0x1de1b564a0e
code-creation,Function,10,143573,0x1de1b565186,35,<instance_members_initializer> node:internal/child_process:525:3,0x1de1b5640d0,~
code-source-info,0x1de1b565186,100,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
tick,0x7ff7c0c12fbf,144513,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x1de1b542fec,0x1de1b5422dd,0x1de1b564bfc,0x1de1b54300d,0x1de1b5422dd,0x1de1b55e07a,0x1de1b54300d,0x1de1b5422dd,0x1de1b55c43a,0x1de1b546502,0x1de1b542065
code-creation,Eval,10,144606,0x1de1b569476,5, node:net:1:1,0x1de1b568c78,~
script-source,101,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive && enable !== this[kSetKeepAlive]) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && handle.setNoDelay) {\x0d\n    handle.setNoDelay(true);\x0d\n  }\x0d\n\x0d\n  if (self.keepAlive && self.setKeepAlive) {\x0d\n    handle.setKeepAlive(true\x2C handle.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x1de1b569476,101,0,51035,C0O0C4O51035,,
code-creation,Function,10,146677,0x1de1b56c356,2547, node:net:1:1,0x1de1b5693f0,~
code-source-info,0x1de1b56c356,101,0,51035,C0O0C417O1183C423O1200C429O1226C435O1238C441O1249C447O1265C453O1284C459O1309C464O1334C469O1384C475O1384C479O1384C481O1419C487O1419C491O1419C493O1451C499O1451C504O1484C518O1485C524O1451C526O1618C532O1618C537O1543C543O1552C548O1563C553O1574C559O1599C565O1659C571O1659C575O1659C577O1748C580O1748C585O1699C591O1717C597O1731C603O1793C609O1793C614O1782C620O1841C623O1841C628O1821C634O1892C637O1892C642O1875C648O1992C651O1992C656O1936C662O1944C668O1974C674O2092C677O2092C682O2033C688O2042C694O2073C700O2228C706O2228C711O2134C717O2149C728O2191C734O2208C740O2438C746O2438C751O2273C757O2291C763O2308C769O2325C774O2346C780O2358C785O2375C790O2396C796O2408C802O2422C808O2856C814O2856C819O2856C824O2505C830O2538C836O2565C842O2593C848O2619C854O2648C860O2680C866O2709C872O2733C878O2760C884O2779C890O2805C896O2826C902O2910C908O2910C913O2893C919O3073C925O3073C930O2954C936O2978C942O2999C948O3017C954O3036C960O3053C966O3134C969O3134C973O3134C975O3236C981O3236C986O3176C992O3209C998O3319C999O3319C1001O3333C1002O3333C1004O3343C1005O3343C1007O3359C1008O3359C1010O3402C1016O3402C1021O3385C1027O3443C1033O3443C1038O3430C1044O3500C1046O3500C1048O3538C1050O3538C1052O3565C1055O3573C1062O3582C1065O3565C1067O3611C1071O3611C1073O7211C1076O7211C1080O7211C1082O7256C1085O7256C1089O7256C1091O7302C1094O7302C1098O7302C1100O7348C1103O7348C1107O7348C1109O7408C1112O7408C1116O7408C1118O12064C1121O12092C1129O12110C1134O12117C1139O12064C1144O12130C1150O12166C1155O12130C1160O12209C1163O12216C1172O12238C1176O12474C1179O12481C1188O12498C1192O14068C1195O14075C1202O14096C1206O14121C1209O14128C1218O14149C1222O14677C1225O14684C1234O14705C1238O15106C1241O15113C1250O15136C1254O15642C1257O15649C1266O15667C1270O15722C1276O15750C1290O15786C1298O15722C1303O15841C1309O15869C1323O15896C1331O15841C1336O15988C1342O16016C1356O16051C1364O15988C1369O16388C1375O16416C1389O16451C1397O16388C1402O16544C1408O16572C1413O16583C1419O16607C1430O16544C1435O16988C1438O16995C1447O17011C1451O17258C1454O17265C1463O17279C1467O17480C1470O17487C1479O17503C1483O17857C1486O17864C1495O17881C1499O18080C1502O18087C1511O18102C1515O18456C1518O18463C1527O18485C1531O18649C1534O18656C1543O18675C1547O19674C1550O19681C1559O19704C1563O20184C1571O20184C1576O20308C1584O20308C1594O20411C1602O20411C1612O20511C1620O20511C1630O20607C1633O20614C1642O20637C1650O20931C1658O20931C1668O21034C1676O21034C1686O21128C1689O21135C1694O21145C1698O21163C1706O21219C1709O21226C1718O21250C1726O22049C1729O22056C1738O22074C1746O22153C1749O22160C1758O22177C1766O22428C1774O22428C1784O22572C1792O22572C1802O26164C1805O26171C1814O26189C1822O30744C1825O30751C1834O30765C1842O30972C1845O30979C1854O30995C1862O34520C1865O34548C1877O34572C1886O34520C1896O34585C1902O34585C1912O38706C1915O38713C1926O38732C1934O40250C1937O40257C1950O40274C1958O44343C1964O44371C1985O44405C1997O44343C2007O44503C2010O44510C2023O44528C2031O45846C2034O45853C2047O45878C2055O46675C2058O46682C2071O46698C2079O47609C2082O47616C2095O47646C2103O48146C2106O48153C2118O48176C2131O48200C2139O48533C2145O48558C2166O48583C2178O48624C2190O48533C2200O48674C2206O48702C2223O48729C2235O48765C2247O48674C2257O48810C2260O48817C2273O48840C2281O49095C2284O49102C2297O49116C2305O49228C2308O49235C2321O49251C2329O49368C2331O49424C2332O49424C2334O49433C2345O49457C2346O49457C2348O49483C2357O50213C2362O50495C2372O50538C2382O50577C2392O50595C2402O50863C2412O50893C2422O50905C2432O50928C2442O50945C2452O50964C2462O50975C2472O50986C2482O51005C2537O50510C2546O51034,,
tick,0x7ff7c0171926,147007,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x1de1b542fec,0x1de1b5422dd,0x1de1b564bfc,0x1de1b54300d,0x1de1b5422dd,0x1de1b55e07a,0x1de1b54300d,0x1de1b5422dd,0x1de1b55c43a,0x1de1b546502,0x1de1b542065
code-creation,Eval,10,147270,0x1de1b571cf6,5, node:internal/net:1:1,0x1de1b571b30,~
script-source,102,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x1de1b571cf6,102,0,1818,C0O0C4O1818,,
code-creation,Function,10,147368,0x1de1b5720e6,617, node:internal/net:1:1,0x1de1b571c70,~
code-source-info,0x1de1b5720e6,102,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,147641,0x1de1b573aee,5, node:internal/dtrace:1:1,0x1de1b5739a8,~
script-source,103,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x1de1b573aee,103,0,589,C0O0C4O589,,
code-creation,Function,10,147691,0x1de1b573fc6,140, node:internal/dtrace:1:1,0x1de1b573a68,~
code-source-info,0x1de1b573fc6,103,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,147897,0x1de1b574f8e,34,protoGetter node:net:740:21,0x1de1b5698b8,~
code-source-info,0x1de1b574f8e,101,20034,20180,C0O20056C8O20084C13O20095C20O20162C27O20056C33O20179,,
code-creation,Eval,10,148513,0x1de1b57a31e,5, node:dgram:1:1,0x1de1b579db8,~
script-source,104,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x1de1b57a31e,104,0,28325,C0O0C4O28325,,
code-creation,Function,10,149682,0x1de1b57c22e,1501, node:dgram:1:1,0x1de1b57a298,~
code-source-info,0x1de1b57c22e
tick,0x7ff7c08d5ad4,149884,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x1de1b542fec,0x1de1b5422dd,0x1de1b564c08,0x1de1b54300d,0x1de1b5422dd,0x1de1b55e07a,0x1de1b54300d,0x1de1b5422dd,0x1de1b55c43a,0x1de1b546502,0x1de1b542065
code-creation,Eval,10,150045,0x1de1b57f636,5, node:internal/dgram:1:1,0x1de1b57f430,~
script-source,105,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x1de1b57f636,105,0,1941,C0O0C4O1941,,
code-creation,Function,10,150153,0x1de1b57f8fe,196, node:internal/dgram:1:1,0x1de1b57f5b0,~
code-source-info,0x1de1b57f8fe,105,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
new,MemoryChunk,0x19758880000,262144
code-creation,LazyCompile,10,150390,0x19758883406,152,deprecate node:internal/util:96:19,0x2711fd45aa8,~
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEnumerableProperty\x2C\x0d\n};\x0d\n
code-source-info,0x19758883406,16,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
tick,0x7ff7c017186b,151090,0,0x0,3,0x7ff7c08240c0,0x1de1b57c670,0x1de1b54300d,0x1de1b5422dd,0x1de1b564c08,0x1de1b54300d,0x1de1b5422dd,0x1de1b55e07a,0x1de1b54300d,0x1de1b5422dd,0x1de1b55c43a,0x1de1b546502,0x1de1b542065
code-creation,Function,11,151166,0x29bccd840c0,1344,deprecate node:internal/util:96:19,0x2711fd45aa8,^
code-source-info,0x29bccd840c0,16,2503,3720,,,
code-creation,Function,11,151194,0x29bccd84660,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x359b0d4fdc0,^
code-source-info,0x29bccd84660,9,10647,11000,,,
code-creation,Function,11,151216,0x29bccd84960,548,internalBinding node:internal/bootstrap/loaders:164:45,0x359b0d4f840,^
code-source-info,0x29bccd84960,9,5278,5523,,,
code-creation,Function,11,151246,0x29bccd84c00,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x359b0d4fcf0,^
code-source-info,0x29bccd84c00,9,9827,10410,,,
code-creation,Eval,10,151430,0x19758885ad6,5, node:internal/socket_list:1:1,0x19758885980,~
script-source,106,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x19758885ad6,106,0,2813,C0O0C4O2813,,
code-creation,Function,10,151598,0x19758886116,126, node:internal/socket_list:1:1,0x19758885a50,~
code-source-info,0x19758886116,106,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,151786,0x19758886cb6,14,customPromiseExecFunction node:child_process:230:35,0x1de1b55d9b8,~
code-source-info,0x19758886cb6,99,6803,7183,C0O6803C9O6818C13O7180,,
code-creation,LazyCompile,10,151856,0x19758888cd6,129,_forkChild node:child_process:169:20,0x1de1b55d458,~
code-source-info,0x19758888cd6,99,5058,5540,C0O5058C8O5122C19O5131C22O5145C29O5122C35O5156C40O5156C45O5171C50O5171C54O5199C72O5199C77O5199C79O5247C84O5255C97O5255C103O5390C108O5398C121O5398C128O5539,,
tick,0x7ffdf681cdb4,152517,1,0x7ff7c0229b60,6,0x7ff7c0bf59a0,0x19758888cfe,0x1de1b55c444,0x1de1b546502,0x1de1b542065
tick,0x7ffdf681cc34,154475,1,0x7ff7c0229b60,6,0x7ff7c0bf59a0,0x19758888cfe,0x1de1b55c444,0x1de1b546502,0x1de1b542065
code-creation,LazyCompile,10,155565,0x197588896d6,396,setupChannel node:internal/child_process:571:22,0x1de1b5636a0,~
code-source-info,0x197588896d
code-creation,LazyCompile,10,155692,0x1975888beae,72,Control node:internal/child_process:529:14,0x1de1b563ed8,~
code-source-info,0x1975888beae,100,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,155736,0x1975888bfe6,21,EventEmitter node:events:208:22,0x2711fd6b1b0,~
code-source-info,0x1975888bfe6,23,6474,6524,C0O6486C3O6499C8O6504C13O6504C20O6523,,
code-creation,LazyCompile,10,155796,0x1975888c12e,149,EventEmitter.init node:events:327:29,0x2711fd6b5a8,~
code-source-info,0x1975888c12e,23,10006,10614,C0O10029C6O10066C13O10078C16O10078C21O10104C25O10074C30O10121C32O10136C37O10136C41O10134C45O10161C46O10179C50O10220C60O10213C64O10255C71O10263C80O10291C85O10312C93O10291C98O10366C100O10371C105O10383C108O10396C113O10383C117O10381C123O10556C125O10561C131O10586C138O10596C140O10595C143O10571C148O10613,,
code-creation,Eval,10,156058,0x1975888cc76,5, node:internal/child_process/serialization:1:1,0x1975888c990,~
script-source,107,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x1975888cc76,107,0,4335,C0O0C4O4335,,
code-creation,Function,10,156269,0x1975888d4de,369, node:internal/child_process/serialization:1:1,0x1975888cbf0,~
code-source-info,0x1975888d4de,107,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,156430,0x1975888e17e,23,initMessageChannel node:internal/child_process/serialization:100:21,0x1975888ced8,~
code-source-info,0x1975888e17e,107,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
tick,0x7ff7c0911bde,156505,0,0x0,0,0x7ff7c0a5bed0,0x197588897d9,0x19758888d1e,0x1de1b55c444,0x1de1b546502,0x1de1b542065
code-creation,LazyCompile,10,156588,0x1975888e7d6,19,_getMaxListeners node:events:404:26,0x2711fd6b778,~
code-source-info,0x1975888e7d6,23,12272,12400,C0O12293C6O12327C9O12347C13O12367C14O12383C18O12397,,
code-creation,LazyCompile,10,156628,0x1975888e8ce,5,get node:events:264:16,0x2711fd6b398,~
code-source-info,0x1975888e8ce,23,8043,8085,C0O8053C4O8080,,
code-creation,LazyCompile,10,156691,0x1975888ec2e,322,arrayClone node:events:879:20,0x2711fd6c040,~
code-source-info,0x1975888ec2e,23,26079,26544,C0O26221C42O26244C50O26255C62O26263C71O26268C72O26282C80O26293C92O26301C104O26309C113O26314C114O26328C122O26339C134O26347C146O26355C158O26363C167O26368C168O26382C176O26393C188O26401C200O26409C212O26417C224O26425C233O26430C234O26444C242O26455C254O26463C266O26471C278O26479C290O26487C302O26495C311O26500C312O26509C317O26516C321O26541,,
code-creation,LazyCompile,10,156764,0x1975888eefe,22, node:internal/child_process:706:36,0x197588891f0,~
code-source-info,0x1975888eefe,100,20095,20508,C0O20107C5O20115C15O20115C21O20507,,
code-creation,LazyCompile,10,156851,0x1975888f19e,368,nextTick node:internal/process/task_queues:104:18,0x3d28e29aa50,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0x1975888f19e
code-creation,LazyCompile,10,157146,0x1975888fa0e,21, node:internal/validators:222:42,0x359b0d7d268,~
code-source-info,0x1975888fa0e,15,7036,7140,C0O7055C6O7096C13O7102C18O7096C20O7139,,
code-creation,LazyCompile,10,157183,0x1975888fb0e,15,isEmpty node:internal/fixed_queue:95:10,0x3d28e29fc80,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x1975888fb0e,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,157392,0x1975888ffc6,13,isEmpty node:internal/fixed_queue:67:10,0x3d28e29fa10,~
code-source-info,0x1975888ffc6,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,157425,0x197588900b6,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x3d28e29a960,~
code-source-info,0x197588900b6,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,157486,0x197588901ae,23,newAsyncId node:internal/async_hooks:417:20,0x359b0d78838,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x197588901ae,13,14929,14982,C0O14937C7O14962C16O14977C22O14979,,
code-creation,LazyCompile,10,158291,0x1975889168e,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x359b0d788d8,~
code-source-info,0x1975889168e,13,15404,15667,C0O15442C7O15458C9O15457C13O15553C14O15579C19O15589C26O15612C28O15611C31O15631C32O15635C34O15664,,
code-creation,LazyCompile,10,158334,0x1975889179e,13,initHooksExist node:internal/async_hooks:479:24,0x359b0d78ac8,~
code-source-info,0x1975889179e,13,16671,16705,C0O16679C5O16695C8O16686C12O16702,,
code-creation,LazyCompile,10,158363,0x19758891886,16,hasHooks node:internal/async_hooks:471:18,0x359b0d78a28,~
code-source-info,0x19758891886,13,16531,16579,C0O16542C7O16566C12O16572C15O16576,,
code-creation,LazyCompile,10,158398,0x19758891996,59,push node:internal/fixed_queue:99:7,0x3d28e29fcd0,~
code-source-info,0x19758891996,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,158435,0x19758891ade,24,isFull node:internal/fixed_queue:71:9,0x3d28e29fa60,~
code-source-info,0x19758891ade,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
tick,0x7ffdf679b393,158484,0,0x0,3,0x7ff7c08240c0,0x197588919a0,0x1975888f307,0x1975888ef0d,0x1de1b555827,0x1de1b5550a3,0x1de1b55299c,0x19758888d37,0x1de1b55c444,0x1de1b546502,0x1de1b542065
code-creation,LazyCompile,10,158508,0x19758891bee,37,push node:internal/fixed_queue:75:7,0x3d28e29fac8,~
code-source-info,0x19758891bee,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,158573,0x19758891d0e,30,onNewListener node:child_process:175:51,0x19758888b90,~
code-source-info,0x19758891d0e,99,5295,5384,C0O5309C2O5318C9O5340C14O5358C19O5366C24O5366C29O5383,,
code-creation,LazyCompile,10,158681,0x1975889205e,455,initializePolicy node:internal/bootstrap/pre_execution:421:26,0x1de1b5445e0,~
code-source-info,0x1975889205e
code-creation,LazyCompile,10,158780,0x1975889242e,63,initializeClusterIPC node:internal/bootstrap/pre_execution:412:30,0x1de1b544590,~
code-source-info,0x1975889242e,96,13124,13372,C0O13132C3O13144C10O13148C18O13163C23O13167C29O13206C35O13206C40O13239C45O13239C49O13330C52O13345C62O13371,,
code-creation,LazyCompile,10,158832,0x1975889259e,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:516:38,0x1de1b544720,~
code-source-info,0x1975889259e,96,17027,17180,C0O17073C6O17073C11O17043C16O17125C21O17154C26O17179,,
code-creation,Eval,10,159042,0x19758892ed6,5, node:internal/source_map/source_map_cache:1:1,0x19758892b70,~
script-source,108,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x19758892ed6,108,0,7881,C0O0C4O7881,,
code-creation,Function,10,159373,0x1975889354e,435, node:internal/source_map/source_map_cache:1:1,0x19758892e50,~
code-source-info,0x1975889354e,108,0,7881,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7738C399O7760C405O7778C411O7803C417O7828C423O7852C429O7753C434O7880,,
code-creation,Eval,10,159579,0x1975889458e,5, node:internal/util/iterable_weak_map:1:1,0x19758894340,~
script-source,109,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x1975889458e,109,0,2042,C0O0C4O2042,,
code-creation,Function,10,159689,0x19758894cee,196, node:internal/util/iterable_weak_map:1:1,0x19758894508,~
code-source-info,0x19758894cee,109,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,159712,0x19758894e6e,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x19758894818,~
code-source-info,0x19758894e6e,109,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,159951,0x19758895aa6,5, node:internal/modules/cjs/helpers:1:1,0x197588957f0,~
script-source,110,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x19758895aa6,110,0,7046,C0O0C4O7046,,
code-creation,Function,10,160252,0x19758896026,536, node:internal/modules/cjs/helpers:1:1,0x19758895a20,~
code-source-info,0x19758896026,110,0,7046,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6877C488O6899C494O6926C500O6944C506O6961C512O6982C518O7006C524O7031C530O6892C535O7045,,
code-creation,LazyCompile,10,160414,0x19758896c8e,27,SafeSet node:internal/per_context/primordials:373:16,0x359b0d4a230,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x19758896c8e,6,11034,11051,C3O11040C7O11046C11O11040C26O11050,,
tick,0x7ff7c01f0b2c,160966,0,0x0,3,0x7ff7c08240c0,0x197588961f7,0x29bccd84f03,0x29bccd848e5,0x19758893685,0x29bccd84f03,0x29bccd848e5,0x197588925a4,0x1de1b546514,0x1de1b542065
code-creation,LazyCompile,10,160985,0x19758897b16,27,SafeMap node:internal/per_context/primordials:360:16,0x359b0d4a0a8,~
code-source-info,0x19758897b16,6,10694,10711,C3O10700C7O10706C11O10700C26O10710,,
code-creation,LazyCompile,10,161033,0x19758897c0e,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x19758894610,~
code-source-info,0x19758897c0e,109,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,161064,0x19758897f96,27,SafeWeakMap node:internal/per_context/primordials:366:16,0x359b0d4a168,~
code-source-info,0x19758897f96,6,10871,10888,C3O10877C7O10883C11O10877C26O10887,,
code-creation,LazyCompile,10,161100,0x1975889809e,27,SafeFinalizationRegistry node:internal/per_context/primordials:387:16,0x359b0d4a3b8,~
code-source-info,0x1975889809e,6,11498,11543,C3O11518C7O11524C11O11518C26O11542,,
code-creation,LazyCompile,10,161216,0x1975889891e,492,initializeDeprecations node:internal/bootstrap/pre_execution:306:32,0x1de1b5444b0,~
code-source-info,0x1975889891e
code-creation,LazyCompile,10,161323,0x19758898ec6,53,initializeWASI node:internal/bootstrap/pre_execution:470:24,0x1de1b544630,~
code-source-info,0x19758898ec6,96,15273,15484,C0O15306C6O15306C11O15289C16O15373C21O15377C29O15377C35O15393C37O15425C43O15425C47O15418C52O15483,,
code-creation,LazyCompile,10,161375,0x197588990c6,66,initializeCJSLoader node:internal/bootstrap/pre_execution:477:29,0x1de1b544680,~
code-source-info,0x197588990c6,96,15516,15839,C0O15542C6O15542C11O15585C16O15590C20O15610C26O15649C31O15656C36O15656C40O15755C51O15777C56O15813C60O15770C65O15838,,
code-creation,Eval,10,162135,0x1975889b016,5, node:internal/modules/cjs/loader:1:1,0x1975889a730,~
script-source,111,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x1975889b016,111,0,41761,C0O0C4O41761,,
tick,0x7ff7c073cb57,163880,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x29bccd84e3b,0x29bccd848e5,0x197588990cc,0x1de1b546526,0x1de1b542065
code-creation,Function,10,163898,0x1975889cdb6,2547, node:internal/modules/cjs/loader:1:1,0x1975889af90,~
code-source-info,0x1975889cdb
code-creation,Eval,10,164386,0x197588a0d76,5, node:internal/modules/package_json_reader:1:1,0x197588a0bd0,~
script-source,112,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x197588a0d76,112,0,1024,C0O0C4O1024,,
code-creation,Function,10,164562,0x197588a0ec6,113, node:internal/modules/package_json_reader:1:1,0x197588a0cf0,~
code-source-info,0x197588a0ec6,112,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
tick,0x7ff7c11dbda7,164620,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x29bccd84e3b,0x29bccd848e5,0x1975889d154,0x29bccd84f03,0x29bccd848e5,0x197588990cc,0x1de1b546526,0x1de1b542065
code-creation,Eval,10,164739,0x197588a170e,5, node:internal/process/esm_loader:1:1,0x197588a1518,~
script-source,113,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x197588a170e,113,0,2982,C0O0C4O2982,,
code-creation,Function,10,164878,0x197588a19ae,182, node:internal/process/esm_loader:1:1,0x197588a1688,~
code-source-info,0x197588a19ae,113,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,165243,0x197588a2cbe,5, node:internal/modules/esm/loader:1:1,0x197588a2830,~
script-source,114,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  fetchModule\x2C\x0d\n} = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {Function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C\x0d\n                             this.getBaseURL(url)\x2C\x0d\n                             importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the url to use for the resolution of a given cache key url\x0d\n   * These are not guaranteed to be the same.\x0d\n   *\x0d\n   * In WHATWG HTTP spec for ESM the cache key is the non-I/O bound\x0d\n   * synchronous resolution using only string operations\x0d\n   *   ~= resolveImportMap(new URL(specifier\x2C importerHREF))\x0d\n   *\x0d\n   * The url used for subsequent resolution is the response URL after\x0d\n   * all redirects have been resolved.\x0d\n   *\x0d\n   * https://example.com/foo redirecting to https://example.com/bar\x0d\n   * would have a cache key of https://example.com/foo and baseURL\x0d\n   * of https://example.com/bar\x0d\n   *\x0d\n   * MUST BE SYNCHRONOUS for import.meta initialization\x0d\n   * MUST BE CALLED AFTER receiving the url body due to I/O\x0d\n   * @param {string} url\x0d\n   * @returns {string}\x0d\n   */\x0d\n  getBaseURL(url) {\x0d\n    if (\x0d\n      StringPrototypeStartsWith(url\x2C 'http:') ||\x0d\n      StringPrototypeStartsWith(url\x2C 'https:')\x0d\n    ) {\x0d\n      // The request & response have already settled\x2C so they are in\x0d\n      // fetchModule's cache\x2C in which case\x2C fetchModule returns\x0d\n      // immediately and synchronously\x0d\n      url = fetchModule(new URL(url)\x2C { parentURL: url }).resolvedHREF;\x0d\n      // This should only occur if the module hasn't been fetched yet\x0d\n      if (typeof url !== 'string') {\x0d\n        throw new ERR_INTERNAL_ASSERTION(`Base url for module ${url} not loaded.`);\x0d\n      }\x0d\n    }\x0d\n    return url;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve =\x0d\n        ObjectAssign(ObjectCreate(null)\x2C importAssertions);\x0d\n    }\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C url);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<object | object[]>} A list of module export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n        dataUrl ? dataUrl[1] : format\x2C\x0d\n        url);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const preload = this.#globalPreloaders[i]({\x0d\n        port: insideLoader\x0d\n      });\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ url: string }}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = ObjectCreate(null)\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        importAssertions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') { // non-strings can be coerced to a url string\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    new URL(url); // Intentionally trigger error if `url` is invalid\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x197588a2cbe,114,0,18635,C0O0C4O18635,,
code-creation,Function,10,166010,0x197588a358e,659, node:internal/modules/esm/loader:1:1,0x197588a2c38,~
code-source-info,0x197588a358e,114,0,18635,C0O0C122O82C128O82C132O136C138O146C144O163C150O186C156O209C162O235C168O261C174O278C180O295C185O320C191O335C197O359C203O381C209O397C215O427C221O485C227O485C232O466C238O706C244O706C249O732C254O530C260O557C266O582C272O608C278O646C284O675C290O787C296O787C301O749C307O764C313O779C319O869C325O869C330O824C336O845C342O920C348O920C352O920C354O983C360O983C364O983C366O1085C372O1085C377O1041C383O1060C389O1164C395O1164C400O1138C406O1245C412O1245C417O1229C423O1308C429O1308C434O1292C440O1385C446O1385C451O1366C457O1444C463O1444C468O1426C639O18582C646O18551C651O18603C653O18621C658O18634,,
code-creation,Function,10,166072,0x197588a3a36,154,<instance_members_initializer> node:internal/modules/esm/loader:68:3,0x197588a30b0,~
code-source-info,0x197588a3a36,114,1944,2827,C3O1964C17O2126C28O2133C45O2315C56O2322C73O2374C88O2473C95O2473C109O2596C119O2688C126O2688C140O2816C153O2827,,
code-creation,Eval,10,166262,0x197588a540e,5, node:internal/modules/esm/module_map:1:1,0x197588a5220,~
script-source,115,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x197588a540e,115,0,1487,C0O0C4O1487,,
code-creation,Function,10,166345,0x197588a5846,175, node:internal/modules/esm/module_map:1:1,0x197588a5388,~
code-source-info,0x197588a5846,115,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
tick,0x7ff7c07c831d,166448,1,0x7ff7c02ae150,6,0x7ff7c0bf59a0,0x29bccd84e3b,0x29bccd848e5,0x197588a36ea,0x29bccd84f03,0x29bccd848e5,0x197588a19fc,0x29bccd84f03,0x29bccd848e5,0x1975889d261,0x29bccd84f03,0x29bccd848e5,0x197588990cc,0x1de1b546526,0x1de1b542065
code-creation,Eval,10,166615,0x197588a62ee,5, node:internal/modules/esm/module_job:1:1,0x197588a5ff8,~
script-source,116,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const baseURL = this.loader.getBaseURL(url);\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C baseURL\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x197588a62ee,116,0,8465,C0O0C4O8465,,
code-creation,Function,10,166957,0x197588a67e6,343, node:internal/modules/esm/module_job:1:1,0x197588a6268,~
code-source-info,0x197588a67e6,116,0,8465,C0O0C88O28C94O51C100O73C106O96C112O119C117O141C123O158C128O183C134O198C139O217C145O243C151O260C157O284C163O306C169O318C175O346C181O371C187O398C193O423C199O494C205O494C210O479C216O560C222O560C227O537C233O625C239O625C244O598C250O690C256O690C260O690C262O743C265O743C267O777C269O777C271O820C272O820C274O852C278O852C280O977C284O977C323O8417C330O8386C335O8436C337O8451C342O8464,,
code-creation,Eval,10,167184,0x197588a843e,5, node:internal/modules/esm/assert:1:1,0x197588a8248,~
script-source,117,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0x197588a843e,117,0,3734,C0O0C4O3734,,
code-creation,Function,10,167350,0x197588a8716,201, node:internal/modules/esm/assert:1:1,0x197588a83b8,~
code-source-info,0x197588a8716,117,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,167455,0x197588a8d26,9, node:internal/modules/esm/assert:43:3,0x197588a8510,~
code-source-info,0x197588a8d26,117,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,168137,0x197588aa966,5, node:internal/modules/esm/resolve:1:1,0x197588aa1a8,~
script-source,118,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap(); /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\nlet experimentalSpecifierResolutionWarned = false;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  let path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    if (!experimentalSpecifierResolutionWarned) {\x0d\n      process.emitWarning(\x0d\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\x0d\n        'ExperimentalWarning');\x0d\n      experimentalSpecifierResolutionWarned = true;\x0d\n    }\x0d\n\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n\x0d\n    // Directory\x0d\n    if (file === undefined) {\x0d\n      file = StringPrototypeEndsWith(path\x2C '/') ?\x0d\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n\x0d\n      if (file === resolved) return file;\x0d\n\x0d\n      if (file === undefined) {\x0d\n        throw new ERR_MODULE_NOT_FOUND(\x0d\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    path = file;\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier))\x0d\n    return new URL('node:' + specifier);\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    const parentURL = fileURLToPath(parsedParentURL?.href);\x0d\n\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (NativeModule.canBeRequiredByUsers(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ));\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context\x2C $defaultResolve);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x0d\n      )\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x197588aa966,118,0,42310,C0O0C4O42310,,
code-creation,Function,10,169852,0x197588aba96,1191, node:internal/modules/esm/resolve:1:1,0x197588aa8e0,~
code-source-info,0x197588aba
tick,0x7ff7c11cf7b5,170004,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x29bccd84e3b,0x29bccd848e5,0x197588a3702,0x29bccd84f03,0x29bccd848e5,0x197588a19fc,0x29bccd84f03,0x29bccd848e5,0x1975889d261,0x29bccd84f03,0x29bccd848e5,0x197588990cc,0x1de1b546526,0x1de1b542065
code-creation,Eval,10,170228,0x197588af556,5, node:internal/modules/esm/get_format:1:1,0x197588af2d0,~
script-source,119,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors) return undefined;\x0d\n    let suggestion = '';\x0d\n    if (getPackageType(url) === 'module' && ext === '') {\x0d\n      const config = getPackageScopeConfig(url);\x0d\n      const fileBasename = basename(filepath);\x0d\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n      suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n        '"type":"module" package.json contexts. The package.json file ' +\x0d\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n        'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n    }\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n  }\x0d\n\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x197588af556,119,0,4260,C0O0C4O4260,,
code-creation,Function,10,170420,0x197588af9d6,368, node:internal/modules/esm/get_format:1:1,0x197588af4d0,~
code-source-info,0x197588af9d6,119,0,4260,C0O0C90O26C95O43C100O60C106O94C112O119C118O138C124O162C130O243C133O243C138O211C144O221C150O230C156O288C159O288C164O269C169O342C172O342C177O326C183O471C186O471C191O400C197O423C203O452C209O553C212O553C216O553C218O647C221O647C225O647C227O753C230O753C235O711C241O727C247O826C250O826C255O803C261O808C267O891C270O891C275O917C280O860C286O953C288O966C300O1000C306O1041C312O1082C318O1124C322O1156C330O953C335O953C337O4158C344O4180C350O4201C356O4235C362O4173C367O4259,,
tick,0x7ffdf679b393,170514,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x29bccd84e3b,0x29bccd848e5,0x197588abf12,0x29bccd84f03,0x29bccd848e5,0x197588a3702,0x29bccd84f03,0x29bccd848e5,0x197588a19fc,0x29bccd84f03,0x29bccd848e5,0x1975889d261,0x29bccd84f03,0x29bccd848e5,0x197588990cc,0x1de1b546526,0x1de1b542065
code-creation,Eval,10,170719,0x197588b0846,5, node:internal/modules/esm/fetch_module:1:1,0x197588b0580,~
script-source,120,node:internal/modules/esm/fetch_module,'use strict';\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  Buffer: {\x0d\n    concat: BufferConcat\x0d\n  }\x0d\n} = require('buffer');\x0d\nconst {\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { URL } = require('internal/url');\x0d\nconst net = require('net');\x0d\n\x0d\n/**\x0d\n * @typedef CacheEntry\x0d\n * @property {Promise<string> | string} resolvedHREF\x0d\n * @property {Record<string\x2C string>} headers\x0d\n * @property {Promise<Buffer> | Buffer} body\x0d\n */\x0d\n\x0d\n/**\x0d\n * Only for GET requests\x2C other requests would need new Map\x0d\n * HTTP cache semantics keep diff caches\x0d\n *\x0d\n * Maps HREF to pending cache entry\x0d\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\x0d\n */\x0d\nconst cacheForGET = new SafeMap();\x0d\n\x0d\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\x0d\n// lazily/at runtime and not top level of an internal module.\x0d\n\x0d\n// [2] Creating a new agent instead of using the gloabl agent improves\x0d\n// performance and precludes the agent becoming tainted.\x0d\n\x0d\nlet HTTPSAgent;\x0d\nfunction HTTPSGet(url\x2C opts) {\x0d\n  const https = require('https'); // [1]\x0d\n  HTTPSAgent ??= new https.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return https.get(url\x2C {\x0d\n    agent: HTTPSAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nlet HTTPAgent;\x0d\nfunction HTTPGet(url\x2C opts) {\x0d\n  const http = require('http'); // [1]\x0d\n  HTTPAgent ??= new http.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return http.get(url\x2C {\x0d\n    agent: HTTPAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction dnsLookup(name\x2C opts) {\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  dnsLookup = require('dns/promises').lookup;\x0d\n  return dnsLookup(name\x2C opts);\x0d\n}\x0d\n\x0d\nlet zlib;\x0d\nfunction createBrotliDecompress() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createBrotliDecompress = zlib.createBrotliDecompress;\x0d\n  return createBrotliDecompress();\x0d\n}\x0d\n\x0d\nfunction createUnzip() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createUnzip = zlib.createUnzip;\x0d\n  return createUnzip();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {Promise<CacheEntry> | CacheEntry}\x0d\n */\x0d\nfunction fetchWithRedirects(parsed) {\x0d\n  const existing = cacheForGET.get(parsed.href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\x0d\n  const result = new Promise((fulfill\x2C reject) => {\x0d\n    const req = handler(parsed\x2C {\x0d\n      headers: {\x0d\n        Accept: '*/*'\x0d\n      }\x0d\n    })\x0d\n    .on('error'\x2C reject)\x0d\n    .on('response'\x2C (res) => {\x0d\n      function dispose() {\x0d\n        req.destroy();\x0d\n        res.destroy();\x0d\n      }\x0d\n      if (res.statusCode >= 300 && res.statusCode <= 303) {\x0d\n        if (res.headers.location) {\x0d\n          dispose();\x0d\n          try {\x0d\n            const location = new URL(res.headers.location\x2C parsed);\x0d\n            if (location.protocol !== 'http:' &&\x0d\n              location.protocol !== 'https:') {\x0d\n              reject(new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n                res.headers.location\x2C\x0d\n                parsed.href\x2C\x0d\n                'cannot redirect to non-network location'));\x0d\n              return;\x0d\n            }\x0d\n            return PromisePrototypeThen(\x0d\n              PromiseResolve(fetchWithRedirects(location))\x2C\x0d\n              (entry) => {\x0d\n                cacheForGET.set(parsed.href\x2C entry);\x0d\n                fulfill(entry);\x0d\n              });\x0d\n          } catch (e) {\x0d\n            dispose();\x0d\n            reject(e);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      if (res.statusCode > 303 || res.statusCode < 200) {\x0d\n        dispose();\x0d\n        reject(\x0d\n          new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n            parsed.href\x2C\x0d\n            'HTTP response returned status code of ' + res.statusCode));\x0d\n        return;\x0d\n      }\x0d\n      const { headers } = res;\x0d\n      const contentType = headers['content-type'];\x0d\n      if (!contentType) {\x0d\n        dispose();\x0d\n        reject(new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n          parsed.href\x2C\x0d\n          'the \\'Content-Type\\' header is required'));\x0d\n        return;\x0d\n      }\x0d\n      /**\x0d\n       * @type {CacheEntry}\x0d\n       */\x0d\n      const entry = {\x0d\n        resolvedHREF: parsed.href\x2C\x0d\n        headers: {\x0d\n          'content-type': res.headers['content-type']\x0d\n        }\x2C\x0d\n        body: new Promise((f\x2C r) => {\x0d\n          const buffers = [];\x0d\n          let size = 0;\x0d\n          let bodyStream = res;\x0d\n          let onError;\x0d\n          if (res.headers['content-encoding'] === 'br') {\x0d\n            bodyStream = createBrotliDecompress();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else if (res.headers['content-encoding'] === 'gzip' ||\x0d\n            res.headers['content-encoding'] === 'deflate') {\x0d\n            bodyStream = createUnzip();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else {\x0d\n            onError = function onError(error) {\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n          }\x0d\n          bodyStream.on('error'\x2C onError);\x0d\n          bodyStream.on('data'\x2C (d) => {\x0d\n            ArrayPrototypePush(buffers\x2C d);\x0d\n            size += d.length;\x0d\n          });\x0d\n          bodyStream.on('end'\x2C () => {\x0d\n            const body = entry.body = /** @type {Buffer} */(\x0d\n              BufferConcat(buffers\x2C size)\x0d\n            );\x0d\n            f(body);\x0d\n          });\x0d\n        })\x2C\x0d\n      };\x0d\n      cacheForGET.set(parsed.href\x2C entry);\x0d\n      fulfill(entry);\x0d\n    });\x0d\n  });\x0d\n  cacheForGET.set(parsed.href\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst allowList = new net.BlockList();\x0d\nallowList.addAddress('::1'\x2C 'ipv6');\x0d\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\x0d\n\x0d\n/**\x0d\n * Returns if an address has local status by if it is going to a local\x0d\n * interface or is an address resolved by DNS to be a local interface\x0d\n * @param {string} hostname url.hostname to test\x0d\n * @returns {Promise<boolean>}\x0d\n */\x0d\nasync function isLocalAddress(hostname) {\x0d\n  try {\x0d\n    if (StringPrototypeStartsWith(hostname\x2C '[') &&\x0d\n        StringPrototypeEndsWith(hostname\x2C ']')) {\x0d\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\x0d\n    }\x0d\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\x0d\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\x0d\n    return allowList.check(addr.address\x2C ipv);\x0d\n  } catch {\x0d\n    // If it errored\x2C the answer is no.\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Fetches a location with a shared cache following redirects.\x0d\n * Does not respect HTTP cache headers.\x0d\n *\x0d\n * This splits the header and body Promises so that things only needing\x0d\n * headers don't need to wait on the body.\x0d\n *\x0d\n * In cases where the request & response have already settled\x2C this returns the\x0d\n * cache value synchronously.\x0d\n *\x0d\n * @param {URL} parsed\x0d\n * @param {ESModuleContext} context\x0d\n * @returns {ReturnType<typeof fetchWithRedirects>}\x0d\n */\x0d\nfunction fetchModule(parsed\x2C { parentURL }) {\x0d\n  const { href } = parsed;\x0d\n  const existing = cacheForGET.get(href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  if (parsed.protocol === 'http:') {\x0d\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\x0d\n      if (is !== true) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          href\x2C\x0d\n          parentURL\x2C\x0d\n          'http can only be used to load local resources (use https instead).'\x0d\n        );\x0d\n      }\x0d\n      return fetchWithRedirects(parsed);\x0d\n    });\x0d\n  }\x0d\n  return fetchWithRedirects(parsed);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fetchModule: fetchModule\x0d\n};\x0d\n
code-source-info,0x197588b0846,120,0,8052,C0O0C4O8052,,
code-creation,Function,10,171057,0x197588b0cde,318, node:internal/modules/esm/fetch_module:1:1,0x197588b07c0,~
code-source-info,0x197588b0cde,120,0,8052,C0O0C104O26C110O49C116O61C122O86C128O105C133O117C139O145C145O170C151O273C157O273C162O273C167O250C173O376C179O376C184O402C189O304C195O338C201O427C207O427C212O419C218O465C224O465C229O899C231O899C236O899C238O1197C239O1197C241O1435C242O1435C244O1830C245O1830C247O6127C252O6119C257O6119C259O6141C262O6151C273O6151C279O6179C282O6189C293O6189C299O8000C306O8035C312O8015C317O8051,,
code-creation,LazyCompile,10,171159,0x197588b19be,37,get BlockList node:net:1826:16,0x1de1b56b7e8,~
code-source-info,0x197588b19be,101,50636,50728,C0O50646C14O50660C19O50689C26O50656C32O50706C36O50723,,
code-creation,Eval,10,171311,0x197588b1e9e,5, node:internal/blocklist:1:1,0x197588b1cb8,~
script-source,121,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0x197588b1e9e,121,0,4043,C0O0C4O4043,,
code-creation,Function,10,171506,0x197588b28a6,359, node:internal/blocklist:1:1,0x197588b1e18,~
code-source-info,0x197588b28a6,121,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,171835,0x197588b4176,5, node:internal/socketaddress:1:1,0x197588b3f80,~
script-source,122,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0x197588b4176,122,0,3363,C0O0C4O3363,,
code-creation,Function,10,172007,0x197588b4c9e,366, node:internal/socketaddress:1:1,0x197588b40f0,~
code-source-info,0x197588b4c9e,122,0,3363,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3135C307O3176C312O3186C316O3157C320O3243C325O3268C330O3200C335O3283C342O3305C348O3323C354O3349C360O3298C365O3362,,
code-creation,LazyCompile,10,172158,0x197588b574e,72,BlockList node:internal/blocklist:40:14,0x197588b1ed0,~
code-source-info,0x197588b574e,121,814,922,C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921,,
code-creation,LazyCompile,10,172230,0x197588b5ef6,115,addAddress node:internal/blocklist:60:13,0x197588b1f70,~
code-source-info,0x197588b5ef6,121,1208,1529,C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528,,
code-creation,LazyCompile,10,172281,0x197588b6076,20,isSocketAddress node:internal/socketaddress:43:25,0x197588b41f8,~
code-source-info,0x197588b6076,122,784,842,C0O799C9O814C11O813C18O823C19O837,,
code-creation,LazyCompile,10,172365,0x197588b680e,323,SocketAddress node:internal/socketaddress:47:14,0x197588b41a8,~
code-source-info,0x197588b680e,122,859,1842,C7O859C13O881C21O881C33O895C41O895C46O942C58O991C69O1009C81O1050C89O1067C97O1111C99O1122C106O1139C117O1192C122O1192C127O1212C146O1259C151O1284C153O1320C158O1346C160O1378C168O1436C175O1384C180O1378C181O1459C189O1459C194O1508C202O1508C207O1549C220O1549C225O1611C230O1616C235O1631C252O1627C257O1625C261O1684C266O1689C274O1705C276O1704C280O1714C291O1739C296O1763C301O1789C306O1818C310O1714C315O1698C322O1841,,
code-creation,LazyCompile,10,172491,0x197588b6b5e,99, node:internal/validators:154:3,0x359b0d7d020,~
code-source-info,0x197588b6b5e,15,4537,5108,C0O4596C4O4637C9O4673C14O4712C21O4748C26O4785C33O4821C38O4836C46O4884C50O4898C53O4898C67O4975C75O5042C91O5048C96O5042C98O5107,,
tick,0x7ffdf67bb939,172541,0,0x0,2,0x7ff7c08240c0,0x197588b6837,0x197588b5f47,0x197588b0def,0x29bccd84f03,0x29bccd848e5,0x197588afa82,0x29bccd84f03,0x29bccd848e5,0x197588abf12,0x29bccd84f03,0x29bccd848e5,0x197588a3702,0x29bccd84f03,0x29bccd848e5,0x197588a19fc,0x29bccd84f03,0x29bccd848e5,0x1975889d261,0x29bccd84f03,0x29bccd848e5,0x197588990cc,0x1de1b546526,0x1de1b542065
code-creation,LazyCompile,10,172572,0x197588b6d0e,129,validatePort node:internal/validators:211:22,0x359b0d7d1f8,~
code-source-info,0x197588b6d0e,15,6624,6991,C24O6669C44O6767C47O6767C52O6792C58O6800C65O6817C70O6828C72O6834C75O6823C86O6856C92O6881C99O6891C101O6910C117O6916C122O6910C123O6972C125O6984C128O6988,,
code-creation,LazyCompile,10,172636,0x197588b6f5e,149, node:internal/validators:101:40,0x359b0d7ce20,~
code-source-info,0x197588b6f5e,15,2980,3505,C0O3012C3O3017C9O3041C15O3081C31O3087C36O3081C37O3148C42O3153C48O3186C64O3192C69O3186C70O3265C80O3319C90O3358C109O3325C114O3319C115O3397C120O3419C125O3433C141O3439C146O3433C148O3504,,
code-creation,LazyCompile,10,172679,0x197588b70ee,9,isUint32 node:internal/validators:40:18,0x359b0d7ccc0,~
code-source-info,0x197588b70ee,15,835,882,C0O848C2O872C5O861C8O879,,
code-creation,LazyCompile,10,172760,0x197588b7326,229,addRange node:internal/blocklist:72:11,0x197588b1fc0,~
code-source-info,0x197588b7326,121,1543,2235,C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234,,
code-creation,Eval,10,172889,0x197588b77a6,5, node:internal/modules/esm/formats:1:1,0x197588b7630,~
script-source,123,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeTest\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeTest(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x0d\n    )\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x197588b77a6,123,0,1247,C0O0C4O1247,,
code-creation,Function,10,172969,0x197588b7a5e,120, node:internal/modules/esm/formats:1:1,0x197588b7720,~
code-source-info,0x197588b7a5e,123,0,1247,C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1125C90O1147C96O1170C102O1199C108O1228C114O1140C119O1246,,
code-creation,Eval,10,173111,0x197588b80e6,5, node:internal/modules/esm/initialize_import_meta:1:1,0x197588b7f50,~
script-source,124,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  let url = context.url;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  url = asyncESM.esmLoader.getBaseURL(url);\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0x197588b80e6,124,0,1066,C0O0C4O1066,,
code-creation,Function,10,173178,0x197588b82ae,90, node:internal/modules/esm/initialize_import_meta:1:1,0x197588b8060,~
code-source-info,0x197588b82ae,124,0,1066,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O1018C78O1040C84O1033C89O1065,,
code-creation,Eval,10,173278,0x197588b87c6,5, node:internal/modules/esm/load:1:1,0x197588b8650,~
script-source,125,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C context);\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x197588b87c6,125,0,903,C0O0C4O903,,
code-creation,Function,10,173339,0x197588b890e,80, node:internal/modules/esm/load:1:1,0x197588b8740,~
code-source-info,0x197588b890e,125,0,903,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O196C50O196C55O173C61O863C68O885C74O878C79O902,,
code-creation,Eval,10,173454,0x197588b8f06,5, node:internal/modules/esm/get_source:1:1,0x197588b8d00,~
script-source,126,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C context\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n  } else {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat([\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ]));\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0x197588b8f06,126,0,1929,C0O0C4O1929,,
code-creation,Function,10,173551,0x197588b909e,212, node:internal/modules/esm/get_source:1:1,0x197588b8e80,~
code-source-info,0x197588b909e,126,0,1929,C0O0C46O28C52O53C58O77C64O143C67O143C72O124C77O197C80O197C85O181C91O313C94O313C103O358C110O313C112O443C115O443C119O443C121O537C124O537C129O537C134O520C140O570C143O570C148O601C153O628C156O628C161O620C167O722C170O722C175O748C180O665C186O685C192O782C196O779C198O820C202O820C204O1883C206O1908C211O1928,,
code-creation,Eval,10,174119,0x197588ba466,5, node:internal/fs/promises:1:1,0x197588b9cb8,~
script-source,127,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectCreate\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    bufferOrOptions ??= ObjectCreate(null);\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = bufferOrOptions);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x197588ba466,127,0,23678,C0O0C4O23678,,
code-creation,Function,10,175183,0x197588bcba6,1672, node:internal/fs/promises:1:1,0x197588ba3e0,~
code-source-info,0x197588bcba
code-creation,Function,10,175333,0x197588bd55e,27,<instance_members_initializer> node:internal/fs/promises:190:3,0x197588bba40,~
code-source-info,0x197588bd55e,127,4407,5236,C0O4407C12O4415C26O5236,,
tick,0x7ff7c01f0b61,175364,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x29bccd84e3b,0x29bccd848e5,0x197588b912d,0x29bccd84f03,0x29bccd848e5,0x197588b8932,0x29bccd84f03,0x29bccd848e5,0x197588a372a,0x29bccd84f03,0x29bccd848e5,0x197588a19fc,0x29bccd84f03,0x29bccd848e5,0x1975889d261,0x29bccd84f03,0x29bccd848e5,0x197588990cc,0x1de1b546526,0x1de1b542065
new,MemoryChunk,0x3c67da80000,262144
code-creation,Eval,10,175691,0x3c67da8114e,5, node:internal/fs/rimraf:1:1,0x197588bfca8,~
script-source,128,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x3c67da8114e,128,0,7392,C0O0C4O7392,,
code-creation,Function,10,176023,0x3c67da8174e,409, node:internal/fs/rimraf:1:1,0x197588bff88,~
code-source-info,0x3c67da8174e,128,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,176228,0x3c67da825e6,188,from node:buffer:296:28,0x2711fd76f90,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x3c67da825e6,24,8735,9718,C3O8774C9O8810C12O8817C17O8853C18O8859C28O8915C33O8919C39O8951C51O8958C56O9007C57O9037C63O9054C68O9054C73O9070C78O9110C95O9203C104O9210C109O9250C110O9275C113O9275C118O9299C120O9313C122O9322C123O9330C125O9347C127O9346C134O9409C136O9415C138O9414C145O9433C151O9452C155O9498C158O9505C163O9545C164O9572C182O9578C187O9572,,
tick,0x7ff7c11dbdab,177956,0,0x0,3,0x7ff7c08240c0,0x3c67da818c1,0x29bccd84f03,0x29bccd848e5,0x197588bce74,0x29bccd84f03,0x29bccd848e5,0x197588b912d,0x29bccd84f03,0x29bccd848e5,0x197588b8932,0x29bccd84f03,0x29bccd848e5,0x197588a372a,0x29bccd84f03,0x29bccd848e5,0x197588a19fc,0x29bccd84f03,0x29bccd848e5,0x1975889d261,0x29bccd84f03,0x29bccd848e5,0x197588990cc,0x1de1b546526,0x1de1b542065
code-creation,LazyCompile,10,177994,0x3c67da85016,110,fromString node:buffer:432:20,0x2711fd77378,~
code-source-info,0x3c67da85016,24,12922,13371,C0O12950C2O12958C8O13003C14O13010C19O13035C25O13042C30O13056C35O13063C40O13080C41O13086C46O13104C51O13115C56O13154C59O13160C64O13191C66O13221C73O13227C78O13221C79O13279C85O13286C90O13300C95O13307C100O13324C101O13333C104O13340C109O13368,,
code-creation,LazyCompile,10,178069,0x3c67da851ce,177,fromStringFast node:buffer:413:24,0x2711fd772d8,~
code-source-info,0x3c67da851ce,24,12359,12899,C0O12397C5O12397C11O12422C14O12444C18O12453C21O12433C26O12466C31O12502C36O12473C41O12515C42O12521C44O12535C49O12546C51O12544C54O12532C59O12564C62O12564C65O12589C72O12604C77O12615C85O12589C91O12658C110O12658C116O12690C118O12701C123O12787C130O12806C135O12817C143O12791C149O12846C156O12860C162O12857C168O12871C171O12871C174O12887C176O12896,,
code-creation,LazyCompile,10,178130,0x3c67da853be,36,FastBuffer node:internal/buffer:958:14,0x3d28e28bb00,~
code-source-info,0x3c67da853be,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,178162,0x3c67da854be,23,write node:buffer:593:12,0x2711fd776e8,~
code-source-info,0x3c67da854be,24,17151,17215,C0O17185C17O17185C22O17215,,
code-creation,LazyCompile,10,178198,0x3c67da855ae,42,alignPool node:buffer:159:19,0x2711fd76d10,~
code-source-info,0x3c67da855ae,24,4190,4300,C0O4226C4O4241C9O4255C19O4266C25O4279C34O4289C41O4299,,
code-creation,LazyCompile,10,178295,0x3c67da8596e,251,promisify node:internal/util:324:19,0x2711fd461f8,~
code-source-info,0x3c67da8596e,16,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
tick,0x7ff7c08d5ad8,178494,0,0x0,3,0x7ff7c08240c0,0x197588bd070,0x29bccd84f03,0x29bccd848e5,0x197588b912d,0x29bccd84f03,0x29bccd848e5,0x197588b8932,0x29bccd84f03,0x29bccd848e5,0x197588a372a,0x29bccd84f03,0x29bccd848e5,0x197588a19fc,0x29bccd84f03,0x29bccd848e5,0x1975889d261,0x29bccd84f03,0x29bccd848e5,0x197588990cc,0x1de1b546526,0x1de1b542065
code-creation,LazyCompile,10,178545,0x3c67da85f1e,65,EventEmitterMixin node:internal/event_target:962:27,0x1599be5e378,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol\x2C kEnumerableProperty } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler ?? null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x3c67da85f1e,44,26678,27112,C0O26731C23O26922C30O26954C33O26967C38O26922C43O26982C47O27016C52O27057C57O27016C62O27084C64O27109,,
code-creation,Eval,10,180017,0x3c67da889de,5, node:internal/modules/esm/translators:1:1,0x3c67da88578,~
script-source,129,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C\x0d\n                                   asyncESM.esmLoader.getBaseURL(url)\x2C\x0d\n                                   assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C {\x0d\n      url: wrap.url\x0d\n    })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x3c67da889de,129,0,11128,C0O0C4O11128,,
code-creation,Function,10,180513,0x3c67da8917e,715, node:internal/modules/esm/translators:1:1,0x3c67da88958,~
code-source-info,0x3c67da8917e
tick,0x7ffdf67ba8cf,180629,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x29bccd84e3b,0x29bccd848e5,0x197588a373b,0x29bccd84f03,0x29bccd848e5,0x197588a19fc,0x29bccd84f03,0x29bccd848e5,0x1975889d261,0x29bccd84f03,0x29bccd848e5,0x197588990cc,0x1de1b546526,0x1de1b542065
code-creation,Eval,10,180736,0x3c67da8a686,5, node:internal/modules/esm/create_dynamic_module:1:1,0x3c67da8a4b0,~
script-source,130,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x3c67da8a686,130,0,1828,C0O0C4O1828,,
code-creation,Function,10,180839,0x3c67da8a8ae,111, node:internal/modules/esm/create_dynamic_module:1:1,0x3c67da8a600,~
code-source-info,0x3c67da8a8ae,130,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,181195,0x3c67da8bb56,5, node:internal/vm/module:1:1,0x3c67da8b610,~
script-source,131,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x3c67da8bb56,131,0,12768,C0O0C4O12768,,
code-creation,Function,10,181740,0x3c67da8cdb6,872, node:internal/vm/module:1:1,0x3c67da8bad0,~
code-source-info,0x3c67da8cdb
code-creation,Function,10,181831,0x3c67da8d2f6,30,<instance_members_initializer> node:internal/vm/module:256:3,0x3c67da8c140,~
code-source-info,0x3c67da8d2f6,131,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,181983,0x3c67da8e6ee,30,ESMLoader node:internal/modules/esm/loader:61:1,0x197588a2d40,~
code-source-info,0x3c67da8e6ee,114,1718,1718,C9O1718C29O1718,,
code-creation,LazyCompile,10,182030,0x3c67da8fba6,27,ModuleMap node:internal/modules/esm/module_map:17:14,0x197588a5490,~
code-source-info,0x3c67da8fba6,115,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,182074,0x3c67da8fe4e,13,desc.value node:internal/per_context/primordials:334:32,0x359b0d4a000,~
code-source-info,0x3c67da8fe4e,6,9964,10025,C0O9982C7O9989C12O10012,,
code-creation,LazyCompile,10,182106,0x3c67da8ff56,13,SafeIterator node:internal/per_context/primordials:279:16,0x359b0d49a50,~
code-source-info,0x3c67da8ff56,6,8198,8260,C0O8218C3O8235C7O8233C12O8259,,
code-creation,LazyCompile,10,182142,0x3c67da9008e,13,next node:internal/per_context/primordials:282:9,0x359b0d49b18,~
code-source-info,0x3c67da9008e,6,8270,8317,C0O8282C3O8299C8O8289C12O8310,,
code-creation,LazyCompile,10,182288,0x3c67da90706,28,getEmbedderOptions node:internal/options:32:28,0x2b5dd73dac8,~
code-source-info,0x3c67da90706,91,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,182419,0x3c67da909ae,315,Module._initPaths node:internal/modules/cjs/loader:1233:29,0x1975889c298,~
code-source-info,0x3c67da909ae
tick,0x7ff7c11f00a3,182523,0,0x0,3,0x7ff7c08240c0,0x197588990ea,0x1de1b546526,0x1de1b542065
code-creation,Eval,10,182660,0x3c67da93906,5, node:internal/modules/run_main:1:1,0x3c67da936e0,~
script-source,132,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x3c67da93906,132,0,2621,C0O0C4O2621,,
code-creation,Function,10,182785,0x3c67da93bee,178, node:internal/modules/run_main:1:1,0x3c67da93880,~
code-source-info,0x3c67da93bee,132,0,2621,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2549C160O2571C166O2597C172O2564C177O2620,,
code-creation,LazyCompile,10,182890,0x3c67da9441e,163,initializeESMLoader node:internal/bootstrap/pre_execution:487:29,0x1de1b5446d0,~
code-source-info,0x3c67da9441e,96,15871,16986,C0O15955C6O15955C13O16004C16O16000C21O15998C25O16024C30O16028C34O16048C40O16077C41O16084C42O16189C48O16189C53O16103C58O16144C63O16236C69O16236C74O16440C79O16398C83O16511C88O16472C92O16681C100O16685C106O16804C112O16804C117O16752C122O16760C127O16778C132O16851C138O16851C143O16871C145O16881C149O16896C151O16916C155O16941C157O16960C162O16985,,
code-creation,LazyCompile,10,182956,0x3c67da94636,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x1975889b788,~
code-source-info,0x3c67da94636,111,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,182993,0x3c67da9471e,53,loadPreloadModules node:internal/bootstrap/pre_execution:530:28,0x1de1b5447c0,~
code-source-info,0x3c67da9471e,96,17478,17809,C0O17567C8O17567C13O17599C15O17636C21O17643C26O17724C32O17724C37O17724C42O17689C47O17769C52O17808,,
code-creation,LazyCompile,10,183034,0x3c67da9490e,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:522:36,0x1de1b544770,~
code-source-info,0x3c67da9490e,96,17219,17447,C0O17227C8O17231C14O17277C17O17285C28O17285C34O17399C40O17399C45O17436C49O17446,,
code-creation,LazyCompile,10,183086,0x3c67da94a36,80,executeUserEntryPoint node:internal/modules/run_main:70:31,0x3c67da93a78,~
code-source-info,0x3c67da94a36,132,2231,2545,C7O2247C14O2251C22O2282C25O2282C30O2329C33O2329C38O2366C40O2391C45O2402C50O2391C56O2506C61O2513C73O2513C79O2544,,
code-creation,LazyCompile,10,183133,0x3c67da94e66,68,resolveMainPath node:internal/modules/run_main:15:25,0x3c67da93938,~
code-source-info,0x3c67da94e66,132,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,LazyCompile,10,183256,0x3c67da95066,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x1975889baa8,~
code-source-info,0x3c67da
code-creation,LazyCompile,10,183374,0x3c67da95416,109,isAbsolute node:path:402:13,0x1599be4d5d0,~
code-source-info,0x3c67da95416,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,183513,0x3c67da956fe,85,stat node:internal/modules/cjs/loader:151:14,0x1975889b048,~
code-source-info,0x3c67da956fe,111,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,183585,0x3c67da9590e,232,toNamespacedPath node:path:618:19,0x1599be4d6f8,~
code-source-info,0x3c67da9590e,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,183723,0x3c67da95b6e,42,toRealPath node:internal/modules/cjs/loader:393:20,0x1975889b318,~
code-source-info,0x3c67da95b6e,111,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
code-creation,LazyCompile,10,184000,0x3c67da95f86,1042,realpathSync node:fs:2425:22,0x2b5dd7193f0,~
script-source,80,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = ObjectCreate(null);\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\x0d\n    const options = offset || ObjectCreate(null);\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x3c67da95f
tick,0x7ff7c11ce611,187665,0,0x0,3,0x7ff7c08240c0,0x3c67da95b91,0x3c67da95191,0x3c67da94e84,0x3c67da94a4f,0x1de1b542089
tick,0x7ffdf679b393,187683,0,0x0,3,0x7ff7c08240c0,0x3c67da95b91,0x3c67da95191,0x3c67da94e84,0x3c67da94a4f,0x1de1b542089
code-creation,LazyCompile,10,187712,0x3c67da9c6ae,123,getOptions node:internal/fs/utils:315:20,0x2b5dd721c98,~
script-source,81,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x3c67da9c6ae,81,7566,8210,C0O7597C14O7691C16O7713C17O7724C23O7764C29O7809C31O7833C35O7849C42O7885C48O7925C66O7931C71O7925C72O8021C79O8030C84O8049C87O8072C92O8049C96O8100C102O8129C107O8157C115O8129C120O8192C122O8207,,
tick,0x7ff7c11ce545,188852,0,0x0,3,0x7ff7c08240c0,0x3c67da95f92,0x3c67da95b91,0x3c67da95191,0x3c67da94e84,0x3c67da94a4f,0x1de1b542089
code-creation,LazyCompile,10,188874,0x3c67da9e636,48,assertEncoding node:internal/fs/utils:152:24,0x2b5dd7216a0,~
code-source-info,0x3c67da9e636,81,3712,3894,C0O3728C6O3745C9O3752C14O3752C21O3796C24O3824C40O3830C45O3824C47O3893,,
code-creation,LazyCompile,10,188971,0x3c67da9e74e,20,toPathIfFileURL node:internal/url:1499:25,0x3d28e2b9258,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(input\x2C flags) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x3c67da9e74e,39,43048,43173,C0O43069C3O43074C9O43109C11O43130C12O43134C15O43141C19O43170,,
code-creation,LazyCompile,10,190840,0x3c67daa1896,17,isURLInstance node:internal/url:1495:23,0x3d28e2b9208,~
code-source-info,0x3c67daa1896,39,42921,43020,C0O42942C3O42963C6O42988C12O43010C16O43017,,
tick,0x7ff7c11df18c,190890,0,0x0,3,0x7ff7c08240c0,0x3c67da95f9f,0x3c67da95b91,0x3c67da95191,0x3c67da94e84,0x3c67da94a4f,0x1de1b542089
code-creation,LazyCompile,10,190910,0x3c67daa19f6,81, node:internal/fs/utils:669:38,0x2b5dd7226c0,~
code-source-info,0x3c67daa19f6,81,18865,19145,C14O18899C22O18932C25O18932C31O18959C36O18990C49O18965C54O18959C55O19058C68O19058C74O19097C76O19127C78O19127C80O19144,,
code-creation,LazyCompile,10,190969,0x3c67daa1c06,110, node:internal/fs/utils:358:35,0x2b5dd721d38,~
code-source-info,0x3c67daa1c06,81,8960,9569,C16O9025C21O9079C26O9079C31O9176C37O9199C41O9228C45O9245C51O9245C60O9297C64O9318C69O9318C76O9364C77O9371C78O9394C94O9394C100O9513C104O9536C106O9536C107O9555C109O9566,,
code-creation,LazyCompile,10,191017,0x3c67daa1d7e,16,isUint8Array node:internal/util/types:13:22,0x2711fd47418,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x3c67daa1d7e,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,191177,0x3c67daa21e6,23,splitRoot node:fs:2375:33,0x2b5dd7192a8,~
code-source-info,0x3c67daa21e6,80,65400,65466,C0O65413C9O65440C12O65420C19O65457C22O65461,,
code-creation,LazyCompile,10,191313,0x3c67daa22ee,63,handleErrorFromBinding node:internal/fs/utils:341:32,0x2b5dd721ce8,~
code-source-info,0x3c67daa22ee,81,8304,8815,C0O8323C6O8387C11O8387C16O8410C24O8410C29O8468C31O8468C32O8495C38O8727C43O8754C51O8727C56O8801C60O8791C62O8814,,
code-creation,LazyCompile,10,191369,0x3c67daa2466,53,nextPart node:fs:2401:31,0x2b5dd7193a0,~
code-source-info,0x3c67daa2466,80,66157,66408,C0O66184C4O66180C9O66217C14O66217C20O66301C22O66312C24O66308C31O66342C33O66338C38O66371C40O66380C41O66194C47O66171C50O66393C52O66403,,
code-creation,LazyCompile,10,191461,0x3c67daa25ce,34,isFileType node:fs:205:20,0x2b5dd717010,~
code-source-info,0x3c67daa25ce,80,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,LazyCompile,10,191713,0x3c67daa290e,72,encodeRealpathResult node:fs:2388:30,0x2b5dd719350,~
code-source-info,0x3c67daa290e,80,65746,66012,C0O65769C4O65794C10O65814C17O65823C22O65840C24O65854C25O65875C30O65882C35O65882C41O65911C48O65920C53O65941C55O65957C56O65982C61O65999C66O65982C71O66009,,
code-creation,LazyCompile,10,191792,0x3c67daa2abe,109,shouldUseESMLoader node:internal/modules/run_main:30:28,0x3c67da93988,~
code-source-info,0x3c67daa2abe,132,870,1445,C0O905C8O905C13O949C15O970C16O982C17O1027C25O1027C30O1085C32O1117C37O1134C38O1146C39O1196C45O1212C51O1212C58O1260C59O1272C60O1276C66O1293C72O1293C79O1341C80O1354C81O1370C86O1370C91O1401C93O1419C98O1424C105O1429C108O1442,,
code-creation,LazyCompile,10,191865,0x3c67daa2cde,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x1975889b228,~
code-source-info,0x3c67daa2cde,111,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,191955,0x3c67daa303e,234,readPackage node:internal/modules/cjs/loader:290:21,0x1975889b1d8,~
code-source-info,0x3c67daa303e,111,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,Function,11,192083,0x29bccd85160,6232,resolve node:path:158:10,0x1599be4d510,^
code-source-info,0x29bccd85160,41,4875,9786,,,
code-creation,Function,11,192110,0x29bccd86a20,432,getCLIOptionsFromBinding node:internal/options:18:34,0x2b5dd73d848,^
code-source-info,0x29bccd86a20,91,514,620,,,
code-creation,Function,11,192127,0x29bccd86c40,104,next node:internal/per_context/primordials:282:9,0x359b0d49b18,^
code-source-info,0x29bccd86c40,6,8270,8317,,,
code-creation,Function,11,192146,0x29bccd86d20,252,SafeMap node:internal/per_context/primordials:360:16,0x359b0d4a0a8,^
code-source-info,0x29bccd86d20,6,10694,10711,,,
code-creation,Function,11,192165,0x29bccd86e80,272,validateString node:internal/validators:118:24,0x359b0d7ce70,^
code-source-info,0x29bccd86e80,15,3534,3646,,,
code-creation,Function,11,192186,0x29bccd87000,412,isWindowsDeviceRoot node:path:60:29,0x1599be4d408,^
code-source-info,0x29bccd87000,41,1991,2136,,,
code-creation,Function,11,192207,0x29bccd87200,544,nextPart node:fs:2401:31,0x2b5dd7193a0,^
code-source-info,0x29bccd87200,80,66157,66408,,,
code-creation,LazyCompile,10,192290,0x3c67daa3bc6,199,read node:internal/modules/package_json_reader:16:14,0x197588a0da8,~
code-source-info,0x3c67daa3bc6,112,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
tick,0x7ffdf681d194,192451,1,0x7ff7c02f6480,6,0x7ff7c0bf59a0,0x3c67daa3bf6,0x3c67daa3071,0x3c67daa2d38,0x3c67daa2b14,0x3c67da94a57,0x1de1b542089
code-creation,LazyCompile,10,192613,0x3c67daa44ce,70,runMainESM node:internal/modules/run_main:47:20,0x3c67da939d8,~
code-source-info,0x3c67daa44ce,132,1468,1817,C0O1468C12O1504C20O1504C25O1492C30O1573C38O1573C43O1555C49O1603C54O1621C59O1621C64O1603C69O1816,,
code-creation,LazyCompile,10,192680,0x3c67daa470e,222,loadESM node:internal/process/esm_loader:85:41,0x197588a1870,~
code-source-info,0x3c67daa470e,113,2652,2979,C10O2652C21O2679C24O2685C35O2679C58O2710C60O2725C63O2716C75O2710C113O2761C120O2765C125O2813C130O2821C138O2821C143O2850C154O2857C155O2870C163O2870C168O2895C178O2896C197O2978,,
code-creation,LazyCompile,10,192756,0x3c67daa4d2e,284,initializeLoader node:internal/process/esm_loader:50:32,0x197588a1740,~
code-source-info,0x3c67daa4d2e,113,1490,2608,C10O1490C18O1525C24O1525C29O1506C34O1690C37O1690C42O1755C48O1763C59O1770C60O1812C66O1812C71O1784C76O1841C79O1841C83O1900C88O1919C91O1933C96O1933C103O1939C110O1923C111O1964C114O2229C119O2229C125O2371C132O2404C135O2404C140O2422C147O2434C152O2434C163O2377C176O2347C202O2563C207O2579C212O2579C225O2563C259O2607,,
code-creation,LazyCompile,10,192832,0x3c67daa501e,175,handleMainPromise node:internal/modules/run_main:58:33,0x3c67da93a28,~
code-source-info,0x3c67daa501e,132,1853,2010,C10O1853C18O1868C21O1876C31O1887C34O1876C43O1921C53O1928C90O1963C93O1971C103O1983C106O1971C150O2009,,
code-creation,LazyCompile,10,192936,0x3c67daa525e,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x3d28e29aa00,~
code-source-info,0x3c67daa525e
code-creation,LazyCompile,10,193016,0x3c67daa5536,43,shift node:internal/fixed_queue:108:8,0x3d28e29fd20,~
code-source-info,0x3c67daa5536,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,193057,0x3c67daa567e,54,shift node:internal/fixed_queue:80:8,0x3d28e29fb30,~
code-source-info,0x3c67daa567e,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,193103,0x3c67daa57b6,42,emitBeforeScript node:internal/async_hooks:510:26,0x359b0d78c78,~
code-source-info,0x3c67daa57b6,13,17372,17528,C0O17413C12O17413C17O17471C22O17484C25O17475C31O17499C36O17499C41O17527,,
code-creation,LazyCompile,10,193152,0x3c67daa5906,180,pushAsyncContext node:internal/async_hooks:540:26,0x359b0d78e20,~
code-source-info,0x3c67daa5906,13,18046,18601,C0O18102C7O18120C9O18119C13O18138C20O18172C24O18187C26O18198C32O18205C35O18216C40O18232C44O18202C49O18245C54O18252C59O18295C60O18299C65O18310C72O18333C78O18340C83O18356C85O18355C88O18338C92O18379C97O18390C104O18413C107O18417C113O18424C118O18440C120O18439C123O18422C127O18461C134O18479C142O18492C146O18499C153O18515C158O18534C162O18548C169O18564C174O18581C179O18600,,
code-creation,LazyCompile,10,193233,0x3c67daa5b1e,125, node:internal/child_process:708:22,0x1975888ee58,~
code-source-info,0x3c67daa5b1e,100,20124,20501,C0O20139C3O20151C12O20170C20O20170C27O20205C28O20212C29O20239C32O20246C41O20254C43O20253C47O20288C52O20316C54O20329C55O20336C56O20359C58O20364C60O20364C65O20390C75O20410C85O20432C89O20390C94O20375C99O20346C102O20456C105O20463C114O20471C119O20489C124O20500,,
code-creation,LazyCompile,10,193291,0x3c67daa5cde,31,listenerCount node:events:854:23,0x2711fd6bf80,~
code-source-info,0x3c67daa5cde,23,25515,25797,C0O25547C5O25561C7O25613C9O25619C13O25634C17O25681C19O25690C20O25703C24O25760C28O25767C29O25785C30O25794,,
code-creation,LazyCompile,10,193329,0x3c67daa5de6,13,destroyHooksExist node:internal/async_hooks:487:27,0x359b0d78b88,~
code-source-info,0x3c67daa5de6,13,16798,16835,C0O16806C5O16822C8O16813C12O16832,,
code-creation,LazyCompile,10,193361,0x3c67daa5ed6,32,emitAfterScript node:internal/async_hooks:518:25,0x359b0d78cc8,~
code-source-info,0x3c67daa5ed6,13,17558,17659,C0O17573C5O17586C8O17577C14O17600C19O17600C23O17631C26O17631C31O17658,,
code-creation,LazyCompile,10,193410,0x3c67daa603e,167,popAsyncContext node:internal/async_hooks:554:25,0x359b0d78e70,~
code-source-info,0x3c67daa603e,13,18694,19296,C0O18729C7O18747C9O18746C13O18765C14O18781C19O18788C20O18801C21O18807C24O18811C31O18834C36O18850C38O18849C44O18869C49O18953C54O18960C58O18986C59O19012C61O19024C65O19032C72O19048C77O19069C80O19080C87O19098C90O19095C93O19067C97O19112C104O19128C109O19147C112O19158C119O19176C122O19185C125O19173C128O19145C132O19194C137O19220C142O19220C146O19230C153O19248C158O19262C162O19275C163O19289C166O19293,,
code-creation,LazyCompile,10,193469,0x3c67daa621e,13,enabledHooksExist node:internal/async_hooks:475:27,0x359b0d78a78,~
code-source-info,0x3c67daa621e,13,16609,16644,C0O16617C5O16633C8O16624C12O16641,,
code-creation,LazyCompile,10,193532,0x3c67daa6376,77, node:internal/modules/run_main:51:29,0x3c67daa4408,~
code-source-info,0x3c67daa6376,132,1629,1811,C0O1664C7O1669C15O1669C24O1699C30O1699C35O1722C44O1762C55O1786C60O1786C71O1768C76O1806,,
code-creation,LazyCompile,10,193610,0x3c67daa65f6,283,pathToFileURL node:internal/url:1458:23,0x3d28e2b9198,~
code-source-info,0x3c67daa65f
code-creation,LazyCompile,10,193698,0x3c67daa68c6,136,URL node:internal/url:621:14,0x3d28e2b7fb0,~
code-source-info,0x3c67daa68c6,39,17620,18024,C13O17688C17O17717C19O17736C23O17769C30O17784C40O17798C42O17797C46O17820C50O17825C57O17840C60O17836C65O17834C69O17859C85O17912C93O17912C103O17969C117O17969C129O17859C135O18023,,
code-creation,LazyCompile,10,193745,0x3c67daa6aa6,51,URLContext node:internal/url:161:14,0x3d28e2b7750,~
code-source-info,0x3c67daa6aa6,39,3883,4105,C0O3893C1O3904C5O3914C7O3926C11O3938C13O3952C17O3963C19O3977C23O3988C24O3998C28O4011C29O4021C33O4034C35O4044C39O4055C40O4066C44O4079C45O4093C50O4104,,
code-creation,LazyCompile,10,193833,0x3c67daa6cee,190,onParseComplete node:internal/url:533:25,0x3d28e2b7ce0,~
code-source-info,0x3c67daa6cee,39,14738,15424,C0O14854C2O14859C4O14858C8O14872C10O14882C14O14894C16O14905C20O14920C22O14944C24O14942C29O14968C43O14933C47O14994C49O15018C51O15016C56O15042C70O15007C74O15068C76O15077C80O15088C82O15108C84O15106C89O15128C101O15136C103O15097C107O15150C109O15160C113O15172C115O15185C119O15200C121O15209C125O15220C127O15230C129O15229C134O15284C136O15289C141O15309C144O15305C149O15303C153O15333C155O15338C157O15337C163O15352C168O15361C172O15377C177O15399C179O15398C183O15377C189O15423,,
code-creation,LazyCompile,10,193992,0x3c67daa7176,889,URLSearchParams node:internal/url:183:14,0x3d28e2b77f0,~
code-source-info,0x3c67daa
code-creation,LazyCompile,10,194111,0x3c67daa7756,35,initSearchParams node:internal/url:1019:26,0x3d28e2b8cf8,~
code-source-info,0x3c67daa7756,39,28156,28277,C0O28173C4O28191C6O28195C11O28209C15O28220C16O28227C17O28236C19O28240C25O28256C29O28254C34O28276,,
code-creation,LazyCompile,10,194181,0x3c67daa7906,199,encodePathChars node:internal/url:1443:25,0x3d28e2b9148,~
code-source-info,0x3c67daa7906,39,40900,41605,C0O40916C8O40920C15O40965C22O41009C31O40976C38O41091C46O41109C52O41109C59O41155C66O41199C75O41166C82O41226C90O41230C97O41276C104O41320C113O41287C120O41345C128O41349C135O41395C142O41439C151O41406C158O41471C166O41475C173O41521C180O41565C189O41532C196O41586C198O41602,,
code-creation,LazyCompile,10,194245,0x3c67daa7b36,70,set pathname node:internal/url:887:15,0x3d28e2b88e8,~
code-source-info,0x3c67daa7b36,39,24614,24823,C0O24663C5O24686C9O24695C11O24694C16O24717C17O24724C18O24730C29O24742C38O24765C40O24764C49O24806C54O24806C63O24730C69O24822,,
code-creation,LazyCompile,10,194285,0x3c67daa7c86,31, node:internal/url:638:21,0x3d28e2b8088,~
code-source-info,0x3c67daa7c86,39,18137,18214,C0O18147C4O18160C6O18159C10O18169C19O18177C21O18175C26O18203C30O18209,,
code-creation,LazyCompile,10,194344,0x3c67daa7db6,108,onParsePathComplete node:internal/url:592:29,0x3d28e2b7ec0,~
code-source-info,0x3c67daa7db6,39,16756,17238,C0O16876C2O16881C4O16880C8O16894C10O16907C12O16905C17O16927C22O16941C24O16950C28O16963C35O16976C40O16973C46O17013C48O17022C52O17033C59O17047C61O17046C66O17043C70O17129C72O17142C74O17140C79O17162C84O17176C86O17185C90O17198C97O17211C102O17208C107O17237,,
code-creation,LazyCompile,10,194442,0x3c67daa7f56,18,get href node:internal/url:736:11,0x3d28e2b8218,~
code-source-info,0x3c67daa7f56,39,20900,20940,C0O20910C4O20922C6O20921C12O20930C17O20935,,
tick,0x7ff7c11cf7b5,194492,0,0x0,3,0x7ff7c08240c0,0x7ff7c026c5e0,0x3c67daa7b75,0x7ff7c0cc8fc1,0x3c67daa670a,0x3c67daa6394,0x3c67daa474d,0x7ff7c0c8b243,0x7ff7c0274770,0x3c67daa5363
code-creation,LazyCompile,10,194527,0x3c67daa8226,393, node:internal/url:684:12,0x3d28e2b8178,~
code-source-info,0x3c67daa
code-creation,LazyCompile,10,194656,0x3c67daa86b6,308,import node:internal/modules/esm/loader:372:15,0x197588a2f20,~
code-source-info,0x3c67daa86b6,114,11547,12117,C10O11547C18O11611C25O11611C30O11642C32O11655C41O11669C50O11714C55O11740C64O11740C70O11778C81O11973C90O11793C98O11783C100O11783C116O11821C123O11844C137O11821C143O11887C154O11888C160O11922C170O11923C175O11814C186O11765C201O12001C212O12022C217O12018C223O12007C235O12001C261O12055C270O12108C283O12112,,
code-creation,LazyCompile,10,194744,0x3c67daa8a1e,251,getModuleJob node:internal/modules/esm/loader:285:21,0x197588a2ed0,~
code-source-info,0x3c67daa8a1e,114,8519,9368,C10O8519C18O8571C20O8604C22O8613C26O8622C33O8629C38O8796C49O8847C54O8847C59O8834C65O8940C82O8940C95O8929C118O8906C123O8914C128O9021C133O9031C138O9057C143O9031C150O9132C154O9177C159O9187C166O9213C176O9187C181O9235C185O9267C187O9278C208O9294C214O9352C226O9363,,
code-creation,LazyCompile,10,194847,0x3c67daa8e76,425,resolve node:internal/modules/esm/loader:556:16,0x197588a3060,~
code-source-info,0x3c67daa8e76,114,17002,18544,C10O17002C32O17068C37O17068C75O17114C79O17146C91O17217C94O17217C100O17249C120O17255C125O17249C126O17379C133O17430C135O17435C140O17445C144O17474C146O17479C150O17490C157O17497C168O17542C174O17552C178O17604C185O17641C191O17662C197O17689C207O17587C220O17581C246O17749C252O17794C270O17800C275O17794C276O17929C281O17937C286O17964C297O18044C318O18050C323O18044C324O18195C330O18279C351O18285C356O18279C357O18424C366O18424C371O18496C378O18512C384O18527C400O18539,,
code-creation,LazyCompile,10,195089,0x3c67daa9516,939,defaultResolve node:internal/modules/esm/resolve:1128:30,0x197588ab438,~
code-source-info,0x3c67daa
code-creation,LazyCompile,10,195225,0x3c67daac356,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:975:49,0x197588ab258,~
code-source-info,0x3c67daac356,118,32653,32792,C0O32670C2O32684C7O32692C8O32705C9O32709C10O32722C16O32726C21O32735C22O32747C23O32751C26O32758C30O32789,,
code-creation,LazyCompile,10,195270,0x3c67daac46e,81,isRelativeSpecifier node:internal/modules/esm/resolve:965:29,0x197588ab208,~
code-source-info,0x3c67daac46e,118,32350,32601,C0O32367C1O32380C7O32384C12O32414C19O32421C26O32439C32O32443C37O32452C38O32464C39O32470C41O32483C47O32487C52O32519C59O32526C66O32544C72O32548C77O32557C78O32569C79O32585C80O32598,,
code-creation,LazyCompile,10,195326,0x3c67daac5fe,15,get protocol node:internal/url:772:15,0x3d28e2b8358,~
code-source-info,0x3c67daac5fe,39,21820,21863,C0O21830C4O21842C6O21841C10O21851C14O21858,,
code-creation,LazyCompile,10,195384,0x3c67daac7f6,191,checkIfDisallowedImport node:internal/modules/esm/resolve:1059:33,0x197588ab348,~
code-source-info,0x3c67daac7f6,118,35531,36707,C0O35573C4O35619C16O35648C24O35619C29O35692C36O35701C41O35739C48O35748C53O35777C56O35781C62O35940C66O35972C73O35981C78O36015C85O36024C90O36060C106O36066C111O36060C112O36252C117O36273C127O36280C128O36297C133O36314C138O36314C145O36358C161O36364C166O36358C167O36538C183O36544C188O36538C190O36706,,
code-creation,LazyCompile,10,195449,0x3c67daaca5e,104,throwIfUnsupportedURLScheme node:internal/modules/esm/resolve:1107:37,0x197588ab3e8,~
code-source-info,0x3c67daaca5e,118,36954,37425,C0O36996C4O37028C11O37037C16O37064C23O37073C30O37103C32O37158C39O37167C44O37199C51O37208C56O37248C63O37297C77O37356C88O37297C96O37254C101O37248C103O37424,,
code-creation,LazyCompile,10,195529,0x3c67daacc16,64,getConditionsSet node:internal/modules/esm/resolve:170:26,0x197588aaa88,~
code-source-info,0x3c67daacc16,118,5549,5885,C0O5567C6O5614C8O5610C13O5641C18O5646C24O5681C40O5687C45O5681C46O5812C53O5819C58O5843C59O5852C63O5882,,
code-creation,LazyCompile,10,195594,0x3c67daacd96,171,moduleResolve node:internal/modules/esm/resolve:988:23,0x197588ab2a8,~
code-source-info,0x3c67daacd96,118,32994,33785,C0O33069C7O33078C12O33103C19O33112C23O33235C25O33248C28O33252C34O33311C47O33322C55O33358C60O33384C66O33388C71O33404C83O33420C89O33407C99O33503C106O33514C115O33512C116O33556C120O33582C132O33593C138O33675C145O33684C150O33702C152O33718C153O33722C165O33729C170O33782,,
code-creation,LazyCompile,10,195751,0x3c67daad126,490,finalizeResolution node:internal/modules/esm/resolve:397:28,0x197588aad08,~
code-source-info,0x3c67daad
code-creation,LazyCompile,10,195860,0x3c67daad546,78,get pathname node:internal/url:878:15,0x3d28e2b8878,~
code-source-info,0x3c67daad546,39,24396,24596,C0O24418C4O24423C6O24422C10O24438C14O24447C16O24446C21O24480C27O24484C30O24488C31O24502C36O24507C42O24514C47O24528C49O24538C50O24544C57O24555C60O24578C68O24555C77O24591,,
code-creation,LazyCompile,10,195956,0x3c67daad79e,106,fileURLToPath node:internal/url:1416:23,0x3d28e2b90f8,~
code-source-info,0x3c67daad79e,39,39764,40097,C0O39776C6O39811C13O39818C22O39841C25O39846C31O39872C49O39878C54O39872C55O39949C62O39958C67O39976C77O39982C82O39976C83O40021C92O40040C101O40068C105O40094,,
code-creation,LazyCompile,10,196022,0x3c67daad9d6,150,get origin node:internal/url:749:13,0x3d28e2b82e8,~
code-source-info,0x3c67daad9d6,39,21222,21802,C0O21306C4O21311C6O21310C10O21338C59O21386C64O21391C70O21398C78O21435C83O21455C89O21459C95O21443C101O21465C105O21472C110O21570C116O21591C117O21703C122O21735C127O21747C132O21757C137O21710C142O21763C143O21776C149O21797,,
code-creation,LazyCompile,10,196109,0x3c67daadcbe,261,getPathFromURLWin32 node:internal/url:1363:29,0x3d28e2b9058,~
code-source-info,0x3c67daadcbe
code-creation,LazyCompile,10,196178,0x3c67daadf66,19,get hostname node:internal/url:844:15,0x3d28e2b86c8,~
code-source-info,0x3c67daadf66,39,23572,23619,C0O23582C4O23594C6O23593C10O23603C18O23614,,
code-creation,LazyCompile,10,196248,0x3c67daae2de,30,tryStatSync node:internal/modules/esm/resolve:189:3,0x197588ab488,~
code-source-info,0x3c67daae2de,118,6098,6164,C0O6153C5O6117C10O6108C21O6157C24O6153C29O6164,,
code-creation,LazyCompile,10,196303,0x3c67daae496,123,statSync node:fs:1543:18,0x2b5dd7184e8,~
code-source-info,0x3c67daae496,80,40711,41125,C7O40711C16O40774C21O40781C26O40820C33O40822C40O40847C45O40855C52O40860C55O40871C60O40871C66O40933C76O40855C82O40973C88O40988C96O41001C102O41030C103O41047C104O41056C109O41056C113O41088C118O41095C122O41122,,
code-creation,LazyCompile,10,196353,0x3c67daae636,37, node:internal/fs/utils:681:42,0x2b5dd722710,~
code-source-info,0x3c67daae636,81,19192,19331,C14O19248C19O19248C24O19283C29O19283C34O19316C36O19328,,
tick,0x7ff7c0173575,196479,0,0x0,3,0x7ff7c08240c0,0x3c67daae4ab,0x3c67daae2e8,0x3c67daad23a,0x3c67daace3b,0x3c67daa9781,0x3c67daa8f45,0x3c67daa8a70,0x3c67daa873f,0x3c67daa63bd,0x3c67daa474d,0x7ff7c0c8b243,0x7ff7c0274770,0x3c67daa5363
code-creation,LazyCompile,10,196530,0x3c67daae776,64,hasNoEntryError node:fs:1480:25,0x2b5dd7183b8,~
code-source-info,0x3c67daae776,80,39085,39287,C0O39104C6O39132C11O39148C16O39132C21O39161C27O39175C36O39179C39O39192C40O39211C46O39236C51O39242C58O39247C61O39260C62O39271C63O39284,,
code-creation,LazyCompile,10,196607,0x3c67daae8ae,576,getStatsFromBinding node:internal/fs/utils:531:29,0x2b5dd7224e0,~
code-source-info,0x3c67daae8ae
code-creation,LazyCompile,10,196701,0x3c67daaecde,16,isBigUint64Array node:internal/util/types:53:26,0x2711fd47880,~
code-source-info,0x3c67daaecde,17,1423,1514,C0O1436C5O1443C12O1490C15O1511,,
code-creation,LazyCompile,10,196733,0x3c67daaedfe,19,msFromTimeSpec node:internal/fs/utils:447:24,0x2b5dd722208,~
code-source-info,0x3c67daaedfe,81,11486,11547,C0O11503C2O11516C4O11514C10O11535C12O11533C15O11526C18O11544,,
code-creation,LazyCompile,10,196781,0x3c67daaf03e,116,Stats node:internal/fs/utils:496:15,0x2b5dd722400,~
code-source-info,0x3c67daaf03e,81,13278,13819,C0O13418C41O13418C46O13548C48O13561C52O13575C54O13588C58O13602C60O13615C64O13629C66O13646C70O13664C73O13677C77O13675C81O13701C84O13714C88O13712C92O13738C95O13751C99O13749C103O13775C106O13792C110O13790C115O13818,,
code-creation,LazyCompile,10,196830,0x3c67daaf216,62,StatsBase node:internal/fs/utils:401:19,0x2b5dd721dd8,~
code-source-info,0x3c67daaf216,81,10347,10648,C0O10435C2O10444C6O10454C8O10464C12O10475C14O10486C18O10498C20O10507C24O10517C26O10526C30O10536C32O10546C36O10557C38O10570C42O10584C44O10593C48O10603C50O10613C54O10624C56O10636C61O10647,,
code-creation,LazyCompile,10,196889,0x3c67daaf40e,29,dateFromMs node:internal/fs/utils:461:20,0x2b5dd7222a8,~
code-source-info,0x3c67daaf40e,81,12012,12059,C0O12022C7O12038C10O12038C17O12049C23O12029C28O12056,,
code-creation,LazyCompile,10,196931,0x3c67daaf516,16,StatsBase.isDirectory node:internal/fs/utils:415:43,0x2b5dd721e28,~
code-source-info,0x3c67daaf516,81,10694,10745,C0O10714C7O10733C10O10714C15O10742,,
code-creation,LazyCompile,10,196968,0x3c67daaf62e,54,Stats._checkModeProperty node:internal/fs/utils:518:46,0x2b5dd722450,~
code-source-info,0x3c67daaf62e,81,14177,14405,C0O14193C8O14224C10O14220C17O14248C19O14244C26O14277C28O14273C33O14295C34O14308C35O14374C42O14381C44O14379C50O14389C53O14402,,
code-creation,LazyCompile,10,197005,0x3c67daaf766,16,StatsBase.isFile node:internal/fs/utils:419:38,0x2b5dd721eb8,~
code-source-info,0x3c67daaf766,81,10787,10838,C0O10807C7O10826C10O10807C15O10835,,
code-creation,RegExp,3,197089,0x29bccd87480,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Function,11,197186,0x29bccd87b20,1936,toNamespacedPath node:path:618:19,0x1599be4d6f8,^
code-source-info,0x29bccd87b20,41,20086,21201,,,
code-creation,Function,11,197208,0x29bccd88320,152,hasHooks node:internal/async_hooks:471:18,0x359b0d78a28,^
code-source-info,0x29bccd88320,13,16531,16579,,,
code-creation,Function,11,197240,0x29bccd88420,1916,getPathFromURLWin32 node:internal/url:1363:29,0x3d28e2b9058,^
code-source-info,0x29bccd88420,39,37816,39214,,,
code-creation,LazyCompile,10,197521,0x3c67daafcbe,37,get search node:internal/url:896:13,0x3d28e2b8958,~
code-source-info,0x3c67daafcbe,39,24839,24970,C0O24867C4O24872C6O24871C10O24857C15O24887C19O24915C24O24930C26O24940C27O24946C32O24957C36O24965,,
code-creation,LazyCompile,10,197566,0x3c67daafe06,37,get hash node:internal/url:926:11,0x3d28e2b8aa8,~
code-source-info,0x3c67daafe06,39,25601,25744,C0O25632C4O25637C6O25636C10O25619C15O25652C19O25686C24O25701C26O25711C27O25717C32O25728C36O25739,,
code-creation,LazyCompile,10,197655,0x3c67daaff96,181,set search node:internal/url:903:13,0x3d28e2b89c8,~
code-source-info,0x3c67daaff96,39,24986,25509,C0O25014C4O25019C6O25018C10O25034C17O25043C23O25069C25O25080C30O25097C31O25107C35O25122C44O25136C46O25135C51O25132C57O25178C58O25188C64O25192C69O25201C79O25210C86O25250C88O25260C92O25273C101O25286C106O25283C110O25314C114O25337C125O25351C134O25385C142O25385C154O25337C159O25459C168O25481C170O25480C174O25459C180O25508,,
code-creation,LazyCompile,10,197717,0x3c67dab018e,41,toUSVString node:internal/util:59:21,0x2711fd45110,~
code-source-info,0x3c67dab018e,16,1409,1709,C0O1432C4O1586C11O1606C14O1586C20O1636C22O1653C24O1664C25O1668C30O1699C35O1675C40O1706,,
code-creation,LazyCompile,10,197786,0x3c67dab0306,144,set hash node:internal/url:933:11,0x3d28e2b8b10,~
code-source-info,0x3c67dab0306,39,25758,26205,C0O25784C4O25789C6O25788C10O25839C15O25862C17O25882C18O25895C22O25910C31O25924C33O25923C38O25920C42O25955C43O25962C44O25975C45O25983C51O25987C56O25996C66O26003C73O26039C75O26052C79O26063C88O26076C93O26073C97O26105C108O26117C117O26150C125O26150C137O26105C143O26204,,
code-creation,LazyCompile,10,197843,0x3c67dab04ce,51,throwIfUnsupportedURLProtocol node:internal/modules/esm/resolve:1100:39,0x197588ab398,~
code-source-info,0x3c67dab04ce,118,36749,36914,C0O36768C7O36777C12O36796C19O36805C24O36831C31O36840C36O36860C43O36866C48O36860C50O36913,,
code-creation,LazyCompile,10,197905,0x3c67dab0666,64,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:103:39,0x197588af678,~
code-source-info,0x3c67dab0666,119,3548,3759,C0O3583C7O3583C13O3600C20O3635C23O3660C28O3605C35O3676C36O3688C37O3692C42O3723C46O3715C58O3732C63O3756,,
code-creation,LazyCompile,10,197944,0x3c67dab0ba6,18,toString node:internal/url:732:11,0x3d28e2b81c8,~
code-source-info,0x3c67dab0ba6,39,20846,20886,C0O20856C4O20868C6O20867C12O20876C17O20881,,
code-creation,LazyCompile,10,198033,0x3c67dab0f4e,280,getFileProtocolModuleFormat node:internal/modules/esm/get_format:51:37,0x197588af5d8,~
code-source-info,0x3c67dab0f4e,119,1588,2922,C0O1639C5O1639C10O1674C15O1674C20O1696C22O1704C27O1722C32O1729C39O1749C50O1786C51O1812C58O1830C62O1840C64O1852C66O1866C67O1872C74O1908C79O2007C83O2025C84O2042C85O2065C88O2074C93O2078C100O2098C107O2118C112O2150C117O2150C122O2206C127O2206C132O2254C139O2275C142O2291C147O2275C156O2254C162O2324C167O2395C171O2491C182O2470C191O2568C201O2545C207O2621C216O2747C229O2765C239O2708C243O2799C259O2805C264O2799C265O2874C270O2881C279O2919,,
code-creation,LazyCompile,10,198167,0x3c67dab1306,275,extname node:path:836:10,0x1599be4d838,~
code-source-info,0x3c67dab
code-creation,LazyCompile,10,198251,0x3c67dab1596,13,getPackageType node:internal/modules/esm/resolve:848:24,0x197588ab0c8,~
code-source-info,0x3c67dab1596,118,28538,28631,C0O28571C3O28571C8O28623C12O28628,,
code-creation,LazyCompile,10,198309,0x3c67dab17ee,173,getPackageScopeConfig node:internal/modules/esm/resolve:253:31,0x197588aab28,~
code-source-info,0x3c67dab17ee,118,7802,8901,C0O7839C13O7839C19O7938C24O7953C32O7957C39O8035C41O8069C46O8086C49O8086C54O8069C60O8195C66O8203C68O8224C69O8259C72O8280C85O8297C91O8506C96O8538C100O8515C105O8548C107O7879C110O8587C115O8587C120O8643C127O8661C132O8709C137O8731C142O8775C147O8800C154O8820C159O8837C164O8837C170O8877C172O8898,,
tick,0x7ff7c11f0ce0,198431,0,0x0,3,0x7ff7c08240c0,0x3c67dab1599,0x3c67dab0f6e,0x3c67dab06a0,0x3c67daa988d,0x3c67daa8f45,0x3c67daa8a70,0x3c67daa873f,0x3c67daa63bd,0x3c67daa474d,0x7ff7c0c8b243,0x7ff7c0274770,0x3c67daa5363
code-creation,LazyCompile,10,198521,0x3c67dab1c0e,331,getPackageConfig node:internal/modules/esm/resolve:197:26,0x197588aaad8,~
code-source-info,0x3c67dab1c0e,118,6331,7694,C0O6377C5O6394C10O6394C16O6408C18O6443C20O6459C21O6483C26O6501C31O6501C37O6511C42O6523C44O6578C51O6598C56O6639C61O6663C66O6711C71O6738C78O6762C83O6779C88O6779C94O6810C96O6831C97O6846C102O6873C107O6887C115O6885C125O6932C137O6991C144O7002C163O7029C168O7043C174O7029C178O7027C185O7076C192O6938C197O6932C198O7108C203O7117C208O7123C213O7129C218O7162C223O7190C233O7243C235O7267C241O7297C243O7318C249O7348C251O7423C253O7432C260O7453C265O7469C268O7511C275O7529C281O7559C287O7570C293O7581C299O7592C305O7606C312O7624C317O7641C322O7641C328O7670C330O7691,,
code-creation,Function,11,198663,0x29bccd88c00,956,URL node:internal/url:621:14,0x3d28e2b7fb0,^
code-source-info,0x29bccd88c00,39,17620,18024,,,
code-creation,Function,11,198690,0x29bccd89020,320,isFileType node:fs:205:20,0x2b5dd717010,^
code-source-info,0x29bccd89020,80,5489,5737,,,
code-creation,Function,11,198709,0x29bccd891c0,280, node:internal/url:638:21,0x3d28e2b8088,^
code-source-info,0x29bccd891c0,39,18137,18214,,,
code-creation,Function,11,198725,0x29bccd89340,156,get protocol node:internal/url:772:15,0x3d28e2b8358,^
code-source-info,0x29bccd89340,39,21820,21863,,,
code-creation,Function,11,198742,0x29bccd89440,340,URLContext node:internal/url:161:14,0x3d28e2b7750,^
code-source-info,0x29bccd89440,39,3883,4105,,,
code-creation,Function,11,198767,0x29bccd89600,1468,onParseComplete node:internal/url:533:25,0x3d28e2b7ce0,^
code-source-info,0x29bccd89600,39,14738,15424,,,
code-creation,LazyCompile,10,198839,0x3c67dab252e,3, node:internal/per_context/primordials:285:21,0x359b0d49bc0,~
code-source-info,0x3c67dab252e,6,8339,8370,C0O8351C2O8363,,
code-creation,LazyCompile,10,198907,0x3c67dab2626,78,get node:internal/modules/esm/module_map:18:6,0x197588a54e0,~
code-source-info,0x3c67dab2626,115,604,748,C11O617C18O645C28O645C33O678C43O678C48O713C50O726C61O726C71O736C77O743,,
code-creation,LazyCompile,10,198973,0x3c67dab281e,111,#createModuleJob node:internal/modules/esm/loader:321:19,0x197588a2cf0,~
code-source-info,0x3c67dab281e,114,10035,10886,C0O10035C17O10108C22O10555C31O10598C37O10598C42O10657C70O10657C76O10810C79O10815C84O10825C92O10851C103O10825C108O10870C110O10881,,
code-creation,LazyCompile,10,199066,0x3c67dab2b46,196,ModuleJob node:internal/modules/esm/module_job:56:14,0x197588a6370,~
code-source-info,0x3c67dab2b46,116,1367,3272,C0O1367C27O1400C32O1400C50O1478C55O1490C59O1505C64O1527C68O1552C73O1564C77O1579C82O1595C86O1616C90O1628C94O1766C101O1787C104O1816C113O1825C122O1830C135O1787C140O1785C144O1937C149O2948C152O2962C155O2960C159O3072C169O3099C178O3107C181O3072C186O3237C190O3255C195O3271,,
code-creation,LazyCompile,10,199149,0x3c67dab35be,193,moduleProvider node:internal/modules/esm/loader:322:28,0x3c67dab2748,~
code-source-info,0x3c67dab35be,114,10108,10527,C10O10108C18O10206C21O10217C26O10222C33O10238C39O10255C43O10217C57O10206C80O10165C85O10187C90O10312C97O10324C102O10324C108O10351C110O10379C125O10385C130O10379C131O10452C153O10459C168O10520,,
code-creation,LazyCompile,10,199245,0x3c67dab39ce,397,load node:internal/modules/esm/loader:401:13,0x197588a2f70,~
code-source-info,0x3c67dab39ce,114,12495,13760,C10O12495C60O12544C62O12549C67O12557C71O12584C73O12589C77O12598C84O12605C95O12648C101O12656C105O12681C114O12687C127O12681C153O12731C159O12772C177O12778C182O12772C183O12907C188O12922C193O12954C198O12999C210O12999C216O13108C225O13154C229O13171C242O13114C247O13108C248O13214C254O13255C275O13261C280O13255C281O13406C296O13481C299O13481C309O13517C312O13517C318O13550C337O13556C342O13550C343O13709C350O13725C356O13740C372O13755,,
code-creation,LazyCompile,10,199366,0x3c67dab3d96,226,defaultLoad node:internal/modules/esm/load:13:27,0x197588b87f8,~
code-source-info,0x3c67dab3d96,125,380,859,C10O380C18O408C23O452C28O465C33O494C38O521C43O536C56O530C84O578C98O578C103O634C105O651C112O680C117O707C121O732C126O759C131O774C144O768C172O816C179O830C185O843C201O856,,
code-creation,LazyCompile,10,199434,0x3c67dab4116,150,validateAssertions node:internal/modules/esm/assert:55:28,0x197588a8470,~
code-source-info,0x3c67dab4116,117,1835,2993,C12O1897C17O1897C26O1940C33O1953C37O1968C38O1999C48O2155C55O2505C66O2130C67O2142C68O2320C76O2325C83O2393C84O2405C85O2422C88O2469C93O2429C98O2475C99O2581C100O2593C101O2745C109O2750C116O2862C129O2868C134O2862C135O2939C138O2979C143O2939C149O2992,,
code-creation,LazyCompile,10,199533,0x3c67dab4486,430,defaultGetSource node:internal/modules/esm/get_source:30:32,0x197588b8f38,~
code-source-info,0x3c67dab4486,126,903,1881,C10O903C18O956C25O956C31O977C33O999C40O1008C45O1028C50O1043C62O1037C92O1087C99O1096C104O1130C111O1150C114O1175C119O1130C125O1191C127O1212C134O1218C139O1212C140O1267C147O1278C154O1299C161O1319C164O1319C171O1345C180O1308C188O1384C194O1432C201O1441C206O1469C213O1478C218O1515C223O1521C236O1515C262O1575C274O1565C304O1598C311O1647C324O1707C343O1647C350O1604C355O1598C356O1778C363O1788C372O1807C377O1814C382O1823C387O1823C393O1864C405O1878,,
code-creation,LazyCompile,10,199664,0x3c67dab4a56,196,readFile node:internal/fs/promises:788:24,0x197588bb258,~
code-source-info,0x3c67dab4a56,127,22848,23194,C10O22848C18O22869C23O22890C28O22879C35O22939C44O22957C46O22977C48O22966C53O22994C56O23001C71O23031C72O23037C75O23058C80O23037C84O23083C98O23089C111O23083C137O23117C145O23152C151O23184C156O23124C171O23191,,
code-creation,LazyCompile,10,199717,0x3c67dab67de,29,checkAborted node:internal/fs/promises:320:22,0x197588ba588,~
code-source-info,0x3c67dab67de,127,7483,7549,C0O7497C7O7507C16O7523C21O7529C26O7523C28O7548,,
code-creation,LazyCompile,10,199765,0x3c67dab6986,182,open node:internal/fs/promises:450:20,0x197588ba768,~
code-source-info,0x3c67dab6986,127,11766,12079,C10O11766C18O11791C23O11798C29O11845C34O11845C39O11870C55O11877C62O11916C69O11950C72O11958C79O11973C82O11984C87O11984C95O12061C104O11958C117O11944C142O11923C157O12076,,
code-creation,LazyCompile,10,199873,0x3c67dab700e,515,stringToFlags node:internal/fs/utils:556:23,0x2b5dd722530,~
code-source-info,0x3c67dab700e
code-creation,LazyCompile,10,199990,0x3c67dab73fe,97,parseFileMode node:internal/validators:59:23,0x359b0d7cd10,~
code-source-info,0x3c67dab73fe,15,1545,1852,C0O1569C11O1587C17O1625C24O1650C27O1630C34O1677C41O1722C52O1683C57O1677C58O1745C66O1753C73O1789C89O1789C94O1836C96O1849,,
code-creation,LazyCompile,10,200048,0x3c67dab7596,206, node:internal/validators:84:3,0x359b0d7cdd0,~
code-source-info,0x3c67dab7596,15,2338,2933,C36O2481C39O2486C45O2511C51O2553C67O2559C72O2553C73O2624C78O2629C84O2664C100O2670C105O2664C106O2735C116O2774C129O2787C142O2741C147O2735C148O2814C150O2824C157O2839C162O2855C172O2894C185O2907C198O2861C203O2855C205O2932,,
code-creation,LazyCompile,10,200113,0x3c67dab775e,9,isInt32 node:internal/validators:36:17,0x359b0d7c7b0,~
code-source-info,0x3c67dab775e,15,769,814,C0O782C2O806C5O795C8O811,,
tick,0x7ffdf681c774,200418,1,0x7ff7c02fa0e0,6,0x7ff7c0bf59a0,0x3c67dab69ee,0x3c67dab4ab8,0x3c67dab44b8,0x3c67dab3e19,0x3c67dab3a40,0x3c67dab35e9,0x3c67dab2bcd,0x3c67dab2864,0x3c67daa8aee,0x7ff7c0c8b243,0x7ff7c0274770,0x3c67daa5363
code-creation,LazyCompile,10,200686,0x3c67dab7a0e,263,link node:internal/modules/esm/module_job:69:18,0x3c67dab29c8,~
code-source-info,0x3c67dab7a0e,116,1937,2889,C4O1937C26O1958C36O1983C48O1972C73O1970C77O2005C89O2017C98O2035C100O2024C104O2005C108O2357C110O2357C112O2385C117O2390C122O2397C132O2397C138O2728C140O2765C151O2786C156O2782C162O2771C174O2765C199O2825C210O2847C218O2843C224O2832C238O2882,,
code-creation,LazyCompile,10,200743,0x3c67dab7c96,19,primordials.PromisePrototypeCatch node:internal/per_context/primordials:406:37,0x359b0d4a548,~
code-source-info,0x3c67dab7c96,6,11986,12074,C0O12018C13O12018C18O12074,,
code-creation,LazyCompile,10,200806,0x3c67dab7e6e,216,set node:internal/modules/esm/module_map:23:6,0x197588a5530,~
code-source-info,0x3c67dab7e6e,115,755,1288,C11O768C21O801C31O801C36O834C46O834C51O869C55O888C57O877C62O898C73O955C91O961C96O955C97O1024C109O1041C124O1066C126O1062C137O1106C148O1024C152O1165C154O1171C165O1171C178O1183C183O1183C188O1208C190O1231C194O1243C196O1256C210O1256C215O1283,,
code-creation,LazyCompile,10,200869,0x3c67dab806e,89,logger node:internal/util/debuglog:95:18,0x2711fd61f90,~
code-source-info,0x3c67dab806e,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,200922,0x3c67dab81d6,140,debug node:internal/util/debuglog:76:15,0x2711fd61ef0,~
code-source-info,0x3c67dab81d6,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,200970,0x3c67dab8386,41,init node:internal/util/debuglog:72:16,0x2711fd61ea0,~
code-source-info,0x3c67dab8386,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,201002,0x3c67dab8476,2,testEnabled node:internal/util/debuglog:32:19,0x1de1b5581b0,~
code-source-info,0x3c67dab8476,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,201053,0x3c67dab860e,116,debuglogImpl node:internal/util/debuglog:49:22,0x2711fd61cf0,~
code-source-info,0x3c67dab860e,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,201096,0x3c67dab87c6,10, node:internal/modules/esm/module_map:9:63,0x197588a5440,~
code-source-info,0x3c67dab87c6,115,271,298,C0O284C2O290C9O297,,
code-creation,LazyCompile,10,201120,0x3c67dab8876,2,noop node:internal/util/debuglog:47:14,0x2711fd61ca0,~
code-source-info,0x3c67dab8876,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,201146,0x3c67dab892e,10, node:internal/modules/esm/loader:381:15,0x3c67daa8520,~
code-source-info,0x3c67dab892e,114,11893,11911,C0O11906C5O11906C9O11911,,
code-creation,LazyCompile,10,201222,0x3c67dab8d86,433,run node:internal/modules/esm/module_job:193:12,0x197588a6460,~
code-source-info,0x3c67dab8d86,116,7177,8381,C10O7177C18O7198C23O7198C35O7187C58O7234C61O7265C66O7301C71O7308C76O7308C90O7290C128O7368C133O7373C143O7380C152O7415C158O7453C163O7415C169O7474C182O7484C186O7521C196O7553C204O7525C211O7588C224O7598C228O7688C235O7719C240O7726C248O7688C259O7758C267O7808C272O7815C277O7758C292O7836C297O7891C302O7919C307O7926C312O7892C318O7959C325O7964C330O7991C344O8140C358O8082C364O8163C370O8243C376O8001C380O8324C382O8324C383O8345C388O8367C408O8376,,
code-creation,LazyCompile,10,201290,0x3c67dab90b6,24,instantiate node:internal/modules/esm/module_job:102:14,0x197588a63c0,~
code-source-info,0x3c67dab90b6,116,3289,3428,C0O3308C6O3370C11O3370C15O3363C19O3410C23O3423,,
code-creation,LazyCompile,10,201442,0x3c67dab97be,935,_instantiate node:internal/modules/esm/module_job:109:21,0x197588a6410,~
code-source-info,0x3c67dab97be,116,3452,7162,C4O3452C29O3482C37O3482C42O3482C44O3535C48O3535C50O3847C54O3853C67O3847C97O3905C105O3933C111O3956C118O3971C126O4008C136O4008C142O4036C147O4084C153O4091C159O4109C165O4067C172O4148C178O4155C184O4155C203O4205C215O4205C219O4550C227O4555C236O4592C244O4618C254O4592C261O4730C273O4753C283O4730C289O4798C298O4843C313O4798C319O4942C331O4977C343O4942C350O4914C358O4933C366O5105C372O5112C378O5112C393O5094C418O5077C423O5188C428O5498C434O5505C440O5505C454O5487C479O5463C490O5611C492O5622C497O5675C499O5685C503O6010C511O6031C517O6010C523O6100C529O6136C533O6159C546O6136C552O6211C562O6240C581O6300C592O6280C599O6362C606O6440C617O6558C632O6595C640O6647C659O6519C662O6221C666O6718C678O6741C688O6718C694O6766C706O6798C714O6778C718O6820C726O6830C734O6830C739O6828C743O6893C745O6893C746O6944C778O6927C809O6927C812O7105C816O7134C818O7132C822O6916C906O7161,,
code-creation,LazyCompile,10,201559,0x3c67dab9e36,179,addJobsToDependencyGraph node:internal/modules/esm/module_job:111:38,0x3c67dab9500,~
code-source-info,0x3c67dab9e36,116,3535,3840,C10O3535C18O3565C23O3581C28O3581C35O3608C46O3615C47O3632C52O3644C57O3644C62O3706C74O3690C100O3721C111O3743C118O3771C123O3805C126O3771C134O3739C140O3728C154O3833,,
code-creation,LazyCompile,10,201707,0x3c67daba1ce,627,processPromiseRejections node:internal/process/promises:211:34,0x3d28e29e438,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x3c67daba1ce
code-creation,LazyCompile,10,202284,0x3c67dabb126,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x3d28e29d9a8,~
code-source-info,0x3c67dabb126,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
code-creation,LazyCompile,10,202350,0x3c67dabb246,112,FileHandle node:internal/fs/promises:117:14,0x197588bb2a8,~
code-source-info,0x3c67dabb246,127,2979,3152,C3O2999C11O2999C40O3013C45O3018C50O3027C54O3046C59O3051C67O3058C69O3082C77O3056C81O3098C86O3103C91O3110C95O3120C100O3125C104O3140C111O3151,,
tick,0x7ff7c01f0bdd,202426,0,0x0,3,0x7ff7c08240c0,0x3c67dab6a14,0x7ff7c0c8b243
code-creation,LazyCompile,10,202444,0x3c67dabb3c6,63,MixedEventEmitter node:internal/event_target:964:16,0x3c67da85d18,~
code-source-info,0x3c67dabb3c6,44,26760,26894,C0O26760C8O26779C15O26786C21O26822C25O26831C29O26822C41O26845C48O26867C54O26845C62O26893,,
code-creation,LazyCompile,10,202587,0x3c67dabb6ae,601,readFileHandle node:internal/fs/promises:360:30,0x197588ba628,~
code-source-info,0x3c67dabb6ae
code-creation,LazyCompile,10,202694,0x3c67dabbaf6,8,get fd node:internal/fs/promises:130:9,0x197588bb360,~
code-source-info,0x3c67dabbaf6,127,3229,3261,C0O3239C2O3251C4O3250C7O3256,,
code-creation,LazyCompile,10,202743,0x3c67dabbc76,33,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:418:43,0x359b0d4a600,~
code-source-info,0x3c67dabbc76,6,12582,12862,C0O12582C13O12718C27O12718C32O12862,,
code-creation,LazyCompile,10,202782,0x3c67dabbe06,46, node:internal/per_context/primordials:421:15,0x3c67dabbbc8,~
code-source-info,0x3c67dabbe06,6,12730,12857,C0O12847C14O12745C20O12820C28O12827C34O12846C39O12847C45O12857,,
code-creation,LazyCompile,10,202815,0x3c67dabbf4e,27,SafePromise node:internal/per_context/primordials:402:16,0x359b0d4a4f8,~
code-source-info,0x3c67dabbf4e,6,11906,11937,C3O11919C7O11925C11O11919C26O11936,,
code-creation,LazyCompile,10,202849,0x3c67dabc046,22, node:internal/per_context/primordials:422:21,0x3c67dabbd50,~
code-source-info,0x3c67dabc046,6,12761,12810,C0O12771C16O12771C21O12810,,
code-creation,LazyCompile,10,202899,0x3c67dabc13e,19,allocUnsafeSlow node:buffer:383:50,0x2711fd771a8,~
code-source-info,0x3c67dabc13e,24,11607,11675,C0O11619C5O11619C9O11640C14O11647C18O11672,,
code-creation,LazyCompile,10,202937,0x3c67dabc24e,54, node:buffer:349:36,0x2711fd77080,~
code-source-info,0x3c67dabc24e,24,10551,10711,C0O10566C8O10566C13O10599C14O10610C21O10626C23O10623C28O10646C33O10678C46O10652C51O10646C53O10710,,
code-creation,LazyCompile,10,202973,0x3c67dabc376,30,validateNumber node:internal/validators:123:24,0x359b0d7cf10,~
code-source-info,0x3c67dabc376,15,3673,3785,C0O3692C6O3728C22O3734C27O3728C29O3784,,
code-creation,LazyCompile,10,203010,0x3c67dabc4a6,71,createUnsafeBuffer node:internal/buffer:1059:28,0x3d28e28bd18,~
code-source-info,0x3c67dabc4a6,25,31379,31495,C0O31391C8O31403C15O31422C22O31429C39O31471C48O31483C70O31494,,
code-creation,LazyCompile,10,203141,0x3c67dabc796,248,close node:internal/fs/promises:190:11,0x197588bd4b0,~
code-source-info,0x3c67dabc796,127,4415,5236,C0O4428C7O4437C9O4436C15O4442C20O4459C27O4466C30O4483C31O4498C38O4507C40O4506C45O4532C52O4544C54O4543C57O4559C58O4574C65O4579C73O4585C77O4594C84O4603C86O4602C91O4610C96O4626C103O4631C108O4636C112O4649C119O4654C126O4671C136O4714C138O4713C142O4723C147O4723C157O4671C162O4669C168O4815C175O4820C182O4837C189O4879C199O4875C210O4837C215O4835C219O5179C222O5184C230O5184C235O5204C242O5216C244O5215C247O5231,,
code-creation,LazyCompile,10,203266,0x3c67dabcafe,17, node:internal/fs/promises:204:9,0x3c67dabc580,~
code-source-info,0x3c67dabcafe,127,4741,4783,C0O4749C7O4754C11O4769C16O4782,,
code-creation,LazyCompile,10,203359,0x3c67dabce96,193,moduleStrategy node:internal/modules/esm/translators:112:56,0x3c67da88ce0,~
code-source-info,0x3c67dabce96,129,3253,3705,C0O3253C23O3280C36O3280C41O3325C46O3334C52O3356C59O3356C64O3393C76O3429C81O3393C85O3455C106O3455C112O3504C119O3515C124O3527C129O3531C134O3568C146O3653C150O3527C156O3688C168O3702,,
code-creation,LazyCompile,10,203420,0x3c67dabdc0e,83,assertBufferSource node:internal/modules/esm/translators:74:28,0x3c67da88ab0,~
code-source-info,0x3c67dabdc0e,129,2103,2510,C0O2138C10O2190C11O2197C12O2254C15O2254C19O2214C24O2233C29O2274C35O2301C41O2332C42O2339C43O2348C50O2401C77O2354C82O2348,,
code-creation,LazyCompile,10,203464,0x3c67dabdd66,31,lazyTypes node:internal/modules/esm/translators:22:19,0x3c67da88a10,~
code-source-info,0x3c67dabdd66,129,417,514,C0O425C6O446C10O460C11O464C17O480C24O478C30O511,,
code-creation,LazyCompile,10,203506,0x3c67dabde7e,72,stringify node:internal/modules/esm/translators:90:19,0x3c67da88b00,~
code-source-info,0x3c67dabde7e,129,2532,2737,C0O2544C6O2574C8O2586C9O2590C20O2590C25O2645C33O2678C36O2674C45O2694C50O2653C56O2706C61O2721C66O2721C71O2734,,
code-creation,LazyCompile,10,203599,0x3c67dabe06e,206,TextDecoder node:internal/encoding:380:16,0x3d28e293fe8,~
script-source,27,node:internal/encoding,'use strict';\x0d\n\x0d\n// An implementation of the WHATWG Encoding Standard\x0d\n// https://encoding.spec.whatwg.org\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint32Array\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ENCODING_INVALID_ENCODED_DATA\x2C\x0d\n  ERR_ENCODING_NOT_SUPPORTED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_NO_ICU\x0d\n} = require('internal/errors').codes;\x0d\nconst kHandle = Symbol('handle');\x0d\nconst kFlags = Symbol('flags');\x0d\nconst kEncoding = Symbol('encoding');\x0d\nconst kDecoder = Symbol('decoder');\x0d\nconst kEncoder = Symbol('encoder');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol: inspect\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  encodeInto\x2C\x0d\n  encodeUtf8String\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nlet Buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (Buffer === undefined)\x0d\n    Buffer = require('buffer').Buffer;\x0d\n  return Buffer;\x0d\n}\x0d\n\x0d\nfunction validateEncoder(obj) {\x0d\n  if (obj == null || obj[kEncoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextEncoder');\x0d\n}\x0d\n\x0d\nfunction validateDecoder(obj) {\x0d\n  if (obj == null || obj[kDecoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextDecoder');\x0d\n}\x0d\n\x0d\nconst CONVERTER_FLAGS_FLUSH = 0x1;\x0d\nconst CONVERTER_FLAGS_FATAL = 0x2;\x0d\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\x0d\n\x0d\nconst empty = new Uint8Array(0);\x0d\n\x0d\nconst encodings = new SafeMap([\x0d\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\x0d\n  ['utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf-8'\x2C 'utf-8']\x2C\x0d\n  ['866'\x2C 'ibm866']\x2C\x0d\n  ['cp866'\x2C 'ibm866']\x2C\x0d\n  ['csibm866'\x2C 'ibm866']\x2C\x0d\n  ['ibm866'\x2C 'ibm866']\x2C\x0d\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso88592'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\x0d\n  ['l2'\x2C 'iso-8859-2']\x2C\x0d\n  ['latin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso88593'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\x0d\n  ['l3'\x2C 'iso-8859-3']\x2C\x0d\n  ['latin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso88594'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\x0d\n  ['l4'\x2C 'iso-8859-4']\x2C\x0d\n  ['latin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso88595'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\x0d\n  ['arabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso88596'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\x0d\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\x0d\n  ['elot_928'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek8'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso88597'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\x0d\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\x0d\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['hebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso88598'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\x0d\n  ['visual'\x2C 'iso-8859-8']\x2C\x0d\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['logical'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso885910'\x2C 'iso-8859-10']\x2C\x0d\n  ['l6'\x2C 'iso-8859-10']\x2C\x0d\n  ['latin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso885913'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso885914'\x2C 'iso-8859-14']\x2C\x0d\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso885915'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['l9'\x2C 'iso-8859-15']\x2C\x0d\n  ['cskoi8r'\x2C 'koi8-r']\x2C\x0d\n  ['koi'\x2C 'koi8-r']\x2C\x0d\n  ['koi8'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8_r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-ru'\x2C 'koi8-u']\x2C\x0d\n  ['koi8-u'\x2C 'koi8-u']\x2C\x0d\n  ['csmacintosh'\x2C 'macintosh']\x2C\x0d\n  ['mac'\x2C 'macintosh']\x2C\x0d\n  ['macintosh'\x2C 'macintosh']\x2C\x0d\n  ['x-mac-roman'\x2C 'macintosh']\x2C\x0d\n  ['dos-874'\x2C 'windows-874']\x2C\x0d\n  ['iso-8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso885911'\x2C 'windows-874']\x2C\x0d\n  ['tis-620'\x2C 'windows-874']\x2C\x0d\n  ['windows-874'\x2C 'windows-874']\x2C\x0d\n  ['cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['windows-1250'\x2C 'windows-1250']\x2C\x0d\n  ['x-cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['windows-1251'\x2C 'windows-1251']\x2C\x0d\n  ['x-cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\x0d\n  ['ascii'\x2C 'windows-1252']\x2C\x0d\n  ['cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp819'\x2C 'windows-1252']\x2C\x0d\n  ['csisolatin1'\x2C 'windows-1252']\x2C\x0d\n  ['ibm819'\x2C 'windows-1252']\x2C\x0d\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\x0d\n  ['iso8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso88591'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\x0d\n  ['l1'\x2C 'windows-1252']\x2C\x0d\n  ['latin1'\x2C 'windows-1252']\x2C\x0d\n  ['us-ascii'\x2C 'windows-1252']\x2C\x0d\n  ['windows-1252'\x2C 'windows-1252']\x2C\x0d\n  ['x-cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['windows-1253'\x2C 'windows-1253']\x2C\x0d\n  ['x-cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['csisolatin5'\x2C 'windows-1254']\x2C\x0d\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\x0d\n  ['iso8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso88599'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\x0d\n  ['l5'\x2C 'windows-1254']\x2C\x0d\n  ['latin5'\x2C 'windows-1254']\x2C\x0d\n  ['windows-1254'\x2C 'windows-1254']\x2C\x0d\n  ['x-cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['windows-1255'\x2C 'windows-1255']\x2C\x0d\n  ['x-cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['windows-1256'\x2C 'windows-1256']\x2C\x0d\n  ['x-cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['windows-1257'\x2C 'windows-1257']\x2C\x0d\n  ['x-cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['windows-1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['chinese'\x2C 'gbk']\x2C\x0d\n  ['csgb2312'\x2C 'gbk']\x2C\x0d\n  ['csiso58gb231280'\x2C 'gbk']\x2C\x0d\n  ['gb2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312-80'\x2C 'gbk']\x2C\x0d\n  ['gbk'\x2C 'gbk']\x2C\x0d\n  ['iso-ir-58'\x2C 'gbk']\x2C\x0d\n  ['x-gbk'\x2C 'gbk']\x2C\x0d\n  ['gb18030'\x2C 'gb18030']\x2C\x0d\n  ['big5'\x2C 'big5']\x2C\x0d\n  ['big5-hkscs'\x2C 'big5']\x2C\x0d\n  ['cn-big5'\x2C 'big5']\x2C\x0d\n  ['csbig5'\x2C 'big5']\x2C\x0d\n  ['x-x-big5'\x2C 'big5']\x2C\x0d\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\x0d\n  ['euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['csshiftjis'\x2C 'shift_jis']\x2C\x0d\n  ['ms932'\x2C 'shift_jis']\x2C\x0d\n  ['ms_kanji'\x2C 'shift_jis']\x2C\x0d\n  ['shift-jis'\x2C 'shift_jis']\x2C\x0d\n  ['shift_jis'\x2C 'shift_jis']\x2C\x0d\n  ['sjis'\x2C 'shift_jis']\x2C\x0d\n  ['windows-31j'\x2C 'shift_jis']\x2C\x0d\n  ['x-sjis'\x2C 'shift_jis']\x2C\x0d\n  ['cseuckr'\x2C 'euc-kr']\x2C\x0d\n  ['csksc56011987'\x2C 'euc-kr']\x2C\x0d\n  ['euc-kr'\x2C 'euc-kr']\x2C\x0d\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\x0d\n  ['korean'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\x0d\n  ['ksc5601'\x2C 'euc-kr']\x2C\x0d\n  ['ksc_5601'\x2C 'euc-kr']\x2C\x0d\n  ['windows-949'\x2C 'euc-kr']\x2C\x0d\n  ['utf-16be'\x2C 'utf-16be']\x2C\x0d\n  ['utf-16le'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16'\x2C 'utf-16le']\x2C\x0d\n]);\x0d\n\x0d\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\x0d\n// so we have to do this manually\x0d\nfunction trimAsciiWhitespace(label) {\x0d\n  let s = 0;\x0d\n  let e = label.length;\x0d\n  while (s < e && (\x0d\n    label[s] === '\\u0009' ||\x0d\n    label[s] === '\\u000a' ||\x0d\n    label[s] === '\\u000c' ||\x0d\n    label[s] === '\\u000d' ||\x0d\n    label[s] === '\\u0020')) {\x0d\n    s++;\x0d\n  }\x0d\n  while (e > s && (\x0d\n    label[e - 1] === '\\u0009' ||\x0d\n    label[e - 1] === '\\u000a' ||\x0d\n    label[e - 1] === '\\u000c' ||\x0d\n    label[e - 1] === '\\u000d' ||\x0d\n    label[e - 1] === '\\u0020')) {\x0d\n    e--;\x0d\n  }\x0d\n  return StringPrototypeSlice(label\x2C s\x2C e);\x0d\n}\x0d\n\x0d\nfunction getEncodingFromLabel(label) {\x0d\n  const enc = encodings.get(label);\x0d\n  if (enc !== undefined) return enc;\x0d\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\x0d\n}\x0d\n\x0d\nconst encodeIntoResults = new Uint32Array(2);\x0d\n\x0d\nclass TextEncoder {\x0d\n  constructor() {\x0d\n    this[kEncoder] = true;\x0d\n  }\x0d\n\x0d\n  get encoding() {\x0d\n    validateEncoder(this);\x0d\n    return 'utf-8';\x0d\n  }\x0d\n\x0d\n  encode(input = '') {\x0d\n    validateEncoder(this);\x0d\n    return encodeUtf8String(`${input}`);\x0d\n  }\x0d\n\x0d\n  encodeInto(src\x2C dest) {\x0d\n    validateEncoder(this);\x0d\n    validateString(src\x2C 'src');\x0d\n    if (!dest || !isUint8Array(dest))\x0d\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\x0d\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\x0d\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\x0d\n  }\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateEncoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const ctor = getConstructorOf(this);\x0d\n    const obj = ObjectCreate({\x0d\n      constructor: ctor === null ? TextEncoder : ctor\x0d\n    });\x0d\n    obj.encoding = this.encoding;\x0d\n    // Lazy to avoid circular dependency\x0d\n    return require('internal/util/inspect').inspect(obj\x2C opts);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  TextEncoder.prototype\x2C {\x0d\n    'encode': kEnumerableProperty\x2C\x0d\n    'encodeInto': kEnumerableProperty\x2C\x0d\n    'encoding': kEnumerableProperty\x2C\x0d\n    [SymbolToStringTag]: { configurable: true\x2C value: 'TextEncoder' }\x2C\x0d\n  });\x0d\n\x0d\nconst TextDecoder =\x0d\n  internalBinding('config').hasIntl ?\x0d\n    makeTextDecoderICU() :\x0d\n    makeTextDecoderJS();\x0d\n\x0d\nfunction makeTextDecoderICU() {\x0d\n  const {\x0d\n    decode: _decode\x2C\x0d\n    getConverter\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      const handle = getConverter(enc\x2C flags);\x0d\n      if (handle === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      this[kHandle] = handle;\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n    }\x0d\n\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (!isArrayBufferView(input)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null)\x0d\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\x0d\n\x0d\n      const ret = _decode(this[kHandle]\x2C input\x2C flags);\x0d\n      if (typeof ret === 'number') {\x0d\n        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding\x2C ret);\x0d\n      }\x0d\n      return ret.toString('ucs2');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\nfunction makeTextDecoderJS() {\x0d\n  let StringDecoder;\x0d\n  function lazyStringDecoder() {\x0d\n    if (StringDecoder === undefined)\x0d\n      ({ StringDecoder } = require('string_decoder'));\x0d\n    return StringDecoder;\x0d\n  }\x0d\n\x0d\n  const kBOMSeen = Symbol('BOM seen');\x0d\n\x0d\n  function hasConverter(encoding) {\x0d\n    return encoding === 'utf-8' || encoding === 'utf-16le';\x0d\n  }\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined || !hasConverter(enc))\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        if (options.fatal) {\x0d\n          throw new ERR_NO_ICU('"fatal" option');\x0d\n        }\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\x0d\n      this[kHandle] = new (lazyStringDecoder())(enc);\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kBOMSeen] = false;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (isArrayBufferView(input)) {\x0d\n        input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\x0d\n                                  input.byteLength);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\x0d\n        this[kBOMSeen] = false;\x0d\n      }\x0d\n\x0d\n      if (options !== null && options.stream) {\x0d\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\x0d\n      } else {\x0d\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\x0d\n      }\x0d\n\x0d\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\x0d\n        this[kHandle].end(input) :\x0d\n        this[kHandle].write(input);\x0d\n\x0d\n      if (result.length > 0 &&\x0d\n          !this[kBOMSeen] &&\x0d\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\x0d\n        // If the very first result in the stream is a BOM\x2C and we are not\x0d\n        // explicitly told to ignore it\x2C then we discard it.\x0d\n        if (result[0] === '\\ufeff') {\x0d\n          result = StringPrototypeSlice(result\x2C 1);\x0d\n        }\x0d\n        this[kBOMSeen] = true;\x0d\n      }\x0d\n\x0d\n      return result;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\n// Mix in some shared properties.\x0d\nObjectDefineProperties(\x0d\n  TextDecoder.prototype\x2C\x0d\n  ObjectGetOwnPropertyDescriptors({\x0d\n    get encoding() {\x0d\n      validateDecoder(this);\x0d\n      return this[kEncoding];\x0d\n    }\x2C\x0d\n\x0d\n    get fatal() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\x0d\n    }\x2C\x0d\n\x0d\n    get ignoreBOM() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\x0d\n              CONVERTER_FLAGS_IGNORE_BOM;\x0d\n    }\x2C\x0d\n\x0d\n    [inspect](depth\x2C opts) {\x0d\n      validateDecoder(this);\x0d\n      if (typeof depth === 'number' && depth < 0)\x0d\n        return this;\x0d\n      const constructor = getConstructorOf(this) || TextDecoder;\x0d\n      const obj = ObjectCreate({ constructor });\x0d\n      obj.encoding = this.encoding;\x0d\n      obj.fatal = this.fatal;\x0d\n      obj.ignoreBOM = this.ignoreBOM;\x0d\n      if (opts.showHidden) {\x0d\n        obj[kFlags] = this[kFlags];\x0d\n        obj[kHandle] = this[kHandle];\x0d\n      }\x0d\n      // Lazy to avoid circular dependency\x0d\n      const { inspect } = require('internal/util/inspect');\x0d\n      return `${constructor.name} ${inspect(obj)}`;\x0d\n    }\x0d\n  })\x0d\n);\x0d\n\x0d\nObjectDefineProperties(TextDecoder.prototype\x2C {\x0d\n  decode: kEnumerableProperty\x2C\x0d\n  [inspect]: { enumerable: false }\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    configurable: true\x2C\x0d\n    value: 'TextDecoder'\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  getEncodingFromLabel\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x0d\n};\x0d\n
code-source-info,0x3c67dabe06e,27,10699,11509,C15O10699C21O10743C25O10776C35O10791C43O10776C48O10927C53O10927C58O10966C60O10998C69O11004C74O10998C75O11067C77O11077C81O11127C94O11135C103O11188C116O11200C125O11265C130O11265C136O11298C138O11333C147O11339C152O11333C153O11390C157O11395C161O11405C165O11420C169O11425C174O11434C178O11451C182O11456C187O11464C191O11480C195O11485C200O11496C205O11508,,
code-creation,LazyCompile,10,204441,0x3c67dabf6d6,55,getEncodingFromLabel node:internal/encoding:314:30,0x3d28e293d20,~
code-source-info,0x3c67dabf6d6,27,8982,9136,C0O9007C5O9017C10O9017C16O9032C18O9055C20O9066C21O9070C26O9087C34O9117C39O9117C44O9091C49O9087C54O9133,,
tick,0x7ff7c11bf1b0,204513,0,0x0,3,0x7ff7c0812760,0x3c67dabdea2,0x3c67dabcec4,0x3c67dab3657,0x7ff7c0c8b243
code-creation,LazyCompile,10,204533,0x3c67dabf9e6,227,decode node:internal/encoding:409:11,0x3d28e294108,~
code-source-info,0x3c67dabf9e6,27,11525,12371,C8O11534C25O11564C30O11564C34O11594C41O11598C47O11634C52O11642C56O11654C61O11655C69O11682C76O11687C82O11724C102O11730C107O11724C108O11904C118O11919C126O11904C131O12055C133O12065C137O12113C153O12126C159O12170C168O12183C170O12182C180O12170C186O12215C190O12255C197O12304C207O12261C212O12255C213O12347C221O12347C226O12364,,
code-creation,LazyCompile,10,204591,0x3c67dabfc0e,37,validateDecoder node:internal/encoding:65:25,0x3d28e293c80,~
code-source-info,0x3c67dabfc0e,27,1357,1461,C0O1368C7O1391C9O1390C14O1401C19O1416C29O1422C34O1416C36O1460,,
code-creation,LazyCompile,10,204665,0x3c67dabfd86,162,toString node:buffer:783:46,0x2711fd78fc0,~
code-source-info,0x3c67dabfd86,24,24080,24672,C0O24080C2O24122C8O24129C13O24155C20O24173C25O24155C31O24181C32O24209C37O24222C38O24232C43O24243C48O24262C50O24272C55O24285C57O24295C58O24309C65O24326C71O24355C76O24367C83O24391C90O24406C92O24414C97O24429C99O24439C100O24445C104O24490C109O24490C115O24512C116O24530C119O24530C124O24559C126O24587C133O24593C138O24587C139O24645C156O24645C161O24669,,
new,MemoryChunk,0x1d56bd40000,262144
code-creation,LazyCompile,10,204793,0x1d56bd41226,499,getEncodingOps node:buffer:679:24,0x2711fd78e18,~
code-source-info,0x1d56bd
code-creation,LazyCompile,10,204915,0x1d56bd4160e,12,slice node:buffer:603:12,0x2711fd77ac8,~
code-source-info,0x1d56bd4160e,24,17607,17653,C0O17632C5O17632C11O17653,,
code-creation,LazyCompile,10,204998,0x1d56bd418be,224,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x19758892ff8,~
code-source-info,0x1d56bd418be,108,2312,3375,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2645C68O2662C69O2669C70O2692C75O2719C80O2692C86O2799C88O2830C91O2858C96O2865C101O2830C107O2901C112O2921C117O2928C122O2951C126O2983C131O3001C136O3005C143O3035C150O3067C160O3098C166O3113C170O3001C178O3244C183O3262C188O3266C196O3300C206O3331C212O3346C216O3262C223O3374,,
code-creation,LazyCompile,10,205062,0x1d56bd42316,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x19758892f58,~
code-source-info,0x1d56bd42316,108,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,205111,0x1d56bd4248e,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x19758892fa8,~
code-source-info,0x1d56bd4248e,108,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,205155,0x1d56bd42606,30,validateBoolean node:internal/validators:139:25,0x359b0d7cfb0,~
code-source-info,0x1d56bd42606,15,4199,4313,C0O4218C6O4255C22O4261C27O4255C29O4312,,
code-creation,LazyCompile,10,205193,0x1d56bd426fe,10, node:internal/modules/esm/translators:42:63,0x3c67da88c90,~
code-source-info,0x1d56bd426fe,129,1058,1085,C0O1071C2O1077C9O1084,,
code-creation,Script,10,205265,0x1d56bd42aee,77, file:///C:/Exequiel/curso-coderhouse-backend/practica/gzip-log-perf/routes/randomNumbers.js:1:1,0x1d56bd42888,~
script-source,133,file:///C:/Exequiel/curso-coderhouse-backend/practica/gzip-log-perf/routes/randomNumbers.js,\x0d\n\x0d\nexport function numerosRandom(x = 100000000){const numeros = {}\x0d\nfor(let i = 0; i < x; i++) {\x0d\n    const randomNum = Math.ceil(Math.random() * 1000)\x0d\n    numeros[randomNum] ? numeros[randomNum]++ : numeros[randomNum] = 1\x0d\n}\x0d\nreturn numeros\x0d\n}\x0d\n\x0d\nprocess.on('message'\x2C valor => {\x0d\n    let calcular\x0d\n    if(valor === null) {\x0d\n        calcular = numerosRandom()\x0d\n    } else {\x0d\n        calcular = numerosRandom(valor)\x0d\n    }\x0d\n    process.send(`Calculo de numeros random ${JSON.stringify(calcular)}`)\x0d\n})
code-source-info,0x1d56bd42aee,133,0,503,C10O0C28O0C48O0C52O250C56O258C69O258C76O503,,
code-creation,LazyCompile,10,205386,0x1d56bd42f36,5,get node:internal/bootstrap/pre_execution:370:8,0x19758898478,~
code-source-info,0x1d56bd42f36,96,12136,12171,C0O12148C4O12164,,
code-creation,LazyCompile,10,205440,0x1d56bd43056,44,refCounted node:internal/child_process:539:13,0x1de1b563f28,~
code-source-info,0x1d56bd43056,100,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,205491,0x1d56bd43176,15, node:internal/modules/esm/loader:382:15,0x3c67daa8570,~
code-source-info,0x1d56bd43176,114,11928,11965,C0O11931C5O11951C10O11951C14O11965,,
code-creation,LazyCompile,10,205582,0x1d56bd43326,307,removeListener node:events:689:28,0x2711fd6bcd8,~
code-source-info,0x1d56bd
code-creation,LazyCompile,10,205676,0x1d56bd4360e,64,stopListeningIfSignal node:internal/process/signal:43:31,0x359b0d7dd70,~
code-source-info,0x1d56bd4360e,93,978,1149,C0O1003C5O1015C10O1015C16O1029C21O1063C26O1063C33O1083C38O1102C43O1102C47O1116C52O1128C57O1134C63O1148,,
code-creation,LazyCompile,10,205716,0x1d56bd43756,30,onRemoveListener node:child_process:178:57,0x19758888be0,~
code-source-info,0x1d56bd43756,99,5444,5535,C0O5458C2O5467C9O5489C14O5507C19O5515C24O5515C29O5534,,
tick,0x7ffdf681f424,206529,0,0x0,8
tick,0x7ffdf681f424,208497,0,0x0,8
tick,0x7ffdf681f424,210510,0,0x0,8
tick,0x7ffdf681f424,212495,0,0x0,8
tick,0x7ffdf681f424,214488,0,0x0,8
tick,0x7ffdf681f424,216492,0,0x0,8
tick,0x7ffdf681f424,218453,0,0x0,8
tick,0x7ffdf681f424,220473,0,0x0,8
tick,0x7ffdf681f424,222468,0,0x0,8
tick,0x7ffdf681f424,224471,0,0x0,8
tick,0x7ffdf681f424,226456,0,0x0,8
tick,0x7ffdf681f424,228445,0,0x0,8
tick,0x7ffdf681f424,230435,0,0x0,8
tick,0x7ffdf681f424,232425,0,0x0,8
tick,0x7ffdf681f424,234417,0,0x0,8
tick,0x7ffdf681f424,236408,0,0x0,8
tick,0x7ffdf681f424,238417,0,0x0,8
tick,0x7ffdf681f424,240381,0,0x0,8
tick,0x7ffdf681f424,242394,0,0x0,8
tick,0x7ffdf681f424,244406,0,0x0,8
tick,0x7ffdf681f424,246386,0,0x0,8
tick,0x7ffdf681f424,248377,0,0x0,8
tick,0x7ffdf681f424,250365,0,0x0,8
tick,0x7ffdf681f424,252393,0,0x0,8
tick,0x7ffdf681f424,254373,0,0x0,8
tick,0x7ffdf681f424,256339,0,0x0,8
tick,0x7ffdf681f424,258346,0,0x0,8
tick,0x7ffdf681f424,260345,0,0x0,8
tick,0x7ffdf681f424,262406,0,0x0,8
tick,0x7ffdf681f424,264335,0,0x0,8
tick,0x7ffdf681f424,266323,0,0x0,8
tick,0x7ffdf681f424,268356,0,0x0,8
tick,0x7ffdf681f424,270339,0,0x0,8
tick,0x7ffdf681f424,272319,0,0x0,8
tick,0x7ffdf681f424,274318,0,0x0,8
tick,0x7ffdf681f424,276313,0,0x0,8
tick,0x7ffdf681f424,278302,0,0x0,8
tick,0x7ffdf681f424,280309,0,0x0,8
tick,0x7ffdf681f424,282313,0,0x0,8
tick,0x7ffdf681f424,284313,0,0x0,8
tick,0x7ffdf681f424,286283,0,0x0,8
tick,0x7ffdf681f424,288291,0,0x0,8
tick,0x7ffdf681f424,290264,0,0x0,8
tick,0x7ffdf681f424,292234,0,0x0,8
tick,0x7ffdf681f424,294269,0,0x0,8
tick,0x7ffdf681f424,296250,0,0x0,8
tick,0x7ffdf681f424,298252,0,0x0,8
tick,0x7ffdf681f424,300246,0,0x0,8
tick,0x7ffdf681f424,302245,0,0x0,8
tick,0x7ffdf681f424,304241,0,0x0,8
tick,0x7ffdf681f424,306276,0,0x0,8
tick,0x7ffdf681f424,308217,0,0x0,8
tick,0x7ffdf681f424,310219,0,0x0,8
tick,0x7ffdf681f424,312210,0,0x0,8
tick,0x7ffdf681f424,314203,0,0x0,8
tick,0x7ffdf681f424,316205,0,0x0,8
tick,0x7ffdf681f424,318196,0,0x0,8
tick,0x7ffdf681f424,320200,0,0x0,8
tick,0x7ffdf681f424,322183,0,0x0,8
tick,0x7ffdf681f424,324174,0,0x0,8
tick,0x7ffdf681f424,326178,0,0x0,8
tick,0x7ffdf681f424,328278,0,0x0,8
tick,0x7ffdf681f424,330168,0,0x0,8
tick,0x7ffdf681f424,332165,0,0x0,8
tick,0x7ffdf681f424,334153,0,0x0,8
tick,0x7ffdf681f424,336152,0,0x0,8
tick,0x7ffdf681f424,338147,0,0x0,8
tick,0x7ffdf681f424,340131,0,0x0,8
tick,0x7ffdf681f424,342129,0,0x0,8
tick,0x7ffdf681f424,344129,0,0x0,8
tick,0x7ffdf681f424,346111,0,0x0,8
tick,0x7ffdf681f424,348125,0,0x0,8
tick,0x7ffdf681f424,350150,0,0x0,8
tick,0x7ffdf681f424,352101,0,0x0,8
tick,0x7ffdf681f424,354017,0,0x0,8
tick,0x7ffdf681f424,356091,0,0x0,8
tick,0x7ffdf681f424,358097,0,0x0,8
tick,0x7ffdf681f424,360087,0,0x0,8
tick,0x7ffdf681f424,362076,0,0x0,8
tick,0x7ffdf681f424,364069,0,0x0,8
tick,0x7ffdf681f424,366060,0,0x0,8
tick,0x7ffdf681f424,368057,0,0x0,8
tick,0x7ffdf681f424,369942,0,0x0,8
tick,0x7ffdf681f424,372118,0,0x0,8
tick,0x7ffdf681f424,374041,0,0x0,8
tick,0x7ffdf681f424,375955,0,0x0,8
tick,0x7ffdf681f424,378037,0,0x0,8
tick,0x7ffdf681f424,380034,0,0x0,8
tick,0x7ffdf681f424,381909,0,0x0,8
tick,0x7ffdf681f424,384011,0,0x0,8
tick,0x7ffdf681f424,385897,0,0x0,8
tick,0x7ffdf681f424,388009,0,0x0,8
tick,0x7ffdf681f424,390026,0,0x0,8
tick,0x7ffdf681f424,392006,0,0x0,8
tick,0x7ffdf681f424,393967,0,0x0,8
tick,0x7ffdf681f424,395988,0,0x0,8
tick,0x7ffdf681f424,397990,0,0x0,8
tick,0x7ffdf681f424,399984,0,0x0,8
tick,0x7ffdf681f424,401981,0,0x0,8
tick,0x7ffdf681f424,403992,0,0x0,8
tick,0x7ffdf681f424,405960,0,0x0,8
tick,0x7ffdf681f424,407851,0,0x0,8
tick,0x7ffdf681f424,409845,0,0x0,8
tick,0x7ffdf681f424,411940,0,0x0,8
tick,0x7ffdf681f424,413946,0,0x0,8
tick,0x7ffdf681f424,415982,0,0x0,8
tick,0x7ffdf681f424,417926,0,0x0,8
tick,0x7ffdf681f424,419919,0,0x0,8
tick,0x7ffdf681f424,421925,0,0x0,8
tick,0x7ffdf681f424,423928,0,0x0,8
tick,0x7ffdf681f424,425918,0,0x0,8
tick,0x7ffdf681f424,427921,0,0x0,8
tick,0x7ffdf681f424,429915,0,0x0,8
tick,0x7ffdf681f424,431898,0,0x0,8
tick,0x7ffdf681f424,433775,0,0x0,8
tick,0x7ffdf681f424,435893,0,0x0,8
tick,0x7ffdf681f424,437921,0,0x0,8
tick,0x7ffdf681f424,439878,0,0x0,8
tick,0x7ffdf681f424,441877,0,0x0,8
tick,0x7ffdf681f424,443868,0,0x0,8
tick,0x7ffdf681f424,445867,0,0x0,8
tick,0x7ffdf681f424,447870,0,0x0,8
tick,0x7ffdf681f424,449852,0,0x0,8
tick,0x7ffdf681f424,451842,0,0x0,8
tick,0x7ffdf681f424,453839,0,0x0,8
tick,0x7ffdf681f424,455845,0,0x0,8
tick,0x7ffdf681f424,457827,0,0x0,8
tick,0x7ffdf681f424,459869,0,0x0,8
tick,0x7ffdf681f424,461817,0,0x0,8
tick,0x7ffdf681f424,463818,0,0x0,8
tick,0x7ffdf681f424,465808,0,0x0,8
tick,0x7ffdf681f424,467817,0,0x0,8
tick,0x7ffdf681f424,469682,0,0x0,8
tick,0x7ffdf681f424,471759,0,0x0,8
tick,0x7ffdf681f424,473779,0,0x0,8
tick,0x7ffdf681f424,475779,0,0x0,8
tick,0x7ffdf681f424,477742,0,0x0,8
tick,0x7ffdf681f424,479785,0,0x0,8
tick,0x7ffdf681f424,481742,0,0x0,8
tick,0x7ffdf681f424,483760,0,0x0,8
tick,0x7ffdf681f424,485758,0,0x0,8
tick,0x7ffdf681f424,487752,0,0x0,8
tick,0x7ffdf681f424,489748,0,0x0,8
tick,0x7ffdf681f424,491623,0,0x0,8
tick,0x7ffdf681f424,493734,0,0x0,8
tick,0x7ffdf681f424,495727,0,0x0,8
tick,0x7ffdf681f424,497721,0,0x0,8
tick,0x7ffdf681f424,499712,0,0x0,8
tick,0x7ffdf681f424,501721,0,0x0,8
tick,0x7ffdf681f424,503765,0,0x0,8
tick,0x7ffdf681f424,505690,0,0x0,8
tick,0x7ffdf681f424,507697,0,0x0,8
tick,0x7ffdf681f424,509690,0,0x0,8
tick,0x7ffdf681f424,511702,0,0x0,8
tick,0x7ffdf681f424,513685,0,0x0,8
tick,0x7ffdf681f424,515676,0,0x0,8
tick,0x7ffdf681f424,517665,0,0x0,8
tick,0x7ffdf681f424,519667,0,0x0,8
tick,0x7ffdf681f424,521659,0,0x0,8
tick,0x7ffdf681f424,523655,0,0x0,8
tick,0x7ffdf681f424,525682,0,0x0,8
tick,0x7ffdf681f424,527642,0,0x0,8
tick,0x7ffdf681f424,529644,0,0x0,8
tick,0x7ffdf681f424,531640,0,0x0,8
tick,0x7ffdf681f424,533618,0,0x0,8
tick,0x7ffdf681f424,535629,0,0x0,8
tick,0x7ffdf681f424,537608,0,0x0,8
tick,0x7ffdf681f424,539609,0,0x0,8
tick,0x7ffdf681f424,541600,0,0x0,8
tick,0x7ffdf681f424,543601,0,0x0,8
tick,0x7ffdf681f424,545597,0,0x0,8
tick,0x7ffdf681f424,547671,0,0x0,8
tick,0x7ffdf681f424,549579,0,0x0,8
tick,0x7ffdf681f424,551588,0,0x0,8
tick,0x7ffdf681f424,553585,0,0x0,8
tick,0x7ffdf681f424,555563,0,0x0,8
tick,0x7ffdf681f424,557589,0,0x0,8
tick,0x7ffdf681f424,559550,0,0x0,8
tick,0x7ffdf681f424,561546,0,0x0,8
tick,0x7ffdf681f424,563541,0,0x0,8
tick,0x7ffdf681f424,565541,0,0x0,8
tick,0x7ffdf681f424,567544,0,0x0,8
tick,0x7ffdf681f424,569590,0,0x0,8
tick,0x7ffdf681f424,571478,0,0x0,8
tick,0x7ffdf681f424,573513,0,0x0,8
tick,0x7ffdf681f424,575515,0,0x0,8
tick,0x7ffdf681f424,577519,0,0x0,8
tick,0x7ffdf681f424,579396,0,0x0,8
tick,0x7ffdf681f424,581417,0,0x0,8
tick,0x7ffdf681f424,583373,0,0x0,8
tick,0x7ffdf681f424,585411,0,0x0,8
tick,0x7ffdf681f424,587438,0,0x0,8
tick,0x7ffdf681f424,589375,0,0x0,8
tick,0x7ffdf681f424,590465,0,0x0,8
tick,0x7ffdf681f424,592514,0,0x0,8
tick,0x7ffdf681f424,594500,0,0x0,8
tick,0x7ffdf681f424,596470,0,0x0,8
tick,0x7ffdf681f424,598436,0,0x0,8
tick,0x7ffdf681f424,600432,0,0x0,8
tick,0x7ffdf681f424,602458,0,0x0,8
tick,0x7ffdf681f424,604450,0,0x0,8
tick,0x7ffdf681f424,606487,0,0x0,8
tick,0x7ffdf681f424,608486,0,0x0,8
tick,0x7ffdf681f424,610479,0,0x0,8
tick,0x7ffdf681f424,612478,0,0x0,8
tick,0x7ffdf681f424,614624,0,0x0,8
tick,0x7ffdf681f424,615756,0,0x0,8
tick,0x7ffdf681f424,617839,0,0x0,8
tick,0x7ffdf681f424,619830,0,0x0,8
tick,0x7ffdf681f424,621707,0,0x0,8
tick,0x7ffdf681f424,622801,0,0x0,8
tick,0x7ffdf681f424,624003,0,0x0,8
tick,0x7ffdf681f424,625173,0,0x0,8
tick,0x7ffdf681f424,626385,0,0x0,8
tick,0x7ffdf681f424,628413,0,0x0,8
tick,0x7ffdf681f424,630358,0,0x0,8
tick,0x7ffdf681f424,632306,0,0x0,8
tick,0x7ffdf681f424,634320,0,0x0,8
tick,0x7ffdf681f424,636331,0,0x0,8
tick,0x7ffdf681f424,638512,0,0x0,8
tick,0x7ffdf681f424,640650,0,0x0,8
tick,0x7ffdf681f424,642661,0,0x0,8
tick,0x7ffdf681f424,644723,0,0x0,8
tick,0x7ffdf681f424,646799,0,0x0,8
tick,0x7ffdf681f424,648803,0,0x0,8
tick,0x7ffdf681f424,650901,0,0x0,8
tick,0x7ffdf681f424,652864,0,0x0,8
tick,0x7ffdf681f424,654851,0,0x0,8
tick,0x7ffdf681f424,656873,0,0x0,8
tick,0x7ffdf681f424,658842,0,0x0,8
tick,0x7ffdf681f424,660012,0,0x0,8
tick,0x7ffdf681f424,662074,0,0x0,8
tick,0x7ffdf681f424,664049,0,0x0,8
tick,0x7ffdf681f424,665172,0,0x0,8
tick,0x7ffdf681f424,666344,0,0x0,8
tick,0x7ffdf681f424,667555,0,0x0,8
tick,0x7ffdf681f424,668718,0,0x0,8
tick,0x7ffdf681f424,670712,0,0x0,8
tick,0x7ffdf681f424,672674,0,0x0,8
tick,0x7ffdf681f424,674699,0,0x0,8
tick,0x7ffdf681f424,676687,0,0x0,8
tick,0x7ffdf681f424,678694,0,0x0,8
tick,0x7ffdf681f424,679797,0,0x0,8
tick,0x7ffdf681f424,680925,0,0x0,8
tick,0x7ffdf681f424,683006,0,0x0,8
tick,0x7ffdf681f424,684995,0,0x0,8
tick,0x7ffdf681f424,686957,0,0x0,8
tick,0x7ffdf681f424,689041,0,0x0,8
tick,0x7ffdf681f424,691018,0,0x0,8
tick,0x7ffdf681f424,693091,0,0x0,8
tick,0x7ffdf681f424,695088,0,0x0,8
tick,0x7ffdf681f424,697102,0,0x0,8
tick,0x7ffdf681f424,699272,0,0x0,8
tick,0x7ffdf681f424,701261,0,0x0,8
tick,0x7ffdf681f424,703232,0,0x0,8
tick,0x7ffdf681f424,705217,0,0x0,8
tick,0x7ffdf681f424,707195,0,0x0,8
tick,0x7ffdf681f424,709188,0,0x0,8
tick,0x7ffdf681f424,711188,0,0x0,8
tick,0x7ffdf681f424,713182,0,0x0,8
tick,0x7ffdf681f424,715118,0,0x0,8
tick,0x7ffdf681f424,717154,0,0x0,8
tick,0x7ffdf681f424,719189,0,0x0,8
tick,0x7ffdf681f424,721175,0,0x0,8
tick,0x7ffdf681f424,723176,0,0x0,8
tick,0x7ffdf681f424,725165,0,0x0,8
tick,0x7ffdf681f424,727170,0,0x0,8
tick,0x7ffdf681f424,729165,0,0x0,8
tick,0x7ffdf681f424,731158,0,0x0,8
tick,0x7ffdf681f424,733148,0,0x0,8
tick,0x7ffdf681f424,735142,0,0x0,8
tick,0x7ffdf681f424,737176,0,0x0,8
tick,0x7ffdf681f424,739145,0,0x0,8
tick,0x7ffdf681f424,741125,0,0x0,8
tick,0x7ffdf681f424,743130,0,0x0,8
tick,0x7ffdf681f424,745118,0,0x0,8
tick,0x7ffdf681f424,747112,0,0x0,8
tick,0x7ffdf681f424,749116,0,0x0,8
tick,0x7ffdf681f424,751110,0,0x0,8
tick,0x7ffdf681f424,753086,0,0x0,8
tick,0x7ffdf681f424,755103,0,0x0,8
tick,0x7ffdf681f424,757057,0,0x0,8
tick,0x7ffdf681f424,759063,0,0x0,8
tick,0x7ffdf681f424,761076,0,0x0,8
tick,0x7ffdf681f424,763073,0,0x0,8
tick,0x7ffdf681f424,764961,0,0x0,8
tick,0x7ffdf681f424,767052,0,0x0,8
tick,0x7ffdf681f424,769045,0,0x0,8
tick,0x7ffdf681f424,771036,0,0x0,8
tick,0x7ffdf681f424,772931,0,0x0,8
tick,0x7ffdf681f424,774945,0,0x0,8
tick,0x7ffdf681f424,776933,0,0x0,8
tick,0x7ffdf681f424,778884,0,0x0,8
tick,0x7ffdf681f424,780857,0,0x0,8
tick,0x7ffdf681f424,782910,0,0x0,8
tick,0x7ffdf681f424,784902,0,0x0,8
tick,0x7ffdf681f424,786890,0,0x0,8
tick,0x7ffdf681f424,788904,0,0x0,8
tick,0x7ffdf681f424,790960,0,0x0,8
tick,0x7ffdf681f424,792958,0,0x0,8
tick,0x7ffdf681f424,794952,0,0x0,8
tick,0x7ffdf681f424,796981,0,0x0,8
tick,0x7ffdf681f424,798986,0,0x0,8
tick,0x7ffdf681f424,800961,0,0x0,8
tick,0x7ffdf681f424,802982,0,0x0,8
tick,0x7ffdf681f424,804965,0,0x0,8
tick,0x7ffdf681f424,806952,0,0x0,8
tick,0x7ffdf681f424,808949,0,0x0,8
tick,0x7ffdf681f424,810796,0,0x0,8
tick,0x7ffdf681f424,812808,0,0x0,8
tick,0x7ffdf681f424,814807,0,0x0,8
tick,0x7ffdf681f424,816897,0,0x0,8
tick,0x7ffdf681f424,818916,0,0x0,8
tick,0x7ffdf681f424,820909,0,0x0,8
tick,0x7ffdf681f424,822918,0,0x0,8
tick,0x7ffdf681f424,824930,0,0x0,8
tick,0x7ffdf681f424,826893,0,0x0,8
tick,0x7ffdf681f424,828887,0,0x0,8
tick,0x7ffdf681f424,830884,0,0x0,8
tick,0x7ffdf681f424,832876,0,0x0,8
tick,0x7ffdf681f424,834873,0,0x0,8
tick,0x7ffdf681f424,836890,0,0x0,8
tick,0x7ffdf681f424,838859,0,0x0,8
tick,0x7ffdf681f424,840860,0,0x0,8
tick,0x7ffdf681f424,842850,0,0x0,8
tick,0x7ffdf681f424,844849,0,0x0,8
tick,0x7ffdf681f424,846844,0,0x0,8
tick,0x7ffdf681f424,848844,0,0x0,8
tick,0x7ffdf681f424,850822,0,0x0,8
tick,0x7ffdf681f424,852822,0,0x0,8
tick,0x7ffdf681f424,854816,0,0x0,8
tick,0x7ffdf681f424,856812,0,0x0,8
tick,0x7ffdf681f424,858822,0,0x0,8
tick,0x7ffdf681f424,860778,0,0x0,8
tick,0x7ffdf681f424,862809,0,0x0,8
tick,0x7ffdf681f424,864802,0,0x0,8
tick,0x7ffdf681f424,866801,0,0x0,8
tick,0x7ffdf681f424,868828,0,0x0,8
tick,0x7ffdf681f424,870779,0,0x0,8
tick,0x7ffdf681f424,872768,0,0x0,8
tick,0x7ffdf681f424,874785,0,0x0,8
tick,0x7ffdf681f424,876758,0,0x0,8
tick,0x7ffdf681f424,878769,0,0x0,8
tick,0x7ffdf681f424,880751,0,0x0,8
tick,0x7ffdf681f424,882747,0,0x0,8
tick,0x7ffdf681f424,884746,0,0x0,8
tick,0x7ffdf681f424,886747,0,0x0,8
tick,0x7ffdf681f424,888620,0,0x0,8
tick,0x7ffdf681f424,890791,0,0x0,8
tick,0x7ffdf681f424,892622,0,0x0,8
tick,0x7ffdf681f424,894711,0,0x0,8
tick,0x7ffdf681f424,896612,0,0x0,8
tick,0x7ffdf681f424,898705,0,0x0,8
tick,0x7ffdf681f424,900712,0,0x0,8
tick,0x7ffdf681f424,902704,0,0x0,8
tick,0x7ffdf681f424,904599,0,0x0,8
tick,0x7ffdf681f424,906582,0,0x0,8
tick,0x7ffdf681f424,908686,0,0x0,8
tick,0x7ffdf681f424,910679,0,0x0,8
tick,0x7ffdf681f424,912591,0,0x0,8
tick,0x7ffdf681f424,914642,0,0x0,8
tick,0x7ffdf681f424,916657,0,0x0,8
tick,0x7ffdf681f424,918642,0,0x0,8
tick,0x7ffdf681f424,920696,0,0x0,8
tick,0x7ffdf681f424,922646,0,0x0,8
tick,0x7ffdf681f424,924648,0,0x0,8
tick,0x7ffdf681f424,926643,0,0x0,8
tick,0x7ffdf681f424,928633,0,0x0,8
tick,0x7ffdf681f424,930624,0,0x0,8
tick,0x7ffdf681f424,932639,0,0x0,8
tick,0x7ffdf681f424,934630,0,0x0,8
tick,0x7ffdf681f424,936623,0,0x0,8
tick,0x7ffdf681f424,938493,0,0x0,8
tick,0x7ffdf681f424,940612,0,0x0,8
tick,0x7ffdf681f424,942597,0,0x0,8
tick,0x7ffdf681f424,944587,0,0x0,8
tick,0x7ffdf681f424,946588,0,0x0,8
tick,0x7ffdf681f424,948576,0,0x0,8
tick,0x7ffdf681f424,950577,0,0x0,8
tick,0x7ffdf681f424,952581,0,0x0,8
tick,0x7ffdf681f424,954564,0,0x0,8
tick,0x7ffdf681f424,956521,0,0x0,8
tick,0x7ffdf681f424,958565,0,0x0,8
tick,0x7ffdf681f424,960540,0,0x0,8
tick,0x7ffdf681f424,962543,0,0x0,8
tick,0x7ffdf681f424,964547,0,0x0,8
tick,0x7ffdf681f424,966533,0,0x0,8
tick,0x7ffdf681f424,968497,0,0x0,8
tick,0x7ffdf681f424,970527,0,0x0,8
tick,0x7ffdf681f424,972516,0,0x0,8
tick,0x7ffdf681f424,974404,0,0x0,8
tick,0x7ffdf681f424,976504,0,0x0,8
tick,0x7ffdf681f424,978474,0,0x0,8
tick,0x7ffdf681f424,980491,0,0x0,8
tick,0x7ffdf681f424,982488,0,0x0,8
tick,0x7ffdf681f424,984479,0,0x0,8
tick,0x7ffdf681f424,986476,0,0x0,8
tick,0x7ffdf681f424,988471,0,0x0,8
tick,0x7ffdf681f424,990456,0,0x0,8
tick,0x7ffdf681f424,992463,0,0x0,8
tick,0x7ffdf681f424,994459,0,0x0,8
tick,0x7ffdf681f424,996417,0,0x0,8
tick,0x7ffdf681f424,998480,0,0x0,8
tick,0x7ffdf681f424,1000309,0,0x0,8
tick,0x7ffdf681f424,1002393,0,0x0,8
tick,0x7ffdf681f424,1004429,0,0x0,8
tick,0x7ffdf681f424,1006422,0,0x0,8
tick,0x7ffdf681f424,1008421,0,0x0,8
tick,0x7ffdf681f424,1010423,0,0x0,8
tick,0x7ffdf681f424,1012299,0,0x0,8
tick,0x7ffdf681f424,1014403,0,0x0,8
tick,0x7ffdf681f424,1016396,0,0x0,8
tick,0x7ffdf681f424,1018405,0,0x0,8
tick,0x7ffdf681f424,1020385,0,0x0,8
tick,0x7ffdf681f424,1022418,0,0x0,8
tick,0x7ffdf681f424,1024391,0,0x0,8
tick,0x7ffdf681f424,1026369,0,0x0,8
tick,0x7ffdf681f424,1028368,0,0x0,8
tick,0x7ffdf681f424,1030355,0,0x0,8
tick,0x7ffdf681f424,1032352,0,0x0,8
tick,0x7ffdf681f424,1034324,0,0x0,8
tick,0x7ffdf681f424,1036350,0,0x0,8
tick,0x7ffdf681f424,1038343,0,0x0,8
tick,0x7ffdf681f424,1040346,0,0x0,8
tick,0x7ffdf681f424,1042329,0,0x0,8
tick,0x7ffdf681f424,1044411,0,0x0,8
tick,0x7ffdf681f424,1046325,0,0x0,8
tick,0x7ffdf681f424,1048316,0,0x0,8
tick,0x7ffdf681f424,1050305,0,0x0,8
tick,0x7ffdf681f424,1052202,0,0x0,8
tick,0x7ffdf681f424,1054255,0,0x0,8
tick,0x7ffdf681f424,1056262,0,0x0,8
tick,0x7ffdf681f424,1058288,0,0x0,8
tick,0x7ffdf681f424,1060283,0,0x0,8
tick,0x7ffdf681f424,1062289,0,0x0,8
tick,0x7ffdf681f424,1064264,0,0x0,8
tick,0x7ffdf681f424,1066240,0,0x0,8
tick,0x7ffdf681f424,1068273,0,0x0,8
tick,0x7ffdf681f424,1070256,0,0x0,8
tick,0x7ffdf681f424,1072257,0,0x0,8
tick,0x7ffdf681f424,1074237,0,0x0,8
tick,0x7ffdf681f424,1076236,0,0x0,8
tick,0x7ffdf681f424,1078218,0,0x0,8
tick,0x7ffdf681f424,1080233,0,0x0,8
tick,0x7ffdf681f424,1082233,0,0x0,8
tick,0x7ffdf681f424,1084255,0,0x0,8
tick,0x7ffdf681f424,1086216,0,0x0,8
tick,0x7ffdf681f424,1088180,0,0x0,8
tick,0x7ffdf681f424,1090085,0,0x0,8
tick,0x7ffdf681f424,1092088,0,0x0,8
tick,0x7ffdf681f424,1094069,0,0x0,8
tick,0x7ffdf681f424,1096065,0,0x0,8
tick,0x7ffdf681f424,1098060,0,0x0,8
tick,0x7ffdf681f424,1100047,0,0x0,8
tick,0x7ffdf681f424,1102045,0,0x0,8
tick,0x7ffdf681f424,1104048,0,0x0,8
tick,0x7ffdf681f424,1106012,0,0x0,8
tick,0x7ffdf681f424,1108005,0,0x0,8
tick,0x7ffdf681f424,1110012,0,0x0,8
tick,0x7ffdf681f424,1112002,0,0x0,8
tick,0x7ffdf681f424,1113992,0,0x0,8
tick,0x7ffdf681f424,1115984,0,0x0,8
tick,0x7ffdf681f424,1117937,0,0x0,8
tick,0x7ffdf681f424,1120020,0,0x0,8
tick,0x7ffdf681f424,1122076,0,0x0,8
tick,0x7ffdf681f424,1124114,0,0x0,8
tick,0x7ffdf681f424,1126056,0,0x0,8
tick,0x7ffdf681f424,1128084,0,0x0,8
tick,0x7ffdf681f424,1129995,0,0x0,8
tick,0x7ffdf681f424,1132138,0,0x0,8
tick,0x7ffdf681f424,1134080,0,0x0,8
tick,0x7ffdf681f424,1136072,0,0x0,8
tick,0x7ffdf681f424,1138060,0,0x0,8
tick,0x7ffdf681f424,1140071,0,0x0,8
tick,0x7ffdf681f424,1142062,0,0x0,8
tick,0x7ffdf681f424,1144052,0,0x0,8
tick,0x7ffdf681f424,1146046,0,0x0,8
tick,0x7ffdf681f424,1148042,0,0x0,8
tick,0x7ffdf681f424,1150044,0,0x0,8
tick,0x7ffdf681f424,1152023,0,0x0,8
tick,0x7ffdf681f424,1153991,0,0x0,8
tick,0x7ffdf681f424,1156026,0,0x0,8
tick,0x7ffdf681f424,1158012,0,0x0,8
tick,0x7ffdf681f424,1160008,0,0x0,8
tick,0x7ffdf681f424,1161900,0,0x0,8
tick,0x7ffdf681f424,1164008,0,0x0,8
tick,0x7ffdf681f424,1166014,0,0x0,8
tick,0x7ffdf681f424,1167996,0,0x0,8
tick,0x7ffdf681f424,1169982,0,0x0,8
tick,0x7ffdf681f424,1171892,0,0x0,8
tick,0x7ffdf681f424,1173964,0,0x0,8
tick,0x7ffdf681f424,1176001,0,0x0,8
tick,0x7ffdf681f424,1177973,0,0x0,8
tick,0x7ffdf681f424,1179934,0,0x0,8
tick,0x7ffdf681f424,1181943,0,0x0,8
tick,0x7ffdf681f424,1183944,0,0x0,8
tick,0x7ffdf681f424,1185940,0,0x0,8
tick,0x7ffdf681f424,1187833,0,0x0,8
tick,0x7ffdf681f424,1189931,0,0x0,8
tick,0x7ffdf681f424,1191926,0,0x0,8
tick,0x7ffdf681f424,1193924,0,0x0,8
tick,0x7ffdf681f424,1195906,0,0x0,8
tick,0x7ffdf681f424,1197998,0,0x0,8
tick,0x7ffdf681f424,1199910,0,0x0,8
tick,0x7ffdf681f424,1201892,0,0x0,8
tick,0x7ffdf681f424,1203887,0,0x0,8
tick,0x7ffdf681f424,1205888,0,0x0,8
tick,0x7ffdf681f424,1207887,0,0x0,8
tick,0x7ffdf681f424,1209882,0,0x0,8
tick,0x7ffdf681f424,1211871,0,0x0,8
tick,0x7ffdf681f424,1213862,0,0x0,8
tick,0x7ffdf681f424,1215873,0,0x0,8
tick,0x7ffdf681f424,1217869,0,0x0,8
tick,0x7ffdf681f424,1219883,0,0x0,8
tick,0x7ffdf681f424,1221858,0,0x0,8
tick,0x7ffdf681f424,1223740,0,0x0,8
tick,0x7ffdf681f424,1225846,0,0x0,8
tick,0x7ffdf681f424,1227779,0,0x0,8
tick,0x7ffdf681f424,1229832,0,0x0,8
tick,0x7ffdf681f424,1231735,0,0x0,8
tick,0x7ffdf681f424,1233841,0,0x0,8
tick,0x7ffdf681f424,1235833,0,0x0,8
tick,0x7ffdf681f424,1237846,0,0x0,8
tick,0x7ffdf681f424,1239842,0,0x0,8
tick,0x7ffdf681f424,1241864,0,0x0,8
tick,0x7ffdf681f424,1243785,0,0x0,8
tick,0x7ffdf681f424,1245774,0,0x0,8
tick,0x7ffdf681f424,1247786,0,0x0,8
tick,0x7ffdf681f424,1249655,0,0x0,8
tick,0x7ffdf681f424,1251763,0,0x0,8
tick,0x7ffdf681f424,1253763,0,0x0,8
tick,0x7ffdf681f424,1255759,0,0x0,8
tick,0x7ffdf681f424,1257752,0,0x0,8
tick,0x7ffdf681f424,1259751,0,0x0,8
tick,0x7ffdf681f424,1261778,0,0x0,8
tick,0x7ffdf681f424,1263698,0,0x0,8
tick,0x7ffdf681f424,1265756,0,0x0,8
tick,0x7ffdf681f424,1267743,0,0x0,8
tick,0x7ffdf681f424,1269754,0,0x0,8
tick,0x7ffdf681f424,1271605,0,0x0,8
tick,0x7ffdf681f424,1273592,0,0x0,8
tick,0x7ffdf681f424,1275724,0,0x0,8
tick,0x7ffdf681f424,1277699,0,0x0,8
tick,0x7ffdf681f424,1279697,0,0x0,8
tick,0x7ffdf681f424,1281698,0,0x0,8
tick,0x7ffdf681f424,1283663,0,0x0,8
tick,0x7ffdf681f424,1285652,0,0x0,8
tick,0x7ffdf681f424,1287668,0,0x0,8
tick,0x7ffdf681f424,1289636,0,0x0,8
tick,0x7ffdf681f424,1291633,0,0x0,8
tick,0x7ffdf681f424,1293628,0,0x0,8
tick,0x7ffdf681f424,1295623,0,0x0,8
tick,0x7ffdf681f424,1297522,0,0x0,8
tick,0x7ffdf681f424,1299617,0,0x0,8
tick,0x7ffdf681f424,1301603,0,0x0,8
tick,0x7ffdf681f424,1303567,0,0x0,8
tick,0x7ffdf681f424,1305535,0,0x0,8
tick,0x7ffdf681f424,1307587,0,0x0,8
tick,0x7ffdf681f424,1309573,0,0x0,8
tick,0x7ffdf681f424,1311557,0,0x0,8
tick,0x7ffdf681f424,1313515,0,0x0,8
tick,0x7ffdf681f424,1315567,0,0x0,8
tick,0x7ffdf681f424,1317561,0,0x0,8
tick,0x7ffdf681f424,1319558,0,0x0,8
tick,0x7ffdf681f424,1321537,0,0x0,8
tick,0x7ffdf681f424,1323538,0,0x0,8
tick,0x7ffdf681f424,1325523,0,0x0,8
tick,0x7ffdf681f424,1327553,0,0x0,8
tick,0x7ffdf681f424,1329520,0,0x0,8
tick,0x7ffdf681f424,1331483,0,0x0,8
tick,0x7ffdf681f424,1333409,0,0x0,8
tick,0x7ffdf681f424,1335393,0,0x0,8
tick,0x7ffdf681f424,1337536,0,0x0,8
tick,0x7ffdf681f424,1339540,0,0x0,8
tick,0x7ffdf681f424,1341488,0,0x0,8
tick,0x7ffdf681f424,1343486,0,0x0,8
tick,0x7ffdf681f424,1345472,0,0x0,8
tick,0x7ffdf681f424,1347378,0,0x0,8
tick,0x7ffdf681f424,1349467,0,0x0,8
tick,0x7ffdf681f424,1351460,0,0x0,8
tick,0x7ffdf681f424,1353448,0,0x0,8
tick,0x7ffdf681f424,1355332,0,0x0,8
tick,0x7ffdf681f424,1357451,0,0x0,8
tick,0x7ffdf681f424,1359449,0,0x0,8
tick,0x7ffdf681f424,1361418,0,0x0,8
tick,0x7ffdf681f424,1363358,0,0x0,8
tick,0x7ffdf681f424,1365418,0,0x0,8
tick,0x7ffdf681f424,1367420,0,0x0,8
tick,0x7ffdf681f424,1369414,0,0x0,8
tick,0x7ffdf681f424,1371413,0,0x0,8
tick,0x7ffdf681f424,1373270,0,0x0,8
tick,0x7ffdf681f424,1375335,0,0x0,8
tick,0x7ffdf681f424,1377292,0,0x0,8
tick,0x7ffdf681f424,1379379,0,0x0,8
tick,0x7ffdf681f424,1381265,0,0x0,8
tick,0x7ffdf681f424,1383265,0,0x0,8
tick,0x7ffdf681f424,1385275,0,0x0,8
tick,0x7ffdf681f424,1387254,0,0x0,8
tick,0x7ffdf681f424,1389247,0,0x0,8
tick,0x7ffdf681f424,1391276,0,0x0,8
tick,0x7ffdf681f424,1393229,0,0x0,8
tick,0x7ffdf681f424,1395273,0,0x0,8
tick,0x7ffdf681f424,1397220,0,0x0,8
tick,0x7ffdf681f424,1399285,0,0x0,8
tick,0x7ffdf681f424,1401253,0,0x0,8
tick,0x7ffdf681f424,1403330,0,0x0,8
tick,0x7ffdf681f424,1405211,0,0x0,8
tick,0x7ffdf681f424,1407347,0,0x0,8
tick,0x7ffdf681f424,1409308,0,0x0,8
tick,0x7ffdf681f424,1411204,0,0x0,8
tick,0x7ffdf681f424,1413196,0,0x0,8
tick,0x7ffdf681f424,1415178,0,0x0,8
tick,0x7ffdf681f424,1417284,0,0x0,8
tick,0x7ffdf681f424,1419151,0,0x0,8
tick,0x7ffdf681f424,1421271,0,0x0,8
tick,0x7ffdf681f424,1423197,0,0x0,8
tick,0x7ffdf681f424,1425180,0,0x0,8
tick,0x7ffdf681f424,1427156,0,0x0,8
tick,0x7ffdf681f424,1429155,0,0x0,8
tick,0x7ffdf681f424,1431132,0,0x0,8
tick,0x7ffdf681f424,1433139,0,0x0,8
tick,0x7ffdf681f424,1435135,0,0x0,8
tick,0x7ffdf681f424,1437216,0,0x0,8
tick,0x7ffdf681f424,1439129,0,0x0,8
tick,0x7ffdf681f424,1441126,0,0x0,8
tick,0x7ffdf681f424,1443105,0,0x0,8
tick,0x7ffdf681f424,1445100,0,0x0,8
tick,0x7ffdf681f424,1447117,0,0x0,8
tick,0x7ffdf681f424,1449089,0,0x0,8
tick,0x7ffdf681f424,1451094,0,0x0,8
tick,0x7ffdf681f424,1453091,0,0x0,8
tick,0x7ffdf681f424,1455073,0,0x0,8
tick,0x7ffdf681f424,1457094,0,0x0,8
tick,0x7ffdf681f424,1459085,0,0x0,8
tick,0x7ffdf681f424,1461069,0,0x0,8
tick,0x7ffdf681f424,1463053,0,0x0,8
tick,0x7ffdf681f424,1465049,0,0x0,8
tick,0x7ffdf681f424,1467025,0,0x0,8
tick,0x7ffdf681f424,1469083,0,0x0,8
tick,0x7ffdf681f424,1471069,0,0x0,8
tick,0x7ffdf681f424,1473030,0,0x0,8
tick,0x7ffdf681f424,1475049,0,0x0,8
tick,0x7ffdf681f424,1476993,0,0x0,8
tick,0x7ffdf681f424,1479041,0,0x0,8
tick,0x7ffdf681f424,1481019,0,0x0,8
tick,0x7ffdf681f424,1483049,0,0x0,8
tick,0x7ffdf681f424,1485030,0,0x0,8
tick,0x7ffdf681f424,1486969,0,0x0,8
tick,0x7ffdf681f424,1488983,0,0x0,8
tick,0x7ffdf681f424,1491020,0,0x0,8
tick,0x7ffdf681f424,1493005,0,0x0,8
tick,0x7ffdf681f424,1494971,0,0x0,8
tick,0x7ffdf681f424,1497001,0,0x0,8
tick,0x7ffdf681f424,1498936,0,0x0,8
tick,0x7ffdf681f424,1500966,0,0x0,8
tick,0x7ffdf681f424,1502978,0,0x0,8
tick,0x7ffdf681f424,1504961,0,0x0,8
tick,0x7ffdf681f424,1506940,0,0x0,8
tick,0x7ffdf681f424,1508965,0,0x0,8
tick,0x7ffdf681f424,1510926,0,0x0,8
tick,0x7ffdf681f424,1512944,0,0x0,8
tick,0x7ffdf681f424,1514921,0,0x0,8
tick,0x7ffdf681f424,1516927,0,0x0,8
tick,0x7ffdf681f424,1518908,0,0x0,8
tick,0x7ffdf681f424,1520907,0,0x0,8
tick,0x7ffdf681f424,1522918,0,0x0,8
tick,0x7ffdf681f424,1524889,0,0x0,8
tick,0x7ffdf681f424,1526839,0,0x0,8
tick,0x7ffdf681f424,1528883,0,0x0,8
tick,0x7ffdf681f424,1530992,0,0x0,8
tick,0x7ffdf681f424,1532903,0,0x0,8
tick,0x7ffdf681f424,1535020,0,0x0,8
tick,0x7ffdf681f424,1536990,0,0x0,8
tick,0x7ffdf681f424,1538970,0,0x0,8
tick,0x7ffdf681f424,1540859,0,0x0,8
tick,0x7ffdf681f424,1542878,0,0x0,8
tick,0x7ffdf681f424,1544949,0,0x0,8
tick,0x7ffdf681f424,1546914,0,0x0,8
tick,0x7ffdf681f424,1548906,0,0x0,8
tick,0x7ffdf681f424,1550963,0,0x0,8
tick,0x7ffdf681f424,1552952,0,0x0,8
tick,0x7ffdf681f424,1554842,0,0x0,8
tick,0x7ffdf681f424,1556870,0,0x0,8
tick,0x7ffdf681f424,1558940,0,0x0,8
tick,0x7ffdf681f424,1560942,0,0x0,8
tick,0x7ffdf681f424,1562833,0,0x0,8
tick,0x7ffdf681f424,1564868,0,0x0,8
tick,0x7ffdf681f424,1566859,0,0x0,8
tick,0x7ffdf681f424,1568856,0,0x0,8
tick,0x7ffdf681f424,1570820,0,0x0,8
tick,0x7ffdf681f424,1572884,0,0x0,8
tick,0x7ffdf681f424,1574872,0,0x0,8
tick,0x7ffdf681f424,1576884,0,0x0,8
tick,0x7ffdf681f424,1578860,0,0x0,8
tick,0x7ffdf681f424,1580775,0,0x0,8
tick,0x7ffdf681f424,1582862,0,0x0,8
tick,0x7ffdf681f424,1584842,0,0x0,8
tick,0x7ffdf681f424,1586834,0,0x0,8
tick,0x7ffdf681f424,1588736,0,0x0,8
tick,0x7ffdf681f424,1590823,0,0x0,8
tick,0x7ffdf681f424,1592825,0,0x0,8
tick,0x7ffdf681f424,1594850,0,0x0,8
tick,0x7ffdf681f424,1596737,0,0x0,8
tick,0x7ffdf681f424,1598816,0,0x0,8
tick,0x7ffdf681f424,1600828,0,0x0,8
tick,0x7ffdf681f424,1602822,0,0x0,8
tick,0x7ffdf681f424,1604823,0,0x0,8
tick,0x7ffdf681f424,1606814,0,0x0,8
tick,0x7ffdf681f424,1608804,0,0x0,8
tick,0x7ffdf681f424,1610774,0,0x0,8
tick,0x7ffdf681f424,1612792,0,0x0,8
tick,0x7ffdf681f424,1614788,0,0x0,8
tick,0x7ffdf681f424,1616798,0,0x0,8
tick,0x7ffdf681f424,1618781,0,0x0,8
tick,0x7ffdf681f424,1620780,0,0x0,8
tick,0x7ffdf681f424,1622757,0,0x0,8
tick,0x7ffdf681f424,1624760,0,0x0,8
tick,0x7ffdf681f424,1626779,0,0x0,8
tick,0x7ffdf681f424,1628776,0,0x0,8
tick,0x7ffdf681f424,1630631,0,0x0,8
tick,0x7ffdf681f424,1632772,0,0x0,8
tick,0x7ffdf681f424,1634735,0,0x0,8
tick,0x7ffdf681f424,1636704,0,0x0,8
tick,0x7ffdf681f424,1638631,0,0x0,8
tick,0x7ffdf681f424,1640717,0,0x0,8
tick,0x7ffdf681f424,1642725,0,0x0,8
tick,0x7ffdf681f424,1644728,0,0x0,8
tick,0x7ffdf681f424,1646660,0,0x0,8
tick,0x7ffdf681f424,1648763,0,0x0,8
tick,0x7ffdf681f424,1650729,0,0x0,8
tick,0x7ffdf681f424,1652671,0,0x0,8
tick,0x7ffdf681f424,1654701,0,0x0,8
tick,0x7ffdf681f424,1656694,0,0x0,8
tick,0x7ffdf681f424,1658739,0,0x0,8
tick,0x7ffdf681f424,1660549,0,0x0,8
tick,0x7ffdf681f424,1662621,0,0x0,8
tick,0x7ffdf681f424,1664620,0,0x0,8
tick,0x7ffdf681f424,1666646,0,0x0,8
tick,0x7ffdf681f424,1668613,0,0x0,8
tick,0x7ffdf681f424,1670612,0,0x0,8
tick,0x7ffdf681f424,1672610,0,0x0,8
tick,0x7ffdf681f424,1674601,0,0x0,8
tick,0x7ffdf681f424,1676597,0,0x0,8
tick,0x7ffdf681f424,1678587,0,0x0,8
tick,0x7ffdf681f424,1680502,0,0x0,8
tick,0x7ffdf681f424,1682604,0,0x0,8
tick,0x7ffdf681f424,1684570,0,0x0,8
tick,0x7ffdf681f424,1686564,0,0x0,8
tick,0x7ffdf681f424,1688516,0,0x0,8
tick,0x7ffdf681f424,1690589,0,0x0,8
tick,0x7ffdf681f424,1692547,0,0x0,8
tick,0x7ffdf681f424,1694545,0,0x0,8
tick,0x7ffdf681f424,1696563,0,0x0,8
tick,0x7ffdf681f424,1698539,0,0x0,8
tick,0x7ffdf681f424,1700527,0,0x0,8
tick,0x7ffdf681f424,1702537,0,0x0,8
tick,0x7ffdf681f424,1704525,0,0x0,8
tick,0x7ffdf681f424,1706519,0,0x0,8
tick,0x7ffdf681f424,1708498,0,0x0,8
tick,0x7ffdf681f424,1710518,0,0x0,8
tick,0x7ffdf681f424,1712502,0,0x0,8
tick,0x7ffdf681f424,1714491,0,0x0,8
tick,0x7ffdf681f424,1716467,0,0x0,8
tick,0x7ffdf681f424,1718504,0,0x0,8
tick,0x7ffdf681f424,1720479,0,0x0,8
tick,0x7ffdf681f424,1722390,0,0x0,8
tick,0x7ffdf681f424,1724460,0,0x0,8
tick,0x7ffdf681f424,1726467,0,0x0,8
tick,0x7ffdf681f424,1728461,0,0x0,8
tick,0x7ffdf681f424,1730340,0,0x0,8
tick,0x7ffdf681f424,1732405,0,0x0,8
tick,0x7ffdf681f424,1734435,0,0x0,8
tick,0x7ffdf681f424,1736392,0,0x0,8
tick,0x7ffdf681f424,1738321,0,0x0,8
tick,0x7ffdf681f424,1740408,0,0x0,8
tick,0x7ffdf681f424,1742413,0,0x0,8
tick,0x7ffdf681f424,1744370,0,0x0,8
tick,0x7ffdf681f424,1746406,0,0x0,8
tick,0x7ffdf681f424,1748401,0,0x0,8
tick,0x7ffdf681f424,1750287,0,0x0,8
tick,0x7ffdf681f424,1752393,0,0x0,8
tick,0x7ffdf681f424,1754354,0,0x0,8
tick,0x7ffdf681f424,1756345,0,0x0,8
tick,0x7ffdf681f424,1758373,0,0x0,8
tick,0x7ffdf681f424,1760250,0,0x0,8
tick,0x7ffdf681f424,1762251,0,0x0,8
tick,0x7ffdf681f424,1764367,0,0x0,8
tick,0x7ffdf681f424,1766244,0,0x0,8
tick,0x7ffdf681f424,1768282,0,0x0,8
tick,0x7ffdf681f424,1770220,0,0x0,8
tick,0x7ffdf681f424,1772353,0,0x0,8
tick,0x7ffdf681f424,1774231,0,0x0,8
tick,0x7ffdf681f424,1776272,0,0x0,8
tick,0x7ffdf681f424,1778277,0,0x0,8
tick,0x7ffdf681f424,1780198,0,0x0,8
tick,0x7ffdf681f424,1782201,0,0x0,8
tick,0x7ffdf681f424,1784222,0,0x0,8
tick,0x7ffdf681f424,1786234,0,0x0,8
tick,0x7ffdf681f424,1788315,0,0x0,8
tick,0x7ffdf681f424,1790160,0,0x0,8
tick,0x7ffdf681f424,1792210,0,0x0,8
tick,0x7ffdf681f424,1794160,0,0x0,8
tick,0x7ffdf681f424,1796189,0,0x0,8
tick,0x7ffdf681f424,1798160,0,0x0,8
tick,0x7ffdf681f424,1800176,0,0x0,8
tick,0x7ffdf681f424,1802161,0,0x0,8
tick,0x7ffdf681f424,1804141,0,0x0,8
tick,0x7ffdf681f424,1806141,0,0x0,8
tick,0x7ffdf681f424,1808133,0,0x0,8
tick,0x7ffdf681f424,1810111,0,0x0,8
tick,0x7ffdf681f424,1812118,0,0x0,8
tick,0x7ffdf681f424,1814212,0,0x0,8
tick,0x7ffdf681f424,1816187,0,0x0,8
tick,0x7ffdf681f424,1818113,0,0x0,8
tick,0x7ffdf681f424,1820145,0,0x0,8
tick,0x7ffdf681f424,1822088,0,0x0,8
tick,0x7ffdf681f424,1824106,0,0x0,8
tick,0x7ffdf681f424,1826094,0,0x0,8
tick,0x7ffdf681f424,1828079,0,0x0,8
tick,0x7ffdf681f424,1830061,0,0x0,8
tick,0x7ffdf681f424,1832126,0,0x0,8
tick,0x7ffdf681f424,1834132,0,0x0,8
tick,0x7ffdf681f424,1836058,0,0x0,8
tick,0x7ffdf681f424,1838056,0,0x0,8
tick,0x7ffdf681f424,1840090,0,0x0,8
tick,0x7ffdf681f424,1842045,0,0x0,8
tick,0x7ffdf681f424,1844037,0,0x0,8
tick,0x7ffdf681f424,1846032,0,0x0,8
tick,0x7ffdf681f424,1848031,0,0x0,8
tick,0x7ffdf681f424,1850024,0,0x0,8
tick,0x7ffdf681f424,1852001,0,0x0,8
tick,0x7ffdf681f424,1854010,0,0x0,8
tick,0x7ffdf681f424,1856024,0,0x0,8
tick,0x7ffdf681f424,1858018,0,0x0,8
tick,0x7ffdf681f424,1859995,0,0x0,8
tick,0x7ffdf681f424,1861990,0,0x0,8
tick,0x7ffdf681f424,1863980,0,0x0,8
tick,0x7ffdf681f424,1865982,0,0x0,8
tick,0x7ffdf681f424,1867984,0,0x0,8
tick,0x7ffdf681f424,1869971,0,0x0,8
tick,0x7ffdf681f424,1871976,0,0x0,8
tick,0x7ffdf681f424,1873964,0,0x0,8
tick,0x7ffdf681f424,1875952,0,0x0,8
tick,0x7ffdf681f424,1877931,0,0x0,8
tick,0x7ffdf681f424,1879887,0,0x0,8
tick,0x7ffdf681f424,1881932,0,0x0,8
tick,0x7ffdf681f424,1883933,0,0x0,8
tick,0x7ffdf681f424,1885964,0,0x0,8
tick,0x7ffdf681f424,1887971,0,0x0,8
tick,0x7ffdf681f424,1889907,0,0x0,8
tick,0x7ffdf681f424,1891914,0,0x0,8
tick,0x7ffdf681f424,1893901,0,0x0,8
tick,0x7ffdf681f424,1895899,0,0x0,8
tick,0x7ffdf681f424,1897891,0,0x0,8
tick,0x7ffdf681f424,1900005,0,0x0,8
tick,0x7ffdf681f424,1902008,0,0x0,8
tick,0x7ffdf681f424,1903918,0,0x0,8
tick,0x7ffdf681f424,1905914,0,0x0,8
tick,0x7ffdf681f424,1907883,0,0x0,8
tick,0x7ffdf681f424,1909893,0,0x0,8
tick,0x7ffdf681f424,1911881,0,0x0,8
tick,0x7ffdf681f424,1913878,0,0x0,8
tick,0x7ffdf681f424,1915867,0,0x0,8
tick,0x7ffdf681f424,1917884,0,0x0,8
tick,0x7ffdf681f424,1919864,0,0x0,8
tick,0x7ffdf681f424,1921803,0,0x0,8
tick,0x7ffdf681f424,1923871,0,0x0,8
tick,0x7ffdf681f424,1925856,0,0x0,8
tick,0x7ffdf681f424,1927859,0,0x0,8
tick,0x7ffdf681f424,1929883,0,0x0,8
tick,0x7ffdf681f424,1931862,0,0x0,8
tick,0x7ffdf681f424,1933863,0,0x0,8
tick,0x7ffdf681f424,1935816,0,0x0,8
tick,0x7ffdf681f424,1937864,0,0x0,8
tick,0x7ffdf681f424,1939866,0,0x0,8
tick,0x7ffdf681f424,1941912,0,0x0,8
tick,0x7ffdf681f424,1943900,0,0x0,8
tick,0x7ffdf681f424,1945853,0,0x0,8
tick,0x7ffdf681f424,1947889,0,0x0,8
tick,0x7ffdf681f424,1949879,0,0x0,8
tick,0x7ffdf681f424,1951879,0,0x0,8
tick,0x7ffdf681f424,1953870,0,0x0,8
tick,0x7ffdf681f424,1955822,0,0x0,8
tick,0x7ffdf681f424,1957849,0,0x0,8
tick,0x7ffdf681f424,1959861,0,0x0,8
tick,0x7ffdf681f424,1961846,0,0x0,8
tick,0x7ffdf681f424,1963775,0,0x0,8
tick,0x7ffdf681f424,1965829,0,0x0,8
tick,0x7ffdf681f424,1967858,0,0x0,8
tick,0x7ffdf681f424,1969841,0,0x0,8
tick,0x7ffdf681f424,1971751,0,0x0,8
tick,0x7ffdf681f424,1973829,0,0x0,8
tick,0x7ffdf681f424,1975823,0,0x0,8
tick,0x7ffdf681f424,1977828,0,0x0,8
tick,0x7ffdf681f424,1979816,0,0x0,8
tick,0x7ffdf681f424,1981834,0,0x0,8
tick,0x7ffdf681f424,1983825,0,0x0,8
tick,0x7ffdf681f424,1985807,0,0x0,8
tick,0x7ffdf681f424,1987773,0,0x0,8
tick,0x7ffdf681f424,1989786,0,0x0,8
tick,0x7ffdf681f424,1991778,0,0x0,8
tick,0x7ffdf681f424,1993778,0,0x0,8
tick,0x7ffdf681f424,1995793,0,0x0,8
tick,0x7ffdf681f424,1997653,0,0x0,8
tick,0x7ffdf681f424,1999764,0,0x0,8
tick,0x7ffdf681f424,2001768,0,0x0,8
tick,0x7ffdf681f424,2003758,0,0x0,8
tick,0x7ffdf681f424,2005759,0,0x0,8
tick,0x7ffdf681f424,2007745,0,0x0,8
tick,0x7ffdf681f424,2009785,0,0x0,8
tick,0x7ffdf681f424,2011737,0,0x0,8
tick,0x7ffdf681f424,2013609,0,0x0,8
tick,0x7ffdf681f424,2015725,0,0x0,8
tick,0x7ffdf681f424,2017722,0,0x0,8
tick,0x7ffdf681f424,2019707,0,0x0,8
tick,0x7ffdf681f424,2021724,0,0x0,8
tick,0x7ffdf681f424,2023697,0,0x0,8
tick,0x7ffdf681f424,2025693,0,0x0,8
tick,0x7ffdf681f424,2027702,0,0x0,8
tick,0x7ffdf681f424,2029687,0,0x0,8
tick,0x7ffdf681f424,2031723,0,0x0,8
tick,0x7ffdf681f424,2033684,0,0x0,8
tick,0x7ffdf681f424,2035666,0,0x0,8
tick,0x7ffdf681f424,2037664,0,0x0,8
tick,0x7ffdf681f424,2039667,0,0x0,8
tick,0x7ffdf681f424,2041652,0,0x0,8
tick,0x7ffdf681f424,2043640,0,0x0,8
tick,0x7ffdf681f424,2045633,0,0x0,8
tick,0x7ffdf681f424,2047633,0,0x0,8
tick,0x7ffdf681f424,2049627,0,0x0,8
tick,0x7ffdf681f424,2051622,0,0x0,8
tick,0x7ffdf681f424,2053660,0,0x0,8
tick,0x7ffdf681f424,2055619,0,0x0,8
tick,0x7ffdf681f424,2057608,0,0x0,8
tick,0x7ffdf681f424,2059623,0,0x0,8
tick,0x7ffdf681f424,2061589,0,0x0,8
tick,0x7ffdf681f424,2063598,0,0x0,8
tick,0x7ffdf681f424,2065605,0,0x0,8
tick,0x7ffdf681f424,2067580,0,0x0,8
tick,0x7ffdf681f424,2069575,0,0x0,8
tick,0x7ffdf681f424,2071576,0,0x0,8
tick,0x7ffdf681f424,2073450,0,0x0,8
tick,0x7ffdf681f424,2075392,0,0x0,8
tick,0x7ffdf681f424,2077408,0,0x0,8
tick,0x7ffdf681f424,2079413,0,0x0,8
tick,0x7ffdf681f424,2081413,0,0x0,8
tick,0x7ffdf681f424,2083542,0,0x0,8
tick,0x7ffdf681f424,2085526,0,0x0,8
tick,0x7ffdf681f424,2087526,0,0x0,8
tick,0x7ffdf681f424,2089419,0,0x0,8
tick,0x7ffdf681f424,2091506,0,0x0,8
tick,0x7ffdf681f424,2093431,0,0x0,8
tick,0x7ffdf681f424,2095504,0,0x0,8
tick,0x7ffdf681f424,2097403,0,0x0,8
tick,0x7ffdf681f424,2099326,0,0x0,8
tick,0x7ffdf681f424,2101456,0,0x0,8
tick,0x7ffdf681f424,2103469,0,0x0,8
tick,0x7ffdf681f424,2105363,0,0x0,8
tick,0x7ffdf681f424,2107421,0,0x0,8
tick,0x7ffdf681f424,2109474,0,0x0,8
tick,0x7ffdf681f424,2111460,0,0x0,8
tick,0x7ffdf681f424,2113391,0,0x0,8
tick,0x7ffdf681f424,2115348,0,0x0,8
tick,0x7ffdf681f424,2117446,0,0x0,8
tick,0x7ffdf681f424,2119430,0,0x0,8
tick,0x7ffdf681f424,2121452,0,0x0,8
tick,0x7ffdf681f424,2123272,0,0x0,8
tick,0x7ffdf681f424,2125421,0,0x0,8
tick,0x7ffdf681f424,2127425,0,0x0,8
tick,0x7ffdf681f424,2129413,0,0x0,8
tick,0x7ffdf681f424,2131285,0,0x0,8
tick,0x7ffdf681f424,2133388,0,0x0,8
tick,0x7ffdf681f424,2135416,0,0x0,8
tick,0x7ffdf681f424,2137302,0,0x0,8
tick,0x7ffdf681f424,2139313,0,0x0,8
tick,0x7ffdf681f424,2141213,0,0x0,8
tick,0x7ffdf681f424,2143349,0,0x0,8
tick,0x7ffdf681f424,2145304,0,0x0,8
tick,0x7ffdf681f424,2147242,0,0x0,8
tick,0x7ffdf681f424,2149272,0,0x0,8
tick,0x7ffdf681f424,2151350,0,0x0,8
tick,0x7ffdf681f424,2153353,0,0x0,8
tick,0x7ffdf681f424,2155234,0,0x0,8
tick,0x7ffdf681f424,2157329,0,0x0,8
tick,0x7ffdf681f424,2159238,0,0x0,8
tick,0x7ffdf681f424,2161332,0,0x0,8
tick,0x7ffdf681f424,2163355,0,0x0,8
tick,0x7ffdf681f424,2165200,0,0x0,8
tick,0x7ffdf681f424,2167309,0,0x0,8
tick,0x7ffdf681f424,2169305,0,0x0,8
tick,0x7ffdf681f424,2171308,0,0x0,8
tick,0x7ffdf681f424,2173187,0,0x0,8
tick,0x7ffdf681f424,2175292,0,0x0,8
tick,0x7ffdf681f424,2177281,0,0x0,8
tick,0x7ffdf681f424,2179280,0,0x0,8
tick,0x7ffdf681f424,2181196,0,0x0,8
tick,0x7ffdf681f424,2183286,0,0x0,8
tick,0x7ffdf681f424,2185114,0,0x0,8
tick,0x7ffdf681f424,2187141,0,0x0,8
tick,0x7ffdf681f424,2189143,0,0x0,8
tick,0x7ffdf681f424,2191118,0,0x0,8
tick,0x7ffdf681f424,2193171,0,0x0,8
tick,0x7ffdf681f424,2195141,0,0x0,8
tick,0x7ffdf681f424,2197127,0,0x0,8
tick,0x7ffdf681f424,2199229,0,0x0,8
tick,0x7ffdf681f424,2201219,0,0x0,8
tick,0x7ffdf681f424,2203223,0,0x0,8
tick,0x7ffdf681f424,2205125,0,0x0,8
tick,0x7ffdf681f424,2207184,0,0x0,8
tick,0x7ffdf681f424,2209219,0,0x0,8
tick,0x7ffdf681f424,2211190,0,0x0,8
tick,0x7ffdf681f424,2213190,0,0x0,8
tick,0x7ffdf681f424,2215201,0,0x0,8
tick,0x7ffdf681f424,2217184,0,0x0,8
tick,0x7ffdf681f424,2219187,0,0x0,8
tick,0x7ffdf681f424,2221072,0,0x0,8
tick,0x7ffdf681f424,2223155,0,0x0,8
tick,0x7ffdf681f424,2225176,0,0x0,8
tick,0x7ffdf681f424,2227161,0,0x0,8
tick,0x7ffdf681f424,2229126,0,0x0,8
tick,0x7ffdf681f424,2231152,0,0x0,8
tick,0x7ffdf681f424,2233135,0,0x0,8
tick,0x7ffdf681f424,2235133,0,0x0,8
tick,0x7ffdf681f424,2237125,0,0x0,8
tick,0x7ffdf681f424,2239133,0,0x0,8
tick,0x7ffdf681f424,2241129,0,0x0,8
tick,0x7ffdf681f424,2243088,0,0x0,8
tick,0x7ffdf681f424,2245111,0,0x0,8
tick,0x7ffdf681f424,2247041,0,0x0,8
tick,0x7ffdf681f424,2249047,0,0x0,8
tick,0x7ffdf681f424,2250962,0,0x0,8
tick,0x7ffdf681f424,2253082,0,0x0,8
tick,0x7ffdf681f424,2255062,0,0x0,8
tick,0x7ffdf681f424,2257057,0,0x0,8
tick,0x7ffdf681f424,2259078,0,0x0,8
tick,0x7ffdf681f424,2261062,0,0x0,8
tick,0x7ffdf681f424,2263080,0,0x0,8
tick,0x7ffdf681f424,2265053,0,0x0,8
tick,0x7ffdf681f424,2267047,0,0x0,8
tick,0x7ffdf681f424,2269047,0,0x0,8
tick,0x7ffdf681f424,2271033,0,0x0,8
tick,0x7ffdf681f424,2273010,0,0x0,8
tick,0x7ffdf681f424,2275030,0,0x0,8
tick,0x7ffdf681f424,2277019,0,0x0,8
tick,0x7ffdf681f424,2279014,0,0x0,8
tick,0x7ffdf681f424,2281023,0,0x0,8
tick,0x7ffdf681f424,2283013,0,0x0,8
tick,0x7ffdf681f424,2284947,0,0x0,8
tick,0x7ffdf681f424,2286995,0,0x0,8
tick,0x7ffdf681f424,2288999,0,0x0,8
tick,0x7ffdf681f424,2290987,0,0x0,8
tick,0x7ffdf681f424,2292981,0,0x0,8
tick,0x7ffdf681f424,2294975,0,0x0,8
tick,0x7ffdf681f424,2296866,0,0x0,8
tick,0x7ffdf681f424,2298965,0,0x0,8
tick,0x7ffdf681f424,2300951,0,0x0,8
tick,0x7ffdf681f424,2302953,0,0x0,8
tick,0x7ffdf681f424,2304951,0,0x0,8
tick,0x7ffdf681f424,2306949,0,0x0,8
tick,0x7ffdf681f424,2308952,0,0x0,8
tick,0x7ffdf681f424,2310942,0,0x0,8
tick,0x7ffdf681f424,2312925,0,0x0,8
tick,0x7ffdf681f424,2314919,0,0x0,8
tick,0x7ffdf681f424,2316943,0,0x0,8
tick,0x7ffdf681f424,2318920,0,0x0,8
tick,0x7ffdf681f424,2320901,0,0x0,8
tick,0x7ffdf681f424,2322903,0,0x0,8
tick,0x7ffdf681f424,2324894,0,0x0,8
tick,0x7ffdf681f424,2326892,0,0x0,8
tick,0x7ffdf681f424,2328885,0,0x0,8
tick,0x7ffdf681f424,2330879,0,0x0,8
tick,0x7ffdf681f424,2332873,0,0x0,8
tick,0x7ffdf681f424,2334875,0,0x0,8
tick,0x7ffdf681f424,2336869,0,0x0,8
tick,0x7ffdf681f424,2338897,0,0x0,8
tick,0x7ffdf681f424,2340850,0,0x0,8
tick,0x7ffdf681f424,2342841,0,0x0,8
tick,0x7ffdf681f424,2344845,0,0x0,8
tick,0x7ffdf681f424,2346824,0,0x0,8
tick,0x7ffdf681f424,2348829,0,0x0,8
tick,0x7ffdf681f424,2350828,0,0x0,8
tick,0x7ffdf681f424,2352815,0,0x0,8
tick,0x7ffdf681f424,2354816,0,0x0,8
tick,0x7ffdf681f424,2356812,0,0x0,8
tick,0x7ffdf681f424,2358801,0,0x0,8
tick,0x7ffdf681f424,2360798,0,0x0,8
tick,0x7ffdf681f424,2362795,0,0x0,8
tick,0x7ffdf681f424,2364787,0,0x0,8
tick,0x7ffdf681f424,2366781,0,0x0,8
tick,0x7ffdf681f424,2368792,0,0x0,8
tick,0x7ffdf681f424,2370773,0,0x0,8
tick,0x7ffdf681f424,2372713,0,0x0,8
tick,0x7ffdf681f424,2374746,0,0x0,8
tick,0x7ffdf681f424,2376752,0,0x0,8
tick,0x7ffdf681f424,2378753,0,0x0,8
tick,0x7ffdf681f424,2380743,0,0x0,8
tick,0x7ffdf681f424,2382741,0,0x0,8
tick,0x7ffdf681f424,2384754,0,0x0,8
tick,0x7ffdf681f424,2386618,0,0x0,8
tick,0x7ffdf681f424,2388667,0,0x0,8
tick,0x7ffdf681f424,2390735,0,0x0,8
tick,0x7ffdf681f424,2392751,0,0x0,8
tick,0x7ffdf681f424,2394691,0,0x0,8
tick,0x7ffdf681f424,2396672,0,0x0,8
tick,0x7ffdf681f424,2398696,0,0x0,8
tick,0x7ffdf681f424,2400675,0,0x0,8
tick,0x7ffdf681f424,2402662,0,0x0,8
tick,0x7ffdf681f424,2404655,0,0x0,8
tick,0x7ffdf681f424,2406688,0,0x0,8
tick,0x7ffdf681f424,2408635,0,0x0,8
tick,0x7ffdf681f424,2410661,0,0x0,8
tick,0x7ffdf681f424,2412654,0,0x0,8
tick,0x7ffdf681f424,2414638,0,0x0,8
tick,0x7ffdf681f424,2416655,0,0x0,8
tick,0x7ffdf681f424,2418640,0,0x0,8
tick,0x7ffdf681f424,2420646,0,0x0,8
tick,0x7ffdf681f424,2422635,0,0x0,8
tick,0x7ffdf681f424,2424639,0,0x0,8
tick,0x7ffdf681f424,2426625,0,0x0,8
tick,0x7ffdf681f424,2428625,0,0x0,8
tick,0x7ffdf681f424,2430631,0,0x0,8
tick,0x7ffdf681f424,2432660,0,0x0,8
tick,0x7ffdf681f424,2434610,0,0x0,8
tick,0x7ffdf681f424,2436576,0,0x0,8
tick,0x7ffdf681f424,2438607,0,0x0,8
tick,0x7ffdf681f424,2440583,0,0x0,8
tick,0x7ffdf681f424,2442589,0,0x0,8
tick,0x7ffdf681f424,2444540,0,0x0,8
tick,0x7ffdf681f424,2446576,0,0x0,8
tick,0x7ffdf681f424,2448571,0,0x0,8
tick,0x7ffdf681f424,2450572,0,0x0,8
tick,0x7ffdf681f424,2452550,0,0x0,8
tick,0x7ffdf681f424,2454558,0,0x0,8
tick,0x7ffdf681f424,2456550,0,0x0,8
tick,0x7ffdf681f424,2458550,0,0x0,8
tick,0x7ffdf681f424,2460552,0,0x0,8
tick,0x7ffdf681f424,2462530,0,0x0,8
tick,0x7ffdf681f424,2464524,0,0x0,8
tick,0x7ffdf681f424,2466516,0,0x0,8
tick,0x7ffdf681f424,2468520,0,0x0,8
tick,0x7ffdf681f424,2470452,0,0x0,8
tick,0x7ffdf681f424,2472510,0,0x0,8
tick,0x7ffdf681f424,2474501,0,0x0,8
tick,0x7ffdf681f424,2476496,0,0x0,8
tick,0x7ffdf681f424,2478495,0,0x0,8
tick,0x7ffdf681f424,2480459,0,0x0,8
tick,0x7ffdf681f424,2482492,0,0x0,8
tick,0x7ffdf681f424,2484470,0,0x0,8
tick,0x7ffdf681f424,2486472,0,0x0,8
tick,0x7ffdf681f424,2488461,0,0x0,8
tick,0x7ffdf681f424,2490454,0,0x0,8
tick,0x7ffdf681f424,2492449,0,0x0,8
tick,0x7ffdf681f424,2494416,0,0x0,8
tick,0x7ffdf681f424,2496439,0,0x0,8
tick,0x7ffdf681f424,2498438,0,0x0,8
tick,0x7ffdf681f424,2500431,0,0x0,8
tick,0x7ffdf681f424,2502463,0,0x0,8
tick,0x7ffdf681f424,2504428,0,0x0,8
tick,0x7ffdf681f424,2506303,0,0x0,8
tick,0x7ffdf681f424,2508405,0,0x0,8
tick,0x7ffdf681f424,2510398,0,0x0,8
tick,0x7ffdf681f424,2512401,0,0x0,8
tick,0x7ffdf681f424,2514409,0,0x0,8
tick,0x7ffdf681f424,2516395,0,0x0,8
tick,0x7ffdf681f424,2518382,0,0x0,8
tick,0x7ffdf681f424,2520380,0,0x0,8
tick,0x7ffdf681f424,2522379,0,0x0,8
tick,0x7ffdf681f424,2524347,0,0x0,8
tick,0x7ffdf681f424,2526360,0,0x0,8
tick,0x7ffdf681f424,2528357,0,0x0,8
tick,0x7ffdf681f424,2530348,0,0x0,8
tick,0x7ffdf681f424,2532233,0,0x0,8
tick,0x7ffdf681f424,2534344,0,0x0,8
tick,0x7ffdf681f424,2536333,0,0x0,8
tick,0x7ffdf681f424,2538340,0,0x0,8
tick,0x7ffdf681f424,2540323,0,0x0,8
tick,0x7ffdf681f424,2542327,0,0x0,8
tick,0x7ffdf681f424,2544317,0,0x0,8
tick,0x7ffdf681f424,2546344,0,0x0,8
tick,0x7ffdf681f424,2548298,0,0x0,8
tick,0x7ffdf681f424,2550299,0,0x0,8
tick,0x7ffdf681f424,2552293,0,0x0,8
tick,0x7ffdf681f424,2554291,0,0x0,8
tick,0x7ffdf681f424,2556281,0,0x0,8
tick,0x7ffdf681f424,2558273,0,0x0,8
tick,0x7ffdf681f424,2560277,0,0x0,8
tick,0x7ffdf681f424,2562146,0,0x0,8
tick,0x7ffdf681f424,2564270,0,0x0,8
tick,0x7ffdf681f424,2566255,0,0x0,8
tick,0x7ffdf681f424,2568178,0,0x0,8
tick,0x7ffdf681f424,2570237,0,0x0,8
tick,0x7ffdf681f424,2572250,0,0x0,8
tick,0x7ffdf681f424,2574230,0,0x0,8
tick,0x7ffdf681f424,2576232,0,0x0,8
tick,0x7ffdf681f424,2578222,0,0x0,8
tick,0x7ffdf681f424,2580233,0,0x0,8
tick,0x7ffdf681f424,2582238,0,0x0,8
tick,0x7ffdf681f424,2584203,0,0x0,8
tick,0x7ffdf681f424,2586204,0,0x0,8
tick,0x7ffdf681f424,2588203,0,0x0,8
tick,0x7ffdf681f424,2590169,0,0x0,8
tick,0x7ffdf681f424,2592067,0,0x0,8
tick,0x7ffdf681f424,2594061,0,0x0,8
tick,0x7ffdf681f424,2596186,0,0x0,8
tick,0x7ffdf681f424,2598165,0,0x0,8
tick,0x7ffdf681f424,2600166,0,0x0,8
tick,0x7ffdf681f424,2602158,0,0x0,8
tick,0x7ffdf681f424,2604163,0,0x0,8
tick,0x7ffdf681f424,2606040,0,0x0,8
tick,0x7ffdf681f424,2608145,0,0x0,8
tick,0x7ffdf681f424,2610143,0,0x0,8
tick,0x7ffdf681f424,2612141,0,0x0,8
tick,0x7ffdf681f424,2614139,0,0x0,8
tick,0x7ffdf681f424,2616008,0,0x0,8
tick,0x7ffdf681f424,2617977,0,0x0,8
tick,0x7ffdf681f424,2620011,0,0x0,8
tick,0x7ffdf681f424,2622011,0,0x0,8
tick,0x7ffdf681f424,2623972,0,0x0,8
tick,0x7ffdf681f424,2625994,0,0x0,8
tick,0x7ffdf681f424,2627971,0,0x0,8
tick,0x7ffdf681f424,2630024,0,0x0,8
tick,0x7ffdf681f424,2631995,0,0x0,8
tick,0x7ffdf681f424,2634018,0,0x0,8
tick,0x7ffdf681f424,2635994,0,0x0,8
tick,0x7ffdf681f424,2637943,0,0x0,8
tick,0x7ffdf681f424,2639940,0,0x0,8
tick,0x7ffdf681f424,2641926,0,0x0,8
tick,0x7ffdf681f424,2643938,0,0x0,8
tick,0x7ffdf681f424,2645926,0,0x0,8
tick,0x7ffdf681f424,2647903,0,0x0,8
tick,0x7ffdf681f424,2649913,0,0x0,8
tick,0x7ffdf681f424,2651907,0,0x0,8
tick,0x7ffdf681f424,2653920,0,0x0,8
tick,0x7ffdf681f424,2655859,0,0x0,8
tick,0x7ffdf681f424,2657848,0,0x0,8
tick,0x7ffdf681f424,2659899,0,0x0,8
tick,0x7ffdf681f424,2661883,0,0x0,8
tick,0x7ffdf681f424,2663867,0,0x0,8
tick,0x7ffdf681f424,2665871,0,0x0,8
tick,0x7ffdf681f424,2667860,0,0x0,8
tick,0x7ffdf681f424,2669917,0,0x0,8
tick,0x7ffdf681f424,2671924,0,0x0,8
tick,0x7ffdf681f424,2673814,0,0x0,8
tick,0x7ffdf681f424,2675852,0,0x0,8
tick,0x7ffdf681f424,2677875,0,0x0,8
tick,0x7ffdf681f424,2679845,0,0x0,8
tick,0x7ffdf681f424,2681778,0,0x0,8
tick,0x7ffdf681f424,2683859,0,0x0,8
tick,0x7ffdf681f424,2685912,0,0x0,8
tick,0x7ffdf681f424,2687837,0,0x0,8
tick,0x7ffdf681f424,2689841,0,0x0,8
tick,0x7ffdf681f424,2691896,0,0x0,8
tick,0x7ffdf681f424,2693841,0,0x0,8
tick,0x7ffdf681f424,2695839,0,0x0,8
tick,0x7ffdf681f424,2697841,0,0x0,8
tick,0x7ffdf681f424,2699915,0,0x0,8
tick,0x7ffdf681f424,2701845,0,0x0,8
tick,0x7ffdf681f424,2703857,0,0x0,8
tick,0x7ffdf681f424,2705752,0,0x0,8
tick,0x7ffdf681f424,2707886,0,0x0,8
tick,0x7ffdf681f424,2709886,0,0x0,8
tick,0x7ffdf681f424,2711896,0,0x0,8
tick,0x7ffdf681f424,2713725,0,0x0,8
tick,0x7ffdf681f424,2715839,0,0x0,8
tick,0x7ffdf681f424,2717820,0,0x0,8
tick,0x7ffdf681f424,2719866,0,0x0,8
tick,0x7ffdf681f424,2721782,0,0x0,8
tick,0x7ffdf681f424,2723825,0,0x0,8
tick,0x7ffdf681f424,2725824,0,0x0,8
tick,0x7ffdf681f424,2727812,0,0x0,8
tick,0x7ffdf681f424,2729804,0,0x0,8
tick,0x7ffdf681f424,2731813,0,0x0,8
tick,0x7ffdf681f424,2733802,0,0x0,8
tick,0x7ffdf681f424,2735794,0,0x0,8
tick,0x7ffdf681f424,2737793,0,0x0,8
tick,0x7ffdf681f424,2739789,0,0x0,8
tick,0x7ffdf681f424,2741749,0,0x0,8
tick,0x7ffdf681f424,2743768,0,0x0,8
tick,0x7ffdf681f424,2745763,0,0x0,8
tick,0x7ffdf681f424,2747624,0,0x0,8
tick,0x7ffdf681f424,2749648,0,0x0,8
tick,0x7ffdf681f424,2751758,0,0x0,8
tick,0x7ffdf681f424,2753752,0,0x0,8
tick,0x7ffdf681f424,2755615,0,0x0,8
tick,0x7ffdf681f424,2757584,0,0x0,8
tick,0x7ffdf681f424,2759708,0,0x0,8
tick,0x7ffdf681f424,2761701,0,0x0,8
tick,0x7ffdf681f424,2763600,0,0x0,8
tick,0x7ffdf681f424,2765558,0,0x0,8
tick,0x7ffdf681f424,2767702,0,0x0,8
tick,0x7ffdf681f424,2769668,0,0x0,8
tick,0x7ffdf681f424,2771670,0,0x0,8
tick,0x7ffdf681f424,2773590,0,0x0,8
tick,0x7ffdf681f424,2775743,0,0x0,8
tick,0x7ffdf681f424,2777718,0,0x0,8
tick,0x7ffdf681f424,2779605,0,0x0,8
tick,0x7ffdf681f424,2781551,0,0x0,8
tick,0x7ffdf681f424,2783657,0,0x0,8
tick,0x7ffdf681f424,2785659,0,0x0,8
tick,0x7ffdf681f424,2787561,0,0x0,8
tick,0x7ffdf681f424,2789579,0,0x0,8
tick,0x7ffdf681f424,2791584,0,0x0,8
tick,0x7ffdf681f424,2793637,0,0x0,8
tick,0x7ffdf681f424,2795523,0,0x0,8
tick,0x7ffdf681f424,2797551,0,0x0,8
tick,0x7ffdf681f424,2799513,0,0x0,8
tick,0x7ffdf681f424,2801616,0,0x0,8
tick,0x7ffdf681f424,2803585,0,0x0,8
tick,0x7ffdf681f424,2805510,0,0x0,8
tick,0x7ffdf681f424,2807598,0,0x0,8
tick,0x7ffdf681f424,2809583,0,0x0,8
tick,0x7ffdf681f424,2811477,0,0x0,8
tick,0x7ffdf681f424,2813465,0,0x0,8
tick,0x7ffdf681f424,2815579,0,0x0,8
tick,0x7ffdf681f424,2817489,0,0x0,8
tick,0x7ffdf681f424,2819559,0,0x0,8
tick,0x7ffdf681f424,2821542,0,0x0,8
tick,0x7ffdf681f424,2823461,0,0x0,8
tick,0x7ffdf681f424,2825549,0,0x0,8
tick,0x7ffdf681f424,2827548,0,0x0,8
tick,0x7ffdf681f424,2829538,0,0x0,8
tick,0x7ffdf681f424,2831461,0,0x0,8
tick,0x7ffdf681f424,2833439,0,0x0,8
tick,0x7ffdf681f424,2835520,0,0x0,8
tick,0x7ffdf681f424,2837508,0,0x0,8
tick,0x7ffdf681f424,2839418,0,0x0,8
tick,0x7ffdf681f424,2841393,0,0x0,8
tick,0x7ffdf681f424,2843327,0,0x0,8
tick,0x7ffdf681f424,2845501,0,0x0,8
tick,0x7ffdf681f424,2847362,0,0x0,8
tick,0x7ffdf681f424,2849341,0,0x0,8
tick,0x7ffdf681f424,2851351,0,0x0,8
tick,0x7ffdf681f424,2853438,0,0x0,8
tick,0x7ffdf681f424,2855353,0,0x0,8
tick,0x7ffdf681f424,2857401,0,0x0,8
tick,0x7ffdf681f424,2859436,0,0x0,8
tick,0x7ffdf681f424,2861413,0,0x0,8
tick,0x7ffdf681f424,2863385,0,0x0,8
tick,0x7ffdf681f424,2865318,0,0x0,8
tick,0x7ffdf681f424,2867414,0,0x0,8
tick,0x7ffdf681f424,2869299,0,0x0,8
tick,0x7ffdf681f424,2871401,0,0x0,8
tick,0x7ffdf681f424,2873296,0,0x0,8
tick,0x7ffdf681f424,2875435,0,0x0,8
tick,0x7ffdf681f424,2877306,0,0x0,8
tick,0x7ffdf681f424,2879394,0,0x0,8
tick,0x7ffdf681f424,2881324,0,0x0,8
tick,0x7ffdf681f424,2883301,0,0x0,8
tick,0x7ffdf681f424,2885365,0,0x0,8
tick,0x7ffdf681f424,2887247,0,0x0,8
tick,0x7ffdf681f424,2889263,0,0x0,8
tick,0x7ffdf681f424,2891232,0,0x0,8
tick,0x7ffdf681f424,2893256,0,0x0,8
tick,0x7ffdf681f424,2895290,0,0x0,8
tick,0x7ffdf681f424,2897235,0,0x0,8
tick,0x7ffdf681f424,2899211,0,0x0,8
tick,0x7ffdf681f424,2901316,0,0x0,8
tick,0x7ffdf681f424,2903311,0,0x0,8
tick,0x7ffdf681f424,2905193,0,0x0,8
tick,0x7ffdf681f424,2907195,0,0x0,8
tick,0x7ffdf681f424,2909186,0,0x0,8
tick,0x7ffdf681f424,2911285,0,0x0,8
tick,0x7ffdf681f424,2913174,0,0x0,8
tick,0x7ffdf681f424,2915284,0,0x0,8
tick,0x7ffdf681f424,2917164,0,0x0,8
tick,0x7ffdf681f424,2919291,0,0x0,8
tick,0x7ffdf681f424,2921157,0,0x0,8
tick,0x7ffdf681f424,2923176,0,0x0,8
tick,0x7ffdf681f424,2925180,0,0x0,8
tick,0x7ffdf681f424,2927245,0,0x0,8
tick,0x7ffdf681f424,2929240,0,0x0,8
tick,0x7ffdf681f424,2931195,0,0x0,8
tick,0x7ffdf681f424,2933121,0,0x0,8
tick,0x7ffdf681f424,2935226,0,0x0,8
tick,0x7ffdf681f424,2937222,0,0x0,8
tick,0x7ffdf681f424,2939198,0,0x0,8
tick,0x7ffdf681f424,2941221,0,0x0,8
tick,0x7ffdf681f424,2943100,0,0x0,8
tick,0x7ffdf681f424,2945094,0,0x0,8
tick,0x7ffdf681f424,2947126,0,0x0,8
tick,0x7ffdf681f424,2949090,0,0x0,8
tick,0x7ffdf681f424,2951184,0,0x0,8
tick,0x7ffdf681f424,2953071,0,0x0,8
tick,0x7ffdf681f424,2955195,0,0x0,8
tick,0x7ffdf681f424,2957107,0,0x0,8
tick,0x7ffdf681f424,2959167,0,0x0,8
tick,0x7ffdf681f424,2961169,0,0x0,8
tick,0x7ffdf681f424,2963027,0,0x0,8
tick,0x7ffdf681f424,2965148,0,0x0,8
tick,0x7ffdf681f424,2967055,0,0x0,8
tick,0x7ffdf681f424,2969139,0,0x0,8
tick,0x7ffdf681f424,2971130,0,0x0,8
tick,0x7ffdf681f424,2973129,0,0x0,8
tick,0x7ffdf681f424,2975120,0,0x0,8
tick,0x7ffdf681f424,2977113,0,0x0,8
tick,0x7ffdf681f424,2979110,0,0x0,8
tick,0x7ffdf681f424,2981134,0,0x0,8
tick,0x7ffdf681f424,2983131,0,0x0,8
tick,0x7ffdf681f424,2985145,0,0x0,8
tick,0x7ffdf681f424,2987104,0,0x0,8
tick,0x7ffdf681f424,2989101,0,0x0,8
tick,0x7ffdf681f424,2991095,0,0x0,8
tick,0x7ffdf681f424,2993054,0,0x0,8
tick,0x7ffdf681f424,2995106,0,0x0,8
tick,0x7ffdf681f424,2997009,0,0x0,8
tick,0x7ffdf681f424,2999115,0,0x0,8
tick,0x7ffdf681f424,3001084,0,0x0,8
tick,0x7ffdf681f424,3003084,0,0x0,8
tick,0x7ffdf681f424,3004972,0,0x0,8
tick,0x7ffdf681f424,3007110,0,0x0,8
tick,0x7ffdf681f424,3009070,0,0x0,8
tick,0x7ffdf681f424,3011058,0,0x0,8
tick,0x7ffdf681f424,3012957,0,0x0,8
tick,0x7ffdf681f424,3015049,0,0x0,8
tick,0x7ffdf681f424,3017042,0,0x0,8
tick,0x7ffdf681f424,3019036,0,0x0,8
tick,0x7ffdf681f424,3021046,0,0x0,8
tick,0x7ffdf681f424,3023029,0,0x0,8
tick,0x7ffdf681f424,3025035,0,0x0,8
tick,0x7ffdf681f424,3027037,0,0x0,8
tick,0x7ffdf681f424,3028993,0,0x0,8
tick,0x7ffdf681f424,3030907,0,0x0,8
tick,0x7ffdf681f424,3032995,0,0x0,8
tick,0x7ffdf681f424,3034995,0,0x0,8
tick,0x7ffdf681f424,3036993,0,0x0,8
tick,0x7ffdf681f424,3038984,0,0x0,8
tick,0x7ffdf681f424,3040984,0,0x0,8
tick,0x7ffdf681f424,3042894,0,0x0,8
tick,0x7ffdf681f424,3044859,0,0x0,8
tick,0x7ffdf681f424,3046877,0,0x0,8
tick,0x7ffdf681f424,3048966,0,0x0,8
tick,0x7ffdf681f424,3051015,0,0x0,8
tick,0x7ffdf681f424,3052958,0,0x0,8
tick,0x7ffdf681f424,3054950,0,0x0,8
tick,0x7ffdf681f424,3056940,0,0x0,8
tick,0x7ffdf681f424,3058937,0,0x0,8
tick,0x7ffdf681f424,3060934,0,0x0,8
tick,0x7ffdf681f424,3062918,0,0x0,8
tick,0x7ffdf681f424,3064928,0,0x0,8
tick,0x7ffdf681f424,3066804,0,0x0,8
tick,0x7ffdf681f424,3068916,0,0x0,8
tick,0x7ffdf681f424,3070916,0,0x0,8
tick,0x7ffdf681f424,3072937,0,0x0,8
tick,0x7ffdf681f424,3074893,0,0x0,8
tick,0x7ffdf681f424,3076888,0,0x0,8
tick,0x7ffdf681f424,3078898,0,0x0,8
tick,0x7ffdf681f424,3080877,0,0x0,8
tick,0x7ffdf681f424,3082871,0,0x0,8
tick,0x7ffdf681f424,3084867,0,0x0,8
tick,0x7ffdf681f424,3086868,0,0x0,8
tick,0x7ffdf681f424,3088871,0,0x0,8
tick,0x7ffdf681f424,3090853,0,0x0,8
tick,0x7ffdf681f424,3092734,0,0x0,8
tick,0x7ffdf681f424,3094815,0,0x0,8
tick,0x7ffdf681f424,3096808,0,0x0,8
tick,0x7ffdf681f424,3098798,0,0x0,8
tick,0x7ffdf681f424,3100804,0,0x0,8
tick,0x7ffdf681f424,3102785,0,0x0,8
tick,0x7ffdf681f424,3104780,0,0x0,8
tick,0x7ffdf681f424,3106775,0,0x0,8
tick,0x7ffdf681f424,3108784,0,0x0,8
tick,0x7ffdf681f424,3110689,0,0x0,8
tick,0x7ffdf681f424,3112678,0,0x0,8
tick,0x7ffdf681f424,3114755,0,0x0,8
tick,0x7ffdf681f424,3116680,0,0x0,8
tick,0x7ffdf681f424,3118735,0,0x0,8
tick,0x7ffdf681f424,3120732,0,0x0,8
tick,0x7ffdf681f424,3122758,0,0x0,8
tick,0x7ffdf681f424,3124755,0,0x0,8
tick,0x7ffdf681f424,3126746,0,0x0,8
tick,0x7ffdf681f424,3128754,0,0x0,8
tick,0x7ffdf681f424,3130607,0,0x0,8
tick,0x7ffdf681f424,3132715,0,0x0,8
tick,0x7ffdf681f424,3134725,0,0x0,8
tick,0x7ffdf681f424,3136715,0,0x0,8
tick,0x7ffdf681f424,3138644,0,0x0,8
tick,0x7ffdf681f424,3140719,0,0x0,8
tick,0x7ffdf681f424,3142701,0,0x0,8
tick,0x7ffdf681f424,3144695,0,0x0,8
tick,0x7ffdf681f424,3146690,0,0x0,8
tick,0x7ffdf681f424,3148688,0,0x0,8
tick,0x7ffdf681f424,3150681,0,0x0,8
tick,0x7ffdf681f424,3152689,0,0x0,8
tick,0x7ffdf681f424,3154682,0,0x0,8
tick,0x7ffdf681f424,3156663,0,0x0,8
tick,0x7ffdf681f424,3158664,0,0x0,8
tick,0x7ffdf681f424,3160638,0,0x0,8
tick,0x7ffdf681f424,3162654,0,0x0,8
tick,0x7ffdf681f424,3164648,0,0x0,8
tick,0x7ffdf681f424,3166639,0,0x0,8
tick,0x7ffdf681f424,3168658,0,0x0,8
tick,0x7ffdf681f424,3170631,0,0x0,8
tick,0x7ffdf681f424,3172638,0,0x0,8
tick,0x7ffdf681f424,3174631,0,0x0,8
tick,0x7ffdf681f424,3176620,0,0x0,8
tick,0x7ffdf681f424,3178616,0,0x0,8
tick,0x7ffdf681f424,3180494,0,0x0,8
tick,0x7ffdf681f424,3182593,0,0x0,8
tick,0x7ffdf681f424,3184597,0,0x0,8
tick,0x7ffdf681f424,3186592,0,0x0,8
tick,0x7ffdf681f424,3188560,0,0x0,8
tick,0x7ffdf681f424,3190586,0,0x0,8
tick,0x7ffdf681f424,3192486,0,0x0,8
tick,0x7ffdf681f424,3194506,0,0x0,8
tick,0x7ffdf681f424,3196429,0,0x0,8
tick,0x7ffdf681f424,3198488,0,0x0,8
tick,0x7ffdf681f424,3200544,0,0x0,8
tick,0x7ffdf681f424,3202555,0,0x0,8
tick,0x7ffdf681f424,3204521,0,0x0,8
tick,0x7ffdf681f424,3206373,0,0x0,8
tick,0x7ffdf681f424,3208344,0,0x0,8
tick,0x7ffdf681f424,3210340,0,0x0,8
tick,0x7ffdf681f424,3212448,0,0x0,8
tick,0x7ffdf681f424,3214351,0,0x0,8
tick,0x7ffdf681f424,3216404,0,0x0,8
tick,0x7ffdf681f424,3218355,0,0x0,8
tick,0x7ffdf681f424,3220355,0,0x0,8
tick,0x7ffdf681f424,3222354,0,0x0,8
tick,0x7ffdf681f424,3224316,0,0x0,8
tick,0x7ffdf681f424,3226349,0,0x0,8
tick,0x7ffdf681f424,3228344,0,0x0,8
tick,0x7ffdf681f424,3230282,0,0x0,8
tick,0x7ffdf681f424,3232298,0,0x0,8
tick,0x7ffdf681f424,3234267,0,0x0,8
tick,0x7ffdf681f424,3236269,0,0x0,8
tick,0x7ffdf681f424,3238293,0,0x0,8
tick,0x7ffdf681f424,3240256,0,0x0,8
tick,0x7ffdf681f424,3241343,0,0x0,8
tick,0x7ffdf681f424,3243286,0,0x0,8
tick,0x7ffdf681f424,3245261,0,0x0,8
tick,0x7ffdf681f424,3247259,0,0x0,8
tick,0x7ffdf681f424,3249297,0,0x0,8
tick,0x7ffdf681f424,3251288,0,0x0,8
tick,0x7ffdf681f424,3253266,0,0x0,8
tick,0x7ffdf681f424,3255246,0,0x0,8
tick,0x7ffdf681f424,3257240,0,0x0,8
tick,0x7ffdf681f424,3259235,0,0x0,8
tick,0x7ffdf681f424,3261232,0,0x0,8
tick,0x7ffdf681f424,3263234,0,0x0,8
tick,0x7ffdf681f424,3265261,0,0x0,8
tick,0x7ffdf681f424,3267233,0,0x0,8
tick,0x7ffdf681f424,3269175,0,0x0,8
tick,0x7ffdf681f424,3271202,0,0x0,8
tick,0x7ffdf681f424,3273220,0,0x0,8
tick,0x7ffdf681f424,3275245,0,0x0,8
tick,0x7ffdf681f424,3277283,0,0x0,8
tick,0x7ffdf681f424,3279233,0,0x0,8
tick,0x7ffdf681f424,3281207,0,0x0,8
tick,0x7ffdf681f424,3283183,0,0x0,8
tick,0x7ffdf681f424,3285226,0,0x0,8
tick,0x7ffdf681f424,3287224,0,0x0,8
tick,0x7ffdf681f424,3289168,0,0x0,8
tick,0x7ffdf681f424,3291283,0,0x0,8
tick,0x7ffdf681f424,3293278,0,0x0,8
tick,0x7ffdf681f424,3295252,0,0x0,8
tick,0x7ffdf681f424,3297157,0,0x0,8
tick,0x7ffdf681f424,3299180,0,0x0,8
tick,0x7ffdf681f424,3301137,0,0x0,8
tick,0x7ffdf681f424,3303240,0,0x0,8
tick,0x7ffdf681f424,3305130,0,0x0,8
tick,0x7ffdf681f424,3307115,0,0x0,8
tick,0x7ffdf681f424,3309120,0,0x0,8
tick,0x7ffdf681f424,3311117,0,0x0,8
tick,0x7ffdf681f424,3313108,0,0x0,8
tick,0x7ffdf681f424,3315078,0,0x0,8
tick,0x7ffdf681f424,3317109,0,0x0,8
tick,0x7ffdf681f424,3319099,0,0x0,8
tick,0x7ffdf681f424,3321090,0,0x0,8
tick,0x7ffdf681f424,3323130,0,0x0,8
tick,0x7ffdf681f424,3325054,0,0x0,8
tick,0x7ffdf681f424,3327077,0,0x0,8
tick,0x7ffdf681f424,3329069,0,0x0,8
tick,0x7ffdf681f424,3331052,0,0x0,8
tick,0x7ffdf681f424,3333076,0,0x0,8
tick,0x7ffdf681f424,3335081,0,0x0,8
tick,0x7ffdf681f424,3337079,0,0x0,8
tick,0x7ffdf681f424,3339029,0,0x0,8
tick,0x7ffdf681f424,3341044,0,0x0,8
tick,0x7ffdf681f424,3343004,0,0x0,8
tick,0x7ffdf681f424,3345000,0,0x0,8
tick,0x7ffdf681f424,3346993,0,0x0,8
tick,0x7ffdf681f424,3349015,0,0x0,8
tick,0x7ffdf681f424,3350985,0,0x0,8
tick,0x7ffdf681f424,3353080,0,0x0,8
tick,0x7ffdf681f424,3355037,0,0x0,8
tick,0x7ffdf681f424,3356989,0,0x0,8
tick,0x7ffdf681f424,3358983,0,0x0,8
tick,0x7ffdf681f424,3360979,0,0x0,8
tick,0x7ffdf681f424,3362973,0,0x0,8
tick,0x7ffdf681f424,3364994,0,0x0,8
tick,0x7ffdf681f424,3366967,0,0x0,8
tick,0x7ffdf681f424,3368930,0,0x0,8
tick,0x7ffdf681f424,3371000,0,0x0,8
tick,0x7ffdf681f424,3372935,0,0x0,8
tick,0x7ffdf681f424,3374948,0,0x0,8
tick,0x7ffdf681f424,3376942,0,0x0,8
tick,0x7ffdf681f424,3378957,0,0x0,8
tick,0x7ffdf681f424,3380977,0,0x0,8
tick,0x7ffdf681f424,3382938,0,0x0,8
tick,0x7ffdf681f424,3384926,0,0x0,8
tick,0x7ffdf681f424,3386889,0,0x0,8
tick,0x7ffdf681f424,3388927,0,0x0,8
tick,0x7ffdf681f424,3390861,0,0x0,8
tick,0x7ffdf681f424,3392914,0,0x0,8
tick,0x7ffdf681f424,3394844,0,0x0,8
tick,0x7ffdf681f424,3396836,0,0x0,8
tick,0x7ffdf681f424,3398836,0,0x0,8
tick,0x7ffdf681f424,3400819,0,0x0,8
tick,0x7ffdf681f424,3402841,0,0x0,8
tick,0x7ffdf681f424,3403912,0,0x0,8
tick,0x7ffdf681f424,3405944,0,0x0,8
tick,0x7ffdf681f424,3407849,0,0x0,8
tick,0x7ffdf681f424,3409900,0,0x0,8
tick,0x7ffdf681f424,3411869,0,0x0,8
tick,0x7ffdf681f424,3413830,0,0x0,8
tick,0x7ffdf681f424,3415880,0,0x0,8
tick,0x7ffdf681f424,3417902,0,0x0,8
tick,0x7ffdf681f424,3419895,0,0x0,8
tick,0x7ffdf681f424,3421864,0,0x0,8
tick,0x7ffdf681f424,3423867,0,0x0,8
tick,0x7ffdf681f424,3425872,0,0x0,8
tick,0x7ffdf681f424,3427854,0,0x0,8
tick,0x7ffdf681f424,3429899,0,0x0,8
tick,0x7ffdf681f424,3431858,0,0x0,8
tick,0x7ffdf681f424,3433903,0,0x0,8
tick,0x7ffdf681f424,3435909,0,0x0,8
tick,0x7ffdf681f424,3437904,0,0x0,8
tick,0x7ffdf681f424,3439878,0,0x0,8
tick,0x7ffdf681f424,3441894,0,0x0,8
tick,0x7ffdf681f424,3443849,0,0x0,8
tick,0x7ffdf681f424,3445829,0,0x0,8
tick,0x7ffdf681f424,3447730,0,0x0,8
tick,0x7ffdf681f424,3448874,0,0x0,8
tick,0x7ffdf681f424,3450868,0,0x0,8
tick,0x7ffdf681f424,3452878,0,0x0,8
tick,0x7ffdf681f424,3454864,0,0x0,8
tick,0x7ffdf681f424,3456839,0,0x0,8
tick,0x7ffdf681f424,3458746,0,0x0,8
tick,0x7ffdf681f424,3460856,0,0x0,8
tick,0x7ffdf681f424,3462855,0,0x0,8
tick,0x7ffdf681f424,3464853,0,0x0,8
tick,0x7ffdf681f424,3466815,0,0x0,8
tick,0x7ffdf681f424,3468799,0,0x0,8
tick,0x7ffdf681f424,3470856,0,0x0,8
tick,0x7ffdf681f424,3472719,0,0x0,8
tick,0x7ffdf681f424,3474801,0,0x0,8
tick,0x7ffdf681f424,3476808,0,0x0,8
tick,0x7ffdf681f424,3478859,0,0x0,8
tick,0x7ffdf681f424,3480711,0,0x0,8
tick,0x7ffdf681f424,3482803,0,0x0,8
tick,0x7ffdf681f424,3484823,0,0x0,8
tick,0x7ffdf681f424,3486830,0,0x0,8
tick,0x7ffdf681f424,3488775,0,0x0,8
tick,0x7ffdf681f424,3490849,0,0x0,8
tick,0x7ffdf681f424,3492825,0,0x0,8
tick,0x7ffdf681f424,3494885,0,0x0,8
tick,0x7ffdf681f424,3496784,0,0x0,8
tick,0x7ffdf681f424,3498820,0,0x0,8
tick,0x7ffdf681f424,3500677,0,0x0,8
tick,0x7ffdf681f424,3502782,0,0x0,8
tick,0x7ffdf681f424,3504807,0,0x0,8
tick,0x7ffdf681f424,3506775,0,0x0,8
tick,0x7ffdf681f424,3508791,0,0x0,8
tick,0x7ffdf681f424,3510793,0,0x0,8
tick,0x7ffdf681f424,3512936,0,0x0,8
tick,0x7ffdf681f424,3514904,0,0x0,8
tick,0x7ffdf681f424,3516878,0,0x0,8
tick,0x7ffdf681f424,3518905,0,0x0,8
tick,0x7ffdf681f424,3521018,0,0x0,8
tick,0x7ffdf681f424,3523035,0,0x0,8
tick,0x7ffdf681f424,3524147,0,0x0,8
tick,0x7ffdf681f424,3526150,0,0x0,8
tick,0x7ffdf681f424,3528155,0,0x0,8
tick,0x7ffdf681f424,3530223,0,0x0,8
tick,0x7ffdf681f424,3532324,0,0x0,8
tick,0x7ffdf681f424,3534326,0,0x0,8
tick,0x7ffdf681f424,3536346,0,0x0,8
tick,0x7ffdf681f424,3538264,0,0x0,8
tick,0x7ffdf681f424,3540279,0,0x0,8
tick,0x7ffdf681f424,3541435,0,0x0,8
tick,0x7ffdf681f424,3543444,0,0x0,8
tick,0x7ffdf681f424,3544620,0,0x0,8
tick,0x7ffdf681f424,3545748,0,0x0,8
tick,0x7ffdf681f424,3547762,0,0x0,8
tick,0x7ffdf681f424,3549703,0,0x0,8
tick,0x7ffdf681f424,3551754,0,0x0,8
tick,0x7ffdf681f424,3552930,0,0x0,8
tick,0x7ffdf681f424,3554941,0,0x0,8
tick,0x7ffdf681f424,3556055,0,0x0,8
tick,0x7ffdf681f424,3558056,0,0x0,8
tick,0x7ffdf681f424,3560010,0,0x0,8
tick,0x7ffdf681f424,3562031,0,0x0,8
tick,0x7ffdf681f424,3564010,0,0x0,8
tick,0x7ffdf681f424,3566031,0,0x0,8
tick,0x7ffdf681f424,3568141,0,0x0,8
tick,0x7ffdf681f424,3570118,0,0x0,8
tick,0x7ffdf681f424,3571999,0,0x0,8
tick,0x7ffdf681f424,3574122,0,0x0,8
tick,0x7ffdf681f424,3576096,0,0x0,8
tick,0x7ffdf681f424,3578111,0,0x0,8
tick,0x7ffdf681f424,3580194,0,0x0,8
tick,0x7ffdf681f424,3582132,0,0x0,8
tick,0x7ffdf681f424,3584283,0,0x0,8
tick,0x7ffdf681f424,3586321,0,0x0,8
tick,0x7ffdf681f424,3588270,0,0x0,8
tick,0x7ffdf681f424,3590275,0,0x0,8
tick,0x7ffdf681f424,3592254,0,0x0,8
tick,0x7ffdf681f424,3594267,0,0x0,8
tick,0x7ffdf681f424,3596260,0,0x0,8
tick,0x7ffdf681f424,3598266,0,0x0,8
tick,0x7ffdf681f424,3600239,0,0x0,8
tick,0x7ffdf681f424,3602233,0,0x0,8
tick,0x7ffdf681f424,3604236,0,0x0,8
tick,0x7ffdf681f424,3606230,0,0x0,8
tick,0x7ffdf681f424,3608228,0,0x0,8
tick,0x7ffdf681f424,3610215,0,0x0,8
tick,0x7ffdf681f424,3612102,0,0x0,8
tick,0x7ffdf681f424,3614203,0,0x0,8
tick,0x7ffdf681f424,3616169,0,0x0,8
tick,0x7ffdf681f424,3618195,0,0x0,8
tick,0x7ffdf681f424,3620193,0,0x0,8
tick,0x7ffdf681f424,3622180,0,0x0,8
tick,0x7ffdf681f424,3624205,0,0x0,8
tick,0x7ffdf681f424,3626215,0,0x0,8
tick,0x7ffdf681f424,3628163,0,0x0,8
tick,0x7ffdf681f424,3630167,0,0x0,8
tick,0x7ffdf681f424,3632163,0,0x0,8
tick,0x7ffdf681f424,3634155,0,0x0,8
tick,0x7ffdf681f424,3636144,0,0x0,8
tick,0x7ffdf681f424,3638142,0,0x0,8
tick,0x7ffdf681f424,3640144,0,0x0,8
tick,0x7ffdf681f424,3642147,0,0x0,8
tick,0x7ffdf681f424,3644126,0,0x0,8
tick,0x7ffdf681f424,3646019,0,0x0,8
tick,0x7ffdf681f424,3648150,0,0x0,8
tick,0x7ffdf681f424,3650062,0,0x0,8
tick,0x7ffdf681f424,3652121,0,0x0,8
tick,0x7ffdf681f424,3654095,0,0x0,8
tick,0x7ffdf681f424,3656108,0,0x0,8
tick,0x7ffdf681f424,3658089,0,0x0,8
tick,0x7ffdf681f424,3660081,0,0x0,8
tick,0x7ffdf681f424,3661976,0,0x0,8
tick,0x7ffdf681f424,3664058,0,0x0,8
tick,0x7ffdf681f424,3666068,0,0x0,8
tick,0x7ffdf681f424,3668060,0,0x0,8
tick,0x7ffdf681f424,3670073,0,0x0,8
tick,0x7ffdf681f424,3671980,0,0x0,8
tick,0x7ffdf681f424,3674054,0,0x0,8
tick,0x7ffdf681f424,3676036,0,0x0,8
tick,0x7ffdf681f424,3678061,0,0x0,8
tick,0x7ffdf681f424,3680031,0,0x0,8
tick,0x7ffdf681f424,3682030,0,0x0,8
tick,0x7ffdf681f424,3684023,0,0x0,8
tick,0x7ffdf681f424,3686010,0,0x0,8
tick,0x7ffdf681f424,3687913,0,0x0,8
tick,0x7ffdf681f424,3689966,0,0x0,8
tick,0x7ffdf681f424,3692030,0,0x0,8
tick,0x7ffdf681f424,3693886,0,0x0,8
tick,0x7ffdf681f424,3695990,0,0x0,8
tick,0x7ffdf681f424,3698007,0,0x0,8
tick,0x7ffdf681f424,3699979,0,0x0,8
tick,0x7ffdf681f424,3701980,0,0x0,8
tick,0x7ffdf681f424,3703969,0,0x0,8
tick,0x7ffdf681f424,3705970,0,0x0,8
tick,0x7ffdf681f424,3707959,0,0x0,8
tick,0x7ffdf681f424,3709956,0,0x0,8
tick,0x7ffdf681f424,3711947,0,0x0,8
tick,0x7ffdf681f424,3713864,0,0x0,8
tick,0x7ffdf681f424,3715932,0,0x0,8
tick,0x7ffdf681f424,3717911,0,0x0,8
tick,0x7ffdf681f424,3719923,0,0x0,8
tick,0x7ffdf681f424,3721933,0,0x0,8
tick,0x7ffdf681f424,3723804,0,0x0,8
tick,0x7ffdf681f424,3725903,0,0x0,8
tick,0x7ffdf681f424,3727913,0,0x0,8
tick,0x7ffdf681f424,3729907,0,0x0,8
tick,0x7ffdf681f424,3731908,0,0x0,8
tick,0x7ffdf681f424,3733887,0,0x0,8
tick,0x7ffdf681f424,3735925,0,0x0,8
tick,0x7ffdf681f424,3737878,0,0x0,8
tick,0x7ffdf681f424,3739881,0,0x0,8
tick,0x7ffdf681f424,3741862,0,0x0,8
tick,0x7ffdf681f424,3743807,0,0x0,8
tick,0x7ffdf681f424,3745862,0,0x0,8
tick,0x7ffdf681f424,3747852,0,0x0,8
tick,0x7ffdf681f424,3749736,0,0x0,8
tick,0x7ffdf681f424,3751838,0,0x0,8
tick,0x7ffdf681f424,3753850,0,0x0,8
tick,0x7ffdf681f424,3755835,0,0x0,8
tick,0x7ffdf681f424,3757861,0,0x0,8
tick,0x7ffdf681f424,3759820,0,0x0,8
tick,0x7ffdf681f424,3761820,0,0x0,8
tick,0x7ffdf681f424,3763811,0,0x0,8
tick,0x7ffdf681f424,3765770,0,0x0,8
tick,0x7ffdf681f424,3767798,0,0x0,8
tick,0x7ffdf681f424,3769792,0,0x0,8
tick,0x7ffdf681f424,3771797,0,0x0,8
tick,0x7ffdf681f424,3773796,0,0x0,8
tick,0x7ffdf681f424,3775794,0,0x0,8
tick,0x7ffdf681f424,3777775,0,0x0,8
tick,0x7ffdf681f424,3779717,0,0x0,8
tick,0x7ffdf681f424,3781761,0,0x0,8
tick,0x7ffdf681f424,3783762,0,0x0,8
tick,0x7ffdf681f424,3785770,0,0x0,8
tick,0x7ffdf681f424,3787744,0,0x0,8
tick,0x7ffdf681f424,3789740,0,0x0,8
tick,0x7ffdf681f424,3791736,0,0x0,8
tick,0x7ffdf681f424,3793736,0,0x0,8
tick,0x7ffdf681f424,3795723,0,0x0,8
tick,0x7ffdf681f424,3797739,0,0x0,8
tick,0x7ffdf681f424,3799668,0,0x0,8
tick,0x7ffdf681f424,3801753,0,0x0,8
tick,0x7ffdf681f424,3803705,0,0x0,8
tick,0x7ffdf681f424,3805689,0,0x0,8
tick,0x7ffdf681f424,3807578,0,0x0,8
tick,0x7ffdf681f424,3809581,0,0x0,8
tick,0x7ffdf681f424,3811720,0,0x0,8
tick,0x7ffdf681f424,3813611,0,0x0,8
tick,0x7ffdf681f424,3815645,0,0x0,8
tick,0x7ffdf681f424,3817660,0,0x0,8
tick,0x7ffdf681f424,3819673,0,0x0,8
tick,0x7ffdf681f424,3821657,0,0x0,8
tick,0x7ffdf681f424,3823658,0,0x0,8
tick,0x7ffdf681f424,3825646,0,0x0,8
tick,0x7ffdf681f424,3827665,0,0x0,8
tick,0x7ffdf681f424,3829639,0,0x0,8
tick,0x7ffdf681f424,3831639,0,0x0,8
tick,0x7ffdf681f424,3833618,0,0x0,8
tick,0x7ffdf681f424,3835617,0,0x0,8
tick,0x7ffdf681f424,3837583,0,0x0,8
tick,0x7ffdf681f424,3839604,0,0x0,8
tick,0x7ffdf681f424,3841613,0,0x0,8
tick,0x7ffdf681f424,3843619,0,0x0,8
tick,0x7ffdf681f424,3845630,0,0x0,8
tick,0x7ffdf681f424,3847589,0,0x0,8
tick,0x7ffdf681f424,3849597,0,0x0,8
tick,0x7ffdf681f424,3851569,0,0x0,8
tick,0x7ffdf681f424,3853576,0,0x0,8
tick,0x7ffdf681f424,3855456,0,0x0,8
tick,0x7ffdf681f424,3857479,0,0x0,8
tick,0x7ffdf681f424,3859560,0,0x0,8
tick,0x7ffdf681f424,3861586,0,0x0,8
tick,0x7ffdf681f424,3863561,0,0x0,8
tick,0x7ffdf681f424,3865566,0,0x0,8
tick,0x7ffdf681f424,3867577,0,0x0,8
tick,0x7ffdf681f424,3869525,0,0x0,8
tick,0x7ffdf681f424,3871542,0,0x0,8
tick,0x7ffdf681f424,3873527,0,0x0,8
tick,0x7ffdf681f424,3875535,0,0x0,8
tick,0x7ffdf681f424,3877508,0,0x0,8
tick,0x7ffdf681f424,3879505,0,0x0,8
tick,0x7ffdf681f424,3881505,0,0x0,8
tick,0x7ffdf681f424,3883488,0,0x0,8
tick,0x7ffdf681f424,3885486,0,0x0,8
tick,0x7ffdf681f424,3887480,0,0x0,8
tick,0x7ffdf681f424,3889509,0,0x0,8
tick,0x7ffdf681f424,3891473,0,0x0,8
tick,0x7ffdf681f424,3893478,0,0x0,8
tick,0x7ffdf681f424,3895467,0,0x0,8
tick,0x7ffdf681f424,3897456,0,0x0,8
tick,0x7ffdf681f424,3899410,0,0x0,8
tick,0x7ffdf681f424,3901440,0,0x0,8
tick,0x7ffdf681f424,3903367,0,0x0,8
tick,0x7ffdf681f424,3905425,0,0x0,8
tick,0x7ffdf681f424,3907429,0,0x0,8
tick,0x7ffdf681f424,3909426,0,0x0,8
tick,0x7ffdf681f424,3911269,0,0x0,8
tick,0x7ffdf681f424,3913409,0,0x0,8
tick,0x7ffdf681f424,3915299,0,0x0,8
tick,0x7ffdf681f424,3917391,0,0x0,8
tick,0x7ffdf681f424,3919401,0,0x0,8
tick,0x7ffdf681f424,3921394,0,0x0,8
tick,0x7ffdf681f424,3923385,0,0x0,8
tick,0x7ffdf681f424,3925388,0,0x0,8
tick,0x7ffdf681f424,3927373,0,0x0,8
tick,0x7ffdf681f424,3929378,0,0x0,8
tick,0x7ffdf681f424,3931362,0,0x0,8
tick,0x7ffdf681f424,3933393,0,0x0,8
tick,0x7ffdf681f424,3935347,0,0x0,8
tick,0x7ffdf681f424,3937230,0,0x0,8
tick,0x7ffdf681f424,3939329,0,0x0,8
tick,0x7ffdf681f424,3941336,0,0x0,8
tick,0x7ffdf681f424,3943355,0,0x0,8
tick,0x7ffdf681f424,3945318,0,0x0,8
tick,0x7ffdf681f424,3947324,0,0x0,8
tick,0x7ffdf681f424,3949305,0,0x0,8
tick,0x7ffdf681f424,3951316,0,0x0,8
tick,0x7ffdf681f424,3953302,0,0x0,8
tick,0x7ffdf681f424,3955362,0,0x0,8
tick,0x7ffdf681f424,3957295,0,0x0,8
tick,0x7ffdf681f424,3959310,0,0x0,8
tick,0x7ffdf681f424,3961279,0,0x0,8
tick,0x7ffdf681f424,3963283,0,0x0,8
tick,0x7ffdf681f424,3965266,0,0x0,8
tick,0x7ffdf681f424,3967222,0,0x0,8
tick,0x7ffdf681f424,3969248,0,0x0,8
tick,0x7ffdf681f424,3971259,0,0x0,8
tick,0x7ffdf681f424,3973153,0,0x0,8
tick,0x7ffdf681f424,3975237,0,0x0,8
tick,0x7ffdf681f424,3977271,0,0x0,8
tick,0x7ffdf681f424,3979245,0,0x0,8
tick,0x7ffdf681f424,3981250,0,0x0,8
tick,0x7ffdf681f424,3983224,0,0x0,8
tick,0x7ffdf681f424,3985225,0,0x0,8
tick,0x7ffdf681f424,3987215,0,0x0,8
tick,0x7ffdf681f424,3989166,0,0x0,8
tick,0x7ffdf681f424,3991170,0,0x0,8
tick,0x7ffdf681f424,3993198,0,0x0,8
tick,0x7ffdf681f424,3995205,0,0x0,8
tick,0x7ffdf681f424,3997212,0,0x0,8
tick,0x7ffdf681f424,3999069,0,0x0,8
tick,0x7ffdf681f424,4001169,0,0x0,8
tick,0x7ffdf681f424,4003189,0,0x0,8
tick,0x7ffdf681f424,4005083,0,0x0,8
tick,0x7ffdf681f424,4007166,0,0x0,8
tick,0x7ffdf681f424,4009150,0,0x0,8
tick,0x7ffdf681f424,4011153,0,0x0,8
tick,0x7ffdf681f424,4013098,0,0x0,8
tick,0x7ffdf681f424,4015158,0,0x0,8
tick,0x7ffdf681f424,4017051,0,0x0,8
tick,0x7ffdf681f424,4019047,0,0x0,8
tick,0x7ffdf681f424,4021050,0,0x0,8
tick,0x7ffdf681f424,4023039,0,0x0,8
tick,0x7ffdf681f424,4025063,0,0x0,8
tick,0x7ffdf681f424,4027045,0,0x0,8
tick,0x7ffdf681f424,4029028,0,0x0,8
tick,0x7ffdf681f424,4030991,0,0x0,8
tick,0x7ffdf681f424,4032976,0,0x0,8
tick,0x7ffdf681f424,4035002,0,0x0,8
tick,0x7ffdf681f424,4036995,0,0x0,8
tick,0x7ffdf681f424,4038923,0,0x0,8
tick,0x7ffdf681f424,4041021,0,0x0,8
tick,0x7ffdf681f424,4043134,0,0x0,8
tick,0x7ffdf681f424,4045105,0,0x0,8
tick,0x7ffdf681f424,4047108,0,0x0,8
tick,0x7ffdf681f424,4049104,0,0x0,8
tick,0x7ffdf681f424,4051099,0,0x0,8
tick,0x7ffdf681f424,4052312,0,0x0,8
tick,0x7ffdf681f424,4054273,0,0x0,8
tick,0x7ffdf681f424,4056207,0,0x0,8
tick,0x7ffdf681f424,4057448,0,0x0,8
tick,0x7ffdf681f424,4058606,0,0x0,8
tick,0x7ffdf681f424,4060661,0,0x0,8
tick,0x7ffdf681f424,4062729,0,0x0,8
tick,0x7ffdf681f424,4064634,0,0x0,8
tick,0x7ffdf681f424,4066795,0,0x0,8
tick,0x7ffdf681f424,4067983,0,0x0,8
tick,0x7ffdf681f424,4069185,0,0x0,8
tick,0x7ffdf681f424,4071206,0,0x0,8
tick,0x7ffdf681f424,4073047,0,0x0,8
tick,0x7ffdf681f424,4074179,0,0x0,8
tick,0x7ffdf681f424,4076363,0,0x0,8
tick,0x7ffdf681f424,4078342,0,0x0,8
tick,0x7ffdf681f424,4080392,0,0x0,8
tick,0x7ffdf681f424,4082557,0,0x0,8
tick,0x7ffdf681f424,4083717,0,0x0,8
tick,0x7ffdf681f424,4085731,0,0x0,8
tick,0x7ffdf681f424,4087733,0,0x0,8
tick,0x7ffdf681f424,4089753,0,0x0,8
tick,0x7ffdf681f424,4091815,0,0x0,8
tick,0x7ffdf681f424,4093921,0,0x0,8
tick,0x7ffdf681f424,4095912,0,0x0,8
tick,0x7ffdf681f424,4097902,0,0x0,8
tick,0x7ffdf681f424,4099975,0,0x0,8
tick,0x7ffdf681f424,4101972,0,0x0,8
tick,0x7ffdf681f424,4103950,0,0x0,8
tick,0x7ffdf681f424,4105951,0,0x0,8
tick,0x7ffdf681f424,4108033,0,0x0,8
tick,0x7ffdf681f424,4109972,0,0x0,8
tick,0x7ffdf681f424,4112017,0,0x0,8
tick,0x7ffdf681f424,4113944,0,0x0,8
tick,0x7ffdf681f424,4115919,0,0x0,8
tick,0x7ffdf681f424,4117969,0,0x0,8
tick,0x7ffdf681f424,4119973,0,0x0,8
tick,0x7ffdf681f424,4122024,0,0x0,8
tick,0x7ffdf681f424,4123954,0,0x0,8
tick,0x7ffdf681f424,4125930,0,0x0,8
tick,0x7ffdf681f424,4127989,0,0x0,8
tick,0x7ffdf681f424,4129957,0,0x0,8
tick,0x7ffdf681f424,4131897,0,0x0,8
tick,0x7ffdf681f424,4133960,0,0x0,8
tick,0x7ffdf681f424,4135921,0,0x0,8
tick,0x7ffdf681f424,4137856,0,0x0,8
tick,0x7ffdf681f424,4139920,0,0x0,8
tick,0x7ffdf681f424,4141871,0,0x0,8
tick,0x7ffdf681f424,4143874,0,0x0,8
tick,0x7ffdf681f424,4145868,0,0x0,8
tick,0x7ffdf681f424,4147799,0,0x0,8
tick,0x7ffdf681f424,4149809,0,0x0,8
tick,0x7ffdf681f424,4151763,0,0x0,8
tick,0x7ffdf681f424,4153799,0,0x0,8
tick,0x7ffdf681f424,4155695,0,0x0,8
tick,0x7ffdf681f424,4157853,0,0x0,8
tick,0x7ffdf681f424,4159875,0,0x0,8
tick,0x7ffdf681f424,4161913,0,0x0,8
tick,0x7ffdf681f424,4163993,0,0x0,8
tick,0x7ffdf681f424,4165957,0,0x0,8
tick,0x7ffdf681f424,4167972,0,0x0,8
tick,0x7ffdf681f424,4169941,0,0x0,8
tick,0x7ffdf681f424,4171908,0,0x0,8
tick,0x7ffdf681f424,4173915,0,0x0,8
tick,0x7ffdf681f424,4175920,0,0x0,8
tick,0x7ffdf681f424,4177900,0,0x0,8
tick,0x7ffdf681f424,4179941,0,0x0,8
tick,0x7ffdf681f424,4181896,0,0x0,8
tick,0x7ffdf681f424,4183833,0,0x0,8
tick,0x7ffdf681f424,4185930,0,0x0,8
tick,0x7ffdf681f424,4187920,0,0x0,8
tick,0x7ffdf681f424,4189887,0,0x0,8
tick,0x7ffdf681f424,4191858,0,0x0,8
tick,0x7ffdf681f424,4193886,0,0x0,8
tick,0x7ffdf681f424,4195922,0,0x0,8
tick,0x7ffdf681f424,4197853,0,0x0,8
tick,0x7ffdf681f424,4199911,0,0x0,8
tick,0x7ffdf681f424,4201853,0,0x0,8
tick,0x7ffdf681f424,4203903,0,0x0,8
tick,0x7ffdf681f424,4205864,0,0x0,8
tick,0x7ffdf681f424,4207855,0,0x0,8
tick,0x7ffdf681f424,4209906,0,0x0,8
tick,0x7ffdf681f424,4211866,0,0x0,8
tick,0x7ffdf681f424,4213897,0,0x0,8
tick,0x7ffdf681f424,4215905,0,0x0,8
tick,0x7ffdf681f424,4217861,0,0x0,8
tick,0x7ffdf681f424,4219876,0,0x0,8
tick,0x7ffdf681f424,4221920,0,0x0,8
tick,0x7ffdf681f424,4223915,0,0x0,8
tick,0x7ffdf681f424,4225862,0,0x0,8
tick,0x7ffdf681f424,4227934,0,0x0,8
tick,0x7ffdf681f424,4229847,0,0x0,8
tick,0x7ffdf681f424,4231873,0,0x0,8
tick,0x7ffdf681f424,4233843,0,0x0,8
tick,0x7ffdf681f424,4235868,0,0x0,8
tick,0x7ffdf681f424,4237854,0,0x0,8
tick,0x7ffdf681f424,4239856,0,0x0,8
tick,0x7ffdf681f424,4241926,0,0x0,8
tick,0x7ffdf681f424,4243920,0,0x0,8
tick,0x7ffdf681f424,4245917,0,0x0,8
tick,0x7ffdf681f424,4247897,0,0x0,8
tick,0x7ffdf681f424,4249917,0,0x0,8
tick,0x7ffdf681f424,4251933,0,0x0,8
tick,0x7ffdf681f424,4253836,0,0x0,8
tick,0x7ffdf681f424,4255816,0,0x0,8
tick,0x7ffdf681f424,4257911,0,0x0,8
tick,0x7ffdf681f424,4259845,0,0x0,8
tick,0x7ffdf681f424,4261873,0,0x0,8
tick,0x7ffdf681f424,4263789,0,0x0,8
tick,0x7ffdf681f424,4265924,0,0x0,8
tick,0x7ffdf681f424,4267864,0,0x0,8
tick,0x7ffdf681f424,4269842,0,0x0,8
tick,0x7ffdf681f424,4271811,0,0x0,8
tick,0x7ffdf681f424,4273822,0,0x0,8
tick,0x7ffdf681f424,4275832,0,0x0,8
tick,0x7ffdf681f424,4277902,0,0x0,8
tick,0x7ffdf681f424,4279820,0,0x0,8
tick,0x7ffdf681f424,4281800,0,0x0,8
tick,0x7ffdf681f424,4283817,0,0x0,8
tick,0x7ffdf681f424,4285842,0,0x0,8
tick,0x7ffdf681f424,4287831,0,0x0,8
tick,0x7ffdf681f424,4289841,0,0x0,8
tick,0x7ffdf681f424,4291852,0,0x0,8
tick,0x7ffdf681f424,4293844,0,0x0,8
tick,0x7ffdf681f424,4295912,0,0x0,8
tick,0x7ffdf681f424,4297892,0,0x0,8
tick,0x7ffdf681f424,4299856,0,0x0,8
tick,0x7ffdf681f424,4301923,0,0x0,8
tick,0x7ffdf681f424,4303817,0,0x0,8
tick,0x7ffdf681f424,4305756,0,0x0,8
tick,0x7ffdf681f424,4307795,0,0x0,8
tick,0x7ffdf681f424,4309872,0,0x0,8
tick,0x7ffdf681f424,4311891,0,0x0,8
tick,0x7ffdf681f424,4313677,0,0x0,8
tick,0x7ffdf681f424,4315896,0,0x0,8
tick,0x7ffdf681f424,4317849,0,0x0,8
tick,0x7ffdf681f424,4319842,0,0x0,8
tick,0x7ffdf681f424,4321931,0,0x0,8
tick,0x7ffdf681f424,4323944,0,0x0,8
tick,0x7ffdf681f424,4326019,0,0x0,8
tick,0x7ffdf681f424,4327971,0,0x0,8
tick,0x7ffdf681f424,4329974,0,0x0,8
tick,0x7ffdf681f424,4331907,0,0x0,8
tick,0x7ffdf681f424,4333905,0,0x0,8
tick,0x7ffdf681f424,4335869,0,0x0,8
tick,0x7ffdf681f424,4337938,0,0x0,8
tick,0x7ffdf681f424,4339989,0,0x0,8
tick,0x7ffdf681f424,4342051,0,0x0,8
tick,0x7ffdf681f424,4344046,0,0x0,8
tick,0x7ffdf681f424,4346170,0,0x0,8
tick,0x7ffdf681f424,4348180,0,0x0,8
tick,0x7ffdf681f424,4349379,0,0x0,8
tick,0x7ffdf681f424,4351248,0,0x0,8
tick,0x7ffdf681f424,4353284,0,0x0,8
tick,0x7ffdf681f424,4355295,0,0x0,8
tick,0x7ffdf681f424,4357297,0,0x0,8
tick,0x7ffdf681f424,4359276,0,0x0,8
tick,0x7ffdf681f424,4361310,0,0x0,8
tick,0x7ffdf681f424,4363266,0,0x0,8
tick,0x7ffdf681f424,4365282,0,0x0,8
tick,0x7ffdf681f424,4367275,0,0x0,8
tick,0x7ffdf681f424,4369242,0,0x0,8
tick,0x7ffdf681f424,4371267,0,0x0,8
tick,0x7ffdf681f424,4373200,0,0x0,8
tick,0x7ffdf681f424,4375171,0,0x0,8
tick,0x7ffdf681f424,4377193,0,0x0,8
tick,0x7ffdf681f424,4379096,0,0x0,8
tick,0x7ffdf681f424,4381242,0,0x0,8
tick,0x7ffdf681f424,4383109,0,0x0,8
tick,0x7ffdf681f424,4385127,0,0x0,8
tick,0x7ffdf681f424,4387232,0,0x0,8
tick,0x7ffdf681f424,4389142,0,0x0,8
tick,0x7ffdf681f424,4391236,0,0x0,8
tick,0x7ffdf681f424,4393110,0,0x0,8
tick,0x7ffdf681f424,4395101,0,0x0,8
tick,0x7ffdf681f424,4397104,0,0x0,8
tick,0x7ffdf681f424,4399095,0,0x0,8
tick,0x7ffdf681f424,4401191,0,0x0,8
tick,0x7ffdf681f424,4403193,0,0x0,8
tick,0x7ffdf681f424,4405121,0,0x0,8
tick,0x7ffdf681f424,4407168,0,0x0,8
tick,0x7ffdf681f424,4409173,0,0x0,8
tick,0x7ffdf681f424,4411164,0,0x0,8
tick,0x7ffdf681f424,4413164,0,0x0,8
tick,0x7ffdf681f424,4415044,0,0x0,8
tick,0x7ffdf681f424,4417149,0,0x0,8
tick,0x7ffdf681f424,4419143,0,0x0,8
tick,0x7ffdf681f424,4421137,0,0x0,8
tick,0x7ffdf681f424,4423129,0,0x0,8
tick,0x7ffdf681f424,4425127,0,0x0,8
tick,0x7ffdf681f424,4427155,0,0x0,8
tick,0x7ffdf681f424,4429125,0,0x0,8
tick,0x7ffdf681f424,4431116,0,0x0,8
tick,0x7ffdf681f424,4433106,0,0x0,8
tick,0x7ffdf681f424,4435108,0,0x0,8
tick,0x7ffdf681f424,4437095,0,0x0,8
tick,0x7ffdf681f424,4438997,0,0x0,8
tick,0x7ffdf681f424,4441017,0,0x0,8
tick,0x7ffdf681f424,4443080,0,0x0,8
tick,0x7ffdf681f424,4445093,0,0x0,8
tick,0x7ffdf681f424,4447078,0,0x0,8
tick,0x7ffdf681f424,4449095,0,0x0,8
tick,0x7ffdf681f424,4450971,0,0x0,8
tick,0x7ffdf681f424,4453062,0,0x0,8
tick,0x7ffdf681f424,4455050,0,0x0,8
tick,0x7ffdf681f424,4456951,0,0x0,8
tick,0x7ffdf681f424,4459033,0,0x0,8
tick,0x7ffdf681f424,4461030,0,0x0,8
tick,0x7ffdf681f424,4463024,0,0x0,8
tick,0x7ffdf681f424,4465022,0,0x0,8
tick,0x7ffdf681f424,4466899,0,0x0,8
tick,0x7ffdf681f424,4469001,0,0x0,8
tick,0x7ffdf681f424,4471039,0,0x0,8
tick,0x7ffdf681f424,4473031,0,0x0,8
tick,0x7ffdf681f424,4474995,0,0x0,8
tick,0x7ffdf681f424,4476988,0,0x0,8
tick,0x7ffdf681f424,4478995,0,0x0,8
tick,0x7ffdf681f424,4480978,0,0x0,8
tick,0x7ffdf681f424,4482985,0,0x0,8
tick,0x7ffdf681f424,4484970,0,0x0,8
tick,0x7ffdf681f424,4486965,0,0x0,8
tick,0x7ffdf681f424,4488852,0,0x0,8
tick,0x7ffdf681f424,4490949,0,0x0,8
tick,0x7ffdf681f424,4492982,0,0x0,8
tick,0x7ffdf681f424,4494950,0,0x0,8
tick,0x7ffdf681f424,4496952,0,0x0,8
tick,0x7ffdf681f424,4498937,0,0x0,8
tick,0x7ffdf681f424,4500938,0,0x0,8
tick,0x7ffdf681f424,4502924,0,0x0,8
tick,0x7ffdf681f424,4504861,0,0x0,8
tick,0x7ffdf681f424,4506898,0,0x0,8
tick,0x7ffdf681f424,4508901,0,0x0,8
tick,0x7ffdf681f424,4510900,0,0x0,8
tick,0x7ffdf681f424,4512898,0,0x0,8
tick,0x7ffdf681f424,4514919,0,0x0,8
tick,0x7ffdf681f424,4516895,0,0x0,8
tick,0x7ffdf681f424,4518878,0,0x0,8
tick,0x7ffdf681f424,4520871,0,0x0,8
tick,0x7ffdf681f424,4522881,0,0x0,8
tick,0x7ffdf681f424,4524864,0,0x0,8
tick,0x7ffdf681f424,4526862,0,0x0,8
tick,0x7ffdf681f424,4528863,0,0x0,8
tick,0x7ffdf681f424,4530682,0,0x0,8
tick,0x7ffdf681f424,4532850,0,0x0,8
tick,0x7ffdf681f424,4534843,0,0x0,8
tick,0x7ffdf681f424,4536873,0,0x0,8
tick,0x7ffdf681f424,4538764,0,0x0,8
tick,0x7ffdf681f424,4540830,0,0x0,8
tick,0x7ffdf681f424,4542812,0,0x0,8
tick,0x7ffdf681f424,4544827,0,0x0,8
tick,0x7ffdf681f424,4546806,0,0x0,8
tick,0x7ffdf681f424,4548805,0,0x0,8
tick,0x7ffdf681f424,4550798,0,0x0,8
tick,0x7ffdf681f424,4552789,0,0x0,8
tick,0x7ffdf681f424,4554807,0,0x0,8
tick,0x7ffdf681f424,4556781,0,0x0,8
tick,0x7ffdf681f424,4558813,0,0x0,8
tick,0x7ffdf681f424,4560788,0,0x0,8
tick,0x7ffdf681f424,4562773,0,0x0,8
tick,0x7ffdf681f424,4564759,0,0x0,8
tick,0x7ffdf681f424,4566752,0,0x0,8
tick,0x7ffdf681f424,4568752,0,0x0,8
tick,0x7ffdf681f424,4570746,0,0x0,8
tick,0x7ffdf681f424,4572738,0,0x0,8
tick,0x7ffdf681f424,4574730,0,0x0,8
tick,0x7ffdf681f424,4576736,0,0x0,8
tick,0x7ffdf681f424,4578720,0,0x0,8
tick,0x7ffdf681f424,4580607,0,0x0,8
tick,0x7ffdf681f424,4582722,0,0x0,8
tick,0x7ffdf681f424,4584716,0,0x0,8
tick,0x7ffdf681f424,4586699,0,0x0,8
tick,0x7ffdf681f424,4588711,0,0x0,8
tick,0x7ffdf681f424,4590697,0,0x0,8
tick,0x7ffdf681f424,4592630,0,0x0,8
tick,0x7ffdf681f424,4594675,0,0x0,8
tick,0x7ffdf681f424,4596673,0,0x0,8
tick,0x7ffdf681f424,4598685,0,0x0,8
tick,0x7ffdf681f424,4600665,0,0x0,8
tick,0x7ffdf681f424,4602700,0,0x0,8
tick,0x7ffdf681f424,4604667,0,0x0,8
tick,0x7ffdf681f424,4606662,0,0x0,8
tick,0x7ffdf681f424,4608642,0,0x0,8
tick,0x7ffdf681f424,4610649,0,0x0,8
tick,0x7ffdf681f424,4612629,0,0x0,8
tick,0x7ffdf681f424,4614621,0,0x0,8
tick,0x7ffdf681f424,4616624,0,0x0,8
tick,0x7ffdf681f424,4618613,0,0x0,8
tick,0x7ffdf681f424,4620616,0,0x0,8
tick,0x7ffdf681f424,4622604,0,0x0,8
tick,0x7ffdf681f424,4624633,0,0x0,8
tick,0x7ffdf681f424,4626593,0,0x0,8
tick,0x7ffdf681f424,4628485,0,0x0,8
tick,0x7ffdf681f424,4630461,0,0x0,8
tick,0x7ffdf681f424,4632585,0,0x0,8
tick,0x7ffdf681f424,4634570,0,0x0,8
tick,0x7ffdf681f424,4636609,0,0x0,8
tick,0x7ffdf681f424,4638567,0,0x0,8
tick,0x7ffdf681f424,4640560,0,0x0,8
tick,0x7ffdf681f424,4642551,0,0x0,8
tick,0x7ffdf681f424,4644546,0,0x0,8
tick,0x7ffdf681f424,4646575,0,0x0,8
tick,0x7ffdf681f424,4648534,0,0x0,8
tick,0x7ffdf681f424,4650530,0,0x0,8
tick,0x7ffdf681f424,4652525,0,0x0,8
tick,0x7ffdf681f424,4654429,0,0x0,8
tick,0x7ffdf681f424,4656511,0,0x0,8
tick,0x7ffdf681f424,4658506,0,0x0,8
tick,0x7ffdf681f424,4660501,0,0x0,8
tick,0x7ffdf681f424,4662497,0,0x0,8
tick,0x7ffdf681f424,4664495,0,0x0,8
tick,0x7ffdf681f424,4666486,0,0x0,8
tick,0x7ffdf681f424,4668530,0,0x0,8
tick,0x7ffdf681f424,4670482,0,0x0,8
tick,0x7ffdf681f424,4672375,0,0x0,8
tick,0x7ffdf681f424,4674467,0,0x0,8
tick,0x7ffdf681f424,4676382,0,0x0,8
tick,0x7ffdf681f424,4678460,0,0x0,8
tick,0x7ffdf681f424,4680452,0,0x0,8
tick,0x7ffdf681f424,4682445,0,0x0,8
tick,0x7ffdf681f424,4684449,0,0x0,8
tick,0x7ffdf681f424,4686437,0,0x0,8
tick,0x7ffdf681f424,4688432,0,0x0,8
tick,0x7ffdf681f424,4690364,0,0x0,8
tick,0x7ffdf681f424,4692386,0,0x0,8
tick,0x7ffdf681f424,4694308,0,0x0,8
tick,0x7ffdf681f424,4696411,0,0x0,8
tick,0x7ffdf681f424,4698409,0,0x0,8
tick,0x7ffdf681f424,4700388,0,0x0,8
tick,0x7ffdf681f424,4702430,0,0x0,8
tick,0x7ffdf681f424,4704388,0,0x0,8
tick,0x7ffdf681f424,4706380,0,0x0,8
tick,0x7ffdf681f424,4708380,0,0x0,8
tick,0x7ffdf681f424,4710373,0,0x0,8
tick,0x7ffdf681f424,4712389,0,0x0,8
tick,0x7ffdf681f424,4714367,0,0x0,8
tick,0x7ffdf681f424,4716239,0,0x0,8
tick,0x7ffdf681f424,4718409,0,0x0,8
tick,0x7ffdf681f424,4720312,0,0x0,8
tick,0x7ffdf681f424,4722233,0,0x0,8
tick,0x7ffdf681f424,4724330,0,0x0,8
tick,0x7ffdf681f424,4726326,0,0x0,8
tick,0x7ffdf681f424,4728324,0,0x0,8
tick,0x7ffdf681f424,4730326,0,0x0,8
tick,0x7ffdf681f424,4732309,0,0x0,8
tick,0x7ffdf681f424,4734349,0,0x0,8
tick,0x7ffdf681f424,4736307,0,0x0,8
tick,0x7ffdf681f424,4738300,0,0x0,8
tick,0x7ffdf681f424,4740290,0,0x0,8
tick,0x7ffdf681f424,4742260,0,0x0,8
tick,0x7ffdf681f424,4744277,0,0x0,8
tick,0x7ffdf681f424,4746279,0,0x0,8
tick,0x7ffdf681f424,4748267,0,0x0,8
tick,0x7ffdf681f424,4750266,0,0x0,8
tick,0x7ffdf681f424,4752268,0,0x0,8
tick,0x7ffdf681f424,4754242,0,0x0,8
tick,0x7ffdf681f424,4756150,0,0x0,8
tick,0x7ffdf681f424,4758243,0,0x0,8
tick,0x7ffdf681f424,4760244,0,0x0,8
tick,0x7ffdf681f424,4762230,0,0x0,8
tick,0x7ffdf681f424,4764195,0,0x0,8
tick,0x7ffdf681f424,4766218,0,0x0,8
tick,0x7ffdf681f424,4768215,0,0x0,8
tick,0x7ffdf681f424,4770214,0,0x0,8
tick,0x7ffdf681f424,4772097,0,0x0,8
tick,0x7ffdf681f424,4774205,0,0x0,8
tick,0x7ffdf681f424,4776191,0,0x0,8
tick,0x7ffdf681f424,4778258,0,0x0,8
tick,0x7ffdf681f424,4780187,0,0x0,8
tick,0x7ffdf681f424,4782184,0,0x0,8
tick,0x7ffdf681f424,4784173,0,0x0,8
tick,0x7ffdf681f424,4786135,0,0x0,8
tick,0x7ffdf681f424,4788160,0,0x0,8
tick,0x7ffdf681f424,4790157,0,0x0,8
tick,0x7ffdf681f424,4792153,0,0x0,8
tick,0x7ffdf681f424,4794026,0,0x0,8
tick,0x7ffdf681f424,4796139,0,0x0,8
tick,0x7ffdf681f424,4798133,0,0x0,8
tick,0x7ffdf681f424,4800145,0,0x0,8
tick,0x7ffdf681f424,4802113,0,0x0,8
tick,0x7ffdf681f424,4804133,0,0x0,8
tick,0x7ffdf681f424,4806121,0,0x0,8
tick,0x7ffdf681f424,4808100,0,0x0,8
tick,0x7ffdf681f424,4810161,0,0x0,8
tick,0x7ffdf681f424,4811949,0,0x0,8
tick,0x7ffdf681f424,4813962,0,0x0,8
tick,0x7ffdf681f424,4816058,0,0x0,8
tick,0x7ffdf681f424,4818093,0,0x0,8
tick,0x7ffdf681f424,4820074,0,0x0,8
tick,0x7ffdf681f424,4822078,0,0x0,8
tick,0x7ffdf681f424,4824073,0,0x0,8
tick,0x7ffdf681f424,4826067,0,0x0,8
tick,0x7ffdf681f424,4828053,0,0x0,8
tick,0x7ffdf681f424,4830021,0,0x0,8
tick,0x7ffdf681f424,4832050,0,0x0,8
tick,0x7ffdf681f424,4834039,0,0x0,8
tick,0x7ffdf681f424,4836036,0,0x0,8
tick,0x7ffdf681f424,4838026,0,0x0,8
tick,0x7ffdf681f424,4840047,0,0x0,8
tick,0x7ffdf681f424,4841980,0,0x0,8
tick,0x7ffdf681f424,4844065,0,0x0,8
tick,0x7ffdf681f424,4846022,0,0x0,8
tick,0x7ffdf681f424,4848004,0,0x0,8
tick,0x7ffdf681f424,4849993,0,0x0,8
tick,0x7ffdf681f424,4851960,0,0x0,8
tick,0x7ffdf681f424,4853990,0,0x0,8
tick,0x7ffdf681f424,4855983,0,0x0,8
tick,0x7ffdf681f424,4857984,0,0x0,8
tick,0x7ffdf681f424,4859969,0,0x0,8
tick,0x7ffdf681f424,4861869,0,0x0,8
tick,0x7ffdf681f424,4863842,0,0x0,8
tick,0x7ffdf681f424,4865928,0,0x0,8
tick,0x7ffdf681f424,4867966,0,0x0,8
tick,0x7ffdf681f424,4869948,0,0x0,8
tick,0x7ffdf681f424,4871936,0,0x0,8
tick,0x7ffdf681f424,4873901,0,0x0,8
tick,0x7ffdf681f424,4875926,0,0x0,8
tick,0x7ffdf681f424,4877919,0,0x0,8
tick,0x7ffdf681f424,4879918,0,0x0,8
tick,0x7ffdf681f424,4881948,0,0x0,8
tick,0x7ffdf681f424,4883906,0,0x0,8
tick,0x7ffdf681f424,4885910,0,0x0,8
tick,0x7ffdf681f424,4887833,0,0x0,8
tick,0x7ffdf681f424,4889893,0,0x0,8
tick,0x7ffdf681f424,4891884,0,0x0,8
tick,0x7ffdf681f424,4893879,0,0x0,8
tick,0x7ffdf681f424,4895842,0,0x0,8
tick,0x7ffdf681f424,4897868,0,0x0,8
tick,0x7ffdf681f424,4899866,0,0x0,8
tick,0x7ffdf681f424,4901879,0,0x0,8
tick,0x7ffdf681f424,4903750,0,0x0,8
tick,0x7ffdf681f424,4905856,0,0x0,8
tick,0x7ffdf681f424,4907853,0,0x0,8
tick,0x7ffdf681f424,4909872,0,0x0,8
tick,0x7ffdf681f424,4911843,0,0x0,8
tick,0x7ffdf681f424,4913831,0,0x0,8
tick,0x7ffdf681f424,4915711,0,0x0,8
tick,0x7ffdf681f424,4917815,0,0x0,8
tick,0x7ffdf681f424,4919812,0,0x0,8
tick,0x7ffdf681f424,4921815,0,0x0,8
tick,0x7ffdf681f424,4923798,0,0x0,8
tick,0x7ffdf681f424,4925793,0,0x0,8
tick,0x7ffdf681f424,4927807,0,0x0,8
tick,0x7ffdf681f424,4929783,0,0x0,8
tick,0x7ffdf681f424,4931821,0,0x0,8
tick,0x7ffdf681f424,4933786,0,0x0,8
tick,0x7ffdf681f424,4935774,0,0x0,8
tick,0x7ffdf681f424,4937766,0,0x0,8
tick,0x7ffdf681f424,4939630,0,0x0,8
tick,0x7ffdf681f424,4941757,0,0x0,8
tick,0x7ffdf681f424,4943742,0,0x0,8
tick,0x7ffdf681f424,4945751,0,0x0,8
tick,0x7ffdf681f424,4947736,0,0x0,8
tick,0x7ffdf681f424,4949749,0,0x0,8
tick,0x7ffdf681f424,4951737,0,0x0,8
tick,0x7ffdf681f424,4953766,0,0x0,8
tick,0x7ffdf681f424,4955713,0,0x0,8
tick,0x7ffdf681f424,4957720,0,0x0,8
tick,0x7ffdf681f424,4959703,0,0x0,8
tick,0x7ffdf681f424,4961712,0,0x0,8
tick,0x7ffdf681f424,4963736,0,0x0,8
tick,0x7ffdf681f424,4965560,0,0x0,8
tick,0x7ffdf681f424,4967679,0,0x0,8
tick,0x7ffdf681f424,4969675,0,0x0,8
tick,0x7ffdf681f424,4971687,0,0x0,8
tick,0x7ffdf681f424,4973665,0,0x0,8
tick,0x7ffdf681f424,4975707,0,0x0,8
tick,0x7ffdf681f424,4977665,0,0x0,8
tick,0x7ffdf681f424,4979661,0,0x0,8
tick,0x7ffdf681f424,4981646,0,0x0,8
tick,0x7ffdf681f424,4983647,0,0x0,8
tick,0x7ffdf681f424,4985644,0,0x0,8
tick,0x7ffdf681f424,4987635,0,0x0,8
tick,0x7ffdf681f424,4989624,0,0x0,8
tick,0x7ffdf681f424,4991620,0,0x0,8
tick,0x7ffdf681f424,4993634,0,0x0,8
tick,0x7ffdf681f424,4995604,0,0x0,8
tick,0x7ffdf681f424,4997608,0,0x0,8
tick,0x7ffdf681f424,4999617,0,0x0,8
tick,0x7ffdf681f424,5001599,0,0x0,8
tick,0x7ffdf681f424,5003571,0,0x0,8
tick,0x7ffdf681f424,5005592,0,0x0,8
tick,0x7ffdf681f424,5007584,0,0x0,8
tick,0x7ffdf681f424,5009572,0,0x0,8
tick,0x7ffdf681f424,5011563,0,0x0,8
tick,0x7ffdf681f424,5013568,0,0x0,8
tick,0x7ffdf681f424,5015556,0,0x0,8
tick,0x7ffdf681f424,5017554,0,0x0,8
tick,0x7ffdf681f424,5019579,0,0x0,8
tick,0x7ffdf681f424,5021533,0,0x0,8
tick,0x7ffdf681f424,5023538,0,0x0,8
tick,0x7ffdf681f424,5025526,0,0x0,8
tick,0x7ffdf681f424,5027544,0,0x0,8
tick,0x7ffdf681f424,5029478,0,0x0,8
tick,0x7ffdf681f424,5031489,0,0x0,8
tick,0x7ffdf681f424,5033512,0,0x0,8
tick,0x7ffdf681f424,5035497,0,0x0,8
tick,0x7ffdf681f424,5037500,0,0x0,8
tick,0x7ffdf681f424,5039500,0,0x0,8
tick,0x7ffdf681f424,5041523,0,0x0,8
tick,0x7ffdf681f424,5043487,0,0x0,8
tick,0x7ffdf681f424,5045478,0,0x0,8
tick,0x7ffdf681f424,5047383,0,0x0,8
tick,0x7ffdf681f424,5049475,0,0x0,8
tick,0x7ffdf681f424,5051456,0,0x0,8
tick,0x7ffdf681f424,5053455,0,0x0,8
tick,0x7ffdf681f424,5055452,0,0x0,8
tick,0x7ffdf681f424,5057441,0,0x0,8
tick,0x7ffdf681f424,5059440,0,0x0,8
tick,0x7ffdf681f424,5061430,0,0x0,8
tick,0x7ffdf681f424,5063436,0,0x0,8
tick,0x7ffdf681f424,5065417,0,0x0,8
tick,0x7ffdf681f424,5067417,0,0x0,8
tick,0x7ffdf681f424,5069413,0,0x0,8
tick,0x7ffdf681f424,5071420,0,0x0,8
tick,0x7ffdf681f424,5073397,0,0x0,8
tick,0x7ffdf681f424,5075391,0,0x0,8
tick,0x7ffdf681f424,5077391,0,0x0,8
tick,0x7ffdf681f424,5079385,0,0x0,8
tick,0x7ffdf681f424,5081381,0,0x0,8
tick,0x7ffdf681f424,5083369,0,0x0,8
tick,0x7ffdf681f424,5085401,0,0x0,8
tick,0x7ffdf681f424,5087376,0,0x0,8
tick,0x7ffdf681f424,5089373,0,0x0,8
tick,0x7ffdf681f424,5091341,0,0x0,8
tick,0x7ffdf681f424,5093353,0,0x0,8
tick,0x7ffdf681f424,5095343,0,0x0,8
tick,0x7ffdf681f424,5097232,0,0x0,8
tick,0x7ffdf681f424,5099333,0,0x0,8
tick,0x7ffdf681f424,5101329,0,0x0,8
tick,0x7ffdf681f424,5103336,0,0x0,8
tick,0x7ffdf681f424,5105306,0,0x0,8
tick,0x7ffdf681f424,5107341,0,0x0,8
tick,0x7ffdf681f424,5109319,0,0x0,8
tick,0x7ffdf681f424,5111304,0,0x0,8
tick,0x7ffdf681f424,5113296,0,0x0,8
tick,0x7ffdf681f424,5115281,0,0x0,8
tick,0x7ffdf681f424,5117280,0,0x0,8
tick,0x7ffdf681f424,5119280,0,0x0,8
tick,0x7ffdf681f424,5121275,0,0x0,8
tick,0x7ffdf681f424,5123265,0,0x0,8
tick,0x7ffdf681f424,5125265,0,0x0,8
tick,0x7ffdf681f424,5127157,0,0x0,8
tick,0x7ffdf681f424,5129283,0,0x0,8
tick,0x7ffdf681f424,5131258,0,0x0,8
tick,0x7ffdf681f424,5133248,0,0x0,8
tick,0x7ffdf681f424,5135239,0,0x0,8
tick,0x7ffdf681f424,5137244,0,0x0,8
tick,0x7ffdf681f424,5139221,0,0x0,8
tick,0x7ffdf681f424,5141215,0,0x0,8
tick,0x7ffdf681f424,5143215,0,0x0,8
tick,0x7ffdf681f424,5145205,0,0x0,8
tick,0x7ffdf681f424,5147218,0,0x0,8
tick,0x7ffdf681f424,5149195,0,0x0,8
tick,0x7ffdf681f424,5151225,0,0x0,8
tick,0x7ffdf681f424,5153088,0,0x0,8
tick,0x7ffdf681f424,5155192,0,0x0,8
tick,0x7ffdf681f424,5157168,0,0x0,8
tick,0x7ffdf681f424,5159185,0,0x0,8
tick,0x7ffdf681f424,5161163,0,0x0,8
tick,0x7ffdf681f424,5163157,0,0x0,8
tick,0x7ffdf681f424,5165152,0,0x0,8
tick,0x7ffdf681f424,5167149,0,0x0,8
tick,0x7ffdf681f424,5169146,0,0x0,8
tick,0x7ffdf681f424,5171147,0,0x0,8
tick,0x7ffdf681f424,5173175,0,0x0,8
tick,0x7ffdf681f424,5175135,0,0x0,8
tick,0x7ffdf681f424,5177123,0,0x0,8
tick,0x7ffdf681f424,5179115,0,0x0,8
tick,0x7ffdf681f424,5181118,0,0x0,8
tick,0x7ffdf681f424,5183110,0,0x0,8
tick,0x7ffdf681f424,5185102,0,0x0,8
tick,0x7ffdf681f424,5187090,0,0x0,8
tick,0x7ffdf681f424,5189030,0,0x0,8
tick,0x7ffdf681f424,5191083,0,0x0,8
tick,0x7ffdf681f424,5193095,0,0x0,8
tick,0x7ffdf681f424,5195032,0,0x0,8
tick,0x7ffdf681f424,5197084,0,0x0,8
tick,0x7ffdf681f424,5199062,0,0x0,8
tick,0x7ffdf681f424,5201053,0,0x0,8
tick,0x7ffdf681f424,5203067,0,0x0,8
tick,0x7ffdf681f424,5205049,0,0x0,8
tick,0x7ffdf681f424,5207046,0,0x0,8
tick,0x7ffdf681f424,5209053,0,0x0,8
tick,0x7ffdf681f424,5211026,0,0x0,8
tick,0x7ffdf681f424,5213023,0,0x0,8
tick,0x7ffdf681f424,5214907,0,0x0,8
tick,0x7ffdf681f424,5217056,0,0x0,8
tick,0x7ffdf681f424,5219032,0,0x0,8
tick,0x7ffdf681f424,5221010,0,0x0,8
tick,0x7ffdf681f424,5222993,0,0x0,8
tick,0x7ffdf681f424,5225010,0,0x0,8
tick,0x7ffdf681f424,5226991,0,0x0,8
tick,0x7ffdf681f424,5228989,0,0x0,8
tick,0x7ffdf681f424,5230975,0,0x0,8
tick,0x7ffdf681f424,5233001,0,0x0,8
tick,0x7ffdf681f424,5234966,0,0x0,8
tick,0x7ffdf681f424,5236957,0,0x0,8
tick,0x7ffdf681f424,5238907,0,0x0,8
tick,0x7ffdf681f424,5240961,0,0x0,8
tick,0x7ffdf681f424,5242952,0,0x0,8
tick,0x7ffdf681f424,5244935,0,0x0,8
tick,0x7ffdf681f424,5246940,0,0x0,8
tick,0x7ffdf681f424,5248983,0,0x0,8
tick,0x7ffdf681f424,5250944,0,0x0,8
tick,0x7ffdf681f424,5252905,0,0x0,8
tick,0x7ffdf681f424,5254902,0,0x0,8
tick,0x7ffdf681f424,5256938,0,0x0,8
tick,0x7ffdf681f424,5258904,0,0x0,8
tick,0x7ffdf681f424,5260941,0,0x0,8
tick,0x7ffdf681f424,5262899,0,0x0,8
tick,0x7ffdf681f424,5264903,0,0x0,8
tick,0x7ffdf681f424,5266887,0,0x0,8
tick,0x7ffdf681f424,5268890,0,0x0,8
tick,0x7ffdf681f424,5270874,0,0x0,8
tick,0x7ffdf681f424,5272866,0,0x0,8
tick,0x7ffdf681f424,5274864,0,0x0,8
tick,0x7ffdf681f424,5276865,0,0x0,8
tick,0x7ffdf681f424,5278844,0,0x0,8
tick,0x7ffdf681f424,5280733,0,0x0,8
tick,0x7ffdf681f424,5282819,0,0x0,8
tick,0x7ffdf681f424,5284843,0,0x0,8
tick,0x7ffdf681f424,5286836,0,0x0,8
tick,0x7ffdf681f424,5288839,0,0x0,8
tick,0x7ffdf681f424,5290751,0,0x0,8
tick,0x7ffdf681f424,5292815,0,0x0,8
tick,0x7ffdf681f424,5294781,0,0x0,8
tick,0x7ffdf681f424,5296801,0,0x0,8
tick,0x7ffdf681f424,5298792,0,0x0,8
tick,0x7ffdf681f424,5300794,0,0x0,8
tick,0x7ffdf681f424,5302791,0,0x0,8
tick,0x7ffdf681f424,5304787,0,0x0,8
tick,0x7ffdf681f424,5306782,0,0x0,8
tick,0x7ffdf681f424,5308780,0,0x0,8
tick,0x7ffdf681f424,5310767,0,0x0,8
tick,0x7ffdf681f424,5312776,0,0x0,8
tick,0x7ffdf681f424,5314749,0,0x0,8
tick,0x7ffdf681f424,5316736,0,0x0,8
tick,0x7ffdf681f424,5318742,0,0x0,8
tick,0x7ffdf681f424,5320732,0,0x0,8
tick,0x7ffdf681f424,5322739,0,0x0,8
tick,0x7ffdf681f424,5324721,0,0x0,8
tick,0x7ffdf681f424,5326769,0,0x0,8
tick,0x7ffdf681f424,5328714,0,0x0,8
tick,0x7ffdf681f424,5330722,0,0x0,8
tick,0x7ffdf681f424,5332708,0,0x0,8
tick,0x7ffdf681f424,5334715,0,0x0,8
tick,0x7ffdf681f424,5336695,0,0x0,8
tick,0x7ffdf681f424,5338700,0,0x0,8
tick,0x7ffdf681f424,5340688,0,0x0,8
tick,0x7ffdf681f424,5342674,0,0x0,8
tick,0x7ffdf681f424,5344674,0,0x0,8
tick,0x7ffdf681f424,5346672,0,0x0,8
tick,0x7ffdf681f424,5348682,0,0x0,8
tick,0x7ffdf681f424,5350657,0,0x0,8
tick,0x7ffdf681f424,5352670,0,0x0,8
tick,0x7ffdf681f424,5354653,0,0x0,8
tick,0x7ffdf681f424,5356646,0,0x0,8
tick,0x7ffdf681f424,5358633,0,0x0,8
tick,0x7ffdf681f424,5360627,0,0x0,8
tick,0x7ffdf681f424,5362626,0,0x0,8
tick,0x7ffdf681f424,5364622,0,0x0,8
tick,0x7ffdf681f424,5366634,0,0x0,8
tick,0x7ffdf681f424,5368610,0,0x0,8
tick,0x7ffdf681f424,5370648,0,0x0,8
tick,0x7ffdf681f424,5372616,0,0x0,8
tick,0x7ffdf681f424,5374613,0,0x0,8
tick,0x7ffdf681f424,5376584,0,0x0,8
tick,0x7ffdf681f424,5378564,0,0x0,8
tick,0x7ffdf681f424,5380570,0,0x0,8
tick,0x7ffdf681f424,5382580,0,0x0,8
tick,0x7ffdf681f424,5384588,0,0x0,8
tick,0x7ffdf681f424,5386446,0,0x0,8
tick,0x7ffdf681f424,5388585,0,0x0,8
tick,0x7ffdf681f424,5390544,0,0x0,8
tick,0x7ffdf681f424,5392578,0,0x0,8
tick,0x7ffdf681f424,5394548,0,0x0,8
tick,0x7ffdf681f424,5396554,0,0x0,8
tick,0x7ffdf681f424,5398533,0,0x0,8
tick,0x7ffdf681f424,5400501,0,0x0,8
tick,0x7ffdf681f424,5402543,0,0x0,8
tick,0x7ffdf681f424,5404507,0,0x0,8
tick,0x7ffdf681f424,5406512,0,0x0,8
tick,0x7ffdf681f424,5408500,0,0x0,8
tick,0x7ffdf681f424,5410509,0,0x0,8
tick,0x7ffdf681f424,5412380,0,0x0,8
tick,0x7ffdf681f424,5414465,0,0x0,8
tick,0x7ffdf681f424,5416456,0,0x0,8
tick,0x7ffdf681f424,5418419,0,0x0,8
tick,0x7ffdf681f424,5420468,0,0x0,8
tick,0x7ffdf681f424,5422465,0,0x0,8
tick,0x7ffdf681f424,5424460,0,0x0,8
tick,0x7ffdf681f424,5426449,0,0x0,8
tick,0x7ffdf681f424,5428446,0,0x0,8
tick,0x7ffdf681f424,5430446,0,0x0,8
tick,0x7ffdf681f424,5432453,0,0x0,8
tick,0x7ffdf681f424,5434429,0,0x0,8
tick,0x7ffdf681f424,5436467,0,0x0,8
tick,0x7ffdf681f424,5438312,0,0x0,8
tick,0x7ffdf681f424,5440422,0,0x0,8
tick,0x7ffdf681f424,5442407,0,0x0,8
tick,0x7ffdf681f424,5444413,0,0x0,8
tick,0x7ffdf681f424,5446397,0,0x0,8
tick,0x7ffdf681f424,5448399,0,0x0,8
tick,0x7ffdf681f424,5450395,0,0x0,8
tick,0x7ffdf681f424,5452391,0,0x0,8
tick,0x7ffdf681f424,5454352,0,0x0,8
tick,0x7ffdf681f424,5456375,0,0x0,8
tick,0x7ffdf681f424,5458413,0,0x0,8
tick,0x7ffdf681f424,5460363,0,0x0,8
tick,0x7ffdf681f424,5462395,0,0x0,8
tick,0x7ffdf681f424,5464353,0,0x0,8
tick,0x7ffdf681f424,5466356,0,0x0,8
tick,0x7ffdf681f424,5468336,0,0x0,8
tick,0x7ffdf681f424,5470339,0,0x0,8
tick,0x7ffdf681f424,5472329,0,0x0,8
tick,0x7ffdf681f424,5474203,0,0x0,8
tick,0x7ffdf681f424,5476327,0,0x0,8
tick,0x7ffdf681f424,5478321,0,0x0,8
tick,0x7ffdf681f424,5480347,0,0x0,8
tick,0x7ffdf681f424,5482313,0,0x0,8
tick,0x7ffdf681f424,5484308,0,0x0,8
tick,0x7ffdf681f424,5486297,0,0x0,8
tick,0x7ffdf681f424,5488302,0,0x0,8
tick,0x7ffdf681f424,5490298,0,0x0,8
tick,0x7ffdf681f424,5492279,0,0x0,8
tick,0x7ffdf681f424,5494276,0,0x0,8
tick,0x7ffdf681f424,5496264,0,0x0,8
tick,0x7ffdf681f424,5498269,0,0x0,8
tick,0x7ffdf681f424,5500136,0,0x0,8
tick,0x7ffdf681f424,5502169,0,0x0,8
tick,0x7ffdf681f424,5504249,0,0x0,8
tick,0x7ffdf681f424,5506250,0,0x0,8
tick,0x7ffdf681f424,5508230,0,0x0,8
tick,0x7ffdf681f424,5510243,0,0x0,8
tick,0x7ffdf681f424,5512236,0,0x0,8
tick,0x7ffdf681f424,5514227,0,0x0,8
tick,0x7ffdf681f424,5516212,0,0x0,8
tick,0x7ffdf681f424,5518211,0,0x0,8
tick,0x7ffdf681f424,5520205,0,0x0,8
tick,0x7ffdf681f424,5522201,0,0x0,8
tick,0x7ffdf681f424,5524231,0,0x0,8
tick,0x7ffdf681f424,5526206,0,0x0,8
tick,0x7ffdf681f424,5528197,0,0x0,8
tick,0x7ffdf681f424,5530178,0,0x0,8
tick,0x7ffdf681f424,5532184,0,0x0,8
tick,0x7ffdf681f424,5534165,0,0x0,8
tick,0x7ffdf681f424,5536219,0,0x0,8
tick,0x7ffdf681f424,5538156,0,0x0,8
tick,0x7ffdf681f424,5540143,0,0x0,8
tick,0x7ffdf681f424,5542147,0,0x0,8
tick,0x7ffdf681f424,5544146,0,0x0,8
tick,0x7ffdf681f424,5546170,0,0x0,8
tick,0x7ffdf681f424,5548139,0,0x0,8
tick,0x7ffdf681f424,5550129,0,0x0,8
tick,0x7ffdf681f424,5552119,0,0x0,8
tick,0x7ffdf681f424,5554123,0,0x0,8
tick,0x7ffdf681f424,5556120,0,0x0,8
tick,0x7ffdf681f424,5558103,0,0x0,8
tick,0x7ffdf681f424,5560097,0,0x0,8
tick,0x7ffdf681f424,5562103,0,0x0,8
tick,0x7ffdf681f424,5564079,0,0x0,8
tick,0x7ffdf681f424,5566077,0,0x0,8
tick,0x7ffdf681f424,5568113,0,0x0,8
tick,0x7ffdf681f424,5570082,0,0x0,8
tick,0x7ffdf681f424,5572068,0,0x0,8
tick,0x7ffdf681f424,5574056,0,0x0,8
tick,0x7ffdf681f424,5576063,0,0x0,8
tick,0x7ffdf681f424,5578046,0,0x0,8
tick,0x7ffdf681f424,5580049,0,0x0,8
tick,0x7ffdf681f424,5582051,0,0x0,8
tick,0x7ffdf681f424,5584036,0,0x0,8
tick,0x7ffdf681f424,5586035,0,0x0,8
tick,0x7ffdf681f424,5588033,0,0x0,8
tick,0x7ffdf681f424,5590061,0,0x0,8
tick,0x7ffdf681f424,5592014,0,0x0,8
tick,0x7ffdf681f424,5594015,0,0x0,8
tick,0x7ffdf681f424,5596004,0,0x0,8
tick,0x7ffdf681f424,5597860,0,0x0,8
tick,0x7ffdf681f424,5599994,0,0x0,8
tick,0x7ffdf681f424,5601989,0,0x0,8
tick,0x7ffdf681f424,5603968,0,0x0,8
tick,0x7ffdf681f424,5605970,0,0x0,8
tick,0x7ffdf681f424,5607975,0,0x0,8
tick,0x7ffdf681f424,5609971,0,0x0,8
tick,0x7ffdf681f424,5611998,0,0x0,8
tick,0x7ffdf681f424,5613951,0,0x0,8
tick,0x7ffdf681f424,5615949,0,0x0,8
tick,0x7ffdf681f424,5617987,0,0x0,8
tick,0x7ffdf681f424,5619945,0,0x0,8
tick,0x7ffdf681f424,5621936,0,0x0,8
tick,0x7ffdf681f424,5623937,0,0x0,8
tick,0x7ffdf681f424,5625884,0,0x0,8
tick,0x7ffdf681f424,5627922,0,0x0,8
tick,0x7ffdf681f424,5629859,0,0x0,8
tick,0x7ffdf681f424,5631910,0,0x0,8
tick,0x7ffdf681f424,5633937,0,0x0,8
tick,0x7ffdf681f424,5635900,0,0x0,8
tick,0x7ffdf681f424,5637901,0,0x0,8
tick,0x7ffdf681f424,5639886,0,0x0,8
tick,0x7ffdf681f424,5641886,0,0x0,8
tick,0x7ffdf681f424,5643874,0,0x0,8
tick,0x7ffdf681f424,5645866,0,0x0,8
tick,0x7ffdf681f424,5647865,0,0x0,8
tick,0x7ffdf681f424,5649835,0,0x0,8
tick,0x7ffdf681f424,5651860,0,0x0,8
tick,0x7ffdf681f424,5653850,0,0x0,8
tick,0x7ffdf681f424,5655884,0,0x0,8
tick,0x7ffdf681f424,5657854,0,0x0,8
tick,0x7ffdf681f424,5659843,0,0x0,8
tick,0x7ffdf681f424,5661701,0,0x0,8
tick,0x7ffdf681f424,5663822,0,0x0,8
tick,0x7ffdf681f424,5665819,0,0x0,8
tick,0x7ffdf681f424,5667803,0,0x0,8
tick,0x7ffdf681f424,5669805,0,0x0,8
tick,0x7ffdf681f424,5671801,0,0x0,8
tick,0x7ffdf681f424,5673800,0,0x0,8
tick,0x7ffdf681f424,5675791,0,0x0,8
tick,0x7ffdf681f424,5677819,0,0x0,8
tick,0x7ffdf681f424,5679789,0,0x0,8
tick,0x7ffdf681f424,5681783,0,0x0,8
tick,0x7ffdf681f424,5683768,0,0x0,8
tick,0x7ffdf681f424,5685776,0,0x0,8
tick,0x7ffdf681f424,5687638,0,0x0,8
tick,0x7ffdf681f424,5689736,0,0x0,8
tick,0x7ffdf681f424,5691744,0,0x0,8
tick,0x7ffdf681f424,5693742,0,0x0,8
tick,0x7ffdf681f424,5695736,0,0x0,8
tick,0x7ffdf681f424,5697733,0,0x0,8
tick,0x7ffdf681f424,5699701,0,0x0,8
tick,0x7ffdf681f424,5701726,0,0x0,8
tick,0x7ffdf681f424,5703729,0,0x0,8
tick,0x7ffdf681f424,5705701,0,0x0,8
tick,0x7ffdf681f424,5707717,0,0x0,8
tick,0x7ffdf681f424,5709708,0,0x0,8
tick,0x7ffdf681f424,5711692,0,0x0,8
tick,0x7ffdf681f424,5713695,0,0x0,8
tick,0x7ffdf681f424,5715686,0,0x0,8
tick,0x7ffdf681f424,5717684,0,0x0,8
tick,0x7ffdf681f424,5719725,0,0x0,8
tick,0x7ffdf681f424,5721696,0,0x0,8
tick,0x7ffdf681f424,5723539,0,0x0,8
tick,0x7ffdf681f424,5725660,0,0x0,8
tick,0x7ffdf681f424,5727647,0,0x0,8
tick,0x7ffdf681f424,5729657,0,0x0,8
tick,0x7ffdf681f424,5731631,0,0x0,8
tick,0x7ffdf681f424,5733629,0,0x0,8
tick,0x7ffdf681f424,5735625,0,0x0,8
tick,0x7ffdf681f424,5737627,0,0x0,8
tick,0x7ffdf681f424,5739625,0,0x0,8
tick,0x7ffdf681f424,5741609,0,0x0,8
tick,0x7ffdf681f424,5743639,0,0x0,8
tick,0x7ffdf681f424,5745603,0,0x0,8
tick,0x7ffdf681f424,5747605,0,0x0,8
tick,0x7ffdf681f424,5749474,0,0x0,8
tick,0x7ffdf681f424,5751596,0,0x0,8
tick,0x7ffdf681f424,5753575,0,0x0,8
tick,0x7ffdf681f424,5755580,0,0x0,8
tick,0x7ffdf681f424,5757571,0,0x0,8
tick,0x7ffdf681f424,5759574,0,0x0,8
tick,0x7ffdf681f424,5761579,0,0x0,8
tick,0x7ffdf681f424,5763452,0,0x0,8
tick,0x7ffdf681f424,5765575,0,0x0,8
tick,0x7ffdf681f424,5767553,0,0x0,8
tick,0x7ffdf681f424,5769550,0,0x0,8
tick,0x7ffdf681f424,5771542,0,0x0,8
tick,0x7ffdf681f424,5773540,0,0x0,8
tick,0x7ffdf681f424,5775523,0,0x0,8
tick,0x7ffdf681f424,5777511,0,0x0,8
tick,0x7ffdf681f424,5779513,0,0x0,8
tick,0x7ffdf681f424,5781544,0,0x0,8
tick,0x7ffdf681f424,5783509,0,0x0,8
tick,0x7ffdf681f424,5785501,0,0x0,8
tick,0x7ffdf681f424,5787531,0,0x0,8
tick,0x7ffdf681f424,5789489,0,0x0,8
tick,0x7ffdf681f424,5791479,0,0x0,8
tick,0x7ffdf681f424,5793468,0,0x0,8
tick,0x7ffdf681f424,5795481,0,0x0,8
tick,0x7ffdf681f424,5797358,0,0x0,8
tick,0x7ffdf681f424,5799453,0,0x0,8
tick,0x7ffdf681f424,5801453,0,0x0,8
tick,0x7ffdf681f424,5803449,0,0x0,8
tick,0x7ffdf681f424,5805444,0,0x0,8
tick,0x7ffdf681f424,5807436,0,0x0,8
tick,0x7ffdf681f424,5809347,0,0x0,8
tick,0x7ffdf681f424,5811443,0,0x0,8
tick,0x7ffdf681f424,5813443,0,0x0,8
tick,0x7ffdf681f424,5815404,0,0x0,8
tick,0x7ffdf681f424,5817420,0,0x0,8
tick,0x7ffdf681f424,5819407,0,0x0,8
tick,0x7ffdf681f424,5821397,0,0x0,8
tick,0x7ffdf681f424,5823397,0,0x0,8
tick,0x7ffdf681f424,5825392,0,0x0,8
tick,0x7ffdf681f424,5827384,0,0x0,8
tick,0x7ffdf681f424,5829376,0,0x0,8
tick,0x7ffdf681f424,5831412,0,0x0,8
tick,0x7ffdf681f424,5833375,0,0x0,8
tick,0x7ffdf681f424,5835366,0,0x0,8
tick,0x7ffdf681f424,5837359,0,0x0,8
tick,0x7ffdf681f424,5839320,0,0x0,8
tick,0x7ffdf681f424,5841346,0,0x0,8
tick,0x7ffdf681f424,5843341,0,0x0,8
tick,0x7ffdf681f424,5845334,0,0x0,8
tick,0x7ffdf681f424,5847345,0,0x0,8
tick,0x7ffdf681f424,5849320,0,0x0,8
tick,0x7ffdf681f424,5851312,0,0x0,8
tick,0x7ffdf681f424,5853360,0,0x0,8
tick,0x7ffdf681f424,5855310,0,0x0,8
tick,0x7ffdf681f424,5857314,0,0x0,8
tick,0x7ffdf681f424,5859291,0,0x0,8
tick,0x7ffdf681f424,5861304,0,0x0,8
tick,0x7ffdf681f424,5863333,0,0x0,8
tick,0x7ffdf681f424,5865288,0,0x0,8
tick,0x7ffdf681f424,5867298,0,0x0,8
tick,0x7ffdf681f424,5869270,0,0x0,8
tick,0x7ffdf681f424,5871270,0,0x0,8
tick,0x7ffdf681f424,5873271,0,0x0,8
tick,0x7ffdf681f424,5875297,0,0x0,8
tick,0x7ffdf681f424,5877246,0,0x0,8
tick,0x7ffdf681f424,5879253,0,0x0,8
tick,0x7ffdf681f424,5881241,0,0x0,8
tick,0x7ffdf681f424,5883247,0,0x0,8
tick,0x7ffdf681f424,5885227,0,0x0,8
tick,0x7ffdf681f424,5887224,0,0x0,8
tick,0x7ffdf681f424,5889211,0,0x0,8
tick,0x7ffdf681f424,5891215,0,0x0,8
tick,0x7ffdf681f424,5893219,0,0x0,8
tick,0x7ffdf681f424,5895203,0,0x0,8
tick,0x7ffdf681f424,5897281,0,0x0,8
tick,0x7ffdf681f424,5899205,0,0x0,8
tick,0x7ffdf681f424,5901188,0,0x0,8
tick,0x7ffdf681f424,5903089,0,0x0,8
tick,0x7ffdf681f424,5905182,0,0x0,8
tick,0x7ffdf681f424,5907172,0,0x0,8
tick,0x7ffdf681f424,5909177,0,0x0,8
tick,0x7ffdf681f424,5911039,0,0x0,8
tick,0x7ffdf681f424,5913152,0,0x0,8
tick,0x7ffdf681f424,5915082,0,0x0,8
tick,0x7ffdf681f424,5917137,0,0x0,8
tick,0x7ffdf681f424,5919172,0,0x0,8
tick,0x7ffdf681f424,5921129,0,0x0,8
tick,0x7ffdf681f424,5923135,0,0x0,8
tick,0x7ffdf681f424,5925118,0,0x0,8
tick,0x7ffdf681f424,5927123,0,0x0,8
tick,0x7ffdf681f424,5929105,0,0x0,8
tick,0x7ffdf681f424,5931103,0,0x0,8
tick,0x7ffdf681f424,5933093,0,0x0,8
tick,0x7ffdf681f424,5935090,0,0x0,8
tick,0x7ffdf681f424,5936968,0,0x0,8
tick,0x7ffdf681f424,5938981,0,0x0,8
tick,0x7ffdf681f424,5941115,0,0x0,8
tick,0x7ffdf681f424,5943084,0,0x0,8
tick,0x7ffdf681f424,5945078,0,0x0,8
tick,0x7ffdf681f424,5947068,0,0x0,8
tick,0x7ffdf681f424,5949059,0,0x0,8
tick,0x7ffdf681f424,5951054,0,0x0,8
tick,0x7ffdf681f424,5953050,0,0x0,8
tick,0x7ffdf681f424,5955044,0,0x0,8
tick,0x7ffdf681f424,5957043,0,0x0,8
tick,0x7ffdf681f424,5959038,0,0x0,8
tick,0x7ffdf681f424,5961020,0,0x0,8
tick,0x7ffdf681f424,5963035,0,0x0,8
tick,0x7ffdf681f424,5965027,0,0x0,8
tick,0x7ffdf681f424,5967013,0,0x0,8
tick,0x7ffdf681f424,5969005,0,0x0,8
tick,0x7ffdf681f424,5971012,0,0x0,8
tick,0x7ffdf681f424,5972882,0,0x0,8
tick,0x7ffdf681f424,5974969,0,0x0,8
tick,0x7ffdf681f424,5976979,0,0x0,8
tick,0x7ffdf681f424,5978973,0,0x0,8
tick,0x7ffdf681f424,5980884,0,0x0,8
tick,0x7ffdf681f424,5982987,0,0x0,8
tick,0x7ffdf681f424,5985003,0,0x0,8
tick,0x7ffdf681f424,5986961,0,0x0,8
tick,0x7ffdf681f424,5988962,0,0x0,8
tick,0x7ffdf681f424,5990950,0,0x0,8
tick,0x7ffdf681f424,5992953,0,0x0,8
tick,0x7ffdf681f424,5994936,0,0x0,8
tick,0x7ffdf681f424,5996927,0,0x0,8
tick,0x7ffdf681f424,5998801,0,0x0,8
tick,0x7ffdf681f424,6000902,0,0x0,8
tick,0x7ffdf681f424,6002921,0,0x0,8
tick,0x7ffdf681f424,6004912,0,0x0,8
tick,0x7ffdf681f424,6006922,0,0x0,8
tick,0x7ffdf681f424,6008903,0,0x0,8
tick,0x7ffdf681f424,6010927,0,0x0,8
tick,0x7ffdf681f424,6012885,0,0x0,8
tick,0x7ffdf681f424,6014892,0,0x0,8
tick,0x7ffdf681f424,6016889,0,0x0,8
tick,0x7ffdf681f424,6018874,0,0x0,8
tick,0x7ffdf681f424,6020866,0,0x0,8
tick,0x7ffdf681f424,6022861,0,0x0,8
tick,0x7ffdf681f424,6024850,0,0x0,8
tick,0x7ffdf681f424,6026897,0,0x0,8
tick,0x7ffdf681f424,6028921,0,0x0,8
tick,0x7ffdf681f424,6030856,0,0x0,8
tick,0x7ffdf681f424,6032845,0,0x0,8
tick,0x7ffdf681f424,6034842,0,0x0,8
tick,0x7ffdf681f424,6036824,0,0x0,8
tick,0x7ffdf681f424,6038819,0,0x0,8
tick,0x7ffdf681f424,6040812,0,0x0,8
tick,0x7ffdf681f424,6042809,0,0x0,8
tick,0x7ffdf681f424,6044796,0,0x0,8
tick,0x7ffdf681f424,6046797,0,0x0,8
tick,0x7ffdf681f424,6048785,0,0x0,8
tick,0x7ffdf681f424,6050843,0,0x0,8
tick,0x7ffdf681f424,6052798,0,0x0,8
tick,0x7ffdf681f424,6054785,0,0x0,8
tick,0x7ffdf681f424,6056773,0,0x0,8
tick,0x7ffdf681f424,6058777,0,0x0,8
tick,0x7ffdf681f424,6060764,0,0x0,8
tick,0x7ffdf681f424,6062697,0,0x0,8
tick,0x7ffdf681f424,6064748,0,0x0,8
tick,0x7ffdf681f424,6066742,0,0x0,8
tick,0x7ffdf681f424,6068747,0,0x0,8
tick,0x7ffdf681f424,6070729,0,0x0,8
tick,0x7ffdf681f424,6072789,0,0x0,8
tick,0x7ffdf681f424,6074729,0,0x0,8
tick,0x7ffdf681f424,6076723,0,0x0,8
tick,0x7ffdf681f424,6078710,0,0x0,8
tick,0x7ffdf681f424,6080714,0,0x0,8
tick,0x7ffdf681f424,6082703,0,0x0,8
tick,0x7ffdf681f424,6084698,0,0x0,8
tick,0x7ffdf681f424,6086666,0,0x0,8
tick,0x7ffdf681f424,6088688,0,0x0,8
tick,0x7ffdf681f424,6090684,0,0x0,8
tick,0x7ffdf681f424,6092673,0,0x0,8
tick,0x7ffdf681f424,6094649,0,0x0,8
tick,0x7ffdf681f424,6096679,0,0x0,8
tick,0x7ffdf681f424,6098643,0,0x0,8
tick,0x7ffdf681f424,6100644,0,0x0,8
tick,0x7ffdf681f424,6102658,0,0x0,8
tick,0x7ffdf681f424,6104644,0,0x0,8
tick,0x7ffdf681f424,6106639,0,0x0,8
tick,0x7ffdf681f424,6108675,0,0x0,8
tick,0x7ffdf681f424,6110624,0,0x0,8
tick,0x7ffdf681f424,6112619,0,0x0,8
tick,0x7ffdf681f424,6114619,0,0x0,8
tick,0x7ffdf681f424,6116526,0,0x0,8
tick,0x7ffdf681f424,6118613,0,0x0,8
tick,0x7ffdf681f424,6120608,0,0x0,8
tick,0x7ffdf681f424,6122602,0,0x0,8
tick,0x7ffdf681f424,6124587,0,0x0,8
tick,0x7ffdf681f424,6126584,0,0x0,8
tick,0x7ffdf681f424,6128578,0,0x0,8
tick,0x7ffdf681f424,6130566,0,0x0,8
tick,0x7ffdf681f424,6132568,0,0x0,8
tick,0x7ffdf681f424,6134562,0,0x0,8
tick,0x7ffdf681f424,6136550,0,0x0,8
tick,0x7ffdf681f424,6138607,0,0x0,8
tick,0x7ffdf681f424,6140554,0,0x0,8
tick,0x7ffdf681f424,6142538,0,0x0,8
tick,0x7ffdf681f424,6144534,0,0x0,8
tick,0x7ffdf681f424,6146544,0,0x0,8
tick,0x7ffdf681f424,6148534,0,0x0,8
tick,0x7ffdf681f424,6150524,0,0x0,8
tick,0x7ffdf681f424,6152518,0,0x0,8
tick,0x7ffdf681f424,6154511,0,0x0,8
tick,0x7ffdf681f424,6156507,0,0x0,8
tick,0x7ffdf681f424,6158511,0,0x0,8
tick,0x7ffdf681f424,6160434,0,0x0,8
tick,0x7ffdf681f424,6162451,0,0x0,8
tick,0x7ffdf681f424,6164489,0,0x0,8
tick,0x7ffdf681f424,6166475,0,0x0,8
tick,0x7ffdf681f424,6168489,0,0x0,8
tick,0x7ffdf681f424,6170468,0,0x0,8
tick,0x7ffdf681f424,6172459,0,0x0,8
tick,0x7ffdf681f424,6174454,0,0x0,8
tick,0x7ffdf681f424,6176467,0,0x0,8
tick,0x7ffdf681f424,6178460,0,0x0,8
tick,0x7ffdf681f424,6180440,0,0x0,8
tick,0x7ffdf681f424,6182477,0,0x0,8
tick,0x7ffdf681f424,6184449,0,0x0,8
tick,0x7ffdf681f424,6186332,0,0x0,8
tick,0x7ffdf681f424,6188405,0,0x0,8
tick,0x7ffdf681f424,6190424,0,0x0,8
tick,0x7ffdf681f424,6192408,0,0x0,8
tick,0x7ffdf681f424,6194403,0,0x0,8
tick,0x7ffdf681f424,6196398,0,0x0,8
tick,0x7ffdf681f424,6198392,0,0x0,8
tick,0x7ffdf681f424,6200389,0,0x0,8
tick,0x7ffdf681f424,6202388,0,0x0,8
tick,0x7ffdf681f424,6204452,0,0x0,8
tick,0x7ffdf681f424,6206383,0,0x0,8
tick,0x7ffdf681f424,6208373,0,0x0,8
tick,0x7ffdf681f424,6210366,0,0x0,8
tick,0x7ffdf681f424,6212276,0,0x0,8
tick,0x7ffdf681f424,6214346,0,0x0,8
tick,0x7ffdf681f424,6216357,0,0x0,8
tick,0x7ffdf681f424,6218337,0,0x0,8
tick,0x7ffdf681f424,6220349,0,0x0,8
tick,0x7ffdf681f424,6222206,0,0x0,8
tick,0x7ffdf681f424,6224338,0,0x0,8
tick,0x7ffdf681f424,6226262,0,0x0,8
tick,0x7ffdf681f424,6228167,0,0x0,8
tick,0x7ffdf681f424,6230181,0,0x0,8
tick,0x7ffdf681f424,6232267,0,0x0,8
tick,0x7ffdf681f424,6234301,0,0x0,8
tick,0x7ffdf681f424,6236290,0,0x0,8
tick,0x7ffdf681f424,6238283,0,0x0,8
tick,0x7ffdf681f424,6240282,0,0x0,8
tick,0x7ffdf681f424,6242272,0,0x0,8
tick,0x7ffdf681f424,6244269,0,0x0,8
tick,0x7ffdf681f424,6246266,0,0x0,8
tick,0x7ffdf681f424,6248128,0,0x0,8
tick,0x7ffdf681f424,6250250,0,0x0,8
tick,0x7ffdf681f424,6252248,0,0x0,8
tick,0x7ffdf681f424,6254238,0,0x0,8
tick,0x7ffdf681f424,6256244,0,0x0,8
tick,0x7ffdf681f424,6258231,0,0x0,8
tick,0x7ffdf681f424,6260223,0,0x0,8
tick,0x7ffdf681f424,6262218,0,0x0,8
tick,0x7ffdf681f424,6264218,0,0x0,8
tick,0x7ffdf681f424,6266226,0,0x0,8
tick,0x7ffdf681f424,6268205,0,0x0,8
tick,0x7ffdf681f424,6270264,0,0x0,8
tick,0x7ffdf681f424,6272119,0,0x0,8
tick,0x7ffdf681f424,6274201,0,0x0,8
tick,0x7ffdf681f424,6275997,0,0x0,8
tick,0x7ffdf681f424,6278074,0,0x0,8
tick,0x7ffdf681f424,6280014,0,0x0,8
tick,0x7ffdf681f424,6282051,0,0x0,8
tick,0x7ffdf681f424,6283975,0,0x0,8
tick,0x7ffdf681f424,6286002,0,0x0,8
tick,0x7ffdf681f424,6287972,0,0x0,8
tick,0x7ffdf681f424,6289985,0,0x0,8
tick,0x7ffdf681f424,6291967,0,0x0,8
tick,0x7ffdf681f424,6293932,0,0x0,8
tick,0x7ffdf681f424,6295945,0,0x0,8
tick,0x7ffdf681f424,6298050,0,0x0,8
tick,0x7ffdf681f424,6300020,0,0x0,8
tick,0x7ffdf681f424,6301963,0,0x0,8
tick,0x7ffdf681f424,6303937,0,0x0,8
tick,0x7ffdf681f424,6305975,0,0x0,8
tick,0x7ffdf681f424,6307947,0,0x0,8
tick,0x7ffdf681f424,6309972,0,0x0,8
tick,0x7ffdf681f424,6311963,0,0x0,8
tick,0x7ffdf681f424,6313931,0,0x0,8
tick,0x7ffdf681f424,6315963,0,0x0,8
tick,0x7ffdf681f424,6317978,0,0x0,8
tick,0x7ffdf681f424,6319959,0,0x0,8
tick,0x7ffdf681f424,6321908,0,0x0,8
tick,0x7ffdf681f424,6323913,0,0x0,8
tick,0x7ffdf681f424,6325877,0,0x0,8
tick,0x7ffdf681f424,6327852,0,0x0,8
tick,0x7ffdf681f424,6329972,0,0x0,8
tick,0x7ffdf681f424,6332021,0,0x0,8
tick,0x7ffdf681f424,6334021,0,0x0,8
tick,0x7ffdf681f424,6336051,0,0x0,8
tick,0x7ffdf681f424,6338025,0,0x0,8
tick,0x7ffdf681f424,6339895,0,0x0,8
tick,0x7ffdf681f424,6341891,0,0x0,8
tick,0x7ffdf681f424,6343881,0,0x0,8
tick,0x7ffdf681f424,6345907,0,0x0,8
tick,0x7ffdf681f424,6347957,0,0x0,8
tick,0x7ffdf681f424,6349945,0,0x0,8
tick,0x7ffdf681f424,6351970,0,0x0,8
tick,0x7ffdf681f424,6354009,0,0x0,8
tick,0x7ffdf681f424,6355909,0,0x0,8
tick,0x7ffdf681f424,6357797,0,0x0,8
tick,0x7ffdf681f424,6359796,0,0x0,8
tick,0x7ffdf681f424,6361787,0,0x0,8
tick,0x7ffdf681f424,6363798,0,0x0,8
tick,0x7ffdf681f424,6365743,0,0x0,8
tick,0x7ffdf681f424,6367798,0,0x0,8
tick,0x7ffdf681f424,6369787,0,0x0,8
tick,0x7ffdf681f424,6371790,0,0x0,8
tick,0x7ffdf681f424,6373770,0,0x0,8
tick,0x7ffdf681f424,6375827,0,0x0,8
tick,0x7ffdf681f424,6377984,0,0x0,8
tick,0x7ffdf681f424,6379738,0,0x0,8
tick,0x7ffdf681f424,6381741,0,0x0,8
tick,0x7ffdf681f424,6383770,0,0x0,8
tick,0x7ffdf681f424,6385758,0,0x0,8
tick,0x7ffdf681f424,6387772,0,0x0,8
tick,0x7ffdf681f424,6389773,0,0x0,8
tick,0x7ffdf681f424,6391767,0,0x0,8
tick,0x7ffdf681f424,6393804,0,0x0,8
tick,0x7ffdf681f424,6395790,0,0x0,8
tick,0x7ffdf681f424,6397786,0,0x0,8
tick,0x7ffdf681f424,6399817,0,0x0,8
tick,0x7ffdf681f424,6401696,0,0x0,8
tick,0x7ffdf681f424,6403773,0,0x0,8
tick,0x7ffdf681f424,6405786,0,0x0,8
tick,0x7ffdf681f424,6407764,0,0x0,8
tick,0x7ffdf681f424,6409740,0,0x0,8
tick,0x7ffdf681f424,6411763,0,0x0,8
tick,0x7ffdf681f424,6413779,0,0x0,8
tick,0x7ffdf681f424,6415771,0,0x0,8
tick,0x7ffdf681f424,6417756,0,0x0,8
tick,0x7ffdf681f424,6419764,0,0x0,8
tick,0x7ffdf681f424,6421730,0,0x0,8
tick,0x7ffdf681f424,6423716,0,0x0,8
tick,0x7ffdf681f424,6425768,0,0x0,8
tick,0x7ffdf681f424,6427783,0,0x0,8
tick,0x7ffdf681f424,6429753,0,0x0,8
tick,0x7ffdf681f424,6431756,0,0x0,8
tick,0x7ffdf681f424,6433760,0,0x0,8
tick,0x7ffdf681f424,6435733,0,0x0,8
tick,0x7ffdf681f424,6437732,0,0x0,8
tick,0x7ffdf681f424,6439754,0,0x0,8
tick,0x7ffdf681f424,6441719,0,0x0,8
tick,0x7ffdf681f424,6443716,0,0x0,8
tick,0x7ffdf681f424,6445720,0,0x0,8
tick,0x7ffdf681f424,6447734,0,0x0,8
tick,0x7ffdf681f424,6449690,0,0x0,8
tick,0x7ffdf681f424,6451724,0,0x0,8
tick,0x7ffdf681f424,6453697,0,0x0,8
tick,0x7ffdf681f424,6455679,0,0x0,8
tick,0x7ffdf681f424,6457691,0,0x0,8
tick,0x7ffdf681f424,6459665,0,0x0,8
tick,0x7ffdf681f424,6461682,0,0x0,8
tick,0x7ffdf681f424,6463651,0,0x0,8
tick,0x7ffdf681f424,6465653,0,0x0,8
tick,0x7ffdf681f424,6467629,0,0x0,8
tick,0x7ffdf681f424,6469642,0,0x0,8
tick,0x7ffdf681f424,6471580,0,0x0,8
tick,0x7ffdf681f424,6473546,0,0x0,8
tick,0x7ffdf681f424,6475647,0,0x0,8
tick,0x7ffdf681f424,6477659,0,0x0,8
tick,0x7ffdf681f424,6479606,0,0x0,8
tick,0x7ffdf681f424,6481631,0,0x0,8
tick,0x7ffdf681f424,6483574,0,0x0,8
tick,0x7ffdf681f424,6485603,0,0x0,8
tick,0x7ffdf681f424,6487592,0,0x0,8
tick,0x7ffdf681f424,6489628,0,0x0,8
tick,0x7ffdf681f424,6491599,0,0x0,8
tick,0x7ffdf681f424,6493556,0,0x0,8
tick,0x7ffdf681f424,6495593,0,0x0,8
tick,0x7ffdf681f424,6497499,0,0x0,8
tick,0x7ffdf681f424,6499508,0,0x0,8
tick,0x7ffdf681f424,6501580,0,0x0,8
tick,0x7ffdf681f424,6503556,0,0x0,8
tick,0x7ffdf681f424,6505594,0,0x0,8
tick,0x7ffdf681f424,6507564,0,0x0,8
tick,0x7ffdf681f424,6509511,0,0x0,8
tick,0x7ffdf681f424,6511555,0,0x0,8
tick,0x7ffdf681f424,6513502,0,0x0,8
tick,0x7ffdf681f424,6515513,0,0x0,8
tick,0x7ffdf681f424,6517517,0,0x0,8
tick,0x7ffdf681f424,6519463,0,0x0,8
tick,0x7ffdf681f424,6521425,0,0x0,8
tick,0x7ffdf681f424,6523496,0,0x0,8
tick,0x7ffdf681f424,6525475,0,0x0,8
tick,0x7ffdf681f424,6527480,0,0x0,8
tick,0x7ffdf681f424,6529485,0,0x0,8
tick,0x7ffdf681f424,6531442,0,0x0,8
tick,0x7ffdf681f424,6533478,0,0x0,8
tick,0x7ffdf681f424,6535454,0,0x0,8
tick,0x7ffdf681f424,6537438,0,0x0,8
tick,0x7ffdf681f424,6539434,0,0x0,8
tick,0x7ffdf681f424,6541430,0,0x0,8
tick,0x7ffdf681f424,6543455,0,0x0,8
tick,0x7ffdf681f424,6545406,0,0x0,8
tick,0x7ffdf681f424,6547444,0,0x0,8
tick,0x7ffdf681f424,6549429,0,0x0,8
tick,0x7ffdf681f424,6551413,0,0x0,8
tick,0x7ffdf681f424,6553377,0,0x0,8
tick,0x7ffdf681f424,6555401,0,0x0,8
tick,0x7ffdf681f424,6557388,0,0x0,8
tick,0x7ffdf681f424,6559351,0,0x0,8
tick,0x7ffdf681f424,6561397,0,0x0,8
tick,0x7ffdf681f424,6563368,0,0x0,8
tick,0x7ffdf681f424,6565413,0,0x0,8
tick,0x7ffdf681f424,6567355,0,0x0,8
tick,0x7ffdf681f424,6569367,0,0x0,8
tick,0x7ffdf681f424,6571368,0,0x0,8
tick,0x7ffdf681f424,6573355,0,0x0,8
tick,0x7ffdf681f424,6575378,0,0x0,8
tick,0x7ffdf681f424,6577329,0,0x0,8
tick,0x7ffdf681f424,6579352,0,0x0,8
tick,0x7ffdf681f424,6581318,0,0x0,8
tick,0x7ffdf681f424,6583310,0,0x0,8
tick,0x7ffdf681f424,6585222,0,0x0,8
tick,0x7ffdf681f424,6587316,0,0x0,8
tick,0x7ffdf681f424,6589279,0,0x0,8
tick,0x7ffdf681f424,6591299,0,0x0,8
tick,0x7ffdf681f424,6593316,0,0x0,8
tick,0x7ffdf681f424,6595312,0,0x0,8
tick,0x7ffdf681f424,6597263,0,0x0,8
tick,0x7ffdf681f424,6599329,0,0x0,8
tick,0x7ffdf681f424,6601251,0,0x0,8
tick,0x7ffdf681f424,6603276,0,0x0,8
tick,0x7ffdf681f424,6605272,0,0x0,8
tick,0x7ffdf681f424,6607239,0,0x0,8
tick,0x7ffdf681f424,6609188,0,0x0,8
tick,0x7ffdf681f424,6611172,0,0x0,8
tick,0x7ffdf681f424,6613170,0,0x0,8
tick,0x7ffdf681f424,6615180,0,0x0,8
tick,0x7ffdf681f424,6617159,0,0x0,8
tick,0x7ffdf681f424,6619206,0,0x0,8
tick,0x7ffdf681f424,6621149,0,0x0,8
tick,0x7ffdf681f424,6623211,0,0x0,8
tick,0x7ffdf681f424,6625134,0,0x0,8
tick,0x7ffdf681f424,6627209,0,0x0,8
tick,0x7ffdf681f424,6629172,0,0x0,8
tick,0x7ffdf681f424,6631093,0,0x0,8
tick,0x7ffdf681f424,6633223,0,0x0,8
tick,0x7ffdf681f424,6635164,0,0x0,8
tick,0x7ffdf681f424,6637168,0,0x0,8
tick,0x7ffdf681f424,6639158,0,0x0,8
tick,0x7ffdf681f424,6641187,0,0x0,8
tick,0x7ffdf681f424,6643137,0,0x0,8
tick,0x7ffdf681f424,6645166,0,0x0,8
tick,0x7ffdf681f424,6647150,0,0x0,8
tick,0x7ffdf681f424,6649152,0,0x0,8
tick,0x7ffdf681f424,6651147,0,0x0,8
tick,0x7ffdf681f424,6653200,0,0x0,8
tick,0x7ffdf681f424,6655113,0,0x0,8
tick,0x7ffdf681f424,6657161,0,0x0,8
tick,0x7ffdf681f424,6659107,0,0x0,8
tick,0x7ffdf681f424,6661104,0,0x0,8
tick,0x7ffdf681f424,6663113,0,0x0,8
tick,0x7ffdf681f424,6665108,0,0x0,8
tick,0x7ffdf681f424,6667109,0,0x0,8
tick,0x7ffdf681f424,6669076,0,0x0,8
tick,0x7ffdf681f424,6671122,0,0x0,8
tick,0x7ffdf681f424,6673095,0,0x0,8
tick,0x7ffdf681f424,6675064,0,0x0,8
tick,0x7ffdf681f424,6677058,0,0x0,8
tick,0x7ffdf681f424,6679084,0,0x0,8
tick,0x7ffdf681f424,6680961,0,0x0,8
tick,0x7ffdf681f424,6682962,0,0x0,8
tick,0x7ffdf681f424,6685024,0,0x0,8
tick,0x7ffdf681f424,6686946,0,0x0,8
tick,0x7ffdf681f424,6688967,0,0x0,8
tick,0x7ffdf681f424,6690940,0,0x0,8
tick,0x7ffdf681f424,6692995,0,0x0,8
tick,0x7ffdf681f424,6694924,0,0x0,8
tick,0x7ffdf681f424,6696982,0,0x0,8
tick,0x7ffdf681f424,6698979,0,0x0,8
tick,0x7ffdf681f424,6700913,0,0x0,8
tick,0x7ffdf681f424,6702962,0,0x0,8
tick,0x7ffdf681f424,6704892,0,0x0,8
tick,0x7ffdf681f424,6707014,0,0x0,8
tick,0x7ffdf681f424,6708964,0,0x0,8
tick,0x7ffdf681f424,6711006,0,0x0,8
tick,0x7ffdf681f424,6712963,0,0x0,8
tick,0x7ffdf681f424,6714975,0,0x0,8
tick,0x7ffdf681f424,6716966,0,0x0,8
tick,0x7ffdf681f424,6719015,0,0x0,8
tick,0x7ffdf681f424,6720954,0,0x0,8
tick,0x7ffdf681f424,6722966,0,0x0,8
tick,0x7ffdf681f424,6724949,0,0x0,8
tick,0x7ffdf681f424,6726929,0,0x0,8
tick,0x7ffdf681f424,6728922,0,0x0,8
tick,0x7ffdf681f424,6730884,0,0x0,8
tick,0x7ffdf681f424,6732931,0,0x0,8
tick,0x7ffdf681f424,6734892,0,0x0,8
tick,0x7ffdf681f424,6736912,0,0x0,8
tick,0x7ffdf681f424,6738904,0,0x0,8
tick,0x7ffdf681f424,6740845,0,0x0,8
tick,0x7ffdf681f424,6742847,0,0x0,8
tick,0x7ffdf681f424,6744905,0,0x0,8
tick,0x7ffdf681f424,6746888,0,0x0,8
tick,0x7ffdf681f424,6748870,0,0x0,8
tick,0x7ffdf681f424,6750865,0,0x0,8
tick,0x7ffdf681f424,6752879,0,0x0,8
tick,0x7ffdf681f424,6754874,0,0x0,8
tick,0x7ffdf681f424,6756873,0,0x0,8
tick,0x7ffdf681f424,6758877,0,0x0,8
tick,0x7ffdf681f424,6760841,0,0x0,8
tick,0x7ffdf681f424,6762835,0,0x0,8
tick,0x7ffdf681f424,6764823,0,0x0,8
tick,0x7ffdf681f424,6766755,0,0x0,8
tick,0x7ffdf681f424,6768856,0,0x0,8
tick,0x7ffdf681f424,6770871,0,0x0,8
tick,0x7ffdf681f424,6772784,0,0x0,8
tick,0x7ffdf681f424,6774823,0,0x0,8
tick,0x7ffdf681f424,6776853,0,0x0,8
tick,0x7ffdf681f424,6778875,0,0x0,8
tick,0x7ffdf681f424,6780828,0,0x0,8
tick,0x7ffdf681f424,6782830,0,0x0,8
tick,0x7ffdf681f424,6784812,0,0x0,8
tick,0x7ffdf681f424,6786811,0,0x0,8
tick,0x7ffdf681f424,6788817,0,0x0,8
tick,0x7ffdf681f424,6790808,0,0x0,8
tick,0x7ffdf681f424,6792825,0,0x0,8
tick,0x7ffdf681f424,6794668,0,0x0,8
tick,0x7ffdf681f424,6796720,0,0x0,8
tick,0x7ffdf681f424,6798812,0,0x0,8
tick,0x7ffdf681f424,6800805,0,0x0,8
tick,0x7ffdf681f424,6802798,0,0x0,8
tick,0x7ffdf681f424,6804842,0,0x0,8
tick,0x7ffdf681f424,6806748,0,0x0,8
tick,0x7ffdf681f424,6808707,0,0x0,8
tick,0x7ffdf681f424,6810683,0,0x0,8
tick,0x7ffdf681f424,6812663,0,0x0,8
tick,0x7ffdf681f424,6814594,0,0x0,8
tick,0x7ffdf681f424,6816589,0,0x0,8
tick,0x7ffdf681f424,6818581,0,0x0,8
tick,0x7ffdf681f424,6820685,0,0x0,8
tick,0x7ffdf681f424,6822676,0,0x0,8
tick,0x7ffdf681f424,6824750,0,0x0,8
tick,0x7ffdf681f424,6826670,0,0x0,8
tick,0x7ffdf681f424,6828655,0,0x0,8
tick,0x7ffdf681f424,6830657,0,0x0,8
tick,0x7ffdf681f424,6832646,0,0x0,8
tick,0x7ffdf681f424,6834709,0,0x0,8
tick,0x7ffdf681f424,6836597,0,0x0,8
tick,0x7ffdf681f424,6838627,0,0x0,8
tick,0x7ffdf681f424,6840646,0,0x0,8
tick,0x7ffdf681f424,6842631,0,0x0,8
tick,0x7ffdf681f424,6844661,0,0x0,8
tick,0x7ffdf681f424,6846604,0,0x0,8
tick,0x7ffdf681f424,6848625,0,0x0,8
tick,0x7ffdf681f424,6850600,0,0x0,8
tick,0x7ffdf681f424,6852610,0,0x0,8
tick,0x7ffdf681f424,6854587,0,0x0,8
tick,0x7ffdf681f424,6856616,0,0x0,8
tick,0x7ffdf681f424,6858511,0,0x0,8
tick,0x7ffdf681f424,6860509,0,0x0,8
tick,0x7ffdf681f424,6862551,0,0x0,8
tick,0x7ffdf681f424,6864493,0,0x0,8
tick,0x7ffdf681f424,6866557,0,0x0,8
tick,0x7ffdf681f424,6868611,0,0x0,8
tick,0x7ffdf681f424,6870508,0,0x0,8
tick,0x7ffdf681f424,6872534,0,0x0,8
tick,0x7ffdf681f424,6874526,0,0x0,8
tick,0x7ffdf681f424,6876619,0,0x0,8
tick,0x7ffdf681f424,6878593,0,0x0,8
tick,0x7ffdf681f424,6880565,0,0x0,8
tick,0x7ffdf681f424,6882595,0,0x0,8
tick,0x7ffdf681f424,6884563,0,0x0,8
tick,0x7ffdf681f424,6886563,0,0x0,8
tick,0x7ffdf681f424,6888562,0,0x0,8
tick,0x7ffdf681f424,6890546,0,0x0,8
tick,0x7ffdf681f424,6892550,0,0x0,8
tick,0x7ffdf681f424,6894560,0,0x0,8
tick,0x7ffdf681f424,6896516,0,0x0,8
tick,0x7ffdf681f424,6898543,0,0x0,8
tick,0x7ffdf681f424,6900541,0,0x0,8
tick,0x7ffdf681f424,6902487,0,0x0,8
tick,0x7ffdf681f424,6904503,0,0x0,8
tick,0x7ffdf681f424,6906484,0,0x0,8
tick,0x7ffdf681f424,6908405,0,0x0,8
tick,0x7ffdf681f424,6910452,0,0x0,8
tick,0x7ffdf681f424,6912486,0,0x0,8
tick,0x7ffdf681f424,6914447,0,0x0,8
tick,0x7ffdf681f424,6916425,0,0x0,8
tick,0x7ffdf681f424,6918407,0,0x0,8
tick,0x7ffdf681f424,6920429,0,0x0,8
tick,0x7ffdf681f424,6922410,0,0x0,8
tick,0x7ffdf681f424,6924398,0,0x0,8
tick,0x7ffdf681f424,6926324,0,0x0,8
tick,0x7ffdf681f424,6928407,0,0x0,8
tick,0x7ffdf681f424,6930389,0,0x0,8
tick,0x7ffdf681f424,6932378,0,0x0,8
tick,0x7ffdf681f424,6934339,0,0x0,8
tick,0x7ffdf681f424,6936317,0,0x0,8
tick,0x7ffdf681f424,6938431,0,0x0,8
tick,0x7ffdf681f424,6940440,0,0x0,8
tick,0x7ffdf681f424,6942414,0,0x0,8
tick,0x7ffdf681f424,6944403,0,0x0,8
tick,0x7ffdf681f424,6946399,0,0x0,8
tick,0x7ffdf681f424,6948407,0,0x0,8
tick,0x7ffdf681f424,6950376,0,0x0,8
tick,0x7ffdf681f424,6952380,0,0x0,8
tick,0x7ffdf681f424,6954386,0,0x0,8
tick,0x7ffdf681f424,6956366,0,0x0,8
tick,0x7ffdf681f424,6958379,0,0x0,8
tick,0x7ffdf681f424,6960376,0,0x0,8
tick,0x7ffdf681f424,6962352,0,0x0,8
tick,0x7ffdf681f424,6964377,0,0x0,8
tick,0x7ffdf681f424,6966337,0,0x0,8
tick,0x7ffdf681f424,6968318,0,0x0,8
tick,0x7ffdf681f424,6970226,0,0x0,8
tick,0x7ffdf681f424,6972212,0,0x0,8
tick,0x7ffdf681f424,6974287,0,0x0,8
tick,0x7ffdf681f424,6976261,0,0x0,8
tick,0x7ffdf681f424,6978200,0,0x0,8
tick,0x7ffdf681f424,6980302,0,0x0,8
tick,0x7ffdf681f424,6982235,0,0x0,8
tick,0x7ffdf681f424,6984255,0,0x0,8
tick,0x7ffdf681f424,6986249,0,0x0,8
tick,0x7ffdf681f424,6988218,0,0x0,8
tick,0x7ffdf681f424,6990240,0,0x0,8
tick,0x7ffdf681f424,6992210,0,0x0,8
tick,0x7ffdf681f424,6994199,0,0x0,8
tick,0x7ffdf681f424,6996207,0,0x0,8
tick,0x7ffdf681f424,6998146,0,0x0,8
tick,0x7ffdf681f424,7000217,0,0x0,8
tick,0x7ffdf681f424,7002197,0,0x0,8
tick,0x7ffdf681f424,7004195,0,0x0,8
tick,0x7ffdf681f424,7006171,0,0x0,8
tick,0x7ffdf681f424,7008191,0,0x0,8
tick,0x7ffdf681f424,7010169,0,0x0,8
tick,0x7ffdf681f424,7012172,0,0x0,8
tick,0x7ffdf681f424,7014159,0,0x0,8
tick,0x7ffdf681f424,7016175,0,0x0,8
tick,0x7ffdf681f424,7018190,0,0x0,8
tick,0x7ffdf681f424,7020202,0,0x0,8
tick,0x7ffdf681f424,7022211,0,0x0,8
tick,0x7ffdf681f424,7024206,0,0x0,8
tick,0x7ffdf681f424,7026185,0,0x0,8
tick,0x7ffdf681f424,7028179,0,0x0,8
tick,0x7ffdf681f424,7030194,0,0x0,8
tick,0x7ffdf681f424,7032135,0,0x0,8
tick,0x7ffdf681f424,7034144,0,0x0,8
tick,0x7ffdf681f424,7036138,0,0x0,8
tick,0x7ffdf681f424,7038166,0,0x0,8
tick,0x7ffdf681f424,7040165,0,0x0,8
tick,0x7ffdf681f424,7042119,0,0x0,8
tick,0x7ffdf681f424,7044156,0,0x0,8
tick,0x7ffdf681f424,7046148,0,0x0,8
tick,0x7ffdf681f424,7048166,0,0x0,8
tick,0x7ffdf681f424,7050145,0,0x0,8
tick,0x7ffdf681f424,7052129,0,0x0,8
tick,0x7ffdf681f424,7054124,0,0x0,8
tick,0x7ffdf681f424,7056110,0,0x0,8
tick,0x7ffdf681f424,7058145,0,0x0,8
tick,0x7ffdf681f424,7060081,0,0x0,8
tick,0x7ffdf681f424,7062061,0,0x0,8
tick,0x7ffdf681f424,7064074,0,0x0,8
tick,0x7ffdf681f424,7066090,0,0x0,8
tick,0x7ffdf681f424,7068083,0,0x0,8
tick,0x7ffdf681f424,7070001,0,0x0,8
tick,0x7ffdf681f424,7072029,0,0x0,8
tick,0x7ffdf681f424,7073996,0,0x0,8
tick,0x7ffdf681f424,7076016,0,0x0,8
tick,0x7ffdf681f424,7077979,0,0x0,8
tick,0x7ffdf681f424,7080002,0,0x0,8
tick,0x7ffdf681f424,7081971,0,0x0,8
tick,0x7ffdf681f424,7083963,0,0x0,8
tick,0x7ffdf681f424,7085966,0,0x0,8
tick,0x7ffdf681f424,7087952,0,0x0,8
tick,0x7ffdf681f424,7089953,0,0x0,8
tick,0x7ffdf681f424,7091954,0,0x0,8
tick,0x7ffdf681f424,7093993,0,0x0,8
tick,0x7ffdf681f424,7095924,0,0x0,8
tick,0x7ffdf681f424,7097919,0,0x0,8
tick,0x7ffdf681f424,7099936,0,0x0,8
tick,0x7ffdf681f424,7101936,0,0x0,8
tick,0x7ffdf681f424,7103927,0,0x0,8
tick,0x7ffdf681f424,7105939,0,0x0,8
tick,0x7ffdf681f424,7107974,0,0x0,8
tick,0x7ffdf681f424,7109955,0,0x0,8
tick,0x7ffdf681f424,7111967,0,0x0,8
tick,0x7ffdf681f424,7113935,0,0x0,8
tick,0x7ffdf681f424,7115943,0,0x0,8
tick,0x7ffdf681f424,7117959,0,0x0,8
tick,0x7ffdf681f424,7119951,0,0x0,8
tick,0x7ffdf681f424,7121948,0,0x0,8
tick,0x7ffdf681f424,7123934,0,0x0,8
tick,0x7ffdf681f424,7125921,0,0x0,8
tick,0x7ffdf681f424,7127948,0,0x0,8
tick,0x7ffdf681f424,7129817,0,0x0,8
tick,0x7ffdf681f424,7131882,0,0x0,8
tick,0x7ffdf681f424,7133893,0,0x0,8
tick,0x7ffdf681f424,7135913,0,0x0,8
tick,0x7ffdf681f424,7137884,0,0x0,8
tick,0x7ffdf681f424,7139901,0,0x0,8
tick,0x7ffdf681f424,7141875,0,0x0,8
tick,0x7ffdf681f424,7143891,0,0x0,8
tick,0x7ffdf681f424,7145867,0,0x0,8
tick,0x7ffdf681f424,7147856,0,0x0,8
tick,0x7ffdf681f424,7149854,0,0x0,8
tick,0x7ffdf681f424,7151826,0,0x0,8
tick,0x7ffdf681f424,7153856,0,0x0,8
tick,0x7ffdf681f424,7155847,0,0x0,8
tick,0x7ffdf681f424,7157834,0,0x0,8
tick,0x7ffdf681f424,7159862,0,0x0,8
tick,0x7ffdf681f424,7161867,0,0x0,8
tick,0x7ffdf681f424,7163809,0,0x0,8
tick,0x7ffdf681f424,7165813,0,0x0,8
tick,0x7ffdf681f424,7167838,0,0x0,8
tick,0x7ffdf681f424,7169791,0,0x0,8
tick,0x7ffdf681f424,7171865,0,0x0,8
tick,0x7ffdf681f424,7173853,0,0x0,8
tick,0x7ffdf681f424,7175796,0,0x0,8
tick,0x7ffdf681f424,7177739,0,0x0,8
tick,0x7ffdf681f424,7179789,0,0x0,8
tick,0x7ffdf681f424,7181750,0,0x0,8
tick,0x7ffdf681f424,7183725,0,0x0,8
tick,0x7ffdf681f424,7185702,0,0x0,8
tick,0x7ffdf681f424,7187748,0,0x0,8
tick,0x7ffdf681f424,7189780,0,0x0,8
tick,0x7ffdf681f424,7191750,0,0x0,8
tick,0x7ffdf681f424,7193759,0,0x0,8
tick,0x7ffdf681f424,7195761,0,0x0,8
tick,0x7ffdf681f424,7197715,0,0x0,8
tick,0x7ffdf681f424,7199725,0,0x0,8
tick,0x7ffdf681f424,7201714,0,0x0,8
tick,0x7ffdf681f424,7203716,0,0x0,8
tick,0x7ffdf681f424,7205740,0,0x0,8
tick,0x7ffdf681f424,7207698,0,0x0,8
tick,0x7ffdf681f424,7209710,0,0x0,8
tick,0x7ffdf681f424,7211694,0,0x0,8
tick,0x7ffdf681f424,7213705,0,0x0,8
tick,0x7ffdf681f424,7215681,0,0x0,8
tick,0x7ffdf681f424,7217672,0,0x0,8
tick,0x7ffdf681f424,7219666,0,0x0,8
tick,0x7ffdf681f424,7221681,0,0x0,8
tick,0x7ffdf681f424,7223678,0,0x0,8
tick,0x7ffdf681f424,7225656,0,0x0,8
tick,0x7ffdf681f424,7227574,0,0x0,8
tick,0x7ffdf681f424,7229609,0,0x0,8
tick,0x7ffdf681f424,7231657,0,0x0,8
tick,0x7ffdf681f424,7233671,0,0x0,8
tick,0x7ffdf681f424,7235641,0,0x0,8
tick,0x7ffdf681f424,7237657,0,0x0,8
tick,0x7ffdf681f424,7239631,0,0x0,8
tick,0x7ffdf681f424,7241624,0,0x0,8
tick,0x7ffdf681f424,7243607,0,0x0,8
tick,0x7ffdf681f424,7245588,0,0x0,8
tick,0x7ffdf681f424,7247600,0,0x0,8
tick,0x7ffdf681f424,7249584,0,0x0,8
tick,0x7ffdf681f424,7251613,0,0x0,8
tick,0x7ffdf681f424,7253609,0,0x0,8
tick,0x7ffdf681f424,7255587,0,0x0,8
tick,0x7ffdf681f424,7257592,0,0x0,8
tick,0x7ffdf681f424,7259601,0,0x0,8
tick,0x7ffdf681f424,7261580,0,0x0,8
tick,0x7ffdf681f424,7263548,0,0x0,8
tick,0x7ffdf681f424,7265539,0,0x0,8
tick,0x7ffdf681f424,7267542,0,0x0,8
tick,0x7ffdf681f424,7269553,0,0x0,8
tick,0x7ffdf681f424,7271592,0,0x0,8
tick,0x7ffdf681f424,7273553,0,0x0,8
tick,0x7ffdf681f424,7275520,0,0x0,8
tick,0x7ffdf681f424,7277524,0,0x0,8
tick,0x7ffdf681f424,7279496,0,0x0,8
tick,0x7ffdf681f424,7281515,0,0x0,8
tick,0x7ffdf681f424,7283463,0,0x0,8
tick,0x7ffdf681f424,7285486,0,0x0,8
tick,0x7ffdf681f424,7287501,0,0x0,8
tick,0x7ffdf681f424,7289495,0,0x0,8
tick,0x7ffdf681f424,7291499,0,0x0,8
tick,0x7ffdf681f424,7293380,0,0x0,8
tick,0x7ffdf681f424,7295484,0,0x0,8
tick,0x7ffdf681f424,7297452,0,0x0,8
tick,0x7ffdf681f424,7299476,0,0x0,8
tick,0x7ffdf681f424,7301445,0,0x0,8
tick,0x7ffdf681f424,7303476,0,0x0,8
tick,0x7ffdf681f424,7305424,0,0x0,8
tick,0x7ffdf681f424,7307442,0,0x0,8
tick,0x7ffdf681f424,7309387,0,0x0,8
tick,0x7ffdf681f424,7311428,0,0x0,8
tick,0x7ffdf681f424,7313395,0,0x0,8
tick,0x7ffdf681f424,7315409,0,0x0,8
tick,0x7ffdf681f424,7317447,0,0x0,8
tick,0x7ffdf681f424,7319363,0,0x0,8
tick,0x7ffdf681f424,7321419,0,0x0,8
tick,0x7ffdf681f424,7323365,0,0x0,8
tick,0x7ffdf681f424,7325418,0,0x0,8
tick,0x7ffdf681f424,7327354,0,0x0,8
tick,0x7ffdf681f424,7329381,0,0x0,8
tick,0x7ffdf681f424,7331301,0,0x0,8
tick,0x7ffdf681f424,7333369,0,0x0,8
tick,0x7ffdf681f424,7335374,0,0x0,8
tick,0x7ffdf681f424,7337370,0,0x0,8
tick,0x7ffdf681f424,7339370,0,0x0,8
tick,0x7ffdf681f424,7341331,0,0x0,8
tick,0x7ffdf681f424,7343357,0,0x0,8
tick,0x7ffdf681f424,7345329,0,0x0,8
tick,0x7ffdf681f424,7347337,0,0x0,8
tick,0x7ffdf681f424,7349320,0,0x0,8
tick,0x7ffdf681f424,7351305,0,0x0,8
tick,0x7ffdf681f424,7353255,0,0x0,8
tick,0x7ffdf681f424,7355309,0,0x0,8
tick,0x7ffdf681f424,7357279,0,0x0,8
tick,0x7ffdf681f424,7359225,0,0x0,8
tick,0x7ffdf681f424,7361304,0,0x0,8
tick,0x7ffdf681f424,7363289,0,0x0,8
tick,0x7ffdf681f424,7365319,0,0x0,8
tick,0x7ffdf681f424,7367278,0,0x0,8
tick,0x7ffdf681f424,7369207,0,0x0,8
tick,0x7ffdf681f424,7371295,0,0x0,8
tick,0x7ffdf681f424,7373269,0,0x0,8
tick,0x7ffdf681f424,7375264,0,0x0,8
tick,0x7ffdf681f424,7377290,0,0x0,8
tick,0x7ffdf681f424,7379258,0,0x0,8
tick,0x7ffdf681f424,7381218,0,0x0,8
tick,0x7ffdf681f424,7383245,0,0x0,8
tick,0x7ffdf681f424,7385246,0,0x0,8
tick,0x7ffdf681f424,7387233,0,0x0,8
tick,0x7ffdf681f424,7389203,0,0x0,8
tick,0x7ffdf681f424,7391128,0,0x0,8
tick,0x7ffdf681f424,7393221,0,0x0,8
tick,0x7ffdf681f424,7395258,0,0x0,8
tick,0x7ffdf681f424,7397215,0,0x0,8
tick,0x7ffdf681f424,7399201,0,0x0,8
tick,0x7ffdf681f424,7401261,0,0x0,8
tick,0x7ffdf681f424,7403196,0,0x0,8
tick,0x7ffdf681f424,7405213,0,0x0,8
tick,0x7ffdf681f424,7407151,0,0x0,8
tick,0x7ffdf681f424,7409106,0,0x0,8
tick,0x7ffdf681f424,7411177,0,0x0,8
tick,0x7ffdf681f424,7413177,0,0x0,8
tick,0x7ffdf681f424,7415158,0,0x0,8
tick,0x7ffdf681f424,7417142,0,0x0,8
tick,0x7ffdf681f424,7419161,0,0x0,8
tick,0x7ffdf681f424,7421149,0,0x0,8
tick,0x7ffdf681f424,7423124,0,0x0,8
tick,0x7ffdf681f424,7425145,0,0x0,8
tick,0x7ffdf681f424,7427136,0,0x0,8
tick,0x7ffdf681f424,7429094,0,0x0,8
tick,0x7ffdf681f424,7431119,0,0x0,8
tick,0x7ffdf681f424,7433123,0,0x0,8
tick,0x7ffdf681f424,7435105,0,0x0,8
tick,0x7ffdf681f424,7437103,0,0x0,8
tick,0x7ffdf681f424,7439077,0,0x0,8
tick,0x7ffdf681f424,7441061,0,0x0,8
tick,0x7ffdf681f424,7443092,0,0x0,8
tick,0x7ffdf681f424,7445018,0,0x0,8
tick,0x7ffdf681f424,7447077,0,0x0,8
tick,0x7ffdf681f424,7449075,0,0x0,8
tick,0x7ffdf681f424,7451049,0,0x0,8
tick,0x7ffdf681f424,7453072,0,0x0,8
tick,0x7ffdf681f424,7455015,0,0x0,8
tick,0x7ffdf681f424,7457040,0,0x0,8
tick,0x7ffdf681f424,7458994,0,0x0,8
tick,0x7ffdf681f424,7461049,0,0x0,8
tick,0x7ffdf681f424,7463054,0,0x0,8
tick,0x7ffdf681f424,7464991,0,0x0,8
tick,0x7ffdf681f424,7467024,0,0x0,8
tick,0x7ffdf681f424,7468999,0,0x0,8
tick,0x7ffdf681f424,7470969,0,0x0,8
tick,0x7ffdf681f424,7473000,0,0x0,8
tick,0x7ffdf681f424,7474978,0,0x0,8
tick,0x7ffdf681f424,7477000,0,0x0,8
tick,0x7ffdf681f424,7478989,0,0x0,8
tick,0x7ffdf681f424,7480944,0,0x0,8
tick,0x7ffdf681f424,7482965,0,0x0,8
tick,0x7ffdf681f424,7484954,0,0x0,8
tick,0x7ffdf681f424,7486961,0,0x0,8
tick,0x7ffdf681f424,7488890,0,0x0,8
tick,0x7ffdf681f424,7490951,0,0x0,8
tick,0x7ffdf681f424,7492928,0,0x0,8
tick,0x7ffdf681f424,7494953,0,0x0,8
tick,0x7ffdf681f424,7496932,0,0x0,8
tick,0x7ffdf681f424,7498960,0,0x0,8
tick,0x7ffdf681f424,7500936,0,0x0,8
tick,0x7ffdf681f424,7502939,0,0x0,8
tick,0x7ffdf681f424,7504909,0,0x0,8
tick,0x7ffdf681f424,7506908,0,0x0,8
tick,0x7ffdf681f424,7508891,0,0x0,8
tick,0x7ffdf681f424,7510932,0,0x0,8
tick,0x7ffdf681f424,7512877,0,0x0,8
tick,0x7ffdf681f424,7514894,0,0x0,8
tick,0x7ffdf681f424,7516877,0,0x0,8
tick,0x7ffdf681f424,7518875,0,0x0,8
tick,0x7ffdf681f424,7520893,0,0x0,8
tick,0x7ffdf681f424,7522881,0,0x0,8
tick,0x7ffdf681f424,7524888,0,0x0,8
tick,0x7ffdf681f424,7526880,0,0x0,8
tick,0x7ffdf681f424,7528882,0,0x0,8
tick,0x7ffdf681f424,7530836,0,0x0,8
tick,0x7ffdf681f424,7532893,0,0x0,8
tick,0x7ffdf681f424,7534828,0,0x0,8
tick,0x7ffdf681f424,7536817,0,0x0,8
tick,0x7ffdf681f424,7538834,0,0x0,8
tick,0x7ffdf681f424,7540800,0,0x0,8
tick,0x7ffdf681f424,7542822,0,0x0,8
tick,0x7ffdf681f424,7544832,0,0x0,8
tick,0x7ffdf681f424,7546794,0,0x0,8
tick,0x7ffdf681f424,7548798,0,0x0,8
tick,0x7ffdf681f424,7550765,0,0x0,8
tick,0x7ffdf681f424,7552766,0,0x0,8
tick,0x7ffdf681f424,7554758,0,0x0,8
tick,0x7ffdf681f424,7556780,0,0x0,8
tick,0x7ffdf681f424,7558795,0,0x0,8
tick,0x7ffdf681f424,7560746,0,0x0,8
tick,0x7ffdf681f424,7562757,0,0x0,8
tick,0x7ffdf681f424,7564761,0,0x0,8
tick,0x7ffdf681f424,7566749,0,0x0,8
tick,0x7ffdf681f424,7568657,0,0x0,8
tick,0x7ffdf681f424,7570715,0,0x0,8
tick,0x7ffdf681f424,7572723,0,0x0,8
tick,0x7ffdf681f424,7574708,0,0x0,8
tick,0x7ffdf681f424,7576737,0,0x0,8
tick,0x7ffdf681f424,7578682,0,0x0,8
tick,0x7ffdf681f424,7580640,0,0x0,8
tick,0x7ffdf681f424,7582755,0,0x0,8
tick,0x7ffdf681f424,7584701,0,0x0,8
tick,0x7ffdf681f424,7586653,0,0x0,8
tick,0x7ffdf681f424,7588696,0,0x0,8
tick,0x7ffdf681f424,7590698,0,0x0,8
tick,0x7ffdf681f424,7592568,0,0x0,8
tick,0x7ffdf681f424,7594616,0,0x0,8
tick,0x7ffdf681f424,7596574,0,0x0,8
tick,0x7ffdf681f424,7598581,0,0x0,8
tick,0x7ffdf681f424,7600572,0,0x0,8
tick,0x7ffdf681f424,7602590,0,0x0,8
tick,0x7ffdf681f424,7604556,0,0x0,8
tick,0x7ffdf681f424,7606537,0,0x0,8
tick,0x7ffdf681f424,7608549,0,0x0,8
tick,0x7ffdf681f424,7610613,0,0x0,8
tick,0x7ffdf681f424,7612566,0,0x0,8
tick,0x7ffdf681f424,7614612,0,0x0,8
tick,0x7ffdf681f424,7616567,0,0x0,8
tick,0x7ffdf681f424,7618613,0,0x0,8
tick,0x7ffdf681f424,7620577,0,0x0,8
tick,0x7ffdf681f424,7622501,0,0x0,8
tick,0x7ffdf681f424,7624571,0,0x0,8
tick,0x7ffdf681f424,7626583,0,0x0,8
tick,0x7ffdf681f424,7628593,0,0x0,8
tick,0x7ffdf681f424,7630554,0,0x0,8
tick,0x7ffdf681f424,7632547,0,0x0,8
tick,0x7ffdf681f424,7634544,0,0x0,8
tick,0x7ffdf681f424,7636529,0,0x0,8
tick,0x7ffdf681f424,7638527,0,0x0,8
tick,0x7ffdf681f424,7640549,0,0x0,8
tick,0x7ffdf681f424,7642525,0,0x0,8
tick,0x7ffdf681f424,7644503,0,0x0,8
tick,0x7ffdf681f424,7646518,0,0x0,8
tick,0x7ffdf681f424,7648502,0,0x0,8
tick,0x7ffdf681f424,7650450,0,0x0,8
tick,0x7ffdf681f424,7652552,0,0x0,8
tick,0x7ffdf681f424,7654513,0,0x0,8
tick,0x7ffdf681f424,7656399,0,0x0,8
tick,0x7ffdf681f424,7658392,0,0x0,8
tick,0x7ffdf681f424,7660460,0,0x0,8
tick,0x7ffdf681f424,7662456,0,0x0,8
tick,0x7ffdf681f424,7664381,0,0x0,8
tick,0x7ffdf681f424,7666380,0,0x0,8
tick,0x7ffdf681f424,7668418,0,0x0,8
tick,0x7ffdf681f424,7670448,0,0x0,8
tick,0x7ffdf681f424,7672378,0,0x0,8
tick,0x7ffdf681f424,7674377,0,0x0,8
tick,0x7ffdf681f424,7676377,0,0x0,8
tick,0x7ffdf681f424,7678414,0,0x0,8
tick,0x7ffdf681f424,7680358,0,0x0,8
tick,0x7ffdf681f424,7682436,0,0x0,8
tick,0x7ffdf681f424,7684346,0,0x0,8
tick,0x7ffdf681f424,7686373,0,0x0,8
tick,0x7ffdf681f424,7688343,0,0x0,8
tick,0x7ffdf681f424,7690409,0,0x0,8
tick,0x7ffdf681f424,7692325,0,0x0,8
tick,0x7ffdf681f424,7694414,0,0x0,8
tick,0x7ffdf681f424,7696388,0,0x0,8
tick,0x7ffdf681f424,7698355,0,0x0,8
tick,0x7ffdf681f424,7700306,0,0x0,8
tick,0x7ffdf681f424,7702359,0,0x0,8
tick,0x7ffdf681f424,7704265,0,0x0,8
tick,0x7ffdf681f424,7706378,0,0x0,8
tick,0x7ffdf681f424,7708285,0,0x0,8
tick,0x7ffdf681f424,7710301,0,0x0,8
tick,0x7ffdf681f424,7712271,0,0x0,8
tick,0x7ffdf681f424,7714337,0,0x0,8
tick,0x7ffdf681f424,7716261,0,0x0,8
tick,0x7ffdf681f424,7718270,0,0x0,8
tick,0x7ffdf681f424,7720292,0,0x0,8
tick,0x7ffdf681f424,7722347,0,0x0,8
tick,0x7ffdf681f424,7724256,0,0x0,8
tick,0x7ffdf681f424,7726241,0,0x0,8
tick,0x7ffdf681f424,7728314,0,0x0,8
tick,0x7ffdf681f424,7730228,0,0x0,8
tick,0x7ffdf681f424,7732309,0,0x0,8
tick,0x7ffdf681f424,7734312,0,0x0,8
tick,0x7ffdf681f424,7736302,0,0x0,8
tick,0x7ffdf681f424,7738313,0,0x0,8
tick,0x7ffdf681f424,7740312,0,0x0,8
tick,0x7ffdf681f424,7742291,0,0x0,8
tick,0x7ffdf681f424,7744280,0,0x0,8
tick,0x7ffdf681f424,7746285,0,0x0,8
tick,0x7ffdf681f424,7748264,0,0x0,8
tick,0x7ffdf681f424,7750274,0,0x0,8
tick,0x7ffdf681f424,7752277,0,0x0,8
tick,0x7ffdf681f424,7754260,0,0x0,8
tick,0x7ffdf681f424,7756251,0,0x0,8
tick,0x7ffdf681f424,7758222,0,0x0,8
tick,0x7ffdf681f424,7760234,0,0x0,8
tick,0x7ffdf681f424,7762226,0,0x0,8
tick,0x7ffdf681f424,7764264,0,0x0,8
tick,0x7ffdf681f424,7766194,0,0x0,8
tick,0x7ffdf681f424,7768241,0,0x0,8
tick,0x7ffdf681f424,7770165,0,0x0,8
tick,0x7ffdf681f424,7772240,0,0x0,8
tick,0x7ffdf681f424,7774199,0,0x0,8
tick,0x7ffdf681f424,7776196,0,0x0,8
tick,0x7ffdf681f424,7778146,0,0x0,8
tick,0x7ffdf681f424,7780147,0,0x0,8
tick,0x7ffdf681f424,7782142,0,0x0,8
tick,0x7ffdf681f424,7784115,0,0x0,8
tick,0x7ffdf681f424,7786134,0,0x0,8
tick,0x7ffdf681f424,7788060,0,0x0,8
tick,0x7ffdf681f424,7790072,0,0x0,8
tick,0x7ffdf681f424,7792082,0,0x0,8
tick,0x7ffdf681f424,7794001,0,0x0,8
tick,0x7ffdf681f424,7796128,0,0x0,8
tick,0x7ffdf681f424,7798034,0,0x0,8
tick,0x7ffdf681f424,7800005,0,0x0,8
tick,0x7ffdf681f424,7802127,0,0x0,8
tick,0x7ffdf681f424,7804055,0,0x0,8
tick,0x7ffdf681f424,7806106,0,0x0,8
tick,0x7ffdf681f424,7808148,0,0x0,8
tick,0x7ffdf681f424,7810118,0,0x0,8
tick,0x7ffdf681f424,7812088,0,0x0,8
tick,0x7ffdf681f424,7814109,0,0x0,8
tick,0x7ffdf681f424,7816039,0,0x0,8
tick,0x7ffdf681f424,7818013,0,0x0,8
tick,0x7ffdf681f424,7820079,0,0x0,8
tick,0x7ffdf681f424,7822080,0,0x0,8
tick,0x7ffdf681f424,7824090,0,0x0,8
tick,0x7ffdf681f424,7826006,0,0x0,8
tick,0x7ffdf681f424,7828033,0,0x0,8
tick,0x7ffdf681f424,7830049,0,0x0,8
tick,0x7ffdf681f424,7832074,0,0x0,8
tick,0x7ffdf681f424,7834043,0,0x0,8
tick,0x7ffdf681f424,7836023,0,0x0,8
tick,0x7ffdf681f424,7838060,0,0x0,8
tick,0x7ffdf681f424,7840050,0,0x0,8
tick,0x7ffdf681f424,7841996,0,0x0,8
tick,0x7ffdf681f424,7844037,0,0x0,8
tick,0x7ffdf681f424,7845995,0,0x0,8
tick,0x7ffdf681f424,7847939,0,0x0,8
tick,0x7ffdf681f424,7849985,0,0x0,8
tick,0x7ffdf681f424,7851991,0,0x0,8
tick,0x7ffdf681f424,7853978,0,0x0,8
tick,0x7ffdf681f424,7855974,0,0x0,8
tick,0x7ffdf681f424,7857974,0,0x0,8
tick,0x7ffdf681f424,7859988,0,0x0,8
tick,0x7ffdf681f424,7861977,0,0x0,8
tick,0x7ffdf681f424,7863955,0,0x0,8
tick,0x7ffdf681f424,7865959,0,0x0,8
tick,0x7ffdf681f424,7867928,0,0x0,8
tick,0x7ffdf681f424,7869955,0,0x0,8
tick,0x7ffdf681f424,7871952,0,0x0,8
tick,0x7ffdf681f424,7873959,0,0x0,8
tick,0x7ffdf681f424,7875917,0,0x0,8
tick,0x7ffdf681f424,7877951,0,0x0,8
tick,0x7ffdf681f424,7879916,0,0x0,8
tick,0x7ffdf681f424,7881908,0,0x0,8
tick,0x7ffdf681f424,7883917,0,0x0,8
tick,0x7ffdf681f424,7885838,0,0x0,8
tick,0x7ffdf681f424,7887873,0,0x0,8
tick,0x7ffdf681f424,7889933,0,0x0,8
tick,0x7ffdf681f424,7891834,0,0x0,8
tick,0x7ffdf681f424,7893872,0,0x0,8
tick,0x7ffdf681f424,7895869,0,0x0,8
tick,0x7ffdf681f424,7897855,0,0x0,8
tick,0x7ffdf681f424,7899866,0,0x0,8
tick,0x7ffdf681f424,7901881,0,0x0,8
tick,0x7ffdf681f424,7903877,0,0x0,8
tick,0x7ffdf681f424,7905819,0,0x0,8
tick,0x7ffdf681f424,7907797,0,0x0,8
tick,0x7ffdf681f424,7909826,0,0x0,8
tick,0x7ffdf681f424,7911857,0,0x0,8
tick,0x7ffdf681f424,7913764,0,0x0,8
tick,0x7ffdf681f424,7915800,0,0x0,8
tick,0x7ffdf681f424,7917808,0,0x0,8
tick,0x7ffdf681f424,7919711,0,0x0,8
tick,0x7ffdf681f424,7921788,0,0x0,8
tick,0x7ffdf681f424,7923688,0,0x0,8
tick,0x7ffdf681f424,7925729,0,0x0,8
tick,0x7ffdf681f424,7927731,0,0x0,8
tick,0x7ffdf681f424,7929808,0,0x0,8
tick,0x7ffdf681f424,7931802,0,0x0,8
tick,0x7ffdf681f424,7933638,0,0x0,8
tick,0x7ffdf681f424,7935633,0,0x0,8
tick,0x7ffdf681f424,7936737,0,0x0,8
tick,0x7ffdf681f424,7938754,0,0x0,8
tick,0x7ffdf681f424,7940731,0,0x0,8
tick,0x7ffdf681f424,7942719,0,0x0,8
tick,0x7ffdf681f424,7944729,0,0x0,8
tick,0x7ffdf681f424,7946737,0,0x0,8
tick,0x7ffdf681f424,7948713,0,0x0,8
tick,0x7ffdf681f424,7950709,0,0x0,8
tick,0x7ffdf681f424,7952703,0,0x0,8
tick,0x7ffdf681f424,7954701,0,0x0,8
tick,0x7ffdf681f424,7956704,0,0x0,8
tick,0x7ffdf681f424,7958689,0,0x0,8
tick,0x7ffdf681f424,7960681,0,0x0,8
tick,0x7ffdf681f424,7962679,0,0x0,8
tick,0x7ffdf681f424,7964665,0,0x0,8
tick,0x7ffdf681f424,7966592,0,0x0,8
tick,0x7ffdf681f424,7968666,0,0x0,8
tick,0x7ffdf681f424,7970618,0,0x0,8
tick,0x7ffdf681f424,7972653,0,0x0,8
tick,0x7ffdf681f424,7974639,0,0x0,8
tick,0x7ffdf681f424,7976632,0,0x0,8
tick,0x7ffdf681f424,7978636,0,0x0,8
tick,0x7ffdf681f424,7980632,0,0x0,8
tick,0x7ffdf681f424,7982615,0,0x0,8
tick,0x7ffdf681f424,7984615,0,0x0,8
tick,0x7ffdf681f424,7986609,0,0x0,8
tick,0x7ffdf681f424,7988603,0,0x0,8
tick,0x7ffdf681f424,7990556,0,0x0,8
tick,0x7ffdf681f424,7992584,0,0x0,8
tick,0x7ffdf681f424,7994576,0,0x0,8
tick,0x7ffdf681f424,7996564,0,0x0,8
tick,0x7ffdf681f424,7998724,0,0x0,8
tick,0x7ffdf681f424,8000696,0,0x0,8
tick,0x7ffdf681f424,8002495,0,0x0,8
tick,0x7ffdf681f424,8003668,0,0x0,8
tick,0x7ffdf681f424,8005667,0,0x0,8
tick,0x7ffdf681f424,8007658,0,0x0,8
tick,0x7ffdf681f424,8009721,0,0x0,8
tick,0x7ffdf681f424,8011674,0,0x0,8
tick,0x7ffdf681f424,8013658,0,0x0,8
tick,0x7ffdf681f424,8015653,0,0x0,8
tick,0x7ffdf681f424,8017654,0,0x0,8
tick,0x7ffdf681f424,8019643,0,0x0,8
tick,0x7ffdf681f424,8021655,0,0x0,8
tick,0x7ffdf681f424,8023629,0,0x0,8
tick,0x7ffdf681f424,8025626,0,0x0,8
tick,0x7ffdf681f424,8027629,0,0x0,8
tick,0x7ffdf681f424,8029617,0,0x0,8
tick,0x7ffdf681f424,8031622,0,0x0,8
tick,0x7ffdf681f424,8033671,0,0x0,8
tick,0x7ffdf681f424,8035598,0,0x0,8
tick,0x7ffdf681f424,8037599,0,0x0,8
tick,0x7ffdf681f424,8039602,0,0x0,8
tick,0x7ffdf681f424,8041583,0,0x0,8
tick,0x7ffdf681f424,8043488,0,0x0,8
tick,0x7ffdf681f424,8045464,0,0x0,8
tick,0x7ffdf681f424,8047441,0,0x0,8
tick,0x7ffdf681f424,8049491,0,0x0,8
tick,0x7ffdf681f424,8051481,0,0x0,8
tick,0x7ffdf681f424,8053460,0,0x0,8
tick,0x7ffdf681f424,8055545,0,0x0,8
tick,0x7ffdf681f424,8057519,0,0x0,8
tick,0x7ffdf681f424,8059458,0,0x0,8
tick,0x7ffdf681f424,8061529,0,0x0,8
tick,0x7ffdf681f424,8063493,0,0x0,8
tick,0x7ffdf681f424,8065360,0,0x0,8
tick,0x7ffdf681f424,8067440,0,0x0,8
tick,0x7ffdf681f424,8069437,0,0x0,8
tick,0x7ffdf681f424,8071402,0,0x0,8
tick,0x7ffdf681f424,8073390,0,0x0,8
tick,0x7ffdf681f424,8075418,0,0x0,8
tick,0x7ffdf681f424,8077411,0,0x0,8
tick,0x7ffdf681f424,8079412,0,0x0,8
tick,0x7ffdf681f424,8081339,0,0x0,8
tick,0x7ffdf681f424,8083383,0,0x0,8
tick,0x7ffdf681f424,8085385,0,0x0,8
tick,0x7ffdf681f424,8087302,0,0x0,8
tick,0x7ffdf681f424,8089367,0,0x0,8
tick,0x7ffdf681f424,8091315,0,0x0,8
tick,0x7ffdf681f424,8093379,0,0x0,8
tick,0x7ffdf681f424,8095372,0,0x0,8
tick,0x7ffdf681f424,8097345,0,0x0,8
tick,0x7ffdf681f424,8099347,0,0x0,8
tick,0x7ffdf681f424,8101342,0,0x0,8
tick,0x7ffdf681f424,8103311,0,0x0,8
tick,0x7ffdf681f424,8105335,0,0x0,8
tick,0x7ffdf681f424,8107310,0,0x0,8
tick,0x7ffdf681f424,8108467,0,0x0,8
tick,0x7ffdf681f424,8110424,0,0x0,8
tick,0x7ffdf681f424,8112533,0,0x0,8
tick,0x7ffdf681f424,8114419,0,0x0,8
tick,0x7ffdf681f424,8115542,0,0x0,8
tick,0x7ffdf681f424,8116652,0,0x0,8
tick,0x7ffdf681f424,8117902,0,0x0,8
tick,0x7ffdf681f424,8119865,0,0x0,8
tick,0x7ffdf681f424,8121035,0,0x0,8
tick,0x7ffdf681f424,8122233,0,0x0,8
tick,0x7ffdf681f424,8124256,0,0x0,8
tick,0x7ffdf681f424,8126044,0,0x0,8
tick,0x7ffdf681f424,8128262,0,0x0,8
tick,0x7ffdf681f424,8130219,0,0x0,8
tick,0x7ffdf681f424,8132081,0,0x0,8
tick,0x7ffdf681f424,8134151,0,0x0,8
tick,0x7ffdf681f424,8136104,0,0x0,8
tick,0x7ffdf681f424,8138182,0,0x0,8
tick,0x7ffdf681f424,8140062,0,0x0,8
tick,0x7ffdf681f424,8142170,0,0x0,8
tick,0x7ffdf681f424,8144134,0,0x0,8
tick,0x7ffdf681f424,8146110,0,0x0,8
tick,0x7ffdf681f424,8147217,0,0x0,8
tick,0x7ffdf681f424,8149215,0,0x0,8
tick,0x7ffdf681f424,8151149,0,0x0,8
tick,0x7ffdf681f424,8153131,0,0x0,8
tick,0x7ffdf681f424,8155130,0,0x0,8
tick,0x7ffdf681f424,8157130,0,0x0,8
tick,0x7ffdf681f424,8159117,0,0x0,8
tick,0x7ffdf681f424,8161119,0,0x0,8
tick,0x7ffdf681f424,8163104,0,0x0,8
tick,0x7ffdf681f424,8165104,0,0x0,8
tick,0x7ffdf681f424,8167031,0,0x0,8
tick,0x7ffdf681f424,8168987,0,0x0,8
tick,0x7ffdf681f424,8171089,0,0x0,8
tick,0x7ffdf681f424,8172970,0,0x0,8
tick,0x7ffdf681f424,8174969,0,0x0,8
tick,0x7ffdf681f424,8177018,0,0x0,8
tick,0x7ffdf681f424,8178929,0,0x0,8
tick,0x7ffdf681f424,8180930,0,0x0,8
tick,0x7ffdf681f424,8182936,0,0x0,8
tick,0x7ffdf681f424,8184914,0,0x0,8
tick,0x7ffdf681f424,8186920,0,0x0,8
tick,0x7ffdf681f424,8188993,0,0x0,8
tick,0x7ffdf681f424,8190985,0,0x0,8
tick,0x7ffdf681f424,8193035,0,0x0,8
tick,0x7ffdf681f424,8194997,0,0x0,8
tick,0x7ffdf681f424,8197085,0,0x0,8
tick,0x7ffdf681f424,8199095,0,0x0,8
tick,0x7ffdf681f424,8201105,0,0x0,8
tick,0x7ffdf681f424,8202269,0,0x0,8
tick,0x7ffdf681f424,8204307,0,0x0,8
tick,0x7ffdf681f424,8205461,0,0x0,8
tick,0x7ffdf681f424,8207445,0,0x0,8
tick,0x7ffdf681f424,8208607,0,0x0,8
tick,0x7ffdf681f424,8210626,0,0x0,8
tick,0x7ffdf681f424,8211817,0,0x0,8
tick,0x7ffdf681f424,8213019,0,0x0,8
tick,0x7ffdf681f424,8214997,0,0x0,8
tick,0x7ffdf681f424,8216216,0,0x0,8
tick,0x7ffdf681f424,8217391,0,0x0,8
tick,0x7ffdf681f424,8218615,0,0x0,8
tick,0x7ffdf681f424,8219796,0,0x0,8
tick,0x7ffdf681f424,8221729,0,0x0,8
tick,0x7ffdf681f424,8223713,0,0x0,8
tick,0x7ffdf681f424,8225696,0,0x0,8
tick,0x7ffdf681f424,8227685,0,0x0,8
tick,0x7ffdf681f424,8229691,0,0x0,8
tick,0x7ffdf681f424,8231699,0,0x0,8
tick,0x7ffdf681f424,8233734,0,0x0,8
tick,0x7ffdf681f424,8235612,0,0x0,8
tick,0x7ffdf681f424,8237640,0,0x0,8
tick,0x7ffdf681f424,8239676,0,0x0,8
tick,0x7ffdf681f424,8241694,0,0x0,8
tick,0x7ffdf681f424,8243668,0,0x0,8
tick,0x7ffdf681f424,8245690,0,0x0,8
tick,0x7ffdf681f424,8247542,0,0x0,8
tick,0x7ffdf681f424,8249633,0,0x0,8
tick,0x7ffdf681f424,8250809,0,0x0,8
tick,0x7ffdf681f424,8252853,0,0x0,8
tick,0x7ffdf681f424,8254103,0,0x0,8
tick,0x7ffdf681f424,8255318,0,0x0,8
tick,0x7ffdf681f424,8256534,0,0x0,8
tick,0x7ffdf681f424,8258542,0,0x0,8
tick,0x7ffdf681f424,8259704,0,0x0,8
tick,0x7ffdf681f424,8261685,0,0x0,8
tick,0x7ffdf681f424,8262865,0,0x0,8
tick,0x7ffdf681f424,8264079,0,0x0,8
tick,0x7ffdf681f424,8265330,0,0x0,8
tick,0x7ffdf681f424,8266516,0,0x0,8
tick,0x7ffdf681f424,8268557,0,0x0,8
tick,0x7ffdf681f424,8270517,0,0x0,8
tick,0x7ffdf681f424,8272595,0,0x0,8
tick,0x7ffdf681f424,8274583,0,0x0,8
tick,0x7ffdf681f424,8276543,0,0x0,8
tick,0x7ffdf681f424,8278536,0,0x0,8
tick,0x7ffdf681f424,8280525,0,0x0,8
tick,0x7ffdf681f424,8282513,0,0x0,8
tick,0x7ffdf681f424,8284491,0,0x0,8
tick,0x7ffdf681f424,8286532,0,0x0,8
tick,0x7ffdf681f424,8288404,0,0x0,8
tick,0x7ffdf681f424,8290559,0,0x0,8
tick,0x7ffdf681f424,8292528,0,0x0,8
tick,0x7ffdf681f424,8294554,0,0x0,8
tick,0x7ffdf681f424,8296627,0,0x0,8
tick,0x7ffdf681f424,8297839,0,0x0,8
tick,0x7ffdf681f424,8299822,0,0x0,8
tick,0x7ffdf681f424,8301063,0,0x0,8
tick,0x7ffdf681f424,8303040,0,0x0,8
tick,0x7ffdf681f424,8304274,0,0x0,8
tick,0x7ffdf681f424,8306147,0,0x0,8
tick,0x7ffdf681f424,8308144,0,0x0,8
tick,0x7ffdf681f424,8310074,0,0x0,8
tick,0x7ffdf681f424,8312086,0,0x0,8
tick,0x7ffdf681f424,8314213,0,0x0,8
tick,0x7ffdf681f424,8316283,0,0x0,8
tick,0x7ffdf681f424,8318137,0,0x0,8
tick,0x7ffdf681f424,8320141,0,0x0,8
tick,0x7ffdf681f424,8322111,0,0x0,8
tick,0x7ffdf681f424,8323974,0,0x0,8
tick,0x7ffdf681f424,8326002,0,0x0,8
tick,0x7ffdf681f424,8327950,0,0x0,8
tick,0x7ffdf681f424,8330104,0,0x0,8
tick,0x7ffdf681f424,8332127,0,0x0,8
tick,0x7ffdf681f424,8334088,0,0x0,8
tick,0x7ffdf681f424,8336100,0,0x0,8
tick,0x7ffdf681f424,8338073,0,0x0,8
tick,0x7ffdf681f424,8340090,0,0x0,8
tick,0x7ffdf681f424,8342064,0,0x0,8
tick,0x7ffdf681f424,8344082,0,0x0,8
tick,0x7ffdf681f424,8346168,0,0x0,8
tick,0x7ffdf681f424,8348219,0,0x0,8
tick,0x7ffdf681f424,8350319,0,0x0,8
tick,0x7ffdf681f424,8352353,0,0x0,8
tick,0x7ffdf681f424,8353583,0,0x0,8
tick,0x7ffdf681f424,8355781,0,0x0,8
tick,0x7ffdf681f424,8357757,0,0x0,8
tick,0x7ffdf681f424,8359000,0,0x0,8
tick,0x7ffdf681f424,8360995,0,0x0,8
tick,0x7ffdf681f424,8362842,0,0x0,8
tick,0x7ffdf681f424,8364050,0,0x0,8
tick,0x7ffdf681f424,8366111,0,0x0,8
tick,0x7ffdf681f424,8367241,0,0x0,8
tick,0x7ffdf681f424,8368459,0,0x0,8
tick,0x7ffdf681f424,8370387,0,0x0,8
tick,0x7ffdf681f424,8372282,0,0x0,8
tick,0x7ffdf681f424,8374342,0,0x0,8
tick,0x7ffdf681f424,8376400,0,0x0,8
tick,0x7ffdf681f424,8378371,0,0x0,8
tick,0x7ffdf681f424,8380336,0,0x0,8
tick,0x7ffdf681f424,8382371,0,0x0,8
tick,0x7ffdf681f424,8384362,0,0x0,8
tick,0x7ffdf681f424,8386323,0,0x0,8
tick,0x7ffdf681f424,8388339,0,0x0,8
tick,0x7ffdf681f424,8390308,0,0x0,8
tick,0x7ffdf681f424,8392324,0,0x0,8
tick,0x7ffdf681f424,8394325,0,0x0,8
tick,0x7ffdf681f424,8396429,0,0x0,8
tick,0x7ffdf681f424,8398385,0,0x0,8
tick,0x7ffdf681f424,8399561,0,0x0,8
tick,0x7ffdf681f424,8401552,0,0x0,8
tick,0x7ffdf681f424,8403614,0,0x0,8
tick,0x7ffdf681f424,8404773,0,0x0,8
tick,0x7ffdf681f424,8406823,0,0x0,8
tick,0x7ffdf681f424,8408799,0,0x0,8
tick,0x7ffdf681f424,8410697,0,0x0,8
tick,0x7ffdf681f424,8412593,0,0x0,8
tick,0x7ffdf681f424,8414556,0,0x0,8
tick,0x7ffdf681f424,8416768,0,0x0,8
tick,0x7ffdf681f424,8418831,0,0x0,8
tick,0x7ffdf681f424,8420687,0,0x0,8
tick,0x7ffdf681f424,8422727,0,0x0,8
tick,0x7ffdf681f424,8424701,0,0x0,8
tick,0x7ffdf681f424,8426695,0,0x0,8
tick,0x7ffdf681f424,8428692,0,0x0,8
tick,0x7ffdf681f424,8430690,0,0x0,8
tick,0x7ffdf681f424,8432694,0,0x0,8
tick,0x7ffdf681f424,8434644,0,0x0,8
tick,0x7ffdf681f424,8436620,0,0x0,8
tick,0x7ffdf681f424,8438527,0,0x0,8
tick,0x7ffdf681f424,8440529,0,0x0,8
tick,0x7ffdf681f424,8442603,0,0x0,8
tick,0x7ffdf681f424,8444636,0,0x0,8
tick,0x7ffdf681f424,8446759,0,0x0,8
tick,0x7ffdf681f424,8448616,0,0x0,8
tick,0x7ffdf681f424,8450496,0,0x0,8
tick,0x7ffdf681f424,8452574,0,0x0,8
tick,0x7ffdf681f424,8454718,0,0x0,8
tick,0x7ffdf681f424,8456504,0,0x0,8
tick,0x7ffdf681f424,8458718,0,0x0,8
tick,0x7ffdf681f424,8459931,0,0x0,8
tick,0x7ffdf681f424,8461942,0,0x0,8
tick,0x7ffdf681f424,8463119,0,0x0,8
tick,0x7ffdf681f424,8465123,0,0x0,8
tick,0x7ffdf681f424,8467261,0,0x0,8
tick,0x7ffdf681f424,8469183,0,0x0,8
tick,0x7ffdf681f424,8471177,0,0x0,8
tick,0x7ffdf681f424,8473151,0,0x0,8
tick,0x7ffdf681f424,8475196,0,0x0,8
tick,0x7ffdf681f424,8477205,0,0x0,8
tick,0x7ffdf681f424,8479166,0,0x0,8
tick,0x7ffdf681f424,8481161,0,0x0,8
tick,0x7ffdf681f424,8483151,0,0x0,8
tick,0x7ffdf681f424,8485139,0,0x0,8
tick,0x7ffdf681f424,8487141,0,0x0,8
tick,0x7ffdf681f424,8489079,0,0x0,8
tick,0x7ffdf681f424,8491125,0,0x0,8
tick,0x7ffdf681f424,8493160,0,0x0,8
tick,0x7ffdf681f424,8495108,0,0x0,8
tick,0x7ffdf681f424,8497234,0,0x0,8
tick,0x7ffdf681f424,8498405,0,0x0,8
tick,0x7ffdf681f424,8500439,0,0x0,8
tick,0x7ffdf681f424,8501584,0,0x0,8
tick,0x7ffdf681f424,8502782,0,0x0,8
tick,0x7ffdf681f424,8504773,0,0x0,8
tick,0x7ffdf681f424,8506971,0,0x0,8
tick,0x7ffdf681f424,8508175,0,0x0,8
tick,0x7ffdf681f424,8510163,0,0x0,8
tick,0x7ffdf681f424,8512213,0,0x0,8
tick,0x7ffdf681f424,8513369,0,0x0,8
tick,0x7ffdf681f424,8515362,0,0x0,8
tick,0x7ffdf681f424,8517400,0,0x0,8
tick,0x7ffdf681f424,8518578,0,0x0,8
tick,0x7ffdf681f424,8519770,0,0x0,8
tick,0x7ffdf681f424,8521688,0,0x0,8
tick,0x7ffdf681f424,8523673,0,0x0,8
tick,0x7ffdf681f424,8525684,0,0x0,8
tick,0x7ffdf681f424,8527682,0,0x0,8
tick,0x7ffdf681f424,8529632,0,0x0,8
tick,0x7ffdf681f424,8531614,0,0x0,8
tick,0x7ffdf681f424,8533623,0,0x0,8
tick,0x7ffdf681f424,8535646,0,0x0,8
tick,0x7ffdf681f424,8537657,0,0x0,8
tick,0x7ffdf681f424,8539664,0,0x0,8
tick,0x7ffdf681f424,8541667,0,0x0,8
tick,0x7ffdf681f424,8543625,0,0x0,8
tick,0x7ffdf681f424,8545727,0,0x0,8
tick,0x7ffdf681f424,8546931,0,0x0,8
tick,0x7ffdf681f424,8548103,0,0x0,8
tick,0x7ffdf681f424,8550124,0,0x0,8
tick,0x7ffdf681f424,8551374,0,0x0,8
tick,0x7ffdf681f424,8552530,0,0x0,8
tick,0x7ffdf681f424,8554571,0,0x0,8
tick,0x7ffdf681f424,8555809,0,0x0,8
tick,0x7ffdf681f424,8556950,0,0x0,8
tick,0x7ffdf681f424,8558828,0,0x0,8
tick,0x7ffdf681f424,8560937,0,0x0,8
tick,0x7ffdf681f424,8562147,0,0x0,8
tick,0x7ffdf681f424,8563362,0,0x0,8
tick,0x7ffdf681f424,8565377,0,0x0,8
tick,0x7ffdf681f424,8567382,0,0x0,8
tick,0x7ffdf681f424,8569268,0,0x0,8
tick,0x7ffdf681f424,8571305,0,0x0,8
tick,0x7ffdf681f424,8573313,0,0x0,8
tick,0x7ffdf681f424,8575350,0,0x0,8
tick,0x7ffdf681f424,8577264,0,0x0,8
tick,0x7ffdf681f424,8579404,0,0x0,8
tick,0x7ffdf681f424,8581352,0,0x0,8
tick,0x7ffdf681f424,8583237,0,0x0,8
tick,0x7ffdf681f424,8585252,0,0x0,8
tick,0x7ffdf681f424,8587345,0,0x0,8
tick,0x7ffdf681f424,8589321,0,0x0,8
tick,0x7ffdf681f424,8591389,0,0x0,8
tick,0x7ffdf681f424,8593316,0,0x0,8
tick,0x7ffdf681f424,8595325,0,0x0,8
tick,0x7ffdf681f424,8597389,0,0x0,8
tick,0x7ffdf681f424,8599346,0,0x0,8
tick,0x7ffdf681f424,8601337,0,0x0,8
tick,0x7ffdf681f424,8603343,0,0x0,8
tick,0x7ffdf681f424,8605324,0,0x0,8
tick,0x7ffdf681f424,8607330,0,0x0,8
tick,0x7ffdf681f424,8609312,0,0x0,8
tick,0x7ffdf681f424,8611311,0,0x0,8
tick,0x7ffdf681f424,8613301,0,0x0,8
tick,0x7ffdf681f424,8615303,0,0x0,8
tick,0x7ffdf681f424,8617302,0,0x0,8
tick,0x7ffdf681f424,8619329,0,0x0,8
tick,0x7ffdf681f424,8621289,0,0x0,8
tick,0x7ffdf681f424,8623176,0,0x0,8
tick,0x7ffdf681f424,8625179,0,0x0,8
tick,0x7ffdf681f424,8627169,0,0x0,8
tick,0x7ffdf681f424,8629124,0,0x0,8
tick,0x7ffdf681f424,8631147,0,0x0,8
tick,0x7ffdf681f424,8633165,0,0x0,8
tick,0x7ffdf681f424,8635136,0,0x0,8
tick,0x7ffdf681f424,8637137,0,0x0,8
tick,0x7ffdf681f424,8639163,0,0x0,8
tick,0x7ffdf681f424,8641124,0,0x0,8
tick,0x7ffdf681f424,8643133,0,0x0,8
tick,0x7ffdf681f424,8645115,0,0x0,8
tick,0x7ffdf681f424,8647230,0,0x0,8
tick,0x7ffdf681f424,8649210,0,0x0,8
tick,0x7ffdf681f424,8651219,0,0x0,8
tick,0x7ffdf681f424,8653223,0,0x0,8
tick,0x7ffdf681f424,8655191,0,0x0,8
tick,0x7ffdf681f424,8657184,0,0x0,8
tick,0x7ffdf681f424,8659183,0,0x0,8
tick,0x7ffdf681f424,8661175,0,0x0,8
tick,0x7ffdf681f424,8663185,0,0x0,8
tick,0x7ffdf681f424,8665166,0,0x0,8
tick,0x7ffdf681f424,8667155,0,0x0,8
tick,0x7ffdf681f424,8669171,0,0x0,8
tick,0x7ffdf681f424,8671043,0,0x0,8
tick,0x7ffdf681f424,8673009,0,0x0,8
tick,0x7ffdf681f424,8675031,0,0x0,8
tick,0x7ffdf681f424,8677026,0,0x0,8
tick,0x7ffdf681f424,8679025,0,0x0,8
tick,0x7ffdf681f424,8681014,0,0x0,8
tick,0x7ffdf681f424,8683031,0,0x0,8
tick,0x7ffdf681f424,8685101,0,0x0,8
tick,0x7ffdf681f424,8687083,0,0x0,8
tick,0x7ffdf681f424,8689071,0,0x0,8
tick,0x7ffdf681f424,8691030,0,0x0,8
tick,0x7ffdf681f424,8693036,0,0x0,8
tick,0x7ffdf681f424,8695069,0,0x0,8
tick,0x7ffdf681f424,8697002,0,0x0,8
tick,0x7ffdf681f424,8699030,0,0x0,8
tick,0x7ffdf681f424,8700913,0,0x0,8
tick,0x7ffdf681f424,8703035,0,0x0,8
tick,0x7ffdf681f424,8705016,0,0x0,8
tick,0x7ffdf681f424,8707025,0,0x0,8
tick,0x7ffdf681f424,8709041,0,0x0,8
tick,0x7ffdf681f424,8711038,0,0x0,8
tick,0x7ffdf681f424,8713055,0,0x0,8
tick,0x7ffdf681f424,8714986,0,0x0,8
tick,0x7ffdf681f424,8716883,0,0x0,8
tick,0x7ffdf681f424,8718912,0,0x0,8
tick,0x7ffdf681f424,8720912,0,0x0,8
tick,0x7ffdf681f424,8722989,0,0x0,8
tick,0x7ffdf681f424,8724899,0,0x0,8
tick,0x7ffdf681f424,8726896,0,0x0,8
tick,0x7ffdf681f424,8728859,0,0x0,8
tick,0x7ffdf681f424,8730886,0,0x0,8
tick,0x7ffdf681f424,8732875,0,0x0,8
tick,0x7ffdf681f424,8734899,0,0x0,8
tick,0x7ffdf681f424,8736871,0,0x0,8
tick,0x7ffdf681f424,8738841,0,0x0,8
tick,0x7ffdf681f424,8740913,0,0x0,8
tick,0x7ffdf681f424,8742903,0,0x0,8
tick,0x7ffdf681f424,8744898,0,0x0,8
tick,0x7ffdf681f424,8746030,0,0x0,8
tick,0x7ffdf681f424,8747197,0,0x0,8
tick,0x7ffdf681f424,8749173,0,0x0,8
tick,0x7ffdf681f424,8751193,0,0x0,8
tick,0x7ffdf681f424,8753076,0,0x0,8
tick,0x7ffdf681f424,8754218,0,0x0,8
tick,0x7ffdf681f424,8756174,0,0x0,8
tick,0x7ffdf681f424,8757344,0,0x0,8
tick,0x7ffdf681f424,8759368,0,0x0,8
tick,0x7ffdf681f424,8761405,0,0x0,8
tick,0x7ffdf681f424,8762602,0,0x0,8
tick,0x7ffdf681f424,8763780,0,0x0,8
tick,0x7ffdf681f424,8765739,0,0x0,8
tick,0x7ffdf681f424,8767755,0,0x0,8
tick,0x7ffdf681f424,8769696,0,0x0,8
tick,0x7ffdf681f424,8771627,0,0x0,8
tick,0x7ffdf681f424,8773638,0,0x0,8
tick,0x7ffdf681f424,8775626,0,0x0,8
tick,0x7ffdf681f424,8777661,0,0x0,8
tick,0x7ffdf681f424,8779649,0,0x0,8
tick,0x7ffdf681f424,8781610,0,0x0,8
tick,0x7ffdf681f424,8783604,0,0x0,8
tick,0x7ffdf681f424,8785633,0,0x0,8
tick,0x7ffdf681f424,8787587,0,0x0,8
tick,0x7ffdf681f424,8789641,0,0x0,8
tick,0x7ffdf681f424,8791497,0,0x0,8
tick,0x7ffdf681f424,8793564,0,0x0,8
tick,0x7ffdf681f424,8795618,0,0x0,8
tick,0x7ffdf681f424,8797720,0,0x0,8
tick,0x7ffdf681f424,8799664,0,0x0,8
tick,0x7ffdf681f424,8800903,0,0x0,8
tick,0x7ffdf681f424,8802868,0,0x0,8
tick,0x7ffdf681f424,8804071,0,0x0,8
tick,0x7ffdf681f424,8805313,0,0x0,8
tick,0x7ffdf681f424,8806506,0,0x0,8
tick,0x7ffdf681f424,8807720,0,0x0,8
tick,0x7ffdf681f424,8809738,0,0x0,8
tick,0x7ffdf681f424,8810920,0,0x0,8
tick,0x7ffdf681f424,8812826,0,0x0,8
tick,0x7ffdf681f424,8814846,0,0x0,8
tick,0x7ffdf681f424,8817020,0,0x0,8
tick,0x7ffdf681f424,8819054,0,0x0,8
tick,0x7ffdf681f424,8820186,0,0x0,8
tick,0x7ffdf681f424,8822068,0,0x0,8
tick,0x7ffdf681f424,8824073,0,0x0,8
tick,0x7ffdf681f424,8826088,0,0x0,8
tick,0x7ffdf681f424,8828062,0,0x0,8
tick,0x7ffdf681f424,8830090,0,0x0,8
tick,0x7ffdf681f424,8831948,0,0x0,8
tick,0x7ffdf681f424,8833969,0,0x0,8
tick,0x7ffdf681f424,8836029,0,0x0,8
tick,0x7ffdf681f424,8838043,0,0x0,8
tick,0x7ffdf681f424,8840045,0,0x0,8
tick,0x7ffdf681f424,8841895,0,0x0,8
tick,0x7ffdf681f424,8843907,0,0x0,8
tick,0x7ffdf681f424,8846093,0,0x0,8
tick,0x7ffdf681f424,8848012,0,0x0,8
tick,0x7ffdf681f424,8850107,0,0x0,8
tick,0x7ffdf681f424,8852106,0,0x0,8
tick,0x7ffdf681f424,8853318,0,0x0,8
tick,0x7ffdf681f424,8855326,0,0x0,8
tick,0x7ffdf681f424,8857201,0,0x0,8
tick,0x7ffdf681f424,8859332,0,0x0,8
tick,0x7ffdf681f424,8861366,0,0x0,8
tick,0x7ffdf681f424,8863329,0,0x0,8
tick,0x7ffdf681f424,8865249,0,0x0,8
tick,0x7ffdf681f424,8867313,0,0x0,8
tick,0x7ffdf681f424,8869307,0,0x0,8
tick,0x7ffdf681f424,8871231,0,0x0,8
tick,0x7ffdf681f424,8873211,0,0x0,8
tick,0x7ffdf681f424,8875263,0,0x0,8
tick,0x7ffdf681f424,8877199,0,0x0,8
tick,0x7ffdf681f424,8879198,0,0x0,8
tick,0x7ffdf681f424,8881204,0,0x0,8
tick,0x7ffdf681f424,8883193,0,0x0,8
tick,0x7ffdf681f424,8885186,0,0x0,8
tick,0x7ffdf681f424,8887189,0,0x0,8
tick,0x7ffdf681f424,8889175,0,0x0,8
tick,0x7ffdf681f424,8891169,0,0x0,8
tick,0x7ffdf681f424,8893163,0,0x0,8
tick,0x7ffdf681f424,8895254,0,0x0,8
tick,0x7ffdf681f424,8897360,0,0x0,8
tick,0x7ffdf681f424,8899250,0,0x0,8
tick,0x7ffdf681f424,8900503,0,0x0,8
tick,0x7ffdf681f424,8901722,0,0x0,8
tick,0x7ffdf681f424,8903846,0,0x0,8
tick,0x7ffdf681f424,8905053,0,0x0,8
tick,0x7ffdf681f424,8907037,0,0x0,8
tick,0x7ffdf681f424,8908895,0,0x0,8
tick,0x7ffdf681f424,8911042,0,0x0,8
tick,0x7ffdf681f424,8912278,0,0x0,8
tick,0x7ffdf681f424,8914366,0,0x0,8
tick,0x7ffdf681f424,8916298,0,0x0,8
tick,0x7ffdf681f424,8917501,0,0x0,8
tick,0x7ffdf681f424,8919482,0,0x0,8
tick,0x7ffdf681f424,8921482,0,0x0,8
tick,0x7ffdf681f424,8923514,0,0x0,8
tick,0x7ffdf681f424,8925492,0,0x0,8
tick,0x7ffdf681f424,8927488,0,0x0,8
tick,0x7ffdf681f424,8929404,0,0x0,8
tick,0x7ffdf681f424,8931504,0,0x0,8
tick,0x7ffdf681f424,8933540,0,0x0,8
tick,0x7ffdf681f424,8935521,0,0x0,8
tick,0x7ffdf681f424,8937509,0,0x0,8
tick,0x7ffdf681f424,8939400,0,0x0,8
tick,0x7ffdf681f424,8941462,0,0x0,8
tick,0x7ffdf681f424,8943471,0,0x0,8
tick,0x7ffdf681f424,8945488,0,0x0,8
tick,0x7ffdf681f424,8947455,0,0x0,8
tick,0x7ffdf681f424,8949472,0,0x0,8
tick,0x7ffdf681f424,8951510,0,0x0,8
tick,0x7ffdf681f424,8953403,0,0x0,8
tick,0x7ffdf681f424,8955349,0,0x0,8
tick,0x7ffdf681f424,8957365,0,0x0,8
tick,0x7ffdf681f424,8959401,0,0x0,8
tick,0x7ffdf681f424,8961417,0,0x0,8
tick,0x7ffdf681f424,8963396,0,0x0,8
tick,0x7ffdf681f424,8965378,0,0x0,8
tick,0x7ffdf681f424,8967323,0,0x0,8
tick,0x7ffdf681f424,8969402,0,0x0,8
tick,0x7ffdf681f424,8971389,0,0x0,8
tick,0x7ffdf681f424,8973365,0,0x0,8
tick,0x7ffdf681f424,8975275,0,0x0,8
tick,0x7ffdf681f424,8977266,0,0x0,8
tick,0x7ffdf681f424,8979288,0,0x0,8
tick,0x7ffdf681f424,8981348,0,0x0,8
tick,0x7ffdf681f424,8983245,0,0x0,8
tick,0x7ffdf681f424,8985246,0,0x0,8
tick,0x7ffdf681f424,8987265,0,0x0,8
tick,0x7ffdf681f424,8989260,0,0x0,8
tick,0x7ffdf681f424,8991254,0,0x0,8
tick,0x7ffdf681f424,8993249,0,0x0,8
tick,0x7ffdf681f424,8995356,0,0x0,8
tick,0x7ffdf681f424,8997345,0,0x0,8
tick,0x7ffdf681f424,8999342,0,0x0,8
tick,0x7ffdf681f424,9001349,0,0x0,8
tick,0x7ffdf681f424,9003331,0,0x0,8
tick,0x7ffdf681f424,9005326,0,0x0,8
tick,0x7ffdf681f424,9007317,0,0x0,8
tick,0x7ffdf681f424,9009315,0,0x0,8
tick,0x7ffdf681f424,9011304,0,0x0,8
tick,0x7ffdf681f424,9013304,0,0x0,8
tick,0x7ffdf681f424,9015305,0,0x0,8
tick,0x7ffdf681f424,9017290,0,0x0,8
tick,0x7ffdf681f424,9019289,0,0x0,8
tick,0x7ffdf681f424,9021183,0,0x0,8
tick,0x7ffdf681f424,9023175,0,0x0,8
tick,0x7ffdf681f424,9025183,0,0x0,8
tick,0x7ffdf681f424,9027152,0,0x0,8
tick,0x7ffdf681f424,9029202,0,0x0,8
tick,0x7ffdf681f424,9031148,0,0x0,8
tick,0x7ffdf681f424,9033142,0,0x0,8
tick,0x7ffdf681f424,9035160,0,0x0,8
tick,0x7ffdf681f424,9037163,0,0x0,8
tick,0x7ffdf681f424,9039129,0,0x0,8
tick,0x7ffdf681f424,9041120,0,0x0,8
tick,0x7ffdf681f424,9043126,0,0x0,8
tick,0x7ffdf681f424,9045223,0,0x0,8
tick,0x7ffdf681f424,9047242,0,0x0,8
tick,0x7ffdf681f424,9049098,0,0x0,8
tick,0x7ffdf681f424,9051137,0,0x0,8
tick,0x7ffdf681f424,9053091,0,0x0,8
tick,0x7ffdf681f424,9055160,0,0x0,8
tick,0x7ffdf681f424,9057132,0,0x0,8
tick,0x7ffdf681f424,9059104,0,0x0,8
tick,0x7ffdf681f424,9061185,0,0x0,8
tick,0x7ffdf681f424,9063168,0,0x0,8
tick,0x7ffdf681f424,9065062,0,0x0,8
tick,0x7ffdf681f424,9067081,0,0x0,8
tick,0x7ffdf681f424,9069156,0,0x0,8
tick,0x7ffdf681f424,9071204,0,0x0,8
tick,0x7ffdf681f424,9073105,0,0x0,8
tick,0x7ffdf681f424,9075042,0,0x0,8
tick,0x7ffdf681f424,9077137,0,0x0,8
tick,0x7ffdf681f424,9079129,0,0x0,8
tick,0x7ffdf681f424,9081065,0,0x0,8
tick,0x7ffdf681f424,9083113,0,0x0,8
tick,0x7ffdf681f424,9085112,0,0x0,8
tick,0x7ffdf681f424,9087107,0,0x0,8
tick,0x7ffdf681f424,9088996,0,0x0,8
tick,0x7ffdf681f424,9091097,0,0x0,8
tick,0x7ffdf681f424,9093092,0,0x0,8
tick,0x7ffdf681f424,9095083,0,0x0,8
tick,0x7ffdf681f424,9097086,0,0x0,8
tick,0x7ffdf681f424,9099031,0,0x0,8
tick,0x7ffdf681f424,9101035,0,0x0,8
tick,0x7ffdf681f424,9103022,0,0x0,8
tick,0x7ffdf681f424,9105055,0,0x0,8
tick,0x7ffdf681f424,9106969,0,0x0,8
tick,0x7ffdf681f424,9109074,0,0x0,8
tick,0x7ffdf681f424,9110984,0,0x0,8
tick,0x7ffdf681f424,9113049,0,0x0,8
tick,0x7ffdf681f424,9114945,0,0x0,8
tick,0x7ffdf681f424,9117024,0,0x0,8
tick,0x7ffdf681f424,9119023,0,0x0,8
tick,0x7ffdf681f424,9121018,0,0x0,8
tick,0x7ffdf681f424,9122912,0,0x0,8
tick,0x7ffdf681f424,9125029,0,0x0,8
tick,0x7ffdf681f424,9126995,0,0x0,8
tick,0x7ffdf681f424,9128999,0,0x0,8
tick,0x7ffdf681f424,9131003,0,0x0,8
tick,0x7ffdf681f424,9132985,0,0x0,8
tick,0x7ffdf681f424,9134988,0,0x0,8
tick,0x7ffdf681f424,9136984,0,0x0,8
tick,0x7ffdf681f424,9138965,0,0x0,8
tick,0x7ffdf681f424,9140962,0,0x0,8
tick,0x7ffdf681f424,9142962,0,0x0,8
tick,0x7ffdf681f424,9144954,0,0x0,8
tick,0x7ffdf681f424,9146844,0,0x0,8
tick,0x7ffdf681f424,9148940,0,0x0,8
tick,0x7ffdf681f424,9150939,0,0x0,8
tick,0x7ffdf681f424,9152931,0,0x0,8
tick,0x7ffdf681f424,9154926,0,0x0,8
tick,0x7ffdf681f424,9156928,0,0x0,8
tick,0x7ffdf681f424,9158916,0,0x0,8
tick,0x7ffdf681f424,9160906,0,0x0,8
tick,0x7ffdf681f424,9162904,0,0x0,8
tick,0x7ffdf681f424,9164899,0,0x0,8
tick,0x7ffdf681f424,9166892,0,0x0,8
tick,0x7ffdf681f424,9168884,0,0x0,8
tick,0x7ffdf681f424,9170877,0,0x0,8
tick,0x7ffdf681f424,9172765,0,0x0,8
tick,0x7ffdf681f424,9174876,0,0x0,8
tick,0x7ffdf681f424,9176868,0,0x0,8
tick,0x7ffdf681f424,9178873,0,0x0,8
tick,0x7ffdf681f424,9180946,0,0x0,8
tick,0x7ffdf681f424,9182893,0,0x0,8
tick,0x7ffdf681f424,9184839,0,0x0,8
tick,0x7ffdf681f424,9186836,0,0x0,8
tick,0x7ffdf681f424,9188727,0,0x0,8
tick,0x7ffdf681f424,9190823,0,0x0,8
tick,0x7ffdf681f424,9192818,0,0x0,8
tick,0x7ffdf681f424,9194812,0,0x0,8
tick,0x7ffdf681f424,9196813,0,0x0,8
tick,0x7ffdf681f424,9198812,0,0x0,8
tick,0x7ffdf681f424,9200799,0,0x0,8
tick,0x7ffdf681f424,9202795,0,0x0,8
tick,0x7ffdf681f424,9204795,0,0x0,8
tick,0x7ffdf681f424,9206791,0,0x0,8
tick,0x7ffdf681f424,9208807,0,0x0,8
tick,0x7ffdf681f424,9210778,0,0x0,8
tick,0x7ffdf681f424,9212769,0,0x0,8
tick,0x7ffdf681f424,9214762,0,0x0,8
tick,0x7ffdf681f424,9216768,0,0x0,8
tick,0x7ffdf681f424,9218649,0,0x0,8
tick,0x7ffdf681f424,9220704,0,0x0,8
tick,0x7ffdf681f424,9222609,0,0x0,8
tick,0x7ffdf681f424,9224653,0,0x0,8
tick,0x7ffdf681f424,9226713,0,0x0,8
tick,0x7ffdf681f424,9228755,0,0x0,8
tick,0x7ffdf681f424,9230725,0,0x0,8
tick,0x7ffdf681f424,9232688,0,0x0,8
tick,0x7ffdf681f424,9234590,0,0x0,8
tick,0x7ffdf681f424,9236715,0,0x0,8
tick,0x7ffdf681f424,9238710,0,0x0,8
tick,0x7ffdf681f424,9240660,0,0x0,8
tick,0x7ffdf681f424,9242756,0,0x0,8
tick,0x7ffdf681f424,9244708,0,0x0,8
tick,0x7ffdf681f424,9246690,0,0x0,8
tick,0x7ffdf681f424,9248687,0,0x0,8
tick,0x7ffdf681f424,9250671,0,0x0,8
tick,0x7ffdf681f424,9252665,0,0x0,8
tick,0x7ffdf681f424,9254660,0,0x0,8
tick,0x7ffdf681f424,9256547,0,0x0,8
tick,0x7ffdf681f424,9258668,0,0x0,8
tick,0x7ffdf681f424,9260651,0,0x0,8
tick,0x7ffdf681f424,9262639,0,0x0,8
tick,0x7ffdf681f424,9264524,0,0x0,8
tick,0x7ffdf681f424,9266634,0,0x0,8
tick,0x7ffdf681f424,9268639,0,0x0,8
tick,0x7ffdf681f424,9270651,0,0x0,8
tick,0x7ffdf681f424,9272620,0,0x0,8
tick,0x7ffdf681f424,9274612,0,0x0,8
tick,0x7ffdf681f424,9276617,0,0x0,8
tick,0x7ffdf681f424,9278606,0,0x0,8
tick,0x7ffdf681f424,9280590,0,0x0,8
tick,0x7ffdf681f424,9282585,0,0x0,8
tick,0x7ffdf681f424,9284527,0,0x0,8
tick,0x7ffdf681f424,9286575,0,0x0,8
tick,0x7ffdf681f424,9288587,0,0x0,8
tick,0x7ffdf681f424,9290582,0,0x0,8
tick,0x7ffdf681f424,9292586,0,0x0,8
tick,0x7ffdf681f424,9294565,0,0x0,8
tick,0x7ffdf681f424,9296447,0,0x0,8
tick,0x7ffdf681f424,9298542,0,0x0,8
tick,0x7ffdf681f424,9300545,0,0x0,8
tick,0x7ffdf681f424,9302529,0,0x0,8
tick,0x7ffdf681f424,9304536,0,0x0,8
tick,0x7ffdf681f424,9306460,0,0x0,8
tick,0x7ffdf681f424,9308523,0,0x0,8
tick,0x7ffdf681f424,9310516,0,0x0,8
tick,0x7ffdf681f424,9312512,0,0x0,8
tick,0x7ffdf681f424,9314453,0,0x0,8
tick,0x7ffdf681f424,9316507,0,0x0,8
tick,0x7ffdf681f424,9318489,0,0x0,8
tick,0x7ffdf681f424,9320483,0,0x0,8
tick,0x7ffdf681f424,9322478,0,0x0,8
tick,0x7ffdf681f424,9324468,0,0x0,8
tick,0x7ffdf681f424,9326471,0,0x0,8
tick,0x7ffdf681f424,9328462,0,0x0,8
tick,0x7ffdf681f424,9330456,0,0x0,8
tick,0x7ffdf681f424,9332454,0,0x0,8
tick,0x7ffdf681f424,9334448,0,0x0,8
tick,0x7ffdf681f424,9336452,0,0x0,8
tick,0x7ffdf681f424,9338437,0,0x0,8
tick,0x7ffdf681f424,9340440,0,0x0,8
tick,0x7ffdf681f424,9342428,0,0x0,8
tick,0x7ffdf681f424,9344413,0,0x0,8
tick,0x7ffdf681f424,9346414,0,0x0,8
tick,0x7ffdf681f424,9348408,0,0x0,8
tick,0x7ffdf681f424,9350479,0,0x0,8
tick,0x7ffdf681f424,9352280,0,0x0,8
tick,0x7ffdf681f424,9354249,0,0x0,8
tick,0x7ffdf681f424,9356260,0,0x0,8
tick,0x7ffdf681f424,9358244,0,0x0,8
tick,0x7ffdf681f424,9360339,0,0x0,8
tick,0x7ffdf681f424,9362368,0,0x0,8
tick,0x7ffdf681f424,9364365,0,0x0,8
tick,0x7ffdf681f424,9366285,0,0x0,8
tick,0x7ffdf681f424,9368218,0,0x0,8
tick,0x7ffdf681f424,9370311,0,0x0,8
tick,0x7ffdf681f424,9372355,0,0x0,8
tick,0x7ffdf681f424,9374234,0,0x0,8
tick,0x7ffdf681f424,9376337,0,0x0,8
tick,0x7ffdf681f424,9378335,0,0x0,8
tick,0x7ffdf681f424,9380341,0,0x0,8
tick,0x7ffdf681f424,9382237,0,0x0,8
tick,0x7ffdf681f424,9384306,0,0x0,8
tick,0x7ffdf681f424,9386200,0,0x0,8
tick,0x7ffdf681f424,9388300,0,0x0,8
tick,0x7ffdf681f424,9390295,0,0x0,8
tick,0x7ffdf681f424,9392287,0,0x0,8
tick,0x7ffdf681f424,9394279,0,0x0,8
tick,0x7ffdf681f424,9396288,0,0x0,8
tick,0x7ffdf681f424,9398272,0,0x0,8
tick,0x7ffdf681f424,9400271,0,0x0,8
tick,0x7ffdf681f424,9402278,0,0x0,8
tick,0x7ffdf681f424,9404272,0,0x0,8
tick,0x7ffdf681f424,9406164,0,0x0,8
tick,0x7ffdf681f424,9408249,0,0x0,8
tick,0x7ffdf681f424,9410244,0,0x0,8
tick,0x7ffdf681f424,9412231,0,0x0,8
tick,0x7ffdf681f424,9414247,0,0x0,8
tick,0x7ffdf681f424,9416220,0,0x0,8
tick,0x7ffdf681f424,9418233,0,0x0,8
tick,0x7ffdf681f424,9420225,0,0x0,8
tick,0x7ffdf681f424,9422220,0,0x0,8
tick,0x7ffdf681f424,9424238,0,0x0,8
tick,0x7ffdf681f424,9426199,0,0x0,8
tick,0x7ffdf681f424,9428194,0,0x0,8
tick,0x7ffdf681f424,9430194,0,0x0,8
tick,0x7ffdf681f424,9432202,0,0x0,8
tick,0x7ffdf681f424,9434174,0,0x0,8
tick,0x7ffdf681f424,9436173,0,0x0,8
tick,0x7ffdf681f424,9438177,0,0x0,8
tick,0x7ffdf681f424,9440184,0,0x0,8
tick,0x7ffdf681f424,9442191,0,0x0,8
tick,0x7ffdf681f424,9444151,0,0x0,8
tick,0x7ffdf681f424,9446160,0,0x0,8
tick,0x7ffdf681f424,9448048,0,0x0,8
tick,0x7ffdf681f424,9450135,0,0x0,8
tick,0x7ffdf681f424,9452125,0,0x0,8
tick,0x7ffdf681f424,9454136,0,0x0,8
tick,0x7ffdf681f424,9456119,0,0x0,8
tick,0x7ffdf681f424,9458114,0,0x0,8
tick,0x7ffdf681f424,9460109,0,0x0,8
tick,0x7ffdf681f424,9462082,0,0x0,8
tick,0x7ffdf681f424,9464097,0,0x0,8
tick,0x7ffdf681f424,9466094,0,0x0,8
tick,0x7ffdf681f424,9468126,0,0x0,8
tick,0x7ffdf681f424,9470076,0,0x0,8
tick,0x7ffdf681f424,9472078,0,0x0,8
tick,0x7ffdf681f424,9474074,0,0x0,8
tick,0x7ffdf681f424,9476060,0,0x0,8
tick,0x7ffdf681f424,9478062,0,0x0,8
tick,0x7ffdf681f424,9479950,0,0x0,8
tick,0x7ffdf681f424,9482036,0,0x0,8
tick,0x7ffdf681f424,9483949,0,0x0,8
tick,0x7ffdf681f424,9485924,0,0x0,8
tick,0x7ffdf681f424,9488027,0,0x0,8
tick,0x7ffdf681f424,9490016,0,0x0,8
tick,0x7ffdf681f424,9492045,0,0x0,8
tick,0x7ffdf681f424,9494030,0,0x0,8
tick,0x7ffdf681f424,9495921,0,0x0,8
tick,0x7ffdf681f424,9497889,0,0x0,8
tick,0x7ffdf681f424,9499959,0,0x0,8
tick,0x7ffdf681f424,9501899,0,0x0,8
tick,0x7ffdf681f424,9503859,0,0x0,8
tick,0x7ffdf681f424,9506002,0,0x0,8
tick,0x7ffdf681f424,9507983,0,0x0,8
tick,0x7ffdf681f424,9509977,0,0x0,8
tick,0x7ffdf681f424,9511968,0,0x0,8
tick,0x7ffdf681f424,9513959,0,0x0,8
tick,0x7ffdf681f424,9515954,0,0x0,8
tick,0x7ffdf681f424,9517955,0,0x0,8
tick,0x7ffdf681f424,9519945,0,0x0,8
tick,0x7ffdf681f424,9521938,0,0x0,8
tick,0x7ffdf681f424,9523933,0,0x0,8
tick,0x7ffdf681f424,9525935,0,0x0,8
tick,0x7ffdf681f424,9527938,0,0x0,8
tick,0x7ffdf681f424,9529934,0,0x0,8
tick,0x7ffdf681f424,9531919,0,0x0,8
tick,0x7ffdf681f424,9533908,0,0x0,8
tick,0x7ffdf681f424,9535919,0,0x0,8
tick,0x7ffdf681f424,9537903,0,0x0,8
tick,0x7ffdf681f424,9539905,0,0x0,8
tick,0x7ffdf681f424,9541884,0,0x0,8
tick,0x7ffdf681f424,9543879,0,0x0,8
tick,0x7ffdf681f424,9545874,0,0x0,8
tick,0x7ffdf681f424,9547795,0,0x0,8
tick,0x7ffdf681f424,9549873,0,0x0,8
tick,0x7ffdf681f424,9551877,0,0x0,8
tick,0x7ffdf681f424,9553937,0,0x0,8
tick,0x7ffdf681f424,9555876,0,0x0,8
tick,0x7ffdf681f424,9557852,0,0x0,8
tick,0x7ffdf681f424,9559841,0,0x0,8
tick,0x7ffdf681f424,9561839,0,0x0,8
tick,0x7ffdf681f424,9563852,0,0x0,8
tick,0x7ffdf681f424,9565823,0,0x0,8
tick,0x7ffdf681f424,9567816,0,0x0,8
tick,0x7ffdf681f424,9569818,0,0x0,8
tick,0x7ffdf681f424,9571809,0,0x0,8
tick,0x7ffdf681f424,9573809,0,0x0,8
tick,0x7ffdf681f424,9575874,0,0x0,8
tick,0x7ffdf681f424,9577828,0,0x0,8
tick,0x7ffdf681f424,9579789,0,0x0,8
tick,0x7ffdf681f424,9581782,0,0x0,8
tick,0x7ffdf681f424,9583779,0,0x0,8
tick,0x7ffdf681f424,9585773,0,0x0,8
tick,0x7ffdf681f424,9587762,0,0x0,8
tick,0x7ffdf681f424,9589655,0,0x0,8
tick,0x7ffdf681f424,9591695,0,0x0,8
tick,0x7ffdf681f424,9593747,0,0x0,8
tick,0x7ffdf681f424,9595756,0,0x0,8
tick,0x7ffdf681f424,9597740,0,0x0,8
tick,0x7ffdf681f424,9599733,0,0x0,8
tick,0x7ffdf681f424,9601728,0,0x0,8
tick,0x7ffdf681f424,9603724,0,0x0,8
tick,0x7ffdf681f424,9605720,0,0x0,8
tick,0x7ffdf681f424,9607719,0,0x0,8
tick,0x7ffdf681f424,9609606,0,0x0,8
tick,0x7ffdf681f424,9611656,0,0x0,8
tick,0x7ffdf681f424,9613538,0,0x0,8
tick,0x7ffdf681f424,9615553,0,0x0,8
tick,0x7ffdf681f424,9617660,0,0x0,8
tick,0x7ffdf681f424,9619692,0,0x0,8
tick,0x7ffdf681f424,9621738,0,0x0,8
tick,0x7ffdf681f424,9623658,0,0x0,8
tick,0x7ffdf681f424,9625510,0,0x0,8
tick,0x7ffdf681f424,9627562,0,0x0,8
tick,0x7ffdf681f424,9629675,0,0x0,8
tick,0x7ffdf681f424,9631534,0,0x0,8
tick,0x7ffdf681f424,9633637,0,0x0,8
tick,0x7ffdf681f424,9635643,0,0x0,8
tick,0x7ffdf681f424,9637630,0,0x0,8
tick,0x7ffdf681f424,9639543,0,0x0,8
tick,0x7ffdf681f424,9641649,0,0x0,8
tick,0x7ffdf681f424,9643648,0,0x0,8
tick,0x7ffdf681f424,9645699,0,0x0,8
tick,0x7ffdf681f424,9647609,0,0x0,8
tick,0x7ffdf681f424,9649603,0,0x0,8
tick,0x7ffdf681f424,9651591,0,0x0,8
tick,0x7ffdf681f424,9653585,0,0x0,8
tick,0x7ffdf681f424,9655593,0,0x0,8
tick,0x7ffdf681f424,9657583,0,0x0,8
tick,0x7ffdf681f424,9659636,0,0x0,8
tick,0x7ffdf681f424,9661582,0,0x0,8
tick,0x7ffdf681f424,9663567,0,0x0,8
tick,0x7ffdf681f424,9665580,0,0x0,8
tick,0x7ffdf681f424,9667548,0,0x0,8
tick,0x7ffdf681f424,9669543,0,0x0,8
tick,0x7ffdf681f424,9671544,0,0x0,8
tick,0x7ffdf681f424,9673538,0,0x0,8
tick,0x7ffdf681f424,9675528,0,0x0,8
tick,0x7ffdf681f424,9677527,0,0x0,8
tick,0x7ffdf681f424,9679525,0,0x0,8
tick,0x7ffdf681f424,9681422,0,0x0,8
tick,0x7ffdf681f424,9683522,0,0x0,8
tick,0x7ffdf681f424,9685511,0,0x0,8
tick,0x7ffdf681f424,9687511,0,0x0,8
tick,0x7ffdf681f424,9689493,0,0x0,8
tick,0x7ffdf681f424,9691501,0,0x0,8
tick,0x7ffdf681f424,9693482,0,0x0,8
tick,0x7ffdf681f424,9695479,0,0x0,8
tick,0x7ffdf681f424,9697470,0,0x0,8
tick,0x7ffdf681f424,9699486,0,0x0,8
tick,0x7ffdf681f424,9701458,0,0x0,8
tick,0x7ffdf681f424,9703458,0,0x0,8
tick,0x7ffdf681f424,9705463,0,0x0,8
tick,0x7ffdf681f424,9707450,0,0x0,8
tick,0x7ffdf681f424,9709456,0,0x0,8
tick,0x7ffdf681f424,9711438,0,0x0,8
tick,0x7ffdf681f424,9713433,0,0x0,8
tick,0x7ffdf681f424,9715427,0,0x0,8
tick,0x7ffdf681f424,9717431,0,0x0,8
tick,0x7ffdf681f424,9719416,0,0x0,8
tick,0x7ffdf681f424,9721413,0,0x0,8
tick,0x7ffdf681f424,9723405,0,0x0,8
tick,0x7ffdf681f424,9725397,0,0x0,8
tick,0x7ffdf681f424,9727404,0,0x0,8
tick,0x7ffdf681f424,9729462,0,0x0,8
tick,0x7ffdf681f424,9731416,0,0x0,8
tick,0x7ffdf681f424,9733378,0,0x0,8
tick,0x7ffdf681f424,9735373,0,0x0,8
tick,0x7ffdf681f424,9737367,0,0x0,8
tick,0x7ffdf681f424,9739368,0,0x0,8
tick,0x7ffdf681f424,9741435,0,0x0,8
tick,0x7ffdf681f424,9743363,0,0x0,8
tick,0x7ffdf681f424,9745209,0,0x0,8
tick,0x7ffdf681f424,9747304,0,0x0,8
tick,0x7ffdf681f424,9749295,0,0x0,8
tick,0x7ffdf681f424,9751384,0,0x0,8
tick,0x7ffdf681f424,9753327,0,0x0,8
tick,0x7ffdf681f424,9755310,0,0x0,8
tick,0x7ffdf681f424,9757261,0,0x0,8
tick,0x7ffdf681f424,9759173,0,0x0,8
tick,0x7ffdf681f424,9761211,0,0x0,8
tick,0x7ffdf681f424,9763298,0,0x0,8
tick,0x7ffdf681f424,9765189,0,0x0,8
tick,0x7ffdf681f424,9767285,0,0x0,8
tick,0x7ffdf681f424,9769277,0,0x0,8
tick,0x7ffdf681f424,9771285,0,0x0,8
tick,0x7ffdf681f424,9773247,0,0x0,8
tick,0x7ffdf681f424,9775266,0,0x0,8
tick,0x7ffdf681f424,9777256,0,0x0,8
tick,0x7ffdf681f424,9779256,0,0x0,8
tick,0x7ffdf681f424,9781233,0,0x0,8
tick,0x7ffdf681f424,9783242,0,0x0,8
tick,0x7ffdf681f424,9785236,0,0x0,8
tick,0x7ffdf681f424,9787228,0,0x0,8
tick,0x7ffdf681f424,9789239,0,0x0,8
tick,0x7ffdf681f424,9791238,0,0x0,8
tick,0x7ffdf681f424,9793231,0,0x0,8
tick,0x7ffdf681f424,9795276,0,0x0,8
tick,0x7ffdf681f424,9797234,0,0x0,8
tick,0x7ffdf681f424,9799196,0,0x0,8
tick,0x7ffdf681f424,9801197,0,0x0,8
tick,0x7ffdf681f424,9803084,0,0x0,8
tick,0x7ffdf681f424,9805191,0,0x0,8
tick,0x7ffdf681f424,9807177,0,0x0,8
tick,0x7ffdf681f424,9809170,0,0x0,8
tick,0x7ffdf681f424,9811172,0,0x0,8
tick,0x7ffdf681f424,9813162,0,0x0,8
tick,0x7ffdf681f424,9815173,0,0x0,8
tick,0x7ffdf681f424,9817156,0,0x0,8
tick,0x7ffdf681f424,9819162,0,0x0,8
tick,0x7ffdf681f424,9821145,0,0x0,8
tick,0x7ffdf681f424,9823034,0,0x0,8
tick,0x7ffdf681f424,9825134,0,0x0,8
tick,0x7ffdf681f424,9827127,0,0x0,8
tick,0x7ffdf681f424,9829116,0,0x0,8
tick,0x7ffdf681f424,9831015,0,0x0,8
tick,0x7ffdf681f424,9833111,0,0x0,8
tick,0x7ffdf681f424,9835108,0,0x0,8
tick,0x7ffdf681f424,9837106,0,0x0,8
tick,0x7ffdf681f424,9839095,0,0x0,8
tick,0x7ffdf681f424,9841109,0,0x0,8
tick,0x7ffdf681f424,9843108,0,0x0,8
tick,0x7ffdf681f424,9845073,0,0x0,8
tick,0x7ffdf681f424,9847070,0,0x0,8
tick,0x7ffdf681f424,9849065,0,0x0,8
tick,0x7ffdf681f424,9851074,0,0x0,8
tick,0x7ffdf681f424,9853056,0,0x0,8
tick,0x7ffdf681f424,9855054,0,0x0,8
tick,0x7ffdf681f424,9857049,0,0x0,8
tick,0x7ffdf681f424,9859053,0,0x0,8
tick,0x7ffdf681f424,9861046,0,0x0,8
tick,0x7ffdf681f424,9863068,0,0x0,8
tick,0x7ffdf681f424,9864927,0,0x0,8
tick,0x7ffdf681f424,9867021,0,0x0,8
tick,0x7ffdf681f424,9869017,0,0x0,8
tick,0x7ffdf681f424,9870905,0,0x0,8
tick,0x7ffdf681f424,9872909,0,0x0,8
tick,0x7ffdf681f424,9874918,0,0x0,8
tick,0x7ffdf681f424,9876977,0,0x0,8
tick,0x7ffdf681f424,9879008,0,0x0,8
tick,0x7ffdf681f424,9881040,0,0x0,8
tick,0x7ffdf681f424,9882848,0,0x0,8
tick,0x7ffdf681f424,9884841,0,0x0,8
tick,0x7ffdf681f424,9886987,0,0x0,8
tick,0x7ffdf681f424,9888970,0,0x0,8
tick,0x7ffdf681f424,9890855,0,0x0,8
tick,0x7ffdf681f424,9892946,0,0x0,8
tick,0x7ffdf681f424,9894942,0,0x0,8
tick,0x7ffdf681f424,9896871,0,0x0,8
tick,0x7ffdf681f424,9898832,0,0x0,8
tick,0x7ffdf681f424,9900932,0,0x0,8
tick,0x7ffdf681f424,9902858,0,0x0,8
tick,0x7ffdf681f424,9904928,0,0x0,8
tick,0x7ffdf681f424,9906854,0,0x0,8
tick,0x7ffdf681f424,9908911,0,0x0,8
tick,0x7ffdf681f424,9910905,0,0x0,8
tick,0x7ffdf681f424,9912900,0,0x0,8
tick,0x7ffdf681f424,9914812,0,0x0,8
tick,0x7ffdf681f424,9916913,0,0x0,8
tick,0x7ffdf681f424,9918882,0,0x0,8
tick,0x7ffdf681f424,9920886,0,0x0,8
tick,0x7ffdf681f424,9922866,0,0x0,8
tick,0x7ffdf681f424,9924868,0,0x0,8
tick,0x7ffdf681f424,9926859,0,0x0,8
tick,0x7ffdf681f424,9928868,0,0x0,8
tick,0x7ffdf681f424,9930858,0,0x0,8
tick,0x7ffdf681f424,9932849,0,0x0,8
tick,0x7ffdf681f424,9934841,0,0x0,8
tick,0x7ffdf681f424,9936835,0,0x0,8
tick,0x7ffdf681f424,9938823,0,0x0,8
tick,0x7ffdf681f424,9940832,0,0x0,8
tick,0x7ffdf681f424,9942830,0,0x0,8
tick,0x7ffdf681f424,9944831,0,0x0,8
tick,0x7ffdf681f424,9946816,0,0x0,8
tick,0x7ffdf681f424,9948804,0,0x0,8
tick,0x7ffdf681f424,9950815,0,0x0,8
tick,0x7ffdf681f424,9952793,0,0x0,8
tick,0x7ffdf681f424,9954786,0,0x0,8
tick,0x7ffdf681f424,9956780,0,0x0,8
tick,0x7ffdf681f424,9958777,0,0x0,8
tick,0x7ffdf681f424,9960771,0,0x0,8
tick,0x7ffdf681f424,9962766,0,0x0,8
tick,0x7ffdf681f424,9964652,0,0x0,8
tick,0x7ffdf681f424,9966763,0,0x0,8
tick,0x7ffdf681f424,9968754,0,0x0,8
tick,0x7ffdf681f424,9970745,0,0x0,8
tick,0x7ffdf681f424,9972760,0,0x0,8
tick,0x7ffdf681f424,9974634,0,0x0,8
tick,0x7ffdf681f424,9976736,0,0x0,8
tick,0x7ffdf681f424,9978679,0,0x0,8
tick,0x7ffdf681f424,9980721,0,0x0,8
tick,0x7ffdf681f424,9982601,0,0x0,8
tick,0x7ffdf681f424,9984711,0,0x0,8
tick,0x7ffdf681f424,9986705,0,0x0,8
tick,0x7ffdf681f424,9988700,0,0x0,8
tick,0x7ffdf681f424,9990696,0,0x0,8
tick,0x7ffdf681f424,9992696,0,0x0,8
tick,0x7ffdf681f424,9994708,0,0x0,8
tick,0x7ffdf681f424,9996673,0,0x0,8
tick,0x7ffdf681f424,9998670,0,0x0,8
tick,0x7ffdf681f424,10000559,0,0x0,8
tick,0x7ffdf681f424,10002610,0,0x0,8
tick,0x7ffdf681f424,10004521,0,0x0,8
tick,0x7ffdf681f424,10006534,0,0x0,8
tick,0x7ffdf681f424,10008618,0,0x0,8
tick,0x7ffdf681f424,10010665,0,0x0,8
tick,0x7ffdf681f424,10012670,0,0x0,8
tick,0x7ffdf681f424,10014529,0,0x0,8
tick,0x7ffdf681f424,10016530,0,0x0,8
tick,0x7ffdf681f424,10018527,0,0x0,8
tick,0x7ffdf681f424,10020573,0,0x0,8
tick,0x7ffdf681f424,10022607,0,0x0,8
tick,0x7ffdf681f424,10024508,0,0x0,8
tick,0x7ffdf681f424,10026591,0,0x0,8
tick,0x7ffdf681f424,10028594,0,0x0,8
tick,0x7ffdf681f424,10030585,0,0x0,8
tick,0x7ffdf681f424,10032547,0,0x0,8
tick,0x7ffdf681f424,10034568,0,0x0,8
tick,0x7ffdf681f424,10036571,0,0x0,8
tick,0x7ffdf681f424,10038580,0,0x0,8
tick,0x7ffdf681f424,10040620,0,0x0,8
tick,0x7ffdf681f424,10042557,0,0x0,8
tick,0x7ffdf681f424,10044578,0,0x0,8
tick,0x7ffdf681f424,10046536,0,0x0,8
tick,0x7ffdf681f424,10048532,0,0x0,8
tick,0x7ffdf681f424,10050529,0,0x0,8
tick,0x7ffdf681f424,10052522,0,0x0,8
tick,0x7ffdf681f424,10054519,0,0x0,8
tick,0x7ffdf681f424,10056421,0,0x0,8
tick,0x7ffdf681f424,10058447,0,0x0,8
tick,0x7ffdf681f424,10060518,0,0x0,8
tick,0x7ffdf681f424,10062500,0,0x0,8
tick,0x7ffdf681f424,10064499,0,0x0,8
tick,0x7ffdf681f424,10066482,0,0x0,8
tick,0x7ffdf681f424,10068487,0,0x0,8
tick,0x7ffdf681f424,10070473,0,0x0,8
tick,0x7ffdf681f424,10072467,0,0x0,8
tick,0x7ffdf681f424,10074364,0,0x0,8
tick,0x7ffdf681f424,10076455,0,0x0,8
tick,0x7ffdf681f424,10078465,0,0x0,8
tick,0x7ffdf681f424,10080523,0,0x0,8
tick,0x7ffdf681f424,10082475,0,0x0,8
tick,0x7ffdf681f424,10084433,0,0x0,8
tick,0x7ffdf681f424,10086430,0,0x0,8
tick,0x7ffdf681f424,10088429,0,0x0,8
tick,0x7ffdf681f424,10090418,0,0x0,8
tick,0x7ffdf681f424,10092356,0,0x0,8
tick,0x7ffdf681f424,10094414,0,0x0,8
tick,0x7ffdf681f424,10096407,0,0x0,8
tick,0x7ffdf681f424,10098402,0,0x0,8
tick,0x7ffdf681f424,10100399,0,0x0,8
tick,0x7ffdf681f424,10102397,0,0x0,8
tick,0x7ffdf681f424,10104401,0,0x0,8
tick,0x7ffdf681f424,10106275,0,0x0,8
tick,0x7ffdf681f424,10108407,0,0x0,8
tick,0x7ffdf681f424,10110268,0,0x0,8
tick,0x7ffdf681f424,10112361,0,0x0,8
tick,0x7ffdf681f424,10114353,0,0x0,8
tick,0x7ffdf681f424,10116349,0,0x0,8
tick,0x7ffdf681f424,10118349,0,0x0,8
tick,0x7ffdf681f424,10120346,0,0x0,8
tick,0x7ffdf681f424,10122344,0,0x0,8
tick,0x7ffdf681f424,10124337,0,0x0,8
tick,0x7ffdf681f424,10126352,0,0x0,8
tick,0x7ffdf681f424,10128337,0,0x0,8
tick,0x7ffdf681f424,10130341,0,0x0,8
tick,0x7ffdf681f424,10132286,0,0x0,8
tick,0x7ffdf681f424,10134196,0,0x0,8
tick,0x7ffdf681f424,10136142,0,0x0,8
tick,0x7ffdf681f424,10138304,0,0x0,8
tick,0x7ffdf681f424,10140230,0,0x0,8
tick,0x7ffdf681f424,10142315,0,0x0,8
tick,0x7ffdf681f424,10144273,0,0x0,8
tick,0x7ffdf681f424,10146287,0,0x0,8
tick,0x7ffdf681f424,10148215,0,0x0,8
tick,0x7ffdf681f424,10150251,0,0x0,8
tick,0x7ffdf681f424,10152141,0,0x0,8
tick,0x7ffdf681f424,10154167,0,0x0,8
tick,0x7ffdf681f424,10156192,0,0x0,8
tick,0x7ffdf681f424,10158195,0,0x0,8
tick,0x7ffdf681f424,10160268,0,0x0,8
tick,0x7ffdf681f424,10162235,0,0x0,8
tick,0x7ffdf681f424,10164236,0,0x0,8
tick,0x7ffdf681f424,10166236,0,0x0,8
tick,0x7ffdf681f424,10168230,0,0x0,8
tick,0x7ffdf681f424,10170233,0,0x0,8
tick,0x7ffdf681f424,10172214,0,0x0,8
tick,0x7ffdf681f424,10174201,0,0x0,8
tick,0x7ffdf681f424,10176201,0,0x0,8
tick,0x7ffdf681f424,10178196,0,0x0,8
tick,0x7ffdf681f424,10180190,0,0x0,8
tick,0x7ffdf681f424,10182194,0,0x0,8
tick,0x7ffdf681f424,10184174,0,0x0,8
tick,0x7ffdf681f424,10186197,0,0x0,8
tick,0x7ffdf681f424,10188203,0,0x0,8
tick,0x7ffdf681f424,10190178,0,0x0,8
tick,0x7ffdf681f424,10192186,0,0x0,8
tick,0x7ffdf681f424,10194156,0,0x0,8
tick,0x7ffdf681f424,10196150,0,0x0,8
tick,0x7ffdf681f424,10198031,0,0x0,8
tick,0x7ffdf681f424,10200137,0,0x0,8
tick,0x7ffdf681f424,10202130,0,0x0,8
tick,0x7ffdf681f424,10204118,0,0x0,8
tick,0x7ffdf681f424,10206132,0,0x0,8
tick,0x7ffdf681f424,10208110,0,0x0,8
tick,0x7ffdf681f424,10210113,0,0x0,8
tick,0x7ffdf681f424,10212101,0,0x0,8
tick,0x7ffdf681f424,10214114,0,0x0,8
tick,0x7ffdf681f424,10216102,0,0x0,8
tick,0x7ffdf681f424,10218083,0,0x0,8
tick,0x7ffdf681f424,10220084,0,0x0,8
tick,0x7ffdf681f424,10222073,0,0x0,8
tick,0x7ffdf681f424,10224075,0,0x0,8
tick,0x7ffdf681f424,10226056,0,0x0,8
tick,0x7ffdf681f424,10228057,0,0x0,8
tick,0x7ffdf681f424,10230052,0,0x0,8
tick,0x7ffdf681f424,10232050,0,0x0,8
tick,0x7ffdf681f424,10234043,0,0x0,8
tick,0x7ffdf681f424,10236024,0,0x0,8
tick,0x7ffdf681f424,10238029,0,0x0,8
tick,0x7ffdf681f424,10239978,0,0x0,8
tick,0x7ffdf681f424,10242021,0,0x0,8
tick,0x7ffdf681f424,10244019,0,0x0,8
tick,0x7ffdf681f424,10246031,0,0x0,8
tick,0x7ffdf681f424,10247996,0,0x0,8
tick,0x7ffdf681f424,10249997,0,0x0,8
tick,0x7ffdf681f424,10251990,0,0x0,8
tick,0x7ffdf681f424,10253997,0,0x0,8
tick,0x7ffdf681f424,10255980,0,0x0,8
tick,0x7ffdf681f424,10257980,0,0x0,8
tick,0x7ffdf681f424,10259964,0,0x0,8
tick,0x7ffdf681f424,10261860,0,0x0,8
tick,0x7ffdf681f424,10263913,0,0x0,8
tick,0x7ffdf681f424,10265797,0,0x0,8
tick,0x7ffdf681f424,10267911,0,0x0,8
tick,0x7ffdf681f424,10269947,0,0x0,8
tick,0x7ffdf681f424,10272014,0,0x0,8
tick,0x7ffdf681f424,10273894,0,0x0,8
tick,0x7ffdf681f424,10275767,0,0x0,8
tick,0x7ffdf681f424,10277826,0,0x0,8
tick,0x7ffdf681f424,10279812,0,0x0,8
tick,0x7ffdf681f424,10281805,0,0x0,8
tick,0x7ffdf681f424,10283926,0,0x0,8
tick,0x7ffdf681f424,10285887,0,0x0,8
tick,0x7ffdf681f424,10287922,0,0x0,8
tick,0x7ffdf681f424,10289808,0,0x0,8
tick,0x7ffdf681f424,10291886,0,0x0,8
tick,0x7ffdf681f424,10293882,0,0x0,8
tick,0x7ffdf681f424,10295875,0,0x0,8
tick,0x7ffdf681f424,10297873,0,0x0,8
tick,0x7ffdf681f424,10299863,0,0x0,8
tick,0x7ffdf681f424,10301871,0,0x0,8
tick,0x7ffdf681f424,10303855,0,0x0,8
tick,0x7ffdf681f424,10305842,0,0x0,8
tick,0x7ffdf681f424,10307837,0,0x0,8
tick,0x7ffdf681f424,10309772,0,0x0,8
tick,0x7ffdf681f424,10311826,0,0x0,8
tick,0x7ffdf681f424,10313833,0,0x0,8
tick,0x7ffdf681f424,10315703,0,0x0,8
tick,0x7ffdf681f424,10317706,0,0x0,8
tick,0x7ffdf681f424,10319716,0,0x0,8
tick,0x7ffdf681f424,10321671,0,0x0,8
tick,0x7ffdf681f424,10323806,0,0x0,8
tick,0x7ffdf681f424,10325799,0,0x0,8
tick,0x7ffdf681f424,10327791,0,0x0,8
tick,0x7ffdf681f424,10329783,0,0x0,8
tick,0x7ffdf681f424,10331781,0,0x0,8
tick,0x7ffdf681f424,10333771,0,0x0,8
tick,0x7ffdf681f424,10335765,0,0x0,8
tick,0x7ffdf681f424,10337762,0,0x0,8
tick,0x7ffdf681f424,10339649,0,0x0,8
tick,0x7ffdf681f424,10341756,0,0x0,8
tick,0x7ffdf681f424,10343747,0,0x0,8
tick,0x7ffdf681f424,10345750,0,0x0,8
tick,0x7ffdf681f424,10347747,0,0x0,8
tick,0x7ffdf681f424,10349731,0,0x0,8
tick,0x7ffdf681f424,10351720,0,0x0,8
tick,0x7ffdf681f424,10353730,0,0x0,8
tick,0x7ffdf681f424,10355708,0,0x0,8
tick,0x7ffdf681f424,10357692,0,0x0,8
tick,0x7ffdf681f424,10359597,0,0x0,8
tick,0x7ffdf681f424,10361698,0,0x0,8
tick,0x7ffdf681f424,10363705,0,0x0,8
tick,0x7ffdf681f424,10365688,0,0x0,8
tick,0x7ffdf681f424,10367687,0,0x0,8
tick,0x7ffdf681f424,10369677,0,0x0,8
tick,0x7ffdf681f424,10371672,0,0x0,8
tick,0x7ffdf681f424,10373661,0,0x0,8
tick,0x7ffdf681f424,10375662,0,0x0,8
tick,0x7ffdf681f424,10377664,0,0x0,8
tick,0x7ffdf681f424,10379654,0,0x0,8
tick,0x7ffdf681f424,10381647,0,0x0,8
tick,0x7ffdf681f424,10383639,0,0x0,8
tick,0x7ffdf681f424,10385528,0,0x0,8
tick,0x7ffdf681f424,10387630,0,0x0,8
tick,0x7ffdf681f424,10389636,0,0x0,8
tick,0x7ffdf681f424,10391516,0,0x0,8
tick,0x7ffdf681f424,10393593,0,0x0,8
tick,0x7ffdf681f424,10395478,0,0x0,8
tick,0x7ffdf681f424,10397516,0,0x0,8
tick,0x7ffdf681f424,10399502,0,0x0,8
tick,0x7ffdf681f424,10401599,0,0x0,8
tick,0x7ffdf681f424,10403581,0,0x0,8
tick,0x7ffdf681f424,10405580,0,0x0,8
tick,0x7ffdf681f424,10407542,0,0x0,8
tick,0x7ffdf681f424,10409501,0,0x0,8
tick,0x7ffdf681f424,10411559,0,0x0,8
tick,0x7ffdf681f424,10413555,0,0x0,8
tick,0x7ffdf681f424,10415456,0,0x0,8
tick,0x7ffdf681f424,10417504,0,0x0,8
tick,0x7ffdf681f424,10419436,0,0x0,8
tick,0x7ffdf681f424,10421536,0,0x0,8
tick,0x7ffdf681f424,10423429,0,0x0,8
tick,0x7ffdf681f424,10425538,0,0x0,8
tick,0x7ffdf681f424,10427525,0,0x0,8
tick,0x7ffdf681f424,10429525,0,0x0,8
tick,0x7ffdf681f424,10431399,0,0x0,8
tick,0x7ffdf681f424,10433504,0,0x0,8
tick,0x7ffdf681f424,10435500,0,0x0,8
tick,0x7ffdf681f424,10437491,0,0x0,8
tick,0x7ffdf681f424,10439507,0,0x0,8
tick,0x7ffdf681f424,10441494,0,0x0,8
tick,0x7ffdf681f424,10443478,0,0x0,8
tick,0x7ffdf681f424,10445474,0,0x0,8
tick,0x7ffdf681f424,10447502,0,0x0,8
tick,0x7ffdf681f424,10449457,0,0x0,8
tick,0x7ffdf681f424,10451463,0,0x0,8
tick,0x7ffdf681f424,10453454,0,0x0,8
tick,0x7ffdf681f424,10455468,0,0x0,8
tick,0x7ffdf681f424,10457443,0,0x0,8
tick,0x7ffdf681f424,10459435,0,0x0,8
tick,0x7ffdf681f424,10461324,0,0x0,8
tick,0x7ffdf681f424,10463355,0,0x0,8
tick,0x7ffdf681f424,10465427,0,0x0,8
tick,0x7ffdf681f424,10467361,0,0x0,8
tick,0x7ffdf681f424,10469329,0,0x0,8
tick,0x7ffdf681f424,10471328,0,0x0,8
tick,0x7ffdf681f424,10473311,0,0x0,8
tick,0x7ffdf681f424,10475257,0,0x0,8
tick,0x7ffdf681f424,10477333,0,0x0,8
tick,0x7ffdf681f424,10479277,0,0x0,8
tick,0x7ffdf681f424,10481289,0,0x0,8
tick,0x7ffdf681f424,10483261,0,0x0,8
tick,0x7ffdf681f424,10485260,0,0x0,8
tick,0x7ffdf681f424,10487257,0,0x0,8
tick,0x7ffdf681f424,10489248,0,0x0,8
tick,0x7ffdf681f424,10491255,0,0x0,8
tick,0x7ffdf681f424,10493251,0,0x0,8
tick,0x7ffdf681f424,10495246,0,0x0,8
tick,0x7ffdf681f424,10497202,0,0x0,8
tick,0x7ffdf681f424,10499255,0,0x0,8
tick,0x7ffdf681f424,10501217,0,0x0,8
tick,0x7ffdf681f424,10503210,0,0x0,8
tick,0x7ffdf681f424,10505202,0,0x0,8
tick,0x7ffdf681f424,10507205,0,0x0,8
tick,0x7ffdf681f424,10509191,0,0x0,8
tick,0x7ffdf681f424,10511192,0,0x0,8
tick,0x7ffdf681f424,10513186,0,0x0,8
tick,0x7ffdf681f424,10515178,0,0x0,8
tick,0x7ffdf681f424,10517239,0,0x0,8
tick,0x7ffdf681f424,10519179,0,0x0,8
tick,0x7ffdf681f424,10521163,0,0x0,8
tick,0x7ffdf681f424,10523152,0,0x0,8
tick,0x7ffdf681f424,10525149,0,0x0,8
tick,0x7ffdf681f424,10527139,0,0x0,8
tick,0x7ffdf681f424,10529133,0,0x0,8
tick,0x7ffdf681f424,10531129,0,0x0,8
tick,0x7ffdf681f424,10533110,0,0x0,8
tick,0x7ffdf681f424,10535097,0,0x0,8
tick,0x7ffdf681f424,10537091,0,0x0,8
tick,0x7ffdf681f424,10539117,0,0x0,8
tick,0x7ffdf681f424,10541178,0,0x0,8
tick,0x7ffdf681f424,10543055,0,0x0,8
tick,0x7ffdf681f424,10545041,0,0x0,8
tick,0x7ffdf681f424,10547087,0,0x0,8
tick,0x7ffdf681f424,10549104,0,0x0,8
tick,0x7ffdf681f424,10551116,0,0x0,8
tick,0x7ffdf681f424,10553111,0,0x0,8
tick,0x7ffdf681f424,10555107,0,0x0,8
tick,0x7ffdf681f424,10557123,0,0x0,8
tick,0x7ffdf681f424,10559078,0,0x0,8
tick,0x7ffdf681f424,10561060,0,0x0,8
tick,0x7ffdf681f424,10563073,0,0x0,8
tick,0x7ffdf681f424,10564992,0,0x0,8
tick,0x7ffdf681f424,10567006,0,0x0,8
tick,0x7ffdf681f424,10569013,0,0x0,8
tick,0x7ffdf681f424,10571013,0,0x0,8
tick,0x7ffdf681f424,10573023,0,0x0,8
tick,0x7ffdf681f424,10575018,0,0x0,8
tick,0x7ffdf681f424,10577016,0,0x0,8
tick,0x7ffdf681f424,10579012,0,0x0,8
tick,0x7ffdf681f424,10581028,0,0x0,8
tick,0x7ffdf681f424,10582998,0,0x0,8
tick,0x7ffdf681f424,10585082,0,0x0,8
tick,0x7ffdf681f424,10587004,0,0x0,8
tick,0x7ffdf681f424,10588983,0,0x0,8
tick,0x7ffdf681f424,10590996,0,0x0,8
tick,0x7ffdf681f424,10592966,0,0x0,8
tick,0x7ffdf681f424,10594969,0,0x0,8
tick,0x7ffdf681f424,10596958,0,0x0,8
tick,0x7ffdf681f424,10598983,0,0x0,8
tick,0x7ffdf681f424,10600991,0,0x0,8
tick,0x7ffdf681f424,10603001,0,0x0,8
tick,0x7ffdf681f424,10605014,0,0x0,8
tick,0x7ffdf681f424,10606921,0,0x0,8
tick,0x7ffdf681f424,10608987,0,0x0,8
tick,0x7ffdf681f424,10610977,0,0x0,8
tick,0x7ffdf681f424,10612978,0,0x0,8
tick,0x7ffdf681f424,10615002,0,0x0,8
tick,0x7ffdf681f424,10616963,0,0x0,8
tick,0x7ffdf681f424,10618899,0,0x0,8
tick,0x7ffdf681f424,10620904,0,0x0,8
tick,0x7ffdf681f424,10622898,0,0x0,8
tick,0x7ffdf681f424,10624882,0,0x0,8
tick,0x7ffdf681f424,10626875,0,0x0,8
tick,0x7ffdf681f424,10628871,0,0x0,8
tick,0x7ffdf681f424,10630916,0,0x0,8
tick,0x7ffdf681f424,10632865,0,0x0,8
tick,0x7ffdf681f424,10634920,0,0x0,8
tick,0x7ffdf681f424,10636859,0,0x0,8
tick,0x7ffdf681f424,10638867,0,0x0,8
tick,0x7ffdf681f424,10640898,0,0x0,8
tick,0x7ffdf681f424,10642843,0,0x0,8
tick,0x7ffdf681f424,10644845,0,0x0,8
tick,0x7ffdf681f424,10646891,0,0x0,8
tick,0x7ffdf681f424,10648878,0,0x0,8
tick,0x7ffdf681f424,10650833,0,0x0,8
tick,0x7ffdf681f424,10652885,0,0x0,8
tick,0x7ffdf681f424,10654828,0,0x0,8
tick,0x7ffdf681f424,10656874,0,0x0,8
tick,0x7ffdf681f424,10658745,0,0x0,8
tick,0x7ffdf681f424,10660768,0,0x0,8
tick,0x7ffdf681f424,10662791,0,0x0,8
tick,0x7ffdf681f424,10664723,0,0x0,8
tick,0x7ffdf681f424,10666725,0,0x0,8
tick,0x7ffdf681f424,10668770,0,0x0,8
tick,0x7ffdf681f424,10670705,0,0x0,8
tick,0x7ffdf681f424,10672842,0,0x0,8
tick,0x7ffdf681f424,10674811,0,0x0,8
tick,0x7ffdf681f424,10676894,0,0x0,8
tick,0x7ffdf681f424,10678830,0,0x0,8
tick,0x7ffdf681f424,10680835,0,0x0,8
tick,0x7ffdf681f424,10682839,0,0x0,8
tick,0x7ffdf681f424,10684866,0,0x0,8
tick,0x7ffdf681f424,10686830,0,0x0,8
tick,0x7ffdf681f424,10688842,0,0x0,8
tick,0x7ffdf681f424,10690905,0,0x0,8
tick,0x7ffdf681f424,10692829,0,0x0,8
tick,0x7ffdf681f424,10694822,0,0x0,8
tick,0x7ffdf681f424,10696881,0,0x0,8
tick,0x7ffdf681f424,10698777,0,0x0,8
tick,0x7ffdf681f424,10700802,0,0x0,8
tick,0x7ffdf681f424,10702794,0,0x0,8
tick,0x7ffdf681f424,10704789,0,0x0,8
tick,0x7ffdf681f424,10706671,0,0x0,8
tick,0x7ffdf681f424,10708803,0,0x0,8
tick,0x7ffdf681f424,10710804,0,0x0,8
tick,0x7ffdf681f424,10712771,0,0x0,8
tick,0x7ffdf681f424,10714652,0,0x0,8
tick,0x7ffdf681f424,10716748,0,0x0,8
tick,0x7ffdf681f424,10718756,0,0x0,8
tick,0x7ffdf681f424,10720749,0,0x0,8
tick,0x7ffdf681f424,10722738,0,0x0,8
tick,0x7ffdf681f424,10724621,0,0x0,8
tick,0x7ffdf681f424,10726735,0,0x0,8
tick,0x7ffdf681f424,10728748,0,0x0,8
tick,0x7ffdf681f424,10730767,0,0x0,8
tick,0x7ffdf681f424,10732723,0,0x0,8
tick,0x7ffdf681f424,10734710,0,0x0,8
tick,0x7ffdf681f424,10736740,0,0x0,8
tick,0x7ffdf681f424,10738754,0,0x0,8
tick,0x7ffdf681f424,10740710,0,0x0,8
tick,0x7ffdf681f424,10742703,0,0x0,8
tick,0x7ffdf681f424,10744673,0,0x0,8
tick,0x7ffdf681f424,10746661,0,0x0,8
tick,0x7ffdf681f424,10748572,0,0x0,8
tick,0x7ffdf681f424,10750660,0,0x0,8
tick,0x7ffdf681f424,10752666,0,0x0,8
tick,0x7ffdf681f424,10754649,0,0x0,8
tick,0x7ffdf681f424,10756590,0,0x0,8
tick,0x7ffdf681f424,10758629,0,0x0,8
tick,0x7ffdf681f424,10760693,0,0x0,8
tick,0x7ffdf681f424,10762695,0,0x0,8
tick,0x7ffdf681f424,10764565,0,0x0,8
tick,0x7ffdf681f424,10766648,0,0x0,8
tick,0x7ffdf681f424,10768605,0,0x0,8
tick,0x7ffdf681f424,10770605,0,0x0,8
tick,0x7ffdf681f424,10772509,0,0x0,8
tick,0x7ffdf681f424,10774599,0,0x0,8
tick,0x7ffdf681f424,10776594,0,0x0,8
tick,0x7ffdf681f424,10778507,0,0x0,8
tick,0x7ffdf681f424,10780579,0,0x0,8
tick,0x7ffdf681f424,10782513,0,0x0,8
tick,0x7ffdf681f424,10784580,0,0x0,8
tick,0x7ffdf681f424,10786556,0,0x0,8
tick,0x7ffdf681f424,10788551,0,0x0,8
tick,0x7ffdf681f424,10790498,0,0x0,8
tick,0x7ffdf681f424,10792392,0,0x0,8
tick,0x7ffdf681f424,10794441,0,0x0,8
tick,0x7ffdf681f424,10796550,0,0x0,8
tick,0x7ffdf681f424,10798481,0,0x0,8
tick,0x7ffdf681f424,10800393,0,0x0,8
tick,0x7ffdf681f424,10802483,0,0x0,8
tick,0x7ffdf681f424,10804515,0,0x0,8
tick,0x7ffdf681f424,10806380,0,0x0,8
tick,0x7ffdf681f424,10808400,0,0x0,8
tick,0x7ffdf681f424,10810431,0,0x0,8
tick,0x7ffdf681f424,10812387,0,0x0,8
tick,0x7ffdf681f424,10814377,0,0x0,8
tick,0x7ffdf681f424,10816397,0,0x0,8
tick,0x7ffdf681f424,10818370,0,0x0,8
tick,0x7ffdf681f424,10820363,0,0x0,8
tick,0x7ffdf681f424,10822466,0,0x0,8
tick,0x7ffdf681f424,10824460,0,0x0,8
tick,0x7ffdf681f424,10826457,0,0x0,8
tick,0x7ffdf681f424,10828468,0,0x0,8
tick,0x7ffdf681f424,10830444,0,0x0,8
tick,0x7ffdf681f424,10832419,0,0x0,8
tick,0x7ffdf681f424,10834433,0,0x0,8
tick,0x7ffdf681f424,10836409,0,0x0,8
tick,0x7ffdf681f424,10838419,0,0x0,8
tick,0x7ffdf681f424,10840412,0,0x0,8
tick,0x7ffdf681f424,10842420,0,0x0,8
tick,0x7ffdf681f424,10844402,0,0x0,8
tick,0x7ffdf681f424,10846404,0,0x0,8
tick,0x7ffdf681f424,10848326,0,0x0,8
tick,0x7ffdf681f424,10850405,0,0x0,8
tick,0x7ffdf681f424,10852380,0,0x0,8
tick,0x7ffdf681f424,10854383,0,0x0,8
tick,0x7ffdf681f424,10856322,0,0x0,8
tick,0x7ffdf681f424,10858383,0,0x0,8
tick,0x7ffdf681f424,10860361,0,0x0,8
tick,0x7ffdf681f424,10862354,0,0x0,8
tick,0x7ffdf681f424,10864355,0,0x0,8
tick,0x7ffdf681f424,10866353,0,0x0,8
tick,0x7ffdf681f424,10868335,0,0x0,8
tick,0x7ffdf681f424,10870338,0,0x0,8
tick,0x7ffdf681f424,10872345,0,0x0,8
tick,0x7ffdf681f424,10874324,0,0x0,8
tick,0x7ffdf681f424,10876328,0,0x0,8
tick,0x7ffdf681f424,10878313,0,0x0,8
tick,0x7ffdf681f424,10880312,0,0x0,8
tick,0x7ffdf681f424,10882300,0,0x0,8
tick,0x7ffdf681f424,10884301,0,0x0,8
tick,0x7ffdf681f424,10886290,0,0x0,8
tick,0x7ffdf681f424,10888289,0,0x0,8
tick,0x7ffdf681f424,10890294,0,0x0,8
tick,0x7ffdf681f424,10892283,0,0x0,8
tick,0x7ffdf681f424,10894287,0,0x0,8
tick,0x7ffdf681f424,10896268,0,0x0,8
tick,0x7ffdf681f424,10898257,0,0x0,8
tick,0x7ffdf681f424,10900260,0,0x0,8
tick,0x7ffdf681f424,10902267,0,0x0,8
tick,0x7ffdf681f424,10904140,0,0x0,8
tick,0x7ffdf681f424,10906236,0,0x0,8
tick,0x7ffdf681f424,10908237,0,0x0,8
tick,0x7ffdf681f424,10910233,0,0x0,8
tick,0x7ffdf681f424,10912222,0,0x0,8
tick,0x7ffdf681f424,10914232,0,0x0,8
tick,0x7ffdf681f424,10916056,0,0x0,8
tick,0x7ffdf681f424,10918047,0,0x0,8
tick,0x7ffdf681f424,10920167,0,0x0,8
tick,0x7ffdf681f424,10922088,0,0x0,8
tick,0x7ffdf681f424,10924223,0,0x0,8
tick,0x7ffdf681f424,10926109,0,0x0,8
tick,0x7ffdf681f424,10928210,0,0x0,8
tick,0x7ffdf681f424,10930235,0,0x0,8
tick,0x7ffdf681f424,10931394,0,0x0,8
tick,0x7ffdf681f424,10933327,0,0x0,8
tick,0x7ffdf681f424,10935585,0,0x0,8
tick,0x7ffdf681f424,10937539,0,0x0,8
tick,0x7ffdf681f424,10939743,0,0x0,8
tick,0x7ffdf681f424,10941545,0,0x0,8
tick,0x7ffdf681f424,10942776,0,0x0,8
tick,0x7ffdf681f424,10944756,0,0x0,8
tick,0x7ffdf681f424,10946757,0,0x0,8
tick,0x7ffdf681f424,10948735,0,0x0,8
tick,0x7ffdf681f424,10950731,0,0x0,8
tick,0x7ffdf681f424,10952727,0,0x0,8
tick,0x7ffdf681f424,10954725,0,0x0,8
tick,0x7ffdf681f424,10956570,0,0x0,8
tick,0x7ffdf681f424,10958680,0,0x0,8
tick,0x7ffdf681f424,10960662,0,0x0,8
tick,0x7ffdf681f424,10962656,0,0x0,8
tick,0x7ffdf681f424,10964660,0,0x0,8
tick,0x7ffdf681f424,10966678,0,0x0,8
tick,0x7ffdf681f424,10968641,0,0x0,8
tick,0x7ffdf681f424,10970626,0,0x0,8
tick,0x7ffdf681f424,10972631,0,0x0,8
tick,0x7ffdf681f424,10974618,0,0x0,8
tick,0x7ffdf681f424,10976623,0,0x0,8
tick,0x7ffdf681f424,10978613,0,0x0,8
tick,0x7ffdf681f424,10980621,0,0x0,8
tick,0x7ffdf681f424,10982604,0,0x0,8
tick,0x7ffdf681f424,10984594,0,0x0,8
tick,0x7ffdf681f424,10986587,0,0x0,8
tick,0x7ffdf681f424,10988588,0,0x0,8
tick,0x7ffdf681f424,10990578,0,0x0,8
tick,0x7ffdf681f424,10992463,0,0x0,8
tick,0x7ffdf681f424,10994524,0,0x0,8
tick,0x7ffdf681f424,10996562,0,0x0,8
tick,0x7ffdf681f424,10998449,0,0x0,8
tick,0x7ffdf681f424,11000559,0,0x0,8
tick,0x7ffdf681f424,11002563,0,0x0,8
tick,0x7ffdf681f424,11004543,0,0x0,8
tick,0x7ffdf681f424,11006418,0,0x0,8
tick,0x7ffdf681f424,11008530,0,0x0,8
tick,0x7ffdf681f424,11010529,0,0x0,8
tick,0x7ffdf681f424,11012517,0,0x0,8
tick,0x7ffdf681f424,11014512,0,0x0,8
tick,0x7ffdf681f424,11016508,0,0x0,8
tick,0x7ffdf681f424,11018507,0,0x0,8
tick,0x7ffdf681f424,11020486,0,0x0,8
tick,0x7ffdf681f424,11022492,0,0x0,8
tick,0x7ffdf681f424,11024481,0,0x0,8
tick,0x7ffdf681f424,11026475,0,0x0,8
tick,0x7ffdf681f424,11028487,0,0x0,8
tick,0x7ffdf681f424,11030462,0,0x0,8
tick,0x7ffdf681f424,11032457,0,0x0,8
tick,0x7ffdf681f424,11034517,0,0x0,8
tick,0x7ffdf681f424,11036459,0,0x0,8
tick,0x7ffdf681f424,11038443,0,0x0,8
tick,0x7ffdf681f424,11040441,0,0x0,8
tick,0x7ffdf681f424,11042446,0,0x0,8
tick,0x7ffdf681f424,11044441,0,0x0,8
tick,0x7ffdf681f424,11046348,0,0x0,8
tick,0x7ffdf681f424,11048263,0,0x0,8
tick,0x7ffdf681f424,11050312,0,0x0,8
tick,0x7ffdf681f424,11052278,0,0x0,8
tick,0x7ffdf681f424,11054404,0,0x0,8
tick,0x7ffdf681f424,11056475,0,0x0,8
tick,0x7ffdf681f424,11058232,0,0x0,8
tick,0x7ffdf681f424,11060304,0,0x0,8
tick,0x7ffdf681f424,11062426,0,0x0,8
tick,0x7ffdf681f424,11064370,0,0x0,8
tick,0x7ffdf681f424,11066273,0,0x0,8
tick,0x7ffdf681f424,11068364,0,0x0,8
tick,0x7ffdf681f424,11070355,0,0x0,8
tick,0x7ffdf681f424,11072353,0,0x0,8
tick,0x7ffdf681f424,11074301,0,0x0,8
tick,0x7ffdf681f424,11076341,0,0x0,8
tick,0x7ffdf681f424,11078346,0,0x0,8
tick,0x7ffdf681f424,11080332,0,0x0,8
tick,0x7ffdf681f424,11082324,0,0x0,8
tick,0x7ffdf681f424,11084318,0,0x0,8
tick,0x7ffdf681f424,11086328,0,0x0,8
tick,0x7ffdf681f424,11088327,0,0x0,8
tick,0x7ffdf681f424,11090301,0,0x0,8
tick,0x7ffdf681f424,11092302,0,0x0,8
tick,0x7ffdf681f424,11094299,0,0x0,8
tick,0x7ffdf681f424,11096291,0,0x0,8
tick,0x7ffdf681f424,11098214,0,0x0,8
tick,0x7ffdf681f424,11100276,0,0x0,8
tick,0x7ffdf681f424,11102277,0,0x0,8
tick,0x7ffdf681f424,11104268,0,0x0,8
tick,0x7ffdf681f424,11106263,0,0x0,8
tick,0x7ffdf681f424,11108313,0,0x0,8
tick,0x7ffdf681f424,11110257,0,0x0,8
tick,0x7ffdf681f424,11112262,0,0x0,8
tick,0x7ffdf681f424,11114243,0,0x0,8
tick,0x7ffdf681f424,11116233,0,0x0,8
tick,0x7ffdf681f424,11118227,0,0x0,8
tick,0x7ffdf681f424,11120222,0,0x0,8
tick,0x7ffdf681f424,11122219,0,0x0,8
tick,0x7ffdf681f424,11124225,0,0x0,8
tick,0x7ffdf681f424,11126205,0,0x0,8
tick,0x7ffdf681f424,11128200,0,0x0,8
tick,0x7ffdf681f424,11130235,0,0x0,8
tick,0x7ffdf681f424,11132198,0,0x0,8
tick,0x7ffdf681f424,11134061,0,0x0,8
tick,0x7ffdf681f424,11136182,0,0x0,8
tick,0x7ffdf681f424,11138182,0,0x0,8
tick,0x7ffdf681f424,11140177,0,0x0,8
tick,0x7ffdf681f424,11142169,0,0x0,8
tick,0x7ffdf681f424,11144161,0,0x0,8
tick,0x7ffdf681f424,11146152,0,0x0,8
tick,0x7ffdf681f424,11148045,0,0x0,8
tick,0x7ffdf681f424,11150160,0,0x0,8
tick,0x7ffdf681f424,11152180,0,0x0,8
tick,0x7ffdf681f424,11154140,0,0x0,8
tick,0x7ffdf681f424,11156130,0,0x0,8
tick,0x7ffdf681f424,11158126,0,0x0,8
tick,0x7ffdf681f424,11160122,0,0x0,8
tick,0x7ffdf681f424,11162115,0,0x0,8
tick,0x7ffdf681f424,11164105,0,0x0,8
tick,0x7ffdf681f424,11166107,0,0x0,8
tick,0x7ffdf681f424,11168113,0,0x0,8
tick,0x7ffdf681f424,11170097,0,0x0,8
tick,0x7ffdf681f424,11172089,0,0x0,8
tick,0x7ffdf681f424,11173988,0,0x0,8
tick,0x7ffdf681f424,11175971,0,0x0,8
tick,0x7ffdf681f424,11177926,0,0x0,8
tick,0x7ffdf681f424,11179957,0,0x0,8
tick,0x7ffdf681f424,11181981,0,0x0,8
tick,0x7ffdf681f424,11184058,0,0x0,8
tick,0x7ffdf681f424,11186008,0,0x0,8
tick,0x7ffdf681f424,11188045,0,0x0,8
tick,0x7ffdf681f424,11190006,0,0x0,8
tick,0x7ffdf681f424,11191930,0,0x0,8
tick,0x7ffdf681f424,11193977,0,0x0,8
tick,0x7ffdf681f424,11196031,0,0x0,8
tick,0x7ffdf681f424,11198024,0,0x0,8
tick,0x7ffdf681f424,11199914,0,0x0,8
tick,0x7ffdf681f424,11202032,0,0x0,8
tick,0x7ffdf681f424,11204003,0,0x0,8
tick,0x7ffdf681f424,11205999,0,0x0,8
tick,0x7ffdf681f424,11207990,0,0x0,8
tick,0x7ffdf681f424,11209981,0,0x0,8
tick,0x7ffdf681f424,11212013,0,0x0,8
tick,0x7ffdf681f424,11213972,0,0x0,8
tick,0x7ffdf681f424,11215972,0,0x0,8
tick,0x7ffdf681f424,11217967,0,0x0,8
tick,0x7ffdf681f424,11219970,0,0x0,8
tick,0x7ffdf681f424,11221984,0,0x0,8
tick,0x7ffdf681f424,11223944,0,0x0,8
tick,0x7ffdf681f424,11225943,0,0x0,8
tick,0x7ffdf681f424,11227934,0,0x0,8
tick,0x7ffdf681f424,11229943,0,0x0,8
tick,0x7ffdf681f424,11231931,0,0x0,8
tick,0x7ffdf681f424,11233920,0,0x0,8
tick,0x7ffdf681f424,11235930,0,0x0,8
tick,0x7ffdf681f424,11237907,0,0x0,8
tick,0x7ffdf681f424,11239816,0,0x0,8
tick,0x7ffdf681f424,11241905,0,0x0,8
tick,0x7ffdf681f424,11243896,0,0x0,8
tick,0x7ffdf681f424,11245885,0,0x0,8
tick,0x7ffdf681f424,11247886,0,0x0,8
tick,0x7ffdf681f424,11249878,0,0x0,8
tick,0x7ffdf681f424,11251877,0,0x0,8
tick,0x7ffdf681f424,11253865,0,0x0,8
tick,0x7ffdf681f424,11255859,0,0x0,8
tick,0x7ffdf681f424,11257859,0,0x0,8
tick,0x7ffdf681f424,11259872,0,0x0,8
tick,0x7ffdf681f424,11261853,0,0x0,8
tick,0x7ffdf681f424,11263850,0,0x0,8
tick,0x7ffdf681f424,11265851,0,0x0,8
tick,0x7ffdf681f424,11267833,0,0x0,8
tick,0x7ffdf681f424,11269855,0,0x0,8
tick,0x7ffdf681f424,11271843,0,0x0,8
tick,0x7ffdf681f424,11273817,0,0x0,8
tick,0x7ffdf681f424,11275806,0,0x0,8
tick,0x7ffdf681f424,11277801,0,0x0,8
tick,0x7ffdf681f424,11279801,0,0x0,8
tick,0x7ffdf681f424,11281688,0,0x0,8
tick,0x7ffdf681f424,11283800,0,0x0,8
tick,0x7ffdf681f424,11285798,0,0x0,8
tick,0x7ffdf681f424,11287794,0,0x0,8
tick,0x7ffdf681f424,11289777,0,0x0,8
tick,0x7ffdf681f424,11291770,0,0x0,8
tick,0x7ffdf681f424,11293799,0,0x0,8
tick,0x7ffdf681f424,11295756,0,0x0,8
tick,0x7ffdf681f424,11297748,0,0x0,8
tick,0x7ffdf681f424,11299742,0,0x0,8
tick,0x7ffdf681f424,11301742,0,0x0,8
tick,0x7ffdf681f424,11303625,0,0x0,8
tick,0x7ffdf681f424,11305689,0,0x0,8
tick,0x7ffdf681f424,11307579,0,0x0,8
tick,0x7ffdf681f424,11309618,0,0x0,8
tick,0x7ffdf681f424,11311731,0,0x0,8
tick,0x7ffdf681f424,11313774,0,0x0,8
tick,0x7ffdf681f424,11315688,0,0x0,8
tick,0x7ffdf681f424,11317717,0,0x0,8
tick,0x7ffdf681f424,11319656,0,0x0,8
tick,0x7ffdf681f424,11321684,0,0x0,8
tick,0x7ffdf681f424,11323598,0,0x0,8
tick,0x7ffdf681f424,11325733,0,0x0,8
tick,0x7ffdf681f424,11327673,0,0x0,8
tick,0x7ffdf681f424,11329666,0,0x0,8
tick,0x7ffdf681f424,11331564,0,0x0,8
tick,0x7ffdf681f424,11333580,0,0x0,8
tick,0x7ffdf681f424,11335651,0,0x0,8
tick,0x7ffdf681f424,11337638,0,0x0,8
tick,0x7ffdf681f424,11339643,0,0x0,8
tick,0x7ffdf681f424,11341631,0,0x0,8
tick,0x7ffdf681f424,11343624,0,0x0,8
tick,0x7ffdf681f424,11345629,0,0x0,8
tick,0x7ffdf681f424,11347632,0,0x0,8
tick,0x7ffdf681f424,11349618,0,0x0,8
tick,0x7ffdf681f424,11351619,0,0x0,8
tick,0x7ffdf681f424,11353632,0,0x0,8
tick,0x7ffdf681f424,11355598,0,0x0,8
tick,0x7ffdf681f424,11357572,0,0x0,8
tick,0x7ffdf681f424,11359580,0,0x0,8
tick,0x7ffdf681f424,11361580,0,0x0,8
tick,0x7ffdf681f424,11363571,0,0x0,8
tick,0x7ffdf681f424,11365572,0,0x0,8
tick,0x7ffdf681f424,11367564,0,0x0,8
tick,0x7ffdf681f424,11369582,0,0x0,8
tick,0x7ffdf681f424,11371559,0,0x0,8
tick,0x7ffdf681f424,11373560,0,0x0,8
tick,0x7ffdf681f424,11375575,0,0x0,8
tick,0x7ffdf681f424,11377542,0,0x0,8
tick,0x7ffdf681f424,11379529,0,0x0,8
tick,0x7ffdf681f424,11381422,0,0x0,8
tick,0x7ffdf681f424,11383518,0,0x0,8
tick,0x7ffdf681f424,11385521,0,0x0,8
tick,0x7ffdf681f424,11387404,0,0x0,8
tick,0x7ffdf681f424,11389508,0,0x0,8
tick,0x7ffdf681f424,11391502,0,0x0,8
tick,0x7ffdf681f424,11393495,0,0x0,8
tick,0x7ffdf681f424,11395491,0,0x0,8
tick,0x7ffdf681f424,11397530,0,0x0,8
tick,0x7ffdf681f424,11399493,0,0x0,8
tick,0x7ffdf681f424,11401470,0,0x0,8
tick,0x7ffdf681f424,11403465,0,0x0,8
tick,0x7ffdf681f424,11405465,0,0x0,8
tick,0x7ffdf681f424,11407452,0,0x0,8
tick,0x7ffdf681f424,11409353,0,0x0,8
tick,0x7ffdf681f424,11411339,0,0x0,8
tick,0x7ffdf681f424,11413454,0,0x0,8
tick,0x7ffdf681f424,11415345,0,0x0,8
tick,0x7ffdf681f424,11417430,0,0x0,8
tick,0x7ffdf681f424,11419439,0,0x0,8
tick,0x7ffdf681f424,11421429,0,0x0,8
tick,0x7ffdf681f424,11423426,0,0x0,8
tick,0x7ffdf681f424,11425421,0,0x0,8
tick,0x7ffdf681f424,11427413,0,0x0,8
tick,0x7ffdf681f424,11429402,0,0x0,8
tick,0x7ffdf681f424,11431409,0,0x0,8
tick,0x7ffdf681f424,11433403,0,0x0,8
tick,0x7ffdf681f424,11435457,0,0x0,8
tick,0x7ffdf681f424,11437312,0,0x0,8
tick,0x7ffdf681f424,11439232,0,0x0,8
tick,0x7ffdf681f424,11441208,0,0x0,8
tick,0x7ffdf681f424,11443287,0,0x0,8
tick,0x7ffdf681f424,11445325,0,0x0,8
tick,0x7ffdf681f424,11447302,0,0x0,8
tick,0x7ffdf681f424,11449298,0,0x0,8
tick,0x7ffdf681f424,11451243,0,0x0,8
tick,0x7ffdf681f424,11453328,0,0x0,8
tick,0x7ffdf681f424,11455335,0,0x0,8
tick,0x7ffdf681f424,11457261,0,0x0,8
tick,0x7ffdf681f424,11459364,0,0x0,8
tick,0x7ffdf681f424,11461318,0,0x0,8
tick,0x7ffdf681f424,11463314,0,0x0,8
tick,0x7ffdf681f424,11465204,0,0x0,8
tick,0x7ffdf681f424,11467302,0,0x0,8
tick,0x7ffdf681f424,11469301,0,0x0,8
tick,0x7ffdf681f424,11471295,0,0x0,8
tick,0x7ffdf681f424,11473184,0,0x0,8
tick,0x7ffdf681f424,11475281,0,0x0,8
tick,0x7ffdf681f424,11477276,0,0x0,8
tick,0x7ffdf681f424,11479275,0,0x0,8
tick,0x7ffdf681f424,11481260,0,0x0,8
tick,0x7ffdf681f424,11483270,0,0x0,8
tick,0x7ffdf681f424,11485286,0,0x0,8
tick,0x7ffdf681f424,11487254,0,0x0,8
tick,0x7ffdf681f424,11489249,0,0x0,8
tick,0x7ffdf681f424,11491242,0,0x0,8
tick,0x7ffdf681f424,11493232,0,0x0,8
tick,0x7ffdf681f424,11495295,0,0x0,8
tick,0x7ffdf681f424,11497230,0,0x0,8
tick,0x7ffdf681f424,11499217,0,0x0,8
tick,0x7ffdf681f424,11501216,0,0x0,8
tick,0x7ffdf681f424,11503219,0,0x0,8
tick,0x7ffdf681f424,11505273,0,0x0,8
tick,0x7ffdf681f424,11507226,0,0x0,8
tick,0x7ffdf681f424,11509189,0,0x0,8
tick,0x7ffdf681f424,11511191,0,0x0,8
tick,0x7ffdf681f424,11513175,0,0x0,8
tick,0x7ffdf681f424,11515104,0,0x0,8
tick,0x7ffdf681f424,11517168,0,0x0,8
tick,0x7ffdf681f424,11519169,0,0x0,8
tick,0x7ffdf681f424,11521158,0,0x0,8
tick,0x7ffdf681f424,11523093,0,0x0,8
tick,0x7ffdf681f424,11525148,0,0x0,8
tick,0x7ffdf681f424,11527138,0,0x0,8
tick,0x7ffdf681f424,11529155,0,0x0,8
tick,0x7ffdf681f424,11531129,0,0x0,8
tick,0x7ffdf681f424,11533113,0,0x0,8
tick,0x7ffdf681f424,11535124,0,0x0,8
tick,0x7ffdf681f424,11537118,0,0x0,8
tick,0x7ffdf681f424,11539135,0,0x0,8
tick,0x7ffdf681f424,11541096,0,0x0,8
tick,0x7ffdf681f424,11543090,0,0x0,8
tick,0x7ffdf681f424,11545095,0,0x0,8
tick,0x7ffdf681f424,11547093,0,0x0,8
tick,0x7ffdf681f424,11549087,0,0x0,8
tick,0x7ffdf681f424,11551073,0,0x0,8
tick,0x7ffdf681f424,11553068,0,0x0,8
tick,0x7ffdf681f424,11555064,0,0x0,8
tick,0x7ffdf681f424,11557054,0,0x0,8
tick,0x7ffdf681f424,11559053,0,0x0,8
tick,0x7ffdf681f424,11561056,0,0x0,8
tick,0x7ffdf681f424,11562948,0,0x0,8
tick,0x7ffdf681f424,11564972,0,0x0,8
tick,0x7ffdf681f424,11566996,0,0x0,8
tick,0x7ffdf681f424,11568894,0,0x0,8
tick,0x7ffdf681f424,11570937,0,0x0,8
tick,0x7ffdf681f424,11573010,0,0x0,8
tick,0x7ffdf681f424,11574917,0,0x0,8
tick,0x7ffdf681f424,11576963,0,0x0,8
tick,0x7ffdf681f424,11578997,0,0x0,8
tick,0x7ffdf681f424,11580988,0,0x0,8
tick,0x7ffdf681f424,11582948,0,0x0,8
tick,0x7ffdf681f424,11584853,0,0x0,8
tick,0x7ffdf681f424,11586886,0,0x0,8
tick,0x7ffdf681f424,11588925,0,0x0,8
tick,0x7ffdf681f424,11590912,0,0x0,8
tick,0x7ffdf681f424,11593002,0,0x0,8
tick,0x7ffdf681f424,11594955,0,0x0,8
tick,0x7ffdf681f424,11596969,0,0x0,8
tick,0x7ffdf681f424,11598842,0,0x0,8
tick,0x7ffdf681f424,11600940,0,0x0,8
tick,0x7ffdf681f424,11602931,0,0x0,8
tick,0x7ffdf681f424,11604926,0,0x0,8
tick,0x7ffdf681f424,11606819,0,0x0,8
tick,0x7ffdf681f424,11608919,0,0x0,8
tick,0x7ffdf681f424,11610923,0,0x0,8
tick,0x7ffdf681f424,11612916,0,0x0,8
tick,0x7ffdf681f424,11614836,0,0x0,8
tick,0x7ffdf681f424,11616928,0,0x0,8
tick,0x7ffdf681f424,11618894,0,0x0,8
tick,0x7ffdf681f424,11620824,0,0x0,8
tick,0x7ffdf681f424,11622963,0,0x0,8
tick,0x7ffdf681f424,11624872,0,0x0,8
tick,0x7ffdf681f424,11626871,0,0x0,8
tick,0x7ffdf681f424,11628874,0,0x0,8
tick,0x7ffdf681f424,11630861,0,0x0,8
tick,0x7ffdf681f424,11632866,0,0x0,8
tick,0x7ffdf681f424,11634859,0,0x0,8
tick,0x7ffdf681f424,11636914,0,0x0,8
tick,0x7ffdf681f424,11638875,0,0x0,8
tick,0x7ffdf681f424,11640839,0,0x0,8
tick,0x7ffdf681f424,11642830,0,0x0,8
tick,0x7ffdf681f424,11644825,0,0x0,8
tick,0x7ffdf681f424,11646820,0,0x0,8
tick,0x7ffdf681f424,11648814,0,0x0,8
tick,0x7ffdf681f424,11650809,0,0x0,8
tick,0x7ffdf681f424,11652806,0,0x0,8
tick,0x7ffdf681f424,11654811,0,0x0,8
tick,0x7ffdf681f424,11656687,0,0x0,8
tick,0x7ffdf681f424,11658797,0,0x0,8
tick,0x7ffdf681f424,11660799,0,0x0,8
tick,0x7ffdf681f424,11662772,0,0x0,8
tick,0x7ffdf681f424,11664775,0,0x0,8
tick,0x7ffdf681f424,11666766,0,0x0,8
tick,0x7ffdf681f424,11668762,0,0x0,8
tick,0x7ffdf681f424,11670751,0,0x0,8
tick,0x7ffdf681f424,11672750,0,0x0,8
tick,0x7ffdf681f424,11674745,0,0x0,8
tick,0x7ffdf681f424,11676743,0,0x0,8
tick,0x7ffdf681f424,11678641,0,0x0,8
tick,0x7ffdf681f424,11680600,0,0x0,8
tick,0x7ffdf681f424,11682731,0,0x0,8
tick,0x7ffdf681f424,11684717,0,0x0,8
tick,0x7ffdf681f424,11686710,0,0x0,8
tick,0x7ffdf681f424,11688702,0,0x0,8
tick,0x7ffdf681f424,11690708,0,0x0,8
tick,0x7ffdf681f424,11692691,0,0x0,8
tick,0x7ffdf681f424,11694692,0,0x0,8
tick,0x7ffdf681f424,11696749,0,0x0,8
tick,0x7ffdf681f424,11698675,0,0x0,8
tick,0x7ffdf681f424,11700596,0,0x0,8
tick,0x7ffdf681f424,11702699,0,0x0,8
tick,0x7ffdf681f424,11704573,0,0x0,8
tick,0x7ffdf681f424,11706620,0,0x0,8
tick,0x7ffdf681f424,11708493,0,0x0,8
tick,0x7ffdf681f424,11710542,0,0x0,8
tick,0x7ffdf681f424,11712634,0,0x0,8
tick,0x7ffdf681f424,11714640,0,0x0,8
tick,0x7ffdf681f424,11716515,0,0x0,8
tick,0x7ffdf681f424,11718625,0,0x0,8
tick,0x7ffdf681f424,11720632,0,0x0,8
tick,0x7ffdf681f424,11722611,0,0x0,8
tick,0x7ffdf681f424,11724517,0,0x0,8
tick,0x7ffdf681f424,11726608,0,0x0,8
tick,0x7ffdf681f424,11728598,0,0x0,8
tick,0x7ffdf681f424,11730590,0,0x0,8
tick,0x7ffdf681f424,11732487,0,0x0,8
tick,0x7ffdf681f424,11734593,0,0x0,8
tick,0x7ffdf681f424,11736579,0,0x0,8
tick,0x7ffdf681f424,11738574,0,0x0,8
tick,0x7ffdf681f424,11740563,0,0x0,8
tick,0x7ffdf681f424,11742487,0,0x0,8
tick,0x7ffdf681f424,11744556,0,0x0,8
tick,0x7ffdf681f424,11746555,0,0x0,8
tick,0x7ffdf681f424,11748457,0,0x0,8
tick,0x7ffdf681f424,11750543,0,0x0,8
tick,0x7ffdf681f424,11752543,0,0x0,8
tick,0x7ffdf681f424,11754537,0,0x0,8
tick,0x7ffdf681f424,11756463,0,0x0,8
tick,0x7ffdf681f424,11758516,0,0x0,8
tick,0x7ffdf681f424,11760516,0,0x0,8
tick,0x7ffdf681f424,11762506,0,0x0,8
tick,0x7ffdf681f424,11764512,0,0x0,8
tick,0x7ffdf681f424,11766493,0,0x0,8
tick,0x7ffdf681f424,11768493,0,0x0,8
tick,0x7ffdf681f424,11770500,0,0x0,8
tick,0x7ffdf681f424,11772484,0,0x0,8
tick,0x7ffdf681f424,11774478,0,0x0,8
tick,0x7ffdf681f424,11776470,0,0x0,8
tick,0x7ffdf681f424,11778467,0,0x0,8
tick,0x7ffdf681f424,11780467,0,0x0,8
tick,0x7ffdf681f424,11782454,0,0x0,8
tick,0x7ffdf681f424,11784513,0,0x0,8
tick,0x7ffdf681f424,11786440,0,0x0,8
tick,0x7ffdf681f424,11788441,0,0x0,8
tick,0x7ffdf681f424,11790434,0,0x0,8
tick,0x7ffdf681f424,11792449,0,0x0,8
tick,0x7ffdf681f424,11794427,0,0x0,8
tick,0x7ffdf681f424,11796420,0,0x0,8
tick,0x7ffdf681f424,11798314,0,0x0,8
tick,0x7ffdf681f424,11800412,0,0x0,8
tick,0x7ffdf681f424,11802398,0,0x0,8
tick,0x7ffdf681f424,11804398,0,0x0,8
tick,0x7ffdf681f424,11806399,0,0x0,8
tick,0x7ffdf681f424,11808385,0,0x0,8
tick,0x7ffdf681f424,11810389,0,0x0,8
tick,0x7ffdf681f424,11812386,0,0x0,8
tick,0x7ffdf681f424,11814385,0,0x0,8
tick,0x7ffdf681f424,11816366,0,0x0,8
tick,0x7ffdf681f424,11818360,0,0x0,8
tick,0x7ffdf681f424,11820367,0,0x0,8
tick,0x7ffdf681f424,11822351,0,0x0,8
tick,0x7ffdf681f424,11824345,0,0x0,8
tick,0x7ffdf681f424,11826230,0,0x0,8
tick,0x7ffdf681f424,11828284,0,0x0,8
tick,0x7ffdf681f424,11830189,0,0x0,8
tick,0x7ffdf681f424,11832161,0,0x0,8
tick,0x7ffdf681f424,11834276,0,0x0,8
tick,0x7ffdf681f424,11836310,0,0x0,8
tick,0x7ffdf681f424,11838313,0,0x0,8
tick,0x7ffdf681f424,11840261,0,0x0,8
tick,0x7ffdf681f424,11842174,0,0x0,8
tick,0x7ffdf681f424,11844151,0,0x0,8
tick,0x7ffdf681f424,11846260,0,0x0,8
tick,0x7ffdf681f424,11848228,0,0x0,8
tick,0x7ffdf681f424,11850245,0,0x0,8
tick,0x7ffdf681f424,11852272,0,0x0,8
tick,0x7ffdf681f424,11854266,0,0x0,8
tick,0x7ffdf681f424,11856271,0,0x0,8
tick,0x7ffdf681f424,11858259,0,0x0,8
tick,0x7ffdf681f424,11860256,0,0x0,8
tick,0x7ffdf681f424,11862252,0,0x0,8
tick,0x7ffdf681f424,11864246,0,0x0,8
tick,0x7ffdf681f424,11866241,0,0x0,8
tick,0x7ffdf681f424,11868229,0,0x0,8
tick,0x7ffdf681f424,11870225,0,0x0,8
tick,0x7ffdf681f424,11872236,0,0x0,8
tick,0x7ffdf681f424,11874316,0,0x0,8
tick,0x7ffdf681f424,11876207,0,0x0,8
tick,0x7ffdf681f424,11878207,0,0x0,8
tick,0x7ffdf681f424,11880216,0,0x0,8
tick,0x7ffdf681f424,11882193,0,0x0,8
tick,0x7ffdf681f424,11884186,0,0x0,8
tick,0x7ffdf681f424,11886186,0,0x0,8
tick,0x7ffdf681f424,11888180,0,0x0,8
tick,0x7ffdf681f424,11890098,0,0x0,8
tick,0x7ffdf681f424,11892170,0,0x0,8
tick,0x7ffdf681f424,11894166,0,0x0,8
tick,0x7ffdf681f424,11896156,0,0x0,8
tick,0x7ffdf681f424,11898196,0,0x0,8
tick,0x7ffdf681f424,11900064,0,0x0,8
tick,0x7ffdf681f424,11902166,0,0x0,8
tick,0x7ffdf681f424,11904028,0,0x0,8
tick,0x7ffdf681f424,11906128,0,0x0,8
tick,0x7ffdf681f424,11908117,0,0x0,8
tick,0x7ffdf681f424,11910117,0,0x0,8
tick,0x7ffdf681f424,11912112,0,0x0,8
tick,0x7ffdf681f424,11914123,0,0x0,8
tick,0x7ffdf681f424,11916106,0,0x0,8
tick,0x7ffdf681f424,11918104,0,0x0,8
tick,0x7ffdf681f424,11920095,0,0x0,8
tick,0x7ffdf681f424,11922084,0,0x0,8
tick,0x7ffdf681f424,11924091,0,0x0,8
tick,0x7ffdf681f424,11926067,0,0x0,8
tick,0x7ffdf681f424,11928071,0,0x0,8
tick,0x7ffdf681f424,11930062,0,0x0,8
tick,0x7ffdf681f424,11932057,0,0x0,8
tick,0x7ffdf681f424,11934051,0,0x0,8
tick,0x7ffdf681f424,11936046,0,0x0,8
tick,0x7ffdf681f424,11938040,0,0x0,8
tick,0x7ffdf681f424,11939943,0,0x0,8
tick,0x7ffdf681f424,11942028,0,0x0,8
tick,0x7ffdf681f424,11944028,0,0x0,8
tick,0x7ffdf681f424,11946035,0,0x0,8
tick,0x7ffdf681f424,11948032,0,0x0,8
tick,0x7ffdf681f424,11950009,0,0x0,8
tick,0x7ffdf681f424,11952007,0,0x0,8
tick,0x7ffdf681f424,11953999,0,0x0,8
tick,0x7ffdf681f424,11955999,0,0x0,8
tick,0x7ffdf681f424,11958051,0,0x0,8
tick,0x7ffdf681f424,11959942,0,0x0,8
tick,0x7ffdf681f424,11961812,0,0x0,8
tick,0x7ffdf681f424,11963936,0,0x0,8
tick,0x7ffdf681f424,11965842,0,0x0,8
tick,0x7ffdf681f424,11967968,0,0x0,8
tick,0x7ffdf681f424,11969956,0,0x0,8
tick,0x7ffdf681f424,11971947,0,0x0,8
tick,0x7ffdf681f424,11973934,0,0x0,8
tick,0x7ffdf681f424,11975782,0,0x0,8
tick,0x7ffdf681f424,11977900,0,0x0,8
tick,0x7ffdf681f424,11979883,0,0x0,8
tick,0x7ffdf681f424,11981889,0,0x0,8
tick,0x7ffdf681f424,11983819,0,0x0,8
tick,0x7ffdf681f424,11985924,0,0x0,8
tick,0x7ffdf681f424,11987915,0,0x0,8
tick,0x7ffdf681f424,11989890,0,0x0,8
tick,0x7ffdf681f424,11991895,0,0x0,8
tick,0x7ffdf681f424,11993891,0,0x0,8
tick,0x7ffdf681f424,11995881,0,0x0,8
tick,0x7ffdf681f424,11997878,0,0x0,8
tick,0x7ffdf681f424,11999934,0,0x0,8
tick,0x7ffdf681f424,12001872,0,0x0,8
tick,0x7ffdf681f424,12003859,0,0x0,8
tick,0x7ffdf681f424,12005859,0,0x0,8
tick,0x7ffdf681f424,12007867,0,0x0,8
tick,0x7ffdf681f424,12009922,0,0x0,8
tick,0x7ffdf681f424,12011874,0,0x0,8
tick,0x7ffdf681f424,12013852,0,0x0,8
tick,0x7ffdf681f424,12015838,0,0x0,8
tick,0x7ffdf681f424,12017818,0,0x0,8
tick,0x7ffdf681f424,12019825,0,0x0,8
tick,0x7ffdf681f424,12021811,0,0x0,8
tick,0x7ffdf681f424,12023811,0,0x0,8
tick,0x7ffdf681f424,12025809,0,0x0,8
tick,0x7ffdf681f424,12027796,0,0x0,8
tick,0x7ffdf681f424,12029824,0,0x0,8
tick,0x7ffdf681f424,12031692,0,0x0,8
tick,0x7ffdf681f424,12033861,0,0x0,8
tick,0x7ffdf681f424,12035781,0,0x0,8
tick,0x7ffdf681f424,12037787,0,0x0,8
tick,0x7ffdf681f424,12039780,0,0x0,8
tick,0x7ffdf681f424,12041764,0,0x0,8
tick,0x7ffdf681f424,12043752,0,0x0,8
tick,0x7ffdf681f424,12045752,0,0x0,8
tick,0x7ffdf681f424,12047751,0,0x0,8
tick,0x7ffdf681f424,12049742,0,0x0,8
tick,0x7ffdf681f424,12051737,0,0x0,8
tick,0x7ffdf681f424,12053805,0,0x0,8
tick,0x7ffdf681f424,12055684,0,0x0,8
tick,0x7ffdf681f424,12057721,0,0x0,8
tick,0x7ffdf681f424,12059723,0,0x0,8
tick,0x7ffdf681f424,12061708,0,0x0,8
tick,0x7ffdf681f424,12063707,0,0x0,8
tick,0x7ffdf681f424,12065694,0,0x0,8
tick,0x7ffdf681f424,12067689,0,0x0,8
tick,0x7ffdf681f424,12069689,0,0x0,8
tick,0x7ffdf681f424,12071678,0,0x0,8
tick,0x7ffdf681f424,12073678,0,0x0,8
tick,0x7ffdf681f424,12075675,0,0x0,8
tick,0x7ffdf681f424,12077682,0,0x0,8
tick,0x7ffdf681f424,12079659,0,0x0,8
tick,0x7ffdf681f424,12081657,0,0x0,8
tick,0x7ffdf681f424,12083652,0,0x0,8
tick,0x7ffdf681f424,12085660,0,0x0,8
tick,0x7ffdf681f424,12087718,0,0x0,8
tick,0x7ffdf681f424,12089597,0,0x0,8
tick,0x7ffdf681f424,12091528,0,0x0,8
tick,0x7ffdf681f424,12093528,0,0x0,8
tick,0x7ffdf681f424,12095514,0,0x0,8
tick,0x7ffdf681f424,12097577,0,0x0,8
tick,0x7ffdf681f424,12099511,0,0x0,8
tick,0x7ffdf681f424,12101519,0,0x0,8
tick,0x7ffdf681f424,12103485,0,0x0,8
tick,0x7ffdf681f424,12105587,0,0x0,8
tick,0x7ffdf681f424,12107491,0,0x0,8
tick,0x7ffdf681f424,12109580,0,0x0,8
tick,0x7ffdf681f424,12111580,0,0x0,8
tick,0x7ffdf681f424,12113571,0,0x0,8
tick,0x7ffdf681f424,12115468,0,0x0,8
tick,0x7ffdf681f424,12117556,0,0x0,8
tick,0x7ffdf681f424,12119556,0,0x0,8
tick,0x7ffdf681f424,12121554,0,0x0,8
tick,0x7ffdf681f424,12123439,0,0x0,8
tick,0x7ffdf681f424,12125539,0,0x0,8
tick,0x7ffdf681f424,12127533,0,0x0,8
tick,0x7ffdf681f424,12129529,0,0x0,8
tick,0x7ffdf681f424,12131508,0,0x0,8
tick,0x7ffdf681f424,12133516,0,0x0,8
tick,0x7ffdf681f424,12135513,0,0x0,8
tick,0x7ffdf681f424,12137515,0,0x0,8
tick,0x7ffdf681f424,12139502,0,0x0,8
tick,0x7ffdf681f424,12141505,0,0x0,8
tick,0x7ffdf681f424,12143504,0,0x0,8
tick,0x7ffdf681f424,12145487,0,0x0,8
tick,0x7ffdf681f424,12147484,0,0x0,8
tick,0x7ffdf681f424,12149475,0,0x0,8
tick,0x7ffdf681f424,12151478,0,0x0,8
tick,0x7ffdf681f424,12153459,0,0x0,8
tick,0x7ffdf681f424,12155460,0,0x0,8
tick,0x7ffdf681f424,12157463,0,0x0,8
tick,0x7ffdf681f424,12159445,0,0x0,8
tick,0x7ffdf681f424,12161444,0,0x0,8
tick,0x7ffdf681f424,12163441,0,0x0,8
tick,0x7ffdf681f424,12165469,0,0x0,8
tick,0x7ffdf681f424,12167427,0,0x0,8
tick,0x7ffdf681f424,12169426,0,0x0,8
tick,0x7ffdf681f424,12171435,0,0x0,8
tick,0x7ffdf681f424,12173304,0,0x0,8
tick,0x7ffdf681f424,12175403,0,0x0,8
tick,0x7ffdf681f424,12177395,0,0x0,8
tick,0x7ffdf681f424,12179396,0,0x0,8
tick,0x7ffdf681f424,12181397,0,0x0,8
tick,0x7ffdf681f424,12183385,0,0x0,8
tick,0x7ffdf681f424,12185460,0,0x0,8
tick,0x7ffdf681f424,12187401,0,0x0,8
tick,0x7ffdf681f424,12189398,0,0x0,8
tick,0x7ffdf681f424,12191361,0,0x0,8
tick,0x7ffdf681f424,12193375,0,0x0,8
tick,0x7ffdf681f424,12195353,0,0x0,8
tick,0x7ffdf681f424,12197345,0,0x0,8
tick,0x7ffdf681f424,12199342,0,0x0,8
tick,0x7ffdf681f424,12201331,0,0x0,8
tick,0x7ffdf681f424,12203331,0,0x0,8
tick,0x7ffdf681f424,12205327,0,0x0,8
tick,0x7ffdf681f424,12207325,0,0x0,8
tick,0x7ffdf681f424,12209346,0,0x0,8
tick,0x7ffdf681f424,12211310,0,0x0,8
tick,0x7ffdf681f424,12213305,0,0x0,8
tick,0x7ffdf681f424,12215307,0,0x0,8
tick,0x7ffdf681f424,12217191,0,0x0,8
tick,0x7ffdf681f424,12219183,0,0x0,8
tick,0x7ffdf681f424,12221158,0,0x0,8
tick,0x7ffdf681f424,12223144,0,0x0,8
tick,0x7ffdf681f424,12225176,0,0x0,8
tick,0x7ffdf681f424,12227289,0,0x0,8
tick,0x7ffdf681f424,12229340,0,0x0,8
tick,0x7ffdf681f424,12231270,0,0x0,8
tick,0x7ffdf681f424,12233231,0,0x0,8
tick,0x7ffdf681f424,12235195,0,0x0,8
tick,0x7ffdf681f424,12237255,0,0x0,8
tick,0x7ffdf681f424,12239245,0,0x0,8
tick,0x7ffdf681f424,12241173,0,0x0,8
tick,0x7ffdf681f424,12243232,0,0x0,8
tick,0x7ffdf681f424,12245222,0,0x0,8
tick,0x7ffdf681f424,12247212,0,0x0,8
tick,0x7ffdf681f424,12249097,0,0x0,8
tick,0x7ffdf681f424,12251209,0,0x0,8
tick,0x7ffdf681f424,12253204,0,0x0,8
tick,0x7ffdf681f424,12255201,0,0x0,8
tick,0x7ffdf681f424,12257160,0,0x0,8
tick,0x7ffdf681f424,12259194,0,0x0,8
tick,0x7ffdf681f424,12261185,0,0x0,8
tick,0x7ffdf681f424,12263173,0,0x0,8
tick,0x7ffdf681f424,12265061,0,0x0,8
tick,0x7ffdf681f424,12267168,0,0x0,8
tick,0x7ffdf681f424,12269162,0,0x0,8
tick,0x7ffdf681f424,12271160,0,0x0,8
tick,0x7ffdf681f424,12273292,0,0x0,8
tick,0x7ffdf681f424,12275207,0,0x0,8
tick,0x7ffdf681f424,12277142,0,0x0,8
tick,0x7ffdf681f424,12279144,0,0x0,8
tick,0x7ffdf681f424,12281125,0,0x0,8
tick,0x7ffdf681f424,12283134,0,0x0,8
tick,0x7ffdf681f424,12285115,0,0x0,8
tick,0x7ffdf681f424,12287129,0,0x0,8
tick,0x7ffdf681f424,12289135,0,0x0,8
tick,0x7ffdf681f424,12291103,0,0x0,8
tick,0x7ffdf681f424,12293098,0,0x0,8
tick,0x7ffdf681f424,12295156,0,0x0,8
tick,0x7ffdf681f424,12297116,0,0x0,8
tick,0x7ffdf681f424,12299086,0,0x0,8
tick,0x7ffdf681f424,12301082,0,0x0,8
tick,0x7ffdf681f424,12303071,0,0x0,8
tick,0x7ffdf681f424,12305070,0,0x0,8
tick,0x7ffdf681f424,12307055,0,0x0,8
tick,0x7ffdf681f424,12309064,0,0x0,8
tick,0x7ffdf681f424,12311042,0,0x0,8
tick,0x7ffdf681f424,12313047,0,0x0,8
tick,0x7ffdf681f424,12314935,0,0x0,8
tick,0x7ffdf681f424,12317032,0,0x0,8
tick,0x7ffdf681f424,12319026,0,0x0,8
tick,0x7ffdf681f424,12321016,0,0x0,8
tick,0x7ffdf681f424,12323012,0,0x0,8
tick,0x7ffdf681f424,12325004,0,0x0,8
tick,0x7ffdf681f424,12327000,0,0x0,8
tick,0x7ffdf681f424,12328989,0,0x0,8
tick,0x7ffdf681f424,12330985,0,0x0,8
tick,0x7ffdf681f424,12332982,0,0x0,8
tick,0x7ffdf681f424,12334981,0,0x0,8
tick,0x7ffdf681f424,12336974,0,0x0,8
tick,0x7ffdf681f424,12338976,0,0x0,8
tick,0x7ffdf681f424,12340961,0,0x0,8
tick,0x7ffdf681f424,12342961,0,0x0,8
tick,0x7ffdf681f424,12344961,0,0x0,8
tick,0x7ffdf681f424,12346953,0,0x0,8
tick,0x7ffdf681f424,12349004,0,0x0,8
tick,0x7ffdf681f424,12350813,0,0x0,8
tick,0x7ffdf681f424,12352799,0,0x0,8
tick,0x7ffdf681f424,12354902,0,0x0,8
tick,0x7ffdf681f424,12356916,0,0x0,8
tick,0x7ffdf681f424,12358818,0,0x0,8
tick,0x7ffdf681f424,12360917,0,0x0,8
tick,0x7ffdf681f424,12362923,0,0x0,8
tick,0x7ffdf681f424,12364878,0,0x0,8
tick,0x7ffdf681f424,12366792,0,0x0,8
tick,0x7ffdf681f424,12368758,0,0x0,8
tick,0x7ffdf681f424,12370816,0,0x0,8
tick,0x7ffdf681f424,12372875,0,0x0,8
tick,0x7ffdf681f424,12374819,0,0x0,8
tick,0x7ffdf681f424,12376868,0,0x0,8
tick,0x7ffdf681f424,12378867,0,0x0,8
tick,0x7ffdf681f424,12380858,0,0x0,8
tick,0x7ffdf681f424,12382757,0,0x0,8
tick,0x7ffdf681f424,12384873,0,0x0,8
tick,0x7ffdf681f424,12386736,0,0x0,8
tick,0x7ffdf681f424,12388730,0,0x0,8
tick,0x7ffdf681f424,12390830,0,0x0,8
tick,0x7ffdf681f424,12392819,0,0x0,8
tick,0x7ffdf681f424,12394814,0,0x0,8
tick,0x7ffdf681f424,12396824,0,0x0,8
tick,0x7ffdf681f424,12398812,0,0x0,8
tick,0x7ffdf681f424,12400804,0,0x0,8
tick,0x7ffdf681f424,12402798,0,0x0,8
tick,0x7ffdf681f424,12404806,0,0x0,8
tick,0x7ffdf681f424,12406685,0,0x0,8
tick,0x7ffdf681f424,12408803,0,0x0,8
tick,0x7ffdf681f424,12410777,0,0x0,8
tick,0x7ffdf681f424,12412772,0,0x0,8
tick,0x7ffdf681f424,12414774,0,0x0,8
tick,0x7ffdf681f424,12416755,0,0x0,8
tick,0x7ffdf681f424,12418750,0,0x0,8
tick,0x7ffdf681f424,12420750,0,0x0,8
tick,0x7ffdf681f424,12422739,0,0x0,8
tick,0x7ffdf681f424,12424734,0,0x0,8
tick,0x7ffdf681f424,12426736,0,0x0,8
tick,0x7ffdf681f424,12428744,0,0x0,8
tick,0x7ffdf681f424,12430726,0,0x0,8
tick,0x7ffdf681f424,12432713,0,0x0,8
tick,0x7ffdf681f424,12434707,0,0x0,8
tick,0x7ffdf681f424,12436707,0,0x0,8
tick,0x7ffdf681f424,12438728,0,0x0,8
tick,0x7ffdf681f424,12440691,0,0x0,8
tick,0x7ffdf681f424,12442692,0,0x0,8
tick,0x7ffdf681f424,12444690,0,0x0,8
tick,0x7ffdf681f424,12446692,0,0x0,8
tick,0x7ffdf681f424,12448656,0,0x0,8
tick,0x7ffdf681f424,12450678,0,0x0,8
tick,0x7ffdf681f424,12452665,0,0x0,8
tick,0x7ffdf681f424,12454659,0,0x0,8
tick,0x7ffdf681f424,12456579,0,0x0,8
tick,0x7ffdf681f424,12458649,0,0x0,8
tick,0x7ffdf681f424,12460643,0,0x0,8
tick,0x7ffdf681f424,12462641,0,0x0,8
tick,0x7ffdf681f424,12464641,0,0x0,8
tick,0x7ffdf681f424,12466627,0,0x0,8
tick,0x7ffdf681f424,12468622,0,0x0,8
tick,0x7ffdf681f424,12470687,0,0x0,8
tick,0x7ffdf681f424,12472639,0,0x0,8
tick,0x7ffdf681f424,12474606,0,0x0,8
tick,0x7ffdf681f424,12476608,0,0x0,8
tick,0x7ffdf681f424,12478655,0,0x0,8
tick,0x7ffdf681f424,12480553,0,0x0,8
tick,0x7ffdf681f424,12482425,0,0x0,8
tick,0x7ffdf681f424,12484549,0,0x0,8
tick,0x7ffdf681f424,12486489,0,0x0,8
tick,0x7ffdf681f424,12488566,0,0x0,8
tick,0x7ffdf681f424,12490527,0,0x0,8
tick,0x7ffdf681f424,12492404,0,0x0,8
tick,0x7ffdf681f424,12494560,0,0x0,8
tick,0x7ffdf681f424,12496522,0,0x0,8
tick,0x7ffdf681f424,12498492,0,0x0,8
tick,0x7ffdf681f424,12500430,0,0x0,8
tick,0x7ffdf681f424,12502532,0,0x0,8
tick,0x7ffdf681f424,12504521,0,0x0,8
tick,0x7ffdf681f424,12506526,0,0x0,8
tick,0x7ffdf681f424,12508410,0,0x0,8
tick,0x7ffdf681f424,12510512,0,0x0,8
tick,0x7ffdf681f424,12512500,0,0x0,8
tick,0x7ffdf681f424,12514496,0,0x0,8
tick,0x7ffdf681f424,12516504,0,0x0,8
tick,0x7ffdf681f424,12518483,0,0x0,8
tick,0x7ffdf681f424,12520508,0,0x0,8
tick,0x7ffdf681f424,12522479,0,0x0,8
tick,0x7ffdf681f424,12524467,0,0x0,8
tick,0x7ffdf681f424,12526466,0,0x0,8
tick,0x7ffdf681f424,12528457,0,0x0,8
tick,0x7ffdf681f424,12530457,0,0x0,8
tick,0x7ffdf681f424,12532460,0,0x0,8
tick,0x7ffdf681f424,12534446,0,0x0,8
tick,0x7ffdf681f424,12536448,0,0x0,8
tick,0x7ffdf681f424,12538468,0,0x0,8
tick,0x7ffdf681f424,12540430,0,0x0,8
tick,0x7ffdf681f424,12542421,0,0x0,8
tick,0x7ffdf681f424,12544421,0,0x0,8
tick,0x7ffdf681f424,12546414,0,0x0,8
tick,0x7ffdf681f424,12548307,0,0x0,8
tick,0x7ffdf681f424,12550397,0,0x0,8
tick,0x7ffdf681f424,12552397,0,0x0,8
tick,0x7ffdf681f424,12554387,0,0x0,8
tick,0x7ffdf681f424,12556387,0,0x0,8
tick,0x7ffdf681f424,12558386,0,0x0,8
tick,0x7ffdf681f424,12560415,0,0x0,8
tick,0x7ffdf681f424,12562365,0,0x0,8
tick,0x7ffdf681f424,12564366,0,0x0,8
tick,0x7ffdf681f424,12566364,0,0x0,8
tick,0x7ffdf681f424,12568350,0,0x0,8
tick,0x7ffdf681f424,12570350,0,0x0,8
tick,0x7ffdf681f424,12572342,0,0x0,8
tick,0x7ffdf681f424,12574336,0,0x0,8
tick,0x7ffdf681f424,12576338,0,0x0,8
tick,0x7ffdf681f424,12578329,0,0x0,8
tick,0x7ffdf681f424,12580326,0,0x0,8
tick,0x7ffdf681f424,12582325,0,0x0,8
tick,0x7ffdf681f424,12584320,0,0x0,8
tick,0x7ffdf681f424,12586307,0,0x0,8
tick,0x7ffdf681f424,12588302,0,0x0,8
tick,0x7ffdf681f424,12590194,0,0x0,8
tick,0x7ffdf681f424,12592286,0,0x0,8
tick,0x7ffdf681f424,12594294,0,0x0,8
tick,0x7ffdf681f424,12596274,0,0x0,8
tick,0x7ffdf681f424,12598284,0,0x0,8
tick,0x7ffdf681f424,12600270,0,0x0,8
tick,0x7ffdf681f424,12602274,0,0x0,8
tick,0x7ffdf681f424,12604273,0,0x0,8
tick,0x7ffdf681f424,12606251,0,0x0,8
tick,0x7ffdf681f424,12608140,0,0x0,8
tick,0x7ffdf681f424,12610220,0,0x0,8
tick,0x7ffdf681f424,12612165,0,0x0,8
tick,0x7ffdf681f424,12614234,0,0x0,8
tick,0x7ffdf681f424,12616116,0,0x0,8
tick,0x7ffdf681f424,12618213,0,0x0,8
tick,0x7ffdf681f424,12620210,0,0x0,8
tick,0x7ffdf681f424,12622205,0,0x0,8
tick,0x7ffdf681f424,12624106,0,0x0,8
tick,0x7ffdf681f424,12626068,0,0x0,8
tick,0x7ffdf681f424,12628172,0,0x0,8
tick,0x7ffdf681f424,12630070,0,0x0,8
tick,0x7ffdf681f424,12632090,0,0x0,8
tick,0x7ffdf681f424,12634201,0,0x0,8
tick,0x7ffdf681f424,12636163,0,0x0,8
tick,0x7ffdf681f424,12638184,0,0x0,8
tick,0x7ffdf681f424,12640139,0,0x0,8
tick,0x7ffdf681f424,12642159,0,0x0,8
tick,0x7ffdf681f424,12644153,0,0x0,8
tick,0x7ffdf681f424,12646155,0,0x0,8
tick,0x7ffdf681f424,12648155,0,0x0,8
tick,0x7ffdf681f424,12650038,0,0x0,8
tick,0x7ffdf681f424,12652038,0,0x0,8
tick,0x7ffdf681f424,12654124,0,0x0,8
tick,0x7ffdf681f424,12656121,0,0x0,8
tick,0x7ffdf681f424,12658121,0,0x0,8
tick,0x7ffdf681f424,12660104,0,0x0,8
tick,0x7ffdf681f424,12662103,0,0x0,8
tick,0x7ffdf681f424,12664069,0,0x0,8
tick,0x7ffdf681f424,12666088,0,0x0,8
tick,0x7ffdf681f424,12668085,0,0x0,8
tick,0x7ffdf681f424,12670094,0,0x0,8
tick,0x7ffdf681f424,12672072,0,0x0,8
tick,0x7ffdf681f424,12674069,0,0x0,8
tick,0x7ffdf681f424,12676067,0,0x0,8
tick,0x7ffdf681f424,12678062,0,0x0,8
tick,0x7ffdf681f424,12680053,0,0x0,8
tick,0x7ffdf681f424,12682038,0,0x0,8
tick,0x7ffdf681f424,12684065,0,0x0,8
tick,0x7ffdf681f424,12686041,0,0x0,8
tick,0x7ffdf681f424,12688036,0,0x0,8
tick,0x7ffdf681f424,12690023,0,0x0,8
tick,0x7ffdf681f424,12692053,0,0x0,8
tick,0x7ffdf681f424,12694030,0,0x0,8
tick,0x7ffdf681f424,12696040,0,0x0,8
tick,0x7ffdf681f424,12697910,0,0x0,8
tick,0x7ffdf681f424,12700003,0,0x0,8
tick,0x7ffdf681f424,12701995,0,0x0,8
tick,0x7ffdf681f424,12703992,0,0x0,8
tick,0x7ffdf681f424,12705989,0,0x0,8
tick,0x7ffdf681f424,12707982,0,0x0,8
tick,0x7ffdf681f424,12709977,0,0x0,8
tick,0x7ffdf681f424,12711980,0,0x0,8
tick,0x7ffdf681f424,12713996,0,0x0,8
tick,0x7ffdf681f424,12715961,0,0x0,8
tick,0x7ffdf681f424,12717959,0,0x0,8
tick,0x7ffdf681f424,12719949,0,0x0,8
tick,0x7ffdf681f424,12721939,0,0x0,8
tick,0x7ffdf681f424,12723934,0,0x0,8
tick,0x7ffdf681f424,12725937,0,0x0,8
tick,0x7ffdf681f424,12727946,0,0x0,8
tick,0x7ffdf681f424,12729918,0,0x0,8
tick,0x7ffdf681f424,12731816,0,0x0,8
tick,0x7ffdf681f424,12733916,0,0x0,8
tick,0x7ffdf681f424,12735921,0,0x0,8
tick,0x7ffdf681f424,12737902,0,0x0,8
tick,0x7ffdf681f424,12739793,0,0x0,8
tick,0x7ffdf681f424,12741855,0,0x0,8
tick,0x7ffdf681f424,12743732,0,0x0,8
tick,0x7ffdf681f424,12745788,0,0x0,8
tick,0x7ffdf681f424,12747861,0,0x0,8
tick,0x7ffdf681f424,12749765,0,0x0,8
tick,0x7ffdf681f424,12751858,0,0x0,8
tick,0x7ffdf681f424,12753867,0,0x0,8
tick,0x7ffdf681f424,12755863,0,0x0,8
tick,0x7ffdf681f424,12757830,0,0x0,8
tick,0x7ffdf681f424,12759741,0,0x0,8
tick,0x7ffdf681f424,12761800,0,0x0,8
tick,0x7ffdf681f424,12763790,0,0x0,8
tick,0x7ffdf681f424,12765784,0,0x0,8
tick,0x7ffdf681f424,12767857,0,0x0,8
tick,0x7ffdf681f424,12769811,0,0x0,8
tick,0x7ffdf681f424,12771818,0,0x0,8
tick,0x7ffdf681f424,12773698,0,0x0,8
tick,0x7ffdf681f424,12775795,0,0x0,8
tick,0x7ffdf681f424,12777795,0,0x0,8
tick,0x7ffdf681f424,12779695,0,0x0,8
tick,0x7ffdf681f424,12781732,0,0x0,8
tick,0x7ffdf681f424,12783788,0,0x0,8
tick,0x7ffdf681f424,12785774,0,0x0,8
tick,0x7ffdf681f424,12787768,0,0x0,8
tick,0x7ffdf681f424,12789772,0,0x0,8
tick,0x7ffdf681f424,12791761,0,0x0,8
tick,0x7ffdf681f424,12793752,0,0x0,8
tick,0x7ffdf681f424,12795747,0,0x0,8
tick,0x7ffdf681f424,12797739,0,0x0,8
tick,0x7ffdf681f424,12799740,0,0x0,8
tick,0x7ffdf681f424,12801745,0,0x0,8
tick,0x7ffdf681f424,12803734,0,0x0,8
tick,0x7ffdf681f424,12805722,0,0x0,8
tick,0x7ffdf681f424,12807723,0,0x0,8
tick,0x7ffdf681f424,12809710,0,0x0,8
tick,0x7ffdf681f424,12811709,0,0x0,8
tick,0x7ffdf681f424,12813543,0,0x0,8
tick,0x7ffdf681f424,12815616,0,0x0,8
tick,0x7ffdf681f424,12817526,0,0x0,8
tick,0x7ffdf681f424,12819517,0,0x0,8
tick,0x7ffdf681f424,12821655,0,0x0,8
tick,0x7ffdf681f424,12823598,0,0x0,8
tick,0x7ffdf681f424,12825672,0,0x0,8
tick,0x7ffdf681f424,12827673,0,0x0,8
tick,0x7ffdf681f424,12829659,0,0x0,8
tick,0x7ffdf681f424,12831634,0,0x0,8
tick,0x7ffdf681f424,12833643,0,0x0,8
tick,0x7ffdf681f424,12835637,0,0x0,8
tick,0x7ffdf681f424,12837637,0,0x0,8
tick,0x7ffdf681f424,12839631,0,0x0,8
tick,0x7ffdf681f424,12841621,0,0x0,8
tick,0x7ffdf681f424,12843628,0,0x0,8
tick,0x7ffdf681f424,12845646,0,0x0,8
tick,0x7ffdf681f424,12847628,0,0x0,8
tick,0x7ffdf681f424,12849603,0,0x0,8
tick,0x7ffdf681f424,12851597,0,0x0,8
tick,0x7ffdf681f424,12853595,0,0x0,8
tick,0x7ffdf681f424,12855587,0,0x0,8
tick,0x7ffdf681f424,12857577,0,0x0,8
tick,0x7ffdf681f424,12859580,0,0x0,8
tick,0x7ffdf681f424,12861574,0,0x0,8
tick,0x7ffdf681f424,12863578,0,0x0,8
tick,0x7ffdf681f424,12865564,0,0x0,8
tick,0x7ffdf681f424,12867569,0,0x0,8
tick,0x7ffdf681f424,12869559,0,0x0,8
tick,0x7ffdf681f424,12871618,0,0x0,8
tick,0x7ffdf681f424,12873539,0,0x0,8
tick,0x7ffdf681f424,12875370,0,0x0,8
tick,0x7ffdf681f424,12877494,0,0x0,8
tick,0x7ffdf681f424,12879426,0,0x0,8
tick,0x7ffdf681f424,12881521,0,0x0,8
tick,0x7ffdf681f424,12883377,0,0x0,8
tick,0x7ffdf681f424,12885472,0,0x0,8
tick,0x7ffdf681f424,12887413,0,0x0,8
tick,0x7ffdf681f424,12889489,0,0x0,8
tick,0x7ffdf681f424,12891547,0,0x0,8
tick,0x7ffdf681f424,12893484,0,0x0,8
tick,0x7ffdf681f424,12895480,0,0x0,8
tick,0x7ffdf681f424,12897480,0,0x0,8
tick,0x7ffdf681f424,12899364,0,0x0,8
tick,0x7ffdf681f424,12901465,0,0x0,8
tick,0x7ffdf681f424,12903357,0,0x0,8
tick,0x7ffdf681f424,12905454,0,0x0,8
tick,0x7ffdf681f424,12907438,0,0x0,8
tick,0x7ffdf681f424,12909452,0,0x0,8
tick,0x7ffdf681f424,12911450,0,0x0,8
tick,0x7ffdf681f424,12913433,0,0x0,8
tick,0x7ffdf681f424,12915378,0,0x0,8
tick,0x7ffdf681f424,12917425,0,0x0,8
tick,0x7ffdf681f424,12919419,0,0x0,8
tick,0x7ffdf681f424,12921406,0,0x0,8
tick,0x7ffdf681f424,12923339,0,0x0,8
tick,0x7ffdf681f424,12925407,0,0x0,8
tick,0x7ffdf681f424,12927398,0,0x0,8
tick,0x7ffdf681f424,12929403,0,0x0,8
tick,0x7ffdf681f424,12931383,0,0x0,8
tick,0x7ffdf681f424,12933408,0,0x0,8
tick,0x7ffdf681f424,12935374,0,0x0,8
tick,0x7ffdf681f424,12937368,0,0x0,8
tick,0x7ffdf681f424,12939363,0,0x0,8
tick,0x7ffdf681f424,12941367,0,0x0,8
tick,0x7ffdf681f424,12943363,0,0x0,8
tick,0x7ffdf681f424,12945347,0,0x0,8
tick,0x7ffdf681f424,12947341,0,0x0,8
tick,0x7ffdf681f424,12949340,0,0x0,8
tick,0x7ffdf681f424,12951333,0,0x0,8
tick,0x7ffdf681f424,12953334,0,0x0,8
tick,0x7ffdf681f424,12955353,0,0x0,8
tick,0x7ffdf681f424,12957317,0,0x0,8
tick,0x7ffdf681f424,12959309,0,0x0,8
tick,0x7ffdf681f424,12961305,0,0x0,8
tick,0x7ffdf681f424,12963299,0,0x0,8
tick,0x7ffdf681f424,12965192,0,0x0,8
tick,0x7ffdf681f424,12967289,0,0x0,8
tick,0x7ffdf681f424,12969278,0,0x0,8
tick,0x7ffdf681f424,12971278,0,0x0,8
tick,0x7ffdf681f424,12973286,0,0x0,8
tick,0x7ffdf681f424,12975275,0,0x0,8
tick,0x7ffdf681f424,12977280,0,0x0,8
tick,0x7ffdf681f424,12979279,0,0x0,8
tick,0x7ffdf681f424,12981252,0,0x0,8
tick,0x7ffdf681f424,12983241,0,0x0,8
tick,0x7ffdf681f424,12985241,0,0x0,8
tick,0x7ffdf681f424,12987235,0,0x0,8
tick,0x7ffdf681f424,12989231,0,0x0,8
tick,0x7ffdf681f424,12991224,0,0x0,8
tick,0x7ffdf681f424,12993220,0,0x0,8
tick,0x7ffdf681f424,12995214,0,0x0,8
tick,0x7ffdf681f424,12997215,0,0x0,8
tick,0x7ffdf681f424,12999219,0,0x0,8
tick,0x7ffdf681f424,13001163,0,0x0,8
tick,0x7ffdf681f424,13003153,0,0x0,8
tick,0x7ffdf681f424,13005066,0,0x0,8
tick,0x7ffdf681f424,13007049,0,0x0,8
tick,0x7ffdf681f424,13009089,0,0x0,8
tick,0x7ffdf681f424,13011151,0,0x0,8
tick,0x7ffdf681f424,13013140,0,0x0,8
tick,0x7ffdf681f424,13015103,0,0x0,8
tick,0x7ffdf681f424,13017089,0,0x0,8
tick,0x7ffdf681f424,13019064,0,0x0,8
tick,0x7ffdf681f424,13021119,0,0x0,8
tick,0x7ffdf681f424,13023147,0,0x0,8
tick,0x7ffdf681f424,13025031,0,0x0,8
tick,0x7ffdf681f424,13027129,0,0x0,8
tick,0x7ffdf681f424,13029123,0,0x0,8
tick,0x7ffdf681f424,13031131,0,0x0,8
tick,0x7ffdf681f424,13033107,0,0x0,8
tick,0x7ffdf681f424,13035107,0,0x0,8
tick,0x7ffdf681f424,13037105,0,0x0,8
tick,0x7ffdf681f424,13039105,0,0x0,8
tick,0x7ffdf681f424,13040991,0,0x0,8
tick,0x7ffdf681f424,13043100,0,0x0,8
tick,0x7ffdf681f424,13045089,0,0x0,8
tick,0x7ffdf681f424,13047075,0,0x0,8
tick,0x7ffdf681f424,13049067,0,0x0,8
tick,0x7ffdf681f424,13051064,0,0x0,8
tick,0x7ffdf681f424,13053056,0,0x0,8
tick,0x7ffdf681f424,13055054,0,0x0,8
tick,0x7ffdf681f424,13056985,0,0x0,8
tick,0x7ffdf681f424,13059043,0,0x0,8
tick,0x7ffdf681f424,13061046,0,0x0,8
tick,0x7ffdf681f424,13063036,0,0x0,8
tick,0x7ffdf681f424,13065019,0,0x0,8
tick,0x7ffdf681f424,13067029,0,0x0,8
tick,0x7ffdf681f424,13069014,0,0x0,8
tick,0x7ffdf681f424,13071012,0,0x0,8
tick,0x7ffdf681f424,13073005,0,0x0,8
tick,0x7ffdf681f424,13075001,0,0x0,8
tick,0x7ffdf681f424,13076998,0,0x0,8
tick,0x7ffdf681f424,13079000,0,0x0,8
tick,0x7ffdf681f424,13080910,0,0x0,8
tick,0x7ffdf681f424,13082977,0,0x0,8
tick,0x7ffdf681f424,13084972,0,0x0,8
tick,0x7ffdf681f424,13086982,0,0x0,8
tick,0x7ffdf681f424,13088963,0,0x0,8
tick,0x7ffdf681f424,13090957,0,0x0,8
tick,0x7ffdf681f424,13092997,0,0x0,8
tick,0x7ffdf681f424,13094972,0,0x0,8
tick,0x7ffdf681f424,13096942,0,0x0,8
tick,0x7ffdf681f424,13098936,0,0x0,8
tick,0x7ffdf681f424,13100934,0,0x0,8
tick,0x7ffdf681f424,13102926,0,0x0,8
tick,0x7ffdf681f424,13104920,0,0x0,8
tick,0x7ffdf681f424,13106787,0,0x0,8
tick,0x7ffdf681f424,13108923,0,0x0,8
tick,0x7ffdf681f424,13110905,0,0x0,8
tick,0x7ffdf681f424,13112900,0,0x0,8
tick,0x7ffdf681f424,13114892,0,0x0,8
tick,0x7ffdf681f424,13116886,0,0x0,8
tick,0x7ffdf681f424,13118890,0,0x0,8
tick,0x7ffdf681f424,13120885,0,0x0,8
tick,0x7ffdf681f424,13122879,0,0x0,8
tick,0x7ffdf681f424,13124876,0,0x0,8
tick,0x7ffdf681f424,13126870,0,0x0,8
tick,0x7ffdf681f424,13128863,0,0x0,8
tick,0x7ffdf681f424,13130746,0,0x0,8
tick,0x7ffdf681f424,13132795,0,0x0,8
tick,0x7ffdf681f424,13134682,0,0x0,8
tick,0x7ffdf681f424,13136732,0,0x0,8
tick,0x7ffdf681f424,13138842,0,0x0,8
tick,0x7ffdf681f424,13140755,0,0x0,8
tick,0x7ffdf681f424,13142853,0,0x0,8
tick,0x7ffdf681f424,13144834,0,0x0,8
tick,0x7ffdf681f424,13146817,0,0x0,8
tick,0x7ffdf681f424,13148750,0,0x0,8
tick,0x7ffdf681f424,13150689,0,0x0,8
tick,0x7ffdf681f424,13152780,0,0x0,8
tick,0x7ffdf681f424,13154789,0,0x0,8
tick,0x7ffdf681f424,13156679,0,0x0,8
tick,0x7ffdf681f424,13158670,0,0x0,8
tick,0x7ffdf681f424,13160776,0,0x0,8
tick,0x7ffdf681f424,13162774,0,0x0,8
tick,0x7ffdf681f424,13164767,0,0x0,8
tick,0x7ffdf681f424,13166758,0,0x0,8
tick,0x7ffdf681f424,13168751,0,0x0,8
tick,0x7ffdf681f424,13170754,0,0x0,8
tick,0x7ffdf681f424,13172746,0,0x0,8
tick,0x7ffdf681f424,13174749,0,0x0,8
tick,0x7ffdf681f424,13176737,0,0x0,8
tick,0x7ffdf681f424,13178732,0,0x0,8
tick,0x7ffdf681f424,13180716,0,0x0,8
tick,0x7ffdf681f424,13182704,0,0x0,8
tick,0x7ffdf681f424,13184713,0,0x0,8
tick,0x7ffdf681f424,13186703,0,0x0,8
tick,0x7ffdf681f424,13188703,0,0x0,8
tick,0x7ffdf681f424,13190694,0,0x0,8
tick,0x7ffdf681f424,13192687,0,0x0,8
tick,0x7ffdf681f424,13194825,0,0x0,8
tick,0x7ffdf681f424,13196697,0,0x0,8
tick,0x7ffdf681f424,13198613,0,0x0,8
tick,0x7ffdf681f424,13200650,0,0x0,8
tick,0x7ffdf681f424,13202668,0,0x0,8
tick,0x7ffdf681f424,13204662,0,0x0,8
tick,0x7ffdf681f424,13206673,0,0x0,8
tick,0x7ffdf681f424,13208657,0,0x0,8
tick,0x7ffdf681f424,13210646,0,0x0,8
tick,0x7ffdf681f424,13212641,0,0x0,8
tick,0x7ffdf681f424,13214634,0,0x0,8
tick,0x7ffdf681f424,13216626,0,0x0,8
tick,0x7ffdf681f424,13218641,0,0x0,8
tick,0x7ffdf681f424,13220611,0,0x0,8
tick,0x7ffdf681f424,13222605,0,0x0,8
tick,0x7ffdf681f424,13224600,0,0x0,8
tick,0x7ffdf681f424,13226595,0,0x0,8
tick,0x7ffdf681f424,13228616,0,0x0,8
tick,0x7ffdf681f424,13230579,0,0x0,8
tick,0x7ffdf681f424,13232579,0,0x0,8
tick,0x7ffdf681f424,13234574,0,0x0,8
tick,0x7ffdf681f424,13236572,0,0x0,8
tick,0x7ffdf681f424,13238572,0,0x0,8
tick,0x7ffdf681f424,13240572,0,0x0,8
tick,0x7ffdf681f424,13242552,0,0x0,8
tick,0x7ffdf681f424,13244466,0,0x0,8
tick,0x7ffdf681f424,13246409,0,0x0,8
tick,0x7ffdf681f424,13248397,0,0x0,8
tick,0x7ffdf681f424,13250422,0,0x0,8
tick,0x7ffdf681f424,13252418,0,0x0,8
tick,0x7ffdf681f424,13254528,0,0x0,8
tick,0x7ffdf681f424,13256557,0,0x0,8
tick,0x7ffdf681f424,13258510,0,0x0,8
tick,0x7ffdf681f424,13260413,0,0x0,8
tick,0x7ffdf681f424,13262474,0,0x0,8
tick,0x7ffdf681f424,13264359,0,0x0,8
tick,0x7ffdf681f424,13266409,0,0x0,8
tick,0x7ffdf681f424,13268444,0,0x0,8
tick,0x7ffdf681f424,13270551,0,0x0,8
tick,0x7ffdf681f424,13272469,0,0x0,8
tick,0x7ffdf681f424,13274403,0,0x0,8
tick,0x7ffdf681f424,13276301,0,0x0,8
tick,0x7ffdf681f424,13278286,0,0x0,8
tick,0x7ffdf681f424,13280462,0,0x0,8
tick,0x7ffdf681f424,13282391,0,0x0,8
tick,0x7ffdf681f424,13284459,0,0x0,8
tick,0x7ffdf681f424,13286461,0,0x0,8
tick,0x7ffdf681f424,13288425,0,0x0,8
tick,0x7ffdf681f424,13290328,0,0x0,8
tick,0x7ffdf681f424,13292447,0,0x0,8
tick,0x7ffdf681f424,13294409,0,0x0,8
tick,0x7ffdf681f424,13296403,0,0x0,8
tick,0x7ffdf681f424,13298367,0,0x0,8
tick,0x7ffdf681f424,13300398,0,0x0,8
tick,0x7ffdf681f424,13302393,0,0x0,8
tick,0x7ffdf681f424,13304394,0,0x0,8
tick,0x7ffdf681f424,13306424,0,0x0,8
tick,0x7ffdf681f424,13308374,0,0x0,8
tick,0x7ffdf681f424,13310371,0,0x0,8
tick,0x7ffdf681f424,13312367,0,0x0,8
tick,0x7ffdf681f424,13314361,0,0x0,8
tick,0x7ffdf681f424,13316373,0,0x0,8
tick,0x7ffdf681f424,13318295,0,0x0,8
tick,0x7ffdf681f424,13320339,0,0x0,8
tick,0x7ffdf681f424,13322340,0,0x0,8
tick,0x7ffdf681f424,13324337,0,0x0,8
tick,0x7ffdf681f424,13326327,0,0x0,8
tick,0x7ffdf681f424,13328336,0,0x0,8
tick,0x7ffdf681f424,13330312,0,0x0,8
tick,0x7ffdf681f424,13332312,0,0x0,8
tick,0x7ffdf681f424,13334307,0,0x0,8
tick,0x7ffdf681f424,13336303,0,0x0,8
tick,0x7ffdf681f424,13338313,0,0x0,8
tick,0x7ffdf681f424,13340183,0,0x0,8
tick,0x7ffdf681f424,13342295,0,0x0,8
tick,0x7ffdf681f424,13344275,0,0x0,8
tick,0x7ffdf681f424,13346293,0,0x0,8
tick,0x7ffdf681f424,13348271,0,0x0,8
tick,0x7ffdf681f424,13350300,0,0x0,8
tick,0x7ffdf681f424,13352254,0,0x0,8
tick,0x7ffdf681f424,13354254,0,0x0,8
tick,0x7ffdf681f424,13356303,0,0x0,8
tick,0x7ffdf681f424,13358300,0,0x0,8
tick,0x7ffdf681f424,13360238,0,0x0,8
tick,0x7ffdf681f424,13362228,0,0x0,8
tick,0x7ffdf681f424,13364231,0,0x0,8
tick,0x7ffdf681f424,13366229,0,0x0,8
tick,0x7ffdf681f424,13368223,0,0x0,8
tick,0x7ffdf681f424,13370213,0,0x0,8
tick,0x7ffdf681f424,13372219,0,0x0,8
tick,0x7ffdf681f424,13374195,0,0x0,8
tick,0x7ffdf681f424,13376229,0,0x0,8
tick,0x7ffdf681f424,13378190,0,0x0,8
tick,0x7ffdf681f424,13380192,0,0x0,8
tick,0x7ffdf681f424,13382179,0,0x0,8
tick,0x7ffdf681f424,13384187,0,0x0,8
tick,0x7ffdf681f424,13386059,0,0x0,8
tick,0x7ffdf681f424,13388167,0,0x0,8
tick,0x7ffdf681f424,13390159,0,0x0,8
tick,0x7ffdf681f424,13392164,0,0x0,8
tick,0x7ffdf681f424,13394119,0,0x0,8
tick,0x7ffdf681f424,13396048,0,0x0,8
tick,0x7ffdf681f424,13398110,0,0x0,8
tick,0x7ffdf681f424,13400156,0,0x0,8
tick,0x7ffdf681f424,13402151,0,0x0,8
tick,0x7ffdf681f424,13404119,0,0x0,8
tick,0x7ffdf681f424,13406121,0,0x0,8
tick,0x7ffdf681f424,13408078,0,0x0,8
tick,0x7ffdf681f424,13409971,0,0x0,8
tick,0x7ffdf681f424,13412059,0,0x0,8
tick,0x7ffdf681f424,13413933,0,0x0,8
tick,0x7ffdf681f424,13415993,0,0x0,8
tick,0x7ffdf681f424,13418075,0,0x0,8
tick,0x7ffdf681f424,13420071,0,0x0,8
tick,0x7ffdf681f424,13422073,0,0x0,8
tick,0x7ffdf681f424,13424007,0,0x0,8
tick,0x7ffdf681f424,13426056,0,0x0,8
tick,0x7ffdf681f424,13428057,0,0x0,8
tick,0x7ffdf681f424,13430052,0,0x0,8
tick,0x7ffdf681f424,13431945,0,0x0,8
tick,0x7ffdf681f424,13434071,0,0x0,8
tick,0x7ffdf681f424,13436034,0,0x0,8
tick,0x7ffdf681f424,13438043,0,0x0,8
tick,0x7ffdf681f424,13440038,0,0x0,8
tick,0x7ffdf681f424,13442032,0,0x0,8
tick,0x7ffdf681f424,13444014,0,0x0,8
tick,0x7ffdf681f424,13446009,0,0x0,8
tick,0x7ffdf681f424,13448003,0,0x0,8
tick,0x7ffdf681f424,13449997,0,0x0,8
tick,0x7ffdf681f424,13451995,0,0x0,8
tick,0x7ffdf681f424,13453990,0,0x0,8
tick,0x7ffdf681f424,13455982,0,0x0,8
tick,0x7ffdf681f424,13457978,0,0x0,8
tick,0x7ffdf681f424,13459984,0,0x0,8
tick,0x7ffdf681f424,13461966,0,0x0,8
tick,0x7ffdf681f424,13463955,0,0x0,8
tick,0x7ffdf681f424,13465961,0,0x0,8
tick,0x7ffdf681f424,13467948,0,0x0,8
tick,0x7ffdf681f424,13469942,0,0x0,8
tick,0x7ffdf681f424,13471947,0,0x0,8
tick,0x7ffdf681f424,13473940,0,0x0,8
tick,0x7ffdf681f424,13475929,0,0x0,8
tick,0x7ffdf681f424,13477923,0,0x0,8
tick,0x7ffdf681f424,13479927,0,0x0,8
tick,0x7ffdf681f424,13481805,0,0x0,8
tick,0x7ffdf681f424,13483910,0,0x0,8
tick,0x7ffdf681f424,13485902,0,0x0,8
tick,0x7ffdf681f424,13487897,0,0x0,8
tick,0x7ffdf681f424,13489891,0,0x0,8
tick,0x7ffdf681f424,13491889,0,0x0,8
tick,0x7ffdf681f424,13493875,0,0x0,8
tick,0x7ffdf681f424,13495876,0,0x0,8
tick,0x7ffdf681f424,13497869,0,0x0,8
tick,0x7ffdf681f424,13499867,0,0x0,8
tick,0x7ffdf681f424,13501871,0,0x0,8
tick,0x7ffdf681f424,13503867,0,0x0,8
tick,0x7ffdf681f424,13505846,0,0x0,8
tick,0x7ffdf681f424,13507843,0,0x0,8
tick,0x7ffdf681f424,13509838,0,0x0,8
tick,0x7ffdf681f424,13511832,0,0x0,8
tick,0x7ffdf681f424,13513827,0,0x0,8
tick,0x7ffdf681f424,13515826,0,0x0,8
tick,0x7ffdf681f424,13517817,0,0x0,8
tick,0x7ffdf681f424,13519816,0,0x0,8
tick,0x7ffdf681f424,13521865,0,0x0,8
tick,0x7ffdf681f424,13523676,0,0x0,8
tick,0x7ffdf681f424,13525766,0,0x0,8
tick,0x7ffdf681f424,13527793,0,0x0,8
tick,0x7ffdf681f424,13529678,0,0x0,8
tick,0x7ffdf681f424,13531742,0,0x0,8
tick,0x7ffdf681f424,13533739,0,0x0,8
tick,0x7ffdf681f424,13535683,0,0x0,8
tick,0x7ffdf681f424,13537668,0,0x0,8
tick,0x7ffdf681f424,13539767,0,0x0,8
tick,0x7ffdf681f424,13541728,0,0x0,8
tick,0x7ffdf681f424,13543753,0,0x0,8
tick,0x7ffdf681f424,13545744,0,0x0,8
tick,0x7ffdf681f424,13547773,0,0x0,8
tick,0x7ffdf681f424,13549696,0,0x0,8
tick,0x7ffdf681f424,13551727,0,0x0,8
tick,0x7ffdf681f424,13553730,0,0x0,8
tick,0x7ffdf681f424,13555732,0,0x0,8
tick,0x7ffdf681f424,13557622,0,0x0,8
tick,0x7ffdf681f424,13559707,0,0x0,8
tick,0x7ffdf681f424,13561702,0,0x0,8
tick,0x7ffdf681f424,13563702,0,0x0,8
tick,0x7ffdf681f424,13565631,0,0x0,8
tick,0x7ffdf681f424,13567695,0,0x0,8
tick,0x7ffdf681f424,13569711,0,0x0,8
tick,0x7ffdf681f424,13571680,0,0x0,8
tick,0x7ffdf681f424,13573567,0,0x0,8
tick,0x7ffdf681f424,13575669,0,0x0,8
tick,0x7ffdf681f424,13577669,0,0x0,8
tick,0x7ffdf681f424,13579653,0,0x0,8
tick,0x7ffdf681f424,13581659,0,0x0,8
tick,0x7ffdf681f424,13583702,0,0x0,8
tick,0x7ffdf681f424,13585644,0,0x0,8
tick,0x7ffdf681f424,13587638,0,0x0,8
tick,0x7ffdf681f424,13589629,0,0x0,8
tick,0x7ffdf681f424,13591632,0,0x0,8
tick,0x7ffdf681f424,13593627,0,0x0,8
tick,0x7ffdf681f424,13595617,0,0x0,8
tick,0x7ffdf681f424,13597613,0,0x0,8
tick,0x7ffdf681f424,13599605,0,0x0,8
tick,0x7ffdf681f424,13601599,0,0x0,8
tick,0x7ffdf681f424,13603594,0,0x0,8
tick,0x7ffdf681f424,13605589,0,0x0,8
tick,0x7ffdf681f424,13607583,0,0x0,8
tick,0x7ffdf681f424,13609584,0,0x0,8
tick,0x7ffdf681f424,13611463,0,0x0,8
tick,0x7ffdf681f424,13613584,0,0x0,8
tick,0x7ffdf681f424,13615563,0,0x0,8
tick,0x7ffdf681f424,13617565,0,0x0,8
tick,0x7ffdf681f424,13619553,0,0x0,8
tick,0x7ffdf681f424,13621534,0,0x0,8
tick,0x7ffdf681f424,13623425,0,0x0,8
tick,0x7ffdf681f424,13625526,0,0x0,8
tick,0x7ffdf681f424,13627521,0,0x0,8
tick,0x7ffdf681f424,13629512,0,0x0,8
tick,0x7ffdf681f424,13631516,0,0x0,8
tick,0x7ffdf681f424,13633510,0,0x0,8
tick,0x7ffdf681f424,13635516,0,0x0,8
tick,0x7ffdf681f424,13637498,0,0x0,8
tick,0x7ffdf681f424,13639493,0,0x0,8
tick,0x7ffdf681f424,13641486,0,0x0,8
tick,0x7ffdf681f424,13643484,0,0x0,8
tick,0x7ffdf681f424,13645470,0,0x0,8
tick,0x7ffdf681f424,13647470,0,0x0,8
tick,0x7ffdf681f424,13649486,0,0x0,8
tick,0x7ffdf681f424,13651351,0,0x0,8
tick,0x7ffdf681f424,13653436,0,0x0,8
tick,0x7ffdf681f424,13655298,0,0x0,8
tick,0x7ffdf681f424,13657287,0,0x0,8
tick,0x7ffdf681f424,13659331,0,0x0,8
tick,0x7ffdf681f424,13661467,0,0x0,8
tick,0x7ffdf681f424,13663434,0,0x0,8
tick,0x7ffdf681f424,13665324,0,0x0,8
tick,0x7ffdf681f424,13667403,0,0x0,8
tick,0x7ffdf681f424,13669423,0,0x0,8
tick,0x7ffdf681f424,13671411,0,0x0,8
tick,0x7ffdf681f424,13673411,0,0x0,8
tick,0x7ffdf681f424,13675308,0,0x0,8
tick,0x7ffdf681f424,13677498,0,0x0,8
tick,0x7ffdf681f424,13679414,0,0x0,8
tick,0x7ffdf681f424,13681381,0,0x0,8
tick,0x7ffdf681f424,13683383,0,0x0,8
tick,0x7ffdf681f424,13685368,0,0x0,8
tick,0x7ffdf681f424,13687374,0,0x0,8
tick,0x7ffdf681f424,13689355,0,0x0,8
tick,0x7ffdf681f424,13691361,0,0x0,8
tick,0x7ffdf681f424,13693233,0,0x0,8
tick,0x7ffdf681f424,13695240,0,0x0,8
tick,0x7ffdf681f424,13697336,0,0x0,8
tick,0x7ffdf681f424,13699330,0,0x0,8
tick,0x7ffdf681f424,13701325,0,0x0,8
tick,0x7ffdf681f424,13703320,0,0x0,8
tick,0x7ffdf681f424,13705315,0,0x0,8
tick,0x7ffdf681f424,13707313,0,0x0,8
tick,0x7ffdf681f424,13709306,0,0x0,8
tick,0x7ffdf681f424,13711300,0,0x0,8
tick,0x7ffdf681f424,13713296,0,0x0,8
tick,0x7ffdf681f424,13715158,0,0x0,8
tick,0x7ffdf681f424,13717278,0,0x0,8
tick,0x7ffdf681f424,13719279,0,0x0,8
tick,0x7ffdf681f424,13721280,0,0x0,8
tick,0x7ffdf681f424,13723273,0,0x0,8
tick,0x7ffdf681f424,13725262,0,0x0,8
tick,0x7ffdf681f424,13727256,0,0x0,8
tick,0x7ffdf681f424,13729251,0,0x0,8
tick,0x7ffdf681f424,13731240,0,0x0,8
tick,0x7ffdf681f424,13733243,0,0x0,8
tick,0x7ffdf681f424,13735235,0,0x0,8
tick,0x7ffdf681f424,13737230,0,0x0,8
tick,0x7ffdf681f424,13739228,0,0x0,8
tick,0x7ffdf681f424,13741220,0,0x0,8
tick,0x7ffdf681f424,13743214,0,0x0,8
tick,0x7ffdf681f424,13745222,0,0x0,8
tick,0x7ffdf681f424,13747216,0,0x0,8
tick,0x7ffdf681f424,13749201,0,0x0,8
tick,0x7ffdf681f424,13751193,0,0x0,8
tick,0x7ffdf681f424,13753197,0,0x0,8
tick,0x7ffdf681f424,13755178,0,0x0,8
tick,0x7ffdf681f424,13757113,0,0x0,8
tick,0x7ffdf681f424,13759174,0,0x0,8
tick,0x7ffdf681f424,13761167,0,0x0,8
tick,0x7ffdf681f424,13763160,0,0x0,8
tick,0x7ffdf681f424,13765081,0,0x0,8
tick,0x7ffdf681f424,13767167,0,0x0,8
tick,0x7ffdf681f424,13769144,0,0x0,8
tick,0x7ffdf681f424,13771145,0,0x0,8
tick,0x7ffdf681f424,13773134,0,0x0,8
tick,0x7ffdf681f424,13775128,0,0x0,8
tick,0x7ffdf681f424,13777123,0,0x0,8
tick,0x7ffdf681f424,13779142,0,0x0,8
tick,0x7ffdf681f424,13781113,0,0x0,8
tick,0x7ffdf681f424,13783182,0,0x0,8
tick,0x7ffdf681f424,13785032,0,0x0,8
tick,0x7ffdf681f424,13786934,0,0x0,8
tick,0x7ffdf681f424,13789057,0,0x0,8
tick,0x7ffdf681f424,13790964,0,0x0,8
tick,0x7ffdf681f424,13793036,0,0x0,8
tick,0x7ffdf681f424,13795058,0,0x0,8
tick,0x7ffdf681f424,13797091,0,0x0,8
tick,0x7ffdf681f424,13799036,0,0x0,8
tick,0x7ffdf681f424,13800929,0,0x0,8
tick,0x7ffdf681f424,13803014,0,0x0,8
tick,0x7ffdf681f424,13805021,0,0x0,8
tick,0x7ffdf681f424,13806993,0,0x0,8
tick,0x7ffdf681f424,13808926,0,0x0,8
tick,0x7ffdf681f424,13811046,0,0x0,8
tick,0x7ffdf681f424,13813046,0,0x0,8
tick,0x7ffdf681f424,13814913,0,0x0,8
tick,0x7ffdf681f424,13817014,0,0x0,8
tick,0x7ffdf681f424,13819014,0,0x0,8
tick,0x7ffdf681f424,13821000,0,0x0,8
tick,0x7ffdf681f424,13823001,0,0x0,8
tick,0x7ffdf681f424,13824993,0,0x0,8
tick,0x7ffdf681f424,13826990,0,0x0,8
tick,0x7ffdf681f424,13829016,0,0x0,8
tick,0x7ffdf681f424,13830981,0,0x0,8
tick,0x7ffdf681f424,13832996,0,0x0,8
tick,0x7ffdf681f424,13834968,0,0x0,8
tick,0x7ffdf681f424,13836963,0,0x0,8
tick,0x7ffdf681f424,13838970,0,0x0,8
tick,0x7ffdf681f424,13840961,0,0x0,8
tick,0x7ffdf681f424,13842947,0,0x0,8
tick,0x7ffdf681f424,13844937,0,0x0,8
tick,0x7ffdf681f424,13846937,0,0x0,8
tick,0x7ffdf681f424,13848939,0,0x0,8
tick,0x7ffdf681f424,13850929,0,0x0,8
tick,0x7ffdf681f424,13852922,0,0x0,8
tick,0x7ffdf681f424,13854929,0,0x0,8
tick,0x7ffdf681f424,13856808,0,0x0,8
tick,0x7ffdf681f424,13858906,0,0x0,8
tick,0x7ffdf681f424,13860899,0,0x0,8
tick,0x7ffdf681f424,13862889,0,0x0,8
tick,0x7ffdf681f424,13864883,0,0x0,8
tick,0x7ffdf681f424,13866891,0,0x0,8
tick,0x7ffdf681f424,13868873,0,0x0,8
tick,0x7ffdf681f424,13870882,0,0x0,8
tick,0x7ffdf681f424,13872867,0,0x0,8
tick,0x7ffdf681f424,13874860,0,0x0,8
tick,0x7ffdf681f424,13876868,0,0x0,8
tick,0x7ffdf681f424,13878851,0,0x0,8
tick,0x7ffdf681f424,13880846,0,0x0,8
tick,0x7ffdf681f424,13882843,0,0x0,8
tick,0x7ffdf681f424,13884835,0,0x0,8
tick,0x7ffdf681f424,13886825,0,0x0,8
tick,0x7ffdf681f424,13888822,0,0x0,8
tick,0x7ffdf681f424,13890819,0,0x0,8
tick,0x7ffdf681f424,13892808,0,0x0,8
tick,0x7ffdf681f424,13894808,0,0x0,8
tick,0x7ffdf681f424,13896806,0,0x0,8
tick,0x7ffdf681f424,13898704,0,0x0,8
tick,0x7ffdf681f424,13900792,0,0x0,8
tick,0x7ffdf681f424,13902716,0,0x0,8
tick,0x7ffdf681f424,13904776,0,0x0,8
tick,0x7ffdf681f424,13906776,0,0x0,8
tick,0x7ffdf681f424,13908766,0,0x0,8
tick,0x7ffdf681f424,13910804,0,0x0,8
tick,0x7ffdf681f424,13912837,0,0x0,8
tick,0x7ffdf681f424,13914674,0,0x0,8
tick,0x7ffdf681f424,13916587,0,0x0,8
tick,0x7ffdf681f424,13918657,0,0x0,8
tick,0x7ffdf681f424,13920619,0,0x0,8
tick,0x7ffdf681f424,13922734,0,0x0,8
tick,0x7ffdf681f424,13924705,0,0x0,8
tick,0x7ffdf681f424,13926688,0,0x0,8
tick,0x7ffdf681f424,13928683,0,0x0,8
tick,0x7ffdf681f424,13930709,0,0x0,8
tick,0x7ffdf681f424,13932664,0,0x0,8
tick,0x7ffdf681f424,13934656,0,0x0,8
tick,0x7ffdf681f424,13936696,0,0x0,8
tick,0x7ffdf681f424,13938694,0,0x0,8
tick,0x7ffdf681f424,13940611,0,0x0,8
tick,0x7ffdf681f424,13942592,0,0x0,8
tick,0x7ffdf681f424,13944673,0,0x0,8
tick,0x7ffdf681f424,13946672,0,0x0,8
tick,0x7ffdf681f424,13948552,0,0x0,8
tick,0x7ffdf681f424,13950669,0,0x0,8
tick,0x7ffdf681f424,13952651,0,0x0,8
tick,0x7ffdf681f424,13954645,0,0x0,8
tick,0x7ffdf681f424,13956648,0,0x0,8
tick,0x7ffdf681f424,13958632,0,0x0,8
tick,0x7ffdf681f424,13960633,0,0x0,8
tick,0x7ffdf681f424,13962641,0,0x0,8
tick,0x7ffdf681f424,13964636,0,0x0,8
tick,0x7ffdf681f424,13966595,0,0x0,8
tick,0x7ffdf681f424,13968612,0,0x0,8
tick,0x7ffdf681f424,13970608,0,0x0,8
tick,0x7ffdf681f424,13972601,0,0x0,8
tick,0x7ffdf681f424,13974590,0,0x0,8
tick,0x7ffdf681f424,13976590,0,0x0,8
tick,0x7ffdf681f424,13978582,0,0x0,8
tick,0x7ffdf681f424,13980584,0,0x0,8
tick,0x7ffdf681f424,13982569,0,0x0,8
tick,0x7ffdf681f424,13984576,0,0x0,8
tick,0x7ffdf681f424,13986587,0,0x0,8
tick,0x7ffdf681f424,13988557,0,0x0,8
tick,0x7ffdf681f424,13990510,0,0x0,8
tick,0x7ffdf681f424,13992573,0,0x0,8
tick,0x7ffdf681f424,13994540,0,0x0,8
tick,0x7ffdf681f424,13996531,0,0x0,8
tick,0x7ffdf681f424,13998460,0,0x0,8
tick,0x7ffdf681f424,14000527,0,0x0,8
tick,0x7ffdf681f424,14002530,0,0x0,8
tick,0x7ffdf681f424,14004515,0,0x0,8
tick,0x7ffdf681f424,14006508,0,0x0,8
tick,0x7ffdf681f424,14008509,0,0x0,8
tick,0x7ffdf681f424,14010497,0,0x0,8
tick,0x7ffdf681f424,14012489,0,0x0,8
tick,0x7ffdf681f424,14014489,0,0x0,8
tick,0x7ffdf681f424,14016481,0,0x0,8
tick,0x7ffdf681f424,14018478,0,0x0,8
tick,0x7ffdf681f424,14020478,0,0x0,8
tick,0x7ffdf681f424,14022467,0,0x0,8
tick,0x7ffdf681f424,14024462,0,0x0,8
tick,0x7ffdf681f424,14026458,0,0x0,8
tick,0x7ffdf681f424,14028455,0,0x0,8
tick,0x7ffdf681f424,14030473,0,0x0,8
tick,0x7ffdf681f424,14032446,0,0x0,8
tick,0x7ffdf681f424,14034435,0,0x0,8
tick,0x7ffdf681f424,14036430,0,0x0,8
tick,0x7ffdf681f424,14038425,0,0x0,8
tick,0x7ffdf681f424,14040417,0,0x0,8
tick,0x7ffdf681f424,14042303,0,0x0,8
tick,0x7ffdf681f424,14044356,0,0x0,8
tick,0x7ffdf681f424,14046246,0,0x0,8
tick,0x7ffdf681f424,14048360,0,0x0,8
tick,0x7ffdf681f424,14050300,0,0x0,8
tick,0x7ffdf681f424,14052366,0,0x0,8
tick,0x7ffdf681f424,14054336,0,0x0,8
tick,0x7ffdf681f424,14056375,0,0x0,8
tick,0x7ffdf681f424,14058330,0,0x0,8
tick,0x7ffdf681f424,14060230,0,0x0,8
tick,0x7ffdf681f424,14062366,0,0x0,8
tick,0x7ffdf681f424,14064313,0,0x0,8
tick,0x7ffdf681f424,14066256,0,0x0,8
tick,0x7ffdf681f424,14068335,0,0x0,8
tick,0x7ffdf681f424,14070331,0,0x0,8
tick,0x7ffdf681f424,14072366,0,0x0,8
tick,0x7ffdf681f424,14074325,0,0x0,8
tick,0x7ffdf681f424,14076324,0,0x0,8
tick,0x7ffdf681f424,14078318,0,0x0,8
tick,0x7ffdf681f424,14080321,0,0x0,8
tick,0x7ffdf681f424,14082205,0,0x0,8
tick,0x7ffdf681f424,14084297,0,0x0,8
tick,0x7ffdf681f424,14086291,0,0x0,8
tick,0x7ffdf681f424,14088299,0,0x0,8
tick,0x7ffdf681f424,14090200,0,0x0,8
tick,0x7ffdf681f424,14092275,0,0x0,8
tick,0x7ffdf681f424,14094277,0,0x0,8
tick,0x7ffdf681f424,14096283,0,0x0,8
tick,0x7ffdf681f424,14098262,0,0x0,8
tick,0x7ffdf681f424,14100259,0,0x0,8
tick,0x7ffdf681f424,14102249,0,0x0,8
tick,0x7ffdf681f424,14104246,0,0x0,8
tick,0x7ffdf681f424,14106240,0,0x0,8
tick,0x7ffdf681f424,14108238,0,0x0,8
tick,0x7ffdf681f424,14110233,0,0x0,8
tick,0x7ffdf681f424,14112295,0,0x0,8
tick,0x7ffdf681f424,14114216,0,0x0,8
tick,0x7ffdf681f424,14116226,0,0x0,8
tick,0x7ffdf681f424,14118224,0,0x0,8
tick,0x7ffdf681f424,14120204,0,0x0,8
tick,0x7ffdf681f424,14122203,0,0x0,8
tick,0x7ffdf681f424,14124203,0,0x0,8
tick,0x7ffdf681f424,14126189,0,0x0,8
tick,0x7ffdf681f424,14128184,0,0x0,8
tick,0x7ffdf681f424,14130182,0,0x0,8
tick,0x7ffdf681f424,14132075,0,0x0,8
tick,0x7ffdf681f424,14134168,0,0x0,8
tick,0x7ffdf681f424,14136163,0,0x0,8
tick,0x7ffdf681f424,14138156,0,0x0,8
tick,0x7ffdf681f424,14140155,0,0x0,8
tick,0x7ffdf681f424,14142147,0,0x0,8
tick,0x7ffdf681f424,14144142,0,0x0,8
tick,0x7ffdf681f424,14146136,0,0x0,8
tick,0x7ffdf681f424,14148133,0,0x0,8
tick,0x7ffdf681f424,14150120,0,0x0,8
tick,0x7ffdf681f424,14152116,0,0x0,8
tick,0x7ffdf681f424,14154112,0,0x0,8
tick,0x7ffdf681f424,14156121,0,0x0,8
tick,0x7ffdf681f424,14158105,0,0x0,8
tick,0x7ffdf681f424,14160097,0,0x0,8
tick,0x7ffdf681f424,14162107,0,0x0,8
tick,0x7ffdf681f424,14164084,0,0x0,8
tick,0x7ffdf681f424,14166078,0,0x0,8
tick,0x7ffdf681f424,14168083,0,0x0,8
tick,0x7ffdf681f424,14170070,0,0x0,8
tick,0x7ffdf681f424,14172069,0,0x0,8
tick,0x7ffdf681f424,14174063,0,0x0,8
tick,0x7ffdf681f424,14176123,0,0x0,8
tick,0x7ffdf681f424,14178017,0,0x0,8
tick,0x7ffdf681f424,14179881,0,0x0,8
tick,0x7ffdf681f424,14181934,0,0x0,8
tick,0x7ffdf681f424,14183953,0,0x0,8
tick,0x7ffdf681f424,14186033,0,0x0,8
tick,0x7ffdf681f424,14188054,0,0x0,8
tick,0x7ffdf681f424,14190079,0,0x0,8
tick,0x7ffdf681f424,14191961,0,0x0,8
tick,0x7ffdf681f424,14193871,0,0x0,8
tick,0x7ffdf681f424,14195961,0,0x0,8
tick,0x7ffdf681f424,14197996,0,0x0,8
tick,0x7ffdf681f424,14199881,0,0x0,8
tick,0x7ffdf681f424,14202048,0,0x0,8
tick,0x7ffdf681f424,14203984,0,0x0,8
tick,0x7ffdf681f424,14205999,0,0x0,8
tick,0x7ffdf681f424,14207864,0,0x0,8
tick,0x7ffdf681f424,14209961,0,0x0,8
tick,0x7ffdf681f424,14211955,0,0x0,8
tick,0x7ffdf681f424,14213955,0,0x0,8
tick,0x7ffdf681f424,14215951,0,0x0,8
tick,0x7ffdf681f424,14217942,0,0x0,8
tick,0x7ffdf681f424,14219939,0,0x0,8
tick,0x7ffdf681f424,14221928,0,0x0,8
tick,0x7ffdf681f424,14223868,0,0x0,8
tick,0x7ffdf681f424,14225923,0,0x0,8
tick,0x7ffdf681f424,14227929,0,0x0,8
tick,0x7ffdf681f424,14229914,0,0x0,8
tick,0x7ffdf681f424,14231825,0,0x0,8
tick,0x7ffdf681f424,14233905,0,0x0,8
tick,0x7ffdf681f424,14235891,0,0x0,8
tick,0x7ffdf681f424,14237911,0,0x0,8
tick,0x7ffdf681f424,14239886,0,0x0,8
tick,0x7ffdf681f424,14241880,0,0x0,8
tick,0x7ffdf681f424,14243765,0,0x0,8
tick,0x7ffdf681f424,14245864,0,0x0,8
tick,0x7ffdf681f424,14247863,0,0x0,8
tick,0x7ffdf681f424,14249879,0,0x0,8
tick,0x7ffdf681f424,14251891,0,0x0,8
tick,0x7ffdf681f424,14253843,0,0x0,8
tick,0x7ffdf681f424,14255843,0,0x0,8
tick,0x7ffdf681f424,14257840,0,0x0,8
tick,0x7ffdf681f424,14259827,0,0x0,8
tick,0x7ffdf681f424,14261828,0,0x0,8
tick,0x7ffdf681f424,14263821,0,0x0,8
tick,0x7ffdf681f424,14265813,0,0x0,8
tick,0x7ffdf681f424,14267817,0,0x0,8
tick,0x7ffdf681f424,14269809,0,0x0,8
tick,0x7ffdf681f424,14271814,0,0x0,8
tick,0x7ffdf681f424,14273693,0,0x0,8
tick,0x7ffdf681f424,14275790,0,0x0,8
tick,0x7ffdf681f424,14277791,0,0x0,8
tick,0x7ffdf681f424,14279774,0,0x0,8
tick,0x7ffdf681f424,14281776,0,0x0,8
tick,0x7ffdf681f424,14283769,0,0x0,8
tick,0x7ffdf681f424,14285757,0,0x0,8
tick,0x7ffdf681f424,14287770,0,0x0,8
tick,0x7ffdf681f424,14289783,0,0x0,8
tick,0x7ffdf681f424,14291750,0,0x0,8
tick,0x7ffdf681f424,14293755,0,0x0,8
tick,0x7ffdf681f424,14295734,0,0x0,8
tick,0x7ffdf681f424,14297739,0,0x0,8
tick,0x7ffdf681f424,14299726,0,0x0,8
tick,0x7ffdf681f424,14301726,0,0x0,8
tick,0x7ffdf681f424,14303795,0,0x0,8
tick,0x7ffdf681f424,14305675,0,0x0,8
tick,0x7ffdf681f424,14307573,0,0x0,8
tick,0x7ffdf681f424,14309662,0,0x0,8
tick,0x7ffdf681f424,14311572,0,0x0,8
tick,0x7ffdf681f424,14313696,0,0x0,8
tick,0x7ffdf681f424,14315643,0,0x0,8
tick,0x7ffdf681f424,14317629,0,0x0,8
tick,0x7ffdf681f424,14319679,0,0x0,8
tick,0x7ffdf681f424,14321671,0,0x0,8
tick,0x7ffdf681f424,14323571,0,0x0,8
tick,0x7ffdf681f424,14325549,0,0x0,8
tick,0x7ffdf681f424,14327649,0,0x0,8
tick,0x7ffdf681f424,14329648,0,0x0,8
tick,0x7ffdf681f424,14331637,0,0x0,8
tick,0x7ffdf681f424,14333527,0,0x0,8
tick,0x7ffdf681f424,14335635,0,0x0,8
tick,0x7ffdf681f424,14337635,0,0x0,8
tick,0x7ffdf681f424,14339633,0,0x0,8
tick,0x7ffdf681f424,14341609,0,0x0,8
tick,0x7ffdf681f424,14343603,0,0x0,8
tick,0x7ffdf681f424,14345606,0,0x0,8
tick,0x7ffdf681f424,14347592,0,0x0,8
tick,0x7ffdf681f424,14349587,0,0x0,8
tick,0x7ffdf681f424,14351587,0,0x0,8
tick,0x7ffdf681f424,14353582,0,0x0,8
tick,0x7ffdf681f424,14355577,0,0x0,8
tick,0x7ffdf681f424,14357571,0,0x0,8
tick,0x7ffdf681f424,14359589,0,0x0,8
tick,0x7ffdf681f424,14361558,0,0x0,8
tick,0x7ffdf681f424,14363550,0,0x0,8
tick,0x7ffdf681f424,14365456,0,0x0,8
tick,0x7ffdf681f424,14367544,0,0x0,8
tick,0x7ffdf681f424,14369534,0,0x0,8
tick,0x7ffdf681f424,14371530,0,0x0,8
tick,0x7ffdf681f424,14373508,0,0x0,8
tick,0x7ffdf681f424,14375524,0,0x0,8
tick,0x7ffdf681f424,14377517,0,0x0,8
tick,0x7ffdf681f424,14379516,0,0x0,8
tick,0x7ffdf681f424,14381573,0,0x0,8
tick,0x7ffdf681f424,14383502,0,0x0,8
tick,0x7ffdf681f424,14385421,0,0x0,8
tick,0x7ffdf681f424,14387486,0,0x0,8
tick,0x7ffdf681f424,14389480,0,0x0,8
tick,0x7ffdf681f424,14391478,0,0x0,8
tick,0x7ffdf681f424,14393472,0,0x0,8
tick,0x7ffdf681f424,14395471,0,0x0,8
tick,0x7ffdf681f424,14397465,0,0x0,8
tick,0x7ffdf681f424,14399459,0,0x0,8
tick,0x7ffdf681f424,14401469,0,0x0,8
tick,0x7ffdf681f424,14403498,0,0x0,8
tick,0x7ffdf681f424,14405446,0,0x0,8
tick,0x7ffdf681f424,14407438,0,0x0,8
tick,0x7ffdf681f424,14409436,0,0x0,8
tick,0x7ffdf681f424,14411427,0,0x0,8
tick,0x7ffdf681f424,14413422,0,0x0,8
tick,0x7ffdf681f424,14415317,0,0x0,8
tick,0x7ffdf681f424,14417415,0,0x0,8
tick,0x7ffdf681f424,14419406,0,0x0,8
tick,0x7ffdf681f424,14421408,0,0x0,8
tick,0x7ffdf681f424,14423401,0,0x0,8
tick,0x7ffdf681f424,14425441,0,0x0,8
tick,0x7ffdf681f424,14427391,0,0x0,8
tick,0x7ffdf681f424,14429387,0,0x0,8
tick,0x7ffdf681f424,14431380,0,0x0,8
tick,0x7ffdf681f424,14433257,0,0x0,8
tick,0x7ffdf681f424,14435318,0,0x0,8
tick,0x7ffdf681f424,14437197,0,0x0,8
tick,0x7ffdf681f424,14439270,0,0x0,8
tick,0x7ffdf681f424,14441284,0,0x0,8
tick,0x7ffdf681f424,14443328,0,0x0,8
tick,0x7ffdf681f424,14445346,0,0x0,8
tick,0x7ffdf681f424,14447384,0,0x0,8
tick,0x7ffdf681f424,14449295,0,0x0,8
tick,0x7ffdf681f424,14451201,0,0x0,8
tick,0x7ffdf681f424,14453228,0,0x0,8
tick,0x7ffdf681f424,14455247,0,0x0,8
tick,0x7ffdf681f424,14457284,0,0x0,8
tick,0x7ffdf681f424,14459301,0,0x0,8
tick,0x7ffdf681f424,14461295,0,0x0,8
tick,0x7ffdf681f424,14463184,0,0x0,8
tick,0x7ffdf681f424,14465191,0,0x0,8
tick,0x7ffdf681f424,14467281,0,0x0,8
tick,0x7ffdf681f424,14469290,0,0x0,8
tick,0x7ffdf681f424,14471274,0,0x0,8
tick,0x7ffdf681f424,14473269,0,0x0,8
tick,0x7ffdf681f424,14475269,0,0x0,8
tick,0x7ffdf681f424,14477259,0,0x0,8
tick,0x7ffdf681f424,14479249,0,0x0,8
tick,0x7ffdf681f424,14481254,0,0x0,8
tick,0x7ffdf681f424,14483277,0,0x0,8
tick,0x7ffdf681f424,14485237,0,0x0,8
tick,0x7ffdf681f424,14487233,0,0x0,8
tick,0x7ffdf681f424,14489237,0,0x0,8
tick,0x7ffdf681f424,14491249,0,0x0,8
tick,0x7ffdf681f424,14493216,0,0x0,8
tick,0x7ffdf681f424,14495210,0,0x0,8
tick,0x7ffdf681f424,14497205,0,0x0,8
tick,0x7ffdf681f424,14499200,0,0x0,8
tick,0x7ffdf681f424,14501201,0,0x0,8
tick,0x7ffdf681f424,14503189,0,0x0,8
tick,0x7ffdf681f424,14505182,0,0x0,8
tick,0x7ffdf681f424,14507066,0,0x0,8
tick,0x7ffdf681f424,14509167,0,0x0,8
tick,0x7ffdf681f424,14511243,0,0x0,8
tick,0x7ffdf681f424,14513207,0,0x0,8
tick,0x7ffdf681f424,14515171,0,0x0,8
tick,0x7ffdf681f424,14517151,0,0x0,8
tick,0x7ffdf681f424,14519148,0,0x0,8
tick,0x7ffdf681f424,14521136,0,0x0,8
tick,0x7ffdf681f424,14523123,0,0x0,8
tick,0x7ffdf681f424,14525118,0,0x0,8
tick,0x7ffdf681f424,14527127,0,0x0,8
tick,0x7ffdf681f424,14529107,0,0x0,8
tick,0x7ffdf681f424,14531101,0,0x0,8
tick,0x7ffdf681f424,14533105,0,0x0,8
tick,0x7ffdf681f424,14535110,0,0x0,8
tick,0x7ffdf681f424,14537089,0,0x0,8
tick,0x7ffdf681f424,14539154,0,0x0,8
tick,0x7ffdf681f424,14541076,0,0x0,8
tick,0x7ffdf681f424,14543075,0,0x0,8
tick,0x7ffdf681f424,14545069,0,0x0,8
tick,0x7ffdf681f424,14547059,0,0x0,8
tick,0x7ffdf681f424,14549059,0,0x0,8
tick,0x7ffdf681f424,14551051,0,0x0,8
tick,0x7ffdf681f424,14553047,0,0x0,8
tick,0x7ffdf681f424,14555056,0,0x0,8
tick,0x7ffdf681f424,14557052,0,0x0,8
tick,0x7ffdf681f424,14559032,0,0x0,8
tick,0x7ffdf681f424,14561034,0,0x0,8
tick,0x7ffdf681f424,14563037,0,0x0,8
tick,0x7ffdf681f424,14565121,0,0x0,8
tick,0x7ffdf681f424,14566936,0,0x0,8
tick,0x7ffdf681f424,14568840,0,0x0,8
tick,0x7ffdf681f424,14570961,0,0x0,8
tick,0x7ffdf681f424,14572933,0,0x0,8
tick,0x7ffdf681f424,14574885,0,0x0,8
tick,0x7ffdf681f424,14576994,0,0x0,8
tick,0x7ffdf681f424,14578988,0,0x0,8
tick,0x7ffdf681f424,14580982,0,0x0,8
tick,0x7ffdf681f424,14582846,0,0x0,8
tick,0x7ffdf681f424,14584835,0,0x0,8
tick,0x7ffdf681f424,14586949,0,0x0,8
tick,0x7ffdf681f424,14588962,0,0x0,8
tick,0x7ffdf681f424,14590870,0,0x0,8
tick,0x7ffdf681f424,14592943,0,0x0,8
tick,0x7ffdf681f424,14594930,0,0x0,8
tick,0x7ffdf681f424,14596931,0,0x0,8
tick,0x7ffdf681f424,14598816,0,0x0,8
tick,0x7ffdf681f424,14600925,0,0x0,8
tick,0x7ffdf681f424,14602915,0,0x0,8
tick,0x7ffdf681f424,14604911,0,0x0,8
tick,0x7ffdf681f424,14606870,0,0x0,8
tick,0x7ffdf681f424,14608956,0,0x0,8
tick,0x7ffdf681f424,14610888,0,0x0,8
tick,0x7ffdf681f424,14612888,0,0x0,8
tick,0x7ffdf681f424,14614892,0,0x0,8
tick,0x7ffdf681f424,14616858,0,0x0,8
tick,0x7ffdf681f424,14618872,0,0x0,8
tick,0x7ffdf681f424,14620768,0,0x0,8
tick,0x7ffdf681f424,14622876,0,0x0,8
tick,0x7ffdf681f424,14624858,0,0x0,8
tick,0x7ffdf681f424,14626846,0,0x0,8
tick,0x7ffdf681f424,14628848,0,0x0,8
tick,0x7ffdf681f424,14630841,0,0x0,8
tick,0x7ffdf681f424,14632835,0,0x0,8
tick,0x7ffdf681f424,14634830,0,0x0,8
tick,0x7ffdf681f424,14636833,0,0x0,8
tick,0x7ffdf681f424,14638819,0,0x0,8
tick,0x7ffdf681f424,14640832,0,0x0,8
tick,0x7ffdf681f424,14642810,0,0x0,8
tick,0x7ffdf681f424,14644817,0,0x0,8
tick,0x7ffdf681f424,14646813,0,0x0,8
tick,0x7ffdf681f424,14648692,0,0x0,8
tick,0x7ffdf681f424,14650788,0,0x0,8
tick,0x7ffdf681f424,14652838,0,0x0,8
tick,0x7ffdf681f424,14654786,0,0x0,8
tick,0x7ffdf681f424,14656801,0,0x0,8
tick,0x7ffdf681f424,14658767,0,0x0,8
tick,0x7ffdf681f424,14660761,0,0x0,8
tick,0x7ffdf681f424,14662755,0,0x0,8
tick,0x7ffdf681f424,14664748,0,0x0,8
tick,0x7ffdf681f424,14666759,0,0x0,8
tick,0x7ffdf681f424,14668739,0,0x0,8
tick,0x7ffdf681f424,14670734,0,0x0,8
tick,0x7ffdf681f424,14672728,0,0x0,8
tick,0x7ffdf681f424,14674724,0,0x0,8
tick,0x7ffdf681f424,14676718,0,0x0,8
tick,0x7ffdf681f424,14678712,0,0x0,8
tick,0x7ffdf681f424,14680717,0,0x0,8
tick,0x7ffdf681f424,14682696,0,0x0,8
tick,0x7ffdf681f424,14684692,0,0x0,8
tick,0x7ffdf681f424,14686703,0,0x0,8
tick,0x7ffdf681f424,14688701,0,0x0,8
tick,0x7ffdf681f424,14690675,0,0x0,8
tick,0x7ffdf681f424,14692675,0,0x0,8
tick,0x7ffdf681f424,14694611,0,0x0,8
tick,0x7ffdf681f424,14696610,0,0x0,8
tick,0x7ffdf681f424,14698550,0,0x0,8
tick,0x7ffdf681f424,14700616,0,0x0,8
tick,0x7ffdf681f424,14702614,0,0x0,8
tick,0x7ffdf681f424,14704638,0,0x0,8
tick,0x7ffdf681f424,14706633,0,0x0,8
tick,0x7ffdf681f424,14708531,0,0x0,8
tick,0x7ffdf681f424,14710497,0,0x0,8
tick,0x7ffdf681f424,14712577,0,0x0,8
tick,0x7ffdf681f424,14714612,0,0x0,8
tick,0x7ffdf681f424,14716510,0,0x0,8
tick,0x7ffdf681f424,14718576,0,0x0,8
tick,0x7ffdf681f424,14720595,0,0x0,8
tick,0x7ffdf681f424,14722592,0,0x0,8
tick,0x7ffdf681f424,14724476,0,0x0,8
tick,0x7ffdf681f424,14726578,0,0x0,8
tick,0x7ffdf681f424,14728608,0,0x0,8
tick,0x7ffdf681f424,14730580,0,0x0,8
tick,0x7ffdf681f424,14732524,0,0x0,8
tick,0x7ffdf681f424,14734563,0,0x0,8
tick,0x7ffdf681f424,14736566,0,0x0,8
tick,0x7ffdf681f424,14738553,0,0x0,8
tick,0x7ffdf681f424,14740464,0,0x0,8
tick,0x7ffdf681f424,14742541,0,0x0,8
tick,0x7ffdf681f424,14744533,0,0x0,8
tick,0x7ffdf681f424,14746525,0,0x0,8
tick,0x7ffdf681f424,14748531,0,0x0,8
tick,0x7ffdf681f424,14750518,0,0x0,8
tick,0x7ffdf681f424,14752513,0,0x0,8
tick,0x7ffdf681f424,14754517,0,0x0,8
tick,0x7ffdf681f424,14756513,0,0x0,8
tick,0x7ffdf681f424,14758493,0,0x0,8
tick,0x7ffdf681f424,14760497,0,0x0,8
tick,0x7ffdf681f424,14762483,0,0x0,8
tick,0x7ffdf681f424,14764477,0,0x0,8
tick,0x7ffdf681f424,14766489,0,0x0,8
tick,0x7ffdf681f424,14768476,0,0x0,8
tick,0x7ffdf681f424,14770467,0,0x0,8
tick,0x7ffdf681f424,14772476,0,0x0,8
tick,0x7ffdf681f424,14774461,0,0x0,8
tick,0x7ffdf681f424,14776491,0,0x0,8
tick,0x7ffdf681f424,14778445,0,0x0,8
tick,0x7ffdf681f424,14780441,0,0x0,8
tick,0x7ffdf681f424,14782435,0,0x0,8
tick,0x7ffdf681f424,14784427,0,0x0,8
tick,0x7ffdf681f424,14786443,0,0x0,8
tick,0x7ffdf681f424,14788445,0,0x0,8
tick,0x7ffdf681f424,14790310,0,0x0,8
tick,0x7ffdf681f424,14792406,0,0x0,8
tick,0x7ffdf681f424,14794404,0,0x0,8
tick,0x7ffdf681f424,14796408,0,0x0,8
tick,0x7ffdf681f424,14798417,0,0x0,8
tick,0x7ffdf681f424,14800390,0,0x0,8
tick,0x7ffdf681f424,14802382,0,0x0,8
tick,0x7ffdf681f424,14804377,0,0x0,8
tick,0x7ffdf681f424,14806370,0,0x0,8
tick,0x7ffdf681f424,14808363,0,0x0,8
tick,0x7ffdf681f424,14810372,0,0x0,8
tick,0x7ffdf681f424,14812341,0,0x0,8
tick,0x7ffdf681f424,14814272,0,0x0,8
tick,0x7ffdf681f424,14816233,0,0x0,8
tick,0x7ffdf681f424,14818341,0,0x0,8
tick,0x7ffdf681f424,14820423,0,0x0,8
tick,0x7ffdf681f424,14822330,0,0x0,8
tick,0x7ffdf681f424,14824330,0,0x0,8
tick,0x7ffdf681f424,14826386,0,0x0,8
tick,0x7ffdf681f424,14828298,0,0x0,8
tick,0x7ffdf681f424,14830145,0,0x0,8
tick,0x7ffdf681f424,14832138,0,0x0,8
tick,0x7ffdf681f424,14834226,0,0x0,8
tick,0x7ffdf681f424,14836257,0,0x0,8
tick,0x7ffdf681f424,14838291,0,0x0,8
tick,0x7ffdf681f424,14840250,0,0x0,8
tick,0x7ffdf681f424,14842255,0,0x0,8
tick,0x7ffdf681f424,14844136,0,0x0,8
tick,0x7ffdf681f424,14846230,0,0x0,8
tick,0x7ffdf681f424,14848255,0,0x0,8
tick,0x7ffdf681f424,14850146,0,0x0,8
tick,0x7ffdf681f424,14852251,0,0x0,8
tick,0x7ffdf681f424,14854246,0,0x0,8
tick,0x7ffdf681f424,14856241,0,0x0,8
tick,0x7ffdf681f424,14858207,0,0x0,8
tick,0x7ffdf681f424,14860236,0,0x0,8
tick,0x7ffdf681f424,14862232,0,0x0,8
tick,0x7ffdf681f424,14864189,0,0x0,8
tick,0x7ffdf681f424,14866137,0,0x0,8
tick,0x7ffdf681f424,14868208,0,0x0,8
tick,0x7ffdf681f424,14870204,0,0x0,8
tick,0x7ffdf681f424,14872204,0,0x0,8
tick,0x7ffdf681f424,14874208,0,0x0,8
tick,0x7ffdf681f424,14876191,0,0x0,8
tick,0x7ffdf681f424,14878187,0,0x0,8
tick,0x7ffdf681f424,14880176,0,0x0,8
tick,0x7ffdf681f424,14882063,0,0x0,8
tick,0x7ffdf681f424,14884246,0,0x0,8
tick,0x7ffdf681f424,14886194,0,0x0,8
tick,0x7ffdf681f424,14888159,0,0x0,8
tick,0x7ffdf681f424,14890168,0,0x0,8
tick,0x7ffdf681f424,14892182,0,0x0,8
tick,0x7ffdf681f424,14894145,0,0x0,8
tick,0x7ffdf681f424,14896139,0,0x0,8
tick,0x7ffdf681f424,14898135,0,0x0,8
tick,0x7ffdf681f424,14900129,0,0x0,8
tick,0x7ffdf681f424,14902131,0,0x0,8
tick,0x7ffdf681f424,14904006,0,0x0,8
tick,0x7ffdf681f424,14906112,0,0x0,8
tick,0x7ffdf681f424,14908120,0,0x0,8
tick,0x7ffdf681f424,14910101,0,0x0,8
tick,0x7ffdf681f424,14912091,0,0x0,8
tick,0x7ffdf681f424,14914107,0,0x0,8
tick,0x7ffdf681f424,14916083,0,0x0,8
tick,0x7ffdf681f424,14918078,0,0x0,8
tick,0x7ffdf681f424,14920074,0,0x0,8
tick,0x7ffdf681f424,14922056,0,0x0,8
tick,0x7ffdf681f424,14923958,0,0x0,8
tick,0x7ffdf681f424,14926057,0,0x0,8
tick,0x7ffdf681f424,14928117,0,0x0,8
tick,0x7ffdf681f424,14930069,0,0x0,8
tick,0x7ffdf681f424,14931941,0,0x0,8
tick,0x7ffdf681f424,14934027,0,0x0,8
tick,0x7ffdf681f424,14936021,0,0x0,8
tick,0x7ffdf681f424,14938013,0,0x0,8
tick,0x7ffdf681f424,14940015,0,0x0,8
tick,0x7ffdf681f424,14942006,0,0x0,8
tick,0x7ffdf681f424,14943997,0,0x0,8
tick,0x7ffdf681f424,14945998,0,0x0,8
tick,0x7ffdf681f424,14947992,0,0x0,8
tick,0x7ffdf681f424,14949986,0,0x0,8
tick,0x7ffdf681f424,14952016,0,0x0,8
tick,0x7ffdf681f424,14953977,0,0x0,8
tick,0x7ffdf681f424,14955976,0,0x0,8
tick,0x7ffdf681f424,14958031,0,0x0,8
tick,0x7ffdf681f424,14959913,0,0x0,8
tick,0x7ffdf681f424,14961794,0,0x0,8
tick,0x7ffdf681f424,14963838,0,0x0,8
tick,0x7ffdf681f424,14965872,0,0x0,8
tick,0x7ffdf681f424,14967951,0,0x0,8
tick,0x7ffdf681f424,14969938,0,0x0,8
tick,0x7ffdf681f424,14971984,0,0x0,8
tick,0x7ffdf681f424,14973938,0,0x0,8
tick,0x7ffdf681f424,14975815,0,0x0,8
tick,0x7ffdf681f424,14977842,0,0x0,8
tick,0x7ffdf681f424,14979873,0,0x0,8
tick,0x7ffdf681f424,14981798,0,0x0,8
tick,0x7ffdf681f424,14983797,0,0x0,8
tick,0x7ffdf681f424,14985891,0,0x0,8
tick,0x7ffdf681f424,14987898,0,0x0,8
tick,0x7ffdf681f424,14989907,0,0x0,8
tick,0x7ffdf681f424,14991875,0,0x0,8
tick,0x7ffdf681f424,14993875,0,0x0,8
tick,0x7ffdf681f424,14995878,0,0x0,8
tick,0x7ffdf681f424,14997860,0,0x0,8
tick,0x7ffdf681f424,14999854,0,0x0,8
tick,0x7ffdf681f424,15001855,0,0x0,8
tick,0x7ffdf681f424,15003855,0,0x0,8
tick,0x7ffdf681f424,15005835,0,0x0,8
tick,0x7ffdf681f424,15007832,0,0x0,8
tick,0x7ffdf681f424,15009826,0,0x0,8
tick,0x7ffdf681f424,15011823,0,0x0,8
tick,0x7ffdf681f424,15013712,0,0x0,8
tick,0x7ffdf681f424,15015819,0,0x0,8
tick,0x7ffdf681f424,15017819,0,0x0,8
tick,0x7ffdf681f424,15019800,0,0x0,8
tick,0x7ffdf681f424,15021800,0,0x0,8
tick,0x7ffdf681f424,15023688,0,0x0,8
tick,0x7ffdf681f424,15025779,0,0x0,8
tick,0x7ffdf681f424,15027774,0,0x0,8
tick,0x7ffdf681f424,15029771,0,0x0,8
tick,0x7ffdf681f424,15031771,0,0x0,8
tick,0x7ffdf681f424,15033757,0,0x0,8
tick,0x7ffdf681f424,15035771,0,0x0,8
tick,0x7ffdf681f424,15037812,0,0x0,8
tick,0x7ffdf681f424,15039789,0,0x0,8
tick,0x7ffdf681f424,15041737,0,0x0,8
tick,0x7ffdf681f424,15043737,0,0x0,8
tick,0x7ffdf681f424,15045731,0,0x0,8
tick,0x7ffdf681f424,15047729,0,0x0,8
tick,0x7ffdf681f424,15049715,0,0x0,8
tick,0x7ffdf681f424,15051712,0,0x0,8
tick,0x7ffdf681f424,15053708,0,0x0,8
tick,0x7ffdf681f424,15055724,0,0x0,8
tick,0x7ffdf681f424,15057706,0,0x0,8
tick,0x7ffdf681f424,15059751,0,0x0,8
tick,0x7ffdf681f424,15061706,0,0x0,8
tick,0x7ffdf681f424,15063680,0,0x0,8
tick,0x7ffdf681f424,15065571,0,0x0,8
tick,0x7ffdf681f424,15067667,0,0x0,8
tick,0x7ffdf681f424,15069667,0,0x0,8
tick,0x7ffdf681f424,15071656,0,0x0,8
tick,0x7ffdf681f424,15073656,0,0x0,8
tick,0x7ffdf681f424,15075651,0,0x0,8
tick,0x7ffdf681f424,15077592,0,0x0,8
tick,0x7ffdf681f424,15079598,0,0x0,8
tick,0x7ffdf681f424,15081517,0,0x0,8
tick,0x7ffdf681f424,15083574,0,0x0,8
tick,0x7ffdf681f424,15085570,0,0x0,8
tick,0x7ffdf681f424,15087521,0,0x0,8
tick,0x7ffdf681f424,15089567,0,0x0,8
tick,0x7ffdf681f424,15091582,0,0x0,8
tick,0x7ffdf681f424,15093506,0,0x0,8
tick,0x7ffdf681f424,15095561,0,0x0,8
tick,0x7ffdf681f424,15097552,0,0x0,8
tick,0x7ffdf681f424,15099641,0,0x0,8
tick,0x7ffdf681f424,15101501,0,0x0,8
tick,0x7ffdf681f424,15103497,0,0x0,8
tick,0x7ffdf681f424,15105483,0,0x0,8
tick,0x7ffdf681f424,15107470,0,0x0,8
tick,0x7ffdf681f424,15109477,0,0x0,8
tick,0x7ffdf681f424,15111553,0,0x0,8
tick,0x7ffdf681f424,15113551,0,0x0,8
tick,0x7ffdf681f424,15115487,0,0x0,8
tick,0x7ffdf681f424,15117577,0,0x0,8
tick,0x7ffdf681f424,15119533,0,0x0,8
tick,0x7ffdf681f424,15121421,0,0x0,8
tick,0x7ffdf681f424,15123542,0,0x0,8
tick,0x7ffdf681f424,15125518,0,0x0,8
tick,0x7ffdf681f424,15127523,0,0x0,8
tick,0x7ffdf681f424,15129502,0,0x0,8
tick,0x7ffdf681f424,15131503,0,0x0,8
tick,0x7ffdf681f424,15133494,0,0x0,8
tick,0x7ffdf681f424,15135488,0,0x0,8
tick,0x7ffdf681f424,15137481,0,0x0,8
tick,0x7ffdf681f424,15139481,0,0x0,8
tick,0x7ffdf681f424,15141454,0,0x0,8
tick,0x7ffdf681f424,15143473,0,0x0,8
tick,0x7ffdf681f424,15145464,0,0x0,8
tick,0x7ffdf681f424,15147461,0,0x0,8
tick,0x7ffdf681f424,15149456,0,0x0,8
tick,0x7ffdf681f424,15151452,0,0x0,8
tick,0x7ffdf681f424,15153437,0,0x0,8
tick,0x7ffdf681f424,15155438,0,0x0,8
tick,0x7ffdf681f424,15157430,0,0x0,8
tick,0x7ffdf681f424,15159428,0,0x0,8
tick,0x7ffdf681f424,15161416,0,0x0,8
tick,0x7ffdf681f424,15163413,0,0x0,8
tick,0x7ffdf681f424,15165311,0,0x0,8
tick,0x7ffdf681f424,15167406,0,0x0,8
tick,0x7ffdf681f424,15169400,0,0x0,8
tick,0x7ffdf681f424,15171408,0,0x0,8
tick,0x7ffdf681f424,15173405,0,0x0,8
tick,0x7ffdf681f424,15175393,0,0x0,8
tick,0x7ffdf681f424,15177379,0,0x0,8
tick,0x7ffdf681f424,15179380,0,0x0,8
tick,0x7ffdf681f424,15181393,0,0x0,8
tick,0x7ffdf681f424,15183363,0,0x0,8
tick,0x7ffdf681f424,15185366,0,0x0,8
tick,0x7ffdf681f424,15187347,0,0x0,8
tick,0x7ffdf681f424,15189353,0,0x0,8
tick,0x7ffdf681f424,15191341,0,0x0,8
tick,0x7ffdf681f424,15193350,0,0x0,8
tick,0x7ffdf681f424,15195331,0,0x0,8
tick,0x7ffdf681f424,15197326,0,0x0,8
tick,0x7ffdf681f424,15199321,0,0x0,8
tick,0x7ffdf681f424,15201316,0,0x0,8
tick,0x7ffdf681f424,15203304,0,0x0,8
tick,0x7ffdf681f424,15205298,0,0x0,8
tick,0x7ffdf681f424,15207302,0,0x0,8
tick,0x7ffdf681f424,15209294,0,0x0,8
tick,0x7ffdf681f424,15211288,0,0x0,8
tick,0x7ffdf681f424,15213352,0,0x0,8
tick,0x7ffdf681f424,15215305,0,0x0,8
tick,0x7ffdf681f424,15217272,0,0x0,8
tick,0x7ffdf681f424,15219205,0,0x0,8
tick,0x7ffdf681f424,15221210,0,0x0,8
tick,0x7ffdf681f424,15223118,0,0x0,8
tick,0x7ffdf681f424,15225174,0,0x0,8
tick,0x7ffdf681f424,15227150,0,0x0,8
tick,0x7ffdf681f424,15229280,0,0x0,8
tick,0x7ffdf681f424,15231259,0,0x0,8
tick,0x7ffdf681f424,15233214,0,0x0,8
tick,0x7ffdf681f424,15235068,0,0x0,8
tick,0x7ffdf681f424,15237243,0,0x0,8
tick,0x7ffdf681f424,15239227,0,0x0,8
tick,0x7ffdf681f424,15241125,0,0x0,8
tick,0x7ffdf681f424,15243210,0,0x0,8
tick,0x7ffdf681f424,15245206,0,0x0,8
tick,0x7ffdf681f424,15247196,0,0x0,8
tick,0x7ffdf681f424,15249088,0,0x0,8
tick,0x7ffdf681f424,15251188,0,0x0,8
tick,0x7ffdf681f424,15253185,0,0x0,8
tick,0x7ffdf681f424,15255179,0,0x0,8
tick,0x7ffdf681f424,15257071,0,0x0,8
tick,0x7ffdf681f424,15259180,0,0x0,8
tick,0x7ffdf681f424,15261204,0,0x0,8
tick,0x7ffdf681f424,15263157,0,0x0,8
tick,0x7ffdf681f424,15265152,0,0x0,8
tick,0x7ffdf681f424,15267146,0,0x0,8
tick,0x7ffdf681f424,15269135,0,0x0,8
tick,0x7ffdf681f424,15271145,0,0x0,8
tick,0x7ffdf681f424,15273151,0,0x0,8
tick,0x7ffdf681f424,15275133,0,0x0,8
tick,0x7ffdf681f424,15277121,0,0x0,8
tick,0x7ffdf681f424,15279115,0,0x0,8
tick,0x7ffdf681f424,15281134,0,0x0,8
tick,0x7ffdf681f424,15283103,0,0x0,8
tick,0x7ffdf681f424,15285107,0,0x0,8
tick,0x7ffdf681f424,15287084,0,0x0,8
tick,0x7ffdf681f424,15289087,0,0x0,8
tick,0x7ffdf681f424,15291084,0,0x0,8
tick,0x7ffdf681f424,15293074,0,0x0,8
tick,0x7ffdf681f424,15295071,0,0x0,8
tick,0x7ffdf681f424,15297066,0,0x0,8
tick,0x7ffdf681f424,15298956,0,0x0,8
tick,0x7ffdf681f424,15301068,0,0x0,8
tick,0x7ffdf681f424,15303072,0,0x0,8
tick,0x7ffdf681f424,15305040,0,0x0,8
tick,0x7ffdf681f424,15306973,0,0x0,8
tick,0x7ffdf681f424,15309035,0,0x0,8
tick,0x7ffdf681f424,15311036,0,0x0,8
tick,0x7ffdf681f424,15313022,0,0x0,8
tick,0x7ffdf681f424,15314913,0,0x0,8
tick,0x7ffdf681f424,15317014,0,0x0,8
tick,0x7ffdf681f424,15319009,0,0x0,8
tick,0x7ffdf681f424,15320996,0,0x0,8
tick,0x7ffdf681f424,15322993,0,0x0,8
tick,0x7ffdf681f424,15324999,0,0x0,8
tick,0x7ffdf681f424,15326979,0,0x0,8
tick,0x7ffdf681f424,15328973,0,0x0,8
tick,0x7ffdf681f424,15330970,0,0x0,8
tick,0x7ffdf681f424,15332941,0,0x0,8
tick,0x7ffdf681f424,15334941,0,0x0,8
tick,0x7ffdf681f424,15336962,0,0x0,8
tick,0x7ffdf681f424,15338947,0,0x0,8
tick,0x7ffdf681f424,15340942,0,0x0,8
tick,0x7ffdf681f424,15342940,0,0x0,8
tick,0x7ffdf681f424,15344934,0,0x0,8
tick,0x7ffdf681f424,15346946,0,0x0,8
tick,0x7ffdf681f424,15348818,0,0x0,8
tick,0x7ffdf681f424,15350986,0,0x0,8
tick,0x7ffdf681f424,15352853,0,0x0,8
tick,0x7ffdf681f424,15354766,0,0x0,8
tick,0x7ffdf681f424,15356863,0,0x0,8
tick,0x7ffdf681f424,15358756,0,0x0,8
tick,0x7ffdf681f424,15360856,0,0x0,8
tick,0x7ffdf681f424,15362886,0,0x0,8
tick,0x7ffdf681f424,15364873,0,0x0,8
tick,0x7ffdf681f424,15366794,0,0x0,8
tick,0x7ffdf681f424,15368828,0,0x0,8
tick,0x7ffdf681f424,15370782,0,0x0,8
tick,0x7ffdf681f424,15372819,0,0x0,8
tick,0x7ffdf681f424,15374799,0,0x0,8
tick,0x7ffdf681f424,15376858,0,0x0,8
tick,0x7ffdf681f424,15378835,0,0x0,8
tick,0x7ffdf681f424,15380843,0,0x0,8
tick,0x7ffdf681f424,15382837,0,0x0,8
tick,0x7ffdf681f424,15384839,0,0x0,8
tick,0x7ffdf681f424,15386709,0,0x0,8
tick,0x7ffdf681f424,15388843,0,0x0,8
tick,0x7ffdf681f424,15390720,0,0x0,8
tick,0x7ffdf681f424,15392799,0,0x0,8
tick,0x7ffdf681f424,15394799,0,0x0,8
tick,0x7ffdf681f424,15396792,0,0x0,8
tick,0x7ffdf681f424,15398699,0,0x0,8
tick,0x7ffdf681f424,15400777,0,0x0,8
tick,0x7ffdf681f424,15402771,0,0x0,8
tick,0x7ffdf681f424,15404765,0,0x0,8
tick,0x7ffdf681f424,15406764,0,0x0,8
tick,0x7ffdf681f424,15408760,0,0x0,8
tick,0x7ffdf681f424,15410754,0,0x0,8
tick,0x7ffdf681f424,15412783,0,0x0,8
tick,0x7ffdf681f424,15414755,0,0x0,8
tick,0x7ffdf681f424,15416744,0,0x0,8
tick,0x7ffdf681f424,15418734,0,0x0,8
tick,0x7ffdf681f424,15420728,0,0x0,8
tick,0x7ffdf681f424,15422722,0,0x0,8
tick,0x7ffdf681f424,15424713,0,0x0,8
tick,0x7ffdf681f424,15426706,0,0x0,8
tick,0x7ffdf681f424,15428708,0,0x0,8
tick,0x7ffdf681f424,15430699,0,0x0,8
tick,0x7ffdf681f424,15432706,0,0x0,8
tick,0x7ffdf681f424,15434717,0,0x0,8
tick,0x7ffdf681f424,15436680,0,0x0,8
tick,0x7ffdf681f424,15438680,0,0x0,8
tick,0x7ffdf681f424,15440567,0,0x0,8
tick,0x7ffdf681f424,15442670,0,0x0,8
tick,0x7ffdf681f424,15444657,0,0x0,8
tick,0x7ffdf681f424,15446657,0,0x0,8
tick,0x7ffdf681f424,15448660,0,0x0,8
tick,0x7ffdf681f424,15450649,0,0x0,8
tick,0x7ffdf681f424,15452643,0,0x0,8
tick,0x7ffdf681f424,15454640,0,0x0,8
tick,0x7ffdf681f424,15456631,0,0x0,8
tick,0x7ffdf681f424,15458628,0,0x0,8
tick,0x7ffdf681f424,15460626,0,0x0,8
tick,0x7ffdf681f424,15462621,0,0x0,8
tick,0x7ffdf681f424,15464645,0,0x0,8
tick,0x7ffdf681f424,15466607,0,0x0,8
tick,0x7ffdf681f424,15468601,0,0x0,8
tick,0x7ffdf681f424,15470598,0,0x0,8
tick,0x7ffdf681f424,15472590,0,0x0,8
tick,0x7ffdf681f424,15474579,0,0x0,8
tick,0x7ffdf681f424,15476582,0,0x0,8
tick,0x7ffdf681f424,15478616,0,0x0,8
tick,0x7ffdf681f424,15480644,0,0x0,8
tick,0x7ffdf681f424,15482556,0,0x0,8
tick,0x7ffdf681f424,15484392,0,0x0,8
tick,0x7ffdf681f424,15486516,0,0x0,8
tick,0x7ffdf681f424,15488518,0,0x0,8
tick,0x7ffdf681f424,15490449,0,0x0,8
tick,0x7ffdf681f424,15492545,0,0x0,8
tick,0x7ffdf681f424,15494538,0,0x0,8
tick,0x7ffdf681f424,15496538,0,0x0,8
tick,0x7ffdf681f424,15498518,0,0x0,8
tick,0x7ffdf681f424,15500433,0,0x0,8
tick,0x7ffdf681f424,15502375,0,0x0,8
tick,0x7ffdf681f424,15504517,0,0x0,8
tick,0x7ffdf681f424,15506482,0,0x0,8
tick,0x7ffdf681f424,15508394,0,0x0,8
tick,0x7ffdf681f424,15510486,0,0x0,8
tick,0x7ffdf681f424,15512477,0,0x0,8
tick,0x7ffdf681f424,15514478,0,0x0,8
tick,0x7ffdf681f424,15516370,0,0x0,8
tick,0x7ffdf681f424,15518467,0,0x0,8
tick,0x7ffdf681f424,15520460,0,0x0,8
tick,0x7ffdf681f424,15522465,0,0x0,8
tick,0x7ffdf681f424,15524446,0,0x0,8
tick,0x7ffdf681f424,15526444,0,0x0,8
tick,0x7ffdf681f424,15528448,0,0x0,8
tick,0x7ffdf681f424,15530438,0,0x0,8
tick,0x7ffdf681f424,15532420,0,0x0,8
tick,0x7ffdf681f424,15534436,0,0x0,8
tick,0x7ffdf681f424,15536413,0,0x0,8
tick,0x7ffdf681f424,15538414,0,0x0,8
tick,0x7ffdf681f424,15540354,0,0x0,8
tick,0x7ffdf681f424,15542405,0,0x0,8
tick,0x7ffdf681f424,15544399,0,0x0,8
tick,0x7ffdf681f424,15546425,0,0x0,8
tick,0x7ffdf681f424,15548387,0,0x0,8
tick,0x7ffdf681f424,15550383,0,0x0,8
tick,0x7ffdf681f424,15552376,0,0x0,8
tick,0x7ffdf681f424,15554371,0,0x0,8
tick,0x7ffdf681f424,15556365,0,0x0,8
tick,0x7ffdf681f424,15558364,0,0x0,8
tick,0x7ffdf681f424,15560368,0,0x0,8
tick,0x7ffdf681f424,15562354,0,0x0,8
tick,0x7ffdf681f424,15564352,0,0x0,8
tick,0x7ffdf681f424,15566336,0,0x0,8
tick,0x7ffdf681f424,15568334,0,0x0,8
tick,0x7ffdf681f424,15570331,0,0x0,8
tick,0x7ffdf681f424,15572322,0,0x0,8
tick,0x7ffdf681f424,15574315,0,0x0,8
tick,0x7ffdf681f424,15576307,0,0x0,8
tick,0x7ffdf681f424,15578307,0,0x0,8
tick,0x7ffdf681f424,15580301,0,0x0,8
tick,0x7ffdf681f424,15582200,0,0x0,8
tick,0x7ffdf681f424,15584316,0,0x0,8
tick,0x7ffdf681f424,15586301,0,0x0,8
tick,0x7ffdf681f424,15588277,0,0x0,8
tick,0x7ffdf681f424,15590284,0,0x0,8
tick,0x7ffdf681f424,15592278,0,0x0,8
tick,0x7ffdf681f424,15594269,0,0x0,8
tick,0x7ffdf681f424,15596270,0,0x0,8
tick,0x7ffdf681f424,15598250,0,0x0,8
tick,0x7ffdf681f424,15600243,0,0x0,8
tick,0x7ffdf681f424,15602238,0,0x0,8
tick,0x7ffdf681f424,15604237,0,0x0,8
tick,0x7ffdf681f424,15606229,0,0x0,8
tick,0x7ffdf681f424,15608230,0,0x0,8
tick,0x7ffdf681f424,15610162,0,0x0,8
tick,0x7ffdf681f424,15612173,0,0x0,8
tick,0x7ffdf681f424,15614187,0,0x0,8
tick,0x7ffdf681f424,15616048,0,0x0,8
tick,0x7ffdf681f424,15618165,0,0x0,8
tick,0x7ffdf681f424,15620130,0,0x0,8
tick,0x7ffdf681f424,15622197,0,0x0,8
tick,0x7ffdf681f424,15624141,0,0x0,8
tick,0x7ffdf681f424,15626066,0,0x0,8
tick,0x7ffdf681f424,15628080,0,0x0,8
tick,0x7ffdf681f424,15630076,0,0x0,8
tick,0x7ffdf681f424,15632039,0,0x0,8
tick,0x7ffdf681f424,15634053,0,0x0,8
tick,0x7ffdf681f424,15636150,0,0x0,8
tick,0x7ffdf681f424,15638149,0,0x0,8
tick,0x7ffdf681f424,15640055,0,0x0,8
tick,0x7ffdf681f424,15642131,0,0x0,8
tick,0x7ffdf681f424,15644131,0,0x0,8
tick,0x7ffdf681f424,15646126,0,0x0,8
tick,0x7ffdf681f424,15648126,0,0x0,8
tick,0x7ffdf681f424,15650109,0,0x0,8
tick,0x7ffdf681f424,15652185,0,0x0,8
tick,0x7ffdf681f424,15654116,0,0x0,8
tick,0x7ffdf681f424,15656099,0,0x0,8
tick,0x7ffdf681f424,15658106,0,0x0,8
tick,0x7ffdf681f424,15660083,0,0x0,8
tick,0x7ffdf681f424,15662094,0,0x0,8
tick,0x7ffdf681f424,15664104,0,0x0,8
tick,0x7ffdf681f424,15666068,0,0x0,8
tick,0x7ffdf681f424,15668067,0,0x0,8
tick,0x7ffdf681f424,15670059,0,0x0,8
tick,0x7ffdf681f424,15672057,0,0x0,8
tick,0x7ffdf681f424,15673953,0,0x0,8
tick,0x7ffdf681f424,15676059,0,0x0,8
tick,0x7ffdf681f424,15678041,0,0x0,8
tick,0x7ffdf681f424,15680035,0,0x0,8
tick,0x7ffdf681f424,15682035,0,0x0,8
tick,0x7ffdf681f424,15684030,0,0x0,8
tick,0x7ffdf681f424,15686039,0,0x0,8
tick,0x7ffdf681f424,15688009,0,0x0,8
tick,0x7ffdf681f424,15689959,0,0x0,8
tick,0x7ffdf681f424,15691961,0,0x0,8
tick,0x7ffdf681f424,15693945,0,0x0,8
tick,0x7ffdf681f424,15695874,0,0x0,8
tick,0x7ffdf681f424,15697977,0,0x0,8
tick,0x7ffdf681f424,15699960,0,0x0,8
tick,0x7ffdf681f424,15702061,0,0x0,8
tick,0x7ffdf681f424,15704040,0,0x0,8
tick,0x7ffdf681f424,15706061,0,0x0,8
tick,0x7ffdf681f424,15708036,0,0x0,8
tick,0x7ffdf681f424,15710020,0,0x0,8
tick,0x7ffdf681f424,15712014,0,0x0,8
tick,0x7ffdf681f424,15714009,0,0x0,8
tick,0x7ffdf681f424,15716013,0,0x0,8
tick,0x7ffdf681f424,15718030,0,0x0,8
tick,0x7ffdf681f424,15719923,0,0x0,8
tick,0x7ffdf681f424,15721932,0,0x0,8
tick,0x7ffdf681f424,15723916,0,0x0,8
tick,0x7ffdf681f424,15725914,0,0x0,8
tick,0x7ffdf681f424,15727914,0,0x0,8
tick,0x7ffdf681f424,15729934,0,0x0,8
tick,0x7ffdf681f424,15731897,0,0x0,8
tick,0x7ffdf681f424,15733888,0,0x0,8
tick,0x7ffdf681f424,15735784,0,0x0,8
tick,0x7ffdf681f424,15737880,0,0x0,8
tick,0x7ffdf681f424,15739874,0,0x0,8
tick,0x7ffdf681f424,15741874,0,0x0,8
tick,0x7ffdf681f424,15743864,0,0x0,8
tick,0x7ffdf681f424,15745828,0,0x0,8
tick,0x7ffdf681f424,15747724,0,0x0,8
tick,0x7ffdf681f424,15749715,0,0x0,8
tick,0x7ffdf681f424,15751818,0,0x0,8
tick,0x7ffdf681f424,15753843,0,0x0,8
tick,0x7ffdf681f424,15755832,0,0x0,8
tick,0x7ffdf681f424,15757786,0,0x0,8
tick,0x7ffdf681f424,15759690,0,0x0,8
tick,0x7ffdf681f424,15761716,0,0x0,8
tick,0x7ffdf681f424,15763724,0,0x0,8
tick,0x7ffdf681f424,15765764,0,0x0,8
tick,0x7ffdf681f424,15767701,0,0x0,8
tick,0x7ffdf681f424,15769799,0,0x0,8
tick,0x7ffdf681f424,15771798,0,0x0,8
tick,0x7ffdf681f424,15773734,0,0x0,8
tick,0x7ffdf681f424,15775779,0,0x0,8
tick,0x7ffdf681f424,15777768,0,0x0,8
tick,0x7ffdf681f424,15779769,0,0x0,8
tick,0x7ffdf681f424,15781761,0,0x0,8
tick,0x7ffdf681f424,15783748,0,0x0,8
tick,0x7ffdf681f424,15785786,0,0x0,8
tick,0x7ffdf681f424,15787758,0,0x0,8
tick,0x7ffdf681f424,15789742,0,0x0,8
tick,0x7ffdf681f424,15791758,0,0x0,8
tick,0x7ffdf681f424,15793746,0,0x0,8
tick,0x7ffdf681f424,15795754,0,0x0,8
tick,0x7ffdf681f424,15797724,0,0x0,8
tick,0x7ffdf681f424,15799715,0,0x0,8
tick,0x7ffdf681f424,15801710,0,0x0,8
tick,0x7ffdf681f424,15803704,0,0x0,8
tick,0x7ffdf681f424,15805699,0,0x0,8
tick,0x7ffdf681f424,15807693,0,0x0,8
tick,0x7ffdf681f424,15809695,0,0x0,8
tick,0x7ffdf681f424,15811677,0,0x0,8
tick,0x7ffdf681f424,15813684,0,0x0,8
tick,0x7ffdf681f424,15815556,0,0x0,8
tick,0x7ffdf681f424,15817684,0,0x0,8
tick,0x7ffdf681f424,15819659,0,0x0,8
tick,0x7ffdf681f424,15821660,0,0x0,8
tick,0x7ffdf681f424,15823661,0,0x0,8
tick,0x7ffdf681f424,15825646,0,0x0,8
tick,0x7ffdf681f424,15827640,0,0x0,8
tick,0x7ffdf681f424,15829633,0,0x0,8
tick,0x7ffdf681f424,15831650,0,0x0,8
tick,0x7ffdf681f424,15833514,0,0x0,8
tick,0x7ffdf681f424,15835626,0,0x0,8
tick,0x7ffdf681f424,15837612,0,0x0,8
tick,0x7ffdf681f424,15839625,0,0x0,8
tick,0x7ffdf681f424,15841598,0,0x0,8
tick,0x7ffdf681f424,15843599,0,0x0,8
tick,0x7ffdf681f424,15845600,0,0x0,8
tick,0x7ffdf681f424,15847583,0,0x0,8
tick,0x7ffdf681f424,15849580,0,0x0,8
tick,0x7ffdf681f424,15851576,0,0x0,8
tick,0x7ffdf681f424,15853574,0,0x0,8
tick,0x7ffdf681f424,15855566,0,0x0,8
tick,0x7ffdf681f424,15857561,0,0x0,8
tick,0x7ffdf681f424,15859555,0,0x0,8
tick,0x7ffdf681f424,15861563,0,0x0,8
tick,0x7ffdf681f424,15863559,0,0x0,8
tick,0x7ffdf681f424,15865461,0,0x0,8
tick,0x7ffdf681f424,15867534,0,0x0,8
tick,0x7ffdf681f424,15869433,0,0x0,8
tick,0x7ffdf681f424,15871590,0,0x0,8
tick,0x7ffdf681f424,15873428,0,0x0,8
tick,0x7ffdf681f424,15875348,0,0x0,8
tick,0x7ffdf681f424,15877402,0,0x0,8
tick,0x7ffdf681f424,15879387,0,0x0,8
tick,0x7ffdf681f424,15881533,0,0x0,8
tick,0x7ffdf681f424,15883425,0,0x0,8
tick,0x7ffdf681f424,15885465,0,0x0,8
tick,0x7ffdf681f424,15887448,0,0x0,8
tick,0x7ffdf681f424,15889373,0,0x0,8
tick,0x7ffdf681f424,15891426,0,0x0,8
tick,0x7ffdf681f424,15893467,0,0x0,8
tick,0x7ffdf681f424,15895459,0,0x0,8
tick,0x7ffdf681f424,15897455,0,0x0,8
tick,0x7ffdf681f424,15899386,0,0x0,8
tick,0x7ffdf681f424,15901443,0,0x0,8
tick,0x7ffdf681f424,15903344,0,0x0,8
tick,0x7ffdf681f424,15905443,0,0x0,8
tick,0x7ffdf681f424,15907329,0,0x0,8
tick,0x7ffdf681f424,15909419,0,0x0,8
tick,0x7ffdf681f424,15911417,0,0x0,8
tick,0x7ffdf681f424,15913439,0,0x0,8
tick,0x7ffdf681f424,15915294,0,0x0,8
tick,0x7ffdf681f424,15917400,0,0x0,8
tick,0x7ffdf681f424,15919395,0,0x0,8
tick,0x7ffdf681f424,15921387,0,0x0,8
tick,0x7ffdf681f424,15923384,0,0x0,8
tick,0x7ffdf681f424,15925388,0,0x0,8
tick,0x7ffdf681f424,15927387,0,0x0,8
tick,0x7ffdf681f424,15929368,0,0x0,8
tick,0x7ffdf681f424,15931363,0,0x0,8
tick,0x7ffdf681f424,15933358,0,0x0,8
tick,0x7ffdf681f424,15935352,0,0x0,8
tick,0x7ffdf681f424,15937347,0,0x0,8
tick,0x7ffdf681f424,15939336,0,0x0,8
tick,0x7ffdf681f424,15941343,0,0x0,8
tick,0x7ffdf681f424,15943331,0,0x0,8
tick,0x7ffdf681f424,15945325,0,0x0,8
tick,0x7ffdf681f424,15947221,0,0x0,8
tick,0x7ffdf681f424,15949230,0,0x0,8
tick,0x7ffdf681f424,15951310,0,0x0,8
tick,0x7ffdf681f424,15953305,0,0x0,8
tick,0x7ffdf681f424,15955299,0,0x0,8
tick,0x7ffdf681f424,15957191,0,0x0,8
tick,0x7ffdf681f424,15959283,0,0x0,8
tick,0x7ffdf681f424,15961284,0,0x0,8
tick,0x7ffdf681f424,15963288,0,0x0,8
tick,0x7ffdf681f424,15965297,0,0x0,8
tick,0x7ffdf681f424,15967272,0,0x0,8
tick,0x7ffdf681f424,15969265,0,0x0,8
tick,0x7ffdf681f424,15971279,0,0x0,8
tick,0x7ffdf681f424,15973254,0,0x0,8
tick,0x7ffdf681f424,15975245,0,0x0,8
tick,0x7ffdf681f424,15977241,0,0x0,8
tick,0x7ffdf681f424,15979235,0,0x0,8
tick,0x7ffdf681f424,15981233,0,0x0,8
tick,0x7ffdf681f424,15983219,0,0x0,8
tick,0x7ffdf681f424,15985229,0,0x0,8
tick,0x7ffdf681f424,15987249,0,0x0,8
tick,0x7ffdf681f424,15989205,0,0x0,8
tick,0x7ffdf681f424,15991280,0,0x0,8
tick,0x7ffdf681f424,15993233,0,0x0,8
tick,0x7ffdf681f424,15995225,0,0x0,8
tick,0x7ffdf681f424,15997208,0,0x0,8
tick,0x7ffdf681f424,15999181,0,0x0,8
tick,0x7ffdf681f424,16001063,0,0x0,8
tick,0x7ffdf681f424,16003136,0,0x0,8
tick,0x7ffdf681f424,16005081,0,0x0,8
tick,0x7ffdf681f424,16007024,0,0x0,8
tick,0x7ffdf681f424,16009056,0,0x0,8
tick,0x7ffdf681f424,16011141,0,0x0,8
tick,0x7ffdf681f424,16013168,0,0x0,8
tick,0x7ffdf681f424,16015149,0,0x0,8
tick,0x7ffdf681f424,16017104,0,0x0,8
tick,0x7ffdf681f424,16019011,0,0x0,8
tick,0x7ffdf681f424,16021082,0,0x0,8
tick,0x7ffdf681f424,16023013,0,0x0,8
tick,0x7ffdf681f424,16025011,0,0x0,8
tick,0x7ffdf681f424,16027108,0,0x0,8
tick,0x7ffdf681f424,16029102,0,0x0,8
tick,0x7ffdf681f424,16031097,0,0x0,8
tick,0x7ffdf681f424,16033004,0,0x0,8
tick,0x7ffdf681f424,16035087,0,0x0,8
tick,0x7ffdf681f424,16037096,0,0x0,8
tick,0x7ffdf681f424,16039075,0,0x0,8
tick,0x7ffdf681f424,16041023,0,0x0,8
tick,0x7ffdf681f424,16042982,0,0x0,8
tick,0x7ffdf681f424,16045062,0,0x0,8
tick,0x7ffdf681f424,16047048,0,0x0,8
tick,0x7ffdf681f424,16048940,0,0x0,8
tick,0x7ffdf681f424,16051041,0,0x0,8
tick,0x7ffdf681f424,16053035,0,0x0,8
tick,0x7ffdf681f424,16055032,0,0x0,8
tick,0x7ffdf681f424,16057026,0,0x0,8
tick,0x7ffdf681f424,16059058,0,0x0,8
tick,0x7ffdf681f424,16061016,0,0x0,8
tick,0x7ffdf681f424,16063012,0,0x0,8
tick,0x7ffdf681f424,16065030,0,0x0,8
tick,0x7ffdf681f424,16067041,0,0x0,8
tick,0x7ffdf681f424,16068992,0,0x0,8
tick,0x7ffdf681f424,16070990,0,0x0,8
tick,0x7ffdf681f424,16072984,0,0x0,8
tick,0x7ffdf681f424,16074978,0,0x0,8
tick,0x7ffdf681f424,16077005,0,0x0,8
tick,0x7ffdf681f424,16078967,0,0x0,8
tick,0x7ffdf681f424,16080960,0,0x0,8
tick,0x7ffdf681f424,16082958,0,0x0,8
tick,0x7ffdf681f424,16084951,0,0x0,8
tick,0x7ffdf681f424,16086951,0,0x0,8
tick,0x7ffdf681f424,16088942,0,0x0,8
tick,0x7ffdf681f424,16090934,0,0x0,8
tick,0x7ffdf681f424,16092931,0,0x0,8
tick,0x7ffdf681f424,16094932,0,0x0,8
tick,0x7ffdf681f424,16096920,0,0x0,8
tick,0x7ffdf681f424,16098815,0,0x0,8
tick,0x7ffdf681f424,16100911,0,0x0,8
tick,0x7ffdf681f424,16102912,0,0x0,8
tick,0x7ffdf681f424,16104899,0,0x0,8
tick,0x7ffdf681f424,16106894,0,0x0,8
tick,0x7ffdf681f424,16108892,0,0x0,8
tick,0x7ffdf681f424,16110894,0,0x0,8
tick,0x7ffdf681f424,16112873,0,0x0,8
tick,0x7ffdf681f424,16114870,0,0x0,8
tick,0x7ffdf681f424,16116864,0,0x0,8
tick,0x7ffdf681f424,16118864,0,0x0,8
tick,0x7ffdf681f424,16120871,0,0x0,8
tick,0x7ffdf681f424,16122858,0,0x0,8
tick,0x7ffdf681f424,16124860,0,0x0,8
tick,0x7ffdf681f424,16126848,0,0x0,8
tick,0x7ffdf681f424,16128842,0,0x0,8
tick,0x7ffdf681f424,16130724,0,0x0,8
tick,0x7ffdf681f424,16132831,0,0x0,8
tick,0x7ffdf681f424,16134822,0,0x0,8
tick,0x7ffdf681f424,16136815,0,0x0,8
tick,0x7ffdf681f424,16138822,0,0x0,8
tick,0x7ffdf681f424,16140813,0,0x0,8
tick,0x7ffdf681f424,16142713,0,0x0,8
tick,0x7ffdf681f424,16144649,0,0x0,8
tick,0x7ffdf681f424,16146686,0,0x0,8
tick,0x7ffdf681f424,16148771,0,0x0,8
tick,0x7ffdf681f424,16150739,0,0x0,8
tick,0x7ffdf681f424,16152663,0,0x0,8
tick,0x7ffdf681f424,16154739,0,0x0,8
tick,0x7ffdf681f424,16156769,0,0x0,8
tick,0x7ffdf681f424,16158672,0,0x0,8
tick,0x7ffdf681f424,16160761,0,0x0,8
tick,0x7ffdf681f424,16162751,0,0x0,8
tick,0x7ffdf681f424,16164746,0,0x0,8
tick,0x7ffdf681f424,16166646,0,0x0,8
tick,0x7ffdf681f424,16168748,0,0x0,8
tick,0x7ffdf681f424,16170732,0,0x0,8
tick,0x7ffdf681f424,16172726,0,0x0,8
tick,0x7ffdf681f424,16174714,0,0x0,8
tick,0x7ffdf681f424,16176713,0,0x0,8
tick,0x7ffdf681f424,16178704,0,0x0,8
tick,0x7ffdf681f424,16180704,0,0x0,8
tick,0x7ffdf681f424,16182693,0,0x0,8
tick,0x7ffdf681f424,16184692,0,0x0,8
tick,0x7ffdf681f424,16186692,0,0x0,8
tick,0x7ffdf681f424,16188683,0,0x0,8
tick,0x7ffdf681f424,16190607,0,0x0,8
tick,0x7ffdf681f424,16192677,0,0x0,8
tick,0x7ffdf681f424,16194666,0,0x0,8
tick,0x7ffdf681f424,16196666,0,0x0,8
tick,0x7ffdf681f424,16198691,0,0x0,8
tick,0x7ffdf681f424,16200653,0,0x0,8
tick,0x7ffdf681f424,16202593,0,0x0,8
tick,0x7ffdf681f424,16204641,0,0x0,8
tick,0x7ffdf681f424,16206637,0,0x0,8
tick,0x7ffdf681f424,16208623,0,0x0,8
tick,0x7ffdf681f424,16210621,0,0x0,8
tick,0x7ffdf681f424,16212615,0,0x0,8
tick,0x7ffdf681f424,16214619,0,0x0,8
tick,0x7ffdf681f424,16216607,0,0x0,8
tick,0x7ffdf681f424,16218607,0,0x0,8
tick,0x7ffdf681f424,16220584,0,0x0,8
tick,0x7ffdf681f424,16222581,0,0x0,8
tick,0x7ffdf681f424,16224579,0,0x0,8
tick,0x7ffdf681f424,16226573,0,0x0,8
tick,0x7ffdf681f424,16228571,0,0x0,8
tick,0x7ffdf681f424,16230563,0,0x0,8
tick,0x7ffdf681f424,16232509,0,0x0,8
tick,0x7ffdf681f424,16234581,0,0x0,8
tick,0x7ffdf681f424,16236555,0,0x0,8
tick,0x7ffdf681f424,16238542,0,0x0,8
tick,0x7ffdf681f424,16240496,0,0x0,8
tick,0x7ffdf681f424,16242550,0,0x0,8
tick,0x7ffdf681f424,16244522,0,0x0,8
tick,0x7ffdf681f424,16246515,0,0x0,8
tick,0x7ffdf681f424,16248509,0,0x0,8
tick,0x7ffdf681f424,16250510,0,0x0,8
tick,0x7ffdf681f424,16252512,0,0x0,8
tick,0x7ffdf681f424,16254370,0,0x0,8
tick,0x7ffdf681f424,16256491,0,0x0,8
tick,0x7ffdf681f424,16258488,0,0x0,8
tick,0x7ffdf681f424,16260483,0,0x0,8
tick,0x7ffdf681f424,16262545,0,0x0,8
tick,0x7ffdf681f424,16264451,0,0x0,8
tick,0x7ffdf681f424,16266307,0,0x0,8
tick,0x7ffdf681f424,16268427,0,0x0,8
tick,0x7ffdf681f424,16270359,0,0x0,8
tick,0x7ffdf681f424,16272451,0,0x0,8
tick,0x7ffdf681f424,16274400,0,0x0,8
tick,0x7ffdf681f424,16276283,0,0x0,8
tick,0x7ffdf681f424,16278331,0,0x0,8
tick,0x7ffdf681f424,16280434,0,0x0,8
tick,0x7ffdf681f424,16282388,0,0x0,8
tick,0x7ffdf681f424,16284309,0,0x0,8
tick,0x7ffdf681f424,16286408,0,0x0,8
tick,0x7ffdf681f424,16288430,0,0x0,8
tick,0x7ffdf681f424,16290514,0,0x0,8
tick,0x7ffdf681f424,16292294,0,0x0,8
tick,0x7ffdf681f424,16294389,0,0x0,8
tick,0x7ffdf681f424,16296387,0,0x0,8
tick,0x7ffdf681f424,16298445,0,0x0,8
tick,0x7ffdf681f424,16300373,0,0x0,8
tick,0x7ffdf681f424,16302371,0,0x0,8
tick,0x7ffdf681f424,16304360,0,0x0,8
tick,0x7ffdf681f424,16306360,0,0x0,8
tick,0x7ffdf681f424,16308369,0,0x0,8
tick,0x7ffdf681f424,16310348,0,0x0,8
tick,0x7ffdf681f424,16312345,0,0x0,8
tick,0x7ffdf681f424,16314339,0,0x0,8
tick,0x7ffdf681f424,16316346,0,0x0,8
tick,0x7ffdf681f424,16318328,0,0x0,8
tick,0x7ffdf681f424,16320321,0,0x0,8
tick,0x7ffdf681f424,16322328,0,0x0,8
tick,0x7ffdf681f424,16324317,0,0x0,8
tick,0x7ffdf681f424,16326314,0,0x0,8
tick,0x7ffdf681f424,16328296,0,0x0,8
tick,0x7ffdf681f424,16330291,0,0x0,8
tick,0x7ffdf681f424,16332188,0,0x0,8
tick,0x7ffdf681f424,16334288,0,0x0,8
tick,0x7ffdf681f424,16336281,0,0x0,8
tick,0x7ffdf681f424,16338274,0,0x0,8
tick,0x7ffdf681f424,16340267,0,0x0,8
tick,0x7ffdf681f424,16342340,0,0x0,8
tick,0x7ffdf681f424,16344301,0,0x0,8
tick,0x7ffdf681f424,16346251,0,0x0,8
tick,0x7ffdf681f424,16348248,0,0x0,8
tick,0x7ffdf681f424,16350209,0,0x0,8
tick,0x7ffdf681f424,16352232,0,0x0,8
tick,0x7ffdf681f424,16354232,0,0x0,8
tick,0x7ffdf681f424,16356231,0,0x0,8
tick,0x7ffdf681f424,16358222,0,0x0,8
tick,0x7ffdf681f424,16360212,0,0x0,8
tick,0x7ffdf681f424,16362206,0,0x0,8
tick,0x7ffdf681f424,16364104,0,0x0,8
tick,0x7ffdf681f424,16366198,0,0x0,8
tick,0x7ffdf681f424,16368203,0,0x0,8
tick,0x7ffdf681f424,16370199,0,0x0,8
tick,0x7ffdf681f424,16372181,0,0x0,8
tick,0x7ffdf681f424,16374070,0,0x0,8
tick,0x7ffdf681f424,16376174,0,0x0,8
tick,0x7ffdf681f424,16378166,0,0x0,8
tick,0x7ffdf681f424,16380161,0,0x0,8
tick,0x7ffdf681f424,16382150,0,0x0,8
tick,0x7ffdf681f424,16384170,0,0x0,8
tick,0x7ffdf681f424,16386057,0,0x0,8
tick,0x7ffdf681f424,16388162,0,0x0,8
tick,0x7ffdf681f424,16390162,0,0x0,8
tick,0x7ffdf681f424,16392046,0,0x0,8
tick,0x7ffdf681f424,16394088,0,0x0,8
tick,0x7ffdf681f424,16395962,0,0x0,8
tick,0x7ffdf681f424,16398138,0,0x0,8
tick,0x7ffdf681f424,16399949,0,0x0,8
tick,0x7ffdf681f424,16401995,0,0x0,8
tick,0x7ffdf681f424,16404192,0,0x0,8
tick,0x7ffdf681f424,16406111,0,0x0,8
tick,0x7ffdf681f424,16407985,0,0x0,8
tick,0x7ffdf681f424,16409927,0,0x0,8
tick,0x7ffdf681f424,16412027,0,0x0,8
tick,0x7ffdf681f424,16413969,0,0x0,8
tick,0x7ffdf681f424,16416025,0,0x0,8
tick,0x7ffdf681f424,16418094,0,0x0,8
tick,0x7ffdf681f424,16420059,0,0x0,8
tick,0x7ffdf681f424,16422046,0,0x0,8
tick,0x7ffdf681f424,16423935,0,0x0,8
tick,0x7ffdf681f424,16426040,0,0x0,8
tick,0x7ffdf681f424,16428038,0,0x0,8
tick,0x7ffdf681f424,16430032,0,0x0,8
tick,0x7ffdf681f424,16432067,0,0x0,8
tick,0x7ffdf681f424,16434017,0,0x0,8
tick,0x7ffdf681f424,16436016,0,0x0,8
tick,0x7ffdf681f424,16438008,0,0x0,8
tick,0x7ffdf681f424,16440003,0,0x0,8
tick,0x7ffdf681f424,16441976,0,0x0,8
tick,0x7ffdf681f424,16443992,0,0x0,8
tick,0x7ffdf681f424,16445997,0,0x0,8
tick,0x7ffdf681f424,16447981,0,0x0,8
tick,0x7ffdf681f424,16449976,0,0x0,8
tick,0x7ffdf681f424,16451974,0,0x0,8
tick,0x7ffdf681f424,16453996,0,0x0,8
tick,0x7ffdf681f424,16455960,0,0x0,8
tick,0x7ffdf681f424,16457957,0,0x0,8
tick,0x7ffdf681f424,16459958,0,0x0,8
tick,0x7ffdf681f424,16461945,0,0x0,8
tick,0x7ffdf681f424,16463934,0,0x0,8
tick,0x7ffdf681f424,16465971,0,0x0,8
tick,0x7ffdf681f424,16467939,0,0x0,8
tick,0x7ffdf681f424,16469917,0,0x0,8
tick,0x7ffdf681f424,16471914,0,0x0,8
tick,0x7ffdf681f424,16473815,0,0x0,8
tick,0x7ffdf681f424,16475921,0,0x0,8
tick,0x7ffdf681f424,16477901,0,0x0,8
tick,0x7ffdf681f424,16479896,0,0x0,8
tick,0x7ffdf681f424,16481896,0,0x0,8
tick,0x7ffdf681f424,16483888,0,0x0,8
tick,0x7ffdf681f424,16485876,0,0x0,8
tick,0x7ffdf681f424,16487869,0,0x0,8
tick,0x7ffdf681f424,16489876,0,0x0,8
tick,0x7ffdf681f424,16491868,0,0x0,8
tick,0x7ffdf681f424,16493860,0,0x0,8
tick,0x7ffdf681f424,16495861,0,0x0,8
tick,0x7ffdf681f424,16497893,0,0x0,8
tick,0x7ffdf681f424,16499839,0,0x0,8
tick,0x7ffdf681f424,16501837,0,0x0,8
tick,0x7ffdf681f424,16503833,0,0x0,8
tick,0x7ffdf681f424,16505820,0,0x0,8
tick,0x7ffdf681f424,16507817,0,0x0,8
tick,0x7ffdf681f424,16509816,0,0x0,8
tick,0x7ffdf681f424,16511811,0,0x0,8
tick,0x7ffdf681f424,16513806,0,0x0,8
tick,0x7ffdf681f424,16515803,0,0x0,8
tick,0x7ffdf681f424,16517800,0,0x0,8
tick,0x7ffdf681f424,16519818,0,0x0,8
tick,0x7ffdf681f424,16521673,0,0x0,8
tick,0x7ffdf681f424,16523731,0,0x0,8
tick,0x7ffdf681f424,16525638,0,0x0,8
tick,0x7ffdf681f424,16527739,0,0x0,8
tick,0x7ffdf681f424,16529778,0,0x0,8
tick,0x7ffdf681f424,16531831,0,0x0,8
tick,0x7ffdf681f424,16533781,0,0x0,8
tick,0x7ffdf681f424,16535725,0,0x0,8
tick,0x7ffdf681f424,16537844,0,0x0,8
tick,0x7ffdf681f424,16539740,0,0x0,8
tick,0x7ffdf681f424,16541600,0,0x0,8
tick,0x7ffdf681f424,16543788,0,0x0,8
tick,0x7ffdf681f424,16545798,0,0x0,8
tick,0x7ffdf681f424,16547799,0,0x0,8
tick,0x7ffdf681f424,16549654,0,0x0,8
tick,0x7ffdf681f424,16551794,0,0x0,8
tick,0x7ffdf681f424,16552959,0,0x0,8
tick,0x7ffdf681f424,16554164,0,0x0,8
tick,0x7ffdf681f424,16555327,0,0x0,8
tick,0x7ffdf681f424,16556537,0,0x0,8
tick,0x7ffdf681f424,16558510,0,0x0,8
tick,0x7ffdf681f424,16560462,0,0x0,8
tick,0x7ffdf681f424,16562497,0,0x0,8
tick,0x7ffdf681f424,16563678,0,0x0,8
tick,0x7ffdf681f424,16564818,0,0x0,8
tick,0x7ffdf681f424,16566890,0,0x0,8
tick,0x7ffdf681f424,16568806,0,0x0,8
tick,0x7ffdf681f424,16570825,0,0x0,8
tick,0x7ffdf681f424,16572837,0,0x0,8
tick,0x7ffdf681f424,16575003,0,0x0,8
tick,0x7ffdf681f424,16576240,0,0x0,8
tick,0x7ffdf681f424,16577432,0,0x0,8
tick,0x7ffdf681f424,16578663,0,0x0,8
tick,0x7ffdf681f424,16579908,0,0x0,8
tick,0x7ffdf681f424,16581010,0,0x0,8
tick,0x7ffdf681f424,16582985,0,0x0,8
tick,0x7ffdf681f424,16584198,0,0x0,8
tick,0x7ffdf681f424,16585361,0,0x0,8
tick,0x7ffdf681f424,16586579,0,0x0,8
tick,0x7ffdf681f424,16587715,0,0x0,8
tick,0x7ffdf681f424,16588909,0,0x0,8
tick,0x7ffdf681f424,16590935,0,0x0,8
tick,0x7ffdf681f424,16592786,0,0x0,8
tick,0x7ffdf681f424,16594885,0,0x0,8
tick,0x7ffdf681f424,16596090,0,0x0,8
tick,0x7ffdf681f424,16597292,0,0x0,8
tick,0x7ffdf681f424,16599240,0,0x0,8
tick,0x7ffdf681f424,16601273,0,0x0,8
tick,0x7ffdf681f424,16603255,0,0x0,8
tick,0x7ffdf681f424,16605244,0,0x0,8
tick,0x7ffdf681f424,16607231,0,0x0,8
tick,0x7ffdf681f424,16609230,0,0x0,8
tick,0x7ffdf681f424,16611178,0,0x0,8
tick,0x7ffdf681f424,16613221,0,0x0,8
tick,0x7ffdf681f424,16615216,0,0x0,8
tick,0x7ffdf681f424,16617235,0,0x0,8
tick,0x7ffdf681f424,16619223,0,0x0,8
tick,0x7ffdf681f424,16621225,0,0x0,8
tick,0x7ffdf681f424,16623208,0,0x0,8
tick,0x7ffdf681f424,16625198,0,0x0,8
tick,0x7ffdf681f424,16627192,0,0x0,8
tick,0x7ffdf681f424,16629082,0,0x0,8
tick,0x7ffdf681f424,16631185,0,0x0,8
tick,0x7ffdf681f424,16633129,0,0x0,8
tick,0x7ffdf681f424,16635182,0,0x0,8
tick,0x7ffdf681f424,16637189,0,0x0,8
tick,0x7ffdf681f424,16639160,0,0x0,8
tick,0x7ffdf681f424,16641162,0,0x0,8
tick,0x7ffdf681f424,16643148,0,0x0,8
tick,0x7ffdf681f424,16645150,0,0x0,8
tick,0x7ffdf681f424,16647138,0,0x0,8
tick,0x7ffdf681f424,16649133,0,0x0,8
tick,0x7ffdf681f424,16651148,0,0x0,8
tick,0x7ffdf681f424,16653146,0,0x0,8
tick,0x7ffdf681f424,16654935,0,0x0,8
tick,0x7ffdf681f424,16656933,0,0x0,8
tick,0x7ffdf681f424,16658894,0,0x0,8
tick,0x7ffdf681f424,16660966,0,0x0,8
tick,0x7ffdf681f424,16663124,0,0x0,8
tick,0x7ffdf681f424,16665100,0,0x0,8
tick,0x7ffdf681f424,16667010,0,0x0,8
tick,0x7ffdf681f424,16668913,0,0x0,8
tick,0x7ffdf681f424,16671025,0,0x0,8
tick,0x7ffdf681f424,16672979,0,0x0,8
tick,0x7ffdf681f424,16674934,0,0x0,8
tick,0x7ffdf681f424,16677036,0,0x0,8
tick,0x7ffdf681f424,16679062,0,0x0,8
tick,0x7ffdf681f424,16681062,0,0x0,8
tick,0x7ffdf681f424,16683051,0,0x0,8
tick,0x7ffdf681f424,16685038,0,0x0,8
tick,0x7ffdf681f424,16687038,0,0x0,8
tick,0x7ffdf681f424,16689011,0,0x0,8
tick,0x7ffdf681f424,16690922,0,0x0,8
tick,0x7ffdf681f424,16693015,0,0x0,8
tick,0x7ffdf681f424,16695010,0,0x0,8
tick,0x7ffdf681f424,16697008,0,0x0,8
tick,0x7ffdf681f424,16698849,0,0x0,8
tick,0x7ffdf681f424,16701000,0,0x0,8
tick,0x7ffdf681f424,16703001,0,0x0,8
tick,0x7ffdf681f424,16704982,0,0x0,8
tick,0x7ffdf681f424,16706980,0,0x0,8
tick,0x7ffdf681f424,16708981,0,0x0,8
tick,0x7ffdf681f424,16710967,0,0x0,8
tick,0x7ffdf681f424,16712965,0,0x0,8
tick,0x7ffdf681f424,16714959,0,0x0,8
tick,0x7ffdf681f424,16716842,0,0x0,8
tick,0x7ffdf681f424,16718949,0,0x0,8
tick,0x7ffdf681f424,16720995,0,0x0,8
tick,0x7ffdf681f424,16722936,0,0x0,8
tick,0x7ffdf681f424,16724949,0,0x0,8
tick,0x7ffdf681f424,16726931,0,0x0,8
tick,0x7ffdf681f424,16728918,0,0x0,8
tick,0x7ffdf681f424,16730922,0,0x0,8
tick,0x7ffdf681f424,16732885,0,0x0,8
tick,0x7ffdf681f424,16734904,0,0x0,8
tick,0x7ffdf681f424,16736902,0,0x0,8
tick,0x7ffdf681f424,16738892,0,0x0,8
tick,0x7ffdf681f424,16740792,0,0x0,8
tick,0x7ffdf681f424,16742836,0,0x0,8
tick,0x7ffdf681f424,16744880,0,0x0,8
tick,0x7ffdf681f424,16746883,0,0x0,8
tick,0x7ffdf681f424,16748877,0,0x0,8
tick,0x7ffdf681f424,16750863,0,0x0,8
tick,0x7ffdf681f424,16752887,0,0x0,8
tick,0x7ffdf681f424,16754779,0,0x0,8
tick,0x7ffdf681f424,16756841,0,0x0,8
tick,0x7ffdf681f424,16758847,0,0x0,8
tick,0x7ffdf681f424,16760838,0,0x0,8
tick,0x7ffdf681f424,16762836,0,0x0,8
tick,0x7ffdf681f424,16764783,0,0x0,8
tick,0x7ffdf681f424,16766821,0,0x0,8
tick,0x7ffdf681f424,16768824,0,0x0,8
tick,0x7ffdf681f424,16770837,0,0x0,8
tick,0x7ffdf681f424,16772816,0,0x0,8
tick,0x7ffdf681f424,16774800,0,0x0,8
tick,0x7ffdf681f424,16776799,0,0x0,8
tick,0x7ffdf681f424,16778801,0,0x0,8
tick,0x7ffdf681f424,16780777,0,0x0,8
tick,0x7ffdf681f424,16782667,0,0x0,8
tick,0x7ffdf681f424,16784669,0,0x0,8
tick,0x7ffdf681f424,16786560,0,0x0,8
tick,0x7ffdf681f424,16788681,0,0x0,8
tick,0x7ffdf681f424,16790667,0,0x0,8
tick,0x7ffdf681f424,16792670,0,0x0,8
tick,0x7ffdf681f424,16794750,0,0x0,8
tick,0x7ffdf681f424,16796749,0,0x0,8
tick,0x7ffdf681f424,16798741,0,0x0,8
tick,0x7ffdf681f424,16800591,0,0x0,8
tick,0x7ffdf681f424,16802554,0,0x0,8
tick,0x7ffdf681f424,16804698,0,0x0,8
tick,0x7ffdf681f424,16806616,0,0x0,8
tick,0x7ffdf681f424,16808676,0,0x0,8
tick,0x7ffdf681f424,16810698,0,0x0,8
tick,0x7ffdf681f424,16812704,0,0x0,8
tick,0x7ffdf681f424,16814513,0,0x0,8
tick,0x7ffdf681f424,16816608,0,0x0,8
tick,0x7ffdf681f424,16818581,0,0x0,8
tick,0x7ffdf681f424,16820566,0,0x0,8
tick,0x7ffdf681f424,16822661,0,0x0,8
tick,0x7ffdf681f424,16824563,0,0x0,8
tick,0x7ffdf681f424,16826675,0,0x0,8
tick,0x7ffdf681f424,16828658,0,0x0,8
tick,0x7ffdf681f424,16830600,0,0x0,8
tick,0x7ffdf681f424,16832548,0,0x0,8
tick,0x7ffdf681f424,16834651,0,0x0,8
tick,0x7ffdf681f424,16836632,0,0x0,8
tick,0x7ffdf681f424,16838621,0,0x0,8
tick,0x7ffdf681f424,16840596,0,0x0,8
tick,0x7ffdf681f424,16842593,0,0x0,8
tick,0x7ffdf681f424,16844609,0,0x0,8
tick,0x7ffdf681f424,16846608,0,0x0,8
tick,0x7ffdf681f424,16848603,0,0x0,8
tick,0x7ffdf681f424,16850594,0,0x0,8
tick,0x7ffdf681f424,16852546,0,0x0,8
tick,0x7ffdf681f424,16854586,0,0x0,8
tick,0x7ffdf681f424,16856606,0,0x0,8
tick,0x7ffdf681f424,16858572,0,0x0,8
tick,0x7ffdf681f424,16860570,0,0x0,8
tick,0x7ffdf681f424,16862463,0,0x0,8
tick,0x7ffdf681f424,16864560,0,0x0,8
tick,0x7ffdf681f424,16866558,0,0x0,8
tick,0x7ffdf681f424,16868557,0,0x0,8
tick,0x7ffdf681f424,16870542,0,0x0,8
tick,0x7ffdf681f424,16872550,0,0x0,8
tick,0x7ffdf681f424,16874550,0,0x0,8
tick,0x7ffdf681f424,16876547,0,0x0,8
tick,0x7ffdf681f424,16878419,0,0x0,8
tick,0x7ffdf681f424,16880518,0,0x0,8
tick,0x7ffdf681f424,16882409,0,0x0,8
tick,0x7ffdf681f424,16884507,0,0x0,8
tick,0x7ffdf681f424,16886501,0,0x0,8
tick,0x7ffdf681f424,16888497,0,0x0,8
tick,0x7ffdf681f424,16890485,0,0x0,8
tick,0x7ffdf681f424,16892505,0,0x0,8
tick,0x7ffdf681f424,16894482,0,0x0,8
tick,0x7ffdf681f424,16896417,0,0x0,8
tick,0x7ffdf681f424,16898465,0,0x0,8
tick,0x7ffdf681f424,16900470,0,0x0,8
tick,0x7ffdf681f424,16902458,0,0x0,8
tick,0x7ffdf681f424,16904314,0,0x0,8
tick,0x7ffdf681f424,16906447,0,0x0,8
tick,0x7ffdf681f424,16908439,0,0x0,8
tick,0x7ffdf681f424,16910434,0,0x0,8
tick,0x7ffdf681f424,16912438,0,0x0,8
tick,0x7ffdf681f424,16914452,0,0x0,8
tick,0x7ffdf681f424,16916317,0,0x0,8
tick,0x7ffdf681f424,16918232,0,0x0,8
tick,0x7ffdf681f424,16920329,0,0x0,8
tick,0x7ffdf681f424,16922355,0,0x0,8
tick,0x7ffdf681f424,16924295,0,0x0,8
tick,0x7ffdf681f424,16926260,0,0x0,8
tick,0x7ffdf681f424,16928338,0,0x0,8
tick,0x7ffdf681f424,16930369,0,0x0,8
tick,0x7ffdf681f424,16932289,0,0x0,8
tick,0x7ffdf681f424,16934293,0,0x0,8
tick,0x7ffdf681f424,16936357,0,0x0,8
tick,0x7ffdf681f424,16938352,0,0x0,8
tick,0x7ffdf681f424,16940175,0,0x0,8
tick,0x7ffdf681f424,16942272,0,0x0,8
tick,0x7ffdf681f424,16944357,0,0x0,8
tick,0x7ffdf681f424,16946346,0,0x0,8
tick,0x7ffdf681f424,16948338,0,0x0,8
tick,0x7ffdf681f424,16950330,0,0x0,8
tick,0x7ffdf681f424,16952326,0,0x0,8
tick,0x7ffdf681f424,16954316,0,0x0,8
tick,0x7ffdf681f424,16956318,0,0x0,8
tick,0x7ffdf681f424,16958309,0,0x0,8
tick,0x7ffdf681f424,16960306,0,0x0,8
tick,0x7ffdf681f424,16962245,0,0x0,8
tick,0x7ffdf681f424,16964305,0,0x0,8
tick,0x7ffdf681f424,16966174,0,0x0,8
tick,0x7ffdf681f424,16968279,0,0x0,8
tick,0x7ffdf681f424,16970278,0,0x0,8
tick,0x7ffdf681f424,16972279,0,0x0,8
tick,0x7ffdf681f424,16974161,0,0x0,8
tick,0x7ffdf681f424,16976258,0,0x0,8
tick,0x7ffdf681f424,16978256,0,0x0,8
tick,0x7ffdf681f424,16980247,0,0x0,8
tick,0x7ffdf681f424,16982246,0,0x0,8
tick,0x7ffdf681f424,16984191,0,0x0,8
tick,0x7ffdf681f424,16986229,0,0x0,8
tick,0x7ffdf681f424,16988257,0,0x0,8
tick,0x7ffdf681f424,16990233,0,0x0,8
tick,0x7ffdf681f424,16992214,0,0x0,8
tick,0x7ffdf681f424,16994228,0,0x0,8
tick,0x7ffdf681f424,16996209,0,0x0,8
tick,0x7ffdf681f424,16998205,0,0x0,8
tick,0x7ffdf681f424,17000196,0,0x0,8
tick,0x7ffdf681f424,17002202,0,0x0,8
tick,0x7ffdf681f424,17004177,0,0x0,8
tick,0x7ffdf681f424,17006125,0,0x0,8
tick,0x7ffdf681f424,17008170,0,0x0,8
tick,0x7ffdf681f424,17010177,0,0x0,8
tick,0x7ffdf681f424,17012162,0,0x0,8
tick,0x7ffdf681f424,17014110,0,0x0,8
tick,0x7ffdf681f424,17016188,0,0x0,8
tick,0x7ffdf681f424,17018141,0,0x0,8
tick,0x7ffdf681f424,17020142,0,0x0,8
tick,0x7ffdf681f424,17022151,0,0x0,8
tick,0x7ffdf681f424,17024134,0,0x0,8
tick,0x7ffdf681f424,17026124,0,0x0,8
tick,0x7ffdf681f424,17028075,0,0x0,8
tick,0x7ffdf681f424,17030110,0,0x0,8
tick,0x7ffdf681f424,17032127,0,0x0,8
tick,0x7ffdf681f424,17034103,0,0x0,8
tick,0x7ffdf681f424,17036094,0,0x0,8
tick,0x7ffdf681f424,17038098,0,0x0,8
tick,0x7ffdf681f424,17040091,0,0x0,8
tick,0x7ffdf681f424,17042082,0,0x0,8
tick,0x7ffdf681f424,17043969,0,0x0,8
tick,0x7ffdf681f424,17045981,0,0x0,8
tick,0x7ffdf681f424,17047903,0,0x0,8
tick,0x7ffdf681f424,17049877,0,0x0,8
tick,0x7ffdf681f424,17051972,0,0x0,8
tick,0x7ffdf681f424,17053976,0,0x0,8
tick,0x7ffdf681f424,17056046,0,0x0,8
tick,0x7ffdf681f424,17057884,0,0x0,8
tick,0x7ffdf681f424,17059861,0,0x0,8
tick,0x7ffdf681f424,17061948,0,0x0,8
tick,0x7ffdf681f424,17063970,0,0x0,8
tick,0x7ffdf681f424,17065905,0,0x0,8
tick,0x7ffdf681f424,17067873,0,0x0,8
tick,0x7ffdf681f424,17070015,0,0x0,8
tick,0x7ffdf681f424,17071951,0,0x0,8
tick,0x7ffdf681f424,17073980,0,0x0,8
tick,0x7ffdf681f424,17075950,0,0x0,8
tick,0x7ffdf681f424,17078001,0,0x0,8
tick,0x7ffdf681f424,17079988,0,0x0,8
tick,0x7ffdf681f424,17081989,0,0x0,8
tick,0x7ffdf681f424,17083984,0,0x0,8
tick,0x7ffdf681f424,17085980,0,0x0,8
tick,0x7ffdf681f424,17087973,0,0x0,8
tick,0x7ffdf681f424,17089987,0,0x0,8
tick,0x7ffdf681f424,17091869,0,0x0,8
tick,0x7ffdf681f424,17093897,0,0x0,8
tick,0x7ffdf681f424,17095937,0,0x0,8
tick,0x7ffdf681f424,17097957,0,0x0,8
tick,0x7ffdf681f424,17099820,0,0x0,8
tick,0x7ffdf681f424,17101928,0,0x0,8
tick,0x7ffdf681f424,17103920,0,0x0,8
tick,0x7ffdf681f424,17105914,0,0x0,8
tick,0x7ffdf681f424,17107906,0,0x0,8
tick,0x7ffdf681f424,17109901,0,0x0,8
tick,0x7ffdf681f424,17111896,0,0x0,8
tick,0x7ffdf681f424,17113904,0,0x0,8
tick,0x7ffdf681f424,17115719,0,0x0,8
tick,0x7ffdf681f424,17117779,0,0x0,8
tick,0x7ffdf681f424,17119938,0,0x0,8
tick,0x7ffdf681f424,17121933,0,0x0,8
tick,0x7ffdf681f424,17123095,0,0x0,8
tick,0x7ffdf681f424,17125311,0,0x0,8
tick,0x7ffdf681f424,17127101,0,0x0,8
tick,0x7ffdf681f424,17128199,0,0x0,8
tick,0x7ffdf681f424,17130221,0,0x0,8
tick,0x7ffdf681f424,17132280,0,0x0,8
tick,0x7ffdf681f424,17134309,0,0x0,8
tick,0x7ffdf681f424,17136288,0,0x0,8
tick,0x7ffdf681f424,17138335,0,0x0,8
tick,0x7ffdf681f424,17140290,0,0x0,8
tick,0x7ffdf681f424,17142288,0,0x0,8
tick,0x7ffdf681f424,17144276,0,0x0,8
tick,0x7ffdf681f424,17146278,0,0x0,8
tick,0x7ffdf681f424,17148312,0,0x0,8
tick,0x7ffdf681f424,17150269,0,0x0,8
tick,0x7ffdf681f424,17152249,0,0x0,8
tick,0x7ffdf681f424,17154252,0,0x0,8
tick,0x7ffdf681f424,17156202,0,0x0,8
tick,0x7ffdf681f424,17158239,0,0x0,8
tick,0x7ffdf681f424,17160235,0,0x0,8
tick,0x7ffdf681f424,17162226,0,0x0,8
tick,0x7ffdf681f424,17164236,0,0x0,8
tick,0x7ffdf681f424,17166221,0,0x0,8
tick,0x7ffdf681f424,17168217,0,0x0,8
tick,0x7ffdf681f424,17170274,0,0x0,8
tick,0x7ffdf681f424,17172212,0,0x0,8
tick,0x7ffdf681f424,17174188,0,0x0,8
tick,0x7ffdf681f424,17176101,0,0x0,8
tick,0x7ffdf681f424,17178085,0,0x0,8
tick,0x7ffdf681f424,17179989,0,0x0,8
tick,0x7ffdf681f424,17182090,0,0x0,8
tick,0x7ffdf681f424,17183995,0,0x0,8
tick,0x7ffdf681f424,17186000,0,0x0,8
tick,0x7ffdf681f424,17188131,0,0x0,8
tick,0x7ffdf681f424,17190166,0,0x0,8
tick,0x7ffdf681f424,17192001,0,0x0,8
tick,0x7ffdf681f424,17194090,0,0x0,8
tick,0x7ffdf681f424,17196115,0,0x0,8
tick,0x7ffdf681f424,17198136,0,0x0,8
tick,0x7ffdf681f424,17200039,0,0x0,8
tick,0x7ffdf681f424,17202122,0,0x0,8
tick,0x7ffdf681f424,17204109,0,0x0,8
tick,0x7ffdf681f424,17206092,0,0x0,8
tick,0x7ffdf681f424,17208081,0,0x0,8
tick,0x7ffdf681f424,17210093,0,0x0,8
tick,0x7ffdf681f424,17212086,0,0x0,8
tick,0x7ffdf681f424,17214039,0,0x0,8
tick,0x7ffdf681f424,17215970,0,0x0,8
tick,0x7ffdf681f424,17218034,0,0x0,8
tick,0x7ffdf681f424,17220100,0,0x0,8
tick,0x7ffdf681f424,17222060,0,0x0,8
tick,0x7ffdf681f424,17223970,0,0x0,8
tick,0x7ffdf681f424,17226048,0,0x0,8
tick,0x7ffdf681f424,17228045,0,0x0,8
tick,0x7ffdf681f424,17230040,0,0x0,8
tick,0x7ffdf681f424,17232030,0,0x0,8
tick,0x7ffdf681f424,17234028,0,0x0,8
tick,0x7ffdf681f424,17236108,0,0x0,8
tick,0x7ffdf681f424,17238017,0,0x0,8
tick,0x7ffdf681f424,17240021,0,0x0,8
tick,0x7ffdf681f424,17242008,0,0x0,8
tick,0x7ffdf681f424,17244008,0,0x0,8
tick,0x7ffdf681f424,17245999,0,0x0,8
tick,0x7ffdf681f424,17247993,0,0x0,8
tick,0x7ffdf681f424,17249990,0,0x0,8
tick,0x7ffdf681f424,17251867,0,0x0,8
tick,0x7ffdf681f424,17253973,0,0x0,8
tick,0x7ffdf681f424,17255971,0,0x0,8
tick,0x7ffdf681f424,17257918,0,0x0,8
tick,0x7ffdf681f424,17259960,0,0x0,8
tick,0x7ffdf681f424,17261984,0,0x0,8
tick,0x7ffdf681f424,17263948,0,0x0,8
tick,0x7ffdf681f424,17265835,0,0x0,8
tick,0x7ffdf681f424,17267939,0,0x0,8
tick,0x7ffdf681f424,17269932,0,0x0,8
tick,0x7ffdf681f424,17271858,0,0x0,8
tick,0x7ffdf681f424,17273929,0,0x0,8
tick,0x7ffdf681f424,17275929,0,0x0,8
tick,0x7ffdf681f424,17277809,0,0x0,8
tick,0x7ffdf681f424,17279961,0,0x0,8
tick,0x7ffdf681f424,17281896,0,0x0,8
tick,0x7ffdf681f424,17283906,0,0x0,8
tick,0x7ffdf681f424,17285905,0,0x0,8
tick,0x7ffdf681f424,17287896,0,0x0,8
tick,0x7ffdf681f424,17289883,0,0x0,8
tick,0x7ffdf681f424,17291874,0,0x0,8
tick,0x7ffdf681f424,17293859,0,0x0,8
tick,0x7ffdf681f424,17295873,0,0x0,8
tick,0x7ffdf681f424,17297861,0,0x0,8
tick,0x7ffdf681f424,17299744,0,0x0,8
tick,0x7ffdf681f424,17301812,0,0x0,8
tick,0x7ffdf681f424,17303844,0,0x0,8
tick,0x7ffdf681f424,17305732,0,0x0,8
tick,0x7ffdf681f424,17307762,0,0x0,8
tick,0x7ffdf681f424,17309637,0,0x0,8
tick,0x7ffdf681f424,17311736,0,0x0,8
tick,0x7ffdf681f424,17313813,0,0x0,8
tick,0x7ffdf681f424,17315686,0,0x0,8
tick,0x7ffdf681f424,17317631,0,0x0,8
tick,0x7ffdf681f424,17319754,0,0x0,8
tick,0x7ffdf681f424,17321745,0,0x0,8
tick,0x7ffdf681f424,17323750,0,0x0,8
tick,0x7ffdf681f424,17325698,0,0x0,8
tick,0x7ffdf681f424,17327804,0,0x0,8
tick,0x7ffdf681f424,17329792,0,0x0,8
tick,0x7ffdf681f424,17331780,0,0x0,8
tick,0x7ffdf681f424,17333679,0,0x0,8
tick,0x7ffdf681f424,17335758,0,0x0,8
tick,0x7ffdf681f424,17337752,0,0x0,8
tick,0x7ffdf681f424,17339738,0,0x0,8
tick,0x7ffdf681f424,17341639,0,0x0,8
tick,0x7ffdf681f424,17343732,0,0x0,8
tick,0x7ffdf681f424,17345784,0,0x0,8
tick,0x7ffdf681f424,17347723,0,0x0,8
tick,0x7ffdf681f424,17349607,0,0x0,8
tick,0x7ffdf681f424,17351714,0,0x0,8
tick,0x7ffdf681f424,17353707,0,0x0,8
tick,0x7ffdf681f424,17355705,0,0x0,8
tick,0x7ffdf681f424,17357672,0,0x0,8
tick,0x7ffdf681f424,17359692,0,0x0,8
tick,0x7ffdf681f424,17361693,0,0x0,8
tick,0x7ffdf681f424,17363688,0,0x0,8
tick,0x7ffdf681f424,17365647,0,0x0,8
tick,0x7ffdf681f424,17367690,0,0x0,8
tick,0x7ffdf681f424,17369669,0,0x0,8
tick,0x7ffdf681f424,17371667,0,0x0,8
tick,0x7ffdf681f424,17373660,0,0x0,8
tick,0x7ffdf681f424,17375545,0,0x0,8
tick,0x7ffdf681f424,17377640,0,0x0,8
tick,0x7ffdf681f424,17379640,0,0x0,8
tick,0x7ffdf681f424,17381631,0,0x0,8
tick,0x7ffdf681f424,17383651,0,0x0,8
tick,0x7ffdf681f424,17385519,0,0x0,8
tick,0x7ffdf681f424,17387653,0,0x0,8
tick,0x7ffdf681f424,17389644,0,0x0,8
tick,0x7ffdf681f424,17390761,0,0x0,8
tick,0x7ffdf681f424,17391974,0,0x0,8
tick,0x7ffdf681f424,17393886,0,0x0,8
tick,0x7ffdf681f424,17395946,0,0x0,8
tick,0x7ffdf681f424,17397101,0,0x0,8
tick,0x7ffdf681f424,17398222,0,0x0,8
tick,0x7ffdf681f424,17400260,0,0x0,8
tick,0x7ffdf681f424,17401409,0,0x0,8
tick,0x7ffdf681f424,17402579,0,0x0,8
tick,0x7ffdf681f424,17404596,0,0x0,8
tick,0x7ffdf681f424,17406570,0,0x0,8
tick,0x7ffdf681f424,17407719,0,0x0,8
tick,0x7ffdf681f424,17408867,0,0x0,8
tick,0x7ffdf681f424,17410897,0,0x0,8
tick,0x7ffdf681f424,17413053,0,0x0,8
tick,0x7ffdf681f424,17414963,0,0x0,8
tick,0x7ffdf681f424,17417086,0,0x0,8
tick,0x7ffdf681f424,17419081,0,0x0,8
tick,0x7ffdf681f424,17421058,0,0x0,8
tick,0x7ffdf681f424,17423109,0,0x0,8
tick,0x7ffdf681f424,17425103,0,0x0,8
tick,0x7ffdf681f424,17427036,0,0x0,8
tick,0x7ffdf681f424,17429049,0,0x0,8
tick,0x7ffdf681f424,17431068,0,0x0,8
tick,0x7ffdf681f424,17433079,0,0x0,8
tick,0x7ffdf681f424,17435056,0,0x0,8
tick,0x7ffdf681f424,17437078,0,0x0,8
tick,0x7ffdf681f424,17439008,0,0x0,8
tick,0x7ffdf681f424,17440887,0,0x0,8
tick,0x7ffdf681f424,17442878,0,0x0,8
tick,0x7ffdf681f424,17444979,0,0x0,8
tick,0x7ffdf681f424,17446928,0,0x0,8
tick,0x7ffdf681f424,17449020,0,0x0,8
tick,0x7ffdf681f424,17450862,0,0x0,8
tick,0x7ffdf681f424,17452801,0,0x0,8
tick,0x7ffdf681f424,17454857,0,0x0,8
tick,0x7ffdf681f424,17457007,0,0x0,8
tick,0x7ffdf681f424,17458922,0,0x0,8
tick,0x7ffdf681f424,17461001,0,0x0,8
tick,0x7ffdf681f424,17462992,0,0x0,8
tick,0x7ffdf681f424,17465001,0,0x0,8
tick,0x7ffdf681f424,17466875,0,0x0,8
tick,0x7ffdf681f424,17468987,0,0x0,8
tick,0x7ffdf681f424,17470970,0,0x0,8
tick,0x7ffdf681f424,17472939,0,0x0,8
tick,0x7ffdf681f424,17474951,0,0x0,8
tick,0x7ffdf681f424,17476826,0,0x0,8
tick,0x7ffdf681f424,17478900,0,0x0,8
tick,0x7ffdf681f424,17480910,0,0x0,8
tick,0x7ffdf681f424,17482955,0,0x0,8
tick,0x7ffdf681f424,17484929,0,0x0,8
tick,0x7ffdf681f424,17486930,0,0x0,8
tick,0x7ffdf681f424,17488934,0,0x0,8
tick,0x7ffdf681f424,17490814,0,0x0,8
tick,0x7ffdf681f424,17492912,0,0x0,8
tick,0x7ffdf681f424,17494906,0,0x0,8
tick,0x7ffdf681f424,17496863,0,0x0,8
tick,0x7ffdf681f424,17498912,0,0x0,8
tick,0x7ffdf681f424,17500880,0,0x0,8
tick,0x7ffdf681f424,17502880,0,0x0,8
tick,0x7ffdf681f424,17504887,0,0x0,8
tick,0x7ffdf681f424,17506878,0,0x0,8
tick,0x7ffdf681f424,17508869,0,0x0,8
tick,0x7ffdf681f424,17510864,0,0x0,8
tick,0x7ffdf681f424,17512865,0,0x0,8
tick,0x7ffdf681f424,17514851,0,0x0,8
tick,0x7ffdf681f424,17516843,0,0x0,8
tick,0x7ffdf681f424,17518789,0,0x0,8
tick,0x7ffdf681f424,17520838,0,0x0,8
tick,0x7ffdf681f424,17522832,0,0x0,8
tick,0x7ffdf681f424,17524784,0,0x0,8
tick,0x7ffdf681f424,17526822,0,0x0,8
tick,0x7ffdf681f424,17528816,0,0x0,8
tick,0x7ffdf681f424,17530814,0,0x0,8
tick,0x7ffdf681f424,17532804,0,0x0,8
tick,0x7ffdf681f424,17534808,0,0x0,8
tick,0x7ffdf681f424,17536693,0,0x0,8
tick,0x7ffdf681f424,17538795,0,0x0,8
tick,0x7ffdf681f424,17540653,0,0x0,8
tick,0x7ffdf681f424,17542780,0,0x0,8
tick,0x7ffdf681f424,17544781,0,0x0,8
tick,0x7ffdf681f424,17546790,0,0x0,8
tick,0x7ffdf681f424,17548760,0,0x0,8
tick,0x7ffdf681f424,17550760,0,0x0,8
tick,0x7ffdf681f424,17552765,0,0x0,8
tick,0x7ffdf681f424,17554752,0,0x0,8
tick,0x7ffdf681f424,17556749,0,0x0,8
tick,0x7ffdf681f424,17558743,0,0x0,8
tick,0x7ffdf681f424,17560730,0,0x0,8
tick,0x7ffdf681f424,17562574,0,0x0,8
tick,0x7ffdf681f424,17564709,0,0x0,8
tick,0x7ffdf681f424,17566725,0,0x0,8
tick,0x7ffdf681f424,17568732,0,0x0,8
tick,0x7ffdf681f424,17570575,0,0x0,8
tick,0x7ffdf681f424,17572519,0,0x0,8
tick,0x7ffdf681f424,17574560,0,0x0,8
tick,0x7ffdf681f424,17576534,0,0x0,8
tick,0x7ffdf681f424,17588616,0,0x0,8
tick,0x7ffdf681f424,17590538,0,0x0,8
tick,0x7ffdf681f424,17592476,0,0x0,8
tick,0x7ffdf681f424,17594572,0,0x0,8
tick,0x7ffdf681f424,17596573,0,0x0,8
tick,0x7ffdf681f424,17598504,0,0x0,8
tick,0x7ffdf681f424,17600559,0,0x0,8
tick,0x7ffdf681f424,17602607,0,0x0,8
tick,0x7ffdf681f424,17603803,0,0x0,8
tick,0x7ffdf681f424,17605859,0,0x0,8
tick,0x7ffdf681f424,17607071,0,0x0,8
tick,0x7ffdf681f424,17609016,0,0x0,8
tick,0x7ffdf681f424,17611055,0,0x0,8
tick,0x7ffdf681f424,17612236,0,0x0,8
tick,0x7ffdf681f424,17613485,0,0x0,8
tick,0x7ffdf681f424,17614714,0,0x0,8
tick,0x7ffdf681f424,17616922,0,0x0,8
tick,0x7ffdf681f424,17618128,0,0x0,8
tick,0x7ffdf681f424,17619336,0,0x0,8
tick,0x7ffdf681f424,17621342,0,0x0,8
tick,0x7ffdf681f424,17622500,0,0x0,8
tick,0x7ffdf681f424,17624394,0,0x0,8
tick,0x7ffdf681f424,17625636,0,0x0,8
tick,0x7ffdf681f424,17627660,0,0x0,8
tick,0x7ffdf681f424,17629642,0,0x0,8
tick,0x7ffdf681f424,17631652,0,0x0,8
tick,0x7ffdf681f424,17633720,0,0x0,8
tick,0x7ffdf681f424,17635796,0,0x0,8
tick,0x7ffdf681f424,17637877,0,0x0,8
tick,0x7ffdf681f424,17639821,0,0x0,8
tick,0x7ffdf681f424,17641874,0,0x0,8
tick,0x7ffdf681f424,17643840,0,0x0,8
tick,0x7ffdf681f424,17645942,0,0x0,8
tick,0x7ffdf681f424,17648032,0,0x0,8
tick,0x7ffdf681f424,17650010,0,0x0,8
tick,0x7ffdf681f424,17652010,0,0x0,8
tick,0x7ffdf681f424,17654092,0,0x0,8
tick,0x7ffdf681f424,17656206,0,0x0,8
tick,0x7ffdf681f424,17658280,0,0x0,8
tick,0x7ffdf681f424,17660205,0,0x0,8
tick,0x7ffdf681f424,17662098,0,0x0,8
tick,0x7ffdf681f424,17663280,0,0x0,8
tick,0x7ffdf681f424,17665233,0,0x0,8
tick,0x7ffdf681f424,17667231,0,0x0,8
tick,0x7ffdf681f424,17669273,0,0x0,8
tick,0x7ffdf681f424,17671279,0,0x0,8
tick,0x7ffdf681f424,17673203,0,0x0,8
tick,0x7ffdf681f424,17675261,0,0x0,8
tick,0x7ffdf681f424,17677220,0,0x0,8
tick,0x7ffdf681f424,17678352,0,0x0,8
tick,0x7ffdf681f424,17679481,0,0x0,8
tick,0x7ffdf681f424,17680652,0,0x0,8
tick,0x7ffdf681f424,17682598,0,0x0,8
tick,0x7ffdf681f424,17684668,0,0x0,8
tick,0x7ffdf681f424,17686529,0,0x0,8
tick,0x7ffdf681f424,17688610,0,0x0,8
tick,0x7ffdf681f424,17689809,0,0x0,8
tick,0x7ffdf681f424,17691836,0,0x0,8
tick,0x7ffdf681f424,17693779,0,0x0,8
tick,0x7ffdf681f424,17695762,0,0x0,8
tick,0x7ffdf681f424,17697614,0,0x0,8
tick,0x7ffdf681f424,17699732,0,0x0,8
tick,0x7ffdf681f424,17701709,0,0x0,8
tick,0x7ffdf681f424,17703710,0,0x0,8
tick,0x7ffdf681f424,17705708,0,0x0,8
tick,0x7ffdf681f424,17707643,0,0x0,8
tick,0x7ffdf681f424,17709625,0,0x0,8
tick,0x7ffdf681f424,17711680,0,0x0,8
tick,0x7ffdf681f424,17713673,0,0x0,8
tick,0x7ffdf681f424,17715698,0,0x0,8
tick,0x7ffdf681f424,17717642,0,0x0,8
tick,0x7ffdf681f424,17719531,0,0x0,8
tick,0x7ffdf681f424,17721630,0,0x0,8
tick,0x7ffdf681f424,17723652,0,0x0,8
tick,0x7ffdf681f424,17725548,0,0x0,8
tick,0x7ffdf681f424,17727641,0,0x0,8
tick,0x7ffdf681f424,17729637,0,0x0,8
tick,0x7ffdf681f424,17731636,0,0x0,8
tick,0x7ffdf681f424,17733566,0,0x0,8
tick,0x7ffdf681f424,17735622,0,0x0,8
tick,0x7ffdf681f424,17737614,0,0x0,8
tick,0x7ffdf681f424,17739610,0,0x0,8
tick,0x7ffdf681f424,17741603,0,0x0,8
tick,0x7ffdf681f424,17743610,0,0x0,8
tick,0x7ffdf681f424,17745598,0,0x0,8
tick,0x7ffdf681f424,17747590,0,0x0,8
tick,0x7ffdf681f424,17749587,0,0x0,8
tick,0x7ffdf681f424,17751582,0,0x0,8
tick,0x7ffdf681f424,17753576,0,0x0,8
tick,0x7ffdf681f424,17755565,0,0x0,8
tick,0x7ffdf681f424,17757545,0,0x0,8
tick,0x7ffdf681f424,17759592,0,0x0,8
tick,0x7ffdf681f424,17761549,0,0x0,8
tick,0x7ffdf681f424,17763549,0,0x0,8
tick,0x7ffdf681f424,17765558,0,0x0,8
tick,0x7ffdf681f424,17767540,0,0x0,8
tick,0x7ffdf681f424,17769529,0,0x0,8
tick,0x7ffdf681f424,17771531,0,0x0,8
tick,0x7ffdf681f424,17773538,0,0x0,8
tick,0x7ffdf681f424,17775524,0,0x0,8
tick,0x7ffdf681f424,17777513,0,0x0,8
tick,0x7ffdf681f424,17779516,0,0x0,8
tick,0x7ffdf681f424,17781400,0,0x0,8
tick,0x7ffdf681f424,17783506,0,0x0,8
tick,0x7ffdf681f424,17785486,0,0x0,8
tick,0x7ffdf681f424,17787492,0,0x0,8
tick,0x7ffdf681f424,17789480,0,0x0,8
tick,0x7ffdf681f424,17791495,0,0x0,8
tick,0x7ffdf681f424,17793470,0,0x0,8
tick,0x7ffdf681f424,17795470,0,0x0,8
tick,0x7ffdf681f424,17797461,0,0x0,8
tick,0x7ffdf681f424,17799423,0,0x0,8
tick,0x7ffdf681f424,17801453,0,0x0,8
tick,0x7ffdf681f424,17803446,0,0x0,8
tick,0x7ffdf681f424,17805440,0,0x0,8
tick,0x7ffdf681f424,17807366,0,0x0,8
tick,0x7ffdf681f424,17809447,0,0x0,8
tick,0x7ffdf681f424,17811418,0,0x0,8
tick,0x7ffdf681f424,17813421,0,0x0,8
tick,0x7ffdf681f424,17815334,0,0x0,8
tick,0x7ffdf681f424,17817433,0,0x0,8
tick,0x7ffdf681f424,17819401,0,0x0,8
tick,0x7ffdf681f424,17821408,0,0x0,8
tick,0x7ffdf681f424,17823406,0,0x0,8
tick,0x7ffdf681f424,17825389,0,0x0,8
tick,0x7ffdf681f424,17827384,0,0x0,8
tick,0x7ffdf681f424,17829441,0,0x0,8
tick,0x7ffdf681f424,17831302,0,0x0,8
tick,0x7ffdf681f424,17833209,0,0x0,8
tick,0x7ffdf681f424,17835259,0,0x0,8
tick,0x7ffdf681f424,17837191,0,0x0,8
tick,0x7ffdf681f424,17839351,0,0x0,8
tick,0x7ffdf681f424,17841285,0,0x0,8
tick,0x7ffdf681f424,17843217,0,0x0,8
tick,0x7ffdf681f424,17845256,0,0x0,8
tick,0x7ffdf681f424,17847305,0,0x0,8
tick,0x7ffdf681f424,17849231,0,0x0,8
tick,0x7ffdf681f424,17851205,0,0x0,8
tick,0x7ffdf681f424,17853320,0,0x0,8
tick,0x7ffdf681f424,17855307,0,0x0,8
tick,0x7ffdf681f424,17857303,0,0x0,8
tick,0x7ffdf681f424,17859194,0,0x0,8
tick,0x7ffdf681f424,17861300,0,0x0,8
tick,0x7ffdf681f424,17863295,0,0x0,8
tick,0x7ffdf681f424,17865296,0,0x0,8
tick,0x7ffdf681f424,17867274,0,0x0,8
tick,0x7ffdf681f424,17869271,0,0x0,8
tick,0x7ffdf681f424,17871278,0,0x0,8
tick,0x7ffdf681f424,17873306,0,0x0,8
tick,0x7ffdf681f424,17875261,0,0x0,8
tick,0x7ffdf681f424,17877270,0,0x0,8
tick,0x7ffdf681f424,17879242,0,0x0,8
tick,0x7ffdf681f424,17881253,0,0x0,8
tick,0x7ffdf681f424,17883231,0,0x0,8
tick,0x7ffdf681f424,17885227,0,0x0,8
tick,0x7ffdf681f424,17887226,0,0x0,8
tick,0x7ffdf681f424,17889313,0,0x0,8
tick,0x7ffdf681f424,17891210,0,0x0,8
tick,0x7ffdf681f424,17893215,0,0x0,8
tick,0x7ffdf681f424,17895218,0,0x0,8
tick,0x7ffdf681f424,17897237,0,0x0,8
tick,0x7ffdf681f424,17899087,0,0x0,8
tick,0x7ffdf681f424,17901186,0,0x0,8
tick,0x7ffdf681f424,17903071,0,0x0,8
tick,0x7ffdf681f424,17905222,0,0x0,8
tick,0x7ffdf681f424,17907178,0,0x0,8
tick,0x7ffdf681f424,17909163,0,0x0,8
tick,0x7ffdf681f424,17911168,0,0x0,8
tick,0x7ffdf681f424,17913151,0,0x0,8
tick,0x7ffdf681f424,17915038,0,0x0,8
tick,0x7ffdf681f424,17917147,0,0x0,8
tick,0x7ffdf681f424,17919145,0,0x0,8
tick,0x7ffdf681f424,17921129,0,0x0,8
tick,0x7ffdf681f424,17923123,0,0x0,8
tick,0x7ffdf681f424,17925126,0,0x0,8
tick,0x7ffdf681f424,17927113,0,0x0,8
tick,0x7ffdf681f424,17929109,0,0x0,8
tick,0x7ffdf681f424,17931102,0,0x0,8
tick,0x7ffdf681f424,17933097,0,0x0,8
tick,0x7ffdf681f424,17935085,0,0x0,8
tick,0x7ffdf681f424,17937087,0,0x0,8
tick,0x7ffdf681f424,17939081,0,0x0,8
tick,0x7ffdf681f424,17940981,0,0x0,8
tick,0x7ffdf681f424,17943065,0,0x0,8
tick,0x7ffdf681f424,17945061,0,0x0,8
tick,0x7ffdf681f424,17947060,0,0x0,8
tick,0x7ffdf681f424,17949049,0,0x0,8
tick,0x7ffdf681f424,17951050,0,0x0,8
tick,0x7ffdf681f424,17953061,0,0x0,8
tick,0x7ffdf681f424,17955045,0,0x0,8
tick,0x7ffdf681f424,17957026,0,0x0,8
tick,0x7ffdf681f424,17958925,0,0x0,8
tick,0x7ffdf681f424,17961026,0,0x0,8
tick,0x7ffdf681f424,17962860,0,0x0,8
tick,0x7ffdf681f424,17964977,0,0x0,8
tick,0x7ffdf681f424,17966872,0,0x0,8
tick,0x7ffdf681f424,17968960,0,0x0,8
tick,0x7ffdf681f424,17970993,0,0x0,8
tick,0x7ffdf681f424,17972989,0,0x0,8
tick,0x7ffdf681f424,17974959,0,0x0,8
tick,0x7ffdf681f424,17976845,0,0x0,8
tick,0x7ffdf681f424,17978981,0,0x0,8
tick,0x7ffdf681f424,17980859,0,0x0,8
tick,0x7ffdf681f424,17982859,0,0x0,8
tick,0x7ffdf681f424,17984996,0,0x0,8
tick,0x7ffdf681f424,17986946,0,0x0,8
tick,0x7ffdf681f424,17988869,0,0x0,8
tick,0x7ffdf681f424,17990849,0,0x0,8
tick,0x7ffdf681f424,17992995,0,0x0,8
tick,0x7ffdf681f424,17994936,0,0x0,8
tick,0x7ffdf681f424,17996929,0,0x0,8
tick,0x7ffdf681f424,17998921,0,0x0,8
tick,0x7ffdf681f424,18000929,0,0x0,8
tick,0x7ffdf681f424,18002912,0,0x0,8
tick,0x7ffdf681f424,18004904,0,0x0,8
tick,0x7ffdf681f424,18006880,0,0x0,8
tick,0x7ffdf681f424,18008909,0,0x0,8
tick,0x7ffdf681f424,18010883,0,0x0,8
tick,0x7ffdf681f424,18012885,0,0x0,8
tick,0x7ffdf681f424,18014878,0,0x0,8
tick,0x7ffdf681f424,18016872,0,0x0,8
tick,0x7ffdf681f424,18018866,0,0x0,8
tick,0x7ffdf681f424,18020872,0,0x0,8
tick,0x7ffdf681f424,18022889,0,0x0,8
tick,0x7ffdf681f424,18024852,0,0x0,8
tick,0x7ffdf681f424,18026848,0,0x0,8
tick,0x7ffdf681f424,18028856,0,0x0,8
tick,0x7ffdf681f424,18030835,0,0x0,8
tick,0x7ffdf681f424,18032844,0,0x0,8
tick,0x7ffdf681f424,18034816,0,0x0,8
tick,0x7ffdf681f424,18036829,0,0x0,8
tick,0x7ffdf681f424,18038815,0,0x0,8
tick,0x7ffdf681f424,18040719,0,0x0,8
tick,0x7ffdf681f424,18042809,0,0x0,8
tick,0x7ffdf681f424,18044820,0,0x0,8
tick,0x7ffdf681f424,18046793,0,0x0,8
tick,0x7ffdf681f424,18048787,0,0x0,8
tick,0x7ffdf681f424,18050761,0,0x0,8
tick,0x7ffdf681f424,18052770,0,0x0,8
tick,0x7ffdf681f424,18054771,0,0x0,8
tick,0x7ffdf681f424,18056766,0,0x0,8
tick,0x7ffdf681f424,18058770,0,0x0,8
tick,0x7ffdf681f424,18060759,0,0x0,8
tick,0x7ffdf681f424,18062750,0,0x0,8
tick,0x7ffdf681f424,18064842,0,0x0,8
tick,0x7ffdf681f424,18066768,0,0x0,8
tick,0x7ffdf681f424,18068729,0,0x0,8
tick,0x7ffdf681f424,18070728,0,0x0,8
tick,0x7ffdf681f424,18072734,0,0x0,8
tick,0x7ffdf681f424,18074719,0,0x0,8
tick,0x7ffdf681f424,18076715,0,0x0,8
tick,0x7ffdf681f424,18078719,0,0x0,8
tick,0x7ffdf681f424,18080718,0,0x0,8
tick,0x7ffdf681f424,18082696,0,0x0,8
tick,0x7ffdf681f424,18084695,0,0x0,8
tick,0x7ffdf681f424,18086682,0,0x0,8
tick,0x7ffdf681f424,18088681,0,0x0,8
tick,0x7ffdf681f424,18090726,0,0x0,8
tick,0x7ffdf681f424,18092624,0,0x0,8
tick,0x7ffdf681f424,18094505,0,0x0,8
tick,0x7ffdf681f424,18096622,0,0x0,8
tick,0x7ffdf681f424,18098631,0,0x0,8
tick,0x7ffdf681f424,18100562,0,0x0,8
tick,0x7ffdf681f424,18102639,0,0x0,8
tick,0x7ffdf681f424,18104636,0,0x0,8
tick,0x7ffdf681f424,18106626,0,0x0,8
tick,0x7ffdf681f424,18108520,0,0x0,8
tick,0x7ffdf681f424,18110488,0,0x0,8
tick,0x7ffdf681f424,18112614,0,0x0,8
tick,0x7ffdf681f424,18114605,0,0x0,8
tick,0x7ffdf681f424,18116629,0,0x0,8
tick,0x7ffdf681f424,18118612,0,0x0,8
tick,0x7ffdf681f424,18120555,0,0x0,8
tick,0x7ffdf681f424,18122590,0,0x0,8
tick,0x7ffdf681f424,18124473,0,0x0,8
tick,0x7ffdf681f424,18126566,0,0x0,8
tick,0x7ffdf681f424,18128574,0,0x0,8
tick,0x7ffdf681f424,18130640,0,0x0,8
tick,0x7ffdf681f424,18132477,0,0x0,8
tick,0x7ffdf681f424,18134552,0,0x0,8
tick,0x7ffdf681f424,18136552,0,0x0,8
tick,0x7ffdf681f424,18138560,0,0x0,8
tick,0x7ffdf681f424,18140547,0,0x0,8
tick,0x7ffdf681f424,18142515,0,0x0,8
tick,0x7ffdf681f424,18144531,0,0x0,8
tick,0x7ffdf681f424,18146532,0,0x0,8
tick,0x7ffdf681f424,18148453,0,0x0,8
tick,0x7ffdf681f424,18150515,0,0x0,8
tick,0x7ffdf681f424,18152513,0,0x0,8
tick,0x7ffdf681f424,18154516,0,0x0,8
tick,0x7ffdf681f424,18156494,0,0x0,8
tick,0x7ffdf681f424,18158488,0,0x0,8
tick,0x7ffdf681f424,18160470,0,0x0,8
tick,0x7ffdf681f424,18162486,0,0x0,8
tick,0x7ffdf681f424,18164472,0,0x0,8
tick,0x7ffdf681f424,18166478,0,0x0,8
tick,0x7ffdf681f424,18168467,0,0x0,8
tick,0x7ffdf681f424,18170456,0,0x0,8
tick,0x7ffdf681f424,18172456,0,0x0,8
tick,0x7ffdf681f424,18174443,0,0x0,8
tick,0x7ffdf681f424,18176469,0,0x0,8
tick,0x7ffdf681f424,18178448,0,0x0,8
tick,0x7ffdf681f424,18180437,0,0x0,8
tick,0x7ffdf681f424,18182388,0,0x0,8
tick,0x7ffdf681f424,18184419,0,0x0,8
tick,0x7ffdf681f424,18186411,0,0x0,8
tick,0x7ffdf681f424,18188408,0,0x0,8
tick,0x7ffdf681f424,18190415,0,0x0,8
tick,0x7ffdf681f424,18192403,0,0x0,8
tick,0x7ffdf681f424,18194400,0,0x0,8
tick,0x7ffdf681f424,18196394,0,0x0,8
tick,0x7ffdf681f424,18198381,0,0x0,8
tick,0x7ffdf681f424,18200412,0,0x0,8
tick,0x7ffdf681f424,18202379,0,0x0,8
tick,0x7ffdf681f424,18204353,0,0x0,8
tick,0x7ffdf681f424,18206366,0,0x0,8
tick,0x7ffdf681f424,18208356,0,0x0,8
tick,0x7ffdf681f424,18210355,0,0x0,8
tick,0x7ffdf681f424,18212347,0,0x0,8
tick,0x7ffdf681f424,18214345,0,0x0,8
tick,0x7ffdf681f424,18216340,0,0x0,8
tick,0x7ffdf681f424,18218424,0,0x0,8
tick,0x7ffdf681f424,18220281,0,0x0,8
tick,0x7ffdf681f424,18222281,0,0x0,8
tick,0x7ffdf681f424,18224214,0,0x0,8
tick,0x7ffdf681f424,18226292,0,0x0,8
tick,0x7ffdf681f424,18228210,0,0x0,8
tick,0x7ffdf681f424,18230341,0,0x0,8
tick,0x7ffdf681f424,18232348,0,0x0,8
tick,0x7ffdf681f424,18234203,0,0x0,8
tick,0x7ffdf681f424,18236306,0,0x0,8
tick,0x7ffdf681f424,18238246,0,0x0,8
tick,0x7ffdf681f424,18240280,0,0x0,8
tick,0x7ffdf681f424,18242181,0,0x0,8
tick,0x7ffdf681f424,18244277,0,0x0,8
tick,0x7ffdf681f424,18246166,0,0x0,8
tick,0x7ffdf681f424,18248116,0,0x0,8
tick,0x7ffdf681f424,18250183,0,0x0,8
tick,0x7ffdf681f424,18252223,0,0x0,8
tick,0x7ffdf681f424,18254213,0,0x0,8
tick,0x7ffdf681f424,18256235,0,0x0,8
tick,0x7ffdf681f424,18258190,0,0x0,8
tick,0x7ffdf681f424,18260224,0,0x0,8
tick,0x7ffdf681f424,18262235,0,0x0,8
tick,0x7ffdf681f424,18264212,0,0x0,8
tick,0x7ffdf681f424,18266100,0,0x0,8
tick,0x7ffdf681f424,18268207,0,0x0,8
tick,0x7ffdf681f424,18270182,0,0x0,8
tick,0x7ffdf681f424,18272231,0,0x0,8
tick,0x7ffdf681f424,18274114,0,0x0,8
tick,0x7ffdf681f424,18276187,0,0x0,8
tick,0x7ffdf681f424,18278181,0,0x0,8
tick,0x7ffdf681f424,18280182,0,0x0,8
tick,0x7ffdf681f424,18282188,0,0x0,8
tick,0x7ffdf681f424,18284164,0,0x0,8
tick,0x7ffdf681f424,18286159,0,0x0,8
tick,0x7ffdf681f424,18288154,0,0x0,8
tick,0x7ffdf681f424,18290144,0,0x0,8
tick,0x7ffdf681f424,18292212,0,0x0,8
tick,0x7ffdf681f424,18294141,0,0x0,8
tick,0x7ffdf681f424,18296128,0,0x0,8
tick,0x7ffdf681f424,18298128,0,0x0,8
tick,0x7ffdf681f424,18300124,0,0x0,8
tick,0x7ffdf681f424,18302116,0,0x0,8
tick,0x7ffdf681f424,18304106,0,0x0,8
tick,0x7ffdf681f424,18306192,0,0x0,8
tick,0x7ffdf681f424,18308143,0,0x0,8
tick,0x7ffdf681f424,18310099,0,0x0,8
tick,0x7ffdf681f424,18312091,0,0x0,8
tick,0x7ffdf681f424,18314094,0,0x0,8
tick,0x7ffdf681f424,18315972,0,0x0,8
tick,0x7ffdf681f424,18318068,0,0x0,8
tick,0x7ffdf681f424,18319962,0,0x0,8
tick,0x7ffdf681f424,18322059,0,0x0,8
tick,0x7ffdf681f424,18324059,0,0x0,8
tick,0x7ffdf681f424,18326072,0,0x0,8
tick,0x7ffdf681f424,18328112,0,0x0,8
tick,0x7ffdf681f424,18330057,0,0x0,8
tick,0x7ffdf681f424,18332024,0,0x0,8
tick,0x7ffdf681f424,18334032,0,0x0,8
tick,0x7ffdf681f424,18335999,0,0x0,8
tick,0x7ffdf681f424,18338013,0,0x0,8
tick,0x7ffdf681f424,18340002,0,0x0,8
tick,0x7ffdf681f424,18342003,0,0x0,8
tick,0x7ffdf681f424,18344005,0,0x0,8
tick,0x7ffdf681f424,18345984,0,0x0,8
tick,0x7ffdf681f424,18347989,0,0x0,8
tick,0x7ffdf681f424,18350054,0,0x0,8
tick,0x7ffdf681f424,18352036,0,0x0,8
tick,0x7ffdf681f424,18353942,0,0x0,8
tick,0x7ffdf681f424,18355831,0,0x0,8
tick,0x7ffdf681f424,18357870,0,0x0,8
tick,0x7ffdf681f424,18359919,0,0x0,8
tick,0x7ffdf681f424,18361947,0,0x0,8
tick,0x7ffdf681f424,18363968,0,0x0,8
tick,0x7ffdf681f424,18365857,0,0x0,8
tick,0x7ffdf681f424,18367880,0,0x0,8
tick,0x7ffdf681f424,18369792,0,0x0,8
tick,0x7ffdf681f424,18371920,0,0x0,8
tick,0x7ffdf681f424,18373922,0,0x0,8
tick,0x7ffdf681f424,18375861,0,0x0,8
tick,0x7ffdf681f424,18377930,0,0x0,8
tick,0x7ffdf681f424,18379916,0,0x0,8
tick,0x7ffdf681f424,18381896,0,0x0,8
tick,0x7ffdf681f424,18383886,0,0x0,8
tick,0x7ffdf681f424,18385792,0,0x0,8
tick,0x7ffdf681f424,18387874,0,0x0,8
tick,0x7ffdf681f424,18389875,0,0x0,8
tick,0x7ffdf681f424,18391865,0,0x0,8
tick,0x7ffdf681f424,18393865,0,0x0,8
tick,0x7ffdf681f424,18395859,0,0x0,8
tick,0x7ffdf681f424,18397854,0,0x0,8
tick,0x7ffdf681f424,18399861,0,0x0,8
tick,0x7ffdf681f424,18401852,0,0x0,8
tick,0x7ffdf681f424,18403846,0,0x0,8
tick,0x7ffdf681f424,18405827,0,0x0,8
tick,0x7ffdf681f424,18407798,0,0x0,8
tick,0x7ffdf681f424,18409824,0,0x0,8
tick,0x7ffdf681f424,18411819,0,0x0,8
tick,0x7ffdf681f424,18413805,0,0x0,8
tick,0x7ffdf681f424,18415668,0,0x0,8
tick,0x7ffdf681f424,18417797,0,0x0,8
tick,0x7ffdf681f424,18419795,0,0x0,8
tick,0x7ffdf681f424,18421784,0,0x0,8
tick,0x7ffdf681f424,18423809,0,0x0,8
tick,0x7ffdf681f424,18425779,0,0x0,8
tick,0x7ffdf681f424,18427777,0,0x0,8
tick,0x7ffdf681f424,18429769,0,0x0,8
tick,0x7ffdf681f424,18431764,0,0x0,8
tick,0x7ffdf681f424,18433751,0,0x0,8
tick,0x7ffdf681f424,18435754,0,0x0,8
tick,0x7ffdf681f424,18437745,0,0x0,8
tick,0x7ffdf681f424,18439737,0,0x0,8
tick,0x7ffdf681f424,18441739,0,0x0,8
tick,0x7ffdf681f424,18443733,0,0x0,8
tick,0x7ffdf681f424,18445738,0,0x0,8
tick,0x7ffdf681f424,18447730,0,0x0,8
tick,0x7ffdf681f424,18449718,0,0x0,8
tick,0x7ffdf681f424,18451704,0,0x0,8
tick,0x7ffdf681f424,18453704,0,0x0,8
tick,0x7ffdf681f424,18455699,0,0x0,8
tick,0x7ffdf681f424,18457585,0,0x0,8
tick,0x7ffdf681f424,18459761,0,0x0,8
tick,0x7ffdf681f424,18461705,0,0x0,8
tick,0x7ffdf681f424,18463680,0,0x0,8
tick,0x7ffdf681f424,18465667,0,0x0,8
tick,0x7ffdf681f424,18467680,0,0x0,8
tick,0x7ffdf681f424,18469656,0,0x0,8
tick,0x7ffdf681f424,18471657,0,0x0,8
tick,0x7ffdf681f424,18473649,0,0x0,8
tick,0x7ffdf681f424,18475648,0,0x0,8
tick,0x7ffdf681f424,18477641,0,0x0,8
tick,0x7ffdf681f424,18479641,0,0x0,8
tick,0x7ffdf681f424,18481656,0,0x0,8
tick,0x7ffdf681f424,18483569,0,0x0,8
tick,0x7ffdf681f424,18485586,0,0x0,8
tick,0x7ffdf681f424,18487576,0,0x0,8
tick,0x7ffdf681f424,18489540,0,0x0,8
tick,0x7ffdf681f424,18491624,0,0x0,8
tick,0x7ffdf681f424,18493531,0,0x0,8
tick,0x7ffdf681f424,18495560,0,0x0,8
tick,0x7ffdf681f424,18497546,0,0x0,8
tick,0x7ffdf681f424,18499558,0,0x0,8
tick,0x7ffdf681f424,18501602,0,0x0,8
tick,0x7ffdf681f424,18503580,0,0x0,8
tick,0x7ffdf681f424,18505572,0,0x0,8
tick,0x7ffdf681f424,18507472,0,0x0,8
tick,0x7ffdf681f424,18509550,0,0x0,8
tick,0x7ffdf681f424,18511563,0,0x0,8
tick,0x7ffdf681f424,18513547,0,0x0,8
tick,0x7ffdf681f424,18515541,0,0x0,8
tick,0x7ffdf681f424,18517528,0,0x0,8
tick,0x7ffdf681f424,18519523,0,0x0,8
tick,0x7ffdf681f424,18521525,0,0x0,8
tick,0x7ffdf681f424,18523515,0,0x0,8
tick,0x7ffdf681f424,18525517,0,0x0,8
tick,0x7ffdf681f424,18527555,0,0x0,8
tick,0x7ffdf681f424,18529502,0,0x0,8
tick,0x7ffdf681f424,18531512,0,0x0,8
tick,0x7ffdf681f424,18533526,0,0x0,8
tick,0x7ffdf681f424,18535486,0,0x0,8
tick,0x7ffdf681f424,18537483,0,0x0,8
tick,0x7ffdf681f424,18539469,0,0x0,8
tick,0x7ffdf681f424,18541470,0,0x0,8
tick,0x7ffdf681f424,18543470,0,0x0,8
tick,0x7ffdf681f424,18545462,0,0x0,8
tick,0x7ffdf681f424,18547531,0,0x0,8
tick,0x7ffdf681f424,18549371,0,0x0,8
tick,0x7ffdf681f424,18551443,0,0x0,8
tick,0x7ffdf681f424,18553437,0,0x0,8
tick,0x7ffdf681f424,18555444,0,0x0,8
tick,0x7ffdf681f424,18557440,0,0x0,8
tick,0x7ffdf681f424,18559422,0,0x0,8
tick,0x7ffdf681f424,18561411,0,0x0,8
tick,0x7ffdf681f424,18563405,0,0x0,8
tick,0x7ffdf681f424,18565406,0,0x0,8
tick,0x7ffdf681f424,18567408,0,0x0,8
tick,0x7ffdf681f424,18569461,0,0x0,8
tick,0x7ffdf681f424,18571422,0,0x0,8
tick,0x7ffdf681f424,18573378,0,0x0,8
tick,0x7ffdf681f424,18575380,0,0x0,8
tick,0x7ffdf681f424,18577385,0,0x0,8
tick,0x7ffdf681f424,18579368,0,0x0,8
tick,0x7ffdf681f424,18581362,0,0x0,8
tick,0x7ffdf681f424,18583357,0,0x0,8
tick,0x7ffdf681f424,18585360,0,0x0,8
tick,0x7ffdf681f424,18587346,0,0x0,8
tick,0x7ffdf681f424,18589346,0,0x0,8
tick,0x7ffdf681f424,18591334,0,0x0,8
tick,0x7ffdf681f424,18593376,0,0x0,8
tick,0x7ffdf681f424,18595348,0,0x0,8
tick,0x7ffdf681f424,18597336,0,0x0,8
tick,0x7ffdf681f424,18599306,0,0x0,8
tick,0x7ffdf681f424,18601312,0,0x0,8
tick,0x7ffdf681f424,18603299,0,0x0,8
tick,0x7ffdf681f424,18605305,0,0x0,8
tick,0x7ffdf681f424,18607294,0,0x0,8
tick,0x7ffdf681f424,18609299,0,0x0,8
tick,0x7ffdf681f424,18611194,0,0x0,8
tick,0x7ffdf681f424,18613186,0,0x0,8
tick,0x7ffdf681f424,18615116,0,0x0,8
tick,0x7ffdf681f424,18617178,0,0x0,8
tick,0x7ffdf681f424,18619382,0,0x0,8
tick,0x7ffdf681f424,18621340,0,0x0,8
tick,0x7ffdf681f424,18623246,0,0x0,8
tick,0x7ffdf681f424,18625151,0,0x0,8
tick,0x7ffdf681f424,18627106,0,0x0,8
tick,0x7ffdf681f424,18629251,0,0x0,8
tick,0x7ffdf681f424,18631124,0,0x0,8
tick,0x7ffdf681f424,18633110,0,0x0,8
tick,0x7ffdf681f424,18635243,0,0x0,8
tick,0x7ffdf681f424,18637204,0,0x0,8
tick,0x7ffdf681f424,18639212,0,0x0,8
tick,0x7ffdf681f424,18641097,0,0x0,8
tick,0x7ffdf681f424,18643214,0,0x0,8
tick,0x7ffdf681f424,18645223,0,0x0,8
tick,0x7ffdf681f424,18647181,0,0x0,8
tick,0x7ffdf681f424,18649135,0,0x0,8
tick,0x7ffdf681f424,18651171,0,0x0,8
tick,0x7ffdf681f424,18653172,0,0x0,8
tick,0x7ffdf681f424,18655165,0,0x0,8
tick,0x7ffdf681f424,18657172,0,0x0,8
tick,0x7ffdf681f424,18659183,0,0x0,8
tick,0x7ffdf681f424,18661150,0,0x0,8
tick,0x7ffdf681f424,18663139,0,0x0,8
tick,0x7ffdf681f424,18665147,0,0x0,8
tick,0x7ffdf681f424,18667137,0,0x0,8
tick,0x7ffdf681f424,18669124,0,0x0,8
tick,0x7ffdf681f424,18671118,0,0x0,8
tick,0x7ffdf681f424,18673120,0,0x0,8
tick,0x7ffdf681f424,18675112,0,0x0,8
tick,0x7ffdf681f424,18677107,0,0x0,8
tick,0x7ffdf681f424,18679102,0,0x0,8
tick,0x7ffdf681f424,18681092,0,0x0,8
tick,0x7ffdf681f424,18683098,0,0x0,8
tick,0x7ffdf681f424,18685036,0,0x0,8
tick,0x7ffdf681f424,18687103,0,0x0,8
tick,0x7ffdf681f424,18688973,0,0x0,8
tick,0x7ffdf681f424,18690994,0,0x0,8
tick,0x7ffdf681f424,18693059,0,0x0,8
tick,0x7ffdf681f424,18695066,0,0x0,8
tick,0x7ffdf681f424,18697063,0,0x0,8
tick,0x7ffdf681f424,18698942,0,0x0,8
tick,0x7ffdf681f424,18701083,0,0x0,8
tick,0x7ffdf681f424,18703064,0,0x0,8
tick,0x7ffdf681f424,18705037,0,0x0,8
tick,0x7ffdf681f424,18707032,0,0x0,8
tick,0x7ffdf681f424,18709037,0,0x0,8
tick,0x7ffdf681f424,18711014,0,0x0,8
tick,0x7ffdf681f424,18713011,0,0x0,8
tick,0x7ffdf681f424,18715005,0,0x0,8
tick,0x7ffdf681f424,18717000,0,0x0,8
tick,0x7ffdf681f424,18718994,0,0x0,8
tick,0x7ffdf681f424,18720996,0,0x0,8
tick,0x7ffdf681f424,18722981,0,0x0,8
tick,0x7ffdf681f424,18724974,0,0x0,8
tick,0x7ffdf681f424,18726974,0,0x0,8
tick,0x7ffdf681f424,18728971,0,0x0,8
tick,0x7ffdf681f424,18730984,0,0x0,8
tick,0x7ffdf681f424,18732960,0,0x0,8
tick,0x7ffdf681f424,18734963,0,0x0,8
tick,0x7ffdf681f424,18736950,0,0x0,8
tick,0x7ffdf681f424,18738941,0,0x0,8
tick,0x7ffdf681f424,18740942,0,0x0,8
tick,0x7ffdf681f424,18742992,0,0x0,8
tick,0x7ffdf681f424,18744831,0,0x0,8
tick,0x7ffdf681f424,18746758,0,0x0,8
tick,0x7ffdf681f424,18748913,0,0x0,8
tick,0x7ffdf681f424,18750828,0,0x0,8
tick,0x7ffdf681f424,18752906,0,0x0,8
tick,0x7ffdf681f424,18754915,0,0x0,8
tick,0x7ffdf681f424,18756890,0,0x0,8
tick,0x7ffdf681f424,18758878,0,0x0,8
tick,0x7ffdf681f424,18760831,0,0x0,8
tick,0x7ffdf681f424,18762838,0,0x0,8
tick,0x7ffdf681f424,18764873,0,0x0,8
tick,0x7ffdf681f424,18766793,0,0x0,8
tick,0x7ffdf681f424,18768898,0,0x0,8
tick,0x7ffdf681f424,18770857,0,0x0,8
tick,0x7ffdf681f424,18772883,0,0x0,8
tick,0x7ffdf681f424,18774746,0,0x0,8
tick,0x7ffdf681f424,18776834,0,0x0,8
tick,0x7ffdf681f424,18778829,0,0x0,8
tick,0x7ffdf681f424,18780876,0,0x0,8
tick,0x7ffdf681f424,18782698,0,0x0,8
tick,0x7ffdf681f424,18784815,0,0x0,8
tick,0x7ffdf681f424,18786816,0,0x0,8
tick,0x7ffdf681f424,18788826,0,0x0,8
tick,0x7ffdf681f424,18790804,0,0x0,8
tick,0x7ffdf681f424,18792800,0,0x0,8
tick,0x7ffdf681f424,18794799,0,0x0,8
tick,0x7ffdf681f424,18796796,0,0x0,8
tick,0x7ffdf681f424,18798782,0,0x0,8
tick,0x7ffdf681f424,18800773,0,0x0,8
tick,0x7ffdf681f424,18802770,0,0x0,8
tick,0x7ffdf681f424,18804766,0,0x0,8
tick,0x7ffdf681f424,18806773,0,0x0,8
tick,0x7ffdf681f424,18808749,0,0x0,8
tick,0x7ffdf681f424,18810753,0,0x0,8
tick,0x7ffdf681f424,18812780,0,0x0,8
tick,0x7ffdf681f424,18814616,0,0x0,8
tick,0x7ffdf681f424,18816595,0,0x0,8
tick,0x7ffdf681f424,18818631,0,0x0,8
tick,0x7ffdf681f424,18820593,0,0x0,8
tick,0x7ffdf681f424,18822713,0,0x0,8
tick,0x7ffdf681f424,18824720,0,0x0,8
tick,0x7ffdf681f424,18826701,0,0x0,8
tick,0x7ffdf681f424,18828703,0,0x0,8
tick,0x7ffdf681f424,18830697,0,0x0,8
tick,0x7ffdf681f424,18832605,0,0x0,8
tick,0x7ffdf681f424,18834717,0,0x0,8
tick,0x7ffdf681f424,18836679,0,0x0,8
tick,0x7ffdf681f424,18838675,0,0x0,8
tick,0x7ffdf681f424,18840690,0,0x0,8
tick,0x7ffdf681f424,18842674,0,0x0,8
tick,0x7ffdf681f424,18844654,0,0x0,8
tick,0x7ffdf681f424,18846648,0,0x0,8
tick,0x7ffdf681f424,18848648,0,0x0,8
tick,0x7ffdf681f424,18850648,0,0x0,8
tick,0x7ffdf681f424,18852638,0,0x0,8
tick,0x7ffdf681f424,18854645,0,0x0,8
tick,0x7ffdf681f424,18856618,0,0x0,8
tick,0x7ffdf681f424,18858624,0,0x0,8
tick,0x7ffdf681f424,18860621,0,0x0,8
tick,0x7ffdf681f424,18862621,0,0x0,8
tick,0x7ffdf681f424,18864608,0,0x0,8
tick,0x7ffdf681f424,18866597,0,0x0,8
tick,0x7ffdf681f424,18868601,0,0x0,8
tick,0x7ffdf681f424,18870597,0,0x0,8
tick,0x7ffdf681f424,18872660,0,0x0,8
tick,0x7ffdf681f424,18874513,0,0x0,8
tick,0x7ffdf681f424,18876414,0,0x0,8
tick,0x7ffdf681f424,18878539,0,0x0,8
tick,0x7ffdf681f424,18880429,0,0x0,8
tick,0x7ffdf681f424,18882498,0,0x0,8
tick,0x7ffdf681f424,18884512,0,0x0,8
tick,0x7ffdf681f424,18886520,0,0x0,8
tick,0x7ffdf681f424,18888501,0,0x0,8
tick,0x7ffdf681f424,18890527,0,0x0,8
tick,0x7ffdf681f424,18892430,0,0x0,8
tick,0x7ffdf681f424,18894526,0,0x0,8
tick,0x7ffdf681f424,18896517,0,0x0,8
tick,0x7ffdf681f424,18898544,0,0x0,8
tick,0x7ffdf681f424,18900400,0,0x0,8
tick,0x7ffdf681f424,18902416,0,0x0,8
tick,0x7ffdf681f424,18904499,0,0x0,8
tick,0x7ffdf681f424,18906502,0,0x0,8
tick,0x7ffdf681f424,18908398,0,0x0,8
tick,0x7ffdf681f424,18910385,0,0x0,8
tick,0x7ffdf681f424,18912475,0,0x0,8
tick,0x7ffdf681f424,18914494,0,0x0,8
tick,0x7ffdf681f424,18916396,0,0x0,8
tick,0x7ffdf681f424,18918462,0,0x0,8
tick,0x7ffdf681f424,18920500,0,0x0,8
tick,0x7ffdf681f424,18922476,0,0x0,8
tick,0x7ffdf681f424,18924359,0,0x0,8
tick,0x7ffdf681f424,18926447,0,0x0,8
tick,0x7ffdf681f424,18928454,0,0x0,8
tick,0x7ffdf681f424,18930429,0,0x0,8
tick,0x7ffdf681f424,18932431,0,0x0,8
tick,0x7ffdf681f424,18934419,0,0x0,8
tick,0x7ffdf681f424,18936447,0,0x0,8
tick,0x7ffdf681f424,18938305,0,0x0,8
tick,0x7ffdf681f424,18940398,0,0x0,8
tick,0x7ffdf681f424,18942399,0,0x0,8
tick,0x7ffdf681f424,18944386,0,0x0,8
tick,0x7ffdf681f424,18946390,0,0x0,8
tick,0x7ffdf681f424,18948401,0,0x0,8
tick,0x7ffdf681f424,18950384,0,0x0,8
tick,0x7ffdf681f424,18952374,0,0x0,8
tick,0x7ffdf681f424,18954369,0,0x0,8
tick,0x7ffdf681f424,18956360,0,0x0,8
tick,0x7ffdf681f424,18958356,0,0x0,8
tick,0x7ffdf681f424,18960352,0,0x0,8
tick,0x7ffdf681f424,18962339,0,0x0,8
tick,0x7ffdf681f424,18964421,0,0x0,8
tick,0x7ffdf681f424,18966361,0,0x0,8
tick,0x7ffdf681f424,18968328,0,0x0,8
tick,0x7ffdf681f424,18970322,0,0x0,8
tick,0x7ffdf681f424,18972324,0,0x0,8
tick,0x7ffdf681f424,18974209,0,0x0,8
tick,0x7ffdf681f424,18976307,0,0x0,8
tick,0x7ffdf681f424,18978310,0,0x0,8
tick,0x7ffdf681f424,18980297,0,0x0,8
tick,0x7ffdf681f424,18982291,0,0x0,8
tick,0x7ffdf681f424,18984259,0,0x0,8
tick,0x7ffdf681f424,18986349,0,0x0,8
tick,0x7ffdf681f424,18988302,0,0x0,8
tick,0x7ffdf681f424,18990288,0,0x0,8
tick,0x7ffdf681f424,18992301,0,0x0,8
tick,0x7ffdf681f424,18994266,0,0x0,8
tick,0x7ffdf681f424,18996253,0,0x0,8
tick,0x7ffdf681f424,18998242,0,0x0,8
tick,0x7ffdf681f424,19000242,0,0x0,8
tick,0x7ffdf681f424,19002127,0,0x0,8
tick,0x7ffdf681f424,19004236,0,0x0,8
tick,0x7ffdf681f424,19006071,0,0x0,8
tick,0x7ffdf681f424,19008103,0,0x0,8
tick,0x7ffdf681f424,19010184,0,0x0,8
tick,0x7ffdf681f424,19012176,0,0x0,8
tick,0x7ffdf681f424,19014218,0,0x0,8
tick,0x7ffdf681f424,19016177,0,0x0,8
tick,0x7ffdf681f424,19018037,0,0x0,8
tick,0x7ffdf681f424,19020102,0,0x0,8
tick,0x7ffdf681f424,19022133,0,0x0,8
tick,0x7ffdf681f424,19024184,0,0x0,8
tick,0x7ffdf681f424,19026157,0,0x0,8
tick,0x7ffdf681f424,19028195,0,0x0,8
tick,0x7ffdf681f424,19030166,0,0x0,8
tick,0x7ffdf681f424,19032152,0,0x0,8
tick,0x7ffdf681f424,19034147,0,0x0,8
tick,0x7ffdf681f424,19036147,0,0x0,8
tick,0x7ffdf681f424,19038157,0,0x0,8
tick,0x7ffdf681f424,19040144,0,0x0,8
tick,0x7ffdf681f424,19042132,0,0x0,8
tick,0x7ffdf681f424,19044131,0,0x0,8
tick,0x7ffdf681f424,19046121,0,0x0,8
tick,0x7ffdf681f424,19048004,0,0x0,8
tick,0x7ffdf681f424,19050112,0,0x0,8
tick,0x7ffdf681f424,19052101,0,0x0,8
tick,0x7ffdf681f424,19054094,0,0x0,8
tick,0x7ffdf681f424,19056101,0,0x0,8
tick,0x7ffdf681f424,19058089,0,0x0,8
tick,0x7ffdf681f424,19060091,0,0x0,8
tick,0x7ffdf681f424,19062080,0,0x0,8
tick,0x7ffdf681f424,19064067,0,0x0,8
tick,0x7ffdf681f424,19065959,0,0x0,8
tick,0x7ffdf681f424,19068061,0,0x0,8
tick,0x7ffdf681f424,19070056,0,0x0,8
tick,0x7ffdf681f424,19072053,0,0x0,8
tick,0x7ffdf681f424,19074042,0,0x0,8
tick,0x7ffdf681f424,19076068,0,0x0,8
tick,0x7ffdf681f424,19078041,0,0x0,8
tick,0x7ffdf681f424,19080032,0,0x0,8
tick,0x7ffdf681f424,19082033,0,0x0,8
tick,0x7ffdf681f424,19084019,0,0x0,8
tick,0x7ffdf681f424,19086027,0,0x0,8
tick,0x7ffdf681f424,19088013,0,0x0,8
tick,0x7ffdf681f424,19090044,0,0x0,8
tick,0x7ffdf681f424,19092004,0,0x0,8
tick,0x7ffdf681f424,19093987,0,0x0,8
tick,0x7ffdf681f424,19095983,0,0x0,8
tick,0x7ffdf681f424,19097976,0,0x0,8
tick,0x7ffdf681f424,19100018,0,0x0,8
tick,0x7ffdf681f424,19101970,0,0x0,8
tick,0x7ffdf681f424,19103972,0,0x0,8
tick,0x7ffdf681f424,19105962,0,0x0,8
tick,0x7ffdf681f424,19107927,0,0x0,8
tick,0x7ffdf681f424,19109950,0,0x0,8
tick,0x7ffdf681f424,19111936,0,0x0,8
tick,0x7ffdf681f424,19113943,0,0x0,8
tick,0x7ffdf681f424,19115934,0,0x0,8
tick,0x7ffdf681f424,19117993,0,0x0,8
tick,0x7ffdf681f424,19119941,0,0x0,8
tick,0x7ffdf681f424,19121927,0,0x0,8
tick,0x7ffdf681f424,19123923,0,0x0,8
tick,0x7ffdf681f424,19125920,0,0x0,8
tick,0x7ffdf681f424,19127908,0,0x0,8
tick,0x7ffdf681f424,19129898,0,0x0,8
tick,0x7ffdf681f424,19131906,0,0x0,8
tick,0x7ffdf681f424,19133939,0,0x0,8
tick,0x7ffdf681f424,19135866,0,0x0,8
tick,0x7ffdf681f424,19137712,0,0x0,8
tick,0x7ffdf681f424,19139854,0,0x0,8
tick,0x7ffdf681f424,19141840,0,0x0,8
tick,0x7ffdf681f424,19143894,0,0x0,8
tick,0x7ffdf681f424,19145860,0,0x0,8
tick,0x7ffdf681f424,19147899,0,0x0,8
tick,0x7ffdf681f424,19149804,0,0x0,8
tick,0x7ffdf681f424,19151723,0,0x0,8
tick,0x7ffdf681f424,19153800,0,0x0,8
tick,0x7ffdf681f424,19155833,0,0x0,8
tick,0x7ffdf681f424,19157718,0,0x0,8
tick,0x7ffdf681f424,19159740,0,0x0,8
tick,0x7ffdf681f424,19161811,0,0x0,8
tick,0x7ffdf681f424,19163808,0,0x0,8
tick,0x7ffdf681f424,19165812,0,0x0,8
tick,0x7ffdf681f424,19167797,0,0x0,8
tick,0x7ffdf681f424,19169803,0,0x0,8
tick,0x7ffdf681f424,19171792,0,0x0,8
tick,0x7ffdf681f424,19173784,0,0x0,8
tick,0x7ffdf681f424,19175781,0,0x0,8
tick,0x7ffdf681f424,19177772,0,0x0,8
tick,0x7ffdf681f424,19179764,0,0x0,8
tick,0x7ffdf681f424,19181803,0,0x0,8
tick,0x7ffdf681f424,19183765,0,0x0,8
tick,0x7ffdf681f424,19185779,0,0x0,8
tick,0x7ffdf681f424,19187749,0,0x0,8
tick,0x7ffdf681f424,19189754,0,0x0,8
tick,0x7ffdf681f424,19191746,0,0x0,8
tick,0x7ffdf681f424,19193732,0,0x0,8
tick,0x7ffdf681f424,19195722,0,0x0,8
tick,0x7ffdf681f424,19197716,0,0x0,8
tick,0x7ffdf681f424,19199716,0,0x0,8
tick,0x7ffdf681f424,19201709,0,0x0,8
tick,0x7ffdf681f424,19203707,0,0x0,8
tick,0x7ffdf681f424,19205788,0,0x0,8
tick,0x7ffdf681f424,19207589,0,0x0,8
tick,0x7ffdf681f424,19209701,0,0x0,8
tick,0x7ffdf681f424,19211685,0,0x0,8
tick,0x7ffdf681f424,19213689,0,0x0,8
tick,0x7ffdf681f424,19215674,0,0x0,8
tick,0x7ffdf681f424,19217662,0,0x0,8
tick,0x7ffdf681f424,19219663,0,0x0,8
tick,0x7ffdf681f424,19221651,0,0x0,8
tick,0x7ffdf681f424,19223651,0,0x0,8
tick,0x7ffdf681f424,19225640,0,0x0,8
tick,0x7ffdf681f424,19227717,0,0x0,8
tick,0x7ffdf681f424,19229656,0,0x0,8
tick,0x7ffdf681f424,19231619,0,0x0,8
tick,0x7ffdf681f424,19233619,0,0x0,8
tick,0x7ffdf681f424,19235629,0,0x0,8
tick,0x7ffdf681f424,19237609,0,0x0,8
tick,0x7ffdf681f424,19239606,0,0x0,8
tick,0x7ffdf681f424,19241599,0,0x0,8
tick,0x7ffdf681f424,19243600,0,0x0,8
tick,0x7ffdf681f424,19245617,0,0x0,8
tick,0x7ffdf681f424,19247584,0,0x0,8
tick,0x7ffdf681f424,19249646,0,0x0,8
tick,0x7ffdf681f424,19251609,0,0x0,8
tick,0x7ffdf681f424,19253572,0,0x0,8
tick,0x7ffdf681f424,19255557,0,0x0,8
tick,0x7ffdf681f424,19257563,0,0x0,8
tick,0x7ffdf681f424,19259550,0,0x0,8
tick,0x7ffdf681f424,19261539,0,0x0,8
tick,0x7ffdf681f424,19263401,0,0x0,8
tick,0x7ffdf681f424,19265492,0,0x0,8
tick,0x7ffdf681f424,19267420,0,0x0,8
tick,0x7ffdf681f424,19269519,0,0x0,8
tick,0x7ffdf681f424,19271508,0,0x0,8
tick,0x7ffdf681f424,19273571,0,0x0,8
tick,0x7ffdf681f424,19275465,0,0x0,8
tick,0x7ffdf681f424,19277418,0,0x0,8
tick,0x7ffdf681f424,19279384,0,0x0,8
tick,0x7ffdf681f424,19281458,0,0x0,8
tick,0x7ffdf681f424,19283463,0,0x0,8
tick,0x7ffdf681f424,19285477,0,0x0,8
tick,0x7ffdf681f424,19287484,0,0x0,8
tick,0x7ffdf681f424,19289494,0,0x0,8
tick,0x7ffdf681f424,19291407,0,0x0,8
tick,0x7ffdf681f424,19293397,0,0x0,8
tick,0x7ffdf681f424,19295448,0,0x0,8
tick,0x7ffdf681f424,19297455,0,0x0,8
tick,0x7ffdf681f424,19299334,0,0x0,8
tick,0x7ffdf681f424,19301444,0,0x0,8
tick,0x7ffdf681f424,19303435,0,0x0,8
tick,0x7ffdf681f424,19305430,0,0x0,8
tick,0x7ffdf681f424,19307415,0,0x0,8
tick,0x7ffdf681f424,19309411,0,0x0,8
tick,0x7ffdf681f424,19311414,0,0x0,8
tick,0x7ffdf681f424,19313407,0,0x0,8
tick,0x7ffdf681f424,19315491,0,0x0,8
tick,0x7ffdf681f424,19317425,0,0x0,8
tick,0x7ffdf681f424,19319389,0,0x0,8
tick,0x7ffdf681f424,19321384,0,0x0,8
tick,0x7ffdf681f424,19323387,0,0x0,8
tick,0x7ffdf681f424,19325373,0,0x0,8
tick,0x7ffdf681f424,19327362,0,0x0,8
tick,0x7ffdf681f424,19329367,0,0x0,8
tick,0x7ffdf681f424,19331358,0,0x0,8
tick,0x7ffdf681f424,19333353,0,0x0,8
tick,0x7ffdf681f424,19335345,0,0x0,8
tick,0x7ffdf681f424,19337345,0,0x0,8
tick,0x7ffdf681f424,19339336,0,0x0,8
tick,0x7ffdf681f424,19341268,0,0x0,8
tick,0x7ffdf681f424,19343317,0,0x0,8
tick,0x7ffdf681f424,19345359,0,0x0,8
tick,0x7ffdf681f424,19347320,0,0x0,8
tick,0x7ffdf681f424,19349254,0,0x0,8
tick,0x7ffdf681f424,19351304,0,0x0,8
tick,0x7ffdf681f424,19353296,0,0x0,8
tick,0x7ffdf681f424,19355288,0,0x0,8
tick,0x7ffdf681f424,19357288,0,0x0,8
tick,0x7ffdf681f424,19359290,0,0x0,8
tick,0x7ffdf681f424,19361289,0,0x0,8
tick,0x7ffdf681f424,19363300,0,0x0,8
tick,0x7ffdf681f424,19365272,0,0x0,8
tick,0x7ffdf681f424,19367291,0,0x0,8
tick,0x7ffdf681f424,19369258,0,0x0,8
tick,0x7ffdf681f424,19371142,0,0x0,8
tick,0x7ffdf681f424,19373128,0,0x0,8
tick,0x7ffdf681f424,19375133,0,0x0,8
tick,0x7ffdf681f424,19377235,0,0x0,8
tick,0x7ffdf681f424,19379229,0,0x0,8
tick,0x7ffdf681f424,19381229,0,0x0,8
tick,0x7ffdf681f424,19383214,0,0x0,8
tick,0x7ffdf681f424,19385163,0,0x0,8
tick,0x7ffdf681f424,19387222,0,0x0,8
tick,0x7ffdf681f424,19389190,0,0x0,8
tick,0x7ffdf681f424,19391197,0,0x0,8
tick,0x7ffdf681f424,19393199,0,0x0,8
tick,0x7ffdf681f424,19395254,0,0x0,8
tick,0x7ffdf681f424,19397096,0,0x0,8
tick,0x7ffdf681f424,19399011,0,0x0,8
tick,0x7ffdf681f424,19401005,0,0x0,8
tick,0x7ffdf681f424,19403078,0,0x0,8
tick,0x7ffdf681f424,19405159,0,0x0,8
tick,0x7ffdf681f424,19407080,0,0x0,8
tick,0x7ffdf681f424,19409119,0,0x0,8
tick,0x7ffdf681f424,19411033,0,0x0,8
tick,0x7ffdf681f424,19413099,0,0x0,8
tick,0x7ffdf681f424,19415033,0,0x0,8
tick,0x7ffdf681f424,19417072,0,0x0,8
tick,0x7ffdf681f424,19419124,0,0x0,8
tick,0x7ffdf681f424,19421118,0,0x0,8
tick,0x7ffdf681f424,19423106,0,0x0,8
tick,0x7ffdf681f424,19425094,0,0x0,8
tick,0x7ffdf681f424,19427130,0,0x0,8
tick,0x7ffdf681f424,19428991,0,0x0,8
tick,0x7ffdf681f424,19430988,0,0x0,8
tick,0x7ffdf681f424,19432966,0,0x0,8
tick,0x7ffdf681f424,19435080,0,0x0,8
tick,0x7ffdf681f424,19437070,0,0x0,8
tick,0x7ffdf681f424,19439072,0,0x0,8
tick,0x7ffdf681f424,19440955,0,0x0,8
tick,0x7ffdf681f424,19443053,0,0x0,8
tick,0x7ffdf681f424,19445053,0,0x0,8
tick,0x7ffdf681f424,19447055,0,0x0,8
tick,0x7ffdf681f424,19449069,0,0x0,8
tick,0x7ffdf681f424,19451038,0,0x0,8
tick,0x7ffdf681f424,19453032,0,0x0,8
tick,0x7ffdf681f424,19455048,0,0x0,8
tick,0x7ffdf681f424,19457024,0,0x0,8
tick,0x7ffdf681f424,19459011,0,0x0,8
tick,0x7ffdf681f424,19461007,0,0x0,8
tick,0x7ffdf681f424,19463008,0,0x0,8
tick,0x7ffdf681f424,19465002,0,0x0,8
tick,0x7ffdf681f424,19466989,0,0x0,8
tick,0x7ffdf681f424,19469002,0,0x0,8
tick,0x7ffdf681f424,19471007,0,0x0,8
tick,0x7ffdf681f424,19472973,0,0x0,8
tick,0x7ffdf681f424,19474973,0,0x0,8
tick,0x7ffdf681f424,19476948,0,0x0,8
tick,0x7ffdf681f424,19478963,0,0x0,8
tick,0x7ffdf681f424,19480957,0,0x0,8
tick,0x7ffdf681f424,19482844,0,0x0,8
tick,0x7ffdf681f424,19484946,0,0x0,8
tick,0x7ffdf681f424,19486936,0,0x0,8
tick,0x7ffdf681f424,19488954,0,0x0,8
tick,0x7ffdf681f424,19490940,0,0x0,8
tick,0x7ffdf681f424,19492921,0,0x0,8
tick,0x7ffdf681f424,19494923,0,0x0,8
tick,0x7ffdf681f424,19496917,0,0x0,8
tick,0x7ffdf681f424,19498916,0,0x0,8
tick,0x7ffdf681f424,19500796,0,0x0,8
tick,0x7ffdf681f424,19502908,0,0x0,8
tick,0x7ffdf681f424,19504887,0,0x0,8
tick,0x7ffdf681f424,19506888,0,0x0,8
tick,0x7ffdf681f424,19508910,0,0x0,8
tick,0x7ffdf681f424,19510876,0,0x0,8
tick,0x7ffdf681f424,19512945,0,0x0,8
tick,0x7ffdf681f424,19514893,0,0x0,8
tick,0x7ffdf681f424,19516861,0,0x0,8
tick,0x7ffdf681f424,19518861,0,0x0,8
tick,0x7ffdf681f424,19520862,0,0x0,8
tick,0x7ffdf681f424,19522853,0,0x0,8
tick,0x7ffdf681f424,19524843,0,0x0,8
tick,0x7ffdf681f424,19526811,0,0x0,8
tick,0x7ffdf681f424,19528704,0,0x0,8
tick,0x7ffdf681f424,19530806,0,0x0,8
tick,0x7ffdf681f424,19532739,0,0x0,8
tick,0x7ffdf681f424,19534719,0,0x0,8
tick,0x7ffdf681f424,19536803,0,0x0,8
tick,0x7ffdf681f424,19538807,0,0x0,8
tick,0x7ffdf681f424,19540814,0,0x0,8
tick,0x7ffdf681f424,19542689,0,0x0,8
tick,0x7ffdf681f424,19544780,0,0x0,8
tick,0x7ffdf681f424,19546747,0,0x0,8
tick,0x7ffdf681f424,19548742,0,0x0,8
tick,0x7ffdf681f424,19550684,0,0x0,8
tick,0x7ffdf681f424,19552771,0,0x0,8
tick,0x7ffdf681f424,19554767,0,0x0,8
tick,0x7ffdf681f424,19556770,0,0x0,8
tick,0x7ffdf681f424,19558647,0,0x0,8
tick,0x7ffdf681f424,19560753,0,0x0,8
tick,0x7ffdf681f424,19562740,0,0x0,8
tick,0x7ffdf681f424,19564776,0,0x0,8
tick,0x7ffdf681f424,19566731,0,0x0,8
tick,0x7ffdf681f424,19568725,0,0x0,8
tick,0x7ffdf681f424,19570724,0,0x0,8
tick,0x7ffdf681f424,19572719,0,0x0,8
tick,0x7ffdf681f424,19574640,0,0x0,8
tick,0x7ffdf681f424,19576703,0,0x0,8
tick,0x7ffdf681f424,19578797,0,0x0,8
tick,0x7ffdf681f424,19580722,0,0x0,8
tick,0x7ffdf681f424,19582629,0,0x0,8
tick,0x7ffdf681f424,19584689,0,0x0,8
tick,0x7ffdf681f424,19586691,0,0x0,8
tick,0x7ffdf681f424,19588689,0,0x0,8
tick,0x7ffdf681f424,19590732,0,0x0,8
tick,0x7ffdf681f424,19592694,0,0x0,8
tick,0x7ffdf681f424,19594661,0,0x0,8
tick,0x7ffdf681f424,19596662,0,0x0,8
tick,0x7ffdf681f424,19598650,0,0x0,8
tick,0x7ffdf681f424,19600646,0,0x0,8
tick,0x7ffdf681f424,19602634,0,0x0,8
tick,0x7ffdf681f424,19604634,0,0x0,8
tick,0x7ffdf681f424,19606628,0,0x0,8
tick,0x7ffdf681f424,19608630,0,0x0,8
tick,0x7ffdf681f424,19610618,0,0x0,8
tick,0x7ffdf681f424,19612619,0,0x0,8
tick,0x7ffdf681f424,19614608,0,0x0,8
tick,0x7ffdf681f424,19616608,0,0x0,8
tick,0x7ffdf681f424,19618596,0,0x0,8
tick,0x7ffdf681f424,19620480,0,0x0,8
tick,0x7ffdf681f424,19622647,0,0x0,8
tick,0x7ffdf681f424,19624497,0,0x0,8
tick,0x7ffdf681f424,19626575,0,0x0,8
tick,0x7ffdf681f424,19628558,0,0x0,8
tick,0x7ffdf681f424,19630556,0,0x0,8
tick,0x7ffdf681f424,19632558,0,0x0,8
tick,0x7ffdf681f424,19634547,0,0x0,8
tick,0x7ffdf681f424,19636538,0,0x0,8
tick,0x7ffdf681f424,19638537,0,0x0,8
tick,0x7ffdf681f424,19640530,0,0x0,8
tick,0x7ffdf681f424,19642527,0,0x0,8
tick,0x7ffdf681f424,19644591,0,0x0,8
tick,0x7ffdf681f424,19646537,0,0x0,8
tick,0x7ffdf681f424,19648512,0,0x0,8
tick,0x7ffdf681f424,19650504,0,0x0,8
tick,0x7ffdf681f424,19652480,0,0x0,8
tick,0x7ffdf681f424,19654388,0,0x0,8
tick,0x7ffdf681f424,19656431,0,0x0,8
tick,0x7ffdf681f424,19658392,0,0x0,8
tick,0x7ffdf681f424,19660354,0,0x0,8
tick,0x7ffdf681f424,19662344,0,0x0,8
tick,0x7ffdf681f424,19664317,0,0x0,8
tick,0x7ffdf681f424,19666409,0,0x0,8
tick,0x7ffdf681f424,19669299,0,0x0,8
tick,0x7ffdf681f424,19671444,0,0x0,8
tick,0x7ffdf681f424,19673293,0,0x0,8
tick,0x7ffdf681f424,19675326,0,0x0,8
tick,0x7ffdf681f424,19677333,0,0x0,8
tick,0x7ffdf681f424,19679407,0,0x0,8
tick,0x7ffdf681f424,19681284,0,0x0,8
tick,0x7ffdf681f424,19683335,0,0x0,8
tick,0x7ffdf681f424,19685313,0,0x0,8
tick,0x7ffdf681f424,19687353,0,0x0,8
tick,0x7ffdf681f424,19688529,0,0x0,8
tick,0x7ffdf681f424,19690480,0,0x0,8
tick,0x7ffdf681f424,19692371,0,0x0,8
tick,0x7ffdf681f424,19694424,0,0x0,8
tick,0x7ffdf681f424,19696472,0,0x0,8
tick,0x7ffdf681f424,19698429,0,0x0,8
tick,0x7ffdf681f424,19700328,0,0x0,8
tick,0x7ffdf681f424,19702403,0,0x0,8
tick,0x7ffdf681f424,19703593,0,0x0,8
tick,0x7ffdf681f424,19705549,0,0x0,8
tick,0x7ffdf681f424,19707585,0,0x0,8
tick,0x7ffdf681f424,19709444,0,0x0,8
tick,0x7ffdf681f424,19711557,0,0x0,8
tick,0x7ffdf681f424,19713530,0,0x0,8
tick,0x7ffdf681f424,19715619,0,0x0,8
tick,0x7ffdf681f424,19717543,0,0x0,8
tick,0x7ffdf681f424,19719580,0,0x0,8
tick,0x7ffdf681f424,19721531,0,0x0,8
tick,0x7ffdf681f424,19723391,0,0x0,8
tick,0x7ffdf681f424,19725502,0,0x0,8
tick,0x7ffdf681f424,19727494,0,0x0,8
tick,0x7ffdf681f424,19729391,0,0x0,8
tick,0x7ffdf681f424,19731486,0,0x0,8
tick,0x7ffdf681f424,19733494,0,0x0,8
tick,0x7ffdf681f424,19735477,0,0x0,8
tick,0x7ffdf681f424,19737505,0,0x0,8
tick,0x7ffdf681f424,19739470,0,0x0,8
tick,0x7ffdf681f424,19741478,0,0x0,8
tick,0x7ffdf681f424,19743460,0,0x0,8
tick,0x7ffdf681f424,19745459,0,0x0,8
tick,0x7ffdf681f424,19747442,0,0x0,8
tick,0x7ffdf681f424,19749343,0,0x0,8
tick,0x7ffdf681f424,19751439,0,0x0,8
tick,0x7ffdf681f424,19753433,0,0x0,8
tick,0x7ffdf681f424,19755457,0,0x0,8
tick,0x7ffdf681f424,19757422,0,0x0,8
tick,0x7ffdf681f424,19759465,0,0x0,8
tick,0x7ffdf681f424,19761414,0,0x0,8
tick,0x7ffdf681f424,19763415,0,0x0,8
tick,0x7ffdf681f424,19765404,0,0x0,8
tick,0x7ffdf681f424,19767396,0,0x0,8
tick,0x7ffdf681f424,19769387,0,0x0,8
tick,0x7ffdf681f424,19771386,0,0x0,8
tick,0x7ffdf681f424,19773374,0,0x0,8
tick,0x7ffdf681f424,19775381,0,0x0,8
tick,0x7ffdf681f424,19777374,0,0x0,8
tick,0x7ffdf681f424,19779371,0,0x0,8
tick,0x7ffdf681f424,19781393,0,0x0,8
tick,0x7ffdf681f424,19783358,0,0x0,8
tick,0x7ffdf681f424,19785246,0,0x0,8
tick,0x7ffdf681f424,19787246,0,0x0,8
tick,0x7ffdf681f424,19789148,0,0x0,8
tick,0x7ffdf681f424,19791177,0,0x0,8
tick,0x7ffdf681f424,19793161,0,0x0,8
tick,0x7ffdf681f424,19795203,0,0x0,8
tick,0x7ffdf681f424,19797265,0,0x0,8
tick,0x7ffdf681f424,19799318,0,0x0,8
tick,0x7ffdf681f424,19801238,0,0x0,8
tick,0x7ffdf681f424,19802315,0,0x0,8
tick,0x7ffdf681f424,19803550,0,0x0,8
tick,0x7ffdf681f424,19804731,0,0x0,8
tick,0x7ffdf681f424,19805897,0,0x0,8
tick,0x7ffdf681f424,19807748,0,0x0,8
tick,0x7ffdf681f424,19808836,0,0x0,8
tick,0x7ffdf681f424,19810863,0,0x0,8
tick,0x7ffdf681f424,19812758,0,0x0,8
tick,0x7ffdf681f424,19814717,0,0x0,8
tick,0x7ffdf681f424,19816804,0,0x0,8
tick,0x7ffdf681f424,19818793,0,0x0,8
tick,0x7ffdf681f424,19820789,0,0x0,8
tick,0x7ffdf681f424,19822788,0,0x0,8
tick,0x7ffdf681f424,19824768,0,0x0,8
tick,0x7ffdf681f424,19826780,0,0x0,8
tick,0x7ffdf681f424,19828804,0,0x0,8
tick,0x7ffdf681f424,19830767,0,0x0,8
tick,0x7ffdf681f424,19832715,0,0x0,8
tick,0x7ffdf681f424,19834714,0,0x0,8
tick,0x7ffdf681f424,19836722,0,0x0,8
tick,0x7ffdf681f424,19838674,0,0x0,8
tick,0x7ffdf681f424,19840743,0,0x0,8
tick,0x7ffdf681f424,19842738,0,0x0,8
tick,0x7ffdf681f424,19844724,0,0x0,8
tick,0x7ffdf681f424,19846679,0,0x0,8
tick,0x7ffdf681f424,19848714,0,0x0,8
tick,0x7ffdf681f424,19850717,0,0x0,8
tick,0x7ffdf681f424,19852707,0,0x0,8
tick,0x7ffdf681f424,19854707,0,0x0,8
tick,0x7ffdf681f424,19856652,0,0x0,8
tick,0x7ffdf681f424,19858690,0,0x0,8
tick,0x7ffdf681f424,19860690,0,0x0,8
tick,0x7ffdf681f424,19862679,0,0x0,8
tick,0x7ffdf681f424,19864676,0,0x0,8
tick,0x7ffdf681f424,19866670,0,0x0,8
tick,0x7ffdf681f424,19868669,0,0x0,8
tick,0x7ffdf681f424,19870658,0,0x0,8
tick,0x7ffdf681f424,19872651,0,0x0,8
tick,0x7ffdf681f424,19874539,0,0x0,8
tick,0x7ffdf681f424,19876638,0,0x0,8
tick,0x7ffdf681f424,19878589,0,0x0,8
tick,0x7ffdf681f424,19880627,0,0x0,8
tick,0x7ffdf681f424,19882631,0,0x0,8
tick,0x7ffdf681f424,19884618,0,0x0,8
tick,0x7ffdf681f424,19886618,0,0x0,8
tick,0x7ffdf681f424,19888621,0,0x0,8
tick,0x7ffdf681f424,19890608,0,0x0,8
tick,0x7ffdf681f424,19892600,0,0x0,8
tick,0x7ffdf681f424,19894604,0,0x0,8
tick,0x7ffdf681f424,19896597,0,0x0,8
tick,0x7ffdf681f424,19898537,0,0x0,8
tick,0x7ffdf681f424,19900524,0,0x0,8
tick,0x7ffdf681f424,19902470,0,0x0,8
tick,0x7ffdf681f424,19904573,0,0x0,8
tick,0x7ffdf681f424,19906563,0,0x0,8
tick,0x7ffdf681f424,19908551,0,0x0,8
tick,0x7ffdf681f424,19910441,0,0x0,8
tick,0x7ffdf681f424,19912541,0,0x0,8
tick,0x7ffdf681f424,19914503,0,0x0,8
tick,0x7ffdf681f424,19916509,0,0x0,8
tick,0x7ffdf681f424,19918369,0,0x0,8
tick,0x7ffdf681f424,19920306,0,0x0,8
tick,0x7ffdf681f424,19922380,0,0x0,8
tick,0x7ffdf681f424,19924352,0,0x0,8
tick,0x7ffdf681f424,19926379,0,0x0,8
tick,0x7ffdf681f424,19928447,0,0x0,8
tick,0x7ffdf681f424,19930503,0,0x0,8
tick,0x7ffdf681f424,19932433,0,0x0,8
tick,0x7ffdf681f424,19934307,0,0x0,8
tick,0x7ffdf681f424,19936294,0,0x0,8
tick,0x7ffdf681f424,19938411,0,0x0,8
tick,0x7ffdf681f424,19940374,0,0x0,8
tick,0x7ffdf681f424,19942309,0,0x0,8
tick,0x7ffdf681f424,19944407,0,0x0,8
tick,0x7ffdf681f424,19946446,0,0x0,8
tick,0x7ffdf681f424,19948435,0,0x0,8
tick,0x7ffdf681f424,19950328,0,0x0,8
tick,0x7ffdf681f424,19952426,0,0x0,8
tick,0x7ffdf681f424,19954423,0,0x0,8
tick,0x7ffdf681f424,19956428,0,0x0,8
tick,0x7ffdf681f424,19958418,0,0x0,8
tick,0x7ffdf681f424,19960423,0,0x0,8
tick,0x7ffdf681f424,19962412,0,0x0,8
tick,0x7ffdf681f424,19964400,0,0x0,8
tick,0x7ffdf681f424,19966245,0,0x0,8
tick,0x7ffdf681f424,19968399,0,0x0,8
tick,0x7ffdf681f424,19970390,0,0x0,8
tick,0x7ffdf681f424,19972280,0,0x0,8
tick,0x7ffdf681f424,19974377,0,0x0,8
tick,0x7ffdf681f424,19976370,0,0x0,8
tick,0x7ffdf681f424,19978363,0,0x0,8
tick,0x7ffdf681f424,19980359,0,0x0,8
tick,0x7ffdf681f424,19982367,0,0x0,8
tick,0x7ffdf681f424,19984349,0,0x0,8
tick,0x7ffdf681f424,19986347,0,0x0,8
tick,0x7ffdf681f424,19988347,0,0x0,8
tick,0x7ffdf681f424,19990343,0,0x0,8
tick,0x7ffdf681f424,19992337,0,0x0,8
tick,0x7ffdf681f424,19994328,0,0x0,8
tick,0x7ffdf681f424,19996322,0,0x0,8
tick,0x7ffdf681f424,19998205,0,0x0,8
tick,0x7ffdf681f424,20000326,0,0x0,8
tick,0x7ffdf681f424,20002304,0,0x0,8
tick,0x7ffdf681f424,20004314,0,0x0,8
tick,0x7ffdf681f424,20006302,0,0x0,8
tick,0x7ffdf681f424,20008252,0,0x0,8
tick,0x7ffdf681f424,20010236,0,0x0,8
tick,0x7ffdf681f424,20012280,0,0x0,8
tick,0x7ffdf681f424,20014278,0,0x0,8
tick,0x7ffdf681f424,20016162,0,0x0,8
tick,0x7ffdf681f424,20018255,0,0x0,8
tick,0x7ffdf681f424,20020258,0,0x0,8
tick,0x7ffdf681f424,20022252,0,0x0,8
tick,0x7ffdf681f424,20024258,0,0x0,8
tick,0x7ffdf681f424,20026204,0,0x0,8
tick,0x7ffdf681f424,20028235,0,0x0,8
tick,0x7ffdf681f424,20030229,0,0x0,8
tick,0x7ffdf681f424,20032170,0,0x0,8
tick,0x7ffdf681f424,20034242,0,0x0,8
tick,0x7ffdf681f424,20036180,0,0x0,8
tick,0x7ffdf681f424,20038208,0,0x0,8
tick,0x7ffdf681f424,20040205,0,0x0,8
tick,0x7ffdf681f424,20042199,0,0x0,8
tick,0x7ffdf681f424,20044194,0,0x0,8
tick,0x7ffdf681f424,20046076,0,0x0,8
tick,0x7ffdf681f424,20048024,0,0x0,8
tick,0x7ffdf681f424,20050066,0,0x0,8
tick,0x7ffdf681f424,20052065,0,0x0,8
tick,0x7ffdf681f424,20054023,0,0x0,8
tick,0x7ffdf681f424,20056062,0,0x0,8
tick,0x7ffdf681f424,20058046,0,0x0,8
tick,0x7ffdf681f424,20060055,0,0x0,8
tick,0x7ffdf681f424,20062035,0,0x0,8
tick,0x7ffdf681f424,20064028,0,0x0,8
tick,0x7ffdf681f424,20066090,0,0x0,8
tick,0x7ffdf681f424,20068091,0,0x0,8
tick,0x7ffdf681f424,20070066,0,0x0,8
tick,0x7ffdf681f424,20072076,0,0x0,8
tick,0x7ffdf681f424,20074102,0,0x0,8
tick,0x7ffdf681f424,20076053,0,0x0,8
tick,0x7ffdf681f424,20078093,0,0x0,8
tick,0x7ffdf681f424,20080084,0,0x0,8
tick,0x7ffdf681f424,20082107,0,0x0,8
tick,0x7ffdf681f424,20084081,0,0x0,8
tick,0x7ffdf681f424,20086028,0,0x0,8
tick,0x7ffdf681f424,20088076,0,0x0,8
tick,0x7ffdf681f424,20090029,0,0x0,8
tick,0x7ffdf681f424,20092063,0,0x0,8
tick,0x7ffdf681f424,20094054,0,0x0,8
tick,0x7ffdf681f424,20096011,0,0x0,8
tick,0x7ffdf681f424,20097997,0,0x0,8
tick,0x7ffdf681f424,20100036,0,0x0,8
tick,0x7ffdf681f424,20101988,0,0x0,8
tick,0x7ffdf681f424,20104028,0,0x0,8
tick,0x7ffdf681f424,20106022,0,0x0,8
tick,0x7ffdf681f424,20107914,0,0x0,8
tick,0x7ffdf681f424,20110013,0,0x0,8
tick,0x7ffdf681f424,20112006,0,0x0,8
tick,0x7ffdf681f424,20113970,0,0x0,8
tick,0x7ffdf681f424,20116054,0,0x0,8
tick,0x7ffdf681f424,20117995,0,0x0,8
tick,0x7ffdf681f424,20120037,0,0x0,8
tick,0x7ffdf681f424,20121951,0,0x0,8
tick,0x7ffdf681f424,20123974,0,0x0,8
tick,0x7ffdf681f424,20125969,0,0x0,8
tick,0x7ffdf681f424,20127967,0,0x0,8
tick,0x7ffdf681f424,20129964,0,0x0,8
tick,0x7ffdf681f424,20131954,0,0x0,8
tick,0x7ffdf681f424,20133951,0,0x0,8
tick,0x7ffdf681f424,20135890,0,0x0,8
tick,0x7ffdf681f424,20137937,0,0x0,8
tick,0x7ffdf681f424,20139942,0,0x0,8
tick,0x7ffdf681f424,20141880,0,0x0,8
tick,0x7ffdf681f424,20143920,0,0x0,8
tick,0x7ffdf681f424,20145921,0,0x0,8
tick,0x7ffdf681f424,20147871,0,0x0,8
tick,0x7ffdf681f424,20149906,0,0x0,8
tick,0x7ffdf681f424,20151905,0,0x0,8
tick,0x7ffdf681f424,20153899,0,0x0,8
tick,0x7ffdf681f424,20155895,0,0x0,8
tick,0x7ffdf681f424,20157827,0,0x0,8
tick,0x7ffdf681f424,20159776,0,0x0,8
tick,0x7ffdf681f424,20161878,0,0x0,8
tick,0x7ffdf681f424,20163829,0,0x0,8
tick,0x7ffdf681f424,20165761,0,0x0,8
tick,0x7ffdf681f424,20167853,0,0x0,8
tick,0x7ffdf681f424,20169858,0,0x0,8
tick,0x7ffdf681f424,20171837,0,0x0,8
tick,0x7ffdf681f424,20173917,0,0x0,8
tick,0x7ffdf681f424,20175733,0,0x0,8
tick,0x7ffdf681f424,20177732,0,0x0,8
tick,0x7ffdf681f424,20179621,0,0x0,8
tick,0x7ffdf681f424,20181744,0,0x0,8
tick,0x7ffdf681f424,20183631,0,0x0,8
tick,0x7ffdf681f424,20185660,0,0x0,8
tick,0x7ffdf681f424,20187615,0,0x0,8
tick,0x7ffdf681f424,20189757,0,0x0,8
tick,0x7ffdf681f424,20191764,0,0x0,8
tick,0x7ffdf681f424,20193607,0,0x0,8
tick,0x7ffdf681f424,20195635,0,0x0,8
tick,0x7ffdf681f424,20197695,0,0x0,8
tick,0x7ffdf681f424,20199620,0,0x0,8
tick,0x7ffdf681f424,20201687,0,0x0,8
tick,0x7ffdf681f424,20203763,0,0x0,8
tick,0x7ffdf681f424,20205760,0,0x0,8
tick,0x7ffdf681f424,20207793,0,0x0,8
tick,0x7ffdf681f424,20209749,0,0x0,8
tick,0x7ffdf681f424,20211746,0,0x0,8
tick,0x7ffdf681f424,20213743,0,0x0,8
tick,0x7ffdf681f424,20215737,0,0x0,8
tick,0x7ffdf681f424,20217683,0,0x0,8
tick,0x7ffdf681f424,20219723,0,0x0,8
tick,0x7ffdf681f424,20221614,0,0x0,8
tick,0x7ffdf681f424,20223722,0,0x0,8
tick,0x7ffdf681f424,20225713,0,0x0,8
tick,0x7ffdf681f424,20227703,0,0x0,8
tick,0x7ffdf681f424,20229728,0,0x0,8
tick,0x7ffdf681f424,20231688,0,0x0,8
tick,0x7ffdf681f424,20233673,0,0x0,8
tick,0x7ffdf681f424,20235686,0,0x0,8
tick,0x7ffdf681f424,20237677,0,0x0,8
tick,0x7ffdf681f424,20239617,0,0x0,8
tick,0x7ffdf681f424,20241661,0,0x0,8
tick,0x7ffdf681f424,20243662,0,0x0,8
tick,0x7ffdf681f424,20245629,0,0x0,8
tick,0x7ffdf681f424,20247548,0,0x0,8
tick,0x7ffdf681f424,20249543,0,0x0,8
tick,0x7ffdf681f424,20251640,0,0x0,8
tick,0x7ffdf681f424,20253631,0,0x0,8
tick,0x7ffdf681f424,20255626,0,0x0,8
tick,0x7ffdf681f424,20257636,0,0x0,8
tick,0x7ffdf681f424,20259612,0,0x0,8
tick,0x7ffdf681f424,20261556,0,0x0,8
tick,0x7ffdf681f424,20263603,0,0x0,8
tick,0x7ffdf681f424,20265605,0,0x0,8
tick,0x7ffdf681f424,20267500,0,0x0,8
tick,0x7ffdf681f424,20269586,0,0x0,8
tick,0x7ffdf681f424,20271429,0,0x0,8
tick,0x7ffdf681f424,20273605,0,0x0,8
tick,0x7ffdf681f424,20275579,0,0x0,8
tick,0x7ffdf681f424,20277565,0,0x0,8
tick,0x7ffdf681f424,20279561,0,0x0,8
tick,0x7ffdf681f424,20281552,0,0x0,8
tick,0x7ffdf681f424,20283503,0,0x0,8
tick,0x7ffdf681f424,20285543,0,0x0,8
tick,0x7ffdf681f424,20287541,0,0x0,8
tick,0x7ffdf681f424,20289562,0,0x0,8
tick,0x7ffdf681f424,20291520,0,0x0,8
tick,0x7ffdf681f424,20293533,0,0x0,8
tick,0x7ffdf681f424,20295517,0,0x0,8
tick,0x7ffdf681f424,20297510,0,0x0,8
tick,0x7ffdf681f424,20299512,0,0x0,8
tick,0x7ffdf681f424,20301501,0,0x0,8
tick,0x7ffdf681f424,20303497,0,0x0,8
tick,0x7ffdf681f424,20305313,0,0x0,8
tick,0x7ffdf681f424,20307397,0,0x0,8
tick,0x7ffdf681f424,20309307,0,0x0,8
tick,0x7ffdf681f424,20311392,0,0x0,8
tick,0x7ffdf681f424,20313393,0,0x0,8
tick,0x7ffdf681f424,20315424,0,0x0,8
tick,0x7ffdf681f424,20317401,0,0x0,8
tick,0x7ffdf681f424,20319347,0,0x0,8
tick,0x7ffdf681f424,20321373,0,0x0,8
tick,0x7ffdf681f424,20323427,0,0x0,8
tick,0x7ffdf681f424,20325287,0,0x0,8
tick,0x7ffdf681f424,20327328,0,0x0,8
tick,0x7ffdf681f424,20329438,0,0x0,8
tick,0x7ffdf681f424,20331430,0,0x0,8
tick,0x7ffdf681f424,20333253,0,0x0,8
tick,0x7ffdf681f424,20335363,0,0x0,8
tick,0x7ffdf681f424,20337404,0,0x0,8
tick,0x7ffdf681f424,20339404,0,0x0,8
tick,0x7ffdf681f424,20341291,0,0x0,8
tick,0x7ffdf681f424,20343392,0,0x0,8
tick,0x7ffdf681f424,20345347,0,0x0,8
tick,0x7ffdf681f424,20347372,0,0x0,8
tick,0x7ffdf681f424,20349336,0,0x0,8
tick,0x7ffdf681f424,20351371,0,0x0,8
tick,0x7ffdf681f424,20353367,0,0x0,8
tick,0x7ffdf681f424,20355383,0,0x0,8
tick,0x7ffdf681f424,20357352,0,0x0,8
tick,0x7ffdf681f424,20359351,0,0x0,8
tick,0x7ffdf681f424,20361347,0,0x0,8
tick,0x7ffdf681f424,20363335,0,0x0,8
tick,0x7ffdf681f424,20365330,0,0x0,8
tick,0x7ffdf681f424,20367325,0,0x0,8
tick,0x7ffdf681f424,20369317,0,0x0,8
tick,0x7ffdf681f424,20371273,0,0x0,8
tick,0x7ffdf681f424,20373303,0,0x0,8
tick,0x7ffdf681f424,20375305,0,0x0,8
tick,0x7ffdf681f424,20377332,0,0x0,8
tick,0x7ffdf681f424,20379291,0,0x0,8
tick,0x7ffdf681f424,20381286,0,0x0,8
tick,0x7ffdf681f424,20383288,0,0x0,8
tick,0x7ffdf681f424,20385170,0,0x0,8
tick,0x7ffdf681f424,20387308,0,0x0,8
tick,0x7ffdf681f424,20389271,0,0x0,8
tick,0x7ffdf681f424,20390484,0,0x0,8
tick,0x7ffdf681f424,20391612,0,0x0,8
tick,0x7ffdf681f424,20393618,0,0x0,8
tick,0x7ffdf681f424,20395587,0,0x0,8
tick,0x7ffdf681f424,20397615,0,0x0,8
tick,0x7ffdf681f424,20399484,0,0x0,8
tick,0x7ffdf681f424,20400670,0,0x0,8
tick,0x7ffdf681f424,20401871,0,0x0,8
tick,0x7ffdf681f424,20403832,0,0x0,8
tick,0x7ffdf681f424,20405853,0,0x0,8
tick,0x7ffdf681f424,20407750,0,0x0,8
tick,0x7ffdf681f424,20409832,0,0x0,8
tick,0x7ffdf681f424,20411896,0,0x0,8
tick,0x7ffdf681f424,20414036,0,0x0,8
tick,0x7ffdf681f424,20416095,0,0x0,8
tick,0x7ffdf681f424,20417174,0,0x0,8
tick,0x7ffdf681f424,20419179,0,0x0,8
tick,0x7ffdf681f424,20421133,0,0x0,8
tick,0x7ffdf681f424,20423174,0,0x0,8
tick,0x7ffdf681f424,20425117,0,0x0,8
tick,0x7ffdf681f424,20427113,0,0x0,8
tick,0x7ffdf681f424,20429106,0,0x0,8
tick,0x7ffdf681f424,20431097,0,0x0,8
tick,0x7ffdf681f424,20433098,0,0x0,8
tick,0x7ffdf681f424,20435134,0,0x0,8
tick,0x7ffdf681f424,20437119,0,0x0,8
tick,0x7ffdf681f424,20439033,0,0x0,8
tick,0x7ffdf681f424,20440962,0,0x0,8
tick,0x7ffdf681f424,20443062,0,0x0,8
tick,0x7ffdf681f424,20445002,0,0x0,8
tick,0x7ffdf681f424,20447062,0,0x0,8
tick,0x7ffdf681f424,20449079,0,0x0,8
tick,0x7ffdf681f424,20450977,0,0x0,8
tick,0x7ffdf681f424,20452922,0,0x0,8
tick,0x7ffdf681f424,20455006,0,0x0,8
tick,0x7ffdf681f424,20457059,0,0x0,8
tick,0x7ffdf681f424,20458949,0,0x0,8
tick,0x7ffdf681f424,20461055,0,0x0,8
tick,0x7ffdf681f424,20463055,0,0x0,8
tick,0x7ffdf681f424,20465040,0,0x0,8
tick,0x7ffdf681f424,20467062,0,0x0,8
tick,0x7ffdf681f424,20468938,0,0x0,8
tick,0x7ffdf681f424,20471021,0,0x0,8
tick,0x7ffdf681f424,20473018,0,0x0,8
tick,0x7ffdf681f424,20474901,0,0x0,8
tick,0x7ffdf681f424,20477012,0,0x0,8
tick,0x7ffdf681f424,20479011,0,0x0,8
tick,0x7ffdf681f424,20481005,0,0x0,8
tick,0x7ffdf681f424,20482893,0,0x0,8
tick,0x7ffdf681f424,20485004,0,0x0,8
tick,0x7ffdf681f424,20486986,0,0x0,8
tick,0x7ffdf681f424,20489024,0,0x0,8
tick,0x7ffdf681f424,20490953,0,0x0,8
tick,0x7ffdf681f424,20492974,0,0x0,8
tick,0x7ffdf681f424,20494970,0,0x0,8
tick,0x7ffdf681f424,20496959,0,0x0,8
tick,0x7ffdf681f424,20498957,0,0x0,8
tick,0x7ffdf681f424,20500948,0,0x0,8
tick,0x7ffdf681f424,20502912,0,0x0,8
tick,0x7ffdf681f424,20504943,0,0x0,8
tick,0x7ffdf681f424,20506931,0,0x0,8
tick,0x7ffdf681f424,20508922,0,0x0,8
tick,0x7ffdf681f424,20510969,0,0x0,8
tick,0x7ffdf681f424,20512912,0,0x0,8
tick,0x7ffdf681f424,20514905,0,0x0,8
tick,0x7ffdf681f424,20516880,0,0x0,8
tick,0x7ffdf681f424,20518921,0,0x0,8
tick,0x7ffdf681f424,20520894,0,0x0,8
tick,0x7ffdf681f424,20522891,0,0x0,8
tick,0x7ffdf681f424,20524850,0,0x0,8
tick,0x7ffdf681f424,20526880,0,0x0,8
tick,0x7ffdf681f424,20528887,0,0x0,8
tick,0x7ffdf681f424,20530870,0,0x0,8
tick,0x7ffdf681f424,20532819,0,0x0,8
tick,0x7ffdf681f424,20534866,0,0x0,8
tick,0x7ffdf681f424,20536852,0,0x0,8
tick,0x7ffdf681f424,20538884,0,0x0,8
tick,0x7ffdf681f424,20540858,0,0x0,8
tick,0x7ffdf681f424,20542841,0,0x0,8
tick,0x7ffdf681f424,20544832,0,0x0,8
tick,0x7ffdf681f424,20546827,0,0x0,8
tick,0x7ffdf681f424,20548736,0,0x0,8
tick,0x7ffdf681f424,20550827,0,0x0,8
tick,0x7ffdf681f424,20552810,0,0x0,8
tick,0x7ffdf681f424,20554782,0,0x0,8
tick,0x7ffdf681f424,20556807,0,0x0,8
tick,0x7ffdf681f424,20558794,0,0x0,8
tick,0x7ffdf681f424,20560786,0,0x0,8
tick,0x7ffdf681f424,20562786,0,0x0,8
tick,0x7ffdf681f424,20564785,0,0x0,8
tick,0x7ffdf681f424,20566784,0,0x0,8
tick,0x7ffdf681f424,20568579,0,0x0,8
tick,0x7ffdf681f424,20570568,0,0x0,8
tick,0x7ffdf681f424,20572754,0,0x0,8
tick,0x7ffdf681f424,20574642,0,0x0,8
tick,0x7ffdf681f424,20576636,0,0x0,8
tick,0x7ffdf681f424,20578738,0,0x0,8
tick,0x7ffdf681f424,20580739,0,0x0,8
tick,0x7ffdf681f424,20582761,0,0x0,8
tick,0x7ffdf681f424,20584629,0,0x0,8
tick,0x7ffdf681f424,20586526,0,0x0,8
tick,0x7ffdf681f424,20588655,0,0x0,8
tick,0x7ffdf681f424,20590708,0,0x0,8
tick,0x7ffdf681f424,20592590,0,0x0,8
tick,0x7ffdf681f424,20594657,0,0x0,8
tick,0x7ffdf681f424,20596692,0,0x0,8
tick,0x7ffdf681f424,20598720,0,0x0,8
tick,0x7ffdf681f424,20600573,0,0x0,8
tick,0x7ffdf681f424,20602684,0,0x0,8
tick,0x7ffdf681f424,20604671,0,0x0,8
tick,0x7ffdf681f424,20606668,0,0x0,8
tick,0x7ffdf681f424,20608663,0,0x0,8
tick,0x7ffdf681f424,20610657,0,0x0,8
tick,0x7ffdf681f424,20612681,0,0x0,8
tick,0x7ffdf681f424,20614645,0,0x0,8
tick,0x7ffdf681f424,20616545,0,0x0,8
tick,0x7ffdf681f424,20618649,0,0x0,8
tick,0x7ffdf681f424,20620477,0,0x0,8
tick,0x7ffdf681f424,20622616,0,0x0,8
tick,0x7ffdf681f424,20624513,0,0x0,8
tick,0x7ffdf681f424,20626616,0,0x0,8
tick,0x7ffdf681f424,20628609,0,0x0,8
tick,0x7ffdf681f424,20630488,0,0x0,8
tick,0x7ffdf681f424,20632581,0,0x0,8
tick,0x7ffdf681f424,20634588,0,0x0,8
tick,0x7ffdf681f424,20636584,0,0x0,8
tick,0x7ffdf681f424,20638593,0,0x0,8
tick,0x7ffdf681f424,20640570,0,0x0,8
tick,0x7ffdf681f424,20642608,0,0x0,8
tick,0x7ffdf681f424,20644561,0,0x0,8
tick,0x7ffdf681f424,20646559,0,0x0,8
tick,0x7ffdf681f424,20648549,0,0x0,8
tick,0x7ffdf681f424,20650541,0,0x0,8
tick,0x7ffdf681f424,20652549,0,0x0,8
tick,0x7ffdf681f424,20654535,0,0x0,8
tick,0x7ffdf681f424,20656429,0,0x0,8
tick,0x7ffdf681f424,20658533,0,0x0,8
tick,0x7ffdf681f424,20660537,0,0x0,8
tick,0x7ffdf681f424,20662516,0,0x0,8
tick,0x7ffdf681f424,20664492,0,0x0,8
tick,0x7ffdf681f424,20666408,0,0x0,8
tick,0x7ffdf681f424,20668500,0,0x0,8
tick,0x7ffdf681f424,20670498,0,0x0,8
tick,0x7ffdf681f424,20672484,0,0x0,8
tick,0x7ffdf681f424,20674473,0,0x0,8
tick,0x7ffdf681f424,20676494,0,0x0,8
tick,0x7ffdf681f424,20678474,0,0x0,8
tick,0x7ffdf681f424,20680483,0,0x0,8
tick,0x7ffdf681f424,20682475,0,0x0,8
tick,0x7ffdf681f424,20684462,0,0x0,8
tick,0x7ffdf681f424,20686490,0,0x0,8
tick,0x7ffdf681f424,20688447,0,0x0,8
tick,0x7ffdf681f424,20690445,0,0x0,8
tick,0x7ffdf681f424,20692322,0,0x0,8
tick,0x7ffdf681f424,20694469,0,0x0,8
tick,0x7ffdf681f424,20696309,0,0x0,8
tick,0x7ffdf681f424,20698337,0,0x0,8
tick,0x7ffdf681f424,20700314,0,0x0,8
tick,0x7ffdf681f424,20702384,0,0x0,8
tick,0x7ffdf681f424,20704401,0,0x0,8
tick,0x7ffdf681f424,20706282,0,0x0,8
tick,0x7ffdf681f424,20708246,0,0x0,8
tick,0x7ffdf681f424,20710285,0,0x0,8
tick,0x7ffdf681f424,20712290,0,0x0,8
tick,0x7ffdf681f424,20714352,0,0x0,8
tick,0x7ffdf681f424,20716250,0,0x0,8
tick,0x7ffdf681f424,20718249,0,0x0,8
tick,0x7ffdf681f424,20720375,0,0x0,8
tick,0x7ffdf681f424,20722343,0,0x0,8
tick,0x7ffdf681f424,20724358,0,0x0,8
tick,0x7ffdf681f424,20726252,0,0x0,8
tick,0x7ffdf681f424,20728328,0,0x0,8
tick,0x7ffdf681f424,20730332,0,0x0,8
tick,0x7ffdf681f424,20732317,0,0x0,8
tick,0x7ffdf681f424,20734312,0,0x0,8
tick,0x7ffdf681f424,20736313,0,0x0,8
tick,0x7ffdf681f424,20738310,0,0x0,8
tick,0x7ffdf681f424,20740303,0,0x0,8
tick,0x7ffdf681f424,20742304,0,0x0,8
tick,0x7ffdf681f424,20744300,0,0x0,8
tick,0x7ffdf681f424,20746297,0,0x0,8
tick,0x7ffdf681f424,20748292,0,0x0,8
tick,0x7ffdf681f424,20750282,0,0x0,8
tick,0x7ffdf681f424,20752315,0,0x0,8
tick,0x7ffdf681f424,20754282,0,0x0,8
tick,0x7ffdf681f424,20756256,0,0x0,8
tick,0x7ffdf681f424,20758240,0,0x0,8
tick,0x7ffdf681f424,20760176,0,0x0,8
tick,0x7ffdf681f424,20762256,0,0x0,8
tick,0x7ffdf681f424,20764249,0,0x0,8
tick,0x7ffdf681f424,20766154,0,0x0,8
tick,0x7ffdf681f424,20768236,0,0x0,8
tick,0x7ffdf681f424,20770246,0,0x0,8
tick,0x7ffdf681f424,20772220,0,0x0,8
tick,0x7ffdf681f424,20774249,0,0x0,8
tick,0x7ffdf681f424,20776243,0,0x0,8
tick,0x7ffdf681f424,20778208,0,0x0,8
tick,0x7ffdf681f424,20780213,0,0x0,8
tick,0x7ffdf681f424,20782182,0,0x0,8
tick,0x7ffdf681f424,20784191,0,0x0,8
tick,0x7ffdf681f424,20786179,0,0x0,8
tick,0x7ffdf681f424,20788184,0,0x0,8
tick,0x7ffdf681f424,20790173,0,0x0,8
tick,0x7ffdf681f424,20792178,0,0x0,8
tick,0x7ffdf681f424,20794162,0,0x0,8
tick,0x7ffdf681f424,20796134,0,0x0,8
tick,0x7ffdf681f424,20798161,0,0x0,8
tick,0x7ffdf681f424,20800143,0,0x0,8
tick,0x7ffdf681f424,20802143,0,0x0,8
tick,0x7ffdf681f424,20804134,0,0x0,8
tick,0x7ffdf681f424,20806138,0,0x0,8
tick,0x7ffdf681f424,20808017,0,0x0,8
tick,0x7ffdf681f424,20810123,0,0x0,8
tick,0x7ffdf681f424,20812116,0,0x0,8
tick,0x7ffdf681f424,20813925,0,0x0,8
tick,0x7ffdf681f424,20815935,0,0x0,8
tick,0x7ffdf681f424,20817954,0,0x0,8
tick,0x7ffdf681f424,20819941,0,0x0,8
tick,0x7ffdf681f424,20822065,0,0x0,8
tick,0x7ffdf681f424,20824092,0,0x0,8
tick,0x7ffdf681f424,20826077,0,0x0,8
tick,0x7ffdf681f424,20828079,0,0x0,8
tick,0x7ffdf681f424,20829982,0,0x0,8
tick,0x7ffdf681f424,20831873,0,0x0,8
tick,0x7ffdf681f424,20833948,0,0x0,8
tick,0x7ffdf681f424,20835953,0,0x0,8
tick,0x7ffdf681f424,20838017,0,0x0,8
tick,0x7ffdf681f424,20840056,0,0x0,8
tick,0x7ffdf681f424,20841936,0,0x0,8
tick,0x7ffdf681f424,20843846,0,0x0,8
tick,0x7ffdf681f424,20845967,0,0x0,8
tick,0x7ffdf681f424,20847908,0,0x0,8
tick,0x7ffdf681f424,20849970,0,0x0,8
tick,0x7ffdf681f424,20852014,0,0x0,8
tick,0x7ffdf681f424,20854000,0,0x0,8
tick,0x7ffdf681f424,20855894,0,0x0,8
tick,0x7ffdf681f424,20857847,0,0x0,8
tick,0x7ffdf681f424,20859982,0,0x0,8
tick,0x7ffdf681f424,20861952,0,0x0,8
tick,0x7ffdf681f424,20863977,0,0x0,8
tick,0x7ffdf681f424,20865979,0,0x0,8
tick,0x7ffdf681f424,20867973,0,0x0,8
tick,0x7ffdf681f424,20869956,0,0x0,8
tick,0x7ffdf681f424,20871957,0,0x0,8
tick,0x7ffdf681f424,20873987,0,0x0,8
tick,0x7ffdf681f424,20875951,0,0x0,8
tick,0x7ffdf681f424,20877939,0,0x0,8
tick,0x7ffdf681f424,20879842,0,0x0,8
tick,0x7ffdf681f424,20881923,0,0x0,8
tick,0x7ffdf681f424,20883960,0,0x0,8
tick,0x7ffdf681f424,20885914,0,0x0,8
tick,0x7ffdf681f424,20887908,0,0x0,8
tick,0x7ffdf681f424,20889904,0,0x0,8
tick,0x7ffdf681f424,20891889,0,0x0,8
tick,0x7ffdf681f424,20893894,0,0x0,8
tick,0x7ffdf681f424,20895888,0,0x0,8
tick,0x7ffdf681f424,20897896,0,0x0,8
tick,0x7ffdf681f424,20899765,0,0x0,8
tick,0x7ffdf681f424,20901859,0,0x0,8
tick,0x7ffdf681f424,20903768,0,0x0,8
tick,0x7ffdf681f424,20905741,0,0x0,8
tick,0x7ffdf681f424,20907839,0,0x0,8
tick,0x7ffdf681f424,20909856,0,0x0,8
tick,0x7ffdf681f424,20911846,0,0x0,8
tick,0x7ffdf681f424,20913848,0,0x0,8
tick,0x7ffdf681f424,20915728,0,0x0,8
tick,0x7ffdf681f424,20917839,0,0x0,8
tick,0x7ffdf681f424,20919831,0,0x0,8
tick,0x7ffdf681f424,20921834,0,0x0,8
tick,0x7ffdf681f424,20923794,0,0x0,8
tick,0x7ffdf681f424,20925818,0,0x0,8
tick,0x7ffdf681f424,20927786,0,0x0,8
tick,0x7ffdf681f424,20929804,0,0x0,8
tick,0x7ffdf681f424,20931800,0,0x0,8
tick,0x7ffdf681f424,20933793,0,0x0,8
tick,0x7ffdf681f424,20935787,0,0x0,8
tick,0x7ffdf681f424,20937783,0,0x0,8
tick,0x7ffdf681f424,20939788,0,0x0,8
tick,0x7ffdf681f424,20941663,0,0x0,8
tick,0x7ffdf681f424,20943763,0,0x0,8
tick,0x7ffdf681f424,20945728,0,0x0,8
tick,0x7ffdf681f424,20947763,0,0x0,8
tick,0x7ffdf681f424,20949788,0,0x0,8
tick,0x7ffdf681f424,20951740,0,0x0,8
tick,0x7ffdf681f424,20953748,0,0x0,8
tick,0x7ffdf681f424,20955736,0,0x0,8
tick,0x7ffdf681f424,20957733,0,0x0,8
tick,0x7ffdf681f424,20959653,0,0x0,8
tick,0x7ffdf681f424,20961553,0,0x0,8
tick,0x7ffdf681f424,20963589,0,0x0,8
tick,0x7ffdf681f424,20965662,0,0x0,8
tick,0x7ffdf681f424,20967551,0,0x0,8
tick,0x7ffdf681f424,20969689,0,0x0,8
tick,0x7ffdf681f424,20971669,0,0x0,8
tick,0x7ffdf681f424,20973692,0,0x0,8
tick,0x7ffdf681f424,20975590,0,0x0,8
tick,0x7ffdf681f424,20977506,0,0x0,8
tick,0x7ffdf681f424,20979606,0,0x0,8
tick,0x7ffdf681f424,20981659,0,0x0,8
tick,0x7ffdf681f424,20983547,0,0x0,8
tick,0x7ffdf681f424,20985653,0,0x0,8
tick,0x7ffdf681f424,20987549,0,0x0,8
tick,0x7ffdf681f424,20989655,0,0x0,8
tick,0x7ffdf681f424,20991531,0,0x0,8
tick,0x7ffdf681f424,20993673,0,0x0,8
tick,0x7ffdf681f424,20995628,0,0x0,8
tick,0x7ffdf681f424,20997631,0,0x0,8
tick,0x7ffdf681f424,20999527,0,0x0,8
tick,0x7ffdf681f424,21001609,0,0x0,8
tick,0x7ffdf681f424,21003609,0,0x0,8
tick,0x7ffdf681f424,21005543,0,0x0,8
tick,0x7ffdf681f424,21007595,0,0x0,8
tick,0x7ffdf681f424,21009592,0,0x0,8
tick,0x7ffdf681f424,21011592,0,0x0,8
tick,0x7ffdf681f424,21013582,0,0x0,8
tick,0x7ffdf681f424,21015614,0,0x0,8
tick,0x7ffdf681f424,21017563,0,0x0,8
tick,0x7ffdf681f424,21019557,0,0x0,8
tick,0x7ffdf681f424,21021586,0,0x0,8
tick,0x7ffdf681f424,21023559,0,0x0,8
tick,0x7ffdf681f424,21025544,0,0x0,8
tick,0x7ffdf681f424,21027546,0,0x0,8
tick,0x7ffdf681f424,21029544,0,0x0,8
tick,0x7ffdf681f424,21031522,0,0x0,8
tick,0x7ffdf681f424,21033552,0,0x0,8
tick,0x7ffdf681f424,21035525,0,0x0,8
tick,0x7ffdf681f424,21037547,0,0x0,8
tick,0x7ffdf681f424,21039512,0,0x0,8
tick,0x7ffdf681f424,21041400,0,0x0,8
tick,0x7ffdf681f424,21043497,0,0x0,8
tick,0x7ffdf681f424,21045500,0,0x0,8
tick,0x7ffdf681f424,21047490,0,0x0,8
tick,0x7ffdf681f424,21049478,0,0x0,8
tick,0x7ffdf681f424,21051478,0,0x0,8
tick,0x7ffdf681f424,21053476,0,0x0,8
tick,0x7ffdf681f424,21055453,0,0x0,8
tick,0x7ffdf681f424,21057462,0,0x0,8
tick,0x7ffdf681f424,21059496,0,0x0,8
tick,0x7ffdf681f424,21061451,0,0x0,8
tick,0x7ffdf681f424,21063440,0,0x0,8
tick,0x7ffdf681f424,21065440,0,0x0,8
tick,0x7ffdf681f424,21067340,0,0x0,8
tick,0x7ffdf681f424,21069431,0,0x0,8
tick,0x7ffdf681f424,21071420,0,0x0,8
tick,0x7ffdf681f424,21073438,0,0x0,8
tick,0x7ffdf681f424,21075417,0,0x0,8
tick,0x7ffdf681f424,21077422,0,0x0,8
tick,0x7ffdf681f424,21079399,0,0x0,8
tick,0x7ffdf681f424,21081493,0,0x0,8
tick,0x7ffdf681f424,21083392,0,0x0,8
tick,0x7ffdf681f424,21085390,0,0x0,8
tick,0x7ffdf681f424,21087274,0,0x0,8
tick,0x7ffdf681f424,21089264,0,0x0,8
tick,0x7ffdf681f424,21091232,0,0x0,8
tick,0x7ffdf681f424,21093244,0,0x0,8
tick,0x7ffdf681f424,21095226,0,0x0,8
tick,0x7ffdf681f424,21097393,0,0x0,8
tick,0x7ffdf681f424,21099365,0,0x0,8
tick,0x7ffdf681f424,21101224,0,0x0,8
tick,0x7ffdf681f424,21103185,0,0x0,8
tick,0x7ffdf681f424,21105324,0,0x0,8
tick,0x7ffdf681f424,21107325,0,0x0,8
tick,0x7ffdf681f424,21109223,0,0x0,8
tick,0x7ffdf681f424,21111321,0,0x0,8
tick,0x7ffdf681f424,21113308,0,0x0,8
tick,0x7ffdf681f424,21115305,0,0x0,8
tick,0x7ffdf681f424,21117228,0,0x0,8
tick,0x7ffdf681f424,21119298,0,0x0,8
tick,0x7ffdf681f424,21121301,0,0x0,8
tick,0x7ffdf681f424,21123287,0,0x0,8
tick,0x7ffdf681f424,21125212,0,0x0,8
tick,0x7ffdf681f424,21127275,0,0x0,8
tick,0x7ffdf681f424,21129171,0,0x0,8
tick,0x7ffdf681f424,21131297,0,0x0,8
tick,0x7ffdf681f424,21133195,0,0x0,8
tick,0x7ffdf681f424,21135247,0,0x0,8
tick,0x7ffdf681f424,21137250,0,0x0,8
tick,0x7ffdf681f424,21139247,0,0x0,8
tick,0x7ffdf681f424,21141179,0,0x0,8
tick,0x7ffdf681f424,21143246,0,0x0,8
tick,0x7ffdf681f424,21145224,0,0x0,8
tick,0x7ffdf681f424,21147258,0,0x0,8
tick,0x7ffdf681f424,21149213,0,0x0,8
tick,0x7ffdf681f424,21151210,0,0x0,8
tick,0x7ffdf681f424,21153207,0,0x0,8
tick,0x7ffdf681f424,21155080,0,0x0,8
tick,0x7ffdf681f424,21157167,0,0x0,8
tick,0x7ffdf681f424,21159190,0,0x0,8
tick,0x7ffdf681f424,21161185,0,0x0,8
tick,0x7ffdf681f424,21163181,0,0x0,8
tick,0x7ffdf681f424,21165183,0,0x0,8
tick,0x7ffdf681f424,21167167,0,0x0,8
tick,0x7ffdf681f424,21169222,0,0x0,8
tick,0x7ffdf681f424,21171158,0,0x0,8
tick,0x7ffdf681f424,21173157,0,0x0,8
tick,0x7ffdf681f424,21175148,0,0x0,8
tick,0x7ffdf681f424,21177144,0,0x0,8
tick,0x7ffdf681f424,21179134,0,0x0,8
tick,0x7ffdf681f424,21181132,0,0x0,8
tick,0x7ffdf681f424,21183029,0,0x0,8
tick,0x7ffdf681f424,21185153,0,0x0,8
tick,0x7ffdf681f424,21187120,0,0x0,8
tick,0x7ffdf681f424,21189112,0,0x0,8
tick,0x7ffdf681f424,21190980,0,0x0,8
tick,0x7ffdf681f424,21193058,0,0x0,8
tick,0x7ffdf681f424,21195099,0,0x0,8
tick,0x7ffdf681f424,21197092,0,0x0,8
tick,0x7ffdf681f424,21199094,0,0x0,8
tick,0x7ffdf681f424,21201075,0,0x0,8
tick,0x7ffdf681f424,21203070,0,0x0,8
tick,0x7ffdf681f424,21205067,0,0x0,8
tick,0x7ffdf681f424,21207066,0,0x0,8
tick,0x7ffdf681f424,21209069,0,0x0,8
tick,0x7ffdf681f424,21211052,0,0x0,8
tick,0x7ffdf681f424,21213085,0,0x0,8
tick,0x7ffdf681f424,21215042,0,0x0,8
tick,0x7ffdf681f424,21216934,0,0x0,8
tick,0x7ffdf681f424,21218889,0,0x0,8
tick,0x7ffdf681f424,21220948,0,0x0,8
tick,0x7ffdf681f424,21222880,0,0x0,8
tick,0x7ffdf681f424,21224879,0,0x0,8
tick,0x7ffdf681f424,21226903,0,0x0,8
tick,0x7ffdf681f424,21228972,0,0x0,8
tick,0x7ffdf681f424,21230897,0,0x0,8
tick,0x7ffdf681f424,21232942,0,0x0,8
tick,0x7ffdf681f424,21234833,0,0x0,8
tick,0x7ffdf681f424,21236860,0,0x0,8
tick,0x7ffdf681f424,21238972,0,0x0,8
tick,0x7ffdf681f424,21240919,0,0x0,8
tick,0x7ffdf681f424,21242871,0,0x0,8
tick,0x7ffdf681f424,21244949,0,0x0,8
tick,0x7ffdf681f424,21246942,0,0x0,8
tick,0x7ffdf681f424,21248944,0,0x0,8
tick,0x7ffdf681f424,21250925,0,0x0,8
tick,0x7ffdf681f424,21252958,0,0x0,8
tick,0x7ffdf681f424,21254915,0,0x0,8
tick,0x7ffdf681f424,21256925,0,0x0,8
tick,0x7ffdf681f424,21258914,0,0x0,8
tick,0x7ffdf681f424,21260899,0,0x0,8
tick,0x7ffdf681f424,21262916,0,0x0,8
tick,0x7ffdf681f424,21264918,0,0x0,8
tick,0x7ffdf681f424,21266910,0,0x0,8
tick,0x7ffdf681f424,21268894,0,0x0,8
tick,0x7ffdf681f424,21270892,0,0x0,8
tick,0x7ffdf681f424,21272882,0,0x0,8
tick,0x7ffdf681f424,21274800,0,0x0,8
tick,0x7ffdf681f424,21276879,0,0x0,8
tick,0x7ffdf681f424,21278854,0,0x0,8
tick,0x7ffdf681f424,21280863,0,0x0,8
tick,0x7ffdf681f424,21282864,0,0x0,8
tick,0x7ffdf681f424,21284847,0,0x0,8
tick,0x7ffdf681f424,21286847,0,0x0,8
tick,0x7ffdf681f424,21288848,0,0x0,8
tick,0x7ffdf681f424,21290842,0,0x0,8
tick,0x7ffdf681f424,21292837,0,0x0,8
tick,0x7ffdf681f424,21294828,0,0x0,8
tick,0x7ffdf681f424,21296831,0,0x0,8
tick,0x7ffdf681f424,21298818,0,0x0,8
tick,0x7ffdf681f424,21300821,0,0x0,8
tick,0x7ffdf681f424,21302807,0,0x0,8
tick,0x7ffdf681f424,21304785,0,0x0,8
tick,0x7ffdf681f424,21306793,0,0x0,8
tick,0x7ffdf681f424,21308792,0,0x0,8
tick,0x7ffdf681f424,21310776,0,0x0,8
tick,0x7ffdf681f424,21312774,0,0x0,8
tick,0x7ffdf681f424,21314784,0,0x0,8
tick,0x7ffdf681f424,21316756,0,0x0,8
tick,0x7ffdf681f424,21318773,0,0x0,8
tick,0x7ffdf681f424,21320758,0,0x0,8
tick,0x7ffdf681f424,21322729,0,0x0,8
tick,0x7ffdf681f424,21324665,0,0x0,8
tick,0x7ffdf681f424,21326740,0,0x0,8
tick,0x7ffdf681f424,21328739,0,0x0,8
tick,0x7ffdf681f424,21330733,0,0x0,8
tick,0x7ffdf681f424,21332727,0,0x0,8
tick,0x7ffdf681f424,21334719,0,0x0,8
tick,0x7ffdf681f424,21336711,0,0x0,8
tick,0x7ffdf681f424,21338708,0,0x0,8
tick,0x7ffdf681f424,21340728,0,0x0,8
tick,0x7ffdf681f424,21342695,0,0x0,8
tick,0x7ffdf681f424,21344694,0,0x0,8
tick,0x7ffdf681f424,21346685,0,0x0,8
tick,0x7ffdf681f424,21348587,0,0x0,8
tick,0x7ffdf681f424,21350567,0,0x0,8
tick,0x7ffdf681f424,21352509,0,0x0,8
tick,0x7ffdf681f424,21354609,0,0x0,8
tick,0x7ffdf681f424,21356659,0,0x0,8
tick,0x7ffdf681f424,21358551,0,0x0,8
tick,0x7ffdf681f424,21360640,0,0x0,8
tick,0x7ffdf681f424,21362649,0,0x0,8
tick,0x7ffdf681f424,21364646,0,0x0,8
tick,0x7ffdf681f424,21366495,0,0x0,8
tick,0x7ffdf681f424,21368522,0,0x0,8
tick,0x7ffdf681f424,21370572,0,0x0,8
tick,0x7ffdf681f424,21372622,0,0x0,8
tick,0x7ffdf681f424,21374520,0,0x0,8
tick,0x7ffdf681f424,21376508,0,0x0,8
tick,0x7ffdf681f424,21378488,0,0x0,8
tick,0x7ffdf681f424,21380598,0,0x0,8
tick,0x7ffdf681f424,21382584,0,0x0,8
tick,0x7ffdf681f424,21384605,0,0x0,8
tick,0x7ffdf681f424,21386472,0,0x0,8
tick,0x7ffdf681f424,21388574,0,0x0,8
tick,0x7ffdf681f424,21390569,0,0x0,8
tick,0x7ffdf681f424,21392559,0,0x0,8
tick,0x7ffdf681f424,21394562,0,0x0,8
tick,0x7ffdf681f424,21396548,0,0x0,8
tick,0x7ffdf681f424,21398550,0,0x0,8
tick,0x7ffdf681f424,21400547,0,0x0,8
tick,0x7ffdf681f424,21402538,0,0x0,8
tick,0x7ffdf681f424,21404427,0,0x0,8
tick,0x7ffdf681f424,21406537,0,0x0,8
tick,0x7ffdf681f424,21408540,0,0x0,8
tick,0x7ffdf681f424,21410389,0,0x0,8
tick,0x7ffdf681f424,21412374,0,0x0,8
tick,0x7ffdf681f424,21414511,0,0x0,8
tick,0x7ffdf681f424,21416398,0,0x0,8
tick,0x7ffdf681f424,21418490,0,0x0,8
tick,0x7ffdf681f424,21420489,0,0x0,8
tick,0x7ffdf681f424,21422485,0,0x0,8
tick,0x7ffdf681f424,21424490,0,0x0,8
tick,0x7ffdf681f424,21426475,0,0x0,8
tick,0x7ffdf681f424,21428480,0,0x0,8
tick,0x7ffdf681f424,21430494,0,0x0,8
tick,0x7ffdf681f424,21432495,0,0x0,8
tick,0x7ffdf681f424,21434452,0,0x0,8
tick,0x7ffdf681f424,21436453,0,0x0,8
tick,0x7ffdf681f424,21438444,0,0x0,8
tick,0x7ffdf681f424,21440344,0,0x0,8
tick,0x7ffdf681f424,21442433,0,0x0,8
tick,0x7ffdf681f424,21444430,0,0x0,8
tick,0x7ffdf681f424,21446424,0,0x0,8
tick,0x7ffdf681f424,21448428,0,0x0,8
tick,0x7ffdf681f424,21450415,0,0x0,8
tick,0x7ffdf681f424,21452408,0,0x0,8
tick,0x7ffdf681f424,21454399,0,0x0,8
tick,0x7ffdf681f424,21456388,0,0x0,8
tick,0x7ffdf681f424,21458359,0,0x0,8
tick,0x7ffdf681f424,21460386,0,0x0,8
tick,0x7ffdf681f424,21462370,0,0x0,8
tick,0x7ffdf681f424,21464369,0,0x0,8
tick,0x7ffdf681f424,21466324,0,0x0,8
tick,0x7ffdf681f424,21468365,0,0x0,8
tick,0x7ffdf681f424,21470249,0,0x0,8
tick,0x7ffdf681f424,21472363,0,0x0,8
tick,0x7ffdf681f424,21474349,0,0x0,8
tick,0x7ffdf681f424,21476378,0,0x0,8
tick,0x7ffdf681f424,21478340,0,0x0,8
tick,0x7ffdf681f424,21480332,0,0x0,8
tick,0x7ffdf681f424,21482205,0,0x0,8
tick,0x7ffdf681f424,21484156,0,0x0,8
tick,0x7ffdf681f424,21486285,0,0x0,8
tick,0x7ffdf681f424,21488198,0,0x0,8
tick,0x7ffdf681f424,21490296,0,0x0,8
tick,0x7ffdf681f424,21492176,0,0x0,8
tick,0x7ffdf681f424,21494141,0,0x0,8
tick,0x7ffdf681f424,21496150,0,0x0,8
tick,0x7ffdf681f424,21498317,0,0x0,8
tick,0x7ffdf681f424,21500239,0,0x0,8
tick,0x7ffdf681f424,21502196,0,0x0,8
tick,0x7ffdf681f424,21504256,0,0x0,8
tick,0x7ffdf681f424,21506256,0,0x0,8
tick,0x7ffdf681f424,21508131,0,0x0,8
tick,0x7ffdf681f424,21510133,0,0x0,8
tick,0x7ffdf681f424,21512273,0,0x0,8
tick,0x7ffdf681f424,21514234,0,0x0,8
tick,0x7ffdf681f424,21516257,0,0x0,8
tick,0x7ffdf681f424,21518223,0,0x0,8
tick,0x7ffdf681f424,21520266,0,0x0,8
tick,0x7ffdf681f424,21522220,0,0x0,8
tick,0x7ffdf681f424,21524221,0,0x0,8
tick,0x7ffdf681f424,21526224,0,0x0,8
tick,0x7ffdf681f424,21528212,0,0x0,8
tick,0x7ffdf681f424,21530188,0,0x0,8
tick,0x7ffdf681f424,21532205,0,0x0,8
tick,0x7ffdf681f424,21534193,0,0x0,8
tick,0x7ffdf681f424,21536182,0,0x0,8
tick,0x7ffdf681f424,21538187,0,0x0,8
tick,0x7ffdf681f424,21540171,0,0x0,8
tick,0x7ffdf681f424,21542206,0,0x0,8
tick,0x7ffdf681f424,21544160,0,0x0,8
tick,0x7ffdf681f424,21546151,0,0x0,8
tick,0x7ffdf681f424,21548151,0,0x0,8
tick,0x7ffdf681f424,21550144,0,0x0,8
tick,0x7ffdf681f424,21552141,0,0x0,8
tick,0x7ffdf681f424,21554134,0,0x0,8
tick,0x7ffdf681f424,21556130,0,0x0,8
tick,0x7ffdf681f424,21558021,0,0x0,8
tick,0x7ffdf681f424,21560130,0,0x0,8
tick,0x7ffdf681f424,21562106,0,0x0,8
tick,0x7ffdf681f424,21564090,0,0x0,8
tick,0x7ffdf681f424,21566101,0,0x0,8
tick,0x7ffdf681f424,21568097,0,0x0,8
tick,0x7ffdf681f424,21570087,0,0x0,8
tick,0x7ffdf681f424,21572088,0,0x0,8
tick,0x7ffdf681f424,21574073,0,0x0,8
tick,0x7ffdf681f424,21576075,0,0x0,8
tick,0x7ffdf681f424,21578073,0,0x0,8
tick,0x7ffdf681f424,21580062,0,0x0,8
tick,0x7ffdf681f424,21582065,0,0x0,8
tick,0x7ffdf681f424,21584047,0,0x0,8
tick,0x7ffdf681f424,21586091,0,0x0,8
tick,0x7ffdf681f424,21588048,0,0x0,8
tick,0x7ffdf681f424,21590051,0,0x0,8
tick,0x7ffdf681f424,21592025,0,0x0,8
tick,0x7ffdf681f424,21594059,0,0x0,8
tick,0x7ffdf681f424,21596023,0,0x0,8
tick,0x7ffdf681f424,21598008,0,0x0,8
tick,0x7ffdf681f424,21600004,0,0x0,8
tick,0x7ffdf681f424,21602016,0,0x0,8
tick,0x7ffdf681f424,21604011,0,0x0,8
tick,0x7ffdf681f424,21605994,0,0x0,8
tick,0x7ffdf681f424,21608031,0,0x0,8
tick,0x7ffdf681f424,21609873,0,0x0,8
tick,0x7ffdf681f424,21611875,0,0x0,8
tick,0x7ffdf681f424,21613788,0,0x0,8
tick,0x7ffdf681f424,21615899,0,0x0,8
tick,0x7ffdf681f424,21617799,0,0x0,8
tick,0x7ffdf681f424,21619943,0,0x0,8
tick,0x7ffdf681f424,21621938,0,0x0,8
tick,0x7ffdf681f424,21623955,0,0x0,8
tick,0x7ffdf681f424,21625833,0,0x0,8
tick,0x7ffdf681f424,21627751,0,0x0,8
tick,0x7ffdf681f424,21629955,0,0x0,8
tick,0x7ffdf681f424,21631915,0,0x0,8
tick,0x7ffdf681f424,21633797,0,0x0,8
tick,0x7ffdf681f424,21635912,0,0x0,8
tick,0x7ffdf681f424,21637896,0,0x0,8
tick,0x7ffdf681f424,21639911,0,0x0,8
tick,0x7ffdf681f424,21641787,0,0x0,8
tick,0x7ffdf681f424,21643897,0,0x0,8
tick,0x7ffdf681f424,21645892,0,0x0,8
tick,0x7ffdf681f424,21647892,0,0x0,8
tick,0x7ffdf681f424,21649780,0,0x0,8
tick,0x7ffdf681f424,21651911,0,0x0,8
tick,0x7ffdf681f424,21653748,0,0x0,8
tick,0x7ffdf681f424,21655858,0,0x0,8
tick,0x7ffdf681f424,21657883,0,0x0,8
tick,0x7ffdf681f424,21659859,0,0x0,8
tick,0x7ffdf681f424,21661736,0,0x0,8
tick,0x7ffdf681f424,21663793,0,0x0,8
tick,0x7ffdf681f424,21665832,0,0x0,8
tick,0x7ffdf681f424,21667828,0,0x0,8
tick,0x7ffdf681f424,21669844,0,0x0,8
tick,0x7ffdf681f424,21671819,0,0x0,8
tick,0x7ffdf681f424,21673855,0,0x0,8
tick,0x7ffdf681f424,21675833,0,0x0,8
tick,0x7ffdf681f424,21677813,0,0x0,8
tick,0x7ffdf681f424,21679800,0,0x0,8
tick,0x7ffdf681f424,21681677,0,0x0,8
tick,0x7ffdf681f424,21683686,0,0x0,8
tick,0x7ffdf681f424,21685671,0,0x0,8
tick,0x7ffdf681f424,21687772,0,0x0,8
tick,0x7ffdf681f424,21689670,0,0x0,8
tick,0x7ffdf681f424,21691775,0,0x0,8
tick,0x7ffdf681f424,21693764,0,0x0,8
tick,0x7ffdf681f424,21695730,0,0x0,8
tick,0x7ffdf681f424,21697745,0,0x0,8
tick,0x7ffdf681f424,21699640,0,0x0,8
tick,0x7ffdf681f424,21701631,0,0x0,8
tick,0x7ffdf681f424,21703735,0,0x0,8
tick,0x7ffdf681f424,21705733,0,0x0,8
tick,0x7ffdf681f424,21707722,0,0x0,8
tick,0x7ffdf681f424,21709722,0,0x0,8
tick,0x7ffdf681f424,21711714,0,0x0,8
tick,0x7ffdf681f424,21713720,0,0x0,8
tick,0x7ffdf681f424,21715584,0,0x0,8
tick,0x7ffdf681f424,21717772,0,0x0,8
tick,0x7ffdf681f424,21719687,0,0x0,8
tick,0x7ffdf681f424,21721684,0,0x0,8
tick,0x7ffdf681f424,21723690,0,0x0,8
tick,0x7ffdf681f424,21725677,0,0x0,8
tick,0x7ffdf681f424,21727672,0,0x0,8
tick,0x7ffdf681f424,21729670,0,0x0,8
tick,0x7ffdf681f424,21731658,0,0x0,8
tick,0x7ffdf681f424,21733651,0,0x0,8
tick,0x7ffdf681f424,21735661,0,0x0,8
tick,0x7ffdf681f424,21737642,0,0x0,8
tick,0x7ffdf681f424,21739568,0,0x0,8
tick,0x7ffdf681f424,21741522,0,0x0,8
tick,0x7ffdf681f424,21743461,0,0x0,8
tick,0x7ffdf681f424,21745592,0,0x0,8
tick,0x7ffdf681f424,21747615,0,0x0,8
tick,0x7ffdf681f424,21749613,0,0x0,8
tick,0x7ffdf681f424,21751523,0,0x0,8
tick,0x7ffdf681f424,21753494,0,0x0,8
tick,0x7ffdf681f424,21755530,0,0x0,8
tick,0x7ffdf681f424,21757544,0,0x0,8
tick,0x7ffdf681f424,21759476,0,0x0,8
tick,0x7ffdf681f424,21761551,0,0x0,8
tick,0x7ffdf681f424,21763573,0,0x0,8
tick,0x7ffdf681f424,21765568,0,0x0,8
tick,0x7ffdf681f424,21767452,0,0x0,8
tick,0x7ffdf681f424,21769561,0,0x0,8
tick,0x7ffdf681f424,21771551,0,0x0,8
tick,0x7ffdf681f424,21773548,0,0x0,8
tick,0x7ffdf681f424,21775461,0,0x0,8
tick,0x7ffdf681f424,21777426,0,0x0,8
tick,0x7ffdf681f424,21779514,0,0x0,8
tick,0x7ffdf681f424,21781526,0,0x0,8
tick,0x7ffdf681f424,21783349,0,0x0,8
tick,0x7ffdf681f424,21785507,0,0x0,8
tick,0x7ffdf681f424,21787504,0,0x0,8
tick,0x7ffdf681f424,21789515,0,0x0,8
tick,0x7ffdf681f424,21791403,0,0x0,8
tick,0x7ffdf681f424,21793496,0,0x0,8
tick,0x7ffdf681f424,21795488,0,0x0,8
tick,0x7ffdf681f424,21797475,0,0x0,8
tick,0x7ffdf681f424,21799488,0,0x0,8
tick,0x7ffdf681f424,21801485,0,0x0,8
tick,0x7ffdf681f424,21803481,0,0x0,8
tick,0x7ffdf681f424,21805459,0,0x0,8
tick,0x7ffdf681f424,21807462,0,0x0,8
tick,0x7ffdf681f424,21809458,0,0x0,8
tick,0x7ffdf681f424,21811448,0,0x0,8
tick,0x7ffdf681f424,21813448,0,0x0,8
tick,0x7ffdf681f424,21815320,0,0x0,8
tick,0x7ffdf681f424,21817420,0,0x0,8
tick,0x7ffdf681f424,21819425,0,0x0,8
tick,0x7ffdf681f424,21821422,0,0x0,8
tick,0x7ffdf681f424,21823425,0,0x0,8
tick,0x7ffdf681f424,21825411,0,0x0,8
tick,0x7ffdf681f424,21827440,0,0x0,8
tick,0x7ffdf681f424,21829391,0,0x0,8
tick,0x7ffdf681f424,21831396,0,0x0,8
tick,0x7ffdf681f424,21833316,0,0x0,8
tick,0x7ffdf681f424,21835375,0,0x0,8
tick,0x7ffdf681f424,21837377,0,0x0,8
tick,0x7ffdf681f424,21839370,0,0x0,8
tick,0x7ffdf681f424,21841305,0,0x0,8
tick,0x7ffdf681f424,21843360,0,0x0,8
tick,0x7ffdf681f424,21845368,0,0x0,8
tick,0x7ffdf681f424,21847355,0,0x0,8
tick,0x7ffdf681f424,21849378,0,0x0,8
tick,0x7ffdf681f424,21851340,0,0x0,8
tick,0x7ffdf681f424,21853327,0,0x0,8
tick,0x7ffdf681f424,21855327,0,0x0,8
tick,0x7ffdf681f424,21857332,0,0x0,8
tick,0x7ffdf681f424,21859311,0,0x0,8
tick,0x7ffdf681f424,21861312,0,0x0,8
tick,0x7ffdf681f424,21863311,0,0x0,8
tick,0x7ffdf681f424,21865317,0,0x0,8
tick,0x7ffdf681f424,21867309,0,0x0,8
tick,0x7ffdf681f424,21869295,0,0x0,8
tick,0x7ffdf681f424,21871271,0,0x0,8
tick,0x7ffdf681f424,21873126,0,0x0,8
tick,0x7ffdf681f424,21875122,0,0x0,8
tick,0x7ffdf681f424,21877212,0,0x0,8
tick,0x7ffdf681f424,21879117,0,0x0,8
tick,0x7ffdf681f424,21881222,0,0x0,8
tick,0x7ffdf681f424,21883131,0,0x0,8
tick,0x7ffdf681f424,21885160,0,0x0,8
tick,0x7ffdf681f424,21887205,0,0x0,8
tick,0x7ffdf681f424,21889239,0,0x0,8
tick,0x7ffdf681f424,21891236,0,0x0,8
tick,0x7ffdf681f424,21893118,0,0x0,8
tick,0x7ffdf681f424,21895214,0,0x0,8
tick,0x7ffdf681f424,21897219,0,0x0,8
tick,0x7ffdf681f424,21899211,0,0x0,8
tick,0x7ffdf681f424,21901203,0,0x0,8
tick,0x7ffdf681f424,21903081,0,0x0,8
tick,0x7ffdf681f424,21905179,0,0x0,8
tick,0x7ffdf681f424,21907173,0,0x0,8
tick,0x7ffdf681f424,21909171,0,0x0,8
tick,0x7ffdf681f424,21911181,0,0x0,8
tick,0x7ffdf681f424,21913171,0,0x0,8
tick,0x7ffdf681f424,21915101,0,0x0,8
tick,0x7ffdf681f424,21917153,0,0x0,8
tick,0x7ffdf681f424,21919158,0,0x0,8
tick,0x7ffdf681f424,21921185,0,0x0,8
tick,0x7ffdf681f424,21923145,0,0x0,8
tick,0x7ffdf681f424,21925146,0,0x0,8
tick,0x7ffdf681f424,21927136,0,0x0,8
tick,0x7ffdf681f424,21929157,0,0x0,8
tick,0x7ffdf681f424,21931123,0,0x0,8
tick,0x7ffdf681f424,21933030,0,0x0,8
tick,0x7ffdf681f424,21935111,0,0x0,8
tick,0x7ffdf681f424,21937047,0,0x0,8
tick,0x7ffdf681f424,21938984,0,0x0,8
tick,0x7ffdf681f424,21941098,0,0x0,8
tick,0x7ffdf681f424,21942981,0,0x0,8
tick,0x7ffdf681f424,21944982,0,0x0,8
tick,0x7ffdf681f424,21947006,0,0x0,8
tick,0x7ffdf681f424,21949071,0,0x0,8
tick,0x7ffdf681f424,21951070,0,0x0,8
tick,0x7ffdf681f424,21953063,0,0x0,8
tick,0x7ffdf681f424,21955061,0,0x0,8
tick,0x7ffdf681f424,21957056,0,0x0,8
tick,0x7ffdf681f424,21959036,0,0x0,8
tick,0x7ffdf681f424,21961048,0,0x0,8
tick,0x7ffdf681f424,21963039,0,0x0,8
tick,0x7ffdf681f424,21964913,0,0x0,8
tick,0x7ffdf681f424,21967022,0,0x0,8
tick,0x7ffdf681f424,21969026,0,0x0,8
tick,0x7ffdf681f424,21971020,0,0x0,8
tick,0x7ffdf681f424,21973016,0,0x0,8
tick,0x7ffdf681f424,21974910,0,0x0,8
tick,0x7ffdf681f424,21977018,0,0x0,8
tick,0x7ffdf681f424,21978986,0,0x0,8
tick,0x7ffdf681f424,21980970,0,0x0,8
tick,0x7ffdf681f424,21983002,0,0x0,8
tick,0x7ffdf681f424,21984982,0,0x0,8
tick,0x7ffdf681f424,21986974,0,0x0,8
tick,0x7ffdf681f424,21988872,0,0x0,8
tick,0x7ffdf681f424,21990953,0,0x0,8
tick,0x7ffdf681f424,21992961,0,0x0,8
tick,0x7ffdf681f424,21994957,0,0x0,8
tick,0x7ffdf681f424,21996949,0,0x0,8
tick,0x7ffdf681f424,21998955,0,0x0,8
tick,0x7ffdf681f424,22000832,0,0x0,8
tick,0x7ffdf681f424,22002832,0,0x0,8
tick,0x7ffdf681f424,22004789,0,0x0,8
tick,0x7ffdf681f424,22006872,0,0x0,8
tick,0x7ffdf681f424,22008860,0,0x0,8
tick,0x7ffdf681f424,22010906,0,0x0,8
tick,0x7ffdf681f424,22012886,0,0x0,8
tick,0x7ffdf681f424,22014904,0,0x0,8
tick,0x7ffdf681f424,22016787,0,0x0,8
tick,0x7ffdf681f424,22018780,0,0x0,8
tick,0x7ffdf681f424,22020846,0,0x0,8
tick,0x7ffdf681f424,22022816,0,0x0,8
tick,0x7ffdf681f424,22024708,0,0x0,8
tick,0x7ffdf681f424,22026801,0,0x0,8
tick,0x7ffdf681f424,22028853,0,0x0,8
tick,0x7ffdf681f424,22030849,0,0x0,8
tick,0x7ffdf681f424,22032851,0,0x0,8
tick,0x7ffdf681f424,22034853,0,0x0,8
tick,0x7ffdf681f424,22036841,0,0x0,8
tick,0x7ffdf681f424,22038871,0,0x0,8
tick,0x7ffdf681f424,22040824,0,0x0,8
tick,0x7ffdf681f424,22042839,0,0x0,8
tick,0x7ffdf681f424,22044814,0,0x0,8
tick,0x7ffdf681f424,22046859,0,0x0,8
tick,0x7ffdf681f424,22048812,0,0x0,8
tick,0x7ffdf681f424,22050814,0,0x0,8
tick,0x7ffdf681f424,22052809,0,0x0,8
tick,0x7ffdf681f424,22054795,0,0x0,8
tick,0x7ffdf681f424,22056788,0,0x0,8
tick,0x7ffdf681f424,22058779,0,0x0,8
tick,0x7ffdf681f424,22060778,0,0x0,8
tick,0x7ffdf681f424,22062782,0,0x0,8
tick,0x7ffdf681f424,22064764,0,0x0,8
tick,0x7ffdf681f424,22066694,0,0x0,8
tick,0x7ffdf681f424,22068761,0,0x0,8
tick,0x7ffdf681f424,22070749,0,0x0,8
tick,0x7ffdf681f424,22072746,0,0x0,8
tick,0x7ffdf681f424,22074683,0,0x0,8
tick,0x7ffdf681f424,22076740,0,0x0,8
tick,0x7ffdf681f424,22078732,0,0x0,8
tick,0x7ffdf681f424,22080726,0,0x0,8
tick,0x7ffdf681f424,22082718,0,0x0,8
tick,0x7ffdf681f424,22084728,0,0x0,8
tick,0x7ffdf681f424,22086715,0,0x0,8
tick,0x7ffdf681f424,22088711,0,0x0,8
tick,0x7ffdf681f424,22090730,0,0x0,8
tick,0x7ffdf681f424,22092590,0,0x0,8
tick,0x7ffdf681f424,22094690,0,0x0,8
tick,0x7ffdf681f424,22096684,0,0x0,8
tick,0x7ffdf681f424,22098686,0,0x0,8
tick,0x7ffdf681f424,22100655,0,0x0,8
tick,0x7ffdf681f424,22102662,0,0x0,8
tick,0x7ffdf681f424,22104660,0,0x0,8
tick,0x7ffdf681f424,22106668,0,0x0,8
tick,0x7ffdf681f424,22108662,0,0x0,8
tick,0x7ffdf681f424,22110645,0,0x0,8
tick,0x7ffdf681f424,22112674,0,0x0,8
tick,0x7ffdf681f424,22114634,0,0x0,8
tick,0x7ffdf681f424,22116631,0,0x0,8
tick,0x7ffdf681f424,22118624,0,0x0,8
tick,0x7ffdf681f424,22120617,0,0x0,8
tick,0x7ffdf681f424,22122627,0,0x0,8
tick,0x7ffdf681f424,22124629,0,0x0,8
tick,0x7ffdf681f424,22126570,0,0x0,8
tick,0x7ffdf681f424,22128601,0,0x0,8
tick,0x7ffdf681f424,22130530,0,0x0,8
tick,0x7ffdf681f424,22132469,0,0x0,8
tick,0x7ffdf681f424,22134395,0,0x0,8
tick,0x7ffdf681f424,22136531,0,0x0,8
tick,0x7ffdf681f424,22138533,0,0x0,8
tick,0x7ffdf681f424,22140589,0,0x0,8
tick,0x7ffdf681f424,22142420,0,0x0,8
tick,0x7ffdf681f424,22144409,0,0x0,8
tick,0x7ffdf681f424,22146498,0,0x0,8
tick,0x7ffdf681f424,22148506,0,0x0,8
tick,0x7ffdf681f424,22150443,0,0x0,8
tick,0x7ffdf681f424,22152544,0,0x0,8
tick,0x7ffdf681f424,22154521,0,0x0,8
tick,0x7ffdf681f424,22156563,0,0x0,8
tick,0x7ffdf681f424,22158409,0,0x0,8
tick,0x7ffdf681f424,22160398,0,0x0,8
tick,0x7ffdf681f424,22162388,0,0x0,8
tick,0x7ffdf681f424,22164494,0,0x0,8
tick,0x7ffdf681f424,22166409,0,0x0,8
tick,0x7ffdf681f424,22168484,0,0x0,8
tick,0x7ffdf681f424,22170481,0,0x0,8
tick,0x7ffdf681f424,22172474,0,0x0,8
tick,0x7ffdf681f424,22174498,0,0x0,8
tick,0x7ffdf681f424,22176468,0,0x0,8
tick,0x7ffdf681f424,22178515,0,0x0,8
tick,0x7ffdf681f424,22180468,0,0x0,8
tick,0x7ffdf681f424,22182461,0,0x0,8
tick,0x7ffdf681f424,22184453,0,0x0,8
tick,0x7ffdf681f424,22186454,0,0x0,8
tick,0x7ffdf681f424,22188322,0,0x0,8
tick,0x7ffdf681f424,22190424,0,0x0,8
tick,0x7ffdf681f424,22192457,0,0x0,8
tick,0x7ffdf681f424,22194416,0,0x0,8
tick,0x7ffdf681f424,22196432,0,0x0,8
tick,0x7ffdf681f424,22198413,0,0x0,8
tick,0x7ffdf681f424,22200469,0,0x0,8
tick,0x7ffdf681f424,22202406,0,0x0,8
tick,0x7ffdf681f424,22204394,0,0x0,8
tick,0x7ffdf681f424,22206402,0,0x0,8
tick,0x7ffdf681f424,22208293,0,0x0,8
tick,0x7ffdf681f424,22210378,0,0x0,8
tick,0x7ffdf681f424,22212379,0,0x0,8
tick,0x7ffdf681f424,22214373,0,0x0,8
tick,0x7ffdf681f424,22216380,0,0x0,8
tick,0x7ffdf681f424,22218368,0,0x0,8
tick,0x7ffdf681f424,22220360,0,0x0,8
tick,0x7ffdf681f424,22222439,0,0x0,8
tick,0x7ffdf681f424,22224225,0,0x0,8
tick,0x7ffdf681f424,22226338,0,0x0,8
tick,0x7ffdf681f424,22228330,0,0x0,8
tick,0x7ffdf681f424,22230318,0,0x0,8
tick,0x7ffdf681f424,22232318,0,0x0,8
tick,0x7ffdf681f424,22234310,0,0x0,8
tick,0x7ffdf681f424,22236314,0,0x0,8
tick,0x7ffdf681f424,22238298,0,0x0,8
tick,0x7ffdf681f424,22240310,0,0x0,8
tick,0x7ffdf681f424,22242294,0,0x0,8
tick,0x7ffdf681f424,22244271,0,0x0,8
tick,0x7ffdf681f424,22246280,0,0x0,8
tick,0x7ffdf681f424,22248310,0,0x0,8
tick,0x7ffdf681f424,22250153,0,0x0,8
tick,0x7ffdf681f424,22252265,0,0x0,8
tick,0x7ffdf681f424,22254266,0,0x0,8
tick,0x7ffdf681f424,22256258,0,0x0,8
tick,0x7ffdf681f424,22258140,0,0x0,8
tick,0x7ffdf681f424,22260249,0,0x0,8
tick,0x7ffdf681f424,22262245,0,0x0,8
tick,0x7ffdf681f424,22264091,0,0x0,8
tick,0x7ffdf681f424,22266084,0,0x0,8
tick,0x7ffdf681f424,22268083,0,0x0,8
tick,0x7ffdf681f424,22270162,0,0x0,8
tick,0x7ffdf681f424,22272128,0,0x0,8
tick,0x7ffdf681f424,22274229,0,0x0,8
tick,0x7ffdf681f424,22276133,0,0x0,8
tick,0x7ffdf681f424,22278041,0,0x0,8
tick,0x7ffdf681f424,22280131,0,0x0,8
tick,0x7ffdf681f424,22282072,0,0x0,8
tick,0x7ffdf681f424,22284045,0,0x0,8
tick,0x7ffdf681f424,22286176,0,0x0,8
tick,0x7ffdf681f424,22288190,0,0x0,8
tick,0x7ffdf681f424,22290153,0,0x0,8
tick,0x7ffdf681f424,22292210,0,0x0,8
tick,0x7ffdf681f424,22294150,0,0x0,8
tick,0x7ffdf681f424,22296031,0,0x0,8
tick,0x7ffdf681f424,22298145,0,0x0,8
tick,0x7ffdf681f424,22300034,0,0x0,8
tick,0x7ffdf681f424,22302047,0,0x0,8
tick,0x7ffdf681f424,22304132,0,0x0,8
tick,0x7ffdf681f424,22306137,0,0x0,8
tick,0x7ffdf681f424,22308048,0,0x0,8
tick,0x7ffdf681f424,22310081,0,0x0,8
tick,0x7ffdf681f424,22312055,0,0x0,8
tick,0x7ffdf681f424,22314097,0,0x0,8
tick,0x7ffdf681f424,22316101,0,0x0,8
tick,0x7ffdf681f424,22318097,0,0x0,8
tick,0x7ffdf681f424,22320092,0,0x0,8
tick,0x7ffdf681f424,22322087,0,0x0,8
tick,0x7ffdf681f424,22324090,0,0x0,8
tick,0x7ffdf681f424,22326065,0,0x0,8
tick,0x7ffdf681f424,22328075,0,0x0,8
tick,0x7ffdf681f424,22330090,0,0x0,8
tick,0x7ffdf681f424,22332034,0,0x0,8
tick,0x7ffdf681f424,22334054,0,0x0,8
tick,0x7ffdf681f424,22336041,0,0x0,8
tick,0x7ffdf681f424,22338052,0,0x0,8
tick,0x7ffdf681f424,22340032,0,0x0,8
tick,0x7ffdf681f424,22342030,0,0x0,8
tick,0x7ffdf681f424,22344019,0,0x0,8
tick,0x7ffdf681f424,22346019,0,0x0,8
tick,0x7ffdf681f424,22348015,0,0x0,8
tick,0x7ffdf681f424,22349889,0,0x0,8
tick,0x7ffdf681f424,22352002,0,0x0,8
tick,0x7ffdf681f424,22353972,0,0x0,8
tick,0x7ffdf681f424,22355996,0,0x0,8
tick,0x7ffdf681f424,22357997,0,0x0,8
tick,0x7ffdf681f424,22359980,0,0x0,8
tick,0x7ffdf681f424,22361986,0,0x0,8
tick,0x7ffdf681f424,22363972,0,0x0,8
tick,0x7ffdf681f424,22365959,0,0x0,8
tick,0x7ffdf681f424,22367961,0,0x0,8
tick,0x7ffdf681f424,22369953,0,0x0,8
tick,0x7ffdf681f424,22371957,0,0x0,8
tick,0x7ffdf681f424,22373950,0,0x0,8
tick,0x7ffdf681f424,22375900,0,0x0,8
tick,0x7ffdf681f424,22377964,0,0x0,8
tick,0x7ffdf681f424,22379924,0,0x0,8
tick,0x7ffdf681f424,22381915,0,0x0,8
tick,0x7ffdf681f424,22383916,0,0x0,8
tick,0x7ffdf681f424,22385800,0,0x0,8
tick,0x7ffdf681f424,22387792,0,0x0,8
tick,0x7ffdf681f424,22389802,0,0x0,8
tick,0x7ffdf681f424,22391779,0,0x0,8
tick,0x7ffdf681f424,22393798,0,0x0,8
tick,0x7ffdf681f424,22395728,0,0x0,8
tick,0x7ffdf681f424,22397753,0,0x0,8
tick,0x7ffdf681f424,22399754,0,0x0,8
tick,0x7ffdf681f424,22401748,0,0x0,8
tick,0x7ffdf681f424,22403845,0,0x0,8
tick,0x7ffdf681f424,22405851,0,0x0,8
tick,0x7ffdf681f424,22407865,0,0x0,8
tick,0x7ffdf681f424,22409740,0,0x0,8
tick,0x7ffdf681f424,22411679,0,0x0,8
tick,0x7ffdf681f424,22413774,0,0x0,8
tick,0x7ffdf681f424,22415700,0,0x0,8
tick,0x7ffdf681f424,22417690,0,0x0,8
tick,0x7ffdf681f424,22419818,0,0x0,8
tick,0x7ffdf681f424,22421788,0,0x0,8
tick,0x7ffdf681f424,22423792,0,0x0,8
tick,0x7ffdf681f424,22425664,0,0x0,8
tick,0x7ffdf681f424,22427793,0,0x0,8
tick,0x7ffdf681f424,22429778,0,0x0,8
tick,0x7ffdf681f424,22431790,0,0x0,8
tick,0x7ffdf681f424,22433780,0,0x0,8
tick,0x7ffdf681f424,22435773,0,0x0,8
tick,0x7ffdf681f424,22437671,0,0x0,8
tick,0x7ffdf681f424,22439770,0,0x0,8
tick,0x7ffdf681f424,22441609,0,0x0,8
tick,0x7ffdf681f424,22443756,0,0x0,8
tick,0x7ffdf681f424,22445749,0,0x0,8
tick,0x7ffdf681f424,22447742,0,0x0,8
tick,0x7ffdf681f424,22449746,0,0x0,8
tick,0x7ffdf681f424,22451734,0,0x0,8
tick,0x7ffdf681f424,22453732,0,0x0,8
tick,0x7ffdf681f424,22455723,0,0x0,8
tick,0x7ffdf681f424,22457720,0,0x0,8
tick,0x7ffdf681f424,22459726,0,0x0,8
tick,0x7ffdf681f424,22461702,0,0x0,8
tick,0x7ffdf681f424,22463693,0,0x0,8
tick,0x7ffdf681f424,22465683,0,0x0,8
tick,0x7ffdf681f424,22467695,0,0x0,8
tick,0x7ffdf681f424,22469687,0,0x0,8
tick,0x7ffdf681f424,22471682,0,0x0,8
tick,0x7ffdf681f424,22473567,0,0x0,8
tick,0x7ffdf681f424,22475662,0,0x0,8
tick,0x7ffdf681f424,22477666,0,0x0,8
tick,0x7ffdf681f424,22479663,0,0x0,8
tick,0x7ffdf681f424,22481666,0,0x0,8
tick,0x7ffdf681f424,22483644,0,0x0,8
tick,0x7ffdf681f424,22485616,0,0x0,8
tick,0x7ffdf681f424,22487640,0,0x0,8
tick,0x7ffdf681f424,22489635,0,0x0,8
tick,0x7ffdf681f424,22491516,0,0x0,8
tick,0x7ffdf681f424,22493647,0,0x0,8
tick,0x7ffdf681f424,22495619,0,0x0,8
tick,0x7ffdf681f424,22497615,0,0x0,8
tick,0x7ffdf681f424,22499487,0,0x0,8
tick,0x7ffdf681f424,22501603,0,0x0,8
tick,0x7ffdf681f424,22503603,0,0x0,8
tick,0x7ffdf681f424,22505590,0,0x0,8
tick,0x7ffdf681f424,22507560,0,0x0,8
tick,0x7ffdf681f424,22509578,0,0x0,8
tick,0x7ffdf681f424,22511577,0,0x0,8
tick,0x7ffdf681f424,22513568,0,0x0,8
tick,0x7ffdf681f424,22515559,0,0x0,8
tick,0x7ffdf681f424,22517554,0,0x0,8
tick,0x7ffdf681f424,22519552,0,0x0,8
tick,0x7ffdf681f424,22521436,0,0x0,8
tick,0x7ffdf681f424,22523550,0,0x0,8
tick,0x7ffdf681f424,22525390,0,0x0,8
tick,0x7ffdf681f424,22527376,0,0x0,8
tick,0x7ffdf681f424,22529409,0,0x0,8
tick,0x7ffdf681f424,22531443,0,0x0,8
tick,0x7ffdf681f424,22533423,0,0x0,8
tick,0x7ffdf681f424,22535353,0,0x0,8
tick,0x7ffdf681f424,22537355,0,0x0,8
tick,0x7ffdf681f424,22539483,0,0x0,8
tick,0x7ffdf681f424,22541470,0,0x0,8
tick,0x7ffdf681f424,22543404,0,0x0,8
tick,0x7ffdf681f424,22545491,0,0x0,8
tick,0x7ffdf681f424,22547489,0,0x0,8
tick,0x7ffdf681f424,22549477,0,0x0,8
tick,0x7ffdf681f424,22551550,0,0x0,8
tick,0x7ffdf681f424,22553466,0,0x0,8
tick,0x7ffdf681f424,22555465,0,0x0,8
tick,0x7ffdf681f424,22557456,0,0x0,8
tick,0x7ffdf681f424,22559456,0,0x0,8
tick,0x7ffdf681f424,22561460,0,0x0,8
tick,0x7ffdf681f424,22563386,0,0x0,8
tick,0x7ffdf681f424,22565430,0,0x0,8
tick,0x7ffdf681f424,22567425,0,0x0,8
tick,0x7ffdf681f424,22569440,0,0x0,8
tick,0x7ffdf681f424,22571420,0,0x0,8
tick,0x7ffdf681f424,22573476,0,0x0,8
tick,0x7ffdf681f424,22575447,0,0x0,8
tick,0x7ffdf681f424,22577409,0,0x0,8
tick,0x7ffdf681f424,22579396,0,0x0,8
tick,0x7ffdf681f424,22581396,0,0x0,8
tick,0x7ffdf681f424,22583298,0,0x0,8
tick,0x7ffdf681f424,22585263,0,0x0,8
tick,0x7ffdf681f424,22587345,0,0x0,8
tick,0x7ffdf681f424,22589373,0,0x0,8
tick,0x7ffdf681f424,22591382,0,0x0,8
tick,0x7ffdf681f424,22593358,0,0x0,8
tick,0x7ffdf681f424,22595364,0,0x0,8
tick,0x7ffdf681f424,22597361,0,0x0,8
tick,0x7ffdf681f424,22599333,0,0x0,8
tick,0x7ffdf681f424,22601337,0,0x0,8
tick,0x7ffdf681f424,22603210,0,0x0,8
tick,0x7ffdf681f424,22605326,0,0x0,8
tick,0x7ffdf681f424,22607326,0,0x0,8
tick,0x7ffdf681f424,22609318,0,0x0,8
tick,0x7ffdf681f424,22611310,0,0x0,8
tick,0x7ffdf681f424,22613306,0,0x0,8
tick,0x7ffdf681f424,22615302,0,0x0,8
tick,0x7ffdf681f424,22617335,0,0x0,8
tick,0x7ffdf681f424,22619293,0,0x0,8
tick,0x7ffdf681f424,22621275,0,0x0,8
tick,0x7ffdf681f424,22623271,0,0x0,8
tick,0x7ffdf681f424,22625265,0,0x0,8
tick,0x7ffdf681f424,22627264,0,0x0,8
tick,0x7ffdf681f424,22629257,0,0x0,8
tick,0x7ffdf681f424,22631154,0,0x0,8
tick,0x7ffdf681f424,22633248,0,0x0,8
tick,0x7ffdf681f424,22635255,0,0x0,8
tick,0x7ffdf681f424,22637240,0,0x0,8
tick,0x7ffdf681f424,22639258,0,0x0,8
tick,0x7ffdf681f424,22641231,0,0x0,8
tick,0x7ffdf681f424,22643222,0,0x0,8
tick,0x7ffdf681f424,22645219,0,0x0,8
tick,0x7ffdf681f424,22647206,0,0x0,8
tick,0x7ffdf681f424,22649213,0,0x0,8
tick,0x7ffdf681f424,22651197,0,0x0,8
tick,0x7ffdf681f424,22653196,0,0x0,8
tick,0x7ffdf681f424,22655076,0,0x0,8
tick,0x7ffdf681f424,22656995,0,0x0,8
tick,0x7ffdf681f424,22659020,0,0x0,8
tick,0x7ffdf681f424,22661047,0,0x0,8
tick,0x7ffdf681f424,22663025,0,0x0,8
tick,0x7ffdf681f424,22665079,0,0x0,8
tick,0x7ffdf681f424,22667050,0,0x0,8
tick,0x7ffdf681f424,22669024,0,0x0,8
tick,0x7ffdf681f424,22671115,0,0x0,8
tick,0x7ffdf681f424,22673133,0,0x0,8
tick,0x7ffdf681f424,22675039,0,0x0,8
tick,0x7ffdf681f424,22677052,0,0x0,8
tick,0x7ffdf681f424,22679123,0,0x0,8
tick,0x7ffdf681f424,22681106,0,0x0,8
tick,0x7ffdf681f424,22683114,0,0x0,8
tick,0x7ffdf681f424,22685108,0,0x0,8
tick,0x7ffdf681f424,22686988,0,0x0,8
tick,0x7ffdf681f424,22689086,0,0x0,8
tick,0x7ffdf681f424,22691093,0,0x0,8
tick,0x7ffdf681f424,22693092,0,0x0,8
tick,0x7ffdf681f424,22695088,0,0x0,8
tick,0x7ffdf681f424,22697089,0,0x0,8
tick,0x7ffdf681f424,22699097,0,0x0,8
tick,0x7ffdf681f424,22701031,0,0x0,8
tick,0x7ffdf681f424,22703065,0,0x0,8
tick,0x7ffdf681f424,22705023,0,0x0,8
tick,0x7ffdf681f424,22707051,0,0x0,8
tick,0x7ffdf681f424,22709052,0,0x0,8
tick,0x7ffdf681f424,22711039,0,0x0,8
tick,0x7ffdf681f424,22713035,0,0x0,8
tick,0x7ffdf681f424,22715034,0,0x0,8
tick,0x7ffdf681f424,22717025,0,0x0,8
tick,0x7ffdf681f424,22719022,0,0x0,8
tick,0x7ffdf681f424,22721013,0,0x0,8
tick,0x7ffdf681f424,22722922,0,0x0,8
tick,0x7ffdf681f424,22724871,0,0x0,8
tick,0x7ffdf681f424,22726984,0,0x0,8
tick,0x7ffdf681f424,22728962,0,0x0,8
tick,0x7ffdf681f424,22730948,0,0x0,8
tick,0x7ffdf681f424,22732957,0,0x0,8
tick,0x7ffdf681f424,22734984,0,0x0,8
tick,0x7ffdf681f424,22736975,0,0x0,8
tick,0x7ffdf681f424,22739000,0,0x0,8
tick,0x7ffdf681f424,22740962,0,0x0,8
tick,0x7ffdf681f424,22742955,0,0x0,8
tick,0x7ffdf681f424,22744933,0,0x0,8
tick,0x7ffdf681f424,22746946,0,0x0,8
tick,0x7ffdf681f424,22748774,0,0x0,8
tick,0x7ffdf681f424,22750890,0,0x0,8
tick,0x7ffdf681f424,22752924,0,0x0,8
tick,0x7ffdf681f424,22754919,0,0x0,8
tick,0x7ffdf681f424,22756914,0,0x0,8
tick,0x7ffdf681f424,22758907,0,0x0,8
tick,0x7ffdf681f424,22760907,0,0x0,8
tick,0x7ffdf681f424,22762901,0,0x0,8
tick,0x7ffdf681f424,22764898,0,0x0,8
tick,0x7ffdf681f424,22766833,0,0x0,8
tick,0x7ffdf681f424,22768884,0,0x0,8
tick,0x7ffdf681f424,22770864,0,0x0,8
tick,0x7ffdf681f424,22772872,0,0x0,8
tick,0x7ffdf681f424,22774789,0,0x0,8
tick,0x7ffdf681f424,22776864,0,0x0,8
tick,0x7ffdf681f424,22778858,0,0x0,8
tick,0x7ffdf681f424,22780858,0,0x0,8
tick,0x7ffdf681f424,22782861,0,0x0,8
tick,0x7ffdf681f424,22784844,0,0x0,8
tick,0x7ffdf681f424,22786825,0,0x0,8
tick,0x7ffdf681f424,22788822,0,0x0,8
tick,0x7ffdf681f424,22790703,0,0x0,8
tick,0x7ffdf681f424,22792680,0,0x0,8
tick,0x7ffdf681f424,22794658,0,0x0,8
tick,0x7ffdf681f424,22796855,0,0x0,8
tick,0x7ffdf681f424,22798809,0,0x0,8
tick,0x7ffdf681f424,22800802,0,0x0,8
tick,0x7ffdf681f424,22802626,0,0x0,8
tick,0x7ffdf681f424,22804741,0,0x0,8
tick,0x7ffdf681f424,22806767,0,0x0,8
tick,0x7ffdf681f424,22808642,0,0x0,8
tick,0x7ffdf681f424,22810797,0,0x0,8
tick,0x7ffdf681f424,22812761,0,0x0,8
tick,0x7ffdf681f424,22814569,0,0x0,8
tick,0x7ffdf681f424,22816695,0,0x0,8
tick,0x7ffdf681f424,22818725,0,0x0,8
tick,0x7ffdf681f424,22820733,0,0x0,8
tick,0x7ffdf681f424,22822741,0,0x0,8
tick,0x7ffdf681f424,22823940,0,0x0,8
tick,0x7ffdf681f424,22825956,0,0x0,8
tick,0x7ffdf681f424,22827177,0,0x0,8
tick,0x7ffdf681f424,22828337,0,0x0,8
tick,0x7ffdf681f424,22829529,0,0x0,8
tick,0x7ffdf681f424,22831495,0,0x0,8
tick,0x7ffdf681f424,22833532,0,0x0,8
tick,0x7ffdf681f424,22835423,0,0x0,8
tick,0x7ffdf681f424,22837501,0,0x0,8
tick,0x7ffdf681f424,22838689,0,0x0,8
tick,0x7ffdf681f424,22839842,0,0x0,8
tick,0x7ffdf681f424,22840969,0,0x0,8
tick,0x7ffdf681f424,22842072,0,0x0,8
tick,0x7ffdf681f424,22844063,0,0x0,8
tick,0x7ffdf681f424,22845235,0,0x0,8
tick,0x7ffdf681f424,22847138,0,0x0,8
tick,0x7ffdf681f424,22848198,0,0x0,8
tick,0x7ffdf681f424,22850344,0,0x0,8
tick,0x7ffdf681f424,22852326,0,0x0,8
tick,0x7ffdf681f424,22854310,0,0x0,8
tick,0x7ffdf681f424,22856314,0,0x0,8
tick,0x7ffdf681f424,22858203,0,0x0,8
tick,0x7ffdf681f424,22860281,0,0x0,8
tick,0x7ffdf681f424,22862266,0,0x0,8
tick,0x7ffdf681f424,22864273,0,0x0,8
tick,0x7ffdf681f424,22866246,0,0x0,8
tick,0x7ffdf681f424,22868245,0,0x0,8
tick,0x7ffdf681f424,22870225,0,0x0,8
tick,0x7ffdf681f424,22872256,0,0x0,8
tick,0x7ffdf681f424,22874237,0,0x0,8
tick,0x7ffdf681f424,22876247,0,0x0,8
tick,0x7ffdf681f424,22878186,0,0x0,8
tick,0x7ffdf681f424,22880231,0,0x0,8
tick,0x7ffdf681f424,22882229,0,0x0,8
tick,0x7ffdf681f424,22884230,0,0x0,8
tick,0x7ffdf681f424,22886171,0,0x0,8
tick,0x7ffdf681f424,22888212,0,0x0,8
tick,0x7ffdf681f424,22890208,0,0x0,8
tick,0x7ffdf681f424,22892208,0,0x0,8
tick,0x7ffdf681f424,22894195,0,0x0,8
tick,0x7ffdf681f424,22896196,0,0x0,8
tick,0x7ffdf681f424,22898146,0,0x0,8
tick,0x7ffdf681f424,22900129,0,0x0,8
tick,0x7ffdf681f424,22902066,0,0x0,8
tick,0x7ffdf681f424,22904127,0,0x0,8
tick,0x7ffdf681f424,22906172,0,0x0,8
tick,0x7ffdf681f424,22908106,0,0x0,8
tick,0x7ffdf681f424,22910049,0,0x0,8
tick,0x7ffdf681f424,22911994,0,0x0,8
tick,0x7ffdf681f424,22914000,0,0x0,8
tick,0x7ffdf681f424,22915923,0,0x0,8
tick,0x7ffdf681f424,22917985,0,0x0,8
tick,0x7ffdf681f424,22920034,0,0x0,8
tick,0x7ffdf681f424,22922044,0,0x0,8
tick,0x7ffdf681f424,22924045,0,0x0,8
tick,0x7ffdf681f424,22925992,0,0x0,8
tick,0x7ffdf681f424,22927966,0,0x0,8
tick,0x7ffdf681f424,22930016,0,0x0,8
tick,0x7ffdf681f424,22932108,0,0x0,8
tick,0x7ffdf681f424,22934031,0,0x0,8
tick,0x7ffdf681f424,22935973,0,0x0,8
tick,0x7ffdf681f424,22938072,0,0x0,8
tick,0x7ffdf681f424,22940068,0,0x0,8
tick,0x7ffdf681f424,22941972,0,0x0,8
tick,0x7ffdf681f424,22944079,0,0x0,8
tick,0x7ffdf681f424,22946041,0,0x0,8
tick,0x7ffdf681f424,22948054,0,0x0,8
tick,0x7ffdf681f424,22949926,0,0x0,8
tick,0x7ffdf681f424,22952000,0,0x0,8
tick,0x7ffdf681f424,22954035,0,0x0,8
tick,0x7ffdf681f424,22956031,0,0x0,8
tick,0x7ffdf681f424,22958060,0,0x0,8
tick,0x7ffdf681f424,22960020,0,0x0,8
tick,0x7ffdf681f424,22962013,0,0x0,8
tick,0x7ffdf681f424,22964012,0,0x0,8
tick,0x7ffdf681f424,22965949,0,0x0,8
tick,0x7ffdf681f424,22968010,0,0x0,8
tick,0x7ffdf681f424,22969986,0,0x0,8
tick,0x7ffdf681f424,22971879,0,0x0,8
tick,0x7ffdf681f424,22973942,0,0x0,8
tick,0x7ffdf681f424,22975973,0,0x0,8
tick,0x7ffdf681f424,22977969,0,0x0,8
tick,0x7ffdf681f424,22979963,0,0x0,8
tick,0x7ffdf681f424,22981963,0,0x0,8
tick,0x7ffdf681f424,22983932,0,0x0,8
tick,0x7ffdf681f424,22985949,0,0x0,8
tick,0x7ffdf681f424,22987899,0,0x0,8
tick,0x7ffdf681f424,22989946,0,0x0,8
tick,0x7ffdf681f424,22991905,0,0x0,8
tick,0x7ffdf681f424,22993938,0,0x0,8
tick,0x7ffdf681f424,22995879,0,0x0,8
tick,0x7ffdf681f424,22997806,0,0x0,8
tick,0x7ffdf681f424,22999844,0,0x0,8
tick,0x7ffdf681f424,23001898,0,0x0,8
tick,0x7ffdf681f424,23003896,0,0x0,8
tick,0x7ffdf681f424,23005898,0,0x0,8
tick,0x7ffdf681f424,23007902,0,0x0,8
tick,0x7ffdf681f424,23009832,0,0x0,8
tick,0x7ffdf681f424,23011891,0,0x0,8
tick,0x7ffdf681f424,23013886,0,0x0,8
tick,0x7ffdf681f424,23015866,0,0x0,8
tick,0x7ffdf681f424,23017847,0,0x0,8
tick,0x7ffdf681f424,23019863,0,0x0,8
tick,0x7ffdf681f424,23021854,0,0x0,8
tick,0x7ffdf681f424,23023847,0,0x0,8
tick,0x7ffdf681f424,23025842,0,0x0,8
tick,0x7ffdf681f424,23027840,0,0x0,8
tick,0x7ffdf681f424,23029829,0,0x0,8
tick,0x7ffdf681f424,23031777,0,0x0,8
tick,0x7ffdf681f424,23033786,0,0x0,8
tick,0x7ffdf681f424,23035809,0,0x0,8
tick,0x7ffdf681f424,23037817,0,0x0,8
tick,0x7ffdf681f424,23039767,0,0x0,8
tick,0x7ffdf681f424,23041696,0,0x0,8
tick,0x7ffdf681f424,23043636,0,0x0,8
tick,0x7ffdf681f424,23045653,0,0x0,8
tick,0x7ffdf681f424,23047712,0,0x0,8
tick,0x7ffdf681f424,23049736,0,0x0,8
tick,0x7ffdf681f424,23051676,0,0x0,8
tick,0x7ffdf681f424,23053731,0,0x0,8
tick,0x7ffdf681f424,23055756,0,0x0,8
tick,0x7ffdf681f424,23057750,0,0x0,8
tick,0x7ffdf681f424,23059571,0,0x0,8
tick,0x7ffdf681f424,23061535,0,0x0,8
tick,0x7ffdf681f424,23063678,0,0x0,8
tick,0x7ffdf681f424,23065706,0,0x0,8
tick,0x7ffdf681f424,23067629,0,0x0,8
tick,0x7ffdf681f424,23069724,0,0x0,8
tick,0x7ffdf681f424,23071702,0,0x0,8
tick,0x7ffdf681f424,23073706,0,0x0,8
tick,0x7ffdf681f424,23075612,0,0x0,8
tick,0x7ffdf681f424,23077702,0,0x0,8
tick,0x7ffdf681f424,23079695,0,0x0,8
tick,0x7ffdf681f424,23081688,0,0x0,8
tick,0x7ffdf681f424,23083545,0,0x0,8
tick,0x7ffdf681f424,23085634,0,0x0,8
tick,0x7ffdf681f424,23087671,0,0x0,8
tick,0x7ffdf681f424,23089673,0,0x0,8
tick,0x7ffdf681f424,23091559,0,0x0,8
tick,0x7ffdf681f424,23093659,0,0x0,8
tick,0x7ffdf681f424,23095612,0,0x0,8
tick,0x7ffdf681f424,23097597,0,0x0,8
tick,0x7ffdf681f424,23099649,0,0x0,8
tick,0x7ffdf681f424,23101643,0,0x0,8
tick,0x7ffdf681f424,23103629,0,0x0,8
tick,0x7ffdf681f424,23105631,0,0x0,8
tick,0x7ffdf681f424,23107620,0,0x0,8
tick,0x7ffdf681f424,23109613,0,0x0,8
tick,0x7ffdf681f424,23111607,0,0x0,8
tick,0x7ffdf681f424,23113613,0,0x0,8
tick,0x7ffdf681f424,23115598,0,0x0,8
tick,0x7ffdf681f424,23117591,0,0x0,8
tick,0x7ffdf681f424,23119541,0,0x0,8
tick,0x7ffdf681f424,23121604,0,0x0,8
tick,0x7ffdf681f424,23123573,0,0x0,8
tick,0x7ffdf681f424,23125583,0,0x0,8
tick,0x7ffdf681f424,23127570,0,0x0,8
tick,0x7ffdf681f424,23129460,0,0x0,8
tick,0x7ffdf681f424,23131555,0,0x0,8
tick,0x7ffdf681f424,23133457,0,0x0,8
tick,0x7ffdf681f424,23135540,0,0x0,8
tick,0x7ffdf681f424,23137551,0,0x0,8
tick,0x7ffdf681f424,23139537,0,0x0,8
tick,0x7ffdf681f424,23141560,0,0x0,8
tick,0x7ffdf681f424,23143499,0,0x0,8
tick,0x7ffdf681f424,23145517,0,0x0,8
tick,0x7ffdf681f424,23147498,0,0x0,8
tick,0x7ffdf681f424,23149513,0,0x0,8
tick,0x7ffdf681f424,23151508,0,0x0,8
tick,0x7ffdf681f424,23153487,0,0x0,8
tick,0x7ffdf681f424,23155490,0,0x0,8
tick,0x7ffdf681f424,23157486,0,0x0,8
tick,0x7ffdf681f424,23159374,0,0x0,8
tick,0x7ffdf681f424,23161474,0,0x0,8
tick,0x7ffdf681f424,23163472,0,0x0,8
tick,0x7ffdf681f424,23165466,0,0x0,8
tick,0x7ffdf681f424,23167462,0,0x0,8
tick,0x7ffdf681f424,23169457,0,0x0,8
tick,0x7ffdf681f424,23171472,0,0x0,8
tick,0x7ffdf681f424,23173394,0,0x0,8
tick,0x7ffdf681f424,23175257,0,0x0,8
tick,0x7ffdf681f424,23177220,0,0x0,8
tick,0x7ffdf681f424,23179374,0,0x0,8
tick,0x7ffdf681f424,23181317,0,0x0,8
tick,0x7ffdf681f424,23183353,0,0x0,8
tick,0x7ffdf681f424,23185209,0,0x0,8
tick,0x7ffdf681f424,23187333,0,0x0,8
tick,0x7ffdf681f424,23189299,0,0x0,8
tick,0x7ffdf681f424,23191376,0,0x0,8
tick,0x7ffdf681f424,23193340,0,0x0,8
tick,0x7ffdf681f424,23195389,0,0x0,8
tick,0x7ffdf681f424,23197393,0,0x0,8
tick,0x7ffdf681f424,23199372,0,0x0,8
tick,0x7ffdf681f424,23201275,0,0x0,8
tick,0x7ffdf681f424,23203369,0,0x0,8
tick,0x7ffdf681f424,23205358,0,0x0,8
tick,0x7ffdf681f424,23207299,0,0x0,8
tick,0x7ffdf681f424,23209250,0,0x0,8
tick,0x7ffdf681f424,23211268,0,0x0,8
tick,0x7ffdf681f424,23213344,0,0x0,8
tick,0x7ffdf681f424,23215335,0,0x0,8
tick,0x7ffdf681f424,23217357,0,0x0,8
tick,0x7ffdf681f424,23219319,0,0x0,8
tick,0x7ffdf681f424,23221208,0,0x0,8
tick,0x7ffdf681f424,23223311,0,0x0,8
tick,0x7ffdf681f424,23225260,0,0x0,8
tick,0x7ffdf681f424,23227307,0,0x0,8
tick,0x7ffdf681f424,23229293,0,0x0,8
tick,0x7ffdf681f424,23231290,0,0x0,8
tick,0x7ffdf681f424,23233208,0,0x0,8
tick,0x7ffdf681f424,23235290,0,0x0,8
tick,0x7ffdf681f424,23237238,0,0x0,8
tick,0x7ffdf681f424,23239270,0,0x0,8
tick,0x7ffdf681f424,23241263,0,0x0,8
tick,0x7ffdf681f424,23243265,0,0x0,8
tick,0x7ffdf681f424,23245259,0,0x0,8
tick,0x7ffdf681f424,23247149,0,0x0,8
tick,0x7ffdf681f424,23249116,0,0x0,8
tick,0x7ffdf681f424,23251021,0,0x0,8
tick,0x7ffdf681f424,23253156,0,0x0,8
tick,0x7ffdf681f424,23255197,0,0x0,8
tick,0x7ffdf681f424,23257020,0,0x0,8
tick,0x7ffdf681f424,23259155,0,0x0,8
tick,0x7ffdf681f424,23261185,0,0x0,8
tick,0x7ffdf681f424,23263128,0,0x0,8
tick,0x7ffdf681f424,23265258,0,0x0,8
tick,0x7ffdf681f424,23266434,0,0x0,8
tick,0x7ffdf681f424,23268403,0,0x0,8
tick,0x7ffdf681f424,23270396,0,0x0,8
tick,0x7ffdf681f424,23272393,0,0x0,8
tick,0x7ffdf681f424,23273600,0,0x0,8
tick,0x7ffdf681f424,23275626,0,0x0,8
tick,0x7ffdf681f424,23276799,0,0x0,8
tick,0x7ffdf681f424,23278012,0,0x0,8
tick,0x7ffdf681f424,23279168,0,0x0,8
tick,0x7ffdf681f424,23281168,0,0x0,8
tick,0x7ffdf681f424,23283042,0,0x0,8
tick,0x7ffdf681f424,23285183,0,0x0,8
tick,0x7ffdf681f424,23287228,0,0x0,8
tick,0x7ffdf681f424,23289232,0,0x0,8
tick,0x7ffdf681f424,23291209,0,0x0,8
tick,0x7ffdf681f424,23293216,0,0x0,8
tick,0x7ffdf681f424,23295179,0,0x0,8
tick,0x7ffdf681f424,23297160,0,0x0,8
tick,0x7ffdf681f424,23299161,0,0x0,8
tick,0x7ffdf681f424,23301154,0,0x0,8
tick,0x7ffdf681f424,23303082,0,0x0,8
tick,0x7ffdf681f424,23304993,0,0x0,8
tick,0x7ffdf681f424,23307001,0,0x0,8
tick,0x7ffdf681f424,23308944,0,0x0,8
tick,0x7ffdf681f424,23310984,0,0x0,8
tick,0x7ffdf681f424,23313064,0,0x0,8
tick,0x7ffdf681f424,23315100,0,0x0,8
tick,0x7ffdf681f424,23316990,0,0x0,8
tick,0x7ffdf681f424,23318933,0,0x0,8
tick,0x7ffdf681f424,23321035,0,0x0,8
tick,0x7ffdf681f424,23323121,0,0x0,8
tick,0x7ffdf681f424,23324929,0,0x0,8
tick,0x7ffdf681f424,23326995,0,0x0,8
tick,0x7ffdf681f424,23329085,0,0x0,8
tick,0x7ffdf681f424,23331089,0,0x0,8
tick,0x7ffdf681f424,23333048,0,0x0,8
tick,0x7ffdf681f424,23335042,0,0x0,8
tick,0x7ffdf681f424,23337076,0,0x0,8
tick,0x7ffdf681f424,23339073,0,0x0,8
tick,0x7ffdf681f424,23341063,0,0x0,8
tick,0x7ffdf681f424,23343048,0,0x0,8
tick,0x7ffdf681f424,23344946,0,0x0,8
tick,0x7ffdf681f424,23347096,0,0x0,8
tick,0x7ffdf681f424,23349034,0,0x0,8
tick,0x7ffdf681f424,23351064,0,0x0,8
tick,0x7ffdf681f424,23353027,0,0x0,8
tick,0x7ffdf681f424,23355018,0,0x0,8
tick,0x7ffdf681f424,23356977,0,0x0,8
tick,0x7ffdf681f424,23359017,0,0x0,8
tick,0x7ffdf681f424,23361008,0,0x0,8
tick,0x7ffdf681f424,23362998,0,0x0,8
tick,0x7ffdf681f424,23364986,0,0x0,8
tick,0x7ffdf681f424,23366987,0,0x0,8
tick,0x7ffdf681f424,23368990,0,0x0,8
tick,0x7ffdf681f424,23370977,0,0x0,8
tick,0x7ffdf681f424,23372969,0,0x0,8
tick,0x7ffdf681f424,23374881,0,0x0,8
tick,0x7ffdf681f424,23376960,0,0x0,8
tick,0x7ffdf681f424,23378922,0,0x0,8
tick,0x7ffdf681f424,23380963,0,0x0,8
tick,0x7ffdf681f424,23382974,0,0x0,8
tick,0x7ffdf681f424,23384831,0,0x0,8
tick,0x7ffdf681f424,23386973,0,0x0,8
tick,0x7ffdf681f424,23388161,0,0x0,8
tick,0x7ffdf681f424,23390086,0,0x0,8
tick,0x7ffdf681f424,23392104,0,0x0,8
tick,0x7ffdf681f424,23393302,0,0x0,8
tick,0x7ffdf681f424,23395313,0,0x0,8
tick,0x7ffdf681f424,23396446,0,0x0,8
tick,0x7ffdf681f424,23398453,0,0x0,8
tick,0x7ffdf681f424,23400437,0,0x0,8
tick,0x7ffdf681f424,23401585,0,0x0,8
tick,0x7ffdf681f424,23403586,0,0x0,8
tick,0x7ffdf681f424,23405577,0,0x0,8
tick,0x7ffdf681f424,23407482,0,0x0,8
tick,0x7ffdf681f424,23409605,0,0x0,8
tick,0x7ffdf681f424,23411636,0,0x0,8
tick,0x7ffdf681f424,23413591,0,0x0,8
tick,0x7ffdf681f424,23415476,0,0x0,8
tick,0x7ffdf681f424,23417575,0,0x0,8
tick,0x7ffdf681f424,23419563,0,0x0,8
tick,0x7ffdf681f424,23421573,0,0x0,8
tick,0x7ffdf681f424,23423557,0,0x0,8
tick,0x7ffdf681f424,23425558,0,0x0,8
tick,0x7ffdf681f424,23427550,0,0x0,8
tick,0x7ffdf681f424,23429542,0,0x0,8
tick,0x7ffdf681f424,23431546,0,0x0,8
tick,0x7ffdf681f424,23433489,0,0x0,8
tick,0x7ffdf681f424,23435394,0,0x0,8
tick,0x7ffdf681f424,23437307,0,0x0,8
tick,0x7ffdf681f424,23439454,0,0x0,8
tick,0x7ffdf681f424,23441408,0,0x0,8
tick,0x7ffdf681f424,23443318,0,0x0,8
tick,0x7ffdf681f424,23445438,0,0x0,8
tick,0x7ffdf681f424,23447476,0,0x0,8
tick,0x7ffdf681f424,23449431,0,0x0,8
tick,0x7ffdf681f424,23451392,0,0x0,8
tick,0x7ffdf681f424,23453322,0,0x0,8
tick,0x7ffdf681f424,23455336,0,0x0,8
tick,0x7ffdf681f424,23457456,0,0x0,8
tick,0x7ffdf681f424,23459377,0,0x0,8
tick,0x7ffdf681f424,23461450,0,0x0,8
tick,0x7ffdf681f424,23463461,0,0x0,8
tick,0x7ffdf681f424,23465447,0,0x0,8
tick,0x7ffdf681f424,23467384,0,0x0,8
tick,0x7ffdf681f424,23469350,0,0x0,8
tick,0x7ffdf681f424,23471427,0,0x0,8
tick,0x7ffdf681f424,23473422,0,0x0,8
tick,0x7ffdf681f424,23475276,0,0x0,8
tick,0x7ffdf681f424,23477425,0,0x0,8
tick,0x7ffdf681f424,23479411,0,0x0,8
tick,0x7ffdf681f424,23481407,0,0x0,8
tick,0x7ffdf681f424,23483297,0,0x0,8
tick,0x7ffdf681f424,23485392,0,0x0,8
tick,0x7ffdf681f424,23487393,0,0x0,8
tick,0x7ffdf681f424,23489383,0,0x0,8
tick,0x7ffdf681f424,23491371,0,0x0,8
tick,0x7ffdf681f424,23493369,0,0x0,8
tick,0x7ffdf681f424,23495372,0,0x0,8
tick,0x7ffdf681f424,23497326,0,0x0,8
tick,0x7ffdf681f424,23499406,0,0x0,8
tick,0x7ffdf681f424,23501353,0,0x0,8
tick,0x7ffdf681f424,23503342,0,0x0,8
tick,0x7ffdf681f424,23505351,0,0x0,8
tick,0x7ffdf681f424,23507326,0,0x0,8
tick,0x7ffdf681f424,23509342,0,0x0,8
tick,0x7ffdf681f424,23511324,0,0x0,8
tick,0x7ffdf681f424,23513278,0,0x0,8
tick,0x7ffdf681f424,23515312,0,0x0,8
tick,0x7ffdf681f424,23517305,0,0x0,8
tick,0x7ffdf681f424,23519273,0,0x0,8
tick,0x7ffdf681f424,23521347,0,0x0,8
tick,0x7ffdf681f424,23523287,0,0x0,8
tick,0x7ffdf681f424,23525291,0,0x0,8
tick,0x7ffdf681f424,23527284,0,0x0,8
tick,0x7ffdf681f424,23529274,0,0x0,8
tick,0x7ffdf681f424,23531289,0,0x0,8
tick,0x7ffdf681f424,23533184,0,0x0,8
tick,0x7ffdf681f424,23535264,0,0x0,8
tick,0x7ffdf681f424,23537252,0,0x0,8
tick,0x7ffdf681f424,23539245,0,0x0,8
tick,0x7ffdf681f424,23541207,0,0x0,8
tick,0x7ffdf681f424,23543290,0,0x0,8
tick,0x7ffdf681f424,23545234,0,0x0,8
tick,0x7ffdf681f424,23547229,0,0x0,8
tick,0x7ffdf681f424,23549220,0,0x0,8
tick,0x7ffdf681f424,23551221,0,0x0,8
tick,0x7ffdf681f424,23553224,0,0x0,8
tick,0x7ffdf681f424,23555206,0,0x0,8
tick,0x7ffdf681f424,23557211,0,0x0,8
tick,0x7ffdf681f424,23559199,0,0x0,8
tick,0x7ffdf681f424,23561191,0,0x0,8
tick,0x7ffdf681f424,23563103,0,0x0,8
tick,0x7ffdf681f424,23565000,0,0x0,8
tick,0x7ffdf681f424,23566973,0,0x0,8
tick,0x7ffdf681f424,23569095,0,0x0,8
tick,0x7ffdf681f424,23571130,0,0x0,8
tick,0x7ffdf681f424,23573180,0,0x0,8
tick,0x7ffdf681f424,23575077,0,0x0,8
tick,0x7ffdf681f424,23576983,0,0x0,8
tick,0x7ffdf681f424,23579059,0,0x0,8
tick,0x7ffdf681f424,23581049,0,0x0,8
tick,0x7ffdf681f424,23583162,0,0x0,8
tick,0x7ffdf681f424,23584991,0,0x0,8
tick,0x7ffdf681f424,23587150,0,0x0,8
tick,0x7ffdf681f424,23589126,0,0x0,8
tick,0x7ffdf681f424,23591069,0,0x0,8
tick,0x7ffdf681f424,23592990,0,0x0,8
tick,0x7ffdf681f424,23595061,0,0x0,8
tick,0x7ffdf681f424,23597102,0,0x0,8
tick,0x7ffdf681f424,23599089,0,0x0,8
tick,0x7ffdf681f424,23600985,0,0x0,8
tick,0x7ffdf681f424,23603073,0,0x0,8
tick,0x7ffdf681f424,23605078,0,0x0,8
tick,0x7ffdf681f424,23607036,0,0x0,8
tick,0x7ffdf681f424,23609098,0,0x0,8
tick,0x7ffdf681f424,23611058,0,0x0,8
tick,0x7ffdf681f424,23613059,0,0x0,8
tick,0x7ffdf681f424,23615048,0,0x0,8
tick,0x7ffdf681f424,23617047,0,0x0,8
tick,0x7ffdf681f424,23618980,0,0x0,8
tick,0x7ffdf681f424,23620925,0,0x0,8
tick,0x7ffdf681f424,23623030,0,0x0,8
tick,0x7ffdf681f424,23624944,0,0x0,8
tick,0x7ffdf681f424,23627019,0,0x0,8
tick,0x7ffdf681f424,23628978,0,0x0,8
tick,0x7ffdf681f424,23630864,0,0x0,8
tick,0x7ffdf681f424,23632998,0,0x0,8
tick,0x7ffdf681f424,23634989,0,0x0,8
tick,0x7ffdf681f424,23637003,0,0x0,8
tick,0x7ffdf681f424,23638981,0,0x0,8
tick,0x7ffdf681f424,23640993,0,0x0,8
tick,0x7ffdf681f424,23642965,0,0x0,8
tick,0x7ffdf681f424,23644963,0,0x0,8
tick,0x7ffdf681f424,23646967,0,0x0,8
tick,0x7ffdf681f424,23648960,0,0x0,8
tick,0x7ffdf681f424,23650915,0,0x0,8
tick,0x7ffdf681f424,23652994,0,0x0,8
tick,0x7ffdf681f424,23654954,0,0x0,8
tick,0x7ffdf681f424,23656823,0,0x0,8
tick,0x7ffdf681f424,23658926,0,0x0,8
tick,0x7ffdf681f424,23660921,0,0x0,8
tick,0x7ffdf681f424,23662923,0,0x0,8
tick,0x7ffdf681f424,23664909,0,0x0,8
tick,0x7ffdf681f424,23666804,0,0x0,8
tick,0x7ffdf681f424,23668907,0,0x0,8
tick,0x7ffdf681f424,23670897,0,0x0,8
tick,0x7ffdf681f424,23672856,0,0x0,8
tick,0x7ffdf681f424,23674948,0,0x0,8
tick,0x7ffdf681f424,23676841,0,0x0,8
tick,0x7ffdf681f424,23678875,0,0x0,8
tick,0x7ffdf681f424,23680871,0,0x0,8
tick,0x7ffdf681f424,23682866,0,0x0,8
tick,0x7ffdf681f424,23684875,0,0x0,8
tick,0x7ffdf681f424,23686858,0,0x0,8
tick,0x7ffdf681f424,23688847,0,0x0,8
tick,0x7ffdf681f424,23690850,0,0x0,8
tick,0x7ffdf681f424,23692729,0,0x0,8
tick,0x7ffdf681f424,23694691,0,0x0,8
tick,0x7ffdf681f424,23696646,0,0x0,8
tick,0x7ffdf681f424,23698683,0,0x0,8
tick,0x7ffdf681f424,23700694,0,0x0,8
tick,0x7ffdf681f424,23702691,0,0x0,8
tick,0x7ffdf681f424,23704821,0,0x0,8
tick,0x7ffdf681f424,23706830,0,0x0,8
tick,0x7ffdf681f424,23708707,0,0x0,8
tick,0x7ffdf681f424,23710633,0,0x0,8
tick,0x7ffdf681f424,23712782,0,0x0,8
tick,0x7ffdf681f424,23714667,0,0x0,8
tick,0x7ffdf681f424,23716639,0,0x0,8
tick,0x7ffdf681f424,23718664,0,0x0,8
tick,0x7ffdf681f424,23720734,0,0x0,8
tick,0x7ffdf681f424,23722716,0,0x0,8
tick,0x7ffdf681f424,23724746,0,0x0,8
tick,0x7ffdf681f424,23726739,0,0x0,8
tick,0x7ffdf681f424,23728741,0,0x0,8
tick,0x7ffdf681f424,23730732,0,0x0,8
tick,0x7ffdf681f424,23732736,0,0x0,8
tick,0x7ffdf681f424,23734725,0,0x0,8
tick,0x7ffdf681f424,23736719,0,0x0,8
tick,0x7ffdf681f424,23738715,0,0x0,8
tick,0x7ffdf681f424,23740740,0,0x0,8
tick,0x7ffdf681f424,23742705,0,0x0,8
tick,0x7ffdf681f424,23744707,0,0x0,8
tick,0x7ffdf681f424,23746693,0,0x0,8
tick,0x7ffdf681f424,23748696,0,0x0,8
tick,0x7ffdf681f424,23750689,0,0x0,8
tick,0x7ffdf681f424,23752693,0,0x0,8
tick,0x7ffdf681f424,23754696,0,0x0,8
tick,0x7ffdf681f424,23756667,0,0x0,8
tick,0x7ffdf681f424,23758626,0,0x0,8
tick,0x7ffdf681f424,23760626,0,0x0,8
tick,0x7ffdf681f424,23762692,0,0x0,8
tick,0x7ffdf681f424,23764651,0,0x0,8
tick,0x7ffdf681f424,23766590,0,0x0,8
tick,0x7ffdf681f424,23768637,0,0x0,8
tick,0x7ffdf681f424,23770632,0,0x0,8
tick,0x7ffdf681f424,23772629,0,0x0,8
tick,0x7ffdf681f424,23774622,0,0x0,8
tick,0x7ffdf681f424,23776615,0,0x0,8
tick,0x7ffdf681f424,23778609,0,0x0,8
tick,0x7ffdf681f424,23780633,0,0x0,8
tick,0x7ffdf681f424,23782602,0,0x0,8
tick,0x7ffdf681f424,23784609,0,0x0,8
tick,0x7ffdf681f424,23786585,0,0x0,8
tick,0x7ffdf681f424,23788590,0,0x0,8
tick,0x7ffdf681f424,23790574,0,0x0,8
tick,0x7ffdf681f424,23792550,0,0x0,8
tick,0x7ffdf681f424,23794571,0,0x0,8
tick,0x7ffdf681f424,23796560,0,0x0,8
tick,0x7ffdf681f424,23798557,0,0x0,8
tick,0x7ffdf681f424,23800551,0,0x0,8
tick,0x7ffdf681f424,23802549,0,0x0,8
tick,0x7ffdf681f424,23804505,0,0x0,8
tick,0x7ffdf681f424,23806543,0,0x0,8
tick,0x7ffdf681f424,23808423,0,0x0,8
tick,0x7ffdf681f424,23810523,0,0x0,8
tick,0x7ffdf681f424,23812517,0,0x0,8
tick,0x7ffdf681f424,23814522,0,0x0,8
tick,0x7ffdf681f424,23816549,0,0x0,8
tick,0x7ffdf681f424,23818436,0,0x0,8
tick,0x7ffdf681f424,23820499,0,0x0,8
tick,0x7ffdf681f424,23822389,0,0x0,8
tick,0x7ffdf681f424,23824412,0,0x0,8
tick,0x7ffdf681f424,23826329,0,0x0,8
tick,0x7ffdf681f424,23828417,0,0x0,8
tick,0x7ffdf681f424,23830394,0,0x0,8
tick,0x7ffdf681f424,23832418,0,0x0,8
tick,0x7ffdf681f424,23834358,0,0x0,8
tick,0x7ffdf681f424,23836410,0,0x0,8
tick,0x7ffdf681f424,23838434,0,0x0,8
tick,0x7ffdf681f424,23840478,0,0x0,8
tick,0x7ffdf681f424,23842364,0,0x0,8
tick,0x7ffdf681f424,23844354,0,0x0,8
tick,0x7ffdf681f424,23846313,0,0x0,8
tick,0x7ffdf681f424,23848423,0,0x0,8
tick,0x7ffdf681f424,23850343,0,0x0,8
tick,0x7ffdf681f424,23852295,0,0x0,8
tick,0x7ffdf681f424,23854404,0,0x0,8
tick,0x7ffdf681f424,23856395,0,0x0,8
tick,0x7ffdf681f424,23858299,0,0x0,8
tick,0x7ffdf681f424,23860396,0,0x0,8
tick,0x7ffdf681f424,23862385,0,0x0,8
tick,0x7ffdf681f424,23864379,0,0x0,8
tick,0x7ffdf681f424,23866373,0,0x0,8
tick,0x7ffdf681f424,23868375,0,0x0,8
tick,0x7ffdf681f424,23870376,0,0x0,8
tick,0x7ffdf681f424,23872401,0,0x0,8
tick,0x7ffdf681f424,23874350,0,0x0,8
tick,0x7ffdf681f424,23876354,0,0x0,8
tick,0x7ffdf681f424,23878346,0,0x0,8
tick,0x7ffdf681f424,23880178,0,0x0,8
tick,0x7ffdf681f424,23882227,0,0x0,8
tick,0x7ffdf681f424,23884325,0,0x0,8
tick,0x7ffdf681f424,23886318,0,0x0,8
tick,0x7ffdf681f424,23888312,0,0x0,8
tick,0x7ffdf681f424,23890313,0,0x0,8
tick,0x7ffdf681f424,23892318,0,0x0,8
tick,0x7ffdf681f424,23894337,0,0x0,8
tick,0x7ffdf681f424,23896293,0,0x0,8
tick,0x7ffdf681f424,23898283,0,0x0,8
tick,0x7ffdf681f424,23900179,0,0x0,8
tick,0x7ffdf681f424,23902293,0,0x0,8
tick,0x7ffdf681f424,23904171,0,0x0,8
tick,0x7ffdf681f424,23906166,0,0x0,8
tick,0x7ffdf681f424,23908260,0,0x0,8
tick,0x7ffdf681f424,23910263,0,0x0,8
tick,0x7ffdf681f424,23912260,0,0x0,8
tick,0x7ffdf681f424,23914267,0,0x0,8
tick,0x7ffdf681f424,23916279,0,0x0,8
tick,0x7ffdf681f424,23918237,0,0x0,8
tick,0x7ffdf681f424,23920230,0,0x0,8
tick,0x7ffdf681f424,23922255,0,0x0,8
tick,0x7ffdf681f424,23924226,0,0x0,8
tick,0x7ffdf681f424,23926216,0,0x0,8
tick,0x7ffdf681f424,23928211,0,0x0,8
tick,0x7ffdf681f424,23930159,0,0x0,8
tick,0x7ffdf681f424,23932201,0,0x0,8
tick,0x7ffdf681f424,23934187,0,0x0,8
tick,0x7ffdf681f424,23936194,0,0x0,8
tick,0x7ffdf681f424,23938223,0,0x0,8
tick,0x7ffdf681f424,23940175,0,0x0,8
tick,0x7ffdf681f424,23942069,0,0x0,8
tick,0x7ffdf681f424,23944167,0,0x0,8
tick,0x7ffdf681f424,23946166,0,0x0,8
tick,0x7ffdf681f424,23948166,0,0x0,8
tick,0x7ffdf681f424,23950150,0,0x0,8
tick,0x7ffdf681f424,23952156,0,0x0,8
tick,0x7ffdf681f424,23954162,0,0x0,8
tick,0x7ffdf681f424,23956047,0,0x0,8
tick,0x7ffdf681f424,23957956,0,0x0,8
tick,0x7ffdf681f424,23959959,0,0x0,8
tick,0x7ffdf681f424,23962036,0,0x0,8
tick,0x7ffdf681f424,23964084,0,0x0,8
tick,0x7ffdf681f424,23966125,0,0x0,8
tick,0x7ffdf681f424,23967942,0,0x0,8
tick,0x7ffdf681f424,23969943,0,0x0,8
tick,0x7ffdf681f424,23972008,0,0x0,8
tick,0x7ffdf681f424,23974025,0,0x0,8
tick,0x7ffdf681f424,23975999,0,0x0,8
tick,0x7ffdf681f424,23978081,0,0x0,8
tick,0x7ffdf681f424,23980084,0,0x0,8
tick,0x7ffdf681f424,23982115,0,0x0,8
tick,0x7ffdf681f424,23984062,0,0x0,8
tick,0x7ffdf681f424,23986051,0,0x0,8
tick,0x7ffdf681f424,23988053,0,0x0,8
tick,0x7ffdf681f424,23990047,0,0x0,8
tick,0x7ffdf681f424,23991944,0,0x0,8
tick,0x7ffdf681f424,23994037,0,0x0,8
tick,0x7ffdf681f424,23996016,0,0x0,8
tick,0x7ffdf681f424,23998023,0,0x0,8
tick,0x7ffdf681f424,23999963,0,0x0,8
tick,0x7ffdf681f424,24001974,0,0x0,8
tick,0x7ffdf681f424,24003967,0,0x0,8
tick,0x7ffdf681f424,24005975,0,0x0,8
tick,0x7ffdf681f424,24008009,0,0x0,8
tick,0x7ffdf681f424,24010011,0,0x0,8
tick,0x7ffdf681f424,24011984,0,0x0,8
tick,0x7ffdf681f424,24013994,0,0x0,8
tick,0x7ffdf681f424,24015971,0,0x0,8
tick,0x7ffdf681f424,24017965,0,0x0,8
tick,0x7ffdf681f424,24019973,0,0x0,8
tick,0x7ffdf681f424,24021958,0,0x0,8
tick,0x7ffdf681f424,24023959,0,0x0,8
tick,0x7ffdf681f424,24025990,0,0x0,8
tick,0x7ffdf681f424,24027939,0,0x0,8
tick,0x7ffdf681f424,24029946,0,0x0,8
tick,0x7ffdf681f424,24031938,0,0x0,8
tick,0x7ffdf681f424,24033930,0,0x0,8
tick,0x7ffdf681f424,24035924,0,0x0,8
tick,0x7ffdf681f424,24037918,0,0x0,8
tick,0x7ffdf681f424,24039906,0,0x0,8
tick,0x7ffdf681f424,24041803,0,0x0,8
tick,0x7ffdf681f424,24043912,0,0x0,8
tick,0x7ffdf681f424,24045910,0,0x0,8
tick,0x7ffdf681f424,24047936,0,0x0,8
tick,0x7ffdf681f424,24049887,0,0x0,8
tick,0x7ffdf681f424,24051876,0,0x0,8
tick,0x7ffdf681f424,24053873,0,0x0,8
tick,0x7ffdf681f424,24055822,0,0x0,8
tick,0x7ffdf681f424,24057867,0,0x0,8
tick,0x7ffdf681f424,24059863,0,0x0,8
tick,0x7ffdf681f424,24061853,0,0x0,8
tick,0x7ffdf681f424,24063861,0,0x0,8
tick,0x7ffdf681f424,24065909,0,0x0,8
tick,0x7ffdf681f424,24067869,0,0x0,8
tick,0x7ffdf681f424,24069810,0,0x0,8
tick,0x7ffdf681f424,24072003,0,0x0,8
tick,0x7ffdf681f424,24073989,0,0x0,8
tick,0x7ffdf681f424,24075995,0,0x0,8
tick,0x7ffdf681f424,24077941,0,0x0,8
tick,0x7ffdf681f424,24079967,0,0x0,8
tick,0x7ffdf681f424,24081950,0,0x0,8
tick,0x7ffdf681f424,24083988,0,0x0,8
tick,0x7ffdf681f424,24085877,0,0x0,8
tick,0x7ffdf681f424,24087752,0,0x0,8
tick,0x7ffdf681f424,24089852,0,0x0,8
tick,0x7ffdf681f424,24091797,0,0x0,8
tick,0x7ffdf681f424,24093745,0,0x0,8
tick,0x7ffdf681f424,24095870,0,0x0,8
tick,0x7ffdf681f424,24097867,0,0x0,8
tick,0x7ffdf681f424,24099890,0,0x0,8
tick,0x7ffdf681f424,24101730,0,0x0,8
tick,0x7ffdf681f424,24103744,0,0x0,8
tick,0x7ffdf681f424,24105808,0,0x0,8
tick,0x7ffdf681f424,24107743,0,0x0,8
tick,0x7ffdf681f424,24109728,0,0x0,8
tick,0x7ffdf681f424,24111841,0,0x0,8
tick,0x7ffdf681f424,24113821,0,0x0,8
tick,0x7ffdf681f424,24115819,0,0x0,8
tick,0x7ffdf681f424,24117716,0,0x0,8
tick,0x7ffdf681f424,24119821,0,0x0,8
tick,0x7ffdf681f424,24121831,0,0x0,8
tick,0x7ffdf681f424,24123869,0,0x0,8
tick,0x7ffdf681f424,24125837,0,0x0,8
tick,0x7ffdf681f424,24127790,0,0x0,8
tick,0x7ffdf681f424,24129776,0,0x0,8
tick,0x7ffdf681f424,24131773,0,0x0,8
tick,0x7ffdf681f424,24133779,0,0x0,8
tick,0x7ffdf681f424,24135762,0,0x0,8
tick,0x7ffdf681f424,24137755,0,0x0,8
tick,0x7ffdf681f424,24139756,0,0x0,8
tick,0x7ffdf681f424,24141651,0,0x0,8
tick,0x7ffdf681f424,24143759,0,0x0,8
tick,0x7ffdf681f424,24145803,0,0x0,8
tick,0x7ffdf681f424,24147756,0,0x0,8
tick,0x7ffdf681f424,24149728,0,0x0,8
tick,0x7ffdf681f424,24151717,0,0x0,8
tick,0x7ffdf681f424,24153720,0,0x0,8
tick,0x7ffdf681f424,24155715,0,0x0,8
tick,0x7ffdf681f424,24157702,0,0x0,8
tick,0x7ffdf681f424,24159700,0,0x0,8
tick,0x7ffdf681f424,24161697,0,0x0,8
tick,0x7ffdf681f424,24163694,0,0x0,8
tick,0x7ffdf681f424,24165700,0,0x0,8
tick,0x7ffdf681f424,24167674,0,0x0,8
tick,0x7ffdf681f424,24169700,0,0x0,8
tick,0x7ffdf681f424,24171670,0,0x0,8
tick,0x7ffdf681f424,24173667,0,0x0,8
tick,0x7ffdf681f424,24175660,0,0x0,8
tick,0x7ffdf681f424,24177666,0,0x0,8
tick,0x7ffdf681f424,24179643,0,0x0,8
tick,0x7ffdf681f424,24181638,0,0x0,8
tick,0x7ffdf681f424,24183551,0,0x0,8
tick,0x7ffdf681f424,24185635,0,0x0,8
tick,0x7ffdf681f424,24187642,0,0x0,8
tick,0x7ffdf681f424,24189677,0,0x0,8
tick,0x7ffdf681f424,24191636,0,0x0,8
tick,0x7ffdf681f424,24193619,0,0x0,8
tick,0x7ffdf681f424,24195613,0,0x0,8
tick,0x7ffdf681f424,24197601,0,0x0,8
tick,0x7ffdf681f424,24199596,0,0x0,8
tick,0x7ffdf681f424,24201587,0,0x0,8
tick,0x7ffdf681f424,24203585,0,0x0,8
tick,0x7ffdf681f424,24205579,0,0x0,8
tick,0x7ffdf681f424,24207592,0,0x0,8
tick,0x7ffdf681f424,24209583,0,0x0,8
tick,0x7ffdf681f424,24211562,0,0x0,8
tick,0x7ffdf681f424,24213558,0,0x0,8
tick,0x7ffdf681f424,24215500,0,0x0,8
tick,0x7ffdf681f424,24217425,0,0x0,8
tick,0x7ffdf681f424,24219430,0,0x0,8
tick,0x7ffdf681f424,24221466,0,0x0,8
tick,0x7ffdf681f424,24223530,0,0x0,8
tick,0x7ffdf681f424,24225474,0,0x0,8
tick,0x7ffdf681f424,24227366,0,0x0,8
tick,0x7ffdf681f424,24229413,0,0x0,8
tick,0x7ffdf681f424,24231436,0,0x0,8
tick,0x7ffdf681f424,24233424,0,0x0,8
tick,0x7ffdf681f424,24235427,0,0x0,8
tick,0x7ffdf681f424,24237495,0,0x0,8
tick,0x7ffdf681f424,24239495,0,0x0,8
tick,0x7ffdf681f424,24241510,0,0x0,8
tick,0x7ffdf681f424,24243371,0,0x0,8
tick,0x7ffdf681f424,24245490,0,0x0,8
tick,0x7ffdf681f424,24247494,0,0x0,8
tick,0x7ffdf681f424,24249464,0,0x0,8
tick,0x7ffdf681f424,24251471,0,0x0,8
tick,0x7ffdf681f424,24253465,0,0x0,8
tick,0x7ffdf681f424,24255440,0,0x0,8
tick,0x7ffdf681f424,24257435,0,0x0,8
tick,0x7ffdf681f424,24259432,0,0x0,8
tick,0x7ffdf681f424,24261431,0,0x0,8
tick,0x7ffdf681f424,24263425,0,0x0,8
tick,0x7ffdf681f424,24265433,0,0x0,8
tick,0x7ffdf681f424,24267414,0,0x0,8
tick,0x7ffdf681f424,24269408,0,0x0,8
tick,0x7ffdf681f424,24271397,0,0x0,8
tick,0x7ffdf681f424,24273394,0,0x0,8
tick,0x7ffdf681f424,24275358,0,0x0,8
tick,0x7ffdf681f424,24277386,0,0x0,8
tick,0x7ffdf681f424,24279423,0,0x0,8
tick,0x7ffdf681f424,24281378,0,0x0,8
tick,0x7ffdf681f424,24283317,0,0x0,8
tick,0x7ffdf681f424,24285366,0,0x0,8
tick,0x7ffdf681f424,24287362,0,0x0,8
tick,0x7ffdf681f424,24289356,0,0x0,8
tick,0x7ffdf681f424,24291375,0,0x0,8
tick,0x7ffdf681f424,24293356,0,0x0,8
tick,0x7ffdf681f424,24295362,0,0x0,8
tick,0x7ffdf681f424,24297351,0,0x0,8
tick,0x7ffdf681f424,24299396,0,0x0,8
tick,0x7ffdf681f424,24301349,0,0x0,8
tick,0x7ffdf681f424,24303311,0,0x0,8
tick,0x7ffdf681f424,24305323,0,0x0,8
tick,0x7ffdf681f424,24307307,0,0x0,8
tick,0x7ffdf681f424,24309310,0,0x0,8
tick,0x7ffdf681f424,24311301,0,0x0,8
tick,0x7ffdf681f424,24313184,0,0x0,8
tick,0x7ffdf681f424,24315295,0,0x0,8
tick,0x7ffdf681f424,24317280,0,0x0,8
tick,0x7ffdf681f424,24319290,0,0x0,8
tick,0x7ffdf681f424,24321269,0,0x0,8
tick,0x7ffdf681f424,24323271,0,0x0,8
tick,0x7ffdf681f424,24325138,0,0x0,8
tick,0x7ffdf681f424,24327254,0,0x0,8
tick,0x7ffdf681f424,24329249,0,0x0,8
tick,0x7ffdf681f424,24331251,0,0x0,8
tick,0x7ffdf681f424,24333237,0,0x0,8
tick,0x7ffdf681f424,24335232,0,0x0,8
tick,0x7ffdf681f424,24337218,0,0x0,8
tick,0x7ffdf681f424,24339222,0,0x0,8
tick,0x7ffdf681f424,24341239,0,0x0,8
tick,0x7ffdf681f424,24343105,0,0x0,8
tick,0x7ffdf681f424,24345163,0,0x0,8
tick,0x7ffdf681f424,24347067,0,0x0,8
tick,0x7ffdf681f424,24349155,0,0x0,8
tick,0x7ffdf681f424,24351102,0,0x0,8
tick,0x7ffdf681f424,24353146,0,0x0,8
tick,0x7ffdf681f424,24355184,0,0x0,8
tick,0x7ffdf681f424,24357172,0,0x0,8
tick,0x7ffdf681f424,24359142,0,0x0,8
tick,0x7ffdf681f424,24361005,0,0x0,8
tick,0x7ffdf681f424,24363177,0,0x0,8
tick,0x7ffdf681f424,24365186,0,0x0,8
tick,0x7ffdf681f424,24367104,0,0x0,8
tick,0x7ffdf681f424,24369119,0,0x0,8
tick,0x7ffdf681f424,24371167,0,0x0,8
tick,0x7ffdf681f424,24373132,0,0x0,8
tick,0x7ffdf681f424,24375005,0,0x0,8
tick,0x7ffdf681f424,24377118,0,0x0,8
tick,0x7ffdf681f424,24379117,0,0x0,8
tick,0x7ffdf681f424,24381110,0,0x0,8
tick,0x7ffdf681f424,24383102,0,0x0,8
tick,0x7ffdf681f424,24385009,0,0x0,8
tick,0x7ffdf681f424,24387087,0,0x0,8
tick,0x7ffdf681f424,24389083,0,0x0,8
tick,0x7ffdf681f424,24391083,0,0x0,8
tick,0x7ffdf681f424,24393095,0,0x0,8
tick,0x7ffdf681f424,24395079,0,0x0,8
tick,0x7ffdf681f424,24397081,0,0x0,8
tick,0x7ffdf681f424,24399056,0,0x0,8
tick,0x7ffdf681f424,24401053,0,0x0,8
tick,0x7ffdf681f424,24403045,0,0x0,8
tick,0x7ffdf681f424,24405040,0,0x0,8
tick,0x7ffdf681f424,24407055,0,0x0,8
tick,0x7ffdf681f424,24409115,0,0x0,8
tick,0x7ffdf681f424,24411058,0,0x0,8
tick,0x7ffdf681f424,24413019,0,0x0,8
tick,0x7ffdf681f424,24414952,0,0x0,8
tick,0x7ffdf681f424,24416912,0,0x0,8
tick,0x7ffdf681f424,24419024,0,0x0,8
tick,0x7ffdf681f424,24421003,0,0x0,8
tick,0x7ffdf681f424,24423005,0,0x0,8
tick,0x7ffdf681f424,24425001,0,0x0,8
tick,0x7ffdf681f424,24426981,0,0x0,8
tick,0x7ffdf681f424,24428997,0,0x0,8
tick,0x7ffdf681f424,24430980,0,0x0,8
tick,0x7ffdf681f424,24432967,0,0x0,8
tick,0x7ffdf681f424,24434966,0,0x0,8
tick,0x7ffdf681f424,24436960,0,0x0,8
tick,0x7ffdf681f424,24438960,0,0x0,8
tick,0x7ffdf681f424,24440926,0,0x0,8
tick,0x7ffdf681f424,24442966,0,0x0,8
tick,0x7ffdf681f424,24444934,0,0x0,8
tick,0x7ffdf681f424,24446947,0,0x0,8
tick,0x7ffdf681f424,24448928,0,0x0,8
tick,0x7ffdf681f424,24450940,0,0x0,8
tick,0x7ffdf681f424,24452927,0,0x0,8
tick,0x7ffdf681f424,24454907,0,0x0,8
tick,0x7ffdf681f424,24456907,0,0x0,8
tick,0x7ffdf681f424,24458902,0,0x0,8
tick,0x7ffdf681f424,24460897,0,0x0,8
tick,0x7ffdf681f424,24462906,0,0x0,8
tick,0x7ffdf681f424,24464888,0,0x0,8
tick,0x7ffdf681f424,24466875,0,0x0,8
tick,0x7ffdf681f424,24468880,0,0x0,8
tick,0x7ffdf681f424,24470871,0,0x0,8
tick,0x7ffdf681f424,24472884,0,0x0,8
tick,0x7ffdf681f424,24474929,0,0x0,8
tick,0x7ffdf681f424,24476884,0,0x0,8
tick,0x7ffdf681f424,24478816,0,0x0,8
tick,0x7ffdf681f424,24480678,0,0x0,8
tick,0x7ffdf681f424,24482735,0,0x0,8
tick,0x7ffdf681f424,24484696,0,0x0,8
tick,0x7ffdf681f424,24486787,0,0x0,8
tick,0x7ffdf681f424,24488810,0,0x0,8
tick,0x7ffdf681f424,24490847,0,0x0,8
tick,0x7ffdf681f424,24492760,0,0x0,8
tick,0x7ffdf681f424,24494648,0,0x0,8
tick,0x7ffdf681f424,24496778,0,0x0,8
tick,0x7ffdf681f424,24498755,0,0x0,8
tick,0x7ffdf681f424,24500700,0,0x0,8
tick,0x7ffdf681f424,24502720,0,0x0,8
tick,0x7ffdf681f424,24504775,0,0x0,8
tick,0x7ffdf681f424,24506777,0,0x0,8
tick,0x7ffdf681f424,24508665,0,0x0,8
tick,0x7ffdf681f424,24510766,0,0x0,8
tick,0x7ffdf681f424,24512758,0,0x0,8
tick,0x7ffdf681f424,24514754,0,0x0,8
tick,0x7ffdf681f424,24516690,0,0x0,8
tick,0x7ffdf681f424,24518737,0,0x0,8
tick,0x7ffdf681f424,24520731,0,0x0,8
tick,0x7ffdf681f424,24522740,0,0x0,8
tick,0x7ffdf681f424,24524750,0,0x0,8
tick,0x7ffdf681f424,24526735,0,0x0,8
tick,0x7ffdf681f424,24528754,0,0x0,8
tick,0x7ffdf681f424,24530710,0,0x0,8
tick,0x7ffdf681f424,24532704,0,0x0,8
tick,0x7ffdf681f424,24534734,0,0x0,8
tick,0x7ffdf681f424,24536696,0,0x0,8
tick,0x7ffdf681f424,24538711,0,0x0,8
tick,0x7ffdf681f424,24540676,0,0x0,8
tick,0x7ffdf681f424,24542706,0,0x0,8
tick,0x7ffdf681f424,24544672,0,0x0,8
tick,0x7ffdf681f424,24546719,0,0x0,8
tick,0x7ffdf681f424,24548619,0,0x0,8
tick,0x7ffdf681f424,24550672,0,0x0,8
tick,0x7ffdf681f424,24552648,0,0x0,8
tick,0x7ffdf681f424,24554652,0,0x0,8
tick,0x7ffdf681f424,24556641,0,0x0,8
tick,0x7ffdf681f424,24558534,0,0x0,8
tick,0x7ffdf681f424,24560647,0,0x0,8
tick,0x7ffdf681f424,24562628,0,0x0,8
tick,0x7ffdf681f424,24564626,0,0x0,8
tick,0x7ffdf681f424,24566618,0,0x0,8
tick,0x7ffdf681f424,24568610,0,0x0,8
tick,0x7ffdf681f424,24570605,0,0x0,8
tick,0x7ffdf681f424,24572598,0,0x0,8
tick,0x7ffdf681f424,24574595,0,0x0,8
tick,0x7ffdf681f424,24576587,0,0x0,8
tick,0x7ffdf681f424,24578585,0,0x0,8
tick,0x7ffdf681f424,24580578,0,0x0,8
tick,0x7ffdf681f424,24582584,0,0x0,8
tick,0x7ffdf681f424,24584570,0,0x0,8
tick,0x7ffdf681f424,24586555,0,0x0,8
tick,0x7ffdf681f424,24588556,0,0x0,8
tick,0x7ffdf681f424,24590559,0,0x0,8
tick,0x7ffdf681f424,24592541,0,0x0,8
tick,0x7ffdf681f424,24594549,0,0x0,8
tick,0x7ffdf681f424,24596534,0,0x0,8
tick,0x7ffdf681f424,24598536,0,0x0,8
tick,0x7ffdf681f424,24600525,0,0x0,8
tick,0x7ffdf681f424,24602520,0,0x0,8
tick,0x7ffdf681f424,24604421,0,0x0,8
tick,0x7ffdf681f424,24606390,0,0x0,8
tick,0x7ffdf681f424,24608377,0,0x0,8
tick,0x7ffdf681f424,24610473,0,0x0,8
tick,0x7ffdf681f424,24612473,0,0x0,8
tick,0x7ffdf681f424,24614486,0,0x0,8
tick,0x7ffdf681f424,24616490,0,0x0,8
tick,0x7ffdf681f424,24618376,0,0x0,8
tick,0x7ffdf681f424,24620426,0,0x0,8
tick,0x7ffdf681f424,24622467,0,0x0,8
tick,0x7ffdf681f424,24624465,0,0x0,8
tick,0x7ffdf681f424,24626368,0,0x0,8
tick,0x7ffdf681f424,24628473,0,0x0,8
tick,0x7ffdf681f424,24630437,0,0x0,8
tick,0x7ffdf681f424,24632434,0,0x0,8
tick,0x7ffdf681f424,24634351,0,0x0,8
tick,0x7ffdf681f424,24636422,0,0x0,8
tick,0x7ffdf681f424,24638434,0,0x0,8
tick,0x7ffdf681f424,24640415,0,0x0,8
tick,0x7ffdf681f424,24642347,0,0x0,8
tick,0x7ffdf681f424,24644400,0,0x0,8
tick,0x7ffdf681f424,24646401,0,0x0,8
tick,0x7ffdf681f424,24648429,0,0x0,8
tick,0x7ffdf681f424,24650281,0,0x0,8
tick,0x7ffdf681f424,24652379,0,0x0,8
tick,0x7ffdf681f424,24654386,0,0x0,8
tick,0x7ffdf681f424,24656376,0,0x0,8
tick,0x7ffdf681f424,24658372,0,0x0,8
tick,0x7ffdf681f424,24660376,0,0x0,8
tick,0x7ffdf681f424,24662422,0,0x0,8
tick,0x7ffdf681f424,24664300,0,0x0,8
tick,0x7ffdf681f424,24666350,0,0x0,8
tick,0x7ffdf681f424,24668342,0,0x0,8
tick,0x7ffdf681f424,24670351,0,0x0,8
tick,0x7ffdf681f424,24672330,0,0x0,8
tick,0x7ffdf681f424,24674353,0,0x0,8
tick,0x7ffdf681f424,24676320,0,0x0,8
tick,0x7ffdf681f424,24678315,0,0x0,8
tick,0x7ffdf681f424,24680304,0,0x0,8
tick,0x7ffdf681f424,24682319,0,0x0,8
tick,0x7ffdf681f424,24684294,0,0x0,8
tick,0x7ffdf681f424,24686295,0,0x0,8
tick,0x7ffdf681f424,24688293,0,0x0,8
tick,0x7ffdf681f424,24690277,0,0x0,8
tick,0x7ffdf681f424,24692291,0,0x0,8
tick,0x7ffdf681f424,24694266,0,0x0,8
tick,0x7ffdf681f424,24696264,0,0x0,8
tick,0x7ffdf681f424,24698282,0,0x0,8
tick,0x7ffdf681f424,24700163,0,0x0,8
tick,0x7ffdf681f424,24702246,0,0x0,8
tick,0x7ffdf681f424,24704259,0,0x0,8
tick,0x7ffdf681f424,24706239,0,0x0,8
tick,0x7ffdf681f424,24708246,0,0x0,8
tick,0x7ffdf681f424,24710230,0,0x0,8
tick,0x7ffdf681f424,24712224,0,0x0,8
tick,0x7ffdf681f424,24714233,0,0x0,8
tick,0x7ffdf681f424,24716208,0,0x0,8
tick,0x7ffdf681f424,24718209,0,0x0,8
tick,0x7ffdf681f424,24720199,0,0x0,8
tick,0x7ffdf681f424,24722200,0,0x0,8
tick,0x7ffdf681f424,24724209,0,0x0,8
tick,0x7ffdf681f424,24726201,0,0x0,8
tick,0x7ffdf681f424,24728193,0,0x0,8
tick,0x7ffdf681f424,24730183,0,0x0,8
tick,0x7ffdf681f424,24732170,0,0x0,8
tick,0x7ffdf681f424,24734197,0,0x0,8
tick,0x7ffdf681f424,24736259,0,0x0,8
tick,0x7ffdf681f424,24738166,0,0x0,8
tick,0x7ffdf681f424,24740045,0,0x0,8
tick,0x7ffdf681f424,24742010,0,0x0,8
tick,0x7ffdf681f424,24744053,0,0x0,8
tick,0x7ffdf681f424,24746037,0,0x0,8
tick,0x7ffdf681f424,24748147,0,0x0,8
tick,0x7ffdf681f424,24750082,0,0x0,8
tick,0x7ffdf681f424,24752054,0,0x0,8
tick,0x7ffdf681f424,24754016,0,0x0,8
tick,0x7ffdf681f424,24755998,0,0x0,8
tick,0x7ffdf681f424,24758117,0,0x0,8
tick,0x7ffdf681f424,24760120,0,0x0,8
tick,0x7ffdf681f424,24762098,0,0x0,8
tick,0x7ffdf681f424,24764085,0,0x0,8
tick,0x7ffdf681f424,24766093,0,0x0,8
tick,0x7ffdf681f424,24768035,0,0x0,8
tick,0x7ffdf681f424,24770091,0,0x0,8
tick,0x7ffdf681f424,24772073,0,0x0,8
tick,0x7ffdf681f424,24774087,0,0x0,8
tick,0x7ffdf681f424,24776058,0,0x0,8
tick,0x7ffdf681f424,24778072,0,0x0,8
tick,0x7ffdf681f424,24780084,0,0x0,8
tick,0x7ffdf681f424,24782050,0,0x0,8
tick,0x7ffdf681f424,24784067,0,0x0,8
tick,0x7ffdf681f424,24786034,0,0x0,8
tick,0x7ffdf681f424,24788026,0,0x0,8
tick,0x7ffdf681f424,24790029,0,0x0,8
tick,0x7ffdf681f424,24791913,0,0x0,8
tick,0x7ffdf681f424,24794012,0,0x0,8
tick,0x7ffdf681f424,24796016,0,0x0,8
tick,0x7ffdf681f424,24798005,0,0x0,8
tick,0x7ffdf681f424,24800003,0,0x0,8
tick,0x7ffdf681f424,24802006,0,0x0,8
tick,0x7ffdf681f424,24804041,0,0x0,8
tick,0x7ffdf681f424,24806004,0,0x0,8
tick,0x7ffdf681f424,24807978,0,0x0,8
tick,0x7ffdf681f424,24809969,0,0x0,8
tick,0x7ffdf681f424,24811961,0,0x0,8
tick,0x7ffdf681f424,24813965,0,0x0,8
tick,0x7ffdf681f424,24815856,0,0x0,8
tick,0x7ffdf681f424,24817875,0,0x0,8
tick,0x7ffdf681f424,24819839,0,0x0,8
tick,0x7ffdf681f424,24821941,0,0x0,8
tick,0x7ffdf681f424,24823943,0,0x0,8
tick,0x7ffdf681f424,24825988,0,0x0,8
tick,0x7ffdf681f424,24827947,0,0x0,8
tick,0x7ffdf681f424,24829907,0,0x0,8
tick,0x7ffdf681f424,24831905,0,0x0,8
tick,0x7ffdf681f424,24833901,0,0x0,8
tick,0x7ffdf681f424,24835908,0,0x0,8
tick,0x7ffdf681f424,24837883,0,0x0,8
tick,0x7ffdf681f424,24839891,0,0x0,8
tick,0x7ffdf681f424,24841773,0,0x0,8
tick,0x7ffdf681f424,24843762,0,0x0,8
tick,0x7ffdf681f424,24845880,0,0x0,8
tick,0x7ffdf681f424,24847858,0,0x0,8
tick,0x7ffdf681f424,24849862,0,0x0,8
tick,0x7ffdf681f424,24851846,0,0x0,8
tick,0x7ffdf681f424,24853848,0,0x0,8
tick,0x7ffdf681f424,24855842,0,0x0,8
tick,0x7ffdf681f424,24857851,0,0x0,8
tick,0x7ffdf681f424,24859824,0,0x0,8
tick,0x7ffdf681f424,24861851,0,0x0,8
tick,0x7ffdf681f424,24863825,0,0x0,8
tick,0x7ffdf681f424,24865830,0,0x0,8
tick,0x7ffdf681f424,24867732,0,0x0,8
tick,0x7ffdf681f424,24869651,0,0x0,8
tick,0x7ffdf681f424,24871763,0,0x0,8
tick,0x7ffdf681f424,24873683,0,0x0,8
tick,0x7ffdf681f424,24875725,0,0x0,8
tick,0x7ffdf681f424,24877647,0,0x0,8
tick,0x7ffdf681f424,24879670,0,0x0,8
tick,0x7ffdf681f424,24881604,0,0x0,8
tick,0x7ffdf681f424,24883699,0,0x0,8
tick,0x7ffdf681f424,24885712,0,0x0,8
tick,0x7ffdf681f424,24887756,0,0x0,8
tick,0x7ffdf681f424,24889646,0,0x0,8
tick,0x7ffdf681f424,24891741,0,0x0,8
tick,0x7ffdf681f424,24893763,0,0x0,8
tick,0x7ffdf681f424,24895734,0,0x0,8
tick,0x7ffdf681f424,24897733,0,0x0,8
tick,0x7ffdf681f424,24899729,0,0x0,8
tick,0x7ffdf681f424,24901725,0,0x0,8
tick,0x7ffdf681f424,24903601,0,0x0,8
tick,0x7ffdf681f424,24905707,0,0x0,8
tick,0x7ffdf681f424,24907702,0,0x0,8
tick,0x7ffdf681f424,24909676,0,0x0,8
tick,0x7ffdf681f424,24911700,0,0x0,8
tick,0x7ffdf681f424,24913755,0,0x0,8
tick,0x7ffdf681f424,24915649,0,0x0,8
tick,0x7ffdf681f424,24917680,0,0x0,8
tick,0x7ffdf681f424,24919672,0,0x0,8
tick,0x7ffdf681f424,24921667,0,0x0,8
tick,0x7ffdf681f424,24923657,0,0x0,8
tick,0x7ffdf681f424,24925666,0,0x0,8
tick,0x7ffdf681f424,24927674,0,0x0,8
tick,0x7ffdf681f424,24929646,0,0x0,8
tick,0x7ffdf681f424,24931637,0,0x0,8
tick,0x7ffdf681f424,24933555,0,0x0,8
tick,0x7ffdf681f424,24935699,0,0x0,8
tick,0x7ffdf681f424,24937649,0,0x0,8
tick,0x7ffdf681f424,24939612,0,0x0,8
tick,0x7ffdf681f424,24941619,0,0x0,8
tick,0x7ffdf681f424,24943624,0,0x0,8
tick,0x7ffdf681f424,24945608,0,0x0,8
tick,0x7ffdf681f424,24947590,0,0x0,8
tick,0x7ffdf681f424,24949595,0,0x0,8
tick,0x7ffdf681f424,24951581,0,0x0,8
tick,0x7ffdf681f424,24953581,0,0x0,8
tick,0x7ffdf681f424,24955588,0,0x0,8
tick,0x7ffdf681f424,24957465,0,0x0,8
tick,0x7ffdf681f424,24959456,0,0x0,8
tick,0x7ffdf681f424,24961554,0,0x0,8
tick,0x7ffdf681f424,24963552,0,0x0,8
tick,0x7ffdf681f424,24965542,0,0x0,8
tick,0x7ffdf681f424,24967548,0,0x0,8
tick,0x7ffdf681f424,24969531,0,0x0,8
tick,0x7ffdf681f424,24971532,0,0x0,8
tick,0x7ffdf681f424,24973526,0,0x0,8
tick,0x7ffdf681f424,24975523,0,0x0,8
tick,0x7ffdf681f424,24977515,0,0x0,8
tick,0x7ffdf681f424,24979585,0,0x0,8
tick,0x7ffdf681f424,24981537,0,0x0,8
tick,0x7ffdf681f424,24983501,0,0x0,8
tick,0x7ffdf681f424,24985491,0,0x0,8
tick,0x7ffdf681f424,24987483,0,0x0,8
tick,0x7ffdf681f424,24989485,0,0x0,8
tick,0x7ffdf681f424,24991488,0,0x0,8
tick,0x7ffdf681f424,24993469,0,0x0,8
tick,0x7ffdf681f424,24995358,0,0x0,8
tick,0x7ffdf681f424,24997459,0,0x0,8
tick,0x7ffdf681f424,24999338,0,0x0,8
tick,0x7ffdf681f424,25001341,0,0x0,8
tick,0x7ffdf681f424,25003340,0,0x0,8
tick,0x7ffdf681f424,25005436,0,0x0,8
tick,0x7ffdf681f424,25007432,0,0x0,8
tick,0x7ffdf681f424,25009395,0,0x0,8
tick,0x7ffdf681f424,25011329,0,0x0,8
tick,0x7ffdf681f424,25013393,0,0x0,8
tick,0x7ffdf681f424,25015415,0,0x0,8
tick,0x7ffdf681f424,25017301,0,0x0,8
tick,0x7ffdf681f424,25019405,0,0x0,8
tick,0x7ffdf681f424,25021413,0,0x0,8
tick,0x7ffdf681f424,25023384,0,0x0,8
tick,0x7ffdf681f424,25025347,0,0x0,8
tick,0x7ffdf681f424,25027413,0,0x0,8
tick,0x7ffdf681f424,25029371,0,0x0,8
tick,0x7ffdf681f424,25031372,0,0x0,8
tick,0x7ffdf681f424,25033380,0,0x0,8
tick,0x7ffdf681f424,25035360,0,0x0,8
tick,0x7ffdf681f424,25037355,0,0x0,8
tick,0x7ffdf681f424,25039351,0,0x0,8
tick,0x7ffdf681f424,25041347,0,0x0,8
tick,0x7ffdf681f424,25043355,0,0x0,8
tick,0x7ffdf681f424,25045328,0,0x0,8
tick,0x7ffdf681f424,25047331,0,0x0,8
tick,0x7ffdf681f424,25049326,0,0x0,8
tick,0x7ffdf681f424,25051324,0,0x0,8
tick,0x7ffdf681f424,25053313,0,0x0,8
tick,0x7ffdf681f424,25055307,0,0x0,8
tick,0x7ffdf681f424,25057303,0,0x0,8
tick,0x7ffdf681f424,25059297,0,0x0,8
tick,0x7ffdf681f424,25061294,0,0x0,8
tick,0x7ffdf681f424,25063294,0,0x0,8
tick,0x7ffdf681f424,25065293,0,0x0,8
tick,0x7ffdf681f424,25067283,0,0x0,8
tick,0x7ffdf681f424,25069294,0,0x0,8
tick,0x7ffdf681f424,25071266,0,0x0,8
tick,0x7ffdf681f424,25073259,0,0x0,8
tick,0x7ffdf681f424,25075152,0,0x0,8
tick,0x7ffdf681f424,25077261,0,0x0,8
tick,0x7ffdf681f424,25079239,0,0x0,8
tick,0x7ffdf681f424,25081240,0,0x0,8
tick,0x7ffdf681f424,25083232,0,0x0,8
tick,0x7ffdf681f424,25085225,0,0x0,8
tick,0x7ffdf681f424,25087236,0,0x0,8
tick,0x7ffdf681f424,25089221,0,0x0,8
tick,0x7ffdf681f424,25091206,0,0x0,8
tick,0x7ffdf681f424,25093205,0,0x0,8
tick,0x7ffdf681f424,25095201,0,0x0,8
tick,0x7ffdf681f424,25097195,0,0x0,8
tick,0x7ffdf681f424,25099197,0,0x0,8
tick,0x7ffdf681f424,25101179,0,0x0,8
tick,0x7ffdf681f424,25103117,0,0x0,8
tick,0x7ffdf681f424,25105168,0,0x0,8
tick,0x7ffdf681f424,25107185,0,0x0,8
tick,0x7ffdf681f424,25109178,0,0x0,8
tick,0x7ffdf681f424,25111153,0,0x0,8
tick,0x7ffdf681f424,25113159,0,0x0,8
tick,0x7ffdf681f424,25115149,0,0x0,8
tick,0x7ffdf681f424,25117139,0,0x0,8
tick,0x7ffdf681f424,25119136,0,0x0,8
tick,0x7ffdf681f424,25121138,0,0x0,8
tick,0x7ffdf681f424,25123133,0,0x0,8
tick,0x7ffdf681f424,25125134,0,0x0,8
tick,0x7ffdf681f424,25127135,0,0x0,8
tick,0x7ffdf681f424,25129056,0,0x0,8
tick,0x7ffdf681f424,25130970,0,0x0,8
tick,0x7ffdf681f424,25133011,0,0x0,8
tick,0x7ffdf681f424,25134960,0,0x0,8
tick,0x7ffdf681f424,25137057,0,0x0,8
tick,0x7ffdf681f424,25139049,0,0x0,8
tick,0x7ffdf681f424,25141086,0,0x0,8
tick,0x7ffdf681f424,25143071,0,0x0,8
tick,0x7ffdf681f424,25144910,0,0x0,8
tick,0x7ffdf681f424,25146949,0,0x0,8
tick,0x7ffdf681f424,25149066,0,0x0,8
tick,0x7ffdf681f424,25150961,0,0x0,8
tick,0x7ffdf681f424,25153087,0,0x0,8
tick,0x7ffdf681f424,25155038,0,0x0,8
tick,0x7ffdf681f424,25156948,0,0x0,8
tick,0x7ffdf681f424,25158925,0,0x0,8
tick,0x7ffdf681f424,25161026,0,0x0,8
tick,0x7ffdf681f424,25163039,0,0x0,8
tick,0x7ffdf681f424,25165016,0,0x0,8
tick,0x7ffdf681f424,25166885,0,0x0,8
tick,0x7ffdf681f424,25169004,0,0x0,8
tick,0x7ffdf681f424,25171007,0,0x0,8
tick,0x7ffdf681f424,25172992,0,0x0,8
tick,0x7ffdf681f424,25175016,0,0x0,8
tick,0x7ffdf681f424,25176994,0,0x0,8
tick,0x7ffdf681f424,25179008,0,0x0,8
tick,0x7ffdf681f424,25180981,0,0x0,8
tick,0x7ffdf681f424,25182972,0,0x0,8
tick,0x7ffdf681f424,25184967,0,0x0,8
tick,0x7ffdf681f424,25186970,0,0x0,8
tick,0x7ffdf681f424,25189012,0,0x0,8
tick,0x7ffdf681f424,25190953,0,0x0,8
tick,0x7ffdf681f424,25192946,0,0x0,8
tick,0x7ffdf681f424,25194941,0,0x0,8
tick,0x7ffdf681f424,25196950,0,0x0,8
tick,0x7ffdf681f424,25199001,0,0x0,8
tick,0x7ffdf681f424,25200952,0,0x0,8
tick,0x7ffdf681f424,25202917,0,0x0,8
tick,0x7ffdf681f424,25204917,0,0x0,8
tick,0x7ffdf681f424,25206913,0,0x0,8
tick,0x7ffdf681f424,25208892,0,0x0,8
tick,0x7ffdf681f424,25210894,0,0x0,8
tick,0x7ffdf681f424,25212896,0,0x0,8
tick,0x7ffdf681f424,25214892,0,0x0,8
tick,0x7ffdf681f424,25216784,0,0x0,8
tick,0x7ffdf681f424,25218890,0,0x0,8
tick,0x7ffdf681f424,25220862,0,0x0,8
tick,0x7ffdf681f424,25222885,0,0x0,8
tick,0x7ffdf681f424,25224851,0,0x0,8
tick,0x7ffdf681f424,25226843,0,0x0,8
tick,0x7ffdf681f424,25228758,0,0x0,8
tick,0x7ffdf681f424,25230841,0,0x0,8
tick,0x7ffdf681f424,25232827,0,0x0,8
tick,0x7ffdf681f424,25234822,0,0x0,8
tick,0x7ffdf681f424,25236820,0,0x0,8
tick,0x7ffdf681f424,25238818,0,0x0,8
tick,0x7ffdf681f424,25240827,0,0x0,8
tick,0x7ffdf681f424,25242815,0,0x0,8
tick,0x7ffdf681f424,25244825,0,0x0,8
tick,0x7ffdf681f424,25246795,0,0x0,8
tick,0x7ffdf681f424,25248792,0,0x0,8
tick,0x7ffdf681f424,25250784,0,0x0,8
tick,0x7ffdf681f424,25252787,0,0x0,8
tick,0x7ffdf681f424,25254775,0,0x0,8
tick,0x7ffdf681f424,25256770,0,0x0,8
tick,0x7ffdf681f424,25258754,0,0x0,8
tick,0x7ffdf681f424,25260655,0,0x0,8
tick,0x7ffdf681f424,25262720,0,0x0,8
tick,0x7ffdf681f424,25264643,0,0x0,8
tick,0x7ffdf681f424,25266751,0,0x0,8
tick,0x7ffdf681f424,25268658,0,0x0,8
tick,0x7ffdf681f424,25270707,0,0x0,8
tick,0x7ffdf681f424,25272687,0,0x0,8
tick,0x7ffdf681f424,25274723,0,0x0,8
tick,0x7ffdf681f424,25276674,0,0x0,8
tick,0x7ffdf681f424,25278714,0,0x0,8
tick,0x7ffdf681f424,25280707,0,0x0,8
tick,0x7ffdf681f424,25282703,0,0x0,8
tick,0x7ffdf681f424,25284601,0,0x0,8
tick,0x7ffdf681f424,25286696,0,0x0,8
tick,0x7ffdf681f424,25288684,0,0x0,8
tick,0x7ffdf681f424,25290678,0,0x0,8
tick,0x7ffdf681f424,25292618,0,0x0,8
tick,0x7ffdf681f424,25294669,0,0x0,8
tick,0x7ffdf681f424,25296663,0,0x0,8
tick,0x7ffdf681f424,25298651,0,0x0,8
tick,0x7ffdf681f424,25300545,0,0x0,8
tick,0x7ffdf681f424,25302643,0,0x0,8
tick,0x7ffdf681f424,25304637,0,0x0,8
tick,0x7ffdf681f424,25306649,0,0x0,8
tick,0x7ffdf681f424,25308532,0,0x0,8
tick,0x7ffdf681f424,25310625,0,0x0,8
tick,0x7ffdf681f424,25312634,0,0x0,8
tick,0x7ffdf681f424,25314614,0,0x0,8
tick,0x7ffdf681f424,25316533,0,0x0,8
tick,0x7ffdf681f424,25318611,0,0x0,8
tick,0x7ffdf681f424,25320597,0,0x0,8
tick,0x7ffdf681f424,25322587,0,0x0,8
tick,0x7ffdf681f424,25324586,0,0x0,8
tick,0x7ffdf681f424,25326584,0,0x0,8
tick,0x7ffdf681f424,25328595,0,0x0,8
tick,0x7ffdf681f424,25330597,0,0x0,8
tick,0x7ffdf681f424,25332560,0,0x0,8
tick,0x7ffdf681f424,25334563,0,0x0,8
tick,0x7ffdf681f424,25336557,0,0x0,8
tick,0x7ffdf681f424,25338557,0,0x0,8
tick,0x7ffdf681f424,25340557,0,0x0,8
tick,0x7ffdf681f424,25342534,0,0x0,8
tick,0x7ffdf681f424,25344531,0,0x0,8
tick,0x7ffdf681f424,25346529,0,0x0,8
tick,0x7ffdf681f424,25348530,0,0x0,8
tick,0x7ffdf681f424,25350470,0,0x0,8
tick,0x7ffdf681f424,25352552,0,0x0,8
tick,0x7ffdf681f424,25354532,0,0x0,8
tick,0x7ffdf681f424,25356502,0,0x0,8
tick,0x7ffdf681f424,25358477,0,0x0,8
tick,0x7ffdf681f424,25360491,0,0x0,8
tick,0x7ffdf681f424,25362523,0,0x0,8
tick,0x7ffdf681f424,25364475,0,0x0,8
tick,0x7ffdf681f424,25366472,0,0x0,8
tick,0x7ffdf681f424,25368466,0,0x0,8
tick,0x7ffdf681f424,25370466,0,0x0,8
tick,0x7ffdf681f424,25372490,0,0x0,8
tick,0x7ffdf681f424,25374526,0,0x0,8
tick,0x7ffdf681f424,25376476,0,0x0,8
tick,0x7ffdf681f424,25378437,0,0x0,8
tick,0x7ffdf681f424,25380506,0,0x0,8
tick,0x7ffdf681f424,25382426,0,0x0,8
tick,0x7ffdf681f424,25384414,0,0x0,8
tick,0x7ffdf681f424,25386322,0,0x0,8
tick,0x7ffdf681f424,25388452,0,0x0,8
tick,0x7ffdf681f424,25390414,0,0x0,8
tick,0x7ffdf681f424,25392373,0,0x0,8
tick,0x7ffdf681f424,25394240,0,0x0,8
tick,0x7ffdf681f424,25396309,0,0x0,8
tick,0x7ffdf681f424,25398290,0,0x0,8
tick,0x7ffdf681f424,25400350,0,0x0,8
tick,0x7ffdf681f424,25402222,0,0x0,8
tick,0x7ffdf681f424,25404369,0,0x0,8
tick,0x7ffdf681f424,25406369,0,0x0,8
tick,0x7ffdf681f424,25408372,0,0x0,8
tick,0x7ffdf681f424,25410335,0,0x0,8
tick,0x7ffdf681f424,25412378,0,0x0,8
tick,0x7ffdf681f424,25414348,0,0x0,8
tick,0x7ffdf681f424,25416357,0,0x0,8
tick,0x7ffdf681f424,25418334,0,0x0,8
tick,0x7ffdf681f424,25420330,0,0x0,8
tick,0x7ffdf681f424,25422327,0,0x0,8
tick,0x7ffdf681f424,25424323,0,0x0,8
tick,0x7ffdf681f424,25426315,0,0x0,8
tick,0x7ffdf681f424,25428285,0,0x0,8
tick,0x7ffdf681f424,25430300,0,0x0,8
tick,0x7ffdf681f424,25432301,0,0x0,8
tick,0x7ffdf681f424,25434303,0,0x0,8
tick,0x7ffdf681f424,25436286,0,0x0,8
tick,0x7ffdf681f424,25438282,0,0x0,8
tick,0x7ffdf681f424,25440278,0,0x0,8
tick,0x7ffdf681f424,25442276,0,0x0,8
tick,0x7ffdf681f424,25444267,0,0x0,8
tick,0x7ffdf681f424,25446269,0,0x0,8
tick,0x7ffdf681f424,25448258,0,0x0,8
tick,0x7ffdf681f424,25450186,0,0x0,8
tick,0x7ffdf681f424,25452240,0,0x0,8
tick,0x7ffdf681f424,25454248,0,0x0,8
tick,0x7ffdf681f424,25456241,0,0x0,8
tick,0x7ffdf681f424,25458254,0,0x0,8
tick,0x7ffdf681f424,25460244,0,0x0,8
tick,0x7ffdf681f424,25462299,0,0x0,8
tick,0x7ffdf681f424,25464241,0,0x0,8
tick,0x7ffdf681f424,25466208,0,0x0,8
tick,0x7ffdf681f424,25468200,0,0x0,8
tick,0x7ffdf681f424,25470203,0,0x0,8
tick,0x7ffdf681f424,25472208,0,0x0,8
tick,0x7ffdf681f424,25474187,0,0x0,8
tick,0x7ffdf681f424,25476176,0,0x0,8
tick,0x7ffdf681f424,25478177,0,0x0,8
tick,0x7ffdf681f424,25480171,0,0x0,8
tick,0x7ffdf681f424,25482186,0,0x0,8
tick,0x7ffdf681f424,25484160,0,0x0,8
tick,0x7ffdf681f424,25486178,0,0x0,8
tick,0x7ffdf681f424,25488150,0,0x0,8
tick,0x7ffdf681f424,25490145,0,0x0,8
tick,0x7ffdf681f424,25492052,0,0x0,8
tick,0x7ffdf681f424,25494147,0,0x0,8
tick,0x7ffdf681f424,25496125,0,0x0,8
tick,0x7ffdf681f424,25498118,0,0x0,8
tick,0x7ffdf681f424,25500112,0,0x0,8
tick,0x7ffdf681f424,25502107,0,0x0,8
tick,0x7ffdf681f424,25504123,0,0x0,8
tick,0x7ffdf681f424,25506095,0,0x0,8
tick,0x7ffdf681f424,25508091,0,0x0,8
tick,0x7ffdf681f424,25510091,0,0x0,8
tick,0x7ffdf681f424,25512087,0,0x0,8
tick,0x7ffdf681f424,25514093,0,0x0,8
tick,0x7ffdf681f424,25516108,0,0x0,8
tick,0x7ffdf681f424,25518072,0,0x0,8
tick,0x7ffdf681f424,25520020,0,0x0,8
tick,0x7ffdf681f424,25521926,0,0x0,8
tick,0x7ffdf681f424,25524021,0,0x0,8
tick,0x7ffdf681f424,25526066,0,0x0,8
tick,0x7ffdf681f424,25528069,0,0x0,8
tick,0x7ffdf681f424,25530048,0,0x0,8
tick,0x7ffdf681f424,25532063,0,0x0,8
tick,0x7ffdf681f424,25533999,0,0x0,8
tick,0x7ffdf681f424,25535860,0,0x0,8
tick,0x7ffdf681f424,25537917,0,0x0,8
tick,0x7ffdf681f424,25539920,0,0x0,8
tick,0x7ffdf681f424,25541970,0,0x0,8
tick,0x7ffdf681f424,25543903,0,0x0,8
tick,0x7ffdf681f424,25545997,0,0x0,8
tick,0x7ffdf681f424,25548010,0,0x0,8
tick,0x7ffdf681f424,25549986,0,0x0,8
tick,0x7ffdf681f424,25551986,0,0x0,8
tick,0x7ffdf681f424,25553984,0,0x0,8
tick,0x7ffdf681f424,25555978,0,0x0,8
tick,0x7ffdf681f424,25557975,0,0x0,8
tick,0x7ffdf681f424,25559952,0,0x0,8
tick,0x7ffdf681f424,25561976,0,0x0,8
tick,0x7ffdf681f424,25563952,0,0x0,8
tick,0x7ffdf681f424,25565948,0,0x0,8
tick,0x7ffdf681f424,25567956,0,0x0,8
tick,0x7ffdf681f424,25569953,0,0x0,8
tick,0x7ffdf681f424,25571924,0,0x0,8
tick,0x7ffdf681f424,25573929,0,0x0,8
tick,0x7ffdf681f424,25575921,0,0x0,8
tick,0x7ffdf681f424,25577916,0,0x0,8
tick,0x7ffdf681f424,25579912,0,0x0,8
tick,0x7ffdf681f424,25581922,0,0x0,8
tick,0x7ffdf681f424,25583885,0,0x0,8
tick,0x7ffdf681f424,25585893,0,0x0,8
tick,0x7ffdf681f424,25587895,0,0x0,8
tick,0x7ffdf681f424,25589889,0,0x0,8
tick,0x7ffdf681f424,25591873,0,0x0,8
tick,0x7ffdf681f424,25593868,0,0x0,8
tick,0x7ffdf681f424,25595893,0,0x0,8
tick,0x7ffdf681f424,25597922,0,0x0,8
tick,0x7ffdf681f424,25599851,0,0x0,8
tick,0x7ffdf681f424,25601853,0,0x0,8
tick,0x7ffdf681f424,25603856,0,0x0,8
tick,0x7ffdf681f424,25605837,0,0x0,8
tick,0x7ffdf681f424,25607837,0,0x0,8
tick,0x7ffdf681f424,25609811,0,0x0,8
tick,0x7ffdf681f424,25611827,0,0x0,8
tick,0x7ffdf681f424,25613877,0,0x0,8
tick,0x7ffdf681f424,25615812,0,0x0,8
tick,0x7ffdf681f424,25617830,0,0x0,8
tick,0x7ffdf681f424,25619812,0,0x0,8
tick,0x7ffdf681f424,25621801,0,0x0,8
tick,0x7ffdf681f424,25623830,0,0x0,8
tick,0x7ffdf681f424,25625813,0,0x0,8
tick,0x7ffdf681f424,25627773,0,0x0,8
tick,0x7ffdf681f424,25629766,0,0x0,8
tick,0x7ffdf681f424,25631777,0,0x0,8
tick,0x7ffdf681f424,25633760,0,0x0,8
tick,0x7ffdf681f424,25635787,0,0x0,8
tick,0x7ffdf681f424,25637749,0,0x0,8
tick,0x7ffdf681f424,25639739,0,0x0,8
tick,0x7ffdf681f424,25641742,0,0x0,8
tick,0x7ffdf681f424,25643738,0,0x0,8
tick,0x7ffdf681f424,25645739,0,0x0,8
tick,0x7ffdf681f424,25647806,0,0x0,8
tick,0x7ffdf681f424,25649711,0,0x0,8
tick,0x7ffdf681f424,25651555,0,0x0,8
tick,0x7ffdf681f424,25653618,0,0x0,8
tick,0x7ffdf681f424,25655622,0,0x0,8
tick,0x7ffdf681f424,25657709,0,0x0,8
tick,0x7ffdf681f424,25659561,0,0x0,8
tick,0x7ffdf681f424,25661706,0,0x0,8
tick,0x7ffdf681f424,25663714,0,0x0,8
tick,0x7ffdf681f424,25665676,0,0x0,8
tick,0x7ffdf681f424,25667565,0,0x0,8
tick,0x7ffdf681f424,25669626,0,0x0,8
tick,0x7ffdf681f424,25671654,0,0x0,8
tick,0x7ffdf681f424,25673648,0,0x0,8
tick,0x7ffdf681f424,25675612,0,0x0,8
tick,0x7ffdf681f424,25677536,0,0x0,8
tick,0x7ffdf681f424,25679687,0,0x0,8
tick,0x7ffdf681f424,25681625,0,0x0,8
tick,0x7ffdf681f424,25683531,0,0x0,8
tick,0x7ffdf681f424,25685618,0,0x0,8
tick,0x7ffdf681f424,25687613,0,0x0,8
tick,0x7ffdf681f424,25689611,0,0x0,8
tick,0x7ffdf681f424,25691607,0,0x0,8
tick,0x7ffdf681f424,25693595,0,0x0,8
tick,0x7ffdf681f424,25695591,0,0x0,8
tick,0x7ffdf681f424,25697589,0,0x0,8
tick,0x7ffdf681f424,25699585,0,0x0,8
tick,0x7ffdf681f424,25701602,0,0x0,8
tick,0x7ffdf681f424,25703572,0,0x0,8
tick,0x7ffdf681f424,25705593,0,0x0,8
tick,0x7ffdf681f424,25707563,0,0x0,8
tick,0x7ffdf681f424,25709559,0,0x0,8
tick,0x7ffdf681f424,25711548,0,0x0,8
tick,0x7ffdf681f424,25713555,0,0x0,8
tick,0x7ffdf681f424,25715539,0,0x0,8
tick,0x7ffdf681f424,25717538,0,0x0,8
tick,0x7ffdf681f424,25719533,0,0x0,8
tick,0x7ffdf681f424,25721525,0,0x0,8
tick,0x7ffdf681f424,25723535,0,0x0,8
tick,0x7ffdf681f424,25725419,0,0x0,8
tick,0x7ffdf681f424,25727512,0,0x0,8
tick,0x7ffdf681f424,25729504,0,0x0,8
tick,0x7ffdf681f424,25731508,0,0x0,8
tick,0x7ffdf681f424,25733522,0,0x0,8
tick,0x7ffdf681f424,25735496,0,0x0,8
tick,0x7ffdf681f424,25737483,0,0x0,8
tick,0x7ffdf681f424,25739477,0,0x0,8
tick,0x7ffdf681f424,25741476,0,0x0,8
tick,0x7ffdf681f424,25743487,0,0x0,8
tick,0x7ffdf681f424,25745475,0,0x0,8
tick,0x7ffdf681f424,25747521,0,0x0,8
tick,0x7ffdf681f424,25749477,0,0x0,8
tick,0x7ffdf681f424,25751442,0,0x0,8
tick,0x7ffdf681f424,25753441,0,0x0,8
tick,0x7ffdf681f424,25755433,0,0x0,8
tick,0x7ffdf681f424,25757438,0,0x0,8
tick,0x7ffdf681f424,25759421,0,0x0,8
tick,0x7ffdf681f424,25761469,0,0x0,8
tick,0x7ffdf681f424,25763435,0,0x0,8
tick,0x7ffdf681f424,25765364,0,0x0,8
tick,0x7ffdf681f424,25767417,0,0x0,8
tick,0x7ffdf681f424,25769395,0,0x0,8
tick,0x7ffdf681f424,25771309,0,0x0,8
tick,0x7ffdf681f424,25773389,0,0x0,8
tick,0x7ffdf681f424,25775381,0,0x0,8
tick,0x7ffdf681f424,25777271,0,0x0,8
tick,0x7ffdf681f424,25779306,0,0x0,8
tick,0x7ffdf681f424,25781206,0,0x0,8
tick,0x7ffdf681f424,25783325,0,0x0,8
tick,0x7ffdf681f424,25785226,0,0x0,8
tick,0x7ffdf681f424,25787307,0,0x0,8
tick,0x7ffdf681f424,25789320,0,0x0,8
tick,0x7ffdf681f424,25791346,0,0x0,8
tick,0x7ffdf681f424,25793303,0,0x0,8
tick,0x7ffdf681f424,25795306,0,0x0,8
tick,0x7ffdf681f424,25797283,0,0x0,8
tick,0x7ffdf681f424,25799318,0,0x0,8
tick,0x7ffdf681f424,25801209,0,0x0,8
tick,0x7ffdf681f424,25803309,0,0x0,8
tick,0x7ffdf681f424,25805298,0,0x0,8
tick,0x7ffdf681f424,25807296,0,0x0,8
tick,0x7ffdf681f424,25809273,0,0x0,8
tick,0x7ffdf681f424,25811319,0,0x0,8
tick,0x7ffdf681f424,25813275,0,0x0,8
tick,0x7ffdf681f424,25815302,0,0x0,8
tick,0x7ffdf681f424,25817162,0,0x0,8
tick,0x7ffdf681f424,25819265,0,0x0,8
tick,0x7ffdf681f424,25821259,0,0x0,8
tick,0x7ffdf681f424,25823263,0,0x0,8
tick,0x7ffdf681f424,25825211,0,0x0,8
tick,0x7ffdf681f424,25827256,0,0x0,8
tick,0x7ffdf681f424,25829238,0,0x0,8
tick,0x7ffdf681f424,25831237,0,0x0,8
tick,0x7ffdf681f424,25833247,0,0x0,8
tick,0x7ffdf681f424,25835214,0,0x0,8
tick,0x7ffdf681f424,25837224,0,0x0,8
tick,0x7ffdf681f424,25839210,0,0x0,8
tick,0x7ffdf681f424,25841206,0,0x0,8
tick,0x7ffdf681f424,25843214,0,0x0,8
tick,0x7ffdf681f424,25845208,0,0x0,8
tick,0x7ffdf681f424,25847198,0,0x0,8
tick,0x7ffdf681f424,25849184,0,0x0,8
tick,0x7ffdf681f424,25851181,0,0x0,8
tick,0x7ffdf681f424,25853174,0,0x0,8
tick,0x7ffdf681f424,25855184,0,0x0,8
tick,0x7ffdf681f424,25857173,0,0x0,8
tick,0x7ffdf681f424,25859179,0,0x0,8
tick,0x7ffdf681f424,25861152,0,0x0,8
tick,0x7ffdf681f424,25863153,0,0x0,8
tick,0x7ffdf681f424,25865142,0,0x0,8
tick,0x7ffdf681f424,25867034,0,0x0,8
tick,0x7ffdf681f424,25869127,0,0x0,8
tick,0x7ffdf681f424,25871120,0,0x0,8
tick,0x7ffdf681f424,25873134,0,0x0,8
tick,0x7ffdf681f424,25875115,0,0x0,8
tick,0x7ffdf681f424,25877122,0,0x0,8
tick,0x7ffdf681f424,25879100,0,0x0,8
tick,0x7ffdf681f424,25881093,0,0x0,8
tick,0x7ffdf681f424,25883092,0,0x0,8
tick,0x7ffdf681f424,25885089,0,0x0,8
tick,0x7ffdf681f424,25887084,0,0x0,8
tick,0x7ffdf681f424,25889085,0,0x0,8
tick,0x7ffdf681f424,25891067,0,0x0,8
tick,0x7ffdf681f424,25893067,0,0x0,8
tick,0x7ffdf681f424,25895062,0,0x0,8
tick,0x7ffdf681f424,25897057,0,0x0,8
tick,0x7ffdf681f424,25899075,0,0x0,8
tick,0x7ffdf681f424,25901042,0,0x0,8
tick,0x7ffdf681f424,25902940,0,0x0,8
tick,0x7ffdf681f424,25905029,0,0x0,8
tick,0x7ffdf681f424,25907040,0,0x0,8
tick,0x7ffdf681f424,25908917,0,0x0,8
tick,0x7ffdf681f424,25910985,0,0x0,8
tick,0x7ffdf681f424,25912924,0,0x0,8
tick,0x7ffdf681f424,25914994,0,0x0,8
tick,0x7ffdf681f424,25916898,0,0x0,8
tick,0x7ffdf681f424,25918903,0,0x0,8
tick,0x7ffdf681f424,25921011,0,0x0,8
tick,0x7ffdf681f424,25922985,0,0x0,8
tick,0x7ffdf681f424,25925019,0,0x0,8
tick,0x7ffdf681f424,25926975,0,0x0,8
tick,0x7ffdf681f424,25928805,0,0x0,8
tick,0x7ffdf681f424,25930927,0,0x0,8
tick,0x7ffdf681f424,25932983,0,0x0,8
tick,0x7ffdf681f424,25934875,0,0x0,8
tick,0x7ffdf681f424,25936952,0,0x0,8
tick,0x7ffdf681f424,25938837,0,0x0,8
tick,0x7ffdf681f424,25940941,0,0x0,8
tick,0x7ffdf681f424,25942847,0,0x0,8
tick,0x7ffdf681f424,25944919,0,0x0,8
tick,0x7ffdf681f424,25946917,0,0x0,8
tick,0x7ffdf681f424,25948918,0,0x0,8
tick,0x7ffdf681f424,25950909,0,0x0,8
tick,0x7ffdf681f424,25952902,0,0x0,8
tick,0x7ffdf681f424,25954902,0,0x0,8
tick,0x7ffdf681f424,25956895,0,0x0,8
tick,0x7ffdf681f424,25958797,0,0x0,8
tick,0x7ffdf681f424,25960885,0,0x0,8
tick,0x7ffdf681f424,25962880,0,0x0,8
tick,0x7ffdf681f424,25964905,0,0x0,8
tick,0x7ffdf681f424,25966865,0,0x0,8
tick,0x7ffdf681f424,25968864,0,0x0,8
tick,0x7ffdf681f424,25970856,0,0x0,8
tick,0x7ffdf681f424,25972850,0,0x0,8
tick,0x7ffdf681f424,25974850,0,0x0,8
tick,0x7ffdf681f424,25976842,0,0x0,8
tick,0x7ffdf681f424,25978835,0,0x0,8
tick,0x7ffdf681f424,25980833,0,0x0,8
tick,0x7ffdf681f424,25982823,0,0x0,8
tick,0x7ffdf681f424,25984822,0,0x0,8
tick,0x7ffdf681f424,25986813,0,0x0,8
tick,0x7ffdf681f424,25988885,0,0x0,8
tick,0x7ffdf681f424,25990827,0,0x0,8
tick,0x7ffdf681f424,25992810,0,0x0,8
tick,0x7ffdf681f424,25994800,0,0x0,8
tick,0x7ffdf681f424,25996799,0,0x0,8
tick,0x7ffdf681f424,25998794,0,0x0,8
tick,0x7ffdf681f424,26000786,0,0x0,8
tick,0x7ffdf681f424,26002776,0,0x0,8
tick,0x7ffdf681f424,26004770,0,0x0,8
tick,0x7ffdf681f424,26006769,0,0x0,8
tick,0x7ffdf681f424,26008697,0,0x0,8
tick,0x7ffdf681f424,26010757,0,0x0,8
tick,0x7ffdf681f424,26012770,0,0x0,8
tick,0x7ffdf681f424,26014743,0,0x0,8
tick,0x7ffdf681f424,26016738,0,0x0,8
tick,0x7ffdf681f424,26018731,0,0x0,8
tick,0x7ffdf681f424,26020734,0,0x0,8
tick,0x7ffdf681f424,26022721,0,0x0,8
tick,0x7ffdf681f424,26024719,0,0x0,8
tick,0x7ffdf681f424,26026713,0,0x0,8
tick,0x7ffdf681f424,26028706,0,0x0,8
tick,0x7ffdf681f424,26030713,0,0x0,8
tick,0x7ffdf681f424,26032691,0,0x0,8
tick,0x7ffdf681f424,26034711,0,0x0,8
tick,0x7ffdf681f424,26036685,0,0x0,8
tick,0x7ffdf681f424,26038687,0,0x0,8
tick,0x7ffdf681f424,26040636,0,0x0,8
tick,0x7ffdf681f424,26042543,0,0x0,8
tick,0x7ffdf681f424,26044622,0,0x0,8
tick,0x7ffdf681f424,26046586,0,0x0,8
tick,0x7ffdf681f424,26048646,0,0x0,8
tick,0x7ffdf681f424,26050592,0,0x0,8
tick,0x7ffdf681f424,26052564,0,0x0,8
tick,0x7ffdf681f424,26054554,0,0x0,8
tick,0x7ffdf681f424,26056591,0,0x0,8
tick,0x7ffdf681f424,26058677,0,0x0,8
tick,0x7ffdf681f424,26060601,0,0x0,8
tick,0x7ffdf681f424,26062605,0,0x0,8
tick,0x7ffdf681f424,26064616,0,0x0,8
tick,0x7ffdf681f424,26066603,0,0x0,8
tick,0x7ffdf681f424,26068502,0,0x0,8
tick,0x7ffdf681f424,26070584,0,0x0,8
tick,0x7ffdf681f424,26072582,0,0x0,8
tick,0x7ffdf681f424,26074597,0,0x0,8
tick,0x7ffdf681f424,26076574,0,0x0,8
tick,0x7ffdf681f424,26078505,0,0x0,8
tick,0x7ffdf681f424,26080566,0,0x0,8
tick,0x7ffdf681f424,26082561,0,0x0,8
tick,0x7ffdf681f424,26084556,0,0x0,8
tick,0x7ffdf681f424,26086561,0,0x0,8
tick,0x7ffdf681f424,26088565,0,0x0,8
tick,0x7ffdf681f424,26090539,0,0x0,8
tick,0x7ffdf681f424,26092536,0,0x0,8
tick,0x7ffdf681f424,26094528,0,0x0,8
tick,0x7ffdf681f424,26096543,0,0x0,8
tick,0x7ffdf681f424,26098517,0,0x0,8
tick,0x7ffdf681f424,26100408,0,0x0,8
tick,0x7ffdf681f424,26102504,0,0x0,8
tick,0x7ffdf681f424,26104501,0,0x0,8
tick,0x7ffdf681f424,26106494,0,0x0,8
tick,0x7ffdf681f424,26108499,0,0x0,8
tick,0x7ffdf681f424,26110483,0,0x0,8
tick,0x7ffdf681f424,26112378,0,0x0,8
tick,0x7ffdf681f424,26114475,0,0x0,8
tick,0x7ffdf681f424,26116470,0,0x0,8
tick,0x7ffdf681f424,26118478,0,0x0,8
tick,0x7ffdf681f424,26120457,0,0x0,8
tick,0x7ffdf681f424,26122468,0,0x0,8
tick,0x7ffdf681f424,26124445,0,0x0,8
tick,0x7ffdf681f424,26126444,0,0x0,8
tick,0x7ffdf681f424,26128438,0,0x0,8
tick,0x7ffdf681f424,26130436,0,0x0,8
tick,0x7ffdf681f424,26132329,0,0x0,8
tick,0x7ffdf681f424,26134434,0,0x0,8
tick,0x7ffdf681f424,26136444,0,0x0,8
tick,0x7ffdf681f424,26138408,0,0x0,8
tick,0x7ffdf681f424,26140419,0,0x0,8
tick,0x7ffdf681f424,26142401,0,0x0,8
tick,0x7ffdf681f424,26144419,0,0x0,8
tick,0x7ffdf681f424,26146389,0,0x0,8
tick,0x7ffdf681f424,26148393,0,0x0,8
tick,0x7ffdf681f424,26150279,0,0x0,8
tick,0x7ffdf681f424,26152382,0,0x0,8
tick,0x7ffdf681f424,26154369,0,0x0,8
tick,0x7ffdf681f424,26156360,0,0x0,8
tick,0x7ffdf681f424,26158360,0,0x0,8
tick,0x7ffdf681f424,26160346,0,0x0,8
tick,0x7ffdf681f424,26162362,0,0x0,8
tick,0x7ffdf681f424,26164346,0,0x0,8
tick,0x7ffdf681f424,26166271,0,0x0,8
tick,0x7ffdf681f424,26168221,0,0x0,8
tick,0x7ffdf681f424,26170331,0,0x0,8
tick,0x7ffdf681f424,26172163,0,0x0,8
tick,0x7ffdf681f424,26174206,0,0x0,8
tick,0x7ffdf681f424,26176213,0,0x0,8
tick,0x7ffdf681f424,26178304,0,0x0,8
tick,0x7ffdf681f424,26180265,0,0x0,8
tick,0x7ffdf681f424,26182299,0,0x0,8
tick,0x7ffdf681f424,26184251,0,0x0,8
tick,0x7ffdf681f424,26186131,0,0x0,8
tick,0x7ffdf681f424,26188112,0,0x0,8
tick,0x7ffdf681f424,26190274,0,0x0,8
tick,0x7ffdf681f424,26192220,0,0x0,8
tick,0x7ffdf681f424,26194175,0,0x0,8
tick,0x7ffdf681f424,26196284,0,0x0,8
tick,0x7ffdf681f424,26198248,0,0x0,8
tick,0x7ffdf681f424,26200240,0,0x0,8
tick,0x7ffdf681f424,26202241,0,0x0,8
tick,0x7ffdf681f424,26204235,0,0x0,8
tick,0x7ffdf681f424,26206233,0,0x0,8
tick,0x7ffdf681f424,26208218,0,0x0,8
tick,0x7ffdf681f424,26210244,0,0x0,8
tick,0x7ffdf681f424,26212213,0,0x0,8
tick,0x7ffdf681f424,26214209,0,0x0,8
tick,0x7ffdf681f424,26216203,0,0x0,8
tick,0x7ffdf681f424,26218187,0,0x0,8
tick,0x7ffdf681f424,26220189,0,0x0,8
tick,0x7ffdf681f424,26222244,0,0x0,8
tick,0x7ffdf681f424,26224176,0,0x0,8
tick,0x7ffdf681f424,26226178,0,0x0,8
tick,0x7ffdf681f424,26228183,0,0x0,8
tick,0x7ffdf681f424,26230166,0,0x0,8
tick,0x7ffdf681f424,26232178,0,0x0,8
tick,0x7ffdf681f424,26234152,0,0x0,8
tick,0x7ffdf681f424,26236162,0,0x0,8
tick,0x7ffdf681f424,26238146,0,0x0,8
tick,0x7ffdf681f424,26240145,0,0x0,8
tick,0x7ffdf681f424,26242026,0,0x0,8
tick,0x7ffdf681f424,26244133,0,0x0,8
tick,0x7ffdf681f424,26246123,0,0x0,8
tick,0x7ffdf681f424,26248113,0,0x0,8
tick,0x7ffdf681f424,26250124,0,0x0,8
tick,0x7ffdf681f424,26252142,0,0x0,8
tick,0x7ffdf681f424,26254097,0,0x0,8
tick,0x7ffdf681f424,26256096,0,0x0,8
tick,0x7ffdf681f424,26258093,0,0x0,8
tick,0x7ffdf681f424,26260116,0,0x0,8
tick,0x7ffdf681f424,26262079,0,0x0,8
tick,0x7ffdf681f424,26264075,0,0x0,8
tick,0x7ffdf681f424,26266087,0,0x0,8
tick,0x7ffdf681f424,26268065,0,0x0,8
tick,0x7ffdf681f424,26270061,0,0x0,8
tick,0x7ffdf681f424,26272067,0,0x0,8
tick,0x7ffdf681f424,26274041,0,0x0,8
tick,0x7ffdf681f424,26276056,0,0x0,8
tick,0x7ffdf681f424,26278060,0,0x0,8
tick,0x7ffdf681f424,26280032,0,0x0,8
tick,0x7ffdf681f424,26282021,0,0x0,8
tick,0x7ffdf681f424,26284041,0,0x0,8
tick,0x7ffdf681f424,26286011,0,0x0,8
tick,0x7ffdf681f424,26288005,0,0x0,8
tick,0x7ffdf681f424,26290008,0,0x0,8
tick,0x7ffdf681f424,26292002,0,0x0,8
tick,0x7ffdf681f424,26294013,0,0x0,8
tick,0x7ffdf681f424,26296046,0,0x0,8
tick,0x7ffdf681f424,26297989,0,0x0,8
tick,0x7ffdf681f424,26299980,0,0x0,8
tick,0x7ffdf681f424,26301970,0,0x0,8
tick,0x7ffdf681f424,26303973,0,0x0,8
tick,0x7ffdf681f424,26305970,0,0x0,8
tick,0x7ffdf681f424,26307968,0,0x0,8
tick,0x7ffdf681f424,26309936,0,0x0,8
tick,0x7ffdf681f424,26311853,0,0x0,8
tick,0x7ffdf681f424,26313829,0,0x0,8
tick,0x7ffdf681f424,26315857,0,0x0,8
tick,0x7ffdf681f424,26317820,0,0x0,8
tick,0x7ffdf681f424,26319769,0,0x0,8
tick,0x7ffdf681f424,26321811,0,0x0,8
tick,0x7ffdf681f424,26323783,0,0x0,8
tick,0x7ffdf681f424,26325814,0,0x0,8
tick,0x7ffdf681f424,26327905,0,0x0,8
tick,0x7ffdf681f424,26329901,0,0x0,8
tick,0x7ffdf681f424,26331888,0,0x0,8
tick,0x7ffdf681f424,26333838,0,0x0,8
tick,0x7ffdf681f424,26335889,0,0x0,8
tick,0x7ffdf681f424,26337911,0,0x0,8
tick,0x7ffdf681f424,26339868,0,0x0,8
tick,0x7ffdf681f424,26341873,0,0x0,8
tick,0x7ffdf681f424,26343858,0,0x0,8
tick,0x7ffdf681f424,26345867,0,0x0,8
tick,0x7ffdf681f424,26347860,0,0x0,8
tick,0x7ffdf681f424,26349854,0,0x0,8
tick,0x7ffdf681f424,26351853,0,0x0,8
tick,0x7ffdf681f424,26353847,0,0x0,8
tick,0x7ffdf681f424,26355858,0,0x0,8
tick,0x7ffdf681f424,26357826,0,0x0,8
tick,0x7ffdf681f424,26359832,0,0x0,8
tick,0x7ffdf681f424,26361869,0,0x0,8
tick,0x7ffdf681f424,26363831,0,0x0,8
tick,0x7ffdf681f424,26365805,0,0x0,8
tick,0x7ffdf681f424,26367797,0,0x0,8
tick,0x7ffdf681f424,26369792,0,0x0,8
tick,0x7ffdf681f424,26371801,0,0x0,8
tick,0x7ffdf681f424,26373776,0,0x0,8
tick,0x7ffdf681f424,26375778,0,0x0,8
tick,0x7ffdf681f424,26377765,0,0x0,8
tick,0x7ffdf681f424,26379768,0,0x0,8
tick,0x7ffdf681f424,26381756,0,0x0,8
tick,0x7ffdf681f424,26383644,0,0x0,8
tick,0x7ffdf681f424,26385645,0,0x0,8
tick,0x7ffdf681f424,26387746,0,0x0,8
tick,0x7ffdf681f424,26389740,0,0x0,8
tick,0x7ffdf681f424,26391740,0,0x0,8
tick,0x7ffdf681f424,26393734,0,0x0,8
tick,0x7ffdf681f424,26395723,0,0x0,8
tick,0x7ffdf681f424,26397727,0,0x0,8
tick,0x7ffdf681f424,26399712,0,0x0,8
tick,0x7ffdf681f424,26401702,0,0x0,8
tick,0x7ffdf681f424,26403719,0,0x0,8
tick,0x7ffdf681f424,26405689,0,0x0,8
tick,0x7ffdf681f424,26407692,0,0x0,8
tick,0x7ffdf681f424,26409680,0,0x0,8
tick,0x7ffdf681f424,26411691,0,0x0,8
tick,0x7ffdf681f424,26413676,0,0x0,8
tick,0x7ffdf681f424,26415561,0,0x0,8
tick,0x7ffdf681f424,26417658,0,0x0,8
tick,0x7ffdf681f424,26419661,0,0x0,8
tick,0x7ffdf681f424,26421663,0,0x0,8
tick,0x7ffdf681f424,26423678,0,0x0,8
tick,0x7ffdf681f424,26425663,0,0x0,8
tick,0x7ffdf681f424,26427645,0,0x0,8
tick,0x7ffdf681f424,26429635,0,0x0,8
tick,0x7ffdf681f424,26431635,0,0x0,8
tick,0x7ffdf681f424,26433589,0,0x0,8
tick,0x7ffdf681f424,26435458,0,0x0,8
tick,0x7ffdf681f424,26437519,0,0x0,8
tick,0x7ffdf681f424,26439500,0,0x0,8
tick,0x7ffdf681f424,26441501,0,0x0,8
tick,0x7ffdf681f424,26443592,0,0x0,8
tick,0x7ffdf681f424,26445527,0,0x0,8
tick,0x7ffdf681f424,26447498,0,0x0,8
tick,0x7ffdf681f424,26449585,0,0x0,8
tick,0x7ffdf681f424,26451529,0,0x0,8
tick,0x7ffdf681f424,26453576,0,0x0,8
tick,0x7ffdf681f424,26455580,0,0x0,8
tick,0x7ffdf681f424,26457568,0,0x0,8
tick,0x7ffdf681f424,26459514,0,0x0,8
tick,0x7ffdf681f424,26461561,0,0x0,8
tick,0x7ffdf681f424,26463549,0,0x0,8
tick,0x7ffdf681f424,26465544,0,0x0,8
tick,0x7ffdf681f424,26467444,0,0x0,8
tick,0x7ffdf681f424,26469547,0,0x0,8
tick,0x7ffdf681f424,26471522,0,0x0,8
tick,0x7ffdf681f424,26473519,0,0x0,8
tick,0x7ffdf681f424,26475400,0,0x0,8
tick,0x7ffdf681f424,26477515,0,0x0,8
tick,0x7ffdf681f424,26479503,0,0x0,8
tick,0x7ffdf681f424,26481508,0,0x0,8
tick,0x7ffdf681f424,26483504,0,0x0,8
tick,0x7ffdf681f424,26485503,0,0x0,8
tick,0x7ffdf681f424,26487482,0,0x0,8
tick,0x7ffdf681f424,26489482,0,0x0,8
tick,0x7ffdf681f424,26491487,0,0x0,8
tick,0x7ffdf681f424,26493460,0,0x0,8
tick,0x7ffdf681f424,26495457,0,0x0,8
tick,0x7ffdf681f424,26497475,0,0x0,8
tick,0x7ffdf681f424,26499455,0,0x0,8
tick,0x7ffdf681f424,26501442,0,0x0,8
tick,0x7ffdf681f424,26503407,0,0x0,8
tick,0x7ffdf681f424,26505432,0,0x0,8
tick,0x7ffdf681f424,26507437,0,0x0,8
tick,0x7ffdf681f424,26509432,0,0x0,8
tick,0x7ffdf681f424,26511418,0,0x0,8
tick,0x7ffdf681f424,26513328,0,0x0,8
tick,0x7ffdf681f424,26515349,0,0x0,8
tick,0x7ffdf681f424,26517356,0,0x0,8
tick,0x7ffdf681f424,26519392,0,0x0,8
tick,0x7ffdf681f424,26521389,0,0x0,8
tick,0x7ffdf681f424,26523394,0,0x0,8
tick,0x7ffdf681f424,26525327,0,0x0,8
tick,0x7ffdf681f424,26527365,0,0x0,8
tick,0x7ffdf681f424,26529366,0,0x0,8
tick,0x7ffdf681f424,26531360,0,0x0,8
tick,0x7ffdf681f424,26533362,0,0x0,8
tick,0x7ffdf681f424,26535363,0,0x0,8
tick,0x7ffdf681f424,26537413,0,0x0,8
tick,0x7ffdf681f424,26539371,0,0x0,8
tick,0x7ffdf681f424,26541328,0,0x0,8
tick,0x7ffdf681f424,26543336,0,0x0,8
tick,0x7ffdf681f424,26545320,0,0x0,8
tick,0x7ffdf681f424,26547319,0,0x0,8
tick,0x7ffdf681f424,26549314,0,0x0,8
tick,0x7ffdf681f424,26551306,0,0x0,8
tick,0x7ffdf681f424,26553302,0,0x0,8
tick,0x7ffdf681f424,26555299,0,0x0,8
tick,0x7ffdf681f424,26557309,0,0x0,8
tick,0x7ffdf681f424,26559247,0,0x0,8
tick,0x7ffdf681f424,26561230,0,0x0,8
tick,0x7ffdf681f424,26563116,0,0x0,8
tick,0x7ffdf681f424,26565159,0,0x0,8
tick,0x7ffdf681f424,26567250,0,0x0,8
tick,0x7ffdf681f424,26569130,0,0x0,8
tick,0x7ffdf681f424,26571252,0,0x0,8
tick,0x7ffdf681f424,26573246,0,0x0,8
tick,0x7ffdf681f424,26575262,0,0x0,8
tick,0x7ffdf681f424,26577146,0,0x0,8
tick,0x7ffdf681f424,26579074,0,0x0,8
tick,0x7ffdf681f424,26581139,0,0x0,8
tick,0x7ffdf681f424,26583217,0,0x0,8
tick,0x7ffdf681f424,26585108,0,0x0,8
tick,0x7ffdf681f424,26587214,0,0x0,8
tick,0x7ffdf681f424,26589202,0,0x0,8
tick,0x7ffdf681f424,26591209,0,0x0,8
tick,0x7ffdf681f424,26593090,0,0x0,8
tick,0x7ffdf681f424,26595199,0,0x0,8
tick,0x7ffdf681f424,26597186,0,0x0,8
tick,0x7ffdf681f424,26599177,0,0x0,8
tick,0x7ffdf681f424,26601176,0,0x0,8
tick,0x7ffdf681f424,26603170,0,0x0,8
tick,0x7ffdf681f424,26605190,0,0x0,8
tick,0x7ffdf681f424,26607152,0,0x0,8
tick,0x7ffdf681f424,26609154,0,0x0,8
tick,0x7ffdf681f424,26611143,0,0x0,8
tick,0x7ffdf681f424,26613152,0,0x0,8
tick,0x7ffdf681f424,26615140,0,0x0,8
tick,0x7ffdf681f424,26617030,0,0x0,8
tick,0x7ffdf681f424,26619190,0,0x0,8
tick,0x7ffdf681f424,26621141,0,0x0,8
tick,0x7ffdf681f424,26623129,0,0x0,8
tick,0x7ffdf681f424,26625104,0,0x0,8
tick,0x7ffdf681f424,26627099,0,0x0,8
tick,0x7ffdf681f424,26629101,0,0x0,8
tick,0x7ffdf681f424,26631099,0,0x0,8
tick,0x7ffdf681f424,26633093,0,0x0,8
tick,0x7ffdf681f424,26635095,0,0x0,8
tick,0x7ffdf681f424,26637078,0,0x0,8
tick,0x7ffdf681f424,26639080,0,0x0,8
tick,0x7ffdf681f424,26641074,0,0x0,8
tick,0x7ffdf681f424,26643058,0,0x0,8
tick,0x7ffdf681f424,26645071,0,0x0,8
tick,0x7ffdf681f424,26647049,0,0x0,8
tick,0x7ffdf681f424,26649070,0,0x0,8
tick,0x7ffdf681f424,26651040,0,0x0,8
tick,0x7ffdf681f424,26653037,0,0x0,8
tick,0x7ffdf681f424,26655029,0,0x0,8
tick,0x7ffdf681f424,26657032,0,0x0,8
tick,0x7ffdf681f424,26658969,0,0x0,8
tick,0x7ffdf681f424,26661030,0,0x0,8
tick,0x7ffdf681f424,26663021,0,0x0,8
tick,0x7ffdf681f424,26665002,0,0x0,8
tick,0x7ffdf681f424,26667007,0,0x0,8
tick,0x7ffdf681f424,26669055,0,0x0,8
tick,0x7ffdf681f424,26671012,0,0x0,8
tick,0x7ffdf681f424,26672983,0,0x0,8
tick,0x7ffdf681f424,26674978,0,0x0,8
tick,0x7ffdf681f424,26676979,0,0x0,8
tick,0x7ffdf681f424,26678966,0,0x0,8
tick,0x7ffdf681f424,26680955,0,0x0,8
tick,0x7ffdf681f424,26682955,0,0x0,8
tick,0x7ffdf681f424,26684946,0,0x0,8
tick,0x7ffdf681f424,26686944,0,0x0,8
tick,0x7ffdf681f424,26688942,0,0x0,8
tick,0x7ffdf681f424,26690935,0,0x0,8
tick,0x7ffdf681f424,26692833,0,0x0,8
tick,0x7ffdf681f424,26694815,0,0x0,8
tick,0x7ffdf681f424,26696884,0,0x0,8
tick,0x7ffdf681f424,26698810,0,0x0,8
tick,0x7ffdf681f424,26700913,0,0x0,8
tick,0x7ffdf681f424,26702845,0,0x0,8
tick,0x7ffdf681f424,26704738,0,0x0,8
tick,0x7ffdf681f424,26706857,0,0x0,8
tick,0x7ffdf681f424,26708749,0,0x0,8
tick,0x7ffdf681f424,26710795,0,0x0,8
tick,0x7ffdf681f424,26712895,0,0x0,8
tick,0x7ffdf681f424,26714864,0,0x0,8
tick,0x7ffdf681f424,26716883,0,0x0,8
tick,0x7ffdf681f424,26718753,0,0x0,8
tick,0x7ffdf681f424,26720848,0,0x0,8
tick,0x7ffdf681f424,26722850,0,0x0,8
tick,0x7ffdf681f424,26724837,0,0x0,8
tick,0x7ffdf681f424,26726832,0,0x0,8
tick,0x7ffdf681f424,26728832,0,0x0,8
tick,0x7ffdf681f424,26730829,0,0x0,8
tick,0x7ffdf681f424,26732835,0,0x0,8
tick,0x7ffdf681f424,26734810,0,0x0,8
tick,0x7ffdf681f424,26736805,0,0x0,8
tick,0x7ffdf681f424,26738814,0,0x0,8
tick,0x7ffdf681f424,26740829,0,0x0,8
tick,0x7ffdf681f424,26742809,0,0x0,8
tick,0x7ffdf681f424,26744792,0,0x0,8
tick,0x7ffdf681f424,26746779,0,0x0,8
tick,0x7ffdf681f424,26748775,0,0x0,8
tick,0x7ffdf681f424,26750726,0,0x0,8
tick,0x7ffdf681f424,26752768,0,0x0,8
tick,0x7ffdf681f424,26754778,0,0x0,8
tick,0x7ffdf681f424,26756752,0,0x0,8
tick,0x7ffdf681f424,26758675,0,0x0,8
tick,0x7ffdf681f424,26760753,0,0x0,8
tick,0x7ffdf681f424,26762744,0,0x0,8
tick,0x7ffdf681f424,26764737,0,0x0,8
tick,0x7ffdf681f424,26766738,0,0x0,8
tick,0x7ffdf681f424,26768728,0,0x0,8
tick,0x7ffdf681f424,26770722,0,0x0,8
tick,0x7ffdf681f424,26772723,0,0x0,8
tick,0x7ffdf681f424,26774730,0,0x0,8
tick,0x7ffdf681f424,26776702,0,0x0,8
tick,0x7ffdf681f424,26778696,0,0x0,8
tick,0x7ffdf681f424,26780690,0,0x0,8
tick,0x7ffdf681f424,26782703,0,0x0,8
tick,0x7ffdf681f424,26784677,0,0x0,8
tick,0x7ffdf681f424,26786684,0,0x0,8
tick,0x7ffdf681f424,26788687,0,0x0,8
tick,0x7ffdf681f424,26790680,0,0x0,8
tick,0x7ffdf681f424,26792666,0,0x0,8
tick,0x7ffdf681f424,26794664,0,0x0,8
tick,0x7ffdf681f424,26796646,0,0x0,8
tick,0x7ffdf681f424,26798643,0,0x0,8
tick,0x7ffdf681f424,26800533,0,0x0,8
tick,0x7ffdf681f424,26802637,0,0x0,8
tick,0x7ffdf681f424,26804632,0,0x0,8
tick,0x7ffdf681f424,26806624,0,0x0,8
tick,0x7ffdf681f424,26808631,0,0x0,8
tick,0x7ffdf681f424,26810621,0,0x0,8
tick,0x7ffdf681f424,26812605,0,0x0,8
tick,0x7ffdf681f424,26814609,0,0x0,8
tick,0x7ffdf681f424,26816482,0,0x0,8
tick,0x7ffdf681f424,26818461,0,0x0,8
tick,0x7ffdf681f424,26820508,0,0x0,8
tick,0x7ffdf681f424,26822452,0,0x0,8
tick,0x7ffdf681f424,26824488,0,0x0,8
tick,0x7ffdf681f424,26826408,0,0x0,8
tick,0x7ffdf681f424,26828516,0,0x0,8
tick,0x7ffdf681f424,26830448,0,0x0,8
tick,0x7ffdf681f424,26832563,0,0x0,8
tick,0x7ffdf681f424,26834512,0,0x0,8
tick,0x7ffdf681f424,26836409,0,0x0,8
tick,0x7ffdf681f424,26838499,0,0x0,8
tick,0x7ffdf681f424,26840482,0,0x0,8
tick,0x7ffdf681f424,26842469,0,0x0,8
tick,0x7ffdf681f424,26844530,0,0x0,8
tick,0x7ffdf681f424,26846517,0,0x0,8
tick,0x7ffdf681f424,26848514,0,0x0,8
tick,0x7ffdf681f424,26850443,0,0x0,8
tick,0x7ffdf681f424,26852496,0,0x0,8
tick,0x7ffdf681f424,26854497,0,0x0,8
tick,0x7ffdf681f424,26856485,0,0x0,8
tick,0x7ffdf681f424,26858530,0,0x0,8
tick,0x7ffdf681f424,26860527,0,0x0,8
tick,0x7ffdf681f424,26862476,0,0x0,8
tick,0x7ffdf681f424,26864489,0,0x0,8
tick,0x7ffdf681f424,26866558,0,0x0,8
tick,0x7ffdf681f424,26868491,0,0x0,8
tick,0x7ffdf681f424,26870469,0,0x0,8
tick,0x7ffdf681f424,26872448,0,0x0,8
tick,0x7ffdf681f424,26874443,0,0x0,8
tick,0x7ffdf681f424,26876440,0,0x0,8
tick,0x7ffdf681f424,26878427,0,0x0,8
tick,0x7ffdf681f424,26880421,0,0x0,8
tick,0x7ffdf681f424,26882533,0,0x0,8
tick,0x7ffdf681f424,26884416,0,0x0,8
tick,0x7ffdf681f424,26886425,0,0x0,8
tick,0x7ffdf681f424,26888478,0,0x0,8
tick,0x7ffdf681f424,26890423,0,0x0,8
tick,0x7ffdf681f424,26892298,0,0x0,8
tick,0x7ffdf681f424,26894390,0,0x0,8
tick,0x7ffdf681f424,26896378,0,0x0,8
tick,0x7ffdf681f424,26898387,0,0x0,8
tick,0x7ffdf681f424,26900378,0,0x0,8
tick,0x7ffdf681f424,26902368,0,0x0,8
tick,0x7ffdf681f424,26904255,0,0x0,8
tick,0x7ffdf681f424,26906389,0,0x0,8
tick,0x7ffdf681f424,26908368,0,0x0,8
tick,0x7ffdf681f424,26910340,0,0x0,8
tick,0x7ffdf681f424,26912336,0,0x0,8
tick,0x7ffdf681f424,26914345,0,0x0,8
tick,0x7ffdf681f424,26916328,0,0x0,8
tick,0x7ffdf681f424,26918326,0,0x0,8
tick,0x7ffdf681f424,26920331,0,0x0,8
tick,0x7ffdf681f424,26922355,0,0x0,8
tick,0x7ffdf681f424,26924310,0,0x0,8
tick,0x7ffdf681f424,26926304,0,0x0,8
tick,0x7ffdf681f424,26928301,0,0x0,8
tick,0x7ffdf681f424,26930306,0,0x0,8
tick,0x7ffdf681f424,26932283,0,0x0,8
tick,0x7ffdf681f424,26934277,0,0x0,8
tick,0x7ffdf681f424,26936276,0,0x0,8
tick,0x7ffdf681f424,26938273,0,0x0,8
tick,0x7ffdf681f424,26940269,0,0x0,8
tick,0x7ffdf681f424,26942256,0,0x0,8
tick,0x7ffdf681f424,26944251,0,0x0,8
tick,0x7ffdf681f424,26946251,0,0x0,8
tick,0x7ffdf681f424,26948246,0,0x0,8
tick,0x7ffdf681f424,26950245,0,0x0,8
tick,0x7ffdf681f424,26952301,0,0x0,8
tick,0x7ffdf681f424,26954122,0,0x0,8
tick,0x7ffdf681f424,26956132,0,0x0,8
tick,0x7ffdf681f424,26958176,0,0x0,8
tick,0x7ffdf681f424,26960137,0,0x0,8
tick,0x7ffdf681f424,26962206,0,0x0,8
tick,0x7ffdf681f424,26964215,0,0x0,8
tick,0x7ffdf681f424,26966198,0,0x0,8
tick,0x7ffdf681f424,26968042,0,0x0,8
tick,0x7ffdf681f424,26970090,0,0x0,8
tick,0x7ffdf681f424,26972142,0,0x0,8
tick,0x7ffdf681f424,26974193,0,0x0,8
tick,0x7ffdf681f424,26976260,0,0x0,8
tick,0x7ffdf681f424,26978192,0,0x0,8
tick,0x7ffdf681f424,26980155,0,0x0,8
tick,0x7ffdf681f424,26982155,0,0x0,8
tick,0x7ffdf681f424,26984070,0,0x0,8
tick,0x7ffdf681f424,26986186,0,0x0,8
tick,0x7ffdf681f424,26988133,0,0x0,8
tick,0x7ffdf681f424,26990133,0,0x0,8
tick,0x7ffdf681f424,26992045,0,0x0,8
tick,0x7ffdf681f424,26994119,0,0x0,8
tick,0x7ffdf681f424,26996136,0,0x0,8
tick,0x7ffdf681f424,26998103,0,0x0,8
tick,0x7ffdf681f424,27000070,0,0x0,8
tick,0x7ffdf681f424,27002081,0,0x0,8
tick,0x7ffdf681f424,27004105,0,0x0,8
tick,0x7ffdf681f424,27006104,0,0x0,8
tick,0x7ffdf681f424,27008095,0,0x0,8
tick,0x7ffdf681f424,27010081,0,0x0,8
tick,0x7ffdf681f424,27012069,0,0x0,8
tick,0x7ffdf681f424,27014070,0,0x0,8
tick,0x7ffdf681f424,27016064,0,0x0,8
tick,0x7ffdf681f424,27018073,0,0x0,8
tick,0x7ffdf681f424,27020045,0,0x0,8
tick,0x7ffdf681f424,27022043,0,0x0,8
tick,0x7ffdf681f424,27024047,0,0x0,8
tick,0x7ffdf681f424,27026053,0,0x0,8
tick,0x7ffdf681f424,27028034,0,0x0,8
tick,0x7ffdf681f424,27030035,0,0x0,8
tick,0x7ffdf681f424,27032032,0,0x0,8
tick,0x7ffdf681f424,27033909,0,0x0,8
tick,0x7ffdf681f424,27036014,0,0x0,8
tick,0x7ffdf681f424,27038008,0,0x0,8
tick,0x7ffdf681f424,27040012,0,0x0,8
tick,0x7ffdf681f424,27041998,0,0x0,8
tick,0x7ffdf681f424,27043984,0,0x0,8
tick,0x7ffdf681f424,27045984,0,0x0,8
tick,0x7ffdf681f424,27047978,0,0x0,8
tick,0x7ffdf681f424,27049976,0,0x0,8
tick,0x7ffdf681f424,27051968,0,0x0,8
tick,0x7ffdf681f424,27053957,0,0x0,8
tick,0x7ffdf681f424,27055952,0,0x0,8
tick,0x7ffdf681f424,27057962,0,0x0,8
tick,0x7ffdf681f424,27059944,0,0x0,8
tick,0x7ffdf681f424,27061954,0,0x0,8
tick,0x7ffdf681f424,27063932,0,0x0,8
tick,0x7ffdf681f424,27065938,0,0x0,8
tick,0x7ffdf681f424,27067928,0,0x0,8
tick,0x7ffdf681f424,27069932,0,0x0,8
tick,0x7ffdf681f424,27071920,0,0x0,8
tick,0x7ffdf681f424,27073918,0,0x0,8
tick,0x7ffdf681f424,27075899,0,0x0,8
tick,0x7ffdf681f424,27077899,0,0x0,8
tick,0x7ffdf681f424,27079893,0,0x0,8
tick,0x7ffdf681f424,27081784,0,0x0,8
tick,0x7ffdf681f424,27083886,0,0x0,8
tick,0x7ffdf681f424,27085716,0,0x0,8
tick,0x7ffdf681f424,27087761,0,0x0,8
tick,0x7ffdf681f424,27089781,0,0x0,8
tick,0x7ffdf681f424,27091917,0,0x0,8
tick,0x7ffdf681f424,27093877,0,0x0,8
tick,0x7ffdf681f424,27095719,0,0x0,8
tick,0x7ffdf681f424,27097819,0,0x0,8
tick,0x7ffdf681f424,27099805,0,0x0,8
tick,0x7ffdf681f424,27101727,0,0x0,8
tick,0x7ffdf681f424,27103722,0,0x0,8
tick,0x7ffdf681f424,27105838,0,0x0,8
tick,0x7ffdf681f424,27107882,0,0x0,8
tick,0x7ffdf681f424,27109711,0,0x0,8
tick,0x7ffdf681f424,27111813,0,0x0,8
tick,0x7ffdf681f424,27113805,0,0x0,8
tick,0x7ffdf681f424,27115798,0,0x0,8
tick,0x7ffdf681f424,27117812,0,0x0,8
tick,0x7ffdf681f424,27119786,0,0x0,8
tick,0x7ffdf681f424,27121778,0,0x0,8
tick,0x7ffdf681f424,27123778,0,0x0,8
tick,0x7ffdf681f424,27125698,0,0x0,8
tick,0x7ffdf681f424,27127780,0,0x0,8
tick,0x7ffdf681f424,27129830,0,0x0,8
tick,0x7ffdf681f424,27131806,0,0x0,8
tick,0x7ffdf681f424,27133637,0,0x0,8
tick,0x7ffdf681f424,27135720,0,0x0,8
tick,0x7ffdf681f424,27137733,0,0x0,8
tick,0x7ffdf681f424,27139744,0,0x0,8
tick,0x7ffdf681f424,27141730,0,0x0,8
tick,0x7ffdf681f424,27143751,0,0x0,8
tick,0x7ffdf681f424,27145720,0,0x0,8
tick,0x7ffdf681f424,27147712,0,0x0,8
tick,0x7ffdf681f424,27149721,0,0x0,8
tick,0x7ffdf681f424,27151708,0,0x0,8
tick,0x7ffdf681f424,27153692,0,0x0,8
tick,0x7ffdf681f424,27155693,0,0x0,8
tick,0x7ffdf681f424,27157683,0,0x0,8
tick,0x7ffdf681f424,27159678,0,0x0,8
tick,0x7ffdf681f424,27161676,0,0x0,8
tick,0x7ffdf681f424,27163666,0,0x0,8
tick,0x7ffdf681f424,27165664,0,0x0,8
tick,0x7ffdf681f424,27167659,0,0x0,8
tick,0x7ffdf681f424,27169656,0,0x0,8
tick,0x7ffdf681f424,27171662,0,0x0,8
tick,0x7ffdf681f424,27173641,0,0x0,8
tick,0x7ffdf681f424,27175556,0,0x0,8
tick,0x7ffdf681f424,27177635,0,0x0,8
tick,0x7ffdf681f424,27179627,0,0x0,8
tick,0x7ffdf681f424,27181616,0,0x0,8
tick,0x7ffdf681f424,27183626,0,0x0,8
tick,0x7ffdf681f424,27185613,0,0x0,8
tick,0x7ffdf681f424,27187602,0,0x0,8
tick,0x7ffdf681f424,27189601,0,0x0,8
tick,0x7ffdf681f424,27191592,0,0x0,8
tick,0x7ffdf681f424,27193603,0,0x0,8
tick,0x7ffdf681f424,27195584,0,0x0,8
tick,0x7ffdf681f424,27197612,0,0x0,8
tick,0x7ffdf681f424,27199576,0,0x0,8
tick,0x7ffdf681f424,27201570,0,0x0,8
tick,0x7ffdf681f424,27203567,0,0x0,8
tick,0x7ffdf681f424,27205558,0,0x0,8
tick,0x7ffdf681f424,27207546,0,0x0,8
tick,0x7ffdf681f424,27209549,0,0x0,8
tick,0x7ffdf681f424,27211436,0,0x0,8
tick,0x7ffdf681f424,27213481,0,0x0,8
tick,0x7ffdf681f424,27215373,0,0x0,8
tick,0x7ffdf681f424,27217367,0,0x0,8
tick,0x7ffdf681f424,27219500,0,0x0,8
tick,0x7ffdf681f424,27221418,0,0x0,8
tick,0x7ffdf681f424,27223496,0,0x0,8
tick,0x7ffdf681f424,27225478,0,0x0,8
tick,0x7ffdf681f424,27227437,0,0x0,8
tick,0x7ffdf681f424,27229330,0,0x0,8
tick,0x7ffdf681f424,27231451,0,0x0,8
tick,0x7ffdf681f424,27233510,0,0x0,8
tick,0x7ffdf681f424,27235372,0,0x0,8
tick,0x7ffdf681f424,27237486,0,0x0,8
tick,0x7ffdf681f424,27239458,0,0x0,8
tick,0x7ffdf681f424,27241458,0,0x0,8
tick,0x7ffdf681f424,27243462,0,0x0,8
tick,0x7ffdf681f424,27245452,0,0x0,8
tick,0x7ffdf681f424,27247440,0,0x0,8
tick,0x7ffdf681f424,27249453,0,0x0,8
tick,0x7ffdf681f424,27251437,0,0x0,8
tick,0x7ffdf681f424,27253430,0,0x0,8
tick,0x7ffdf681f424,27255437,0,0x0,8
tick,0x7ffdf681f424,27257413,0,0x0,8
tick,0x7ffdf681f424,27259429,0,0x0,8
tick,0x7ffdf681f424,27261404,0,0x0,8
tick,0x7ffdf681f424,27263408,0,0x0,8
tick,0x7ffdf681f424,27265398,0,0x0,8
tick,0x7ffdf681f424,27267313,0,0x0,8
tick,0x7ffdf681f424,27269387,0,0x0,8
tick,0x7ffdf681f424,27271391,0,0x0,8
tick,0x7ffdf681f424,27273379,0,0x0,8
tick,0x7ffdf681f424,27275379,0,0x0,8
tick,0x7ffdf681f424,27277360,0,0x0,8
tick,0x7ffdf681f424,27279362,0,0x0,8
tick,0x7ffdf681f424,27281384,0,0x0,8
tick,0x7ffdf681f424,27283344,0,0x0,8
tick,0x7ffdf681f424,27285339,0,0x0,8
tick,0x7ffdf681f424,27287341,0,0x0,8
tick,0x7ffdf681f424,27289333,0,0x0,8
tick,0x7ffdf681f424,27291330,0,0x0,8
tick,0x7ffdf681f424,27293336,0,0x0,8
tick,0x7ffdf681f424,27295318,0,0x0,8
tick,0x7ffdf681f424,27297337,0,0x0,8
tick,0x7ffdf681f424,27299309,0,0x0,8
tick,0x7ffdf681f424,27301301,0,0x0,8
tick,0x7ffdf681f424,27303310,0,0x0,8
tick,0x7ffdf681f424,27305291,0,0x0,8
tick,0x7ffdf681f424,27307258,0,0x0,8
tick,0x7ffdf681f424,27309275,0,0x0,8
tick,0x7ffdf681f424,27311280,0,0x0,8
tick,0x7ffdf681f424,27313271,0,0x0,8
tick,0x7ffdf681f424,27315298,0,0x0,8
tick,0x7ffdf681f424,27317163,0,0x0,8
tick,0x7ffdf681f424,27319251,0,0x0,8
tick,0x7ffdf681f424,27321248,0,0x0,8
tick,0x7ffdf681f424,27323245,0,0x0,8
tick,0x7ffdf681f424,27325258,0,0x0,8
tick,0x7ffdf681f424,27327224,0,0x0,8
tick,0x7ffdf681f424,27329221,0,0x0,8
tick,0x7ffdf681f424,27331223,0,0x0,8
tick,0x7ffdf681f424,27333217,0,0x0,8
tick,0x7ffdf681f424,27335212,0,0x0,8
tick,0x7ffdf681f424,27337219,0,0x0,8
tick,0x7ffdf681f424,27339195,0,0x0,8
tick,0x7ffdf681f424,27341199,0,0x0,8
tick,0x7ffdf681f424,27343181,0,0x0,8
tick,0x7ffdf681f424,27345109,0,0x0,8
tick,0x7ffdf681f424,27347021,0,0x0,8
tick,0x7ffdf681f424,27349195,0,0x0,8
tick,0x7ffdf681f424,27351034,0,0x0,8
tick,0x7ffdf681f424,27353185,0,0x0,8
tick,0x7ffdf681f424,27355160,0,0x0,8
tick,0x7ffdf681f424,27357152,0,0x0,8
tick,0x7ffdf681f424,27359107,0,0x0,8
tick,0x7ffdf681f424,27361007,0,0x0,8
tick,0x7ffdf681f424,27363109,0,0x0,8
tick,0x7ffdf681f424,27365131,0,0x0,8
tick,0x7ffdf681f424,27367099,0,0x0,8
tick,0x7ffdf681f424,27369056,0,0x0,8
tick,0x7ffdf681f424,27371137,0,0x0,8
tick,0x7ffdf681f424,27373104,0,0x0,8
tick,0x7ffdf681f424,27375098,0,0x0,8
tick,0x7ffdf681f424,27377097,0,0x0,8
tick,0x7ffdf681f424,27379090,0,0x0,8
tick,0x7ffdf681f424,27381098,0,0x0,8
tick,0x7ffdf681f424,27383077,0,0x0,8
tick,0x7ffdf681f424,27384971,0,0x0,8
tick,0x7ffdf681f424,27387069,0,0x0,8
tick,0x7ffdf681f424,27389061,0,0x0,8
tick,0x7ffdf681f424,27391076,0,0x0,8
tick,0x7ffdf681f424,27393053,0,0x0,8
tick,0x7ffdf681f424,27395054,0,0x0,8
tick,0x7ffdf681f424,27397075,0,0x0,8
tick,0x7ffdf681f424,27399043,0,0x0,8
tick,0x7ffdf681f424,27401036,0,0x0,8
tick,0x7ffdf681f424,27403039,0,0x0,8
tick,0x7ffdf681f424,27405019,0,0x0,8
tick,0x7ffdf681f424,27407019,0,0x0,8
tick,0x7ffdf681f424,27408917,0,0x0,8
tick,0x7ffdf681f424,27411016,0,0x0,8
tick,0x7ffdf681f424,27413031,0,0x0,8
tick,0x7ffdf681f424,27414873,0,0x0,8
tick,0x7ffdf681f424,27417000,0,0x0,8
tick,0x7ffdf681f424,27418989,0,0x0,8
tick,0x7ffdf681f424,27420982,0,0x0,8
tick,0x7ffdf681f424,27422977,0,0x0,8
tick,0x7ffdf681f424,27424972,0,0x0,8
tick,0x7ffdf681f424,27426960,0,0x0,8
tick,0x7ffdf681f424,27428962,0,0x0,8
tick,0x7ffdf681f424,27430959,0,0x0,8
tick,0x7ffdf681f424,27432952,0,0x0,8
tick,0x7ffdf681f424,27434958,0,0x0,8
tick,0x7ffdf681f424,27437015,0,0x0,8
tick,0x7ffdf681f424,27438956,0,0x0,8
tick,0x7ffdf681f424,27440930,0,0x0,8
tick,0x7ffdf681f424,27442920,0,0x0,8
tick,0x7ffdf681f424,27444921,0,0x0,8
tick,0x7ffdf681f424,27446922,0,0x0,8
tick,0x7ffdf681f424,27448907,0,0x0,8
tick,0x7ffdf681f424,27450857,0,0x0,8
tick,0x7ffdf681f424,27452891,0,0x0,8
tick,0x7ffdf681f424,27454891,0,0x0,8
tick,0x7ffdf681f424,27456906,0,0x0,8
tick,0x7ffdf681f424,27458907,0,0x0,8
tick,0x7ffdf681f424,27460874,0,0x0,8
tick,0x7ffdf681f424,27462873,0,0x0,8
tick,0x7ffdf681f424,27464873,0,0x0,8
tick,0x7ffdf681f424,27466859,0,0x0,8
tick,0x7ffdf681f424,27468867,0,0x0,8
tick,0x7ffdf681f424,27470863,0,0x0,8
tick,0x7ffdf681f424,27472736,0,0x0,8
tick,0x7ffdf681f424,27474791,0,0x0,8
tick,0x7ffdf681f424,27476675,0,0x0,8
tick,0x7ffdf681f424,27478838,0,0x0,8
tick,0x7ffdf681f424,27480731,0,0x0,8
tick,0x7ffdf681f424,27482892,0,0x0,8
tick,0x7ffdf681f424,27484783,0,0x0,8
tick,0x7ffdf681f424,27486669,0,0x0,8
tick,0x7ffdf681f424,27488714,0,0x0,8
tick,0x7ffdf681f424,27490753,0,0x0,8
tick,0x7ffdf681f424,27492676,0,0x0,8
tick,0x7ffdf681f424,27494779,0,0x0,8
tick,0x7ffdf681f424,27496775,0,0x0,8
tick,0x7ffdf681f424,27498773,0,0x0,8
tick,0x7ffdf681f424,27500704,0,0x0,8
tick,0x7ffdf681f424,27502786,0,0x0,8
tick,0x7ffdf681f424,27504770,0,0x0,8
tick,0x7ffdf681f424,27506749,0,0x0,8
tick,0x7ffdf681f424,27508746,0,0x0,8
tick,0x7ffdf681f424,27510736,0,0x0,8
tick,0x7ffdf681f424,27512737,0,0x0,8
tick,0x7ffdf681f424,27514727,0,0x0,8
tick,0x7ffdf681f424,27516725,0,0x0,8
tick,0x7ffdf681f424,27518664,0,0x0,8
tick,0x7ffdf681f424,27520715,0,0x0,8
tick,0x7ffdf681f424,27522724,0,0x0,8
tick,0x7ffdf681f424,27524701,0,0x0,8
tick,0x7ffdf681f424,27526730,0,0x0,8
tick,0x7ffdf681f424,27528695,0,0x0,8
tick,0x7ffdf681f424,27530696,0,0x0,8
tick,0x7ffdf681f424,27532677,0,0x0,8
tick,0x7ffdf681f424,27534688,0,0x0,8
tick,0x7ffdf681f424,27536674,0,0x0,8
tick,0x7ffdf681f424,27538684,0,0x0,8
tick,0x7ffdf681f424,27540690,0,0x0,8
tick,0x7ffdf681f424,27542651,0,0x0,8
tick,0x7ffdf681f424,27544673,0,0x0,8
tick,0x7ffdf681f424,27546643,0,0x0,8
tick,0x7ffdf681f424,27548661,0,0x0,8
tick,0x7ffdf681f424,27550528,0,0x0,8
tick,0x7ffdf681f424,27552630,0,0x0,8
tick,0x7ffdf681f424,27554625,0,0x0,8
tick,0x7ffdf681f424,27556634,0,0x0,8
tick,0x7ffdf681f424,27558613,0,0x0,8
tick,0x7ffdf681f424,27560649,0,0x0,8
tick,0x7ffdf681f424,27562597,0,0x0,8
tick,0x7ffdf681f424,27564599,0,0x0,8
tick,0x7ffdf681f424,27566614,0,0x0,8
tick,0x7ffdf681f424,27568580,0,0x0,8
tick,0x7ffdf681f424,27570578,0,0x0,8
tick,0x7ffdf681f424,27572576,0,0x0,8
tick,0x7ffdf681f424,27574571,0,0x0,8
tick,0x7ffdf681f424,27576569,0,0x0,8
tick,0x7ffdf681f424,27578571,0,0x0,8
tick,0x7ffdf681f424,27580555,0,0x0,8
tick,0x7ffdf681f424,27582561,0,0x0,8
tick,0x7ffdf681f424,27584544,0,0x0,8
tick,0x7ffdf681f424,27586539,0,0x0,8
tick,0x7ffdf681f424,27588564,0,0x0,8
tick,0x7ffdf681f424,27590524,0,0x0,8
tick,0x7ffdf681f424,27592534,0,0x0,8
tick,0x7ffdf681f424,27594512,0,0x0,8
tick,0x7ffdf681f424,27596513,0,0x0,8
tick,0x7ffdf681f424,27598508,0,0x0,8
tick,0x7ffdf681f424,27600510,0,0x0,8
tick,0x7ffdf681f424,27602499,0,0x0,8
tick,0x7ffdf681f424,27604491,0,0x0,8
tick,0x7ffdf681f424,27606460,0,0x0,8
tick,0x7ffdf681f424,27608351,0,0x0,8
tick,0x7ffdf681f424,27610375,0,0x0,8
tick,0x7ffdf681f424,27612359,0,0x0,8
tick,0x7ffdf681f424,27614373,0,0x0,8
tick,0x7ffdf681f424,27616456,0,0x0,8
tick,0x7ffdf681f424,27618417,0,0x0,8
tick,0x7ffdf681f424,27620314,0,0x0,8
tick,0x7ffdf681f424,27622402,0,0x0,8
tick,0x7ffdf681f424,27624298,0,0x0,8
tick,0x7ffdf681f424,27626297,0,0x0,8
tick,0x7ffdf681f424,27628417,0,0x0,8
tick,0x7ffdf681f424,27630453,0,0x0,8
tick,0x7ffdf681f424,27632430,0,0x0,8
tick,0x7ffdf681f424,27634327,0,0x0,8
tick,0x7ffdf681f424,27636402,0,0x0,8
tick,0x7ffdf681f424,27638402,0,0x0,8
tick,0x7ffdf681f424,27640402,0,0x0,8
tick,0x7ffdf681f424,27642279,0,0x0,8
tick,0x7ffdf681f424,27644413,0,0x0,8
tick,0x7ffdf681f424,27646389,0,0x0,8
tick,0x7ffdf681f424,27648374,0,0x0,8
tick,0x7ffdf681f424,27650374,0,0x0,8
tick,0x7ffdf681f424,27652369,0,0x0,8
tick,0x7ffdf681f424,27654376,0,0x0,8
tick,0x7ffdf681f424,27656426,0,0x0,8
tick,0x7ffdf681f424,27658372,0,0x0,8
tick,0x7ffdf681f424,27660342,0,0x0,8
tick,0x7ffdf681f424,27662339,0,0x0,8
tick,0x7ffdf681f424,27664332,0,0x0,8
tick,0x7ffdf681f424,27666374,0,0x0,8
tick,0x7ffdf681f424,27668315,0,0x0,8
tick,0x7ffdf681f424,27670318,0,0x0,8
tick,0x7ffdf681f424,27672319,0,0x0,8
tick,0x7ffdf681f424,27674307,0,0x0,8
tick,0x7ffdf681f424,27676323,0,0x0,8
tick,0x7ffdf681f424,27678352,0,0x0,8
tick,0x7ffdf681f424,27680309,0,0x0,8
tick,0x7ffdf681f424,27682278,0,0x0,8
tick,0x7ffdf681f424,27684281,0,0x0,8
tick,0x7ffdf681f424,27686273,0,0x0,8
tick,0x7ffdf681f424,27688266,0,0x0,8
tick,0x7ffdf681f424,27690258,0,0x0,8
tick,0x7ffdf681f424,27692171,0,0x0,8
tick,0x7ffdf681f424,27694246,0,0x0,8
tick,0x7ffdf681f424,27696248,0,0x0,8
tick,0x7ffdf681f424,27698255,0,0x0,8
tick,0x7ffdf681f424,27700232,0,0x0,8
tick,0x7ffdf681f424,27702251,0,0x0,8
tick,0x7ffdf681f424,27704118,0,0x0,8
tick,0x7ffdf681f424,27706226,0,0x0,8
tick,0x7ffdf681f424,27708218,0,0x0,8
tick,0x7ffdf681f424,27710216,0,0x0,8
tick,0x7ffdf681f424,27712198,0,0x0,8
tick,0x7ffdf681f424,27714199,0,0x0,8
tick,0x7ffdf681f424,27716197,0,0x0,8
tick,0x7ffdf681f424,27718182,0,0x0,8
tick,0x7ffdf681f424,27720200,0,0x0,8
tick,0x7ffdf681f424,27722253,0,0x0,8
tick,0x7ffdf681f424,27724226,0,0x0,8
tick,0x7ffdf681f424,27726165,0,0x0,8
tick,0x7ffdf681f424,27728164,0,0x0,8
tick,0x7ffdf681f424,27730146,0,0x0,8
tick,0x7ffdf681f424,27732162,0,0x0,8
tick,0x7ffdf681f424,27734036,0,0x0,8
tick,0x7ffdf681f424,27736068,0,0x0,8
tick,0x7ffdf681f424,27738031,0,0x0,8
tick,0x7ffdf681f424,27740095,0,0x0,8
tick,0x7ffdf681f424,27742105,0,0x0,8
tick,0x7ffdf681f424,27744066,0,0x0,8
tick,0x7ffdf681f424,27746142,0,0x0,8
tick,0x7ffdf681f424,27748110,0,0x0,8
tick,0x7ffdf681f424,27750122,0,0x0,8
tick,0x7ffdf681f424,27752059,0,0x0,8
tick,0x7ffdf681f424,27753957,0,0x0,8
tick,0x7ffdf681f424,27755977,0,0x0,8
tick,0x7ffdf681f424,27757979,0,0x0,8
tick,0x7ffdf681f424,27759987,0,0x0,8
tick,0x7ffdf681f424,27762091,0,0x0,8
tick,0x7ffdf681f424,27764077,0,0x0,8
tick,0x7ffdf681f424,27766058,0,0x0,8
tick,0x7ffdf681f424,27767994,0,0x0,8
tick,0x7ffdf681f424,27770054,0,0x0,8
tick,0x7ffdf681f424,27772050,0,0x0,8
tick,0x7ffdf681f424,27774039,0,0x0,8
tick,0x7ffdf681f424,27775928,0,0x0,8
tick,0x7ffdf681f424,27778028,0,0x0,8
tick,0x7ffdf681f424,27780038,0,0x0,8
tick,0x7ffdf681f424,27782018,0,0x0,8
tick,0x7ffdf681f424,27783909,0,0x0,8
tick,0x7ffdf681f424,27786034,0,0x0,8
tick,0x7ffdf681f424,27787996,0,0x0,8
tick,0x7ffdf681f424,27789995,0,0x0,8
tick,0x7ffdf681f424,27791992,0,0x0,8
tick,0x7ffdf681f424,27793991,0,0x0,8
tick,0x7ffdf681f424,27795865,0,0x0,8
tick,0x7ffdf681f424,27797991,0,0x0,8
tick,0x7ffdf681f424,27799971,0,0x0,8
tick,0x7ffdf681f424,27801964,0,0x0,8
tick,0x7ffdf681f424,27803965,0,0x0,8
tick,0x7ffdf681f424,27805994,0,0x0,8
tick,0x7ffdf681f424,27807969,0,0x0,8
tick,0x7ffdf681f424,27809945,0,0x0,8
tick,0x7ffdf681f424,27811966,0,0x0,8
tick,0x7ffdf681f424,27813938,0,0x0,8
tick,0x7ffdf681f424,27815976,0,0x0,8
tick,0x7ffdf681f424,27817814,0,0x0,8
tick,0x7ffdf681f424,27819926,0,0x0,8
tick,0x7ffdf681f424,27821911,0,0x0,8
tick,0x7ffdf681f424,27823907,0,0x0,8
tick,0x7ffdf681f424,27825793,0,0x0,8
tick,0x7ffdf681f424,27827894,0,0x0,8
tick,0x7ffdf681f424,27829903,0,0x0,8
tick,0x7ffdf681f424,27831912,0,0x0,8
tick,0x7ffdf681f424,27833865,0,0x0,8
tick,0x7ffdf681f424,27835872,0,0x0,8
tick,0x7ffdf681f424,27837865,0,0x0,8
tick,0x7ffdf681f424,27839858,0,0x0,8
tick,0x7ffdf681f424,27841874,0,0x0,8
tick,0x7ffdf681f424,27843845,0,0x0,8
tick,0x7ffdf681f424,27845845,0,0x0,8
tick,0x7ffdf681f424,27847852,0,0x0,8
tick,0x7ffdf681f424,27849835,0,0x0,8
tick,0x7ffdf681f424,27851842,0,0x0,8
tick,0x7ffdf681f424,27853823,0,0x0,8
tick,0x7ffdf681f424,27855847,0,0x0,8
tick,0x7ffdf681f424,27857815,0,0x0,8
tick,0x7ffdf681f424,27859808,0,0x0,8
tick,0x7ffdf681f424,27861805,0,0x0,8
tick,0x7ffdf681f424,27863692,0,0x0,8
tick,0x7ffdf681f424,27865745,0,0x0,8
tick,0x7ffdf681f424,27867662,0,0x0,8
tick,0x7ffdf681f424,27869675,0,0x0,8
tick,0x7ffdf681f424,27871753,0,0x0,8
tick,0x7ffdf681f424,27873832,0,0x0,8
tick,0x7ffdf681f424,27875631,0,0x0,8
tick,0x7ffdf681f424,27877687,0,0x0,8
tick,0x7ffdf681f424,27879662,0,0x0,8
tick,0x7ffdf681f424,27881649,0,0x0,8
tick,0x7ffdf681f424,27883750,0,0x0,8
tick,0x7ffdf681f424,27885635,0,0x0,8
tick,0x7ffdf681f424,27887752,0,0x0,8
tick,0x7ffdf681f424,27889761,0,0x0,8
tick,0x7ffdf681f424,27891723,0,0x0,8
tick,0x7ffdf681f424,27893629,0,0x0,8
tick,0x7ffdf681f424,27895725,0,0x0,8
tick,0x7ffdf681f424,27897767,0,0x0,8
tick,0x7ffdf681f424,27899696,0,0x0,8
tick,0x7ffdf681f424,27901615,0,0x0,8
tick,0x7ffdf681f424,27903682,0,0x0,8
tick,0x7ffdf681f424,27905681,0,0x0,8
tick,0x7ffdf681f424,27907679,0,0x0,8
tick,0x7ffdf681f424,27909679,0,0x0,8
tick,0x7ffdf681f424,27911701,0,0x0,8
tick,0x7ffdf681f424,27913664,0,0x0,8
tick,0x7ffdf681f424,27915623,0,0x0,8
tick,0x7ffdf681f424,27917641,0,0x0,8
tick,0x7ffdf681f424,27919718,0,0x0,8
tick,0x7ffdf681f424,27921668,0,0x0,8
tick,0x7ffdf681f424,27923632,0,0x0,8
tick,0x7ffdf681f424,27925535,0,0x0,8
tick,0x7ffdf681f424,27927628,0,0x0,8
tick,0x7ffdf681f424,27929631,0,0x0,8
tick,0x7ffdf681f424,27931618,0,0x0,8
tick,0x7ffdf681f424,27933611,0,0x0,8
tick,0x7ffdf681f424,27935605,0,0x0,8
tick,0x7ffdf681f424,27937600,0,0x0,8
tick,0x7ffdf681f424,27939607,0,0x0,8
tick,0x7ffdf681f424,27941665,0,0x0,8
tick,0x7ffdf681f424,27943612,0,0x0,8
tick,0x7ffdf681f424,27945584,0,0x0,8
tick,0x7ffdf681f424,27947568,0,0x0,8
tick,0x7ffdf681f424,27949573,0,0x0,8
tick,0x7ffdf681f424,27951565,0,0x0,8
tick,0x7ffdf681f424,27953560,0,0x0,8
tick,0x7ffdf681f424,27955547,0,0x0,8
tick,0x7ffdf681f424,27957544,0,0x0,8
tick,0x7ffdf681f424,27959548,0,0x0,8
tick,0x7ffdf681f424,27961535,0,0x0,8
tick,0x7ffdf681f424,27963529,0,0x0,8
tick,0x7ffdf681f424,27965548,0,0x0,8
tick,0x7ffdf681f424,27967418,0,0x0,8
tick,0x7ffdf681f424,27969546,0,0x0,8
tick,0x7ffdf681f424,27971510,0,0x0,8
tick,0x7ffdf681f424,27973519,0,0x0,8
tick,0x7ffdf681f424,27975498,0,0x0,8
tick,0x7ffdf681f424,27977495,0,0x0,8
tick,0x7ffdf681f424,27979488,0,0x0,8
tick,0x7ffdf681f424,27981493,0,0x0,8
tick,0x7ffdf681f424,27983490,0,0x0,8
tick,0x7ffdf681f424,27985476,0,0x0,8
tick,0x7ffdf681f424,27987486,0,0x0,8
tick,0x7ffdf681f424,27989464,0,0x0,8
tick,0x7ffdf681f424,27991457,0,0x0,8
tick,0x7ffdf681f424,27993453,0,0x0,8
tick,0x7ffdf681f424,27995521,0,0x0,8
tick,0x7ffdf681f424,27997357,0,0x0,8
tick,0x7ffdf681f424,27999274,0,0x0,8
tick,0x7ffdf681f424,28001299,0,0x0,8
tick,0x7ffdf681f424,28003395,0,0x0,8
tick,0x7ffdf681f424,28005392,0,0x0,8
tick,0x7ffdf681f424,28007439,0,0x0,8
tick,0x7ffdf681f424,28009358,0,0x0,8
tick,0x7ffdf681f424,28011333,0,0x0,8
tick,0x7ffdf681f424,28013359,0,0x0,8
tick,0x7ffdf681f424,28015400,0,0x0,8
tick,0x7ffdf681f424,28017281,0,0x0,8
tick,0x7ffdf681f424,28019279,0,0x0,8
tick,0x7ffdf681f424,28021369,0,0x0,8
tick,0x7ffdf681f424,28023386,0,0x0,8
tick,0x7ffdf681f424,28025368,0,0x0,8
tick,0x7ffdf681f424,28027375,0,0x0,8
tick,0x7ffdf681f424,28029353,0,0x0,8
tick,0x7ffdf681f424,28031344,0,0x0,8
tick,0x7ffdf681f424,28033344,0,0x0,8
tick,0x7ffdf681f424,28035245,0,0x0,8
tick,0x7ffdf681f424,28037338,0,0x0,8
tick,0x7ffdf681f424,28039343,0,0x0,8
tick,0x7ffdf681f424,28041318,0,0x0,8
tick,0x7ffdf681f424,28043312,0,0x0,8
tick,0x7ffdf681f424,28045317,0,0x0,8
tick,0x7ffdf681f424,28047309,0,0x0,8
tick,0x7ffdf681f424,28049317,0,0x0,8
tick,0x7ffdf681f424,28051306,0,0x0,8
tick,0x7ffdf681f424,28053285,0,0x0,8
tick,0x7ffdf681f424,28055294,0,0x0,8
tick,0x7ffdf681f424,28057282,0,0x0,8
tick,0x7ffdf681f424,28059202,0,0x0,8
tick,0x7ffdf681f424,28061269,0,0x0,8
tick,0x7ffdf681f424,28063259,0,0x0,8
tick,0x7ffdf681f424,28065268,0,0x0,8
tick,0x7ffdf681f424,28067200,0,0x0,8
tick,0x7ffdf681f424,28069250,0,0x0,8
tick,0x7ffdf681f424,28071261,0,0x0,8
tick,0x7ffdf681f424,28073250,0,0x0,8
tick,0x7ffdf681f424,28075259,0,0x0,8
tick,0x7ffdf681f424,28077232,0,0x0,8
tick,0x7ffdf681f424,28079232,0,0x0,8
tick,0x7ffdf681f424,28081213,0,0x0,8
tick,0x7ffdf681f424,28083212,0,0x0,8
tick,0x7ffdf681f424,28085203,0,0x0,8
tick,0x7ffdf681f424,28087195,0,0x0,8
tick,0x7ffdf681f424,28089197,0,0x0,8
tick,0x7ffdf681f424,28091173,0,0x0,8
tick,0x7ffdf681f424,28093197,0,0x0,8
tick,0x7ffdf681f424,28095178,0,0x0,8
tick,0x7ffdf681f424,28097176,0,0x0,8
tick,0x7ffdf681f424,28099168,0,0x0,8
tick,0x7ffdf681f424,28101157,0,0x0,8
tick,0x7ffdf681f424,28103160,0,0x0,8
tick,0x7ffdf681f424,28105161,0,0x0,8
tick,0x7ffdf681f424,28107143,0,0x0,8
tick,0x7ffdf681f424,28109034,0,0x0,8
tick,0x7ffdf681f424,28111138,0,0x0,8
tick,0x7ffdf681f424,28113133,0,0x0,8
tick,0x7ffdf681f424,28115138,0,0x0,8
tick,0x7ffdf681f424,28117122,0,0x0,8
tick,0x7ffdf681f424,28119109,0,0x0,8
tick,0x7ffdf681f424,28121116,0,0x0,8
tick,0x7ffdf681f424,28123110,0,0x0,8
tick,0x7ffdf681f424,28124987,0,0x0,8
tick,0x7ffdf681f424,28127056,0,0x0,8
tick,0x7ffdf681f424,28128988,0,0x0,8
tick,0x7ffdf681f424,28131082,0,0x0,8
tick,0x7ffdf681f424,28132969,0,0x0,8
tick,0x7ffdf681f424,28135040,0,0x0,8
tick,0x7ffdf681f424,28137077,0,0x0,8
tick,0x7ffdf681f424,28139082,0,0x0,8
tick,0x7ffdf681f424,28141066,0,0x0,8
tick,0x7ffdf681f424,28142998,0,0x0,8
tick,0x7ffdf681f424,28144915,0,0x0,8
tick,0x7ffdf681f424,28146936,0,0x0,8
tick,0x7ffdf681f424,28149039,0,0x0,8
tick,0x7ffdf681f424,28150966,0,0x0,8
tick,0x7ffdf681f424,28153059,0,0x0,8
tick,0x7ffdf681f424,28155021,0,0x0,8
tick,0x7ffdf681f424,28157015,0,0x0,8
tick,0x7ffdf681f424,28159037,0,0x0,8
tick,0x7ffdf681f424,28161010,0,0x0,8
tick,0x7ffdf681f424,28162999,0,0x0,8
tick,0x7ffdf681f424,28165000,0,0x0,8
tick,0x7ffdf681f424,28166995,0,0x0,8
tick,0x7ffdf681f424,28168983,0,0x0,8
tick,0x7ffdf681f424,28170980,0,0x0,8
tick,0x7ffdf681f424,28172981,0,0x0,8
tick,0x7ffdf681f424,28174969,0,0x0,8
tick,0x7ffdf681f424,28176971,0,0x0,8
tick,0x7ffdf681f424,28178954,0,0x0,8
tick,0x7ffdf681f424,28180970,0,0x0,8
tick,0x7ffdf681f424,28182948,0,0x0,8
tick,0x7ffdf681f424,28184967,0,0x0,8
tick,0x7ffdf681f424,28186941,0,0x0,8
tick,0x7ffdf681f424,28188935,0,0x0,8
tick,0x7ffdf681f424,28190930,0,0x0,8
tick,0x7ffdf681f424,28192932,0,0x0,8
tick,0x7ffdf681f424,28194932,0,0x0,8
tick,0x7ffdf681f424,28196938,0,0x0,8
tick,0x7ffdf681f424,28198914,0,0x0,8
tick,0x7ffdf681f424,28200799,0,0x0,8
tick,0x7ffdf681f424,28202915,0,0x0,8
tick,0x7ffdf681f424,28204884,0,0x0,8
tick,0x7ffdf681f424,28206883,0,0x0,8
tick,0x7ffdf681f424,28208895,0,0x0,8
tick,0x7ffdf681f424,28210874,0,0x0,8
tick,0x7ffdf681f424,28212874,0,0x0,8
tick,0x7ffdf681f424,28214895,0,0x0,8
tick,0x7ffdf681f424,28216855,0,0x0,8
tick,0x7ffdf681f424,28218852,0,0x0,8
tick,0x7ffdf681f424,28220844,0,0x0,8
tick,0x7ffdf681f424,28222838,0,0x0,8
tick,0x7ffdf681f424,28224845,0,0x0,8
tick,0x7ffdf681f424,28226820,0,0x0,8
tick,0x7ffdf681f424,28228714,0,0x0,8
tick,0x7ffdf681f424,28230819,0,0x0,8
tick,0x7ffdf681f424,28232805,0,0x0,8
tick,0x7ffdf681f424,28234805,0,0x0,8
tick,0x7ffdf681f424,28236804,0,0x0,8
tick,0x7ffdf681f424,28238791,0,0x0,8
tick,0x7ffdf681f424,28240792,0,0x0,8
tick,0x7ffdf681f424,28242779,0,0x0,8
tick,0x7ffdf681f424,28244776,0,0x0,8
tick,0x7ffdf681f424,28246792,0,0x0,8
tick,0x7ffdf681f424,28248665,0,0x0,8
tick,0x7ffdf681f424,28250645,0,0x0,8
tick,0x7ffdf681f424,28252675,0,0x0,8
tick,0x7ffdf681f424,28254619,0,0x0,8
tick,0x7ffdf681f424,28256670,0,0x0,8
tick,0x7ffdf681f424,28258585,0,0x0,8
tick,0x7ffdf681f424,28260700,0,0x0,8
tick,0x7ffdf681f424,28262636,0,0x0,8
tick,0x7ffdf681f424,28264721,0,0x0,8
tick,0x7ffdf681f424,28266740,0,0x0,8
tick,0x7ffdf681f424,28268705,0,0x0,8
tick,0x7ffdf681f424,28270628,0,0x0,8
tick,0x7ffdf681f424,28272667,0,0x0,8
tick,0x7ffdf681f424,28274651,0,0x0,8
tick,0x7ffdf681f424,28276680,0,0x0,8
tick,0x7ffdf681f424,28278694,0,0x0,8
tick,0x7ffdf681f424,28280691,0,0x0,8
tick,0x7ffdf681f424,28282672,0,0x0,8
tick,0x7ffdf681f424,28284661,0,0x0,8
tick,0x7ffdf681f424,28286669,0,0x0,8
tick,0x7ffdf681f424,28288663,0,0x0,8
tick,0x7ffdf681f424,28290671,0,0x0,8
tick,0x7ffdf681f424,28292537,0,0x0,8
tick,0x7ffdf681f424,28294662,0,0x0,8
tick,0x7ffdf681f424,28296667,0,0x0,8
tick,0x7ffdf681f424,28298636,0,0x0,8
tick,0x7ffdf681f424,28300599,0,0x0,8
tick,0x7ffdf681f424,28302626,0,0x0,8
tick,0x7ffdf681f424,28304553,0,0x0,8
tick,0x7ffdf681f424,28306613,0,0x0,8
tick,0x7ffdf681f424,28308611,0,0x0,8
tick,0x7ffdf681f424,28310603,0,0x0,8
tick,0x7ffdf681f424,28312613,0,0x0,8
tick,0x7ffdf681f424,28314600,0,0x0,8
tick,0x7ffdf681f424,28316617,0,0x0,8
tick,0x7ffdf681f424,28318581,0,0x0,8
tick,0x7ffdf681f424,28320577,0,0x0,8
tick,0x7ffdf681f424,28322571,0,0x0,8
tick,0x7ffdf681f424,28324575,0,0x0,8
tick,0x7ffdf681f424,28326449,0,0x0,8
tick,0x7ffdf681f424,28328549,0,0x0,8
tick,0x7ffdf681f424,28330552,0,0x0,8
tick,0x7ffdf681f424,28332539,0,0x0,8
tick,0x7ffdf681f424,28334552,0,0x0,8
tick,0x7ffdf681f424,28336527,0,0x0,8
tick,0x7ffdf681f424,28338523,0,0x0,8
tick,0x7ffdf681f424,28340532,0,0x0,8
tick,0x7ffdf681f424,28342410,0,0x0,8
tick,0x7ffdf681f424,28344515,0,0x0,8
tick,0x7ffdf681f424,28346515,0,0x0,8
tick,0x7ffdf681f424,28348496,0,0x0,8
tick,0x7ffdf681f424,28350511,0,0x0,8
tick,0x7ffdf681f424,28352511,0,0x0,8
tick,0x7ffdf681f424,28354485,0,0x0,8
tick,0x7ffdf681f424,28356493,0,0x0,8
tick,0x7ffdf681f424,28358522,0,0x0,8
tick,0x7ffdf681f424,28360464,0,0x0,8
tick,0x7ffdf681f424,28362464,0,0x0,8
tick,0x7ffdf681f424,28364453,0,0x0,8
tick,0x7ffdf681f424,28366464,0,0x0,8
tick,0x7ffdf681f424,28368458,0,0x0,8
tick,0x7ffdf681f424,28370437,0,0x0,8
tick,0x7ffdf681f424,28372432,0,0x0,8
tick,0x7ffdf681f424,28374432,0,0x0,8
tick,0x7ffdf681f424,28376430,0,0x0,8
tick,0x7ffdf681f424,28378465,0,0x0,8
tick,0x7ffdf681f424,28380407,0,0x0,8
tick,0x7ffdf681f424,28382410,0,0x0,8
tick,0x7ffdf681f424,28384408,0,0x0,8
tick,0x7ffdf681f424,28386327,0,0x0,8
tick,0x7ffdf681f424,28388279,0,0x0,8
tick,0x7ffdf681f424,28390228,0,0x0,8
tick,0x7ffdf681f424,28392270,0,0x0,8
tick,0x7ffdf681f424,28394291,0,0x0,8
tick,0x7ffdf681f424,28396340,0,0x0,8
tick,0x7ffdf681f424,28398393,0,0x0,8
tick,0x7ffdf681f424,28400378,0,0x0,8
tick,0x7ffdf681f424,28402253,0,0x0,8
tick,0x7ffdf681f424,28404226,0,0x0,8
tick,0x7ffdf681f424,28406312,0,0x0,8
tick,0x7ffdf681f424,28408329,0,0x0,8
tick,0x7ffdf681f424,28410233,0,0x0,8
tick,0x7ffdf681f424,28412332,0,0x0,8
tick,0x7ffdf681f424,28414327,0,0x0,8
tick,0x7ffdf681f424,28416320,0,0x0,8
tick,0x7ffdf681f424,28418212,0,0x0,8
tick,0x7ffdf681f424,28420309,0,0x0,8
tick,0x7ffdf681f424,28422320,0,0x0,8
tick,0x7ffdf681f424,28424292,0,0x0,8
tick,0x7ffdf681f424,28426294,0,0x0,8
tick,0x7ffdf681f424,28428290,0,0x0,8
tick,0x7ffdf681f424,28430280,0,0x0,8
tick,0x7ffdf681f424,28432280,0,0x0,8
tick,0x7ffdf681f424,28434170,0,0x0,8
tick,0x7ffdf681f424,28436261,0,0x0,8
tick,0x7ffdf681f424,28438264,0,0x0,8
tick,0x7ffdf681f424,28440149,0,0x0,8
tick,0x7ffdf681f424,28442144,0,0x0,8
tick,0x7ffdf681f424,28444167,0,0x0,8
tick,0x7ffdf681f424,28446239,0,0x0,8
tick,0x7ffdf681f424,28448233,0,0x0,8
tick,0x7ffdf681f424,28450230,0,0x0,8
tick,0x7ffdf681f424,28452229,0,0x0,8
tick,0x7ffdf681f424,28454220,0,0x0,8
tick,0x7ffdf681f424,28456221,0,0x0,8
tick,0x7ffdf681f424,28458202,0,0x0,8
tick,0x7ffdf681f424,28460230,0,0x0,8
tick,0x7ffdf681f424,28462200,0,0x0,8
tick,0x7ffdf681f424,28464189,0,0x0,8
tick,0x7ffdf681f424,28466200,0,0x0,8
tick,0x7ffdf681f424,28468173,0,0x0,8
tick,0x7ffdf681f424,28470172,0,0x0,8
tick,0x7ffdf681f424,28472167,0,0x0,8
tick,0x7ffdf681f424,28474166,0,0x0,8
tick,0x7ffdf681f424,28476163,0,0x0,8
tick,0x7ffdf681f424,28478155,0,0x0,8
tick,0x7ffdf681f424,28480148,0,0x0,8
tick,0x7ffdf681f424,28482150,0,0x0,8
tick,0x7ffdf681f424,28484036,0,0x0,8
tick,0x7ffdf681f424,28486135,0,0x0,8
tick,0x7ffdf681f424,28488141,0,0x0,8
tick,0x7ffdf681f424,28490114,0,0x0,8
tick,0x7ffdf681f424,28492119,0,0x0,8
tick,0x7ffdf681f424,28494121,0,0x0,8
tick,0x7ffdf681f424,28496109,0,0x0,8
tick,0x7ffdf681f424,28498101,0,0x0,8
tick,0x7ffdf681f424,28500099,0,0x0,8
tick,0x7ffdf681f424,28502098,0,0x0,8
tick,0x7ffdf681f424,28504082,0,0x0,8
tick,0x7ffdf681f424,28506080,0,0x0,8
tick,0x7ffdf681f424,28508076,0,0x0,8
tick,0x7ffdf681f424,28510087,0,0x0,8
tick,0x7ffdf681f424,28512055,0,0x0,8
tick,0x7ffdf681f424,28514057,0,0x0,8
tick,0x7ffdf681f424,28515948,0,0x0,8
tick,0x7ffdf681f424,28518002,0,0x0,8
tick,0x7ffdf681f424,28519884,0,0x0,8
tick,0x7ffdf681f424,28521937,0,0x0,8
tick,0x7ffdf681f424,28524004,0,0x0,8
tick,0x7ffdf681f424,28525981,0,0x0,8
tick,0x7ffdf681f424,28527895,0,0x0,8
tick,0x7ffdf681f424,28530028,0,0x0,8
tick,0x7ffdf681f424,28532030,0,0x0,8
tick,0x7ffdf681f424,28533968,0,0x0,8
tick,0x7ffdf681f424,28535896,0,0x0,8
tick,0x7ffdf681f424,28537932,0,0x0,8
tick,0x7ffdf681f424,28539890,0,0x0,8
tick,0x7ffdf681f424,28541988,0,0x0,8
tick,0x7ffdf681f424,28543876,0,0x0,8
tick,0x7ffdf681f424,28545976,0,0x0,8
tick,0x7ffdf681f424,28547976,0,0x0,8
tick,0x7ffdf681f424,28549967,0,0x0,8
tick,0x7ffdf681f424,28551966,0,0x0,8
tick,0x7ffdf681f424,28554004,0,0x0,8
tick,0x7ffdf681f424,28555950,0,0x0,8
tick,0x7ffdf681f424,28557945,0,0x0,8
tick,0x7ffdf681f424,28559943,0,0x0,8
tick,0x7ffdf681f424,28561936,0,0x0,8
tick,0x7ffdf681f424,28563942,0,0x0,8
tick,0x7ffdf681f424,28565928,0,0x0,8
tick,0x7ffdf681f424,28567904,0,0x0,8
tick,0x7ffdf681f424,28569911,0,0x0,8
tick,0x7ffdf681f424,28571918,0,0x0,8
tick,0x7ffdf681f424,28573909,0,0x0,8
tick,0x7ffdf681f424,28575815,0,0x0,8
tick,0x7ffdf681f424,28577890,0,0x0,8
tick,0x7ffdf681f424,28579913,0,0x0,8
tick,0x7ffdf681f424,28581889,0,0x0,8
tick,0x7ffdf681f424,28583884,0,0x0,8
tick,0x7ffdf681f424,28585871,0,0x0,8
tick,0x7ffdf681f424,28587888,0,0x0,8
tick,0x7ffdf681f424,28589879,0,0x0,8
tick,0x7ffdf681f424,28591852,0,0x0,8
tick,0x7ffdf681f424,28593849,0,0x0,8
tick,0x7ffdf681f424,28595850,0,0x0,8
tick,0x7ffdf681f424,28597855,0,0x0,8
tick,0x7ffdf681f424,28599841,0,0x0,8
tick,0x7ffdf681f424,28601853,0,0x0,8
tick,0x7ffdf681f424,28603828,0,0x0,8
tick,0x7ffdf681f424,28605823,0,0x0,8
tick,0x7ffdf681f424,28607815,0,0x0,8
tick,0x7ffdf681f424,28609823,0,0x0,8
tick,0x7ffdf681f424,28611805,0,0x0,8
tick,0x7ffdf681f424,28613797,0,0x0,8
tick,0x7ffdf681f424,28615801,0,0x0,8
tick,0x7ffdf681f424,28617786,0,0x0,8
tick,0x7ffdf681f424,28619804,0,0x0,8
tick,0x7ffdf681f424,28621765,0,0x0,8
tick,0x7ffdf681f424,28623779,0,0x0,8
tick,0x7ffdf681f424,28625654,0,0x0,8
tick,0x7ffdf681f424,28627753,0,0x0,8
tick,0x7ffdf681f424,28629744,0,0x0,8
tick,0x7ffdf681f424,28631642,0,0x0,8
tick,0x7ffdf681f424,28633733,0,0x0,8
tick,0x7ffdf681f424,28635734,0,0x0,8
tick,0x7ffdf681f424,28637730,0,0x0,8
tick,0x7ffdf681f424,28639723,0,0x0,8
tick,0x7ffdf681f424,28641732,0,0x0,8
tick,0x7ffdf681f424,28643704,0,0x0,8
tick,0x7ffdf681f424,28645602,0,0x0,8
tick,0x7ffdf681f424,28647635,0,0x0,8
tick,0x7ffdf681f424,28649574,0,0x0,8
tick,0x7ffdf681f424,28651532,0,0x0,8
tick,0x7ffdf681f424,28653658,0,0x0,8
tick,0x7ffdf681f424,28655584,0,0x0,8
tick,0x7ffdf681f424,28657642,0,0x0,8
tick,0x7ffdf681f424,28659587,0,0x0,8
tick,0x7ffdf681f424,28661506,0,0x0,8
tick,0x7ffdf681f424,28663552,0,0x0,8
tick,0x7ffdf681f424,28665653,0,0x0,8
tick,0x7ffdf681f424,28667594,0,0x0,8
tick,0x7ffdf681f424,28669539,0,0x0,8
tick,0x7ffdf681f424,28671584,0,0x0,8
tick,0x7ffdf681f424,28673626,0,0x0,8
tick,0x7ffdf681f424,28675696,0,0x0,8
tick,0x7ffdf681f424,28677643,0,0x0,8
tick,0x7ffdf681f424,28679611,0,0x0,8
tick,0x7ffdf681f424,28681605,0,0x0,8
tick,0x7ffdf681f424,28683606,0,0x0,8
tick,0x7ffdf681f424,28685606,0,0x0,8
tick,0x7ffdf681f424,28687598,0,0x0,8
tick,0x7ffdf681f424,28689590,0,0x0,8
tick,0x7ffdf681f424,28691592,0,0x0,8
tick,0x7ffdf681f424,28693592,0,0x0,8
tick,0x7ffdf681f424,28695576,0,0x0,8
tick,0x7ffdf681f424,28697581,0,0x0,8
tick,0x7ffdf681f424,28699560,0,0x0,8
tick,0x7ffdf681f424,28701566,0,0x0,8
tick,0x7ffdf681f424,28703554,0,0x0,8
tick,0x7ffdf681f424,28705577,0,0x0,8
tick,0x7ffdf681f424,28707555,0,0x0,8
tick,0x7ffdf681f424,28709531,0,0x0,8
tick,0x7ffdf681f424,28711526,0,0x0,8
tick,0x7ffdf681f424,28713526,0,0x0,8
tick,0x7ffdf681f424,28715525,0,0x0,8
tick,0x7ffdf681f424,28717412,0,0x0,8
tick,0x7ffdf681f424,28719526,0,0x0,8
tick,0x7ffdf681f424,28721511,0,0x0,8
tick,0x7ffdf681f424,28723496,0,0x0,8
tick,0x7ffdf681f424,28725505,0,0x0,8
tick,0x7ffdf681f424,28727491,0,0x0,8
tick,0x7ffdf681f424,28729497,0,0x0,8
tick,0x7ffdf681f424,28731470,0,0x0,8
tick,0x7ffdf681f424,28733472,0,0x0,8
tick,0x7ffdf681f424,28735467,0,0x0,8
tick,0x7ffdf681f424,28737462,0,0x0,8
tick,0x7ffdf681f424,28739456,0,0x0,8
tick,0x7ffdf681f424,28741464,0,0x0,8
tick,0x7ffdf681f424,28743440,0,0x0,8
tick,0x7ffdf681f424,28745440,0,0x0,8
tick,0x7ffdf681f424,28747327,0,0x0,8
tick,0x7ffdf681f424,28749431,0,0x0,8
tick,0x7ffdf681f424,28751434,0,0x0,8
tick,0x7ffdf681f424,28753474,0,0x0,8
tick,0x7ffdf681f424,28755445,0,0x0,8
tick,0x7ffdf681f424,28757409,0,0x0,8
tick,0x7ffdf681f424,28759411,0,0x0,8
tick,0x7ffdf681f424,28761420,0,0x0,8
tick,0x7ffdf681f424,28763406,0,0x0,8
tick,0x7ffdf681f424,28765387,0,0x0,8
tick,0x7ffdf681f424,28767376,0,0x0,8
tick,0x7ffdf681f424,28769376,0,0x0,8
tick,0x7ffdf681f424,28771370,0,0x0,8
tick,0x7ffdf681f424,28773391,0,0x0,8
tick,0x7ffdf681f424,28775363,0,0x0,8
tick,0x7ffdf681f424,28777441,0,0x0,8
tick,0x7ffdf681f424,28779236,0,0x0,8
tick,0x7ffdf681f424,28781180,0,0x0,8
tick,0x7ffdf681f424,28783249,0,0x0,8
tick,0x7ffdf681f424,28785231,0,0x0,8
tick,0x7ffdf681f424,28787365,0,0x0,8
tick,0x7ffdf681f424,28789349,0,0x0,8
tick,0x7ffdf681f424,28791316,0,0x0,8
tick,0x7ffdf681f424,28793275,0,0x0,8
tick,0x7ffdf681f424,28795227,0,0x0,8
tick,0x7ffdf681f424,28797203,0,0x0,8
tick,0x7ffdf681f424,28799260,0,0x0,8
tick,0x7ffdf681f424,28801208,0,0x0,8
tick,0x7ffdf681f424,28803288,0,0x0,8
tick,0x7ffdf681f424,28805282,0,0x0,8
tick,0x7ffdf681f424,28807258,0,0x0,8
tick,0x7ffdf681f424,28809191,0,0x0,8
tick,0x7ffdf681f424,28811269,0,0x0,8
tick,0x7ffdf681f424,28813275,0,0x0,8
tick,0x7ffdf681f424,28815260,0,0x0,8
tick,0x7ffdf681f424,28817084,0,0x0,8
tick,0x7ffdf681f424,28819136,0,0x0,8
tick,0x7ffdf681f424,28821271,0,0x0,8
tick,0x7ffdf681f424,28823132,0,0x0,8
tick,0x7ffdf681f424,28825228,0,0x0,8
tick,0x7ffdf681f424,28827235,0,0x0,8
tick,0x7ffdf681f424,28829249,0,0x0,8
tick,0x7ffdf681f424,28831207,0,0x0,8
tick,0x7ffdf681f424,28833206,0,0x0,8
tick,0x7ffdf681f424,28835194,0,0x0,8
tick,0x7ffdf681f424,28837197,0,0x0,8
tick,0x7ffdf681f424,28839202,0,0x0,8
tick,0x7ffdf681f424,28841179,0,0x0,8
tick,0x7ffdf681f424,28843179,0,0x0,8
tick,0x7ffdf681f424,28845170,0,0x0,8
tick,0x7ffdf681f424,28847165,0,0x0,8
tick,0x7ffdf681f424,28849163,0,0x0,8
tick,0x7ffdf681f424,28851146,0,0x0,8
tick,0x7ffdf681f424,28853152,0,0x0,8
tick,0x7ffdf681f424,28855155,0,0x0,8
tick,0x7ffdf681f424,28857136,0,0x0,8
tick,0x7ffdf681f424,28859034,0,0x0,8
tick,0x7ffdf681f424,28861145,0,0x0,8
tick,0x7ffdf681f424,28863117,0,0x0,8
tick,0x7ffdf681f424,28865122,0,0x0,8
tick,0x7ffdf681f424,28867114,0,0x0,8
tick,0x7ffdf681f424,28869123,0,0x0,8
tick,0x7ffdf681f424,28871104,0,0x0,8
tick,0x7ffdf681f424,28873112,0,0x0,8
tick,0x7ffdf681f424,28875095,0,0x0,8
tick,0x7ffdf681f424,28877084,0,0x0,8
tick,0x7ffdf681f424,28879067,0,0x0,8
tick,0x7ffdf681f424,28881078,0,0x0,8
tick,0x7ffdf681f424,28883089,0,0x0,8
tick,0x7ffdf681f424,28885067,0,0x0,8
tick,0x7ffdf681f424,28887058,0,0x0,8
tick,0x7ffdf681f424,28889057,0,0x0,8
tick,0x7ffdf681f424,28891046,0,0x0,8
tick,0x7ffdf681f424,28893040,0,0x0,8
tick,0x7ffdf681f424,28895053,0,0x0,8
tick,0x7ffdf681f424,28897035,0,0x0,8
tick,0x7ffdf681f424,28899034,0,0x0,8
tick,0x7ffdf681f424,28901027,0,0x0,8
tick,0x7ffdf681f424,28902917,0,0x0,8
tick,0x7ffdf681f424,28905006,0,0x0,8
tick,0x7ffdf681f424,28906912,0,0x0,8
tick,0x7ffdf681f424,28908950,0,0x0,8
tick,0x7ffdf681f424,28910835,0,0x0,8
tick,0x7ffdf681f424,28912952,0,0x0,8
tick,0x7ffdf681f424,28914943,0,0x0,8
tick,0x7ffdf681f424,28916989,0,0x0,8
tick,0x7ffdf681f424,28918989,0,0x0,8
tick,0x7ffdf681f424,28920877,0,0x0,8
tick,0x7ffdf681f424,28922933,0,0x0,8
tick,0x7ffdf681f424,28924964,0,0x0,8
tick,0x7ffdf681f424,28926865,0,0x0,8
tick,0x7ffdf681f424,28928944,0,0x0,8
tick,0x7ffdf681f424,28930946,0,0x0,8
tick,0x7ffdf681f424,28932941,0,0x0,8
tick,0x7ffdf681f424,28934836,0,0x0,8
tick,0x7ffdf681f424,28936929,0,0x0,8
tick,0x7ffdf681f424,28938897,0,0x0,8
tick,0x7ffdf681f424,28940914,0,0x0,8
tick,0x7ffdf681f424,28942866,0,0x0,8
tick,0x7ffdf681f424,28944907,0,0x0,8
tick,0x7ffdf681f424,28946904,0,0x0,8
tick,0x7ffdf681f424,28948919,0,0x0,8
tick,0x7ffdf681f424,28950772,0,0x0,8
tick,0x7ffdf681f424,28952907,0,0x0,8
tick,0x7ffdf681f424,28954889,0,0x0,8
tick,0x7ffdf681f424,28956901,0,0x0,8
tick,0x7ffdf681f424,28958879,0,0x0,8
tick,0x7ffdf681f424,28960874,0,0x0,8
tick,0x7ffdf681f424,28962853,0,0x0,8
tick,0x7ffdf681f424,28964851,0,0x0,8
tick,0x7ffdf681f424,28966848,0,0x0,8
tick,0x7ffdf681f424,28968843,0,0x0,8
tick,0x7ffdf681f424,28970870,0,0x0,8
tick,0x7ffdf681f424,28972907,0,0x0,8
tick,0x7ffdf681f424,28974882,0,0x0,8
tick,0x7ffdf681f424,28976821,0,0x0,8
tick,0x7ffdf681f424,28978816,0,0x0,8
tick,0x7ffdf681f424,28980807,0,0x0,8
tick,0x7ffdf681f424,28982828,0,0x0,8
tick,0x7ffdf681f424,28984802,0,0x0,8
tick,0x7ffdf681f424,28986790,0,0x0,8
tick,0x7ffdf681f424,28988790,0,0x0,8
tick,0x7ffdf681f424,28990817,0,0x0,8
tick,0x7ffdf681f424,28992787,0,0x0,8
tick,0x7ffdf681f424,28994773,0,0x0,8
tick,0x7ffdf681f424,28996791,0,0x0,8
tick,0x7ffdf681f424,28998770,0,0x0,8
tick,0x7ffdf681f424,29000679,0,0x0,8
tick,0x7ffdf681f424,29002749,0,0x0,8
tick,0x7ffdf681f424,29004770,0,0x0,8
tick,0x7ffdf681f424,29006738,0,0x0,8
tick,0x7ffdf681f424,29008751,0,0x0,8
tick,0x7ffdf681f424,29010728,0,0x0,8
tick,0x7ffdf681f424,29012726,0,0x0,8
tick,0x7ffdf681f424,29014755,0,0x0,8
tick,0x7ffdf681f424,29016775,0,0x0,8
tick,0x7ffdf681f424,29018732,0,0x0,8
tick,0x7ffdf681f424,29020711,0,0x0,8
tick,0x7ffdf681f424,29022699,0,0x0,8
tick,0x7ffdf681f424,29024700,0,0x0,8
tick,0x7ffdf681f424,29026708,0,0x0,8
tick,0x7ffdf681f424,29028690,0,0x0,8
tick,0x7ffdf681f424,29030673,0,0x0,8
tick,0x7ffdf681f424,29032700,0,0x0,8
tick,0x7ffdf681f424,29034680,0,0x0,8
tick,0x7ffdf681f424,29036628,0,0x0,8
tick,0x7ffdf681f424,29038551,0,0x0,8
tick,0x7ffdf681f424,29040494,0,0x0,8
tick,0x7ffdf681f424,29042483,0,0x0,8
tick,0x7ffdf681f424,29044511,0,0x0,8
tick,0x7ffdf681f424,29046598,0,0x0,8
tick,0x7ffdf681f424,29048631,0,0x0,8
tick,0x7ffdf681f424,29050637,0,0x0,8
tick,0x7ffdf681f424,29052619,0,0x0,8
tick,0x7ffdf681f424,29054485,0,0x0,8
tick,0x7ffdf681f424,29056577,0,0x0,8
tick,0x7ffdf681f424,29058515,0,0x0,8
tick,0x7ffdf681f424,29060494,0,0x0,8
tick,0x7ffdf681f424,29062569,0,0x0,8
tick,0x7ffdf681f424,29064582,0,0x0,8
tick,0x7ffdf681f424,29066583,0,0x0,8
tick,0x7ffdf681f424,29068470,0,0x0,8
tick,0x7ffdf681f424,29070589,0,0x0,8
tick,0x7ffdf681f424,29072565,0,0x0,8
tick,0x7ffdf681f424,29074565,0,0x0,8
tick,0x7ffdf681f424,29076550,0,0x0,8
tick,0x7ffdf681f424,29078556,0,0x0,8
tick,0x7ffdf681f424,29080589,0,0x0,8
tick,0x7ffdf681f424,29082536,0,0x0,8
tick,0x7ffdf681f424,29084422,0,0x0,8
tick,0x7ffdf681f424,29086552,0,0x0,8
tick,0x7ffdf681f424,29088531,0,0x0,8
tick,0x7ffdf681f424,29090517,0,0x0,8
tick,0x7ffdf681f424,29092413,0,0x0,8
tick,0x7ffdf681f424,29094511,0,0x0,8
tick,0x7ffdf681f424,29096501,0,0x0,8
tick,0x7ffdf681f424,29098509,0,0x0,8
tick,0x7ffdf681f424,29100493,0,0x0,8
tick,0x7ffdf681f424,29102501,0,0x0,8
tick,0x7ffdf681f424,29104474,0,0x0,8
tick,0x7ffdf681f424,29106469,0,0x0,8
tick,0x7ffdf681f424,29108470,0,0x0,8
tick,0x7ffdf681f424,29110466,0,0x0,8
tick,0x7ffdf681f424,29112459,0,0x0,8
tick,0x7ffdf681f424,29114497,0,0x0,8
tick,0x7ffdf681f424,29116449,0,0x0,8
tick,0x7ffdf681f424,29118443,0,0x0,8
tick,0x7ffdf681f424,29120438,0,0x0,8
tick,0x7ffdf681f424,29122435,0,0x0,8
tick,0x7ffdf681f424,29124473,0,0x0,8
tick,0x7ffdf681f424,29126415,0,0x0,8
tick,0x7ffdf681f424,29128410,0,0x0,8
tick,0x7ffdf681f424,29130413,0,0x0,8
tick,0x7ffdf681f424,29132402,0,0x0,8
tick,0x7ffdf681f424,29134303,0,0x0,8
tick,0x7ffdf681f424,29136395,0,0x0,8
tick,0x7ffdf681f424,29138384,0,0x0,8
tick,0x7ffdf681f424,29140378,0,0x0,8
tick,0x7ffdf681f424,29142357,0,0x0,8
tick,0x7ffdf681f424,29144374,0,0x0,8
tick,0x7ffdf681f424,29146382,0,0x0,8
tick,0x7ffdf681f424,29148362,0,0x0,8
tick,0x7ffdf681f424,29150258,0,0x0,8
tick,0x7ffdf681f424,29152354,0,0x0,8
tick,0x7ffdf681f424,29154341,0,0x0,8
tick,0x7ffdf681f424,29156350,0,0x0,8
tick,0x7ffdf681f424,29158337,0,0x0,8
tick,0x7ffdf681f424,29160325,0,0x0,8
tick,0x7ffdf681f424,29162319,0,0x0,8
tick,0x7ffdf681f424,29164323,0,0x0,8
tick,0x7ffdf681f424,29166322,0,0x0,8
tick,0x7ffdf681f424,29168386,0,0x0,8
tick,0x7ffdf681f424,29170215,0,0x0,8
tick,0x7ffdf681f424,29172171,0,0x0,8
tick,0x7ffdf681f424,29174252,0,0x0,8
tick,0x7ffdf681f424,29176234,0,0x0,8
tick,0x7ffdf681f424,29178311,0,0x0,8
tick,0x7ffdf681f424,29180282,0,0x0,8
tick,0x7ffdf681f424,29182267,0,0x0,8
tick,0x7ffdf681f424,29184164,0,0x0,8
tick,0x7ffdf681f424,29186195,0,0x0,8
tick,0x7ffdf681f424,29188174,0,0x0,8
tick,0x7ffdf681f424,29190213,0,0x0,8
tick,0x7ffdf681f424,29192274,0,0x0,8
tick,0x7ffdf681f424,29194168,0,0x0,8
tick,0x7ffdf681f424,29196234,0,0x0,8
tick,0x7ffdf681f424,29198291,0,0x0,8
tick,0x7ffdf681f424,29200224,0,0x0,8
tick,0x7ffdf681f424,29202217,0,0x0,8
tick,0x7ffdf681f424,29204213,0,0x0,8
tick,0x7ffdf681f424,29206210,0,0x0,8
tick,0x7ffdf681f424,29208197,0,0x0,8
tick,0x7ffdf681f424,29210192,0,0x0,8
tick,0x7ffdf681f424,29212206,0,0x0,8
tick,0x7ffdf681f424,29214185,0,0x0,8
tick,0x7ffdf681f424,29216206,0,0x0,8
tick,0x7ffdf681f424,29218180,0,0x0,8
tick,0x7ffdf681f424,29220173,0,0x0,8
tick,0x7ffdf681f424,29222160,0,0x0,8
tick,0x7ffdf681f424,29224160,0,0x0,8
tick,0x7ffdf681f424,29226149,0,0x0,8
tick,0x7ffdf681f424,29228151,0,0x0,8
tick,0x7ffdf681f424,29230146,0,0x0,8
tick,0x7ffdf681f424,29232139,0,0x0,8
tick,0x7ffdf681f424,29234060,0,0x0,8
tick,0x7ffdf681f424,29236122,0,0x0,8
tick,0x7ffdf681f424,29238149,0,0x0,8
tick,0x7ffdf681f424,29240137,0,0x0,8
tick,0x7ffdf681f424,29242106,0,0x0,8
tick,0x7ffdf681f424,29244106,0,0x0,8
tick,0x7ffdf681f424,29246101,0,0x0,8
tick,0x7ffdf681f424,29248091,0,0x0,8
tick,0x7ffdf681f424,29250087,0,0x0,8
tick,0x7ffdf681f424,29252083,0,0x0,8
tick,0x7ffdf681f424,29254075,0,0x0,8
tick,0x7ffdf681f424,29256088,0,0x0,8
tick,0x7ffdf681f424,29258097,0,0x0,8
tick,0x7ffdf681f424,29260090,0,0x0,8
tick,0x7ffdf681f424,29262060,0,0x0,8
tick,0x7ffdf681f424,29264053,0,0x0,8
tick,0x7ffdf681f424,29266046,0,0x0,8
tick,0x7ffdf681f424,29268054,0,0x0,8
tick,0x7ffdf681f424,29270034,0,0x0,8
tick,0x7ffdf681f424,29272026,0,0x0,8
tick,0x7ffdf681f424,29274027,0,0x0,8
tick,0x7ffdf681f424,29275920,0,0x0,8
tick,0x7ffdf681f424,29278066,0,0x0,8
tick,0x7ffdf681f424,29280004,0,0x0,8
tick,0x7ffdf681f424,29282038,0,0x0,8
tick,0x7ffdf681f424,29284002,0,0x0,8
tick,0x7ffdf681f424,29286008,0,0x0,8
tick,0x7ffdf681f424,29287997,0,0x0,8
tick,0x7ffdf681f424,29289999,0,0x0,8
tick,0x7ffdf681f424,29291980,0,0x0,8
tick,0x7ffdf681f424,29293971,0,0x0,8
tick,0x7ffdf681f424,29295969,0,0x0,8
tick,0x7ffdf681f424,29297852,0,0x0,8
tick,0x7ffdf681f424,29299914,0,0x0,8
tick,0x7ffdf681f424,29301798,0,0x0,8
tick,0x7ffdf681f424,29303839,0,0x0,8
tick,0x7ffdf681f424,29305938,0,0x0,8
tick,0x7ffdf681f424,29307998,0,0x0,8
tick,0x7ffdf681f424,29309866,0,0x0,8
tick,0x7ffdf681f424,29311818,0,0x0,8
tick,0x7ffdf681f424,29313810,0,0x0,8
tick,0x7ffdf681f424,29315895,0,0x0,8
tick,0x7ffdf681f424,29317799,0,0x0,8
tick,0x7ffdf681f424,29319934,0,0x0,8
tick,0x7ffdf681f424,29321909,0,0x0,8
tick,0x7ffdf681f424,29323886,0,0x0,8
tick,0x7ffdf681f424,29325882,0,0x0,8
tick,0x7ffdf681f424,29327912,0,0x0,8
tick,0x7ffdf681f424,29329875,0,0x0,8
tick,0x7ffdf681f424,29331874,0,0x0,8
tick,0x7ffdf681f424,29333869,0,0x0,8
tick,0x7ffdf681f424,29335861,0,0x0,8
tick,0x7ffdf681f424,29337856,0,0x0,8
tick,0x7ffdf681f424,29339847,0,0x0,8
tick,0x7ffdf681f424,29341840,0,0x0,8
tick,0x7ffdf681f424,29343854,0,0x0,8
tick,0x7ffdf681f424,29345833,0,0x0,8
tick,0x7ffdf681f424,29347861,0,0x0,8
tick,0x7ffdf681f424,29349819,0,0x0,8
tick,0x7ffdf681f424,29351813,0,0x0,8
tick,0x7ffdf681f424,29353815,0,0x0,8
tick,0x7ffdf681f424,29355809,0,0x0,8
tick,0x7ffdf681f424,29357806,0,0x0,8
tick,0x7ffdf681f424,29359849,0,0x0,8
tick,0x7ffdf681f424,29361691,0,0x0,8
tick,0x7ffdf681f424,29363787,0,0x0,8
tick,0x7ffdf681f424,29365796,0,0x0,8
tick,0x7ffdf681f424,29367739,0,0x0,8
tick,0x7ffdf681f424,29369797,0,0x0,8
tick,0x7ffdf681f424,29371761,0,0x0,8
tick,0x7ffdf681f424,29373767,0,0x0,8
tick,0x7ffdf681f424,29375737,0,0x0,8
tick,0x7ffdf681f424,29377759,0,0x0,8
tick,0x7ffdf681f424,29379746,0,0x0,8
tick,0x7ffdf681f424,29381737,0,0x0,8
tick,0x7ffdf681f424,29383728,0,0x0,8
tick,0x7ffdf681f424,29385618,0,0x0,8
tick,0x7ffdf681f424,29387726,0,0x0,8
tick,0x7ffdf681f424,29389734,0,0x0,8
tick,0x7ffdf681f424,29391739,0,0x0,8
tick,0x7ffdf681f424,29393712,0,0x0,8
tick,0x7ffdf681f424,29395710,0,0x0,8
tick,0x7ffdf681f424,29397702,0,0x0,8
tick,0x7ffdf681f424,29399701,0,0x0,8
tick,0x7ffdf681f424,29401680,0,0x0,8
tick,0x7ffdf681f424,29403681,0,0x0,8
tick,0x7ffdf681f424,29405674,0,0x0,8
tick,0x7ffdf681f424,29407669,0,0x0,8
tick,0x7ffdf681f424,29409683,0,0x0,8
tick,0x7ffdf681f424,29411663,0,0x0,8
tick,0x7ffdf681f424,29413676,0,0x0,8
tick,0x7ffdf681f424,29415582,0,0x0,8
tick,0x7ffdf681f424,29417662,0,0x0,8
tick,0x7ffdf681f424,29419637,0,0x0,8
tick,0x7ffdf681f424,29421635,0,0x0,8
tick,0x7ffdf681f424,29423631,0,0x0,8
tick,0x7ffdf681f424,29425620,0,0x0,8
tick,0x7ffdf681f424,29427513,0,0x0,8
tick,0x7ffdf681f424,29429572,0,0x0,8
tick,0x7ffdf681f424,29431483,0,0x0,8
tick,0x7ffdf681f424,29433515,0,0x0,8
tick,0x7ffdf681f424,29435474,0,0x0,8
tick,0x7ffdf681f424,29437562,0,0x0,8
tick,0x7ffdf681f424,29439546,0,0x0,8
tick,0x7ffdf681f424,29441619,0,0x0,8
tick,0x7ffdf681f424,29443478,0,0x0,8
tick,0x7ffdf681f424,29445469,0,0x0,8
tick,0x7ffdf681f424,29447569,0,0x0,8
tick,0x7ffdf681f424,29449563,0,0x0,8
tick,0x7ffdf681f424,29451451,0,0x0,8
tick,0x7ffdf681f424,29453593,0,0x0,8
tick,0x7ffdf681f424,29455563,0,0x0,8
tick,0x7ffdf681f424,29457545,0,0x0,8
tick,0x7ffdf681f424,29459454,0,0x0,8
tick,0x7ffdf681f424,29461527,0,0x0,8
tick,0x7ffdf681f424,29463527,0,0x0,8
tick,0x7ffdf681f424,29465522,0,0x0,8
tick,0x7ffdf681f424,29467500,0,0x0,8
tick,0x7ffdf681f424,29469516,0,0x0,8
tick,0x7ffdf681f424,29471506,0,0x0,8
tick,0x7ffdf681f424,29473496,0,0x0,8
tick,0x7ffdf681f424,29475513,0,0x0,8
tick,0x7ffdf681f424,29477488,0,0x0,8
tick,0x7ffdf681f424,29479476,0,0x0,8
tick,0x7ffdf681f424,29481482,0,0x0,8
tick,0x7ffdf681f424,29483482,0,0x0,8
tick,0x7ffdf681f424,29485469,0,0x0,8
tick,0x7ffdf681f424,29487468,0,0x0,8
tick,0x7ffdf681f424,29489464,0,0x0,8
tick,0x7ffdf681f424,29491447,0,0x0,8
tick,0x7ffdf681f424,29493447,0,0x0,8
tick,0x7ffdf681f424,29495436,0,0x0,8
tick,0x7ffdf681f424,29497451,0,0x0,8
tick,0x7ffdf681f424,29499513,0,0x0,8
tick,0x7ffdf681f424,29501452,0,0x0,8
tick,0x7ffdf681f424,29503420,0,0x0,8
tick,0x7ffdf681f424,29505421,0,0x0,8
tick,0x7ffdf681f424,29507415,0,0x0,8
tick,0x7ffdf681f424,29509301,0,0x0,8
tick,0x7ffdf681f424,29511391,0,0x0,8
tick,0x7ffdf681f424,29513400,0,0x0,8
tick,0x7ffdf681f424,29515393,0,0x0,8
tick,0x7ffdf681f424,29517389,0,0x0,8
tick,0x7ffdf681f424,29519388,0,0x0,8
tick,0x7ffdf681f424,29521364,0,0x0,8
tick,0x7ffdf681f424,29523383,0,0x0,8
tick,0x7ffdf681f424,29525380,0,0x0,8
tick,0x7ffdf681f424,29527350,0,0x0,8
tick,0x7ffdf681f424,29529352,0,0x0,8
tick,0x7ffdf681f424,29531341,0,0x0,8
tick,0x7ffdf681f424,29533328,0,0x0,8
tick,0x7ffdf681f424,29535374,0,0x0,8
tick,0x7ffdf681f424,29537353,0,0x0,8
tick,0x7ffdf681f424,29539327,0,0x0,8
tick,0x7ffdf681f424,29541326,0,0x0,8
tick,0x7ffdf681f424,29543374,0,0x0,8
tick,0x7ffdf681f424,29545330,0,0x0,8
tick,0x7ffdf681f424,29547300,0,0x0,8
tick,0x7ffdf681f424,29549293,0,0x0,8
tick,0x7ffdf681f424,29551286,0,0x0,8
tick,0x7ffdf681f424,29553287,0,0x0,8
tick,0x7ffdf681f424,29555269,0,0x0,8
tick,0x7ffdf681f424,29557278,0,0x0,8
tick,0x7ffdf681f424,29559275,0,0x0,8
tick,0x7ffdf681f424,29561253,0,0x0,8
tick,0x7ffdf681f424,29563092,0,0x0,8
tick,0x7ffdf681f424,29565171,0,0x0,8
tick,0x7ffdf681f424,29567172,0,0x0,8
tick,0x7ffdf681f424,29569142,0,0x0,8
tick,0x7ffdf681f424,29571210,0,0x0,8
tick,0x7ffdf681f424,29573222,0,0x0,8
tick,0x7ffdf681f424,29575241,0,0x0,8
tick,0x7ffdf681f424,29577198,0,0x0,8
tick,0x7ffdf681f424,29579179,0,0x0,8
tick,0x7ffdf681f424,29581164,0,0x0,8
tick,0x7ffdf681f424,29583093,0,0x0,8
tick,0x7ffdf681f424,29585145,0,0x0,8
tick,0x7ffdf681f424,29587200,0,0x0,8
tick,0x7ffdf681f424,29589181,0,0x0,8
tick,0x7ffdf681f424,29591173,0,0x0,8
tick,0x7ffdf681f424,29593158,0,0x0,8
tick,0x7ffdf681f424,29595173,0,0x0,8
tick,0x7ffdf681f424,29597179,0,0x0,8
tick,0x7ffdf681f424,29599163,0,0x0,8
tick,0x7ffdf681f424,29601048,0,0x0,8
tick,0x7ffdf681f424,29603143,0,0x0,8
tick,0x7ffdf681f424,29605160,0,0x0,8
tick,0x7ffdf681f424,29607150,0,0x0,8
tick,0x7ffdf681f424,29609130,0,0x0,8
tick,0x7ffdf681f424,29611105,0,0x0,8
tick,0x7ffdf681f424,29613011,0,0x0,8
tick,0x7ffdf681f424,29615122,0,0x0,8
tick,0x7ffdf681f424,29617108,0,0x0,8
tick,0x7ffdf681f424,29619119,0,0x0,8
tick,0x7ffdf681f424,29621106,0,0x0,8
tick,0x7ffdf681f424,29623104,0,0x0,8
tick,0x7ffdf681f424,29625088,0,0x0,8
tick,0x7ffdf681f424,29627077,0,0x0,8
tick,0x7ffdf681f424,29629092,0,0x0,8
tick,0x7ffdf681f424,29631134,0,0x0,8
tick,0x7ffdf681f424,29633100,0,0x0,8
tick,0x7ffdf681f424,29635063,0,0x0,8
tick,0x7ffdf681f424,29637056,0,0x0,8
tick,0x7ffdf681f424,29639050,0,0x0,8
tick,0x7ffdf681f424,29641050,0,0x0,8
tick,0x7ffdf681f424,29643052,0,0x0,8
tick,0x7ffdf681f424,29645031,0,0x0,8
tick,0x7ffdf681f424,29647030,0,0x0,8
tick,0x7ffdf681f424,29649028,0,0x0,8
tick,0x7ffdf681f424,29650936,0,0x0,8
tick,0x7ffdf681f424,29653007,0,0x0,8
tick,0x7ffdf681f424,29655007,0,0x0,8
tick,0x7ffdf681f424,29657003,0,0x0,8
tick,0x7ffdf681f424,29659002,0,0x0,8
tick,0x7ffdf681f424,29660995,0,0x0,8
tick,0x7ffdf681f424,29662995,0,0x0,8
tick,0x7ffdf681f424,29664975,0,0x0,8
tick,0x7ffdf681f424,29666978,0,0x0,8
tick,0x7ffdf681f424,29668869,0,0x0,8
tick,0x7ffdf681f424,29670965,0,0x0,8
tick,0x7ffdf681f424,29672975,0,0x0,8
tick,0x7ffdf681f424,29674953,0,0x0,8
tick,0x7ffdf681f424,29676946,0,0x0,8
tick,0x7ffdf681f424,29678944,0,0x0,8
tick,0x7ffdf681f424,29680936,0,0x0,8
tick,0x7ffdf681f424,29682933,0,0x0,8
tick,0x7ffdf681f424,29684916,0,0x0,8
tick,0x7ffdf681f424,29686939,0,0x0,8
tick,0x7ffdf681f424,29688812,0,0x0,8
tick,0x7ffdf681f424,29690868,0,0x0,8
tick,0x7ffdf681f424,29692749,0,0x0,8
tick,0x7ffdf681f424,29694799,0,0x0,8
tick,0x7ffdf681f424,29696890,0,0x0,8
tick,0x7ffdf681f424,29698960,0,0x0,8
tick,0x7ffdf681f424,29700798,0,0x0,8
tick,0x7ffdf681f424,29702910,0,0x0,8
tick,0x7ffdf681f424,29704807,0,0x0,8
tick,0x7ffdf681f424,29706833,0,0x0,8
tick,0x7ffdf681f424,29708861,0,0x0,8
tick,0x7ffdf681f424,29710755,0,0x0,8
tick,0x7ffdf681f424,29712851,0,0x0,8
tick,0x7ffdf681f424,29714852,0,0x0,8
tick,0x7ffdf681f424,29716855,0,0x0,8
tick,0x7ffdf681f424,29718728,0,0x0,8
tick,0x7ffdf681f424,29720827,0,0x0,8
tick,0x7ffdf681f424,29722821,0,0x0,8
tick,0x7ffdf681f424,29724822,0,0x0,8
tick,0x7ffdf681f424,29726714,0,0x0,8
tick,0x7ffdf681f424,29728812,0,0x0,8
tick,0x7ffdf681f424,29730802,0,0x0,8
tick,0x7ffdf681f424,29732800,0,0x0,8
tick,0x7ffdf681f424,29734790,0,0x0,8
tick,0x7ffdf681f424,29736795,0,0x0,8
tick,0x7ffdf681f424,29738804,0,0x0,8
tick,0x7ffdf681f424,29740787,0,0x0,8
tick,0x7ffdf681f424,29742671,0,0x0,8
tick,0x7ffdf681f424,29744771,0,0x0,8
tick,0x7ffdf681f424,29746763,0,0x0,8
tick,0x7ffdf681f424,29748760,0,0x0,8
tick,0x7ffdf681f424,29750752,0,0x0,8
tick,0x7ffdf681f424,29752742,0,0x0,8
tick,0x7ffdf681f424,29754742,0,0x0,8
tick,0x7ffdf681f424,29756736,0,0x0,8
tick,0x7ffdf681f424,29758731,0,0x0,8
tick,0x7ffdf681f424,29760749,0,0x0,8
tick,0x7ffdf681f424,29762720,0,0x0,8
tick,0x7ffdf681f424,29764723,0,0x0,8
tick,0x7ffdf681f424,29766710,0,0x0,8
tick,0x7ffdf681f424,29768721,0,0x0,8
tick,0x7ffdf681f424,29770700,0,0x0,8
tick,0x7ffdf681f424,29772703,0,0x0,8
tick,0x7ffdf681f424,29774683,0,0x0,8
tick,0x7ffdf681f424,29776677,0,0x0,8
tick,0x7ffdf681f424,29778678,0,0x0,8
tick,0x7ffdf681f424,29780675,0,0x0,8
tick,0x7ffdf681f424,29782680,0,0x0,8
tick,0x7ffdf681f424,29784659,0,0x0,8
tick,0x7ffdf681f424,29786672,0,0x0,8
tick,0x7ffdf681f424,29788663,0,0x0,8
tick,0x7ffdf681f424,29790538,0,0x0,8
tick,0x7ffdf681f424,29792533,0,0x0,8
tick,0x7ffdf681f424,29794636,0,0x0,8
tick,0x7ffdf681f424,29796630,0,0x0,8
tick,0x7ffdf681f424,29798625,0,0x0,8
tick,0x7ffdf681f424,29800627,0,0x0,8
tick,0x7ffdf681f424,29802615,0,0x0,8
tick,0x7ffdf681f424,29804628,0,0x0,8
tick,0x7ffdf681f424,29806653,0,0x0,8
tick,0x7ffdf681f424,29808622,0,0x0,8
tick,0x7ffdf681f424,29810599,0,0x0,8
tick,0x7ffdf681f424,29812585,0,0x0,8
tick,0x7ffdf681f424,29814581,0,0x0,8
tick,0x7ffdf681f424,29816590,0,0x0,8
tick,0x7ffdf681f424,29818467,0,0x0,8
tick,0x7ffdf681f424,29820515,0,0x0,8
tick,0x7ffdf681f424,29822436,0,0x0,8
tick,0x7ffdf681f424,29824584,0,0x0,8
tick,0x7ffdf681f424,29826489,0,0x0,8
tick,0x7ffdf681f424,29828642,0,0x0,8
tick,0x7ffdf681f424,29830569,0,0x0,8
tick,0x7ffdf681f424,29832539,0,0x0,8
tick,0x7ffdf681f424,29834486,0,0x0,8
tick,0x7ffdf681f424,29836462,0,0x0,8
tick,0x7ffdf681f424,29838419,0,0x0,8
tick,0x7ffdf681f424,29840474,0,0x0,8
tick,0x7ffdf681f424,29842414,0,0x0,8
tick,0x7ffdf681f424,29844417,0,0x0,8
tick,0x7ffdf681f424,29846503,0,0x0,8
tick,0x7ffdf681f424,29848494,0,0x0,8
tick,0x7ffdf681f424,29850494,0,0x0,8
tick,0x7ffdf681f424,29852483,0,0x0,8
tick,0x7ffdf681f424,29854482,0,0x0,8
tick,0x7ffdf681f424,29856477,0,0x0,8
tick,0x7ffdf681f424,29858472,0,0x0,8
tick,0x7ffdf681f424,29860466,0,0x0,8
tick,0x7ffdf681f424,29862466,0,0x0,8
tick,0x7ffdf681f424,29864458,0,0x0,8
tick,0x7ffdf681f424,29866451,0,0x0,8
tick,0x7ffdf681f424,29868445,0,0x0,8
tick,0x7ffdf681f424,29870450,0,0x0,8
tick,0x7ffdf681f424,29872440,0,0x0,8
tick,0x7ffdf681f424,29874451,0,0x0,8
tick,0x7ffdf681f424,29876423,0,0x0,8
tick,0x7ffdf681f424,29878417,0,0x0,8
tick,0x7ffdf681f424,29880407,0,0x0,8
tick,0x7ffdf681f424,29882415,0,0x0,8
tick,0x7ffdf681f424,29884290,0,0x0,8
tick,0x7ffdf681f424,29886475,0,0x0,8
tick,0x7ffdf681f424,29888386,0,0x0,8
tick,0x7ffdf681f424,29890420,0,0x0,8
tick,0x7ffdf681f424,29892401,0,0x0,8
tick,0x7ffdf681f424,29894371,0,0x0,8
tick,0x7ffdf681f424,29896367,0,0x0,8
tick,0x7ffdf681f424,29898366,0,0x0,8
tick,0x7ffdf681f424,29900359,0,0x0,8
tick,0x7ffdf681f424,29902357,0,0x0,8
tick,0x7ffdf681f424,29904242,0,0x0,8
tick,0x7ffdf681f424,29906337,0,0x0,8
tick,0x7ffdf681f424,29908338,0,0x0,8
tick,0x7ffdf681f424,29910326,0,0x0,8
tick,0x7ffdf681f424,29912323,0,0x0,8
tick,0x7ffdf681f424,29914348,0,0x0,8
tick,0x7ffdf681f424,29916373,0,0x0,8
tick,0x7ffdf681f424,29918335,0,0x0,8
tick,0x7ffdf681f424,29920307,0,0x0,8
tick,0x7ffdf681f424,29922289,0,0x0,8
tick,0x7ffdf681f424,29924289,0,0x0,8
tick,0x7ffdf681f424,29926261,0,0x0,8
tick,0x7ffdf681f424,29928271,0,0x0,8
tick,0x7ffdf681f424,29930274,0,0x0,8
tick,0x7ffdf681f424,29932302,0,0x0,8
tick,0x7ffdf681f424,29934261,0,0x0,8
tick,0x7ffdf681f424,29936271,0,0x0,8
tick,0x7ffdf681f424,29938248,0,0x0,8
tick,0x7ffdf681f424,29940268,0,0x0,8
tick,0x7ffdf681f424,29942234,0,0x0,8
tick,0x7ffdf681f424,29944229,0,0x0,8
tick,0x7ffdf681f424,29946229,0,0x0,8
tick,0x7ffdf681f424,29948230,0,0x0,8
tick,0x7ffdf681f424,29950280,0,0x0,8
tick,0x7ffdf681f424,29952133,0,0x0,8
tick,0x7ffdf681f424,29954100,0,0x0,8
tick,0x7ffdf681f424,29956159,0,0x0,8
tick,0x7ffdf681f424,29958141,0,0x0,8
tick,0x7ffdf681f424,29960202,0,0x0,8
tick,0x7ffdf681f424,29962029,0,0x0,8
tick,0x7ffdf681f424,29964085,0,0x0,8
tick,0x7ffdf681f424,29966075,0,0x0,8
tick,0x7ffdf681f424,29968139,0,0x0,8
tick,0x7ffdf681f424,29970059,0,0x0,8
tick,0x7ffdf681f424,29972157,0,0x0,8
tick,0x7ffdf681f424,29974149,0,0x0,8
tick,0x7ffdf681f424,29976059,0,0x0,8
tick,0x7ffdf681f424,29978039,0,0x0,8
tick,0x7ffdf681f424,29980153,0,0x0,8
tick,0x7ffdf681f424,29982126,0,0x0,8
tick,0x7ffdf681f424,29984131,0,0x0,8
tick,0x7ffdf681f424,29986120,0,0x0,8
tick,0x7ffdf681f424,29988159,0,0x0,8
tick,0x7ffdf681f424,29990108,0,0x0,8
tick,0x7ffdf681f424,29992111,0,0x0,8
tick,0x7ffdf681f424,29994098,0,0x0,8
tick,0x7ffdf681f424,29996101,0,0x0,8
tick,0x7ffdf681f424,29998085,0,0x0,8
tick,0x7ffdf681f424,30000086,0,0x0,8
tick,0x7ffdf681f424,30002077,0,0x0,8
tick,0x7ffdf681f424,30004069,0,0x0,8
tick,0x7ffdf681f424,30006064,0,0x0,8
tick,0x7ffdf681f424,30008065,0,0x0,8
tick,0x7ffdf681f424,30010065,0,0x0,8
tick,0x7ffdf681f424,30012054,0,0x0,8
tick,0x7ffdf681f424,30014088,0,0x0,8
tick,0x7ffdf681f424,30016047,0,0x0,8
tick,0x7ffdf681f424,30018039,0,0x0,8
tick,0x7ffdf681f424,30020032,0,0x0,8
tick,0x7ffdf681f424,30022026,0,0x0,8
tick,0x7ffdf681f424,30024029,0,0x0,8
tick,0x7ffdf681f424,30025900,0,0x0,8
tick,0x7ffdf681f424,30028007,0,0x0,8
tick,0x7ffdf681f424,30030000,0,0x0,8
tick,0x7ffdf681f424,30031997,0,0x0,8
tick,0x7ffdf681f424,30033999,0,0x0,8
tick,0x7ffdf681f424,30035992,0,0x0,8
tick,0x7ffdf681f424,30037984,0,0x0,8
tick,0x7ffdf681f424,30039973,0,0x0,8
tick,0x7ffdf681f424,30041976,0,0x0,8
tick,0x7ffdf681f424,30043968,0,0x0,8
tick,0x7ffdf681f424,30045982,0,0x0,8
tick,0x7ffdf681f424,30047954,0,0x0,8
tick,0x7ffdf681f424,30049954,0,0x0,8
tick,0x7ffdf681f424,30051949,0,0x0,8
tick,0x7ffdf681f424,30053942,0,0x0,8
tick,0x7ffdf681f424,30055933,0,0x0,8
tick,0x7ffdf681f424,30057939,0,0x0,8
tick,0x7ffdf681f424,30059935,0,0x0,8
tick,0x7ffdf681f424,30061915,0,0x0,8
tick,0x7ffdf681f424,30063920,0,0x0,8
tick,0x7ffdf681f424,30065909,0,0x0,8
tick,0x7ffdf681f424,30067920,0,0x0,8
tick,0x7ffdf681f424,30069906,0,0x0,8
tick,0x7ffdf681f424,30071786,0,0x0,8
tick,0x7ffdf681f424,30073889,0,0x0,8
tick,0x7ffdf681f424,30075883,0,0x0,8
tick,0x7ffdf681f424,30077878,0,0x0,8
tick,0x7ffdf681f424,30079761,0,0x0,8
tick,0x7ffdf681f424,30081825,0,0x0,8
tick,0x7ffdf681f424,30083702,0,0x0,8
tick,0x7ffdf681f424,30085764,0,0x0,8
tick,0x7ffdf681f424,30087819,0,0x0,8
tick,0x7ffdf681f424,30089879,0,0x0,8
tick,0x7ffdf681f424,30091873,0,0x0,8
tick,0x7ffdf681f424,30093792,0,0x0,8
tick,0x7ffdf681f424,30095726,0,0x0,8
tick,0x7ffdf681f424,30097730,0,0x0,8
tick,0x7ffdf681f424,30099783,0,0x0,8
tick,0x7ffdf681f424,30101722,0,0x0,8
tick,0x7ffdf681f424,30103809,0,0x0,8
tick,0x7ffdf681f424,30105798,0,0x0,8
tick,0x7ffdf681f424,30107798,0,0x0,8
tick,0x7ffdf681f424,30109685,0,0x0,8
tick,0x7ffdf681f424,30111802,0,0x0,8
tick,0x7ffdf681f424,30113777,0,0x0,8
tick,0x7ffdf681f424,30115770,0,0x0,8
tick,0x7ffdf681f424,30117731,0,0x0,8
tick,0x7ffdf681f424,30119770,0,0x0,8
tick,0x7ffdf681f424,30121772,0,0x0,8
tick,0x7ffdf681f424,30123756,0,0x0,8
tick,0x7ffdf681f424,30125749,0,0x0,8
tick,0x7ffdf681f424,30127738,0,0x0,8
tick,0x7ffdf681f424,30129739,0,0x0,8
tick,0x7ffdf681f424,30131735,0,0x0,8
tick,0x7ffdf681f424,30133742,0,0x0,8
tick,0x7ffdf681f424,30135715,0,0x0,8
tick,0x7ffdf681f424,30137715,0,0x0,8
tick,0x7ffdf681f424,30139713,0,0x0,8
tick,0x7ffdf681f424,30141705,0,0x0,8
tick,0x7ffdf681f424,30143711,0,0x0,8
tick,0x7ffdf681f424,30145708,0,0x0,8
tick,0x7ffdf681f424,30147699,0,0x0,8
tick,0x7ffdf681f424,30149686,0,0x0,8
tick,0x7ffdf681f424,30151675,0,0x0,8
tick,0x7ffdf681f424,30153677,0,0x0,8
tick,0x7ffdf681f424,30155686,0,0x0,8
tick,0x7ffdf681f424,30157660,0,0x0,8
tick,0x7ffdf681f424,30159566,0,0x0,8
tick,0x7ffdf681f424,30161648,0,0x0,8
tick,0x7ffdf681f424,30163655,0,0x0,8
tick,0x7ffdf681f424,30165642,0,0x0,8
tick,0x7ffdf681f424,30167532,0,0x0,8
tick,0x7ffdf681f424,30169648,0,0x0,8
tick,0x7ffdf681f424,30171627,0,0x0,8
tick,0x7ffdf681f424,30173621,0,0x0,8
tick,0x7ffdf681f424,30175615,0,0x0,8
tick,0x7ffdf681f424,30177643,0,0x0,8
tick,0x7ffdf681f424,30179606,0,0x0,8
tick,0x7ffdf681f424,30181628,0,0x0,8
tick,0x7ffdf681f424,30183589,0,0x0,8
tick,0x7ffdf681f424,30185591,0,0x0,8
tick,0x7ffdf681f424,30187581,0,0x0,8
tick,0x7ffdf681f424,30189577,0,0x0,8
tick,0x7ffdf681f424,30191578,0,0x0,8
tick,0x7ffdf681f424,30193574,0,0x0,8
tick,0x7ffdf681f424,30195576,0,0x0,8
tick,0x7ffdf681f424,30197580,0,0x0,8
tick,0x7ffdf681f424,30199571,0,0x0,8
tick,0x7ffdf681f424,30201546,0,0x0,8
tick,0x7ffdf681f424,30203536,0,0x0,8
tick,0x7ffdf681f424,30205537,0,0x0,8
tick,0x7ffdf681f424,30207531,0,0x0,8
tick,0x7ffdf681f424,30209420,0,0x0,8
tick,0x7ffdf681f424,30211481,0,0x0,8
tick,0x7ffdf681f424,30213358,0,0x0,8
tick,0x7ffdf681f424,30215402,0,0x0,8
tick,0x7ffdf681f424,30217473,0,0x0,8
tick,0x7ffdf681f424,30219447,0,0x0,8
tick,0x7ffdf681f424,30221498,0,0x0,8
tick,0x7ffdf681f424,30223481,0,0x0,8
tick,0x7ffdf681f424,30225480,0,0x0,8
tick,0x7ffdf681f424,30227447,0,0x0,8
tick,0x7ffdf681f424,30229311,0,0x0,8
tick,0x7ffdf681f424,30231426,0,0x0,8
tick,0x7ffdf681f424,30233461,0,0x0,8
tick,0x7ffdf681f424,30235368,0,0x0,8
tick,0x7ffdf681f424,30237450,0,0x0,8
tick,0x7ffdf681f424,30239445,0,0x0,8
tick,0x7ffdf681f424,30241442,0,0x0,8
tick,0x7ffdf681f424,30243403,0,0x0,8
tick,0x7ffdf681f424,30245429,0,0x0,8
tick,0x7ffdf681f424,30247422,0,0x0,8
tick,0x7ffdf681f424,30249415,0,0x0,8
tick,0x7ffdf681f424,30251309,0,0x0,8
tick,0x7ffdf681f424,30253408,0,0x0,8
tick,0x7ffdf681f424,30255415,0,0x0,8
tick,0x7ffdf681f424,30257392,0,0x0,8
tick,0x7ffdf681f424,30259290,0,0x0,8
tick,0x7ffdf681f424,30261387,0,0x0,8
tick,0x7ffdf681f424,30263381,0,0x0,8
tick,0x7ffdf681f424,30265400,0,0x0,8
tick,0x7ffdf681f424,30267387,0,0x0,8
tick,0x7ffdf681f424,30269360,0,0x0,8
tick,0x7ffdf681f424,30271355,0,0x0,8
tick,0x7ffdf681f424,30273351,0,0x0,8
tick,0x7ffdf681f424,30275349,0,0x0,8
tick,0x7ffdf681f424,30277375,0,0x0,8
tick,0x7ffdf681f424,30279363,0,0x0,8
tick,0x7ffdf681f424,30281335,0,0x0,8
tick,0x7ffdf681f424,30283223,0,0x0,8
tick,0x7ffdf681f424,30285317,0,0x0,8
tick,0x7ffdf681f424,30287332,0,0x0,8
tick,0x7ffdf681f424,30289317,0,0x0,8
tick,0x7ffdf681f424,30291303,0,0x0,8
tick,0x7ffdf681f424,30293302,0,0x0,8
tick,0x7ffdf681f424,30295316,0,0x0,8
tick,0x7ffdf681f424,30297315,0,0x0,8
tick,0x7ffdf681f424,30299286,0,0x0,8
tick,0x7ffdf681f424,30301278,0,0x0,8
tick,0x7ffdf681f424,30303274,0,0x0,8
tick,0x7ffdf681f424,30305166,0,0x0,8
tick,0x7ffdf681f424,30307264,0,0x0,8
tick,0x7ffdf681f424,30309219,0,0x0,8
tick,0x7ffdf681f424,30311318,0,0x0,8
tick,0x7ffdf681f424,30313276,0,0x0,8
tick,0x7ffdf681f424,30315250,0,0x0,8
tick,0x7ffdf681f424,30317239,0,0x0,8
tick,0x7ffdf681f424,30319229,0,0x0,8
tick,0x7ffdf681f424,30321234,0,0x0,8
tick,0x7ffdf681f424,30323218,0,0x0,8
tick,0x7ffdf681f424,30325218,0,0x0,8
tick,0x7ffdf681f424,30327211,0,0x0,8
tick,0x7ffdf681f424,30329205,0,0x0,8
tick,0x7ffdf681f424,30331213,0,0x0,8
tick,0x7ffdf681f424,30333188,0,0x0,8
tick,0x7ffdf681f424,30335193,0,0x0,8
tick,0x7ffdf681f424,30337186,0,0x0,8
tick,0x7ffdf681f424,30339179,0,0x0,8
tick,0x7ffdf681f424,30341200,0,0x0,8
tick,0x7ffdf681f424,30343152,0,0x0,8
tick,0x7ffdf681f424,30345000,0,0x0,8
tick,0x7ffdf681f424,30347063,0,0x0,8
tick,0x7ffdf681f424,30349049,0,0x0,8
tick,0x7ffdf681f424,30351127,0,0x0,8
tick,0x7ffdf681f424,30353082,0,0x0,8
tick,0x7ffdf681f424,30355038,0,0x0,8
tick,0x7ffdf681f424,30357099,0,0x0,8
tick,0x7ffdf681f424,30359086,0,0x0,8
tick,0x7ffdf681f424,30361022,0,0x0,8
tick,0x7ffdf681f424,30363112,0,0x0,8
tick,0x7ffdf681f424,30365124,0,0x0,8
tick,0x7ffdf681f424,30367098,0,0x0,8
tick,0x7ffdf681f424,30369000,0,0x0,8
tick,0x7ffdf681f424,30371088,0,0x0,8
tick,0x7ffdf681f424,30373088,0,0x0,8
tick,0x7ffdf681f424,30375090,0,0x0,8
tick,0x7ffdf681f424,30376975,0,0x0,8
tick,0x7ffdf681f424,30379079,0,0x0,8
tick,0x7ffdf681f424,30381079,0,0x0,8
tick,0x7ffdf681f424,30383064,0,0x0,8
tick,0x7ffdf681f424,30384949,0,0x0,8
tick,0x7ffdf681f424,30387054,0,0x0,8
tick,0x7ffdf681f424,30389045,0,0x0,8
tick,0x7ffdf681f424,30391041,0,0x0,8
tick,0x7ffdf681f424,30393030,0,0x0,8
tick,0x7ffdf681f424,30395036,0,0x0,8
tick,0x7ffdf681f424,30397042,0,0x0,8
tick,0x7ffdf681f424,30399012,0,0x0,8
tick,0x7ffdf681f424,30400902,0,0x0,8
tick,0x7ffdf681f424,30403008,0,0x0,8
tick,0x7ffdf681f424,30405003,0,0x0,8
tick,0x7ffdf681f424,30407014,0,0x0,8
tick,0x7ffdf681f424,30409003,0,0x0,8
tick,0x7ffdf681f424,30410983,0,0x0,8
tick,0x7ffdf681f424,30412985,0,0x0,8
tick,0x7ffdf681f424,30414935,0,0x0,8
tick,0x7ffdf681f424,30416966,0,0x0,8
tick,0x7ffdf681f424,30418981,0,0x0,8
tick,0x7ffdf681f424,30420953,0,0x0,8
tick,0x7ffdf681f424,30422974,0,0x0,8
tick,0x7ffdf681f424,30424952,0,0x0,8
tick,0x7ffdf681f424,30426944,0,0x0,8
tick,0x7ffdf681f424,30428939,0,0x0,8
tick,0x7ffdf681f424,30430937,0,0x0,8
tick,0x7ffdf681f424,30432938,0,0x0,8
tick,0x7ffdf681f424,30434923,0,0x0,8
tick,0x7ffdf681f424,30436918,0,0x0,8
tick,0x7ffdf681f424,30438914,0,0x0,8
tick,0x7ffdf681f424,30440919,0,0x0,8
tick,0x7ffdf681f424,30442798,0,0x0,8
tick,0x7ffdf681f424,30444897,0,0x0,8
tick,0x7ffdf681f424,30446891,0,0x0,8
tick,0x7ffdf681f424,30448887,0,0x0,8
tick,0x7ffdf681f424,30450894,0,0x0,8
tick,0x7ffdf681f424,30452874,0,0x0,8
tick,0x7ffdf681f424,30454866,0,0x0,8
tick,0x7ffdf681f424,30456864,0,0x0,8
tick,0x7ffdf681f424,30458878,0,0x0,8
tick,0x7ffdf681f424,30460847,0,0x0,8
tick,0x7ffdf681f424,30462862,0,0x0,8
tick,0x7ffdf681f424,30464838,0,0x0,8
tick,0x7ffdf681f424,30466828,0,0x0,8
tick,0x7ffdf681f424,30468845,0,0x0,8
tick,0x7ffdf681f424,30470891,0,0x0,8
tick,0x7ffdf681f424,30472735,0,0x0,8
tick,0x7ffdf681f424,30474689,0,0x0,8
tick,0x7ffdf681f424,30476686,0,0x0,8
tick,0x7ffdf681f424,30478742,0,0x0,8
tick,0x7ffdf681f424,30480671,0,0x0,8
tick,0x7ffdf681f424,30482783,0,0x0,8
tick,0x7ffdf681f424,30484754,0,0x0,8
tick,0x7ffdf681f424,30486631,0,0x0,8
tick,0x7ffdf681f424,30488757,0,0x0,8
tick,0x7ffdf681f424,30490689,0,0x0,8
tick,0x7ffdf681f424,30492661,0,0x0,8
tick,0x7ffdf681f424,30494670,0,0x0,8
tick,0x7ffdf681f424,30496773,0,0x0,8
tick,0x7ffdf681f424,30498746,0,0x0,8
tick,0x7ffdf681f424,30500742,0,0x0,8
tick,0x7ffdf681f424,30502736,0,0x0,8
tick,0x7ffdf681f424,30504734,0,0x0,8
tick,0x7ffdf681f424,30506746,0,0x0,8
tick,0x7ffdf681f424,30508719,0,0x0,8
tick,0x7ffdf681f424,30510715,0,0x0,8
tick,0x7ffdf681f424,30512710,0,0x0,8
tick,0x7ffdf681f424,30514711,0,0x0,8
tick,0x7ffdf681f424,30516704,0,0x0,8
tick,0x7ffdf681f424,30518708,0,0x0,8
tick,0x7ffdf681f424,30520688,0,0x0,8
tick,0x7ffdf681f424,30522689,0,0x0,8
tick,0x7ffdf681f424,30524682,0,0x0,8
tick,0x7ffdf681f424,30526671,0,0x0,8
tick,0x7ffdf681f424,30528687,0,0x0,8
tick,0x7ffdf681f424,30530660,0,0x0,8
tick,0x7ffdf681f424,30532656,0,0x0,8
tick,0x7ffdf681f424,30534589,0,0x0,8
tick,0x7ffdf681f424,30536647,0,0x0,8
tick,0x7ffdf681f424,30538660,0,0x0,8
tick,0x7ffdf681f424,30540639,0,0x0,8
tick,0x7ffdf681f424,30542573,0,0x0,8
tick,0x7ffdf681f424,30544624,0,0x0,8
tick,0x7ffdf681f424,30546626,0,0x0,8
tick,0x7ffdf681f424,30548626,0,0x0,8
tick,0x7ffdf681f424,30550627,0,0x0,8
tick,0x7ffdf681f424,30552603,0,0x0,8
tick,0x7ffdf681f424,30554597,0,0x0,8
tick,0x7ffdf681f424,30556594,0,0x0,8
tick,0x7ffdf681f424,30558591,0,0x0,8
tick,0x7ffdf681f424,30560588,0,0x0,8
tick,0x7ffdf681f424,30562581,0,0x0,8
tick,0x7ffdf681f424,30564570,0,0x0,8
tick,0x7ffdf681f424,30566563,0,0x0,8
tick,0x7ffdf681f424,30568562,0,0x0,8
tick,0x7ffdf681f424,30570562,0,0x0,8
tick,0x7ffdf681f424,30572561,0,0x0,8
tick,0x7ffdf681f424,30574548,0,0x0,8
tick,0x7ffdf681f424,30576539,0,0x0,8
tick,0x7ffdf681f424,30578541,0,0x0,8
tick,0x7ffdf681f424,30580534,0,0x0,8
tick,0x7ffdf681f424,30582528,0,0x0,8
tick,0x7ffdf681f424,30584519,0,0x0,8
tick,0x7ffdf681f424,30586538,0,0x0,8
tick,0x7ffdf681f424,30588513,0,0x0,8
tick,0x7ffdf681f424,30590407,0,0x0,8
tick,0x7ffdf681f424,30592504,0,0x0,8
tick,0x7ffdf681f424,30594493,0,0x0,8
tick,0x7ffdf681f424,30596483,0,0x0,8
tick,0x7ffdf681f424,30598484,0,0x0,8
tick,0x7ffdf681f424,30600389,0,0x0,8
tick,0x7ffdf681f424,30602419,0,0x0,8
tick,0x7ffdf681f424,30604311,0,0x0,8
tick,0x7ffdf681f424,30606356,0,0x0,8
tick,0x7ffdf681f424,30608425,0,0x0,8
tick,0x7ffdf681f424,30610317,0,0x0,8
tick,0x7ffdf681f424,30612404,0,0x0,8
tick,0x7ffdf681f424,30614402,0,0x0,8
tick,0x7ffdf681f424,30616446,0,0x0,8
tick,0x7ffdf681f424,30618468,0,0x0,8
tick,0x7ffdf681f424,30620305,0,0x0,8
tick,0x7ffdf681f424,30622326,0,0x0,8
tick,0x7ffdf681f424,30624364,0,0x0,8
tick,0x7ffdf681f424,30626366,0,0x0,8
tick,0x7ffdf681f424,30628408,0,0x0,8
tick,0x7ffdf681f424,30630410,0,0x0,8
tick,0x7ffdf681f424,30632396,0,0x0,8
tick,0x7ffdf681f424,30634240,0,0x0,8
tick,0x7ffdf681f424,30636405,0,0x0,8
tick,0x7ffdf681f424,30638307,0,0x0,8
tick,0x7ffdf681f424,30640370,0,0x0,8
tick,0x7ffdf681f424,30642365,0,0x0,8
tick,0x7ffdf681f424,30644357,0,0x0,8
tick,0x7ffdf681f424,30646353,0,0x0,8
tick,0x7ffdf681f424,30648352,0,0x0,8
tick,0x7ffdf681f424,30650356,0,0x0,8
tick,0x7ffdf681f424,30652327,0,0x0,8
tick,0x7ffdf681f424,30654330,0,0x0,8
tick,0x7ffdf681f424,30656344,0,0x0,8
tick,0x7ffdf681f424,30658326,0,0x0,8
tick,0x7ffdf681f424,30660333,0,0x0,8
tick,0x7ffdf681f424,30662313,0,0x0,8
tick,0x7ffdf681f424,30664232,0,0x0,8
tick,0x7ffdf681f424,30666301,0,0x0,8
tick,0x7ffdf681f424,30668336,0,0x0,8
tick,0x7ffdf681f424,30670298,0,0x0,8
tick,0x7ffdf681f424,30672303,0,0x0,8
tick,0x7ffdf681f424,30674283,0,0x0,8
tick,0x7ffdf681f424,30676176,0,0x0,8
tick,0x7ffdf681f424,30678278,0,0x0,8
tick,0x7ffdf681f424,30680267,0,0x0,8
tick,0x7ffdf681f424,30682285,0,0x0,8
tick,0x7ffdf681f424,30684256,0,0x0,8
tick,0x7ffdf681f424,30686238,0,0x0,8
tick,0x7ffdf681f424,30688254,0,0x0,8
tick,0x7ffdf681f424,30690236,0,0x0,8
tick,0x7ffdf681f424,30692259,0,0x0,8
tick,0x7ffdf681f424,30694242,0,0x0,8
tick,0x7ffdf681f424,30696234,0,0x0,8
tick,0x7ffdf681f424,30698227,0,0x0,8
tick,0x7ffdf681f424,30700124,0,0x0,8
tick,0x7ffdf681f424,30702239,0,0x0,8
tick,0x7ffdf681f424,30704100,0,0x0,8
tick,0x7ffdf681f424,30706193,0,0x0,8
tick,0x7ffdf681f424,30708187,0,0x0,8
tick,0x7ffdf681f424,30710181,0,0x0,8
tick,0x7ffdf681f424,30712181,0,0x0,8
tick,0x7ffdf681f424,30714176,0,0x0,8
tick,0x7ffdf681f424,30716179,0,0x0,8
tick,0x7ffdf681f424,30718176,0,0x0,8
tick,0x7ffdf681f424,30720156,0,0x0,8
tick,0x7ffdf681f424,30722152,0,0x0,8
tick,0x7ffdf681f424,30724149,0,0x0,8
tick,0x7ffdf681f424,30726057,0,0x0,8
tick,0x7ffdf681f424,30728212,0,0x0,8
tick,0x7ffdf681f424,30730165,0,0x0,8
tick,0x7ffdf681f424,30732190,0,0x0,8
tick,0x7ffdf681f424,30734050,0,0x0,8
tick,0x7ffdf681f424,30735988,0,0x0,8
tick,0x7ffdf681f424,30738042,0,0x0,8
tick,0x7ffdf681f424,30740064,0,0x0,8
tick,0x7ffdf681f424,30742102,0,0x0,8
tick,0x7ffdf681f424,30744033,0,0x0,8
tick,0x7ffdf681f424,30746068,0,0x0,8
tick,0x7ffdf681f424,30748099,0,0x0,8
tick,0x7ffdf681f424,30750116,0,0x0,8
tick,0x7ffdf681f424,30751974,0,0x0,8
tick,0x7ffdf681f424,30754064,0,0x0,8
tick,0x7ffdf681f424,30756054,0,0x0,8
tick,0x7ffdf681f424,30758053,0,0x0,8
tick,0x7ffdf681f424,30759947,0,0x0,8
tick,0x7ffdf681f424,30761944,0,0x0,8
tick,0x7ffdf681f424,30764043,0,0x0,8
tick,0x7ffdf681f424,30766031,0,0x0,8
tick,0x7ffdf681f424,30767938,0,0x0,8
tick,0x7ffdf681f424,30770042,0,0x0,8
tick,0x7ffdf681f424,30772020,0,0x0,8
tick,0x7ffdf681f424,30774077,0,0x0,8
tick,0x7ffdf681f424,30775937,0,0x0,8
tick,0x7ffdf681f424,30778000,0,0x0,8
tick,0x7ffdf681f424,30779999,0,0x0,8
tick,0x7ffdf681f424,30781996,0,0x0,8
tick,0x7ffdf681f424,30783985,0,0x0,8
tick,0x7ffdf681f424,30786000,0,0x0,8
tick,0x7ffdf681f424,30787979,0,0x0,8
tick,0x7ffdf681f424,30789975,0,0x0,8
tick,0x7ffdf681f424,30791985,0,0x0,8
tick,0x7ffdf681f424,30793958,0,0x0,8
tick,0x7ffdf681f424,30795957,0,0x0,8
tick,0x7ffdf681f424,30797946,0,0x0,8
tick,0x7ffdf681f424,30799938,0,0x0,8
tick,0x7ffdf681f424,30801943,0,0x0,8
tick,0x7ffdf681f424,30803947,0,0x0,8
tick,0x7ffdf681f424,30805930,0,0x0,8
tick,0x7ffdf681f424,30807926,0,0x0,8
tick,0x7ffdf681f424,30809915,0,0x0,8
tick,0x7ffdf681f424,30811909,0,0x0,8
tick,0x7ffdf681f424,30813923,0,0x0,8
tick,0x7ffdf681f424,30815904,0,0x0,8
tick,0x7ffdf681f424,30817773,0,0x0,8
tick,0x7ffdf681f424,30819782,0,0x0,8
tick,0x7ffdf681f424,30821898,0,0x0,8
tick,0x7ffdf681f424,30823884,0,0x0,8
tick,0x7ffdf681f424,30825893,0,0x0,8
tick,0x7ffdf681f424,30827866,0,0x0,8
tick,0x7ffdf681f424,30829861,0,0x0,8
tick,0x7ffdf681f424,30831882,0,0x0,8
tick,0x7ffdf681f424,30833859,0,0x0,8
tick,0x7ffdf681f424,30835864,0,0x0,8
tick,0x7ffdf681f424,30837906,0,0x0,8
tick,0x7ffdf681f424,30839865,0,0x0,8
tick,0x7ffdf681f424,30841830,0,0x0,8
tick,0x7ffdf681f424,30843830,0,0x0,8
tick,0x7ffdf681f424,30845824,0,0x0,8
tick,0x7ffdf681f424,30847827,0,0x0,8
tick,0x7ffdf681f424,30849813,0,0x0,8
tick,0x7ffdf681f424,30851808,0,0x0,8
tick,0x7ffdf681f424,30853796,0,0x0,8
tick,0x7ffdf681f424,30855799,0,0x0,8
tick,0x7ffdf681f424,30857806,0,0x0,8
tick,0x7ffdf681f424,30859786,0,0x0,8
tick,0x7ffdf681f424,30861815,0,0x0,8
tick,0x7ffdf681f424,30863713,0,0x0,8
tick,0x7ffdf681f424,30865607,0,0x0,8
tick,0x7ffdf681f424,30867628,0,0x0,8
tick,0x7ffdf681f424,30869676,0,0x0,8
tick,0x7ffdf681f424,30871716,0,0x0,8
tick,0x7ffdf681f424,30873753,0,0x0,8
tick,0x7ffdf681f424,30875783,0,0x0,8
tick,0x7ffdf681f424,30877721,0,0x0,8
tick,0x7ffdf681f424,30879574,0,0x0,8
tick,0x7ffdf681f424,30881638,0,0x0,8
tick,0x7ffdf681f424,30883606,0,0x0,8
tick,0x7ffdf681f424,30885669,0,0x0,8
tick,0x7ffdf681f424,30887710,0,0x0,8
tick,0x7ffdf681f424,30889709,0,0x0,8
tick,0x7ffdf681f424,30891707,0,0x0,8
tick,0x7ffdf681f424,30893613,0,0x0,8
tick,0x7ffdf681f424,30895698,0,0x0,8
tick,0x7ffdf681f424,30897572,0,0x0,8
tick,0x7ffdf681f424,30899689,0,0x0,8
tick,0x7ffdf681f424,30901698,0,0x0,8
tick,0x7ffdf681f424,30903548,0,0x0,8
tick,0x7ffdf681f424,30905578,0,0x0,8
tick,0x7ffdf681f424,30907671,0,0x0,8
tick,0x7ffdf681f424,30909568,0,0x0,8
tick,0x7ffdf681f424,30911650,0,0x0,8
tick,0x7ffdf681f424,30913644,0,0x0,8
tick,0x7ffdf681f424,30915531,0,0x0,8
tick,0x7ffdf681f424,30917637,0,0x0,8
tick,0x7ffdf681f424,30919633,0,0x0,8
tick,0x7ffdf681f424,30921623,0,0x0,8
tick,0x7ffdf681f424,30923621,0,0x0,8
tick,0x7ffdf681f424,30925604,0,0x0,8
tick,0x7ffdf681f424,30927628,0,0x0,8
tick,0x7ffdf681f424,30929602,0,0x0,8
tick,0x7ffdf681f424,30931596,0,0x0,8
tick,0x7ffdf681f424,30933589,0,0x0,8
tick,0x7ffdf681f424,30935586,0,0x0,8
tick,0x7ffdf681f424,30937573,0,0x0,8
tick,0x7ffdf681f424,30939573,0,0x0,8
tick,0x7ffdf681f424,30941577,0,0x0,8
tick,0x7ffdf681f424,30943569,0,0x0,8
tick,0x7ffdf681f424,30945571,0,0x0,8
tick,0x7ffdf681f424,30947544,0,0x0,8
tick,0x7ffdf681f424,30949541,0,0x0,8
tick,0x7ffdf681f424,30951544,0,0x0,8
tick,0x7ffdf681f424,30953538,0,0x0,8
tick,0x7ffdf681f424,30955531,0,0x0,8
tick,0x7ffdf681f424,30957524,0,0x0,8
tick,0x7ffdf681f424,30959418,0,0x0,8
tick,0x7ffdf681f424,30961511,0,0x0,8
tick,0x7ffdf681f424,30963510,0,0x0,8
tick,0x7ffdf681f424,30965505,0,0x0,8
tick,0x7ffdf681f424,30967518,0,0x0,8
tick,0x7ffdf681f424,30969506,0,0x0,8
tick,0x7ffdf681f424,30971512,0,0x0,8
tick,0x7ffdf681f424,30973483,0,0x0,8
tick,0x7ffdf681f424,30975480,0,0x0,8
tick,0x7ffdf681f424,30977472,0,0x0,8
tick,0x7ffdf681f424,30979467,0,0x0,8
tick,0x7ffdf681f424,30981459,0,0x0,8
tick,0x7ffdf681f424,30983458,0,0x0,8
tick,0x7ffdf681f424,30985452,0,0x0,8
tick,0x7ffdf681f424,30987446,0,0x0,8
tick,0x7ffdf681f424,30989455,0,0x0,8
tick,0x7ffdf681f424,30991379,0,0x0,8
tick,0x7ffdf681f424,30993384,0,0x0,8
tick,0x7ffdf681f424,30995321,0,0x0,8
tick,0x7ffdf681f424,30997324,0,0x0,8
tick,0x7ffdf681f424,30999424,0,0x0,8
tick,0x7ffdf681f424,31001352,0,0x0,8
tick,0x7ffdf681f424,31003291,0,0x0,8
tick,0x7ffdf681f424,31005408,0,0x0,8
tick,0x7ffdf681f424,31007392,0,0x0,8
tick,0x7ffdf681f424,31009307,0,0x0,8
tick,0x7ffdf681f424,31011269,0,0x0,8
tick,0x7ffdf681f424,31013245,0,0x0,8
tick,0x7ffdf681f424,31015371,0,0x0,8
tick,0x7ffdf681f424,31017335,0,0x0,8
tick,0x7ffdf681f424,31019256,0,0x0,8
tick,0x7ffdf681f424,31021349,0,0x0,8
tick,0x7ffdf681f424,31023349,0,0x0,8
tick,0x7ffdf681f424,31025341,0,0x0,8
tick,0x7ffdf681f424,31027340,0,0x0,8
tick,0x7ffdf681f424,31029328,0,0x0,8
tick,0x7ffdf681f424,31031322,0,0x0,8
tick,0x7ffdf681f424,31033326,0,0x0,8
tick,0x7ffdf681f424,31035311,0,0x0,8
tick,0x7ffdf681f424,31037311,0,0x0,8
tick,0x7ffdf681f424,31039309,0,0x0,8
tick,0x7ffdf681f424,31041301,0,0x0,8
tick,0x7ffdf681f424,31043290,0,0x0,8
tick,0x7ffdf681f424,31045303,0,0x0,8
tick,0x7ffdf681f424,31047288,0,0x0,8
tick,0x7ffdf681f424,31049282,0,0x0,8
tick,0x7ffdf681f424,31051167,0,0x0,8
tick,0x7ffdf681f424,31053272,0,0x0,8
tick,0x7ffdf681f424,31055279,0,0x0,8
tick,0x7ffdf681f424,31057254,0,0x0,8
tick,0x7ffdf681f424,31059253,0,0x0,8
tick,0x7ffdf681f424,31061248,0,0x0,8
tick,0x7ffdf681f424,31063249,0,0x0,8
tick,0x7ffdf681f424,31065237,0,0x0,8
tick,0x7ffdf681f424,31067231,0,0x0,8
tick,0x7ffdf681f424,31069220,0,0x0,8
tick,0x7ffdf681f424,31071235,0,0x0,8
tick,0x7ffdf681f424,31073216,0,0x0,8
tick,0x7ffdf681f424,31075211,0,0x0,8
tick,0x7ffdf681f424,31077207,0,0x0,8
tick,0x7ffdf681f424,31079255,0,0x0,8
tick,0x7ffdf681f424,31081196,0,0x0,8
tick,0x7ffdf681f424,31083184,0,0x0,8
tick,0x7ffdf681f424,31085186,0,0x0,8
tick,0x7ffdf681f424,31087178,0,0x0,8
tick,0x7ffdf681f424,31089184,0,0x0,8
tick,0x7ffdf681f424,31091162,0,0x0,8
tick,0x7ffdf681f424,31093158,0,0x0,8
tick,0x7ffdf681f424,31095168,0,0x0,8
tick,0x7ffdf681f424,31097152,0,0x0,8
tick,0x7ffdf681f424,31099162,0,0x0,8
tick,0x7ffdf681f424,31101038,0,0x0,8
tick,0x7ffdf681f424,31103132,0,0x0,8
tick,0x7ffdf681f424,31105125,0,0x0,8
tick,0x7ffdf681f424,31107120,0,0x0,8
tick,0x7ffdf681f424,31109122,0,0x0,8
tick,0x7ffdf681f424,31111124,0,0x0,8
tick,0x7ffdf681f424,31113105,0,0x0,8
tick,0x7ffdf681f424,31115104,0,0x0,8
tick,0x7ffdf681f424,31117096,0,0x0,8
tick,0x7ffdf681f424,31119094,0,0x0,8
tick,0x7ffdf681f424,31121117,0,0x0,8
tick,0x7ffdf681f424,31123087,0,0x0,8
tick,0x7ffdf681f424,31125084,0,0x0,8
tick,0x7ffdf681f424,31126915,0,0x0,8
tick,0x7ffdf681f424,31128976,0,0x0,8
tick,0x7ffdf681f424,31130977,0,0x0,8
tick,0x7ffdf681f424,31133048,0,0x0,8
tick,0x7ffdf681f424,31135043,0,0x0,8
tick,0x7ffdf681f424,31136937,0,0x0,8
tick,0x7ffdf681f424,31139057,0,0x0,8
tick,0x7ffdf681f424,31141040,0,0x0,8
tick,0x7ffdf681f424,31142976,0,0x0,8
tick,0x7ffdf681f424,31144947,0,0x0,8
tick,0x7ffdf681f424,31147028,0,0x0,8
tick,0x7ffdf681f424,31149023,0,0x0,8
tick,0x7ffdf681f424,31150994,0,0x0,8
tick,0x7ffdf681f424,31153005,0,0x0,8
tick,0x7ffdf681f424,31155010,0,0x0,8
tick,0x7ffdf681f424,31156993,0,0x0,8
tick,0x7ffdf681f424,31159020,0,0x0,8
tick,0x7ffdf681f424,31160982,0,0x0,8
tick,0x7ffdf681f424,31162982,0,0x0,8
tick,0x7ffdf681f424,31164992,0,0x0,8
tick,0x7ffdf681f424,31166966,0,0x0,8
tick,0x7ffdf681f424,31168941,0,0x0,8
tick,0x7ffdf681f424,31170964,0,0x0,8
tick,0x7ffdf681f424,31172959,0,0x0,8
tick,0x7ffdf681f424,31174955,0,0x0,8
tick,0x7ffdf681f424,31176953,0,0x0,8
tick,0x7ffdf681f424,31178943,0,0x0,8
tick,0x7ffdf681f424,31180945,0,0x0,8
tick,0x7ffdf681f424,31182925,0,0x0,8
tick,0x7ffdf681f424,31184980,0,0x0,8
tick,0x7ffdf681f424,31186933,0,0x0,8
tick,0x7ffdf681f424,31188910,0,0x0,8
tick,0x7ffdf681f424,31190946,0,0x0,8
tick,0x7ffdf681f424,31192797,0,0x0,8
tick,0x7ffdf681f424,31194892,0,0x0,8
tick,0x7ffdf681f424,31196887,0,0x0,8
tick,0x7ffdf681f424,31198903,0,0x0,8
tick,0x7ffdf681f424,31200882,0,0x0,8
tick,0x7ffdf681f424,31202759,0,0x0,8
tick,0x7ffdf681f424,31204750,0,0x0,8
tick,0x7ffdf681f424,31206870,0,0x0,8
tick,0x7ffdf681f424,31208874,0,0x0,8
tick,0x7ffdf681f424,31210853,0,0x0,8
tick,0x7ffdf681f424,31212842,0,0x0,8
tick,0x7ffdf681f424,31214844,0,0x0,8
tick,0x7ffdf681f424,31216847,0,0x0,8
tick,0x7ffdf681f424,31218832,0,0x0,8
tick,0x7ffdf681f424,31220830,0,0x0,8
tick,0x7ffdf681f424,31222810,0,0x0,8
tick,0x7ffdf681f424,31224811,0,0x0,8
tick,0x7ffdf681f424,31226805,0,0x0,8
tick,0x7ffdf681f424,31228800,0,0x0,8
tick,0x7ffdf681f424,31230796,0,0x0,8
tick,0x7ffdf681f424,31232791,0,0x0,8
tick,0x7ffdf681f424,31234764,0,0x0,8
tick,0x7ffdf681f424,31236772,0,0x0,8
tick,0x7ffdf681f424,31238775,0,0x0,8
tick,0x7ffdf681f424,31240801,0,0x0,8
tick,0x7ffdf681f424,31242669,0,0x0,8
tick,0x7ffdf681f424,31244770,0,0x0,8
tick,0x7ffdf681f424,31246757,0,0x0,8
tick,0x7ffdf681f424,31248743,0,0x0,8
tick,0x7ffdf681f424,31250760,0,0x0,8
tick,0x7ffdf681f424,31252750,0,0x0,8
tick,0x7ffdf681f424,31254616,0,0x0,8
tick,0x7ffdf681f424,31256562,0,0x0,8
tick,0x7ffdf681f424,31258629,0,0x0,8
tick,0x7ffdf681f424,31260619,0,0x0,8
tick,0x7ffdf681f424,31262692,0,0x0,8
tick,0x7ffdf681f424,31264712,0,0x0,8
tick,0x7ffdf681f424,31266698,0,0x0,8
tick,0x7ffdf681f424,31268638,0,0x0,8
tick,0x7ffdf681f424,31270531,0,0x0,8
tick,0x7ffdf681f424,31272581,0,0x0,8
tick,0x7ffdf681f424,31274672,0,0x0,8
tick,0x7ffdf681f424,31276550,0,0x0,8
tick,0x7ffdf681f424,31278690,0,0x0,8
tick,0x7ffdf681f424,31280658,0,0x0,8
tick,0x7ffdf681f424,31282650,0,0x0,8
tick,0x7ffdf681f424,31284580,0,0x0,8
tick,0x7ffdf681f424,31286647,0,0x0,8
tick,0x7ffdf681f424,31288641,0,0x0,8
tick,0x7ffdf681f424,31290629,0,0x0,8
tick,0x7ffdf681f424,31292631,0,0x0,8
tick,0x7ffdf681f424,31294620,0,0x0,8
tick,0x7ffdf681f424,31296634,0,0x0,8
tick,0x7ffdf681f424,31298606,0,0x0,8
tick,0x7ffdf681f424,31300607,0,0x0,8
tick,0x7ffdf681f424,31302621,0,0x0,8
tick,0x7ffdf681f424,31304599,0,0x0,8
tick,0x7ffdf681f424,31306592,0,0x0,8
tick,0x7ffdf681f424,31308599,0,0x0,8
tick,0x7ffdf681f424,31310575,0,0x0,8
tick,0x7ffdf681f424,31312578,0,0x0,8
tick,0x7ffdf681f424,31314571,0,0x0,8
tick,0x7ffdf681f424,31316561,0,0x0,8
tick,0x7ffdf681f424,31318575,0,0x0,8
tick,0x7ffdf681f424,31320553,0,0x0,8
tick,0x7ffdf681f424,31322601,0,0x0,8
tick,0x7ffdf681f424,31324544,0,0x0,8
tick,0x7ffdf681f424,31326541,0,0x0,8
tick,0x7ffdf681f424,31328529,0,0x0,8
tick,0x7ffdf681f424,31330536,0,0x0,8
tick,0x7ffdf681f424,31332517,0,0x0,8
tick,0x7ffdf681f424,31334411,0,0x0,8
tick,0x7ffdf681f424,31336515,0,0x0,8
tick,0x7ffdf681f424,31338507,0,0x0,8
tick,0x7ffdf681f424,31340521,0,0x0,8
tick,0x7ffdf681f424,31342496,0,0x0,8
tick,0x7ffdf681f424,31344487,0,0x0,8
tick,0x7ffdf681f424,31346486,0,0x0,8
tick,0x7ffdf681f424,31348488,0,0x0,8
tick,0x7ffdf681f424,31350475,0,0x0,8
tick,0x7ffdf681f424,31352471,0,0x0,8
tick,0x7ffdf681f424,31354462,0,0x0,8
tick,0x7ffdf681f424,31356457,0,0x0,8
tick,0x7ffdf681f424,31358456,0,0x0,8
tick,0x7ffdf681f424,31360448,0,0x0,8
tick,0x7ffdf681f424,31362457,0,0x0,8
tick,0x7ffdf681f424,31364509,0,0x0,8
tick,0x7ffdf681f424,31366460,0,0x0,8
tick,0x7ffdf681f424,31368428,0,0x0,8
tick,0x7ffdf681f424,31370421,0,0x0,8
tick,0x7ffdf681f424,31372418,0,0x0,8
tick,0x7ffdf681f424,31374412,0,0x0,8
tick,0x7ffdf681f424,31376402,0,0x0,8
tick,0x7ffdf681f424,31378406,0,0x0,8
tick,0x7ffdf681f424,31380389,0,0x0,8
tick,0x7ffdf681f424,31382288,0,0x0,8
tick,0x7ffdf681f424,31384336,0,0x0,8
tick,0x7ffdf681f424,31386284,0,0x0,8
tick,0x7ffdf681f424,31388342,0,0x0,8
tick,0x7ffdf681f424,31390325,0,0x0,8
tick,0x7ffdf681f424,31392398,0,0x0,8
tick,0x7ffdf681f424,31394377,0,0x0,8
tick,0x7ffdf681f424,31396342,0,0x0,8
tick,0x7ffdf681f424,31398318,0,0x0,8
tick,0x7ffdf681f424,31400328,0,0x0,8
tick,0x7ffdf681f424,31402235,0,0x0,8
tick,0x7ffdf681f424,31404358,0,0x0,8
tick,0x7ffdf681f424,31406352,0,0x0,8
tick,0x7ffdf681f424,31408314,0,0x0,8
tick,0x7ffdf681f424,31410215,0,0x0,8
tick,0x7ffdf681f424,31412257,0,0x0,8
tick,0x7ffdf681f424,31414213,0,0x0,8
tick,0x7ffdf681f424,31416167,0,0x0,8
tick,0x7ffdf681f424,31418191,0,0x0,8
tick,0x7ffdf681f424,31420283,0,0x0,8
tick,0x7ffdf681f424,31422285,0,0x0,8
tick,0x7ffdf681f424,31424277,0,0x0,8
tick,0x7ffdf681f424,31426164,0,0x0,8
tick,0x7ffdf681f424,31428281,0,0x0,8
tick,0x7ffdf681f424,31430262,0,0x0,8
tick,0x7ffdf681f424,31432253,0,0x0,8
tick,0x7ffdf681f424,31434256,0,0x0,8
tick,0x7ffdf681f424,31436258,0,0x0,8
tick,0x7ffdf681f424,31438240,0,0x0,8
tick,0x7ffdf681f424,31440252,0,0x0,8
tick,0x7ffdf681f424,31442224,0,0x0,8
tick,0x7ffdf681f424,31444219,0,0x0,8
tick,0x7ffdf681f424,31446222,0,0x0,8
tick,0x7ffdf681f424,31448232,0,0x0,8
tick,0x7ffdf681f424,31450129,0,0x0,8
tick,0x7ffdf681f424,31452200,0,0x0,8
tick,0x7ffdf681f424,31454200,0,0x0,8
tick,0x7ffdf681f424,31456191,0,0x0,8
tick,0x7ffdf681f424,31458194,0,0x0,8
tick,0x7ffdf681f424,31460203,0,0x0,8
tick,0x7ffdf681f424,31462188,0,0x0,8
tick,0x7ffdf681f424,31464172,0,0x0,8
tick,0x7ffdf681f424,31466177,0,0x0,8
tick,0x7ffdf681f424,31468119,0,0x0,8
tick,0x7ffdf681f424,31470157,0,0x0,8
tick,0x7ffdf681f424,31472167,0,0x0,8
tick,0x7ffdf681f424,31474200,0,0x0,8
tick,0x7ffdf681f424,31476074,0,0x0,8
tick,0x7ffdf681f424,31478135,0,0x0,8
tick,0x7ffdf681f424,31480122,0,0x0,8
tick,0x7ffdf681f424,31482122,0,0x0,8
tick,0x7ffdf681f424,31484127,0,0x0,8
tick,0x7ffdf681f424,31486133,0,0x0,8
tick,0x7ffdf681f424,31488101,0,0x0,8
tick,0x7ffdf681f424,31490101,0,0x0,8
tick,0x7ffdf681f424,31492097,0,0x0,8
tick,0x7ffdf681f424,31494104,0,0x0,8
tick,0x7ffdf681f424,31496094,0,0x0,8
tick,0x7ffdf681f424,31498118,0,0x0,8
tick,0x7ffdf681f424,31500069,0,0x0,8
tick,0x7ffdf681f424,31502063,0,0x0,8
tick,0x7ffdf681f424,31504067,0,0x0,8
tick,0x7ffdf681f424,31505951,0,0x0,8
tick,0x7ffdf681f424,31508053,0,0x0,8
tick,0x7ffdf681f424,31510042,0,0x0,8
tick,0x7ffdf681f424,31511953,0,0x0,8
tick,0x7ffdf681f424,31514037,0,0x0,8
tick,0x7ffdf681f424,31515975,0,0x0,8
tick,0x7ffdf681f424,31517867,0,0x0,8
tick,0x7ffdf681f424,31519916,0,0x0,8
tick,0x7ffdf681f424,31521924,0,0x0,8
tick,0x7ffdf681f424,31524013,0,0x0,8
tick,0x7ffdf681f424,31526049,0,0x0,8
tick,0x7ffdf681f424,31527901,0,0x0,8
tick,0x7ffdf681f424,31529900,0,0x0,8
tick,0x7ffdf681f424,31531936,0,0x0,8
tick,0x7ffdf681f424,31533876,0,0x0,8
tick,0x7ffdf681f424,31535879,0,0x0,8
tick,0x7ffdf681f424,31537978,0,0x0,8
tick,0x7ffdf681f424,31539965,0,0x0,8
tick,0x7ffdf681f424,31541957,0,0x0,8
tick,0x7ffdf681f424,31543858,0,0x0,8
tick,0x7ffdf681f424,31545952,0,0x0,8
tick,0x7ffdf681f424,31547946,0,0x0,8
tick,0x7ffdf681f424,31549926,0,0x0,8
tick,0x7ffdf681f424,31551931,0,0x0,8
tick,0x7ffdf681f424,31553931,0,0x0,8
tick,0x7ffdf681f424,31555927,0,0x0,8
tick,0x7ffdf681f424,31557917,0,0x0,8
tick,0x7ffdf681f424,31559830,0,0x0,8
tick,0x7ffdf681f424,31561910,0,0x0,8
tick,0x7ffdf681f424,31563898,0,0x0,8
tick,0x7ffdf681f424,31565893,0,0x0,8
tick,0x7ffdf681f424,31567790,0,0x0,8
tick,0x7ffdf681f424,31569888,0,0x0,8
tick,0x7ffdf681f424,31571896,0,0x0,8
tick,0x7ffdf681f424,31573884,0,0x0,8
tick,0x7ffdf681f424,31575874,0,0x0,8
tick,0x7ffdf681f424,31577867,0,0x0,8
tick,0x7ffdf681f424,31579861,0,0x0,8
tick,0x7ffdf681f424,31581871,0,0x0,8
tick,0x7ffdf681f424,31583853,0,0x0,8
tick,0x7ffdf681f424,31585848,0,0x0,8
tick,0x7ffdf681f424,31587845,0,0x0,8
tick,0x7ffdf681f424,31589837,0,0x0,8
tick,0x7ffdf681f424,31591826,0,0x0,8
tick,0x7ffdf681f424,31593838,0,0x0,8
tick,0x7ffdf681f424,31595813,0,0x0,8
tick,0x7ffdf681f424,31597807,0,0x0,8
tick,0x7ffdf681f424,31599810,0,0x0,8
tick,0x7ffdf681f424,31601803,0,0x0,8
tick,0x7ffdf681f424,31603811,0,0x0,8
tick,0x7ffdf681f424,31605787,0,0x0,8
tick,0x7ffdf681f424,31607710,0,0x0,8
tick,0x7ffdf681f424,31609717,0,0x0,8
tick,0x7ffdf681f424,31611775,0,0x0,8
tick,0x7ffdf681f424,31613772,0,0x0,8
tick,0x7ffdf681f424,31615670,0,0x0,8
tick,0x7ffdf681f424,31617730,0,0x0,8
tick,0x7ffdf681f424,31619769,0,0x0,8
tick,0x7ffdf681f424,31621775,0,0x0,8
tick,0x7ffdf681f424,31623746,0,0x0,8
tick,0x7ffdf681f424,31625736,0,0x0,8
tick,0x7ffdf681f424,31627735,0,0x0,8
tick,0x7ffdf681f424,31629723,0,0x0,8
tick,0x7ffdf681f424,31631640,0,0x0,8
tick,0x7ffdf681f424,31633717,0,0x0,8
tick,0x7ffdf681f424,31635712,0,0x0,8
tick,0x7ffdf681f424,31637716,0,0x0,8
tick,0x7ffdf681f424,31639698,0,0x0,8
tick,0x7ffdf681f424,31641703,0,0x0,8
tick,0x7ffdf681f424,31643700,0,0x0,8
tick,0x7ffdf681f424,31645640,0,0x0,8
tick,0x7ffdf681f424,31647516,0,0x0,8
tick,0x7ffdf681f424,31649743,0,0x0,8
tick,0x7ffdf681f424,31651604,0,0x0,8
tick,0x7ffdf681f424,31653696,0,0x0,8
tick,0x7ffdf681f424,31655655,0,0x0,8
tick,0x7ffdf681f424,31657650,0,0x0,8
tick,0x7ffdf681f424,31659587,0,0x0,8
tick,0x7ffdf681f424,31661515,0,0x0,8
tick,0x7ffdf681f424,31663603,0,0x0,8
tick,0x7ffdf681f424,31665633,0,0x0,8
tick,0x7ffdf681f424,31667630,0,0x0,8
tick,0x7ffdf681f424,31669628,0,0x0,8
tick,0x7ffdf681f424,31671637,0,0x0,8
tick,0x7ffdf681f424,31673609,0,0x0,8
tick,0x7ffdf681f424,31675610,0,0x0,8
tick,0x7ffdf681f424,31677599,0,0x0,8
tick,0x7ffdf681f424,31679595,0,0x0,8
tick,0x7ffdf681f424,31681589,0,0x0,8
tick,0x7ffdf681f424,31683585,0,0x0,8
tick,0x7ffdf681f424,31685575,0,0x0,8
tick,0x7ffdf681f424,31687570,0,0x0,8
tick,0x7ffdf681f424,31689588,0,0x0,8
tick,0x7ffdf681f424,31691577,0,0x0,8
tick,0x7ffdf681f424,31693635,0,0x0,8
tick,0x7ffdf681f424,31695580,0,0x0,8
tick,0x7ffdf681f424,31697547,0,0x0,8
tick,0x7ffdf681f424,31699554,0,0x0,8
tick,0x7ffdf681f424,31701522,0,0x0,8
tick,0x7ffdf681f424,31703541,0,0x0,8
tick,0x7ffdf681f424,31705526,0,0x0,8
tick,0x7ffdf681f424,31707520,0,0x0,8
tick,0x7ffdf681f424,31709432,0,0x0,8
tick,0x7ffdf681f424,31711505,0,0x0,8
tick,0x7ffdf681f424,31713519,0,0x0,8
tick,0x7ffdf681f424,31715502,0,0x0,8
tick,0x7ffdf681f424,31717521,0,0x0,8
tick,0x7ffdf681f424,31719490,0,0x0,8
tick,0x7ffdf681f424,31721484,0,0x0,8
tick,0x7ffdf681f424,31723475,0,0x0,8
tick,0x7ffdf681f424,31725480,0,0x0,8
tick,0x7ffdf681f424,31727464,0,0x0,8
tick,0x7ffdf681f424,31729465,0,0x0,8
tick,0x7ffdf681f424,31731475,0,0x0,8
tick,0x7ffdf681f424,31733339,0,0x0,8
tick,0x7ffdf681f424,31735460,0,0x0,8
tick,0x7ffdf681f424,31737434,0,0x0,8
tick,0x7ffdf681f424,31739458,0,0x0,8
tick,0x7ffdf681f424,31741433,0,0x0,8
tick,0x7ffdf681f424,31743419,0,0x0,8
tick,0x7ffdf681f424,31745419,0,0x0,8
tick,0x7ffdf681f424,31747417,0,0x0,8
tick,0x7ffdf681f424,31749410,0,0x0,8
tick,0x7ffdf681f424,31751297,0,0x0,8
tick,0x7ffdf681f424,31753375,0,0x0,8
tick,0x7ffdf681f424,31755389,0,0x0,8
tick,0x7ffdf681f424,31757402,0,0x0,8
tick,0x7ffdf681f424,31759382,0,0x0,8
tick,0x7ffdf681f424,31761387,0,0x0,8
tick,0x7ffdf681f424,31763377,0,0x0,8
tick,0x7ffdf681f424,31765390,0,0x0,8
tick,0x7ffdf681f424,31767360,0,0x0,8
tick,0x7ffdf681f424,31769362,0,0x0,8
tick,0x7ffdf681f424,31771344,0,0x0,8
tick,0x7ffdf681f424,31773233,0,0x0,8
tick,0x7ffdf681f424,31775311,0,0x0,8
tick,0x7ffdf681f424,31777178,0,0x0,8
tick,0x7ffdf681f424,31779242,0,0x0,8
tick,0x7ffdf681f424,31781221,0,0x0,8
tick,0x7ffdf681f424,31783346,0,0x0,8
tick,0x7ffdf681f424,31785280,0,0x0,8
tick,0x7ffdf681f424,31787146,0,0x0,8
tick,0x7ffdf681f424,31789268,0,0x0,8
tick,0x7ffdf681f424,31791300,0,0x0,8
tick,0x7ffdf681f424,31793235,0,0x0,8
tick,0x7ffdf681f424,31795286,0,0x0,8
tick,0x7ffdf681f424,31797281,0,0x0,8
tick,0x7ffdf681f424,31799275,0,0x0,8
tick,0x7ffdf681f424,31801211,0,0x0,8
tick,0x7ffdf681f424,31803257,0,0x0,8
tick,0x7ffdf681f424,31805255,0,0x0,8
tick,0x7ffdf681f424,31807253,0,0x0,8
tick,0x7ffdf681f424,31809259,0,0x0,8
tick,0x7ffdf681f424,31811253,0,0x0,8
tick,0x7ffdf681f424,31813241,0,0x0,8
tick,0x7ffdf681f424,31815228,0,0x0,8
tick,0x7ffdf681f424,31817227,0,0x0,8
tick,0x7ffdf681f424,31819138,0,0x0,8
tick,0x7ffdf681f424,31821216,0,0x0,8
tick,0x7ffdf681f424,31823227,0,0x0,8
tick,0x7ffdf681f424,31825199,0,0x0,8
tick,0x7ffdf681f424,31827178,0,0x0,8
tick,0x7ffdf681f424,31829194,0,0x0,8
tick,0x7ffdf681f424,31831189,0,0x0,8
tick,0x7ffdf681f424,31833186,0,0x0,8
tick,0x7ffdf681f424,31835188,0,0x0,8
tick,0x7ffdf681f424,31837170,0,0x0,8
tick,0x7ffdf681f424,31839170,0,0x0,8
tick,0x7ffdf681f424,31841157,0,0x0,8
tick,0x7ffdf681f424,31843055,0,0x0,8
tick,0x7ffdf681f424,31845166,0,0x0,8
tick,0x7ffdf681f424,31847228,0,0x0,8
tick,0x7ffdf681f424,31849168,0,0x0,8
tick,0x7ffdf681f424,31851026,0,0x0,8
tick,0x7ffdf681f424,31853131,0,0x0,8
tick,0x7ffdf681f424,31855162,0,0x0,8
tick,0x7ffdf681f424,31857128,0,0x0,8
tick,0x7ffdf681f424,31859121,0,0x0,8
tick,0x7ffdf681f424,31861104,0,0x0,8
tick,0x7ffdf681f424,31863105,0,0x0,8
tick,0x7ffdf681f424,31865101,0,0x0,8
tick,0x7ffdf681f424,31867107,0,0x0,8
tick,0x7ffdf681f424,31869084,0,0x0,8
tick,0x7ffdf681f424,31871077,0,0x0,8
tick,0x7ffdf681f424,31873075,0,0x0,8
tick,0x7ffdf681f424,31875077,0,0x0,8
tick,0x7ffdf681f424,31877101,0,0x0,8
tick,0x7ffdf681f424,31879063,0,0x0,8
tick,0x7ffdf681f424,31881050,0,0x0,8
tick,0x7ffdf681f424,31883045,0,0x0,8
tick,0x7ffdf681f424,31885045,0,0x0,8
tick,0x7ffdf681f424,31887041,0,0x0,8
tick,0x7ffdf681f424,31889049,0,0x0,8
tick,0x7ffdf681f424,31891023,0,0x0,8
tick,0x7ffdf681f424,31893023,0,0x0,8
tick,0x7ffdf681f424,31895047,0,0x0,8
tick,0x7ffdf681f424,31897007,0,0x0,8
tick,0x7ffdf681f424,31899008,0,0x0,8
tick,0x7ffdf681f424,31901021,0,0x0,8
tick,0x7ffdf681f424,31902949,0,0x0,8
tick,0x7ffdf681f424,31905059,0,0x0,8
tick,0x7ffdf681f424,31906948,0,0x0,8
tick,0x7ffdf681f424,31908817,0,0x0,8
tick,0x7ffdf681f424,31910843,0,0x0,8
tick,0x7ffdf681f424,31912885,0,0x0,8
tick,0x7ffdf681f424,31914824,0,0x0,8
tick,0x7ffdf681f424,31916953,0,0x0,8
tick,0x7ffdf681f424,31918916,0,0x0,8
tick,0x7ffdf681f424,31920817,0,0x0,8
tick,0x7ffdf681f424,31922909,0,0x0,8
tick,0x7ffdf681f424,31924938,0,0x0,8
tick,0x7ffdf681f424,31926833,0,0x0,8
tick,0x7ffdf681f424,31928939,0,0x0,8
tick,0x7ffdf681f424,31930916,0,0x0,8
tick,0x7ffdf681f424,31932926,0,0x0,8
tick,0x7ffdf681f424,31934803,0,0x0,8
tick,0x7ffdf681f424,31936902,0,0x0,8
tick,0x7ffdf681f424,31938920,0,0x0,8
tick,0x7ffdf681f424,31940876,0,0x0,8
tick,0x7ffdf681f424,31942796,0,0x0,8
tick,0x7ffdf681f424,31944887,0,0x0,8
tick,0x7ffdf681f424,31946874,0,0x0,8
tick,0x7ffdf681f424,31948870,0,0x0,8
tick,0x7ffdf681f424,31950871,0,0x0,8
tick,0x7ffdf681f424,31952858,0,0x0,8
tick,0x7ffdf681f424,31954867,0,0x0,8
tick,0x7ffdf681f424,31956857,0,0x0,8
tick,0x7ffdf681f424,31958842,0,0x0,8
tick,0x7ffdf681f424,31960844,0,0x0,8
tick,0x7ffdf681f424,31962837,0,0x0,8
tick,0x7ffdf681f424,31964841,0,0x0,8
tick,0x7ffdf681f424,31966826,0,0x0,8
tick,0x7ffdf681f424,31968817,0,0x0,8
tick,0x7ffdf681f424,31970813,0,0x0,8
tick,0x7ffdf681f424,31972812,0,0x0,8
tick,0x7ffdf681f424,31974807,0,0x0,8
tick,0x7ffdf681f424,31976809,0,0x0,8
tick,0x7ffdf681f424,31978844,0,0x0,8
tick,0x7ffdf681f424,31980813,0,0x0,8
tick,0x7ffdf681f424,31982787,0,0x0,8
tick,0x7ffdf681f424,31984655,0,0x0,8
tick,0x7ffdf681f424,31986773,0,0x0,8
tick,0x7ffdf681f424,31988769,0,0x0,8
tick,0x7ffdf681f424,31990769,0,0x0,8
tick,0x7ffdf681f424,31992763,0,0x0,8
tick,0x7ffdf681f424,31994751,0,0x0,8
tick,0x7ffdf681f424,31996756,0,0x0,8
tick,0x7ffdf681f424,31998756,0,0x0,8
tick,0x7ffdf681f424,32000740,0,0x0,8
tick,0x7ffdf681f424,32002756,0,0x0,8
tick,0x7ffdf681f424,32004722,0,0x0,8
tick,0x7ffdf681f424,32006722,0,0x0,8
tick,0x7ffdf681f424,32008721,0,0x0,8
tick,0x7ffdf681f424,32010723,0,0x0,8
tick,0x7ffdf681f424,32012709,0,0x0,8
tick,0x7ffdf681f424,32014697,0,0x0,8
tick,0x7ffdf681f424,32016694,0,0x0,8
tick,0x7ffdf681f424,32018688,0,0x0,8
tick,0x7ffdf681f424,32020706,0,0x0,8
tick,0x7ffdf681f424,32022681,0,0x0,8
tick,0x7ffdf681f424,32024703,0,0x0,8
tick,0x7ffdf681f424,32026669,0,0x0,8
tick,0x7ffdf681f424,32028665,0,0x0,8
tick,0x7ffdf681f424,32030657,0,0x0,8
tick,0x7ffdf681f424,32032675,0,0x0,8
tick,0x7ffdf681f424,32034725,0,0x0,8
tick,0x7ffdf681f424,32036634,0,0x0,8
tick,0x7ffdf681f424,32038568,0,0x0,8
tick,0x7ffdf681f424,32040597,0,0x0,8
tick,0x7ffdf681f424,32042532,0,0x0,8
tick,0x7ffdf681f424,32044550,0,0x0,8
tick,0x7ffdf681f424,32046620,0,0x0,8
tick,0x7ffdf681f424,32048614,0,0x0,8
tick,0x7ffdf681f424,32050616,0,0x0,8
tick,0x7ffdf681f424,32052590,0,0x0,8
tick,0x7ffdf681f424,32054433,0,0x0,8
tick,0x7ffdf681f424,32056485,0,0x0,8
tick,0x7ffdf681f424,32058584,0,0x0,8
tick,0x7ffdf681f424,32060476,0,0x0,8
tick,0x7ffdf681f424,32062578,0,0x0,8
tick,0x7ffdf681f424,32064566,0,0x0,8
tick,0x7ffdf681f424,32066559,0,0x0,8
tick,0x7ffdf681f424,32068551,0,0x0,8
tick,0x7ffdf681f424,32070562,0,0x0,8
tick,0x7ffdf681f424,32072543,0,0x0,8
tick,0x7ffdf681f424,32074537,0,0x0,8
tick,0x7ffdf681f424,32076409,0,0x0,8
tick,0x7ffdf681f424,32078547,0,0x0,8
tick,0x7ffdf681f424,32080530,0,0x0,8
tick,0x7ffdf681f424,32082524,0,0x0,8
tick,0x7ffdf681f424,32084481,0,0x0,8
tick,0x7ffdf681f424,32086528,0,0x0,8
tick,0x7ffdf681f424,32088503,0,0x0,8
tick,0x7ffdf681f424,32090499,0,0x0,8
tick,0x7ffdf681f424,32092503,0,0x0,8
tick,0x7ffdf681f424,32094492,0,0x0,8
tick,0x7ffdf681f424,32096490,0,0x0,8
tick,0x7ffdf681f424,32098489,0,0x0,8
tick,0x7ffdf681f424,32100473,0,0x0,8
tick,0x7ffdf681f424,32102479,0,0x0,8
tick,0x7ffdf681f424,32104472,0,0x0,8
tick,0x7ffdf681f424,32106452,0,0x0,8
tick,0x7ffdf681f424,32108471,0,0x0,8
tick,0x7ffdf681f424,32110439,0,0x0,8
tick,0x7ffdf681f424,32112439,0,0x0,8
tick,0x7ffdf681f424,32114439,0,0x0,8
tick,0x7ffdf681f424,32116432,0,0x0,8
tick,0x7ffdf681f424,32118428,0,0x0,8
tick,0x7ffdf681f424,32120416,0,0x0,8
tick,0x7ffdf681f424,32122404,0,0x0,8
tick,0x7ffdf681f424,32124410,0,0x0,8
tick,0x7ffdf681f424,32126298,0,0x0,8
tick,0x7ffdf681f424,32128389,0,0x0,8
tick,0x7ffdf681f424,32130404,0,0x0,8
tick,0x7ffdf681f424,32132378,0,0x0,8
tick,0x7ffdf681f424,32134379,0,0x0,8
tick,0x7ffdf681f424,32136373,0,0x0,8
tick,0x7ffdf681f424,32138368,0,0x0,8
tick,0x7ffdf681f424,32140378,0,0x0,8
tick,0x7ffdf681f424,32142367,0,0x0,8
tick,0x7ffdf681f424,32144351,0,0x0,8
tick,0x7ffdf681f424,32146342,0,0x0,8
tick,0x7ffdf681f424,32148341,0,0x0,8
tick,0x7ffdf681f424,32150336,0,0x0,8
tick,0x7ffdf681f424,32152349,0,0x0,8
tick,0x7ffdf681f424,32154329,0,0x0,8
tick,0x7ffdf681f424,32156318,0,0x0,8
tick,0x7ffdf681f424,32158315,0,0x0,8
tick,0x7ffdf681f424,32160320,0,0x0,8
tick,0x7ffdf681f424,32162298,0,0x0,8
tick,0x7ffdf681f424,32164191,0,0x0,8
tick,0x7ffdf681f424,32166242,0,0x0,8
tick,0x7ffdf681f424,32168129,0,0x0,8
tick,0x7ffdf681f424,32170202,0,0x0,8
tick,0x7ffdf681f424,32172288,0,0x0,8
tick,0x7ffdf681f424,32174344,0,0x0,8
tick,0x7ffdf681f424,32176133,0,0x0,8
tick,0x7ffdf681f424,32178158,0,0x0,8
tick,0x7ffdf681f424,32180279,0,0x0,8
tick,0x7ffdf681f424,32182254,0,0x0,8
tick,0x7ffdf681f424,32184242,0,0x0,8
tick,0x7ffdf681f424,32186139,0,0x0,8
tick,0x7ffdf681f424,32188246,0,0x0,8
tick,0x7ffdf681f424,32190226,0,0x0,8
tick,0x7ffdf681f424,32192218,0,0x0,8
tick,0x7ffdf681f424,32194169,0,0x0,8
tick,0x7ffdf681f424,32196244,0,0x0,8
tick,0x7ffdf681f424,32198264,0,0x0,8
tick,0x7ffdf681f424,32200197,0,0x0,8
tick,0x7ffdf681f424,32202091,0,0x0,8
tick,0x7ffdf681f424,32204192,0,0x0,8
tick,0x7ffdf681f424,32206188,0,0x0,8
tick,0x7ffdf681f424,32208181,0,0x0,8
tick,0x7ffdf681f424,32210171,0,0x0,8
tick,0x7ffdf681f424,32212171,0,0x0,8
tick,0x7ffdf681f424,32214174,0,0x0,8
tick,0x7ffdf681f424,32216156,0,0x0,8
tick,0x7ffdf681f424,32218069,0,0x0,8
tick,0x7ffdf681f424,32220215,0,0x0,8
tick,0x7ffdf681f424,32222206,0,0x0,8
tick,0x7ffdf681f424,32224139,0,0x0,8
tick,0x7ffdf681f424,32226142,0,0x0,8
tick,0x7ffdf681f424,32228131,0,0x0,8
tick,0x7ffdf681f424,32230124,0,0x0,8
tick,0x7ffdf681f424,32232112,0,0x0,8
tick,0x7ffdf681f424,32234110,0,0x0,8
tick,0x7ffdf681f424,32236107,0,0x0,8
tick,0x7ffdf681f424,32238103,0,0x0,8
tick,0x7ffdf681f424,32240115,0,0x0,8
tick,0x7ffdf681f424,32242083,0,0x0,8
tick,0x7ffdf681f424,32244083,0,0x0,8
tick,0x7ffdf681f424,32246086,0,0x0,8
tick,0x7ffdf681f424,32248099,0,0x0,8
tick,0x7ffdf681f424,32250063,0,0x0,8
tick,0x7ffdf681f424,32252070,0,0x0,8
tick,0x7ffdf681f424,32254059,0,0x0,8
tick,0x7ffdf681f424,32256053,0,0x0,8
tick,0x7ffdf681f424,32258050,0,0x0,8
tick,0x7ffdf681f424,32260045,0,0x0,8
tick,0x7ffdf681f424,32262068,0,0x0,8
tick,0x7ffdf681f424,32264024,0,0x0,8
tick,0x7ffdf681f424,32266024,0,0x0,8
tick,0x7ffdf681f424,32268009,0,0x0,8
tick,0x7ffdf681f424,32270043,0,0x0,8
tick,0x7ffdf681f424,32272011,0,0x0,8
tick,0x7ffdf681f424,32274014,0,0x0,8
tick,0x7ffdf681f424,32275995,0,0x0,8
tick,0x7ffdf681f424,32278011,0,0x0,8
tick,0x7ffdf681f424,32280023,0,0x0,8
tick,0x7ffdf681f424,32281978,0,0x0,8
tick,0x7ffdf681f424,32283994,0,0x0,8
tick,0x7ffdf681f424,32285971,0,0x0,8
tick,0x7ffdf681f424,32287962,0,0x0,8
tick,0x7ffdf681f424,32289965,0,0x0,8
tick,0x7ffdf681f424,32291958,0,0x0,8
tick,0x7ffdf681f424,32293953,0,0x0,8
tick,0x7ffdf681f424,32295974,0,0x0,8
tick,0x7ffdf681f424,32297895,0,0x0,8
tick,0x7ffdf681f424,32299801,0,0x0,8
tick,0x7ffdf681f424,32301797,0,0x0,8
tick,0x7ffdf681f424,32303952,0,0x0,8
tick,0x7ffdf681f424,32305896,0,0x0,8
tick,0x7ffdf681f424,32307922,0,0x0,8
tick,0x7ffdf681f424,32309880,0,0x0,8
tick,0x7ffdf681f424,32311771,0,0x0,8
tick,0x7ffdf681f424,32313798,0,0x0,8
tick,0x7ffdf681f424,32315780,0,0x0,8
tick,0x7ffdf681f424,32317846,0,0x0,8
tick,0x7ffdf681f424,32319785,0,0x0,8
tick,0x7ffdf681f424,32321877,0,0x0,8
tick,0x7ffdf681f424,32323869,0,0x0,8
tick,0x7ffdf681f424,32325863,0,0x0,8
tick,0x7ffdf681f424,32327860,0,0x0,8
tick,0x7ffdf681f424,32329851,0,0x0,8
tick,0x7ffdf681f424,32331876,0,0x0,8
tick,0x7ffdf681f424,32333842,0,0x0,8
tick,0x7ffdf681f424,32335834,0,0x0,8
tick,0x7ffdf681f424,32337835,0,0x0,8
tick,0x7ffdf681f424,32339830,0,0x0,8
tick,0x7ffdf681f424,32341818,0,0x0,8
tick,0x7ffdf681f424,32343813,0,0x0,8
tick,0x7ffdf681f424,32345807,0,0x0,8
tick,0x7ffdf681f424,32347810,0,0x0,8
tick,0x7ffdf681f424,32349816,0,0x0,8
tick,0x7ffdf681f424,32351790,0,0x0,8
tick,0x7ffdf681f424,32353786,0,0x0,8
tick,0x7ffdf681f424,32355788,0,0x0,8
tick,0x7ffdf681f424,32357783,0,0x0,8
tick,0x7ffdf681f424,32359680,0,0x0,8
tick,0x7ffdf681f424,32361803,0,0x0,8
tick,0x7ffdf681f424,32363765,0,0x0,8
tick,0x7ffdf681f424,32365757,0,0x0,8
tick,0x7ffdf681f424,32367760,0,0x0,8
tick,0x7ffdf681f424,32369749,0,0x0,8
tick,0x7ffdf681f424,32371761,0,0x0,8
tick,0x7ffdf681f424,32373802,0,0x0,8
tick,0x7ffdf681f424,32375757,0,0x0,8
tick,0x7ffdf681f424,32377730,0,0x0,8
tick,0x7ffdf681f424,32379724,0,0x0,8
tick,0x7ffdf681f424,32381712,0,0x0,8
tick,0x7ffdf681f424,32383712,0,0x0,8
tick,0x7ffdf681f424,32385626,0,0x0,8
tick,0x7ffdf681f424,32387594,0,0x0,8
tick,0x7ffdf681f424,32389589,0,0x0,8
tick,0x7ffdf681f424,32391690,0,0x0,8
tick,0x7ffdf681f424,32393705,0,0x0,8
tick,0x7ffdf681f424,32395673,0,0x0,8
tick,0x7ffdf681f424,32397671,0,0x0,8
tick,0x7ffdf681f424,32399670,0,0x0,8
tick,0x7ffdf681f424,32401665,0,0x0,8
tick,0x7ffdf681f424,32403659,0,0x0,8
tick,0x7ffdf681f424,32405660,0,0x0,8
tick,0x7ffdf681f424,32407643,0,0x0,8
tick,0x7ffdf681f424,32409642,0,0x0,8
tick,0x7ffdf681f424,32411646,0,0x0,8
tick,0x7ffdf681f424,32413626,0,0x0,8
tick,0x7ffdf681f424,32415525,0,0x0,8
tick,0x7ffdf681f424,32417623,0,0x0,8
tick,0x7ffdf681f424,32419612,0,0x0,8
tick,0x7ffdf681f424,32421619,0,0x0,8
tick,0x7ffdf681f424,32423615,0,0x0,8
tick,0x7ffdf681f424,32425669,0,0x0,8
tick,0x7ffdf681f424,32427557,0,0x0,8
tick,0x7ffdf681f424,32429507,0,0x0,8
tick,0x7ffdf681f424,32431533,0,0x0,8
tick,0x7ffdf681f424,32433527,0,0x0,8
tick,0x7ffdf681f424,32435590,0,0x0,8
tick,0x7ffdf681f424,32437545,0,0x0,8
tick,0x7ffdf681f424,32439484,0,0x0,8
tick,0x7ffdf681f424,32441520,0,0x0,8
tick,0x7ffdf681f424,32443507,0,0x0,8
tick,0x7ffdf681f424,32445476,0,0x0,8
tick,0x7ffdf681f424,32447550,0,0x0,8
tick,0x7ffdf681f424,32449548,0,0x0,8
tick,0x7ffdf681f424,32451543,0,0x0,8
tick,0x7ffdf681f424,32453560,0,0x0,8
tick,0x7ffdf681f424,32455524,0,0x0,8
tick,0x7ffdf681f424,32457524,0,0x0,8
tick,0x7ffdf681f424,32459573,0,0x0,8
tick,0x7ffdf681f424,32461500,0,0x0,8
tick,0x7ffdf681f424,32463509,0,0x0,8
tick,0x7ffdf681f424,32465504,0,0x0,8
tick,0x7ffdf681f424,32467545,0,0x0,8
tick,0x7ffdf681f424,32469541,0,0x0,8
tick,0x7ffdf681f424,32471493,0,0x0,8
tick,0x7ffdf681f424,32473517,0,0x0,8
tick,0x7ffdf681f424,32475501,0,0x0,8
tick,0x7ffdf681f424,32477484,0,0x0,8
tick,0x7ffdf681f424,32479465,0,0x0,8
tick,0x7ffdf681f424,32481473,0,0x0,8
tick,0x7ffdf681f424,32483450,0,0x0,8
tick,0x7ffdf681f424,32485469,0,0x0,8
tick,0x7ffdf681f424,32487448,0,0x0,8
tick,0x7ffdf681f424,32489439,0,0x0,8
tick,0x7ffdf681f424,32491431,0,0x0,8
tick,0x7ffdf681f424,32493433,0,0x0,8
tick,0x7ffdf681f424,32495415,0,0x0,8
tick,0x7ffdf681f424,32497411,0,0x0,8
tick,0x7ffdf681f424,32499417,0,0x0,8
tick,0x7ffdf681f424,32501293,0,0x0,8
tick,0x7ffdf681f424,32503411,0,0x0,8
tick,0x7ffdf681f424,32505398,0,0x0,8
tick,0x7ffdf681f424,32507386,0,0x0,8
tick,0x7ffdf681f424,32509389,0,0x0,8
tick,0x7ffdf681f424,32511380,0,0x0,8
tick,0x7ffdf681f424,32513375,0,0x0,8
tick,0x7ffdf681f424,32515378,0,0x0,8
tick,0x7ffdf681f424,32517356,0,0x0,8
tick,0x7ffdf681f424,32519353,0,0x0,8
tick,0x7ffdf681f424,32521342,0,0x0,8
tick,0x7ffdf681f424,32523338,0,0x0,8
tick,0x7ffdf681f424,32525356,0,0x0,8
tick,0x7ffdf681f424,32527319,0,0x0,8
tick,0x7ffdf681f424,32529322,0,0x0,8
tick,0x7ffdf681f424,32531321,0,0x0,8
tick,0x7ffdf681f424,32533306,0,0x0,8
tick,0x7ffdf681f424,32535301,0,0x0,8
tick,0x7ffdf681f424,32537303,0,0x0,8
tick,0x7ffdf681f424,32539298,0,0x0,8
tick,0x7ffdf681f424,32541291,0,0x0,8
tick,0x7ffdf681f424,32543285,0,0x0,8
tick,0x7ffdf681f424,32545277,0,0x0,8
tick,0x7ffdf681f424,32547287,0,0x0,8
tick,0x7ffdf681f424,32549305,0,0x0,8
tick,0x7ffdf681f424,32551264,0,0x0,8
tick,0x7ffdf681f424,32553256,0,0x0,8
tick,0x7ffdf681f424,32555147,0,0x0,8
tick,0x7ffdf681f424,32557132,0,0x0,8
tick,0x7ffdf681f424,32559084,0,0x0,8
tick,0x7ffdf681f424,32561150,0,0x0,8
tick,0x7ffdf681f424,32563140,0,0x0,8
tick,0x7ffdf681f424,32565261,0,0x0,8
tick,0x7ffdf681f424,32567259,0,0x0,8
tick,0x7ffdf681f424,32569166,0,0x0,8
tick,0x7ffdf681f424,32571157,0,0x0,8
tick,0x7ffdf681f424,32573097,0,0x0,8
tick,0x7ffdf681f424,32575204,0,0x0,8
tick,0x7ffdf681f424,32577129,0,0x0,8
tick,0x7ffdf681f424,32579186,0,0x0,8
tick,0x7ffdf681f424,32581193,0,0x0,8
tick,0x7ffdf681f424,32583173,0,0x0,8
tick,0x7ffdf681f424,32585072,0,0x0,8
tick,0x7ffdf681f424,32587168,0,0x0,8
tick,0x7ffdf681f424,32589165,0,0x0,8
tick,0x7ffdf681f424,32591155,0,0x0,8
tick,0x7ffdf681f424,32593022,0,0x0,8
tick,0x7ffdf681f424,32595171,0,0x0,8
tick,0x7ffdf681f424,32597141,0,0x0,8
tick,0x7ffdf681f424,32599130,0,0x0,8
tick,0x7ffdf681f424,32601149,0,0x0,8
tick,0x7ffdf681f424,32603126,0,0x0,8
tick,0x7ffdf681f424,32605119,0,0x0,8
tick,0x7ffdf681f424,32607109,0,0x0,8
tick,0x7ffdf681f424,32609114,0,0x0,8
tick,0x7ffdf681f424,32611106,0,0x0,8
tick,0x7ffdf681f424,32613114,0,0x0,8
tick,0x7ffdf681f424,32615093,0,0x0,8
tick,0x7ffdf681f424,32617082,0,0x0,8
tick,0x7ffdf681f424,32619077,0,0x0,8
tick,0x7ffdf681f424,32621001,0,0x0,8
tick,0x7ffdf681f424,32623066,0,0x0,8
tick,0x7ffdf681f424,32625067,0,0x0,8
tick,0x7ffdf681f424,32627055,0,0x0,8
tick,0x7ffdf681f424,32629051,0,0x0,8
tick,0x7ffdf681f424,32631066,0,0x0,8
tick,0x7ffdf681f424,32633045,0,0x0,8
tick,0x7ffdf681f424,32635065,0,0x0,8
tick,0x7ffdf681f424,32637089,0,0x0,8
tick,0x7ffdf681f424,32639054,0,0x0,8
tick,0x7ffdf681f424,32640978,0,0x0,8
tick,0x7ffdf681f424,32642914,0,0x0,8
tick,0x7ffdf681f424,32645016,0,0x0,8
tick,0x7ffdf681f424,32647008,0,0x0,8
tick,0x7ffdf681f424,32648997,0,0x0,8
tick,0x7ffdf681f424,32650992,0,0x0,8
tick,0x7ffdf681f424,32652994,0,0x0,8
tick,0x7ffdf681f424,32654987,0,0x0,8
tick,0x7ffdf681f424,32656995,0,0x0,8
tick,0x7ffdf681f424,32658982,0,0x0,8
tick,0x7ffdf681f424,32660976,0,0x0,8
tick,0x7ffdf681f424,32662959,0,0x0,8
tick,0x7ffdf681f424,32664965,0,0x0,8
tick,0x7ffdf681f424,32666964,0,0x0,8
tick,0x7ffdf681f424,32668957,0,0x0,8
tick,0x7ffdf681f424,32670939,0,0x0,8
tick,0x7ffdf681f424,32672932,0,0x0,8
tick,0x7ffdf681f424,32674935,0,0x0,8
tick,0x7ffdf681f424,32676930,0,0x0,8
tick,0x7ffdf681f424,32678943,0,0x0,8
tick,0x7ffdf681f424,32680915,0,0x0,8
tick,0x7ffdf681f424,32682916,0,0x0,8
tick,0x7ffdf681f424,32684914,0,0x0,8
tick,0x7ffdf681f424,32686915,0,0x0,8
tick,0x7ffdf681f424,32688793,0,0x0,8
tick,0x7ffdf681f424,32690727,0,0x0,8
tick,0x7ffdf681f424,32692780,0,0x0,8
tick,0x7ffdf681f424,32694716,0,0x0,8
tick,0x7ffdf681f424,32696770,0,0x0,8
tick,0x7ffdf681f424,32698882,0,0x0,8
tick,0x7ffdf681f424,32700854,0,0x0,8
tick,0x7ffdf681f424,32702753,0,0x0,8
tick,0x7ffdf681f424,32704774,0,0x0,8
tick,0x7ffdf681f424,32706856,0,0x0,8
tick,0x7ffdf681f424,32708845,0,0x0,8
tick,0x7ffdf681f424,32710731,0,0x0,8
tick,0x7ffdf681f424,32712842,0,0x0,8
tick,0x7ffdf681f424,32714821,0,0x0,8
tick,0x7ffdf681f424,32716818,0,0x0,8
tick,0x7ffdf681f424,32718732,0,0x0,8
tick,0x7ffdf681f424,32720811,0,0x0,8
tick,0x7ffdf681f424,32722860,0,0x0,8
tick,0x7ffdf681f424,32724893,0,0x0,8
tick,0x7ffdf681f424,32726716,0,0x0,8
tick,0x7ffdf681f424,32728790,0,0x0,8
tick,0x7ffdf681f424,32730786,0,0x0,8
tick,0x7ffdf681f424,32732780,0,0x0,8
tick,0x7ffdf681f424,32734665,0,0x0,8
tick,0x7ffdf681f424,32736762,0,0x0,8
tick,0x7ffdf681f424,32738759,0,0x0,8
tick,0x7ffdf681f424,32740777,0,0x0,8
tick,0x7ffdf681f424,32742730,0,0x0,8
tick,0x7ffdf681f424,32744759,0,0x0,8
tick,0x7ffdf681f424,32746800,0,0x0,8
tick,0x7ffdf681f424,32748773,0,0x0,8
tick,0x7ffdf681f424,32750725,0,0x0,8
tick,0x7ffdf681f424,32752720,0,0x0,8
tick,0x7ffdf681f424,32754720,0,0x0,8
tick,0x7ffdf681f424,32756715,0,0x0,8
tick,0x7ffdf681f424,32758705,0,0x0,8
tick,0x7ffdf681f424,32760703,0,0x0,8
tick,0x7ffdf681f424,32762701,0,0x0,8
tick,0x7ffdf681f424,32764699,0,0x0,8
tick,0x7ffdf681f424,32766703,0,0x0,8
tick,0x7ffdf681f424,32768687,0,0x0,8
tick,0x7ffdf681f424,32770708,0,0x0,8
tick,0x7ffdf681f424,32772675,0,0x0,8
tick,0x7ffdf681f424,32774680,0,0x0,8
tick,0x7ffdf681f424,32776629,0,0x0,8
tick,0x7ffdf681f424,32778668,0,0x0,8
tick,0x7ffdf681f424,32780647,0,0x0,8
tick,0x7ffdf681f424,32782646,0,0x0,8
tick,0x7ffdf681f424,32784572,0,0x0,8
tick,0x7ffdf681f424,32786636,0,0x0,8
tick,0x7ffdf681f424,32788637,0,0x0,8
tick,0x7ffdf681f424,32790517,0,0x0,8
tick,0x7ffdf681f424,32792622,0,0x0,8
tick,0x7ffdf681f424,32794634,0,0x0,8
tick,0x7ffdf681f424,32796619,0,0x0,8
tick,0x7ffdf681f424,32798610,0,0x0,8
tick,0x7ffdf681f424,32800600,0,0x0,8
tick,0x7ffdf681f424,32802606,0,0x0,8
tick,0x7ffdf681f424,32804595,0,0x0,8
tick,0x7ffdf681f424,32806589,0,0x0,8
tick,0x7ffdf681f424,32808581,0,0x0,8
tick,0x7ffdf681f424,32810587,0,0x0,8
tick,0x7ffdf681f424,32812560,0,0x0,8
tick,0x7ffdf681f424,32814566,0,0x0,8
tick,0x7ffdf681f424,32816615,0,0x0,8
tick,0x7ffdf681f424,32818422,0,0x0,8
tick,0x7ffdf681f424,32820381,0,0x0,8
tick,0x7ffdf681f424,32822427,0,0x0,8
tick,0x7ffdf681f424,32824490,0,0x0,8
tick,0x7ffdf681f424,32826488,0,0x0,8
tick,0x7ffdf681f424,32828425,0,0x0,8
tick,0x7ffdf681f424,32830352,0,0x0,8
tick,0x7ffdf681f424,32831524,0,0x0,8
tick,0x7ffdf681f424,32833554,0,0x0,8
tick,0x7ffdf681f424,32835476,0,0x0,8
tick,0x7ffdf681f424,32837590,0,0x0,8
tick,0x7ffdf681f424,32838828,0,0x0,8
tick,0x7ffdf681f424,32839986,0,0x0,8
tick,0x7ffdf681f424,32842028,0,0x0,8
tick,0x7ffdf681f424,32843779,0,0x0,8
tick,0x7ffdf681f424,32845096,0,0x0,8
tick,0x7ffdf681f424,32846828,0,0x0,8
tick,0x7ffdf681f424,32849018,0,0x0,8
tick,0x7ffdf681f424,32851014,0,0x0,8
tick,0x7ffdf681f424,32853021,0,0x0,8
tick,0x7ffdf681f424,32855052,0,0x0,8
tick,0x7ffdf681f424,32857109,0,0x0,8
tick,0x7ffdf681f424,32859190,0,0x0,8
tick,0x7ffdf681f424,32861168,0,0x0,8
tick,0x7ffdf681f424,32863258,0,0x0,8
tick,0x7ffdf681f424,32865270,0,0x0,8
tick,0x7ffdf681f424,32867368,0,0x0,8
tick,0x7ffdf681f424,32869372,0,0x0,8
tick,0x7ffdf681f424,32871403,0,0x0,8
tick,0x7ffdf681f424,32873382,0,0x0,8
tick,0x7ffdf681f424,32875410,0,0x0,8
tick,0x7ffdf681f424,32877573,0,0x0,8
tick,0x7ffdf681f424,32878766,0,0x0,8
tick,0x7ffdf681f424,32880013,0,0x0,8
tick,0x7ffdf681f424,32881149,0,0x0,8
tick,0x7ffdf681f424,32882299,0,0x0,8
tick,0x7ffdf681f424,32884321,0,0x0,8
tick,0x7ffdf681f424,32886313,0,0x0,8
tick,0x7ffdf681f424,32887478,0,0x0,8
tick,0x7ffdf681f424,32888682,0,0x0,8
tick,0x7ffdf681f424,32889838,0,0x0,8
tick,0x7ffdf681f424,32891024,0,0x0,8
tick,0x7ffdf681f424,32892205,0,0x0,8
tick,0x7ffdf681f424,32894031,0,0x0,8
tick,0x7ffdf681f424,32895136,0,0x0,8
tick,0x7ffdf681f424,32897196,0,0x0,8
tick,0x7ffdf681f424,32898346,0,0x0,8
tick,0x7ffdf681f424,32899465,0,0x0,8
tick,0x7ffdf681f424,32900639,0,0x0,8
tick,0x7ffdf681f424,32902656,0,0x0,8
tick,0x7ffdf681f424,32904710,0,0x0,8
tick,0x7ffdf681f424,32906742,0,0x0,8
tick,0x7ffdf681f424,32908723,0,0x0,8
tick,0x7ffdf681f424,32910732,0,0x0,8
tick,0x7ffdf681f424,32912733,0,0x0,8
tick,0x7ffdf681f424,32914734,0,0x0,8
tick,0x7ffdf681f424,32916732,0,0x0,8
tick,0x7ffdf681f424,32918569,0,0x0,8
tick,0x7ffdf681f424,32920717,0,0x0,8
tick,0x7ffdf681f424,32922721,0,0x0,8
tick,0x7ffdf681f424,32924708,0,0x0,8
tick,0x7ffdf681f424,32926604,0,0x0,8
tick,0x7ffdf681f424,32928640,0,0x0,8
tick,0x7ffdf681f424,32930694,0,0x0,8
tick,0x7ffdf681f424,32932691,0,0x0,8
tick,0x7ffdf681f424,32934700,0,0x0,8
tick,0x7ffdf681f424,32936669,0,0x0,8
tick,0x7ffdf681f424,32938616,0,0x0,8
tick,0x7ffdf681f424,32940675,0,0x0,8
tick,0x7ffdf681f424,32942660,0,0x0,8
tick,0x7ffdf681f424,32944624,0,0x0,8
tick,0x7ffdf681f424,32946647,0,0x0,8
tick,0x7ffdf681f424,32948522,0,0x0,8
tick,0x7ffdf681f424,32950482,0,0x0,8
tick,0x7ffdf681f424,32952489,0,0x0,8
tick,0x7ffdf681f424,32954526,0,0x0,8
tick,0x7ffdf681f424,32956627,0,0x0,8
tick,0x7ffdf681f424,32958604,0,0x0,8
tick,0x7ffdf681f424,32960439,0,0x0,8
tick,0x7ffdf681f424,32962460,0,0x0,8
tick,0x7ffdf681f424,32964515,0,0x0,8
tick,0x7ffdf681f424,32966607,0,0x0,8
tick,0x7ffdf681f424,32968476,0,0x0,8
tick,0x7ffdf681f424,32970561,0,0x0,8
tick,0x7ffdf681f424,32972525,0,0x0,8
tick,0x7ffdf681f424,32974530,0,0x0,8
tick,0x7ffdf681f424,32976380,0,0x0,8
tick,0x7ffdf681f424,32978518,0,0x0,8
tick,0x7ffdf681f424,32980557,0,0x0,8
tick,0x7ffdf681f424,32982556,0,0x0,8
tick,0x7ffdf681f424,32984520,0,0x0,8
tick,0x7ffdf681f424,32986547,0,0x0,8
tick,0x7ffdf681f424,32988536,0,0x0,8
tick,0x7ffdf681f424,32990530,0,0x0,8
tick,0x7ffdf681f424,32992564,0,0x0,8
tick,0x7ffdf681f424,32994535,0,0x0,8
tick,0x7ffdf681f424,32996523,0,0x0,8
tick,0x7ffdf681f424,32998502,0,0x0,8
tick,0x7ffdf681f424,33000501,0,0x0,8
tick,0x7ffdf681f424,33002505,0,0x0,8
tick,0x7ffdf681f424,33004519,0,0x0,8
tick,0x7ffdf681f424,33006492,0,0x0,8
tick,0x7ffdf681f424,33008489,0,0x0,8
tick,0x7ffdf681f424,33010475,0,0x0,8
tick,0x7ffdf681f424,33012472,0,0x0,8
tick,0x7ffdf681f424,33014484,0,0x0,8
tick,0x7ffdf681f424,33016415,0,0x0,8
tick,0x7ffdf681f424,33018470,0,0x0,8
tick,0x7ffdf681f424,33020450,0,0x0,8
tick,0x7ffdf681f424,33022450,0,0x0,8
tick,0x7ffdf681f424,33024446,0,0x0,8
tick,0x7ffdf681f424,33026282,0,0x0,8
tick,0x7ffdf681f424,33028437,0,0x0,8
tick,0x7ffdf681f424,33030422,0,0x0,8
tick,0x7ffdf681f424,33032423,0,0x0,8
tick,0x7ffdf681f424,33034304,0,0x0,8
tick,0x7ffdf681f424,33036408,0,0x0,8
tick,0x7ffdf681f424,33038379,0,0x0,8
tick,0x7ffdf681f424,33040397,0,0x0,8
tick,0x7ffdf681f424,33042391,0,0x0,8
tick,0x7ffdf681f424,33044389,0,0x0,8
tick,0x7ffdf681f424,33046381,0,0x0,8
tick,0x7ffdf681f424,33048188,0,0x0,8
tick,0x7ffdf681f424,33050371,0,0x0,8
tick,0x7ffdf681f424,33052368,0,0x0,8
tick,0x7ffdf681f424,33054360,0,0x0,8
tick,0x7ffdf681f424,33056359,0,0x0,8
tick,0x7ffdf681f424,33058354,0,0x0,8
tick,0x7ffdf681f424,33060200,0,0x0,8
tick,0x7ffdf681f424,33062333,0,0x0,8
tick,0x7ffdf681f424,33064337,0,0x0,8
tick,0x7ffdf681f424,33066332,0,0x0,8
tick,0x7ffdf681f424,33068195,0,0x0,8
tick,0x7ffdf681f424,33070329,0,0x0,8
tick,0x7ffdf681f424,33072321,0,0x0,8
tick,0x7ffdf681f424,33074304,0,0x0,8
tick,0x7ffdf681f424,33076196,0,0x0,8
tick,0x7ffdf681f424,33078208,0,0x0,8
tick,0x7ffdf681f424,33080115,0,0x0,8
tick,0x7ffdf681f424,33082133,0,0x0,8
tick,0x7ffdf681f424,33084221,0,0x0,8
tick,0x7ffdf681f424,33086113,0,0x0,8
tick,0x7ffdf681f424,33088242,0,0x0,8
tick,0x7ffdf681f424,33090281,0,0x0,8
tick,0x7ffdf681f424,33092214,0,0x0,8
tick,0x7ffdf681f424,33094128,0,0x0,8
tick,0x7ffdf681f424,33096104,0,0x0,8
tick,0x7ffdf681f424,33098221,0,0x0,8
tick,0x7ffdf681f424,33100239,0,0x0,8
tick,0x7ffdf681f424,33102173,0,0x0,8
tick,0x7ffdf681f424,33104226,0,0x0,8
tick,0x7ffdf681f424,33106220,0,0x0,8
tick,0x7ffdf681f424,33108210,0,0x0,8
tick,0x7ffdf681f424,33110112,0,0x0,8
tick,0x7ffdf681f424,33112199,0,0x0,8
tick,0x7ffdf681f424,33114216,0,0x0,8
tick,0x7ffdf681f424,33116194,0,0x0,8
tick,0x7ffdf681f424,33118068,0,0x0,8
tick,0x7ffdf681f424,33120206,0,0x0,8
tick,0x7ffdf681f424,33122068,0,0x0,8
tick,0x7ffdf681f424,33124179,0,0x0,8
tick,0x7ffdf681f424,33126157,0,0x0,8
tick,0x7ffdf681f424,33128166,0,0x0,8
tick,0x7ffdf681f424,33130149,0,0x0,8
tick,0x7ffdf681f424,33132146,0,0x0,8
tick,0x7ffdf681f424,33134141,0,0x0,8
tick,0x7ffdf681f424,33136175,0,0x0,8
tick,0x7ffdf681f424,33138132,0,0x0,8
tick,0x7ffdf681f424,33140124,0,0x0,8
tick,0x7ffdf681f424,33142019,0,0x0,8
tick,0x7ffdf681f424,33144015,0,0x0,8
tick,0x7ffdf681f424,33146141,0,0x0,8
tick,0x7ffdf681f424,33148006,0,0x0,8
tick,0x7ffdf681f424,33150097,0,0x0,8
tick,0x7ffdf681f424,33152099,0,0x0,8
tick,0x7ffdf681f424,33154090,0,0x0,8
tick,0x7ffdf681f424,33156084,0,0x0,8
tick,0x7ffdf681f424,33158076,0,0x0,8
tick,0x7ffdf681f424,33159993,0,0x0,8
tick,0x7ffdf681f424,33162072,0,0x0,8
tick,0x7ffdf681f424,33164062,0,0x0,8
tick,0x7ffdf681f424,33166060,0,0x0,8
tick,0x7ffdf681f424,33168017,0,0x0,8
tick,0x7ffdf681f424,33170080,0,0x0,8
tick,0x7ffdf681f424,33172039,0,0x0,8
tick,0x7ffdf681f424,33174046,0,0x0,8
tick,0x7ffdf681f424,33176037,0,0x0,8
tick,0x7ffdf681f424,33178026,0,0x0,8
tick,0x7ffdf681f424,33180039,0,0x0,8
tick,0x7ffdf681f424,33182015,0,0x0,8
tick,0x7ffdf681f424,33184038,0,0x0,8
tick,0x7ffdf681f424,33186008,0,0x0,8
tick,0x7ffdf681f424,33187999,0,0x0,8
tick,0x7ffdf681f424,33189995,0,0x0,8
tick,0x7ffdf681f424,33191996,0,0x0,8
tick,0x7ffdf681f424,33193983,0,0x0,8
tick,0x7ffdf681f424,33195979,0,0x0,8
tick,0x7ffdf681f424,33197971,0,0x0,8
tick,0x7ffdf681f424,33199970,0,0x0,8
tick,0x7ffdf681f424,33201930,0,0x0,8
tick,0x7ffdf681f424,33203961,0,0x0,8
tick,0x7ffdf681f424,33205931,0,0x0,8
tick,0x7ffdf681f424,33207966,0,0x0,8
tick,0x7ffdf681f424,33209817,0,0x0,8
tick,0x7ffdf681f424,33211754,0,0x0,8
tick,0x7ffdf681f424,33213873,0,0x0,8
tick,0x7ffdf681f424,33215832,0,0x0,8
tick,0x7ffdf681f424,33217893,0,0x0,8
tick,0x7ffdf681f424,33219747,0,0x0,8
tick,0x7ffdf681f424,33221778,0,0x0,8
tick,0x7ffdf681f424,33223765,0,0x0,8
tick,0x7ffdf681f424,33225904,0,0x0,8
tick,0x7ffdf681f424,33227814,0,0x0,8
tick,0x7ffdf681f424,33229889,0,0x0,8
tick,0x7ffdf681f424,33231880,0,0x0,8
tick,0x7ffdf681f424,33233882,0,0x0,8
tick,0x7ffdf681f424,33235782,0,0x0,8
tick,0x7ffdf681f424,33237866,0,0x0,8
tick,0x7ffdf681f424,33239858,0,0x0,8
tick,0x7ffdf681f424,33241857,0,0x0,8
tick,0x7ffdf681f424,33243776,0,0x0,8
tick,0x7ffdf681f424,33245857,0,0x0,8
tick,0x7ffdf681f424,33247776,0,0x0,8
tick,0x7ffdf681f424,33249732,0,0x0,8
tick,0x7ffdf681f424,33251704,0,0x0,8
tick,0x7ffdf681f424,33253795,0,0x0,8
tick,0x7ffdf681f424,33255838,0,0x0,8
tick,0x7ffdf681f424,33257832,0,0x0,8
tick,0x7ffdf681f424,33259722,0,0x0,8
tick,0x7ffdf681f424,33261818,0,0x0,8
tick,0x7ffdf681f424,33263812,0,0x0,8
tick,0x7ffdf681f424,33265806,0,0x0,8
tick,0x7ffdf681f424,33267803,0,0x0,8
tick,0x7ffdf681f424,33269795,0,0x0,8
tick,0x7ffdf681f424,33271789,0,0x0,8
tick,0x7ffdf681f424,33273782,0,0x0,8
tick,0x7ffdf681f424,33275781,0,0x0,8
tick,0x7ffdf681f424,33277777,0,0x0,8
tick,0x7ffdf681f424,33279776,0,0x0,8
tick,0x7ffdf681f424,33281767,0,0x0,8
tick,0x7ffdf681f424,33283656,0,0x0,8
tick,0x7ffdf681f424,33285750,0,0x0,8
tick,0x7ffdf681f424,33287731,0,0x0,8
tick,0x7ffdf681f424,33289744,0,0x0,8
tick,0x7ffdf681f424,33291731,0,0x0,8
tick,0x7ffdf681f424,33293731,0,0x0,8
tick,0x7ffdf681f424,33295728,0,0x0,8
tick,0x7ffdf681f424,33297660,0,0x0,8
tick,0x7ffdf681f424,33299715,0,0x0,8
tick,0x7ffdf681f424,33301646,0,0x0,8
tick,0x7ffdf681f424,33303707,0,0x0,8
tick,0x7ffdf681f424,33305701,0,0x0,8
tick,0x7ffdf681f424,33307691,0,0x0,8
tick,0x7ffdf681f424,33309581,0,0x0,8
tick,0x7ffdf681f424,33311683,0,0x0,8
tick,0x7ffdf681f424,33313676,0,0x0,8
tick,0x7ffdf681f424,33315667,0,0x0,8
tick,0x7ffdf681f424,33317665,0,0x0,8
tick,0x7ffdf681f424,33319656,0,0x0,8
tick,0x7ffdf681f424,33321554,0,0x0,8
tick,0x7ffdf681f424,33323538,0,0x0,8
tick,0x7ffdf681f424,33325639,0,0x0,8
tick,0x7ffdf681f424,33327624,0,0x0,8
tick,0x7ffdf681f424,33329623,0,0x0,8
tick,0x7ffdf681f424,33331621,0,0x0,8
tick,0x7ffdf681f424,33333628,0,0x0,8
tick,0x7ffdf681f424,33335604,0,0x0,8
tick,0x7ffdf681f424,33337495,0,0x0,8
tick,0x7ffdf681f424,33339600,0,0x0,8
tick,0x7ffdf681f424,33341585,0,0x0,8
tick,0x7ffdf681f424,33343497,0,0x0,8
tick,0x7ffdf681f424,33345369,0,0x0,8
tick,0x7ffdf681f424,33347421,0,0x0,8
tick,0x7ffdf681f424,33349559,0,0x0,8
tick,0x7ffdf681f424,33351480,0,0x0,8
tick,0x7ffdf681f424,33353350,0,0x0,8
tick,0x7ffdf681f424,33355342,0,0x0,8
tick,0x7ffdf681f424,33357389,0,0x0,8
tick,0x7ffdf681f424,33359632,0,0x0,8
tick,0x7ffdf681f424,33361437,0,0x0,8
tick,0x7ffdf681f424,33363533,0,0x0,8
tick,0x7ffdf681f424,33365560,0,0x0,8
tick,0x7ffdf681f424,33367526,0,0x0,8
tick,0x7ffdf681f424,33369516,0,0x0,8
tick,0x7ffdf681f424,33371400,0,0x0,8
tick,0x7ffdf681f424,33373500,0,0x0,8
tick,0x7ffdf681f424,33375505,0,0x0,8
tick,0x7ffdf681f424,33377520,0,0x0,8
tick,0x7ffdf681f424,33379488,0,0x0,8
tick,0x7ffdf681f424,33381483,0,0x0,8
tick,0x7ffdf681f424,33383483,0,0x0,8
tick,0x7ffdf681f424,33385379,0,0x0,8
tick,0x7ffdf681f424,33387590,0,0x0,8
tick,0x7ffdf681f424,33389490,0,0x0,8
tick,0x7ffdf681f424,33391450,0,0x0,8
tick,0x7ffdf681f424,33393450,0,0x0,8
tick,0x7ffdf681f424,33395439,0,0x0,8
tick,0x7ffdf681f424,33397417,0,0x0,8
tick,0x7ffdf681f424,33399428,0,0x0,8
tick,0x7ffdf681f424,33401385,0,0x0,8
tick,0x7ffdf681f424,33403430,0,0x0,8
tick,0x7ffdf681f424,33405413,0,0x0,8
tick,0x7ffdf681f424,33407321,0,0x0,8
tick,0x7ffdf681f424,33409356,0,0x0,8
tick,0x7ffdf681f424,33411407,0,0x0,8
tick,0x7ffdf681f424,33413399,0,0x0,8
tick,0x7ffdf681f424,33415284,0,0x0,8
tick,0x7ffdf681f424,33417394,0,0x0,8
tick,0x7ffdf681f424,33419378,0,0x0,8
tick,0x7ffdf681f424,33421397,0,0x0,8
tick,0x7ffdf681f424,33423367,0,0x0,8
tick,0x7ffdf681f424,33425364,0,0x0,8
tick,0x7ffdf681f424,33427356,0,0x0,8
tick,0x7ffdf681f424,33429271,0,0x0,8
tick,0x7ffdf681f424,33431357,0,0x0,8
tick,0x7ffdf681f424,33433335,0,0x0,8
tick,0x7ffdf681f424,33435337,0,0x0,8
tick,0x7ffdf681f424,33437329,0,0x0,8
tick,0x7ffdf681f424,33439328,0,0x0,8
tick,0x7ffdf681f424,33441320,0,0x0,8
tick,0x7ffdf681f424,33443223,0,0x0,8
tick,0x7ffdf681f424,33445306,0,0x0,8
tick,0x7ffdf681f424,33447330,0,0x0,8
tick,0x7ffdf681f424,33449301,0,0x0,8
tick,0x7ffdf681f424,33451252,0,0x0,8
tick,0x7ffdf681f424,33453339,0,0x0,8
tick,0x7ffdf681f424,33455292,0,0x0,8
tick,0x7ffdf681f424,33457280,0,0x0,8
tick,0x7ffdf681f424,33459189,0,0x0,8
tick,0x7ffdf681f424,33461265,0,0x0,8
tick,0x7ffdf681f424,33463267,0,0x0,8
tick,0x7ffdf681f424,33465268,0,0x0,8
tick,0x7ffdf681f424,33467231,0,0x0,8
tick,0x7ffdf681f424,33469190,0,0x0,8
tick,0x7ffdf681f424,33471118,0,0x0,8
tick,0x7ffdf681f424,33473054,0,0x0,8
tick,0x7ffdf681f424,33475190,0,0x0,8
tick,0x7ffdf681f424,33477148,0,0x0,8
tick,0x7ffdf681f424,33479201,0,0x0,8
tick,0x7ffdf681f424,33481140,0,0x0,8
tick,0x7ffdf681f424,33483211,0,0x0,8
tick,0x7ffdf681f424,33485122,0,0x0,8
tick,0x7ffdf681f424,33486995,0,0x0,8
tick,0x7ffdf681f424,33489174,0,0x0,8
tick,0x7ffdf681f424,33491183,0,0x0,8
tick,0x7ffdf681f424,33493113,0,0x0,8
tick,0x7ffdf681f424,33495067,0,0x0,8
tick,0x7ffdf681f424,33497194,0,0x0,8
tick,0x7ffdf681f424,33499172,0,0x0,8
tick,0x7ffdf681f424,33501159,0,0x0,8
tick,0x7ffdf681f424,33503157,0,0x0,8
tick,0x7ffdf681f424,33505165,0,0x0,8
tick,0x7ffdf681f424,33507147,0,0x0,8
tick,0x7ffdf681f424,33509143,0,0x0,8
tick,0x7ffdf681f424,33511026,0,0x0,8
tick,0x7ffdf681f424,33513036,0,0x0,8
tick,0x7ffdf681f424,33515034,0,0x0,8
tick,0x7ffdf681f424,33516991,0,0x0,8
tick,0x7ffdf681f424,33518943,0,0x0,8
tick,0x7ffdf681f424,33520922,0,0x0,8
tick,0x7ffdf681f424,33523000,0,0x0,8
tick,0x7ffdf681f424,33525012,0,0x0,8
tick,0x7ffdf681f424,33527001,0,0x0,8
tick,0x7ffdf681f424,33528908,0,0x0,8
tick,0x7ffdf681f424,33530872,0,0x0,8
tick,0x7ffdf681f424,33532900,0,0x0,8
tick,0x7ffdf681f424,33534985,0,0x0,8
tick,0x7ffdf681f424,33536882,0,0x0,8
tick,0x7ffdf681f424,33539062,0,0x0,8
tick,0x7ffdf681f424,33540887,0,0x0,8
tick,0x7ffdf681f424,33543077,0,0x0,8
tick,0x7ffdf681f424,33544939,0,0x0,8
tick,0x7ffdf681f424,33546901,0,0x0,8
tick,0x7ffdf681f424,33548858,0,0x0,8
tick,0x7ffdf681f424,33550911,0,0x0,8
tick,0x7ffdf681f424,33552908,0,0x0,8
tick,0x7ffdf681f424,33554872,0,0x0,8
tick,0x7ffdf681f424,33556873,0,0x0,8
tick,0x7ffdf681f424,33558869,0,0x0,8
tick,0x7ffdf681f424,33560868,0,0x0,8
tick,0x7ffdf681f424,33562868,0,0x0,8
tick,0x7ffdf681f424,33564849,0,0x0,8
tick,0x7ffdf681f424,33566847,0,0x0,8
tick,0x7ffdf681f424,33568800,0,0x0,8
tick,0x7ffdf681f424,33570760,0,0x0,8
tick,0x7ffdf681f424,33572796,0,0x0,8
tick,0x7ffdf681f424,33574890,0,0x0,8
tick,0x7ffdf681f424,33576801,0,0x0,8
tick,0x7ffdf681f424,33578900,0,0x0,8
tick,0x7ffdf681f424,33580868,0,0x0,8
tick,0x7ffdf681f424,33582945,0,0x0,8
tick,0x7ffdf681f424,33584794,0,0x0,8
tick,0x7ffdf681f424,33586831,0,0x0,8
tick,0x7ffdf681f424,33588942,0,0x0,8
tick,0x7ffdf681f424,33590922,0,0x0,8
tick,0x7ffdf681f424,33592951,0,0x0,8
tick,0x7ffdf681f424,33594865,0,0x0,8
tick,0x7ffdf681f424,33596817,0,0x0,8
tick,0x7ffdf681f424,33598785,0,0x0,8
tick,0x7ffdf681f424,33600765,0,0x0,8
tick,0x7ffdf681f424,33602751,0,0x0,8
tick,0x7ffdf681f424,33604710,0,0x0,8
tick,0x7ffdf681f424,33606670,0,0x0,8
tick,0x7ffdf681f424,33608759,0,0x0,8
tick,0x7ffdf681f424,33610765,0,0x0,8
tick,0x7ffdf681f424,33612712,0,0x0,8
tick,0x7ffdf681f424,33614723,0,0x0,8
tick,0x7ffdf681f424,33616712,0,0x0,8
tick,0x7ffdf681f424,33618678,0,0x0,8
tick,0x7ffdf681f424,33620684,0,0x0,8
tick,0x7ffdf681f424,33622738,0,0x0,8
tick,0x7ffdf681f424,33624816,0,0x0,8
tick,0x7ffdf681f424,33626702,0,0x0,8
tick,0x7ffdf681f424,33628667,0,0x0,8
tick,0x7ffdf681f424,33630685,0,0x0,8
tick,0x7ffdf681f424,33632773,0,0x0,8
tick,0x7ffdf681f424,33634679,0,0x0,8
tick,0x7ffdf681f424,33636670,0,0x0,8
tick,0x7ffdf681f424,33638744,0,0x0,8
tick,0x7ffdf681f424,33640780,0,0x0,8
tick,0x7ffdf681f424,33642775,0,0x0,8
tick,0x7ffdf681f424,33644666,0,0x0,8
tick,0x7ffdf681f424,33646769,0,0x0,8
tick,0x7ffdf681f424,33648586,0,0x0,8
tick,0x7ffdf681f424,33650701,0,0x0,8
tick,0x7ffdf681f424,33652672,0,0x0,8
tick,0x7ffdf681f424,33654682,0,0x0,8
tick,0x7ffdf681f424,33656683,0,0x0,8
tick,0x7ffdf681f424,33658738,0,0x0,8
tick,0x7ffdf681f424,33660634,0,0x0,8
tick,0x7ffdf681f424,33662524,0,0x0,8
tick,0x7ffdf681f424,33664654,0,0x0,8
tick,0x7ffdf681f424,33666670,0,0x0,8
tick,0x7ffdf681f424,33668636,0,0x0,8
tick,0x7ffdf681f424,33670574,0,0x0,8
tick,0x7ffdf681f424,33672713,0,0x0,8
tick,0x7ffdf681f424,33674651,0,0x0,8
tick,0x7ffdf681f424,33676592,0,0x0,8
tick,0x7ffdf681f424,33678612,0,0x0,8
tick,0x7ffdf681f424,33680697,0,0x0,8
tick,0x7ffdf681f424,33682668,0,0x0,8
tick,0x7ffdf681f424,33684676,0,0x0,8
tick,0x7ffdf681f424,33686692,0,0x0,8
tick,0x7ffdf681f424,33688658,0,0x0,8
tick,0x7ffdf681f424,33690635,0,0x0,8
tick,0x7ffdf681f424,33692572,0,0x0,8
tick,0x7ffdf681f424,33694595,0,0x0,8
tick,0x7ffdf681f424,33696592,0,0x0,8
tick,0x7ffdf681f424,33698638,0,0x0,8
tick,0x7ffdf681f424,33700632,0,0x0,8
tick,0x7ffdf681f424,33702611,0,0x0,8
tick,0x7ffdf681f424,33704623,0,0x0,8
tick,0x7ffdf681f424,33706553,0,0x0,8
tick,0x7ffdf681f424,33708607,0,0x0,8
tick,0x7ffdf681f424,33710636,0,0x0,8
tick,0x7ffdf681f424,33712605,0,0x0,8
tick,0x7ffdf681f424,33714602,0,0x0,8
tick,0x7ffdf681f424,33716600,0,0x0,8
tick,0x7ffdf681f424,33718410,0,0x0,8
tick,0x7ffdf681f424,33720524,0,0x0,8
tick,0x7ffdf681f424,33722574,0,0x0,8
tick,0x7ffdf681f424,33724566,0,0x0,8
tick,0x7ffdf681f424,33726441,0,0x0,8
tick,0x7ffdf681f424,33728577,0,0x0,8
tick,0x7ffdf681f424,33730549,0,0x0,8
tick,0x7ffdf681f424,33732542,0,0x0,8
tick,0x7ffdf681f424,33734551,0,0x0,8
tick,0x7ffdf681f424,33736532,0,0x0,8
tick,0x7ffdf681f424,33738489,0,0x0,8
tick,0x7ffdf681f424,33740505,0,0x0,8
tick,0x7ffdf681f424,33742524,0,0x0,8
tick,0x7ffdf681f424,33744517,0,0x0,8
tick,0x7ffdf681f424,33746509,0,0x0,8
tick,0x7ffdf681f424,33748519,0,0x0,8
tick,0x7ffdf681f424,33750494,0,0x0,8
tick,0x7ffdf681f424,33752468,0,0x0,8
tick,0x7ffdf681f424,33754490,0,0x0,8
tick,0x7ffdf681f424,33756478,0,0x0,8
tick,0x7ffdf681f424,33758371,0,0x0,8
tick,0x7ffdf681f424,33760486,0,0x0,8
tick,0x7ffdf681f424,33762423,0,0x0,8
tick,0x7ffdf681f424,33764464,0,0x0,8
tick,0x7ffdf681f424,33766455,0,0x0,8
tick,0x7ffdf681f424,33768454,0,0x0,8
tick,0x7ffdf681f424,33770450,0,0x0,8
tick,0x7ffdf681f424,33772439,0,0x0,8
tick,0x7ffdf681f424,33774451,0,0x0,8
tick,0x7ffdf681f424,33776438,0,0x0,8
tick,0x7ffdf681f424,33778421,0,0x0,8
tick,0x7ffdf681f424,33780427,0,0x0,8
tick,0x7ffdf681f424,33782360,0,0x0,8
tick,0x7ffdf681f424,33784383,0,0x0,8
tick,0x7ffdf681f424,33786404,0,0x0,8
tick,0x7ffdf681f424,33788393,0,0x0,8
tick,0x7ffdf681f424,33790391,0,0x0,8
tick,0x7ffdf681f424,33792386,0,0x0,8
tick,0x7ffdf681f424,33794388,0,0x0,8
tick,0x7ffdf681f424,33796375,0,0x0,8
tick,0x7ffdf681f424,33798375,0,0x0,8
tick,0x7ffdf681f424,33800367,0,0x0,8
tick,0x7ffdf681f424,33802361,0,0x0,8
tick,0x7ffdf681f424,33804403,0,0x0,8
tick,0x7ffdf681f424,33806284,0,0x0,8
tick,0x7ffdf681f424,33808346,0,0x0,8
tick,0x7ffdf681f424,33810341,0,0x0,8
tick,0x7ffdf681f424,33812330,0,0x0,8
tick,0x7ffdf681f424,33814341,0,0x0,8
tick,0x7ffdf681f424,33816252,0,0x0,8
tick,0x7ffdf681f424,33818316,0,0x0,8
tick,0x7ffdf681f424,33820326,0,0x0,8
tick,0x7ffdf681f424,33822305,0,0x0,8
tick,0x7ffdf681f424,33824300,0,0x0,8
tick,0x7ffdf681f424,33826320,0,0x0,8
tick,0x7ffdf681f424,33828294,0,0x0,8
tick,0x7ffdf681f424,33830284,0,0x0,8
tick,0x7ffdf681f424,33832280,0,0x0,8
tick,0x7ffdf681f424,33834295,0,0x0,8
tick,0x7ffdf681f424,33836270,0,0x0,8
tick,0x7ffdf681f424,33838270,0,0x0,8
tick,0x7ffdf681f424,33840260,0,0x0,8
tick,0x7ffdf681f424,33842267,0,0x0,8
tick,0x7ffdf681f424,33844250,0,0x0,8
tick,0x7ffdf681f424,33846249,0,0x0,8
tick,0x7ffdf681f424,33848086,0,0x0,8
tick,0x7ffdf681f424,33850242,0,0x0,8
tick,0x7ffdf681f424,33852225,0,0x0,8
tick,0x7ffdf681f424,33854113,0,0x0,8
tick,0x7ffdf681f424,33856255,0,0x0,8
tick,0x7ffdf681f424,33858209,0,0x0,8
tick,0x7ffdf681f424,33860104,0,0x0,8
tick,0x7ffdf681f424,33862222,0,0x0,8
tick,0x7ffdf681f424,33864190,0,0x0,8
tick,0x7ffdf681f424,33866194,0,0x0,8
tick,0x7ffdf681f424,33868058,0,0x0,8
tick,0x7ffdf681f424,33870138,0,0x0,8
tick,0x7ffdf681f424,33872185,0,0x0,8
tick,0x7ffdf681f424,33874175,0,0x0,8
tick,0x7ffdf681f424,33876168,0,0x0,8
tick,0x7ffdf681f424,33878195,0,0x0,8
tick,0x7ffdf681f424,33880042,0,0x0,8
tick,0x7ffdf681f424,33882157,0,0x0,8
tick,0x7ffdf681f424,33884140,0,0x0,8
tick,0x7ffdf681f424,33886166,0,0x0,8
tick,0x7ffdf681f424,33888130,0,0x0,8
tick,0x7ffdf681f424,33890131,0,0x0,8
tick,0x7ffdf681f424,33892077,0,0x0,8
tick,0x7ffdf681f424,33894051,0,0x0,8
tick,0x7ffdf681f424,33896106,0,0x0,8
tick,0x7ffdf681f424,33898113,0,0x0,8
tick,0x7ffdf681f424,33900101,0,0x0,8
tick,0x7ffdf681f424,33902116,0,0x0,8
tick,0x7ffdf681f424,33904097,0,0x0,8
tick,0x7ffdf681f424,33905973,0,0x0,8
tick,0x7ffdf681f424,33908078,0,0x0,8
tick,0x7ffdf681f424,33909975,0,0x0,8
tick,0x7ffdf681f424,33912074,0,0x0,8
tick,0x7ffdf681f424,33914025,0,0x0,8
tick,0x7ffdf681f424,33916051,0,0x0,8
tick,0x7ffdf681f424,33918080,0,0x0,8
tick,0x7ffdf681f424,33919942,0,0x0,8
tick,0x7ffdf681f424,33922038,0,0x0,8
tick,0x7ffdf681f424,33924030,0,0x0,8
tick,0x7ffdf681f424,33926016,0,0x0,8
tick,0x7ffdf681f424,33928019,0,0x0,8
tick,0x7ffdf681f424,33930019,0,0x0,8
tick,0x7ffdf681f424,33932010,0,0x0,8
tick,0x7ffdf681f424,33934006,0,0x0,8
tick,0x7ffdf681f424,33936054,0,0x0,8
tick,0x7ffdf681f424,33937981,0,0x0,8
tick,0x7ffdf681f424,33939993,0,0x0,8
tick,0x7ffdf681f424,33941879,0,0x0,8
tick,0x7ffdf681f424,33943984,0,0x0,8
tick,0x7ffdf681f424,33945972,0,0x0,8
tick,0x7ffdf681f424,33947966,0,0x0,8
tick,0x7ffdf681f424,33949965,0,0x0,8
tick,0x7ffdf681f424,33951958,0,0x0,8
tick,0x7ffdf681f424,33953951,0,0x0,8
tick,0x7ffdf681f424,33955949,0,0x0,8
tick,0x7ffdf681f424,33957961,0,0x0,8
tick,0x7ffdf681f424,33959936,0,0x0,8
tick,0x7ffdf681f424,33961938,0,0x0,8
tick,0x7ffdf681f424,33963926,0,0x0,8
tick,0x7ffdf681f424,33965923,0,0x0,8
tick,0x7ffdf681f424,33967813,0,0x0,8
tick,0x7ffdf681f424,33969818,0,0x0,8
tick,0x7ffdf681f424,33971895,0,0x0,8
tick,0x7ffdf681f424,33973900,0,0x0,8
tick,0x7ffdf681f424,33975892,0,0x0,8
tick,0x7ffdf681f424,33977887,0,0x0,8
tick,0x7ffdf681f424,33979838,0,0x0,8
tick,0x7ffdf681f424,33981879,0,0x0,8
tick,0x7ffdf681f424,33983866,0,0x0,8
tick,0x7ffdf681f424,33985866,0,0x0,8
tick,0x7ffdf681f424,33987855,0,0x0,8
tick,0x7ffdf681f424,33989862,0,0x0,8
tick,0x7ffdf681f424,33991857,0,0x0,8
tick,0x7ffdf681f424,33993842,0,0x0,8
tick,0x7ffdf681f424,33995836,0,0x0,8
tick,0x7ffdf681f424,33997848,0,0x0,8
tick,0x7ffdf681f424,33999819,0,0x0,8
tick,0x7ffdf681f424,34001878,0,0x0,8
tick,0x7ffdf681f424,34003848,0,0x0,8
tick,0x7ffdf681f424,34005806,0,0x0,8
tick,0x7ffdf681f424,34007819,0,0x0,8
tick,0x7ffdf681f424,34009808,0,0x0,8
tick,0x7ffdf681f424,34011811,0,0x0,8
tick,0x7ffdf681f424,34013798,0,0x0,8
tick,0x7ffdf681f424,34015802,0,0x0,8
tick,0x7ffdf681f424,34017817,0,0x0,8
tick,0x7ffdf681f424,34019751,0,0x0,8
tick,0x7ffdf681f424,34021791,0,0x0,8
tick,0x7ffdf681f424,34023721,0,0x0,8
tick,0x7ffdf681f424,34025771,0,0x0,8
tick,0x7ffdf681f424,34027770,0,0x0,8
tick,0x7ffdf681f424,34029760,0,0x0,8
tick,0x7ffdf681f424,34031741,0,0x0,8
tick,0x7ffdf681f424,34033743,0,0x0,8
tick,0x7ffdf681f424,34035752,0,0x0,8
tick,0x7ffdf681f424,34037763,0,0x0,8
tick,0x7ffdf681f424,34039731,0,0x0,8
tick,0x7ffdf681f424,34041739,0,0x0,8
tick,0x7ffdf681f424,34043716,0,0x0,8
tick,0x7ffdf681f424,34045756,0,0x0,8
tick,0x7ffdf681f424,34047663,0,0x0,8
tick,0x7ffdf681f424,34049698,0,0x0,8
tick,0x7ffdf681f424,34051699,0,0x0,8
tick,0x7ffdf681f424,34053692,0,0x0,8
tick,0x7ffdf681f424,34055638,0,0x0,8
tick,0x7ffdf681f424,34057666,0,0x0,8
tick,0x7ffdf681f424,34059676,0,0x0,8
tick,0x7ffdf681f424,34061670,0,0x0,8
tick,0x7ffdf681f424,34063659,0,0x0,8
tick,0x7ffdf681f424,34065592,0,0x0,8
tick,0x7ffdf681f424,34067602,0,0x0,8
tick,0x7ffdf681f424,34069646,0,0x0,8
tick,0x7ffdf681f424,34071648,0,0x0,8
tick,0x7ffdf681f424,34073636,0,0x0,8
tick,0x7ffdf681f424,34075630,0,0x0,8
tick,0x7ffdf681f424,34077658,0,0x0,8
tick,0x7ffdf681f424,34079627,0,0x0,8
tick,0x7ffdf681f424,34081611,0,0x0,8
tick,0x7ffdf681f424,34083611,0,0x0,8
tick,0x7ffdf681f424,34085613,0,0x0,8
tick,0x7ffdf681f424,34087603,0,0x0,8
tick,0x7ffdf681f424,34089674,0,0x0,8
tick,0x7ffdf681f424,34091574,0,0x0,8
tick,0x7ffdf681f424,34093581,0,0x0,8
tick,0x7ffdf681f424,34095574,0,0x0,8
tick,0x7ffdf681f424,34097573,0,0x0,8
tick,0x7ffdf681f424,34099585,0,0x0,8
tick,0x7ffdf681f424,34101532,0,0x0,8
tick,0x7ffdf681f424,34103560,0,0x0,8
tick,0x7ffdf681f424,34105550,0,0x0,8
tick,0x7ffdf681f424,34107547,0,0x0,8
tick,0x7ffdf681f424,34109540,0,0x0,8
tick,0x7ffdf681f424,34111604,0,0x0,8
tick,0x7ffdf681f424,34113536,0,0x0,8
tick,0x7ffdf681f424,34115528,0,0x0,8
tick,0x7ffdf681f424,34117476,0,0x0,8
tick,0x7ffdf681f424,34119524,0,0x0,8
tick,0x7ffdf681f424,34121523,0,0x0,8
tick,0x7ffdf681f424,34123516,0,0x0,8
tick,0x7ffdf681f424,34125500,0,0x0,8
tick,0x7ffdf681f424,34127494,0,0x0,8
tick,0x7ffdf681f424,34129379,0,0x0,8
tick,0x7ffdf681f424,34131487,0,0x0,8
tick,0x7ffdf681f424,34133511,0,0x0,8
tick,0x7ffdf681f424,34135478,0,0x0,8
tick,0x7ffdf681f424,34137463,0,0x0,8
tick,0x7ffdf681f424,34139460,0,0x0,8
tick,0x7ffdf681f424,34141425,0,0x0,8
tick,0x7ffdf681f424,34143464,0,0x0,8
tick,0x7ffdf681f424,34145449,0,0x0,8
tick,0x7ffdf681f424,34147431,0,0x0,8
tick,0x7ffdf681f424,34149435,0,0x0,8
tick,0x7ffdf681f424,34151432,0,0x0,8
tick,0x7ffdf681f424,34153422,0,0x0,8
tick,0x7ffdf681f424,34155263,0,0x0,8
tick,0x7ffdf681f424,34157429,0,0x0,8
tick,0x7ffdf681f424,34159403,0,0x0,8
tick,0x7ffdf681f424,34161398,0,0x0,8
tick,0x7ffdf681f424,34163396,0,0x0,8
tick,0x7ffdf681f424,34165407,0,0x0,8
tick,0x7ffdf681f424,34167395,0,0x0,8
tick,0x7ffdf681f424,34169379,0,0x0,8
tick,0x7ffdf681f424,34171379,0,0x0,8
tick,0x7ffdf681f424,34173366,0,0x0,8
tick,0x7ffdf681f424,34175362,0,0x0,8
tick,0x7ffdf681f424,34177429,0,0x0,8
tick,0x7ffdf681f424,34179358,0,0x0,8
tick,0x7ffdf681f424,34181346,0,0x0,8
tick,0x7ffdf681f424,34183332,0,0x0,8
tick,0x7ffdf681f424,34185335,0,0x0,8
tick,0x7ffdf681f424,34187343,0,0x0,8
tick,0x7ffdf681f424,34189331,0,0x0,8
tick,0x7ffdf681f424,34191176,0,0x0,8
tick,0x7ffdf681f424,34193313,0,0x0,8
tick,0x7ffdf681f424,34195310,0,0x0,8
tick,0x7ffdf681f424,34197301,0,0x0,8
tick,0x7ffdf681f424,34199371,0,0x0,8
tick,0x7ffdf681f424,34201302,0,0x0,8
tick,0x7ffdf681f424,34203286,0,0x0,8
tick,0x7ffdf681f424,34205281,0,0x0,8
tick,0x7ffdf681f424,34207276,0,0x0,8
tick,0x7ffdf681f424,34209295,0,0x0,8
tick,0x7ffdf681f424,34211274,0,0x0,8
tick,0x7ffdf681f424,34213261,0,0x0,8
tick,0x7ffdf681f424,34215257,0,0x0,8
tick,0x7ffdf681f424,34217165,0,0x0,8
tick,0x7ffdf681f424,34219246,0,0x0,8
tick,0x7ffdf681f424,34221193,0,0x0,8
tick,0x7ffdf681f424,34223249,0,0x0,8
tick,0x7ffdf681f424,34225140,0,0x0,8
tick,0x7ffdf681f424,34227230,0,0x0,8
tick,0x7ffdf681f424,34229223,0,0x0,8
tick,0x7ffdf681f424,34231245,0,0x0,8
tick,0x7ffdf681f424,34233218,0,0x0,8
tick,0x7ffdf681f424,34235204,0,0x0,8
tick,0x7ffdf681f424,34237205,0,0x0,8
tick,0x7ffdf681f424,34239198,0,0x0,8
tick,0x7ffdf681f424,34241185,0,0x0,8
tick,0x7ffdf681f424,34243249,0,0x0,8
tick,0x7ffdf681f424,34245186,0,0x0,8
tick,0x7ffdf681f424,34247167,0,0x0,8
tick,0x7ffdf681f424,34249166,0,0x0,8
tick,0x7ffdf681f424,34251168,0,0x0,8
tick,0x7ffdf681f424,34253127,0,0x0,8
tick,0x7ffdf681f424,34255159,0,0x0,8
tick,0x7ffdf681f424,34257149,0,0x0,8
tick,0x7ffdf681f424,34259145,0,0x0,8
tick,0x7ffdf681f424,34261131,0,0x0,8
tick,0x7ffdf681f424,34263137,0,0x0,8
tick,0x7ffdf681f424,34265085,0,0x0,8
tick,0x7ffdf681f424,34267125,0,0x0,8
tick,0x7ffdf681f424,34269125,0,0x0,8
tick,0x7ffdf681f424,34271121,0,0x0,8
tick,0x7ffdf681f424,34273101,0,0x0,8
tick,0x7ffdf681f424,34275108,0,0x0,8
tick,0x7ffdf681f424,34276996,0,0x0,8
tick,0x7ffdf681f424,34279085,0,0x0,8
tick,0x7ffdf681f424,34281078,0,0x0,8
tick,0x7ffdf681f424,34283078,0,0x0,8
tick,0x7ffdf681f424,34285073,0,0x0,8
tick,0x7ffdf681f424,34287109,0,0x0,8
tick,0x7ffdf681f424,34289073,0,0x0,8
tick,0x7ffdf681f424,34291059,0,0x0,8
tick,0x7ffdf681f424,34293058,0,0x0,8
tick,0x7ffdf681f424,34295048,0,0x0,8
tick,0x7ffdf681f424,34297102,0,0x0,8
tick,0x7ffdf681f424,34299038,0,0x0,8
tick,0x7ffdf681f424,34301034,0,0x0,8
tick,0x7ffdf681f424,34303028,0,0x0,8
tick,0x7ffdf681f424,34304981,0,0x0,8
tick,0x7ffdf681f424,34307022,0,0x0,8
tick,0x7ffdf681f424,34308959,0,0x0,8
tick,0x7ffdf681f424,34311011,0,0x0,8
tick,0x7ffdf681f424,34313003,0,0x0,8
tick,0x7ffdf681f424,34315006,0,0x0,8
tick,0x7ffdf681f424,34316983,0,0x0,8
tick,0x7ffdf681f424,34319007,0,0x0,8
tick,0x7ffdf681f424,34320975,0,0x0,8
tick,0x7ffdf681f424,34322973,0,0x0,8
tick,0x7ffdf681f424,34324957,0,0x0,8
tick,0x7ffdf681f424,34326952,0,0x0,8
tick,0x7ffdf681f424,34328950,0,0x0,8
tick,0x7ffdf681f424,34330993,0,0x0,8
tick,0x7ffdf681f424,34332941,0,0x0,8
tick,0x7ffdf681f424,34334929,0,0x0,8
tick,0x7ffdf681f424,34336927,0,0x0,8
tick,0x7ffdf681f424,34338917,0,0x0,8
tick,0x7ffdf681f424,34340909,0,0x0,8
tick,0x7ffdf681f424,34342834,0,0x0,8
tick,0x7ffdf681f424,34344910,0,0x0,8
tick,0x7ffdf681f424,34346916,0,0x0,8
tick,0x7ffdf681f424,34348885,0,0x0,8
tick,0x7ffdf681f424,34350893,0,0x0,8
tick,0x7ffdf681f424,34352891,0,0x0,8
tick,0x7ffdf681f424,34354881,0,0x0,8
tick,0x7ffdf681f424,34356866,0,0x0,8
tick,0x7ffdf681f424,34358863,0,0x0,8
tick,0x7ffdf681f424,34360867,0,0x0,8
tick,0x7ffdf681f424,34362882,0,0x0,8
tick,0x7ffdf681f424,34364863,0,0x0,8
tick,0x7ffdf681f424,34366804,0,0x0,8
tick,0x7ffdf681f424,34368836,0,0x0,8
tick,0x7ffdf681f424,34370832,0,0x0,8
tick,0x7ffdf681f424,34372759,0,0x0,8
tick,0x7ffdf681f424,34374776,0,0x0,8
tick,0x7ffdf681f424,34376795,0,0x0,8
tick,0x7ffdf681f424,34378706,0,0x0,8
tick,0x7ffdf681f424,34380813,0,0x0,8
tick,0x7ffdf681f424,34382788,0,0x0,8
tick,0x7ffdf681f424,34384847,0,0x0,8
tick,0x7ffdf681f424,34386693,0,0x0,8
tick,0x7ffdf681f424,34388792,0,0x0,8
tick,0x7ffdf681f424,34390782,0,0x0,8
tick,0x7ffdf681f424,34392777,0,0x0,8
tick,0x7ffdf681f424,34394773,0,0x0,8
tick,0x7ffdf681f424,34396788,0,0x0,8
tick,0x7ffdf681f424,34398765,0,0x0,8
tick,0x7ffdf681f424,34400757,0,0x0,8
tick,0x7ffdf681f424,34402758,0,0x0,8
tick,0x7ffdf681f424,34404644,0,0x0,8
tick,0x7ffdf681f424,34406758,0,0x0,8
tick,0x7ffdf681f424,34408739,0,0x0,8
tick,0x7ffdf681f424,34410726,0,0x0,8
tick,0x7ffdf681f424,34412723,0,0x0,8
tick,0x7ffdf681f424,34414720,0,0x0,8
tick,0x7ffdf681f424,34416712,0,0x0,8
tick,0x7ffdf681f424,34418662,0,0x0,8
tick,0x7ffdf681f424,34420705,0,0x0,8
tick,0x7ffdf681f424,34422694,0,0x0,8
tick,0x7ffdf681f424,34424711,0,0x0,8
tick,0x7ffdf681f424,34426590,0,0x0,8
tick,0x7ffdf681f424,34428720,0,0x0,8
tick,0x7ffdf681f424,34430693,0,0x0,8
tick,0x7ffdf681f424,34432672,0,0x0,8
tick,0x7ffdf681f424,34434667,0,0x0,8
tick,0x7ffdf681f424,34436661,0,0x0,8
tick,0x7ffdf681f424,34438650,0,0x0,8
tick,0x7ffdf681f424,34440568,0,0x0,8
tick,0x7ffdf681f424,34442646,0,0x0,8
tick,0x7ffdf681f424,34444642,0,0x0,8
tick,0x7ffdf681f424,34446628,0,0x0,8
tick,0x7ffdf681f424,34448628,0,0x0,8
tick,0x7ffdf681f424,34450628,0,0x0,8
tick,0x7ffdf681f424,34452616,0,0x0,8
tick,0x7ffdf681f424,34454613,0,0x0,8
tick,0x7ffdf681f424,34456607,0,0x0,8
tick,0x7ffdf681f424,34458478,0,0x0,8
tick,0x7ffdf681f424,34460499,0,0x0,8
tick,0x7ffdf681f424,34461656,0,0x0,8
tick,0x7ffdf681f424,34462750,0,0x0,8
tick,0x7ffdf681f424,34464774,0,0x0,8
tick,0x7ffdf681f424,34466688,0,0x0,8
tick,0x7ffdf681f424,34468702,0,0x0,8
tick,0x7ffdf681f424,34470689,0,0x0,8
tick,0x7ffdf681f424,34472682,0,0x0,8
tick,0x7ffdf681f424,34474684,0,0x0,8
tick,0x7ffdf681f424,34476674,0,0x0,8
tick,0x7ffdf681f424,34478666,0,0x0,8
tick,0x7ffdf681f424,34480658,0,0x0,8
tick,0x7ffdf681f424,34482664,0,0x0,8
tick,0x7ffdf681f424,34484662,0,0x0,8
tick,0x7ffdf681f424,34486644,0,0x0,8
tick,0x7ffdf681f424,34488639,0,0x0,8
tick,0x7ffdf681f424,34490641,0,0x0,8
tick,0x7ffdf681f424,34492628,0,0x0,8
tick,0x7ffdf681f424,34494634,0,0x0,8
tick,0x7ffdf681f424,34496620,0,0x0,8
tick,0x7ffdf681f424,34498617,0,0x0,8
tick,0x7ffdf681f424,34500605,0,0x0,8
tick,0x7ffdf681f424,34502599,0,0x0,8
tick,0x7ffdf681f424,34504608,0,0x0,8
tick,0x7ffdf681f424,34506598,0,0x0,8
tick,0x7ffdf681f424,34508580,0,0x0,8
tick,0x7ffdf681f424,34510580,0,0x0,8
tick,0x7ffdf681f424,34512577,0,0x0,8
tick,0x7ffdf681f424,34514575,0,0x0,8
tick,0x7ffdf681f424,34516570,0,0x0,8
tick,0x7ffdf681f424,34518585,0,0x0,8
tick,0x7ffdf681f424,34520561,0,0x0,8
tick,0x7ffdf681f424,34522565,0,0x0,8
tick,0x7ffdf681f424,34524551,0,0x0,8
tick,0x7ffdf681f424,34526553,0,0x0,8
tick,0x7ffdf681f424,34528547,0,0x0,8
tick,0x7ffdf681f424,34530532,0,0x0,8
tick,0x7ffdf681f424,34532521,0,0x0,8
tick,0x7ffdf681f424,34534529,0,0x0,8
tick,0x7ffdf681f424,34536513,0,0x0,8
tick,0x7ffdf681f424,34538506,0,0x0,8
tick,0x7ffdf681f424,34540513,0,0x0,8
tick,0x7ffdf681f424,34542497,0,0x0,8
tick,0x7ffdf681f424,34544498,0,0x0,8
tick,0x7ffdf681f424,34546492,0,0x0,8
tick,0x7ffdf681f424,34548486,0,0x0,8
tick,0x7ffdf681f424,34550525,0,0x0,8
tick,0x7ffdf681f424,34552470,0,0x0,8
tick,0x7ffdf681f424,34554469,0,0x0,8
tick,0x7ffdf681f424,34556465,0,0x0,8
tick,0x7ffdf681f424,34558465,0,0x0,8
tick,0x7ffdf681f424,34560464,0,0x0,8
tick,0x7ffdf681f424,34562477,0,0x0,8
tick,0x7ffdf681f424,34564442,0,0x0,8
tick,0x7ffdf681f424,34566442,0,0x0,8
tick,0x7ffdf681f424,34568433,0,0x0,8
tick,0x7ffdf681f424,34570434,0,0x0,8
tick,0x7ffdf681f424,34572423,0,0x0,8
tick,0x7ffdf681f424,34574410,0,0x0,8
tick,0x7ffdf681f424,34576415,0,0x0,8
tick,0x7ffdf681f424,34578410,0,0x0,8
tick,0x7ffdf681f424,34580400,0,0x0,8
tick,0x7ffdf681f424,34582399,0,0x0,8
tick,0x7ffdf681f424,34584278,0,0x0,8
tick,0x7ffdf681f424,34586387,0,0x0,8
tick,0x7ffdf681f424,34588380,0,0x0,8
tick,0x7ffdf681f424,34590372,0,0x0,8
tick,0x7ffdf681f424,34592369,0,0x0,8
tick,0x7ffdf681f424,34594373,0,0x0,8
tick,0x7ffdf681f424,34596362,0,0x0,8
tick,0x7ffdf681f424,34598350,0,0x0,8
tick,0x7ffdf681f424,34600350,0,0x0,8
tick,0x7ffdf681f424,34602352,0,0x0,8
tick,0x7ffdf681f424,34604337,0,0x0,8
tick,0x7ffdf681f424,34606363,0,0x0,8
tick,0x7ffdf681f424,34608327,0,0x0,8
tick,0x7ffdf681f424,34610321,0,0x0,8
tick,0x7ffdf681f424,34612310,0,0x0,8
tick,0x7ffdf681f424,34614307,0,0x0,8
tick,0x7ffdf681f424,34616307,0,0x0,8
tick,0x7ffdf681f424,34618299,0,0x0,8
tick,0x7ffdf681f424,34620308,0,0x0,8
tick,0x7ffdf681f424,34622287,0,0x0,8
tick,0x7ffdf681f424,34624283,0,0x0,8
tick,0x7ffdf681f424,34626279,0,0x0,8
tick,0x7ffdf681f424,34628306,0,0x0,8
tick,0x7ffdf681f424,34630272,0,0x0,8
tick,0x7ffdf681f424,34632211,0,0x0,8
tick,0x7ffdf681f424,34634250,0,0x0,8
tick,0x7ffdf681f424,34636308,0,0x0,8
tick,0x7ffdf681f424,34638247,0,0x0,8
tick,0x7ffdf681f424,34640242,0,0x0,8
tick,0x7ffdf681f424,34642236,0,0x0,8
tick,0x7ffdf681f424,34644230,0,0x0,8
tick,0x7ffdf681f424,34646224,0,0x0,8
tick,0x7ffdf681f424,34648222,0,0x0,8
tick,0x7ffdf681f424,34650219,0,0x0,8
tick,0x7ffdf681f424,34652216,0,0x0,8
tick,0x7ffdf681f424,34654201,0,0x0,8
tick,0x7ffdf681f424,34656199,0,0x0,8
tick,0x7ffdf681f424,34658247,0,0x0,8
tick,0x7ffdf681f424,34660188,0,0x0,8
tick,0x7ffdf681f424,34662187,0,0x0,8
tick,0x7ffdf681f424,34664177,0,0x0,8
tick,0x7ffdf681f424,34666169,0,0x0,8
tick,0x7ffdf681f424,34668158,0,0x0,8
tick,0x7ffdf681f424,34670162,0,0x0,8
tick,0x7ffdf681f424,34672177,0,0x0,8
tick,0x7ffdf681f424,34674150,0,0x0,8
tick,0x7ffdf681f424,34676145,0,0x0,8
tick,0x7ffdf681f424,34678157,0,0x0,8
tick,0x7ffdf681f424,34680139,0,0x0,8
tick,0x7ffdf681f424,34682130,0,0x0,8
tick,0x7ffdf681f424,34684118,0,0x0,8
tick,0x7ffdf681f424,34686116,0,0x0,8
tick,0x7ffdf681f424,34688119,0,0x0,8
tick,0x7ffdf681f424,34690099,0,0x0,8
tick,0x7ffdf681f424,34692103,0,0x0,8
tick,0x7ffdf681f424,34694102,0,0x0,8
tick,0x7ffdf681f424,34696101,0,0x0,8
tick,0x7ffdf681f424,34698083,0,0x0,8
tick,0x7ffdf681f424,34700084,0,0x0,8
tick,0x7ffdf681f424,34702075,0,0x0,8
tick,0x7ffdf681f424,34704083,0,0x0,8
tick,0x7ffdf681f424,34706059,0,0x0,8
tick,0x7ffdf681f424,34708054,0,0x0,8
tick,0x7ffdf681f424,34710054,0,0x0,8
tick,0x7ffdf681f424,34712050,0,0x0,8
tick,0x7ffdf681f424,34714057,0,0x0,8
tick,0x7ffdf681f424,34716047,0,0x0,8
tick,0x7ffdf681f424,34718038,0,0x0,8
tick,0x7ffdf681f424,34720027,0,0x0,8
tick,0x7ffdf681f424,34722020,0,0x0,8
tick,0x7ffdf681f424,34724020,0,0x0,8
tick,0x7ffdf681f424,34726013,0,0x0,8
tick,0x7ffdf681f424,34728006,0,0x0,8
tick,0x7ffdf681f424,34729998,0,0x0,8
tick,0x7ffdf681f424,34731994,0,0x0,8
tick,0x7ffdf681f424,34733990,0,0x0,8
tick,0x7ffdf681f424,34735996,0,0x0,8
tick,0x7ffdf681f424,34738004,0,0x0,8
tick,0x7ffdf681f424,34739964,0,0x0,8
tick,0x7ffdf681f424,34741963,0,0x0,8
tick,0x7ffdf681f424,34743963,0,0x0,8
tick,0x7ffdf681f424,34745957,0,0x0,8
tick,0x7ffdf681f424,34747959,0,0x0,8
tick,0x7ffdf681f424,34749953,0,0x0,8
tick,0x7ffdf681f424,34751936,0,0x0,8
tick,0x7ffdf681f424,34753913,0,0x0,8
tick,0x7ffdf681f424,34755924,0,0x0,8
tick,0x7ffdf681f424,34757935,0,0x0,8
tick,0x7ffdf681f424,34759927,0,0x0,8
tick,0x7ffdf681f424,34761912,0,0x0,8
tick,0x7ffdf681f424,34763909,0,0x0,8
tick,0x7ffdf681f424,34765898,0,0x0,8
tick,0x7ffdf681f424,34767899,0,0x0,8
tick,0x7ffdf681f424,34769895,0,0x0,8
tick,0x7ffdf681f424,34771882,0,0x0,8
tick,0x7ffdf681f424,34773883,0,0x0,8
tick,0x7ffdf681f424,34775884,0,0x0,8
tick,0x7ffdf681f424,34777898,0,0x0,8
tick,0x7ffdf681f424,34779864,0,0x0,8
tick,0x7ffdf681f424,34781897,0,0x0,8
tick,0x7ffdf681f424,34783856,0,0x0,8
tick,0x7ffdf681f424,34785849,0,0x0,8
tick,0x7ffdf681f424,34787838,0,0x0,8
tick,0x7ffdf681f424,34789852,0,0x0,8
tick,0x7ffdf681f424,34791837,0,0x0,8
tick,0x7ffdf681f424,34793829,0,0x0,8
tick,0x7ffdf681f424,34795873,0,0x0,8
tick,0x7ffdf681f424,34797819,0,0x0,8
tick,0x7ffdf681f424,34799808,0,0x0,8
tick,0x7ffdf681f424,34801848,0,0x0,8
tick,0x7ffdf681f424,34803823,0,0x0,8
tick,0x7ffdf681f424,34805797,0,0x0,8
tick,0x7ffdf681f424,34807795,0,0x0,8
tick,0x7ffdf681f424,34809789,0,0x0,8
tick,0x7ffdf681f424,34811790,0,0x0,8
tick,0x7ffdf681f424,34813704,0,0x0,8
tick,0x7ffdf681f424,34815772,0,0x0,8
tick,0x7ffdf681f424,34817658,0,0x0,8
tick,0x7ffdf681f424,34819642,0,0x0,8
tick,0x7ffdf681f424,34821772,0,0x0,8
tick,0x7ffdf681f424,34823807,0,0x0,8
tick,0x7ffdf681f424,34825774,0,0x0,8
tick,0x7ffdf681f424,34827745,0,0x0,8
tick,0x7ffdf681f424,34829734,0,0x0,8
tick,0x7ffdf681f424,34831725,0,0x0,8
tick,0x7ffdf681f424,34833730,0,0x0,8
tick,0x7ffdf681f424,34835727,0,0x0,8
tick,0x7ffdf681f424,34837713,0,0x0,8
tick,0x7ffdf681f424,34839706,0,0x0,8
tick,0x7ffdf681f424,34841703,0,0x0,8
tick,0x7ffdf681f424,34843698,0,0x0,8
tick,0x7ffdf681f424,34845699,0,0x0,8
tick,0x7ffdf681f424,34847689,0,0x0,8
tick,0x7ffdf681f424,34849683,0,0x0,8
tick,0x7ffdf681f424,34851549,0,0x0,8
tick,0x7ffdf681f424,34853677,0,0x0,8
tick,0x7ffdf681f424,34855681,0,0x0,8
tick,0x7ffdf681f424,34857664,0,0x0,8
tick,0x7ffdf681f424,34859657,0,0x0,8
tick,0x7ffdf681f424,34861644,0,0x0,8
tick,0x7ffdf681f424,34863638,0,0x0,8
tick,0x7ffdf681f424,34865639,0,0x0,8
tick,0x7ffdf681f424,34867638,0,0x0,8
tick,0x7ffdf681f424,34869620,0,0x0,8
tick,0x7ffdf681f424,34871620,0,0x0,8
tick,0x7ffdf681f424,34873616,0,0x0,8
tick,0x7ffdf681f424,34875607,0,0x0,8
tick,0x7ffdf681f424,34877647,0,0x0,8
tick,0x7ffdf681f424,34879608,0,0x0,8
tick,0x7ffdf681f424,34881586,0,0x0,8
tick,0x7ffdf681f424,34883587,0,0x0,8
tick,0x7ffdf681f424,34885590,0,0x0,8
tick,0x7ffdf681f424,34887573,0,0x0,8
tick,0x7ffdf681f424,34889567,0,0x0,8
tick,0x7ffdf681f424,34891468,0,0x0,8
tick,0x7ffdf681f424,34893563,0,0x0,8
tick,0x7ffdf681f424,34895557,0,0x0,8
tick,0x7ffdf681f424,34897552,0,0x0,8
tick,0x7ffdf681f424,34899556,0,0x0,8
tick,0x7ffdf681f424,34901550,0,0x0,8
tick,0x7ffdf681f424,34903530,0,0x0,8
tick,0x7ffdf681f424,34905525,0,0x0,8
tick,0x7ffdf681f424,34907424,0,0x0,8
tick,0x7ffdf681f424,34909527,0,0x0,8
tick,0x7ffdf681f424,34911523,0,0x0,8
tick,0x7ffdf681f424,34913400,0,0x0,8
tick,0x7ffdf681f424,34915392,0,0x0,8
tick,0x7ffdf681f424,34917509,0,0x0,8
tick,0x7ffdf681f424,34919379,0,0x0,8
tick,0x7ffdf681f424,34921495,0,0x0,8
tick,0x7ffdf681f424,34923489,0,0x0,8
tick,0x7ffdf681f424,34925478,0,0x0,8
tick,0x7ffdf681f424,34927467,0,0x0,8
tick,0x7ffdf681f424,34929468,0,0x0,8
tick,0x7ffdf681f424,34931462,0,0x0,8
tick,0x7ffdf681f424,34933547,0,0x0,8
tick,0x7ffdf681f424,34935484,0,0x0,8
tick,0x7ffdf681f424,34937453,0,0x0,8
tick,0x7ffdf681f424,34939440,0,0x0,8
tick,0x7ffdf681f424,34941443,0,0x0,8
tick,0x7ffdf681f424,34943333,0,0x0,8
tick,0x7ffdf681f424,34945430,0,0x0,8
tick,0x7ffdf681f424,34947416,0,0x0,8
tick,0x7ffdf681f424,34949418,0,0x0,8
tick,0x7ffdf681f424,34951408,0,0x0,8
tick,0x7ffdf681f424,34953396,0,0x0,8
tick,0x7ffdf681f424,34955440,0,0x0,8
tick,0x7ffdf681f424,34957418,0,0x0,8
tick,0x7ffdf681f424,34959414,0,0x0,8
tick,0x7ffdf681f424,34961381,0,0x0,8
tick,0x7ffdf681f424,34963383,0,0x0,8
tick,0x7ffdf681f424,34965381,0,0x0,8
tick,0x7ffdf681f424,34967372,0,0x0,8
tick,0x7ffdf681f424,34969362,0,0x0,8
tick,0x7ffdf681f424,34971364,0,0x0,8
tick,0x7ffdf681f424,34973365,0,0x0,8
tick,0x7ffdf681f424,34975338,0,0x0,8
tick,0x7ffdf681f424,34977340,0,0x0,8
tick,0x7ffdf681f424,34979340,0,0x0,8
tick,0x7ffdf681f424,34981334,0,0x0,8
tick,0x7ffdf681f424,34983323,0,0x0,8
tick,0x7ffdf681f424,34985311,0,0x0,8
tick,0x7ffdf681f424,34987209,0,0x0,8
tick,0x7ffdf681f424,34989309,0,0x0,8
tick,0x7ffdf681f424,34991296,0,0x0,8
tick,0x7ffdf681f424,34993277,0,0x0,8
tick,0x7ffdf681f424,34995281,0,0x0,8
tick,0x7ffdf681f424,34997317,0,0x0,8
tick,0x7ffdf681f424,34999283,0,0x0,8
tick,0x7ffdf681f424,35001277,0,0x0,8
tick,0x7ffdf681f424,35003271,0,0x0,8
tick,0x7ffdf681f424,35005271,0,0x0,8
tick,0x7ffdf681f424,35007259,0,0x0,8
tick,0x7ffdf681f424,35009248,0,0x0,8
tick,0x7ffdf681f424,35011255,0,0x0,8
tick,0x7ffdf681f424,35013133,0,0x0,8
tick,0x7ffdf681f424,35015135,0,0x0,8
tick,0x7ffdf681f424,35017230,0,0x0,8
tick,0x7ffdf681f424,35019219,0,0x0,8
tick,0x7ffdf681f424,35021225,0,0x0,8
tick,0x7ffdf681f424,35023198,0,0x0,8
tick,0x7ffdf681f424,35025214,0,0x0,8
tick,0x7ffdf681f424,35027157,0,0x0,8
tick,0x7ffdf681f424,35029210,0,0x0,8
tick,0x7ffdf681f424,35031084,0,0x0,8
tick,0x7ffdf681f424,35033192,0,0x0,8
tick,0x7ffdf681f424,35035107,0,0x0,8
tick,0x7ffdf681f424,35037188,0,0x0,8
tick,0x7ffdf681f424,35039094,0,0x0,8
tick,0x7ffdf681f424,35041225,0,0x0,8
tick,0x7ffdf681f424,35043165,0,0x0,8
tick,0x7ffdf681f424,35045164,0,0x0,8
tick,0x7ffdf681f424,35047040,0,0x0,8
tick,0x7ffdf681f424,35049036,0,0x0,8
tick,0x7ffdf681f424,35051028,0,0x0,8
tick,0x7ffdf681f424,35053026,0,0x0,8
tick,0x7ffdf681f424,35055030,0,0x0,8
tick,0x7ffdf681f424,35057020,0,0x0,8
tick,0x7ffdf681f424,35059025,0,0x0,8
tick,0x7ffdf681f424,35061026,0,0x0,8
tick,0x7ffdf681f424,35062999,0,0x0,8
tick,0x7ffdf681f424,35064995,0,0x0,8
tick,0x7ffdf681f424,35066986,0,0x0,8
tick,0x7ffdf681f424,35068982,0,0x0,8
tick,0x7ffdf681f424,35070985,0,0x0,8
tick,0x7ffdf681f424,35073029,0,0x0,8
tick,0x7ffdf681f424,35075030,0,0x0,8
tick,0x7ffdf681f424,35076982,0,0x0,8
tick,0x7ffdf681f424,35079062,0,0x0,8
tick,0x7ffdf681f424,35080967,0,0x0,8
tick,0x7ffdf681f424,35082945,0,0x0,8
tick,0x7ffdf681f424,35084989,0,0x0,8
tick,0x7ffdf681f424,35087046,0,0x0,8
tick,0x7ffdf681f424,35089066,0,0x0,8
tick,0x7ffdf681f424,35091030,0,0x0,8
tick,0x7ffdf681f424,35093025,0,0x0,8
tick,0x7ffdf681f424,35095025,0,0x0,8
tick,0x7ffdf681f424,35097028,0,0x0,8
tick,0x7ffdf681f424,35099021,0,0x0,8
tick,0x7ffdf681f424,35101007,0,0x0,8
tick,0x7ffdf681f424,35102998,0,0x0,8
tick,0x7ffdf681f424,35104990,0,0x0,8
tick,0x7ffdf681f424,35106996,0,0x0,8
tick,0x7ffdf681f424,35108990,0,0x0,8
tick,0x7ffdf681f424,35110988,0,0x0,8
tick,0x7ffdf681f424,35112974,0,0x0,8
tick,0x7ffdf681f424,35114975,0,0x0,8
tick,0x7ffdf681f424,35116966,0,0x0,8
tick,0x7ffdf681f424,35118970,0,0x0,8
tick,0x7ffdf681f424,35120959,0,0x0,8
tick,0x7ffdf681f424,35122957,0,0x0,8
tick,0x7ffdf681f424,35124932,0,0x0,8
tick,0x7ffdf681f424,35126828,0,0x0,8
tick,0x7ffdf681f424,35128922,0,0x0,8
tick,0x7ffdf681f424,35130925,0,0x0,8
tick,0x7ffdf681f424,35132919,0,0x0,8
tick,0x7ffdf681f424,35134920,0,0x0,8
tick,0x7ffdf681f424,35136906,0,0x0,8
tick,0x7ffdf681f424,35138903,0,0x0,8
tick,0x7ffdf681f424,35140904,0,0x0,8
tick,0x7ffdf681f424,35142900,0,0x0,8
tick,0x7ffdf681f424,35144879,0,0x0,8
tick,0x7ffdf681f424,35146777,0,0x0,8
tick,0x7ffdf681f424,35148833,0,0x0,8
tick,0x7ffdf681f424,35150865,0,0x0,8
tick,0x7ffdf681f424,35152832,0,0x0,8
tick,0x7ffdf681f424,35154869,0,0x0,8
tick,0x7ffdf681f424,35156835,0,0x0,8
tick,0x7ffdf681f424,35158829,0,0x0,8
tick,0x7ffdf681f424,35160893,0,0x0,8
tick,0x7ffdf681f424,35162878,0,0x0,8
tick,0x7ffdf681f424,35164891,0,0x0,8
tick,0x7ffdf681f424,35166833,0,0x0,8
tick,0x7ffdf681f424,35168714,0,0x0,8
tick,0x7ffdf681f424,35170862,0,0x0,8
tick,0x7ffdf681f424,35172820,0,0x0,8
tick,0x7ffdf681f424,35174795,0,0x0,8
tick,0x7ffdf681f424,35176700,0,0x0,8
tick,0x7ffdf681f424,35178819,0,0x0,8
tick,0x7ffdf681f424,35180796,0,0x0,8
tick,0x7ffdf681f424,35182790,0,0x0,8
tick,0x7ffdf681f424,35184779,0,0x0,8
tick,0x7ffdf681f424,35186840,0,0x0,8
tick,0x7ffdf681f424,35188797,0,0x0,8
tick,0x7ffdf681f424,35190766,0,0x0,8
tick,0x7ffdf681f424,35192763,0,0x0,8
tick,0x7ffdf681f424,35194749,0,0x0,8
tick,0x7ffdf681f424,35196746,0,0x0,8
tick,0x7ffdf681f424,35198631,0,0x0,8
tick,0x7ffdf681f424,35200736,0,0x0,8
tick,0x7ffdf681f424,35202668,0,0x0,8
tick,0x7ffdf681f424,35204689,0,0x0,8
tick,0x7ffdf681f424,35206666,0,0x0,8
tick,0x7ffdf681f424,35208707,0,0x0,8
tick,0x7ffdf681f424,35210699,0,0x0,8
tick,0x7ffdf681f424,35212663,0,0x0,8
tick,0x7ffdf681f424,35214593,0,0x0,8
tick,0x7ffdf681f424,35216579,0,0x0,8
tick,0x7ffdf681f424,35218550,0,0x0,8
tick,0x7ffdf681f424,35220580,0,0x0,8
tick,0x7ffdf681f424,35222638,0,0x0,8
tick,0x7ffdf681f424,35224623,0,0x0,8
tick,0x7ffdf681f424,35226534,0,0x0,8
tick,0x7ffdf681f424,35228632,0,0x0,8
tick,0x7ffdf681f424,35230633,0,0x0,8
tick,0x7ffdf681f424,35232630,0,0x0,8
tick,0x7ffdf681f424,35234643,0,0x0,8
tick,0x7ffdf681f424,35236644,0,0x0,8
tick,0x7ffdf681f424,35238631,0,0x0,8
tick,0x7ffdf681f424,35240624,0,0x0,8
tick,0x7ffdf681f424,35242631,0,0x0,8
tick,0x7ffdf681f424,35244600,0,0x0,8
tick,0x7ffdf681f424,35246705,0,0x0,8
tick,0x7ffdf681f424,35248623,0,0x0,8
tick,0x7ffdf681f424,35250598,0,0x0,8
tick,0x7ffdf681f424,35252496,0,0x0,8
tick,0x7ffdf681f424,35254483,0,0x0,8
tick,0x7ffdf681f424,35256493,0,0x0,8
tick,0x7ffdf681f424,35258498,0,0x0,8
tick,0x7ffdf681f424,35260465,0,0x0,8
tick,0x7ffdf681f424,35262503,0,0x0,8
tick,0x7ffdf681f424,35264569,0,0x0,8
tick,0x7ffdf681f424,35266556,0,0x0,8
tick,0x7ffdf681f424,35268443,0,0x0,8
tick,0x7ffdf681f424,35270469,0,0x0,8
tick,0x7ffdf681f424,35272582,0,0x0,8
tick,0x7ffdf681f424,35274530,0,0x0,8
tick,0x7ffdf681f424,35276534,0,0x0,8
tick,0x7ffdf681f424,35278416,0,0x0,8
tick,0x7ffdf681f424,35280407,0,0x0,8
tick,0x7ffdf681f424,35282518,0,0x0,8
tick,0x7ffdf681f424,35284509,0,0x0,8
tick,0x7ffdf681f424,35286395,0,0x0,8
tick,0x7ffdf681f424,35288500,0,0x0,8
tick,0x7ffdf681f424,35290494,0,0x0,8
tick,0x7ffdf681f424,35292488,0,0x0,8
tick,0x7ffdf681f424,35294405,0,0x0,8
tick,0x7ffdf681f424,35296491,0,0x0,8
tick,0x7ffdf681f424,35298475,0,0x0,8
tick,0x7ffdf681f424,35300469,0,0x0,8
tick,0x7ffdf681f424,35302357,0,0x0,8
tick,0x7ffdf681f424,35304459,0,0x0,8
tick,0x7ffdf681f424,35306450,0,0x0,8
tick,0x7ffdf681f424,35308453,0,0x0,8
tick,0x7ffdf681f424,35310330,0,0x0,8
tick,0x7ffdf681f424,35312322,0,0x0,8
tick,0x7ffdf681f424,35314314,0,0x0,8
tick,0x7ffdf681f424,35316309,0,0x0,8
tick,0x7ffdf681f424,35318276,0,0x0,8
tick,0x7ffdf681f424,35320278,0,0x0,8
tick,0x7ffdf681f424,35322266,0,0x0,8
tick,0x7ffdf681f424,35324319,0,0x0,8
tick,0x7ffdf681f424,35326395,0,0x0,8
tick,0x7ffdf681f424,35328280,0,0x0,8
tick,0x7ffdf681f424,35330364,0,0x0,8
tick,0x7ffdf681f424,35332381,0,0x0,8
tick,0x7ffdf681f424,35334375,0,0x0,8
tick,0x7ffdf681f424,35336367,0,0x0,8
tick,0x7ffdf681f424,35338322,0,0x0,8
tick,0x7ffdf681f424,35340377,0,0x0,8
tick,0x7ffdf681f424,35342354,0,0x0,8
tick,0x7ffdf681f424,35344346,0,0x0,8
tick,0x7ffdf681f424,35346347,0,0x0,8
tick,0x7ffdf681f424,35348340,0,0x0,8
tick,0x7ffdf681f424,35350350,0,0x0,8
tick,0x7ffdf681f424,35352366,0,0x0,8
tick,0x7ffdf681f424,35354325,0,0x0,8
tick,0x7ffdf681f424,35356316,0,0x0,8
tick,0x7ffdf681f424,35358314,0,0x0,8
tick,0x7ffdf681f424,35360206,0,0x0,8
tick,0x7ffdf681f424,35362314,0,0x0,8
tick,0x7ffdf681f424,35364300,0,0x0,8
tick,0x7ffdf681f424,35366290,0,0x0,8
tick,0x7ffdf681f424,35368403,0,0x0,8
tick,0x7ffdf681f424,35370306,0,0x0,8
tick,0x7ffdf681f424,35372276,0,0x0,8
tick,0x7ffdf681f424,35374266,0,0x0,8
tick,0x7ffdf681f424,35376261,0,0x0,8
tick,0x7ffdf681f424,35378254,0,0x0,8
tick,0x7ffdf681f424,35380250,0,0x0,8
tick,0x7ffdf681f424,35382259,0,0x0,8
tick,0x7ffdf681f424,35384239,0,0x0,8
tick,0x7ffdf681f424,35386137,0,0x0,8
tick,0x7ffdf681f424,35388128,0,0x0,8
tick,0x7ffdf681f424,35390223,0,0x0,8
tick,0x7ffdf681f424,35392224,0,0x0,8
tick,0x7ffdf681f424,35394173,0,0x0,8
tick,0x7ffdf681f424,35396110,0,0x0,8
tick,0x7ffdf681f424,35398103,0,0x0,8
tick,0x7ffdf681f424,35400095,0,0x0,8
tick,0x7ffdf681f424,35402143,0,0x0,8
tick,0x7ffdf681f424,35404091,0,0x0,8
tick,0x7ffdf681f424,35406098,0,0x0,8
tick,0x7ffdf681f424,35408073,0,0x0,8
tick,0x7ffdf681f424,35410149,0,0x0,8
tick,0x7ffdf681f424,35412063,0,0x0,8
tick,0x7ffdf681f424,35414138,0,0x0,8
tick,0x7ffdf681f424,35416052,0,0x0,8
tick,0x7ffdf681f424,35418079,0,0x0,8
tick,0x7ffdf681f424,35420043,0,0x0,8
tick,0x7ffdf681f424,35422042,0,0x0,8
tick,0x7ffdf681f424,35424028,0,0x0,8
tick,0x7ffdf681f424,35426034,0,0x0,8
tick,0x7ffdf681f424,35428028,0,0x0,8
tick,0x7ffdf681f424,35430021,0,0x0,8
tick,0x7ffdf681f424,35432020,0,0x0,8
tick,0x7ffdf681f424,35434017,0,0x0,8
tick,0x7ffdf681f424,35436022,0,0x0,8
tick,0x7ffdf681f424,35437964,0,0x0,8
tick,0x7ffdf681f424,35439975,0,0x0,8
tick,0x7ffdf681f424,35441984,0,0x0,8
tick,0x7ffdf681f424,35443982,0,0x0,8
tick,0x7ffdf681f424,35445971,0,0x0,8
tick,0x7ffdf681f424,35448033,0,0x0,8
tick,0x7ffdf681f424,35450015,0,0x0,8
tick,0x7ffdf681f424,35452033,0,0x0,8
tick,0x7ffdf681f424,35453956,0,0x0,8
tick,0x7ffdf681f424,35456042,0,0x0,8
tick,0x7ffdf681f424,35457994,0,0x0,8
tick,0x7ffdf681f424,35459900,0,0x0,8
tick,0x7ffdf681f424,35461993,0,0x0,8
tick,0x7ffdf681f424,35463918,0,0x0,8
tick,0x7ffdf681f424,35465914,0,0x0,8
tick,0x7ffdf681f424,35467914,0,0x0,8
tick,0x7ffdf681f424,35469919,0,0x0,8
tick,0x7ffdf681f424,35471925,0,0x0,8
tick,0x7ffdf681f424,35473896,0,0x0,8
tick,0x7ffdf681f424,35475886,0,0x0,8
tick,0x7ffdf681f424,35477919,0,0x0,8
tick,0x7ffdf681f424,35479937,0,0x0,8
tick,0x7ffdf681f424,35481849,0,0x0,8
tick,0x7ffdf681f424,35483896,0,0x0,8
tick,0x7ffdf681f424,35485871,0,0x0,8
tick,0x7ffdf681f424,35487858,0,0x0,8
tick,0x7ffdf681f424,35489850,0,0x0,8
tick,0x7ffdf681f424,35491855,0,0x0,8
tick,0x7ffdf681f424,35493868,0,0x0,8
tick,0x7ffdf681f424,35495852,0,0x0,8
tick,0x7ffdf681f424,35497903,0,0x0,8
tick,0x7ffdf681f424,35499836,0,0x0,8
tick,0x7ffdf681f424,35501865,0,0x0,8
tick,0x7ffdf681f424,35503823,0,0x0,8
tick,0x7ffdf681f424,35505806,0,0x0,8
tick,0x7ffdf681f424,35507816,0,0x0,8
tick,0x7ffdf681f424,35509833,0,0x0,8
tick,0x7ffdf681f424,35511842,0,0x0,8
tick,0x7ffdf681f424,35513839,0,0x0,8
tick,0x7ffdf681f424,35515840,0,0x0,8
tick,0x7ffdf681f424,35517828,0,0x0,8
tick,0x7ffdf681f424,35519828,0,0x0,8
tick,0x7ffdf681f424,35521835,0,0x0,8
tick,0x7ffdf681f424,35523865,0,0x0,8
tick,0x7ffdf681f424,35525889,0,0x0,8
tick,0x7ffdf681f424,35527880,0,0x0,8
tick,0x7ffdf681f424,35529868,0,0x0,8
tick,0x7ffdf681f424,35531843,0,0x0,8
tick,0x7ffdf681f424,35533829,0,0x0,8
tick,0x7ffdf681f424,35535805,0,0x0,8
tick,0x7ffdf681f424,35537842,0,0x0,8
tick,0x7ffdf681f424,35539822,0,0x0,8
tick,0x7ffdf681f424,35541821,0,0x0,8
tick,0x7ffdf681f424,35543719,0,0x0,8
tick,0x7ffdf681f424,35545812,0,0x0,8
tick,0x7ffdf681f424,35547809,0,0x0,8
tick,0x7ffdf681f424,35549831,0,0x0,8
tick,0x7ffdf681f424,35551768,0,0x0,8
tick,0x7ffdf681f424,35553837,0,0x0,8
tick,0x7ffdf681f424,35555798,0,0x0,8
tick,0x7ffdf681f424,35557759,0,0x0,8
tick,0x7ffdf681f424,35559788,0,0x0,8
tick,0x7ffdf681f424,35561784,0,0x0,8
tick,0x7ffdf681f424,35563766,0,0x0,8
tick,0x7ffdf681f424,35565757,0,0x0,8
tick,0x7ffdf681f424,35567755,0,0x0,8
tick,0x7ffdf681f424,35569748,0,0x0,8
tick,0x7ffdf681f424,35571750,0,0x0,8
tick,0x7ffdf681f424,35573745,0,0x0,8
tick,0x7ffdf681f424,35575743,0,0x0,8
tick,0x7ffdf681f424,35577740,0,0x0,8
tick,0x7ffdf681f424,35579756,0,0x0,8
tick,0x7ffdf681f424,35581736,0,0x0,8
tick,0x7ffdf681f424,35583721,0,0x0,8
tick,0x7ffdf681f424,35585629,0,0x0,8
tick,0x7ffdf681f424,35587713,0,0x0,8
tick,0x7ffdf681f424,35589708,0,0x0,8
tick,0x7ffdf681f424,35591697,0,0x0,8
tick,0x7ffdf681f424,35593591,0,0x0,8
tick,0x7ffdf681f424,35595676,0,0x0,8
tick,0x7ffdf681f424,35597676,0,0x0,8
tick,0x7ffdf681f424,35599660,0,0x0,8
tick,0x7ffdf681f424,35601665,0,0x0,8
tick,0x7ffdf681f424,35603596,0,0x0,8
tick,0x7ffdf681f424,35605652,0,0x0,8
tick,0x7ffdf681f424,35607641,0,0x0,8
tick,0x7ffdf681f424,35609641,0,0x0,8
tick,0x7ffdf681f424,35611633,0,0x0,8
tick,0x7ffdf681f424,35613637,0,0x0,8
tick,0x7ffdf681f424,35615515,0,0x0,8
tick,0x7ffdf681f424,35617620,0,0x0,8
tick,0x7ffdf681f424,35619617,0,0x0,8
tick,0x7ffdf681f424,35621607,0,0x0,8
tick,0x7ffdf681f424,35623581,0,0x0,8
tick,0x7ffdf681f424,35625599,0,0x0,8
tick,0x7ffdf681f424,35627577,0,0x0,8
tick,0x7ffdf681f424,35629585,0,0x0,8
tick,0x7ffdf681f424,35631583,0,0x0,8
tick,0x7ffdf681f424,35633579,0,0x0,8
tick,0x7ffdf681f424,35635500,0,0x0,8
tick,0x7ffdf681f424,35637573,0,0x0,8
tick,0x7ffdf681f424,35639562,0,0x0,8
tick,0x7ffdf681f424,35641551,0,0x0,8
tick,0x7ffdf681f424,35643445,0,0x0,8
tick,0x7ffdf681f424,35645531,0,0x0,8
tick,0x7ffdf681f424,35647546,0,0x0,8
tick,0x7ffdf681f424,35649538,0,0x0,8
tick,0x7ffdf681f424,35651588,0,0x0,8
tick,0x7ffdf681f424,35653522,0,0x0,8
tick,0x7ffdf681f424,35655519,0,0x0,8
tick,0x7ffdf681f424,35657517,0,0x0,8
tick,0x7ffdf681f424,35659553,0,0x0,8
tick,0x7ffdf681f424,35661507,0,0x0,8
tick,0x7ffdf681f424,35663500,0,0x0,8
tick,0x7ffdf681f424,35665486,0,0x0,8
tick,0x7ffdf681f424,35667461,0,0x0,8
tick,0x7ffdf681f424,35669469,0,0x0,8
tick,0x7ffdf681f424,35671472,0,0x0,8
tick,0x7ffdf681f424,35673468,0,0x0,8
tick,0x7ffdf681f424,35675468,0,0x0,8
tick,0x7ffdf681f424,35677420,0,0x0,8
tick,0x7ffdf681f424,35679454,0,0x0,8
tick,0x7ffdf681f424,35681450,0,0x0,8
tick,0x7ffdf681f424,35683447,0,0x0,8
tick,0x7ffdf681f424,35685301,0,0x0,8
tick,0x7ffdf681f424,35687363,0,0x0,8
tick,0x7ffdf681f424,35689406,0,0x0,8
tick,0x7ffdf681f424,35691369,0,0x0,8
tick,0x7ffdf681f424,35693358,0,0x0,8
tick,0x7ffdf681f424,35695423,0,0x0,8
tick,0x7ffdf681f424,35697406,0,0x0,8
tick,0x7ffdf681f424,35699322,0,0x0,8
tick,0x7ffdf681f424,35701400,0,0x0,8
tick,0x7ffdf681f424,35703404,0,0x0,8
tick,0x7ffdf681f424,35705386,0,0x0,8
tick,0x7ffdf681f424,35707270,0,0x0,8
tick,0x7ffdf681f424,35709268,0,0x0,8
tick,0x7ffdf681f424,35711382,0,0x0,8
tick,0x7ffdf681f424,35713260,0,0x0,8
tick,0x7ffdf681f424,35715252,0,0x0,8
tick,0x7ffdf681f424,35717353,0,0x0,8
tick,0x7ffdf681f424,35719348,0,0x0,8
tick,0x7ffdf681f424,35721338,0,0x0,8
tick,0x7ffdf681f424,35723240,0,0x0,8
tick,0x7ffdf681f424,35725341,0,0x0,8
tick,0x7ffdf681f424,35727262,0,0x0,8
tick,0x7ffdf681f424,35729285,0,0x0,8
tick,0x7ffdf681f424,35731207,0,0x0,8
tick,0x7ffdf681f424,35733289,0,0x0,8
tick,0x7ffdf681f424,35735272,0,0x0,8
tick,0x7ffdf681f424,35737295,0,0x0,8
tick,0x7ffdf681f424,35739293,0,0x0,8
tick,0x7ffdf681f424,35741279,0,0x0,8
tick,0x7ffdf681f424,35743177,0,0x0,8
tick,0x7ffdf681f424,35745206,0,0x0,8
tick,0x7ffdf681f424,35747221,0,0x0,8
tick,0x7ffdf681f424,35749261,0,0x0,8
tick,0x7ffdf681f424,35751254,0,0x0,8
tick,0x7ffdf681f424,35753248,0,0x0,8
tick,0x7ffdf681f424,35755231,0,0x0,8
tick,0x7ffdf681f424,35757248,0,0x0,8
tick,0x7ffdf681f424,35759134,0,0x0,8
tick,0x7ffdf681f424,35761232,0,0x0,8
tick,0x7ffdf681f424,35763225,0,0x0,8
tick,0x7ffdf681f424,35765164,0,0x0,8
tick,0x7ffdf681f424,35767247,0,0x0,8
tick,0x7ffdf681f424,35769250,0,0x0,8
tick,0x7ffdf681f424,35771208,0,0x0,8
tick,0x7ffdf681f424,35773214,0,0x0,8
tick,0x7ffdf681f424,35775205,0,0x0,8
tick,0x7ffdf681f424,35777060,0,0x0,8
tick,0x7ffdf681f424,35779192,0,0x0,8
tick,0x7ffdf681f424,35781185,0,0x0,8
tick,0x7ffdf681f424,35783178,0,0x0,8
tick,0x7ffdf681f424,35785064,0,0x0,8
tick,0x7ffdf681f424,35787167,0,0x0,8
tick,0x7ffdf681f424,35789171,0,0x0,8
tick,0x7ffdf681f424,35791164,0,0x0,8
tick,0x7ffdf681f424,35793151,0,0x0,8
tick,0x7ffdf681f424,35795146,0,0x0,8
tick,0x7ffdf681f424,35797140,0,0x0,8
tick,0x7ffdf681f424,35799148,0,0x0,8
tick,0x7ffdf681f424,35801138,0,0x0,8
tick,0x7ffdf681f424,35803127,0,0x0,8
tick,0x7ffdf681f424,35805119,0,0x0,8
tick,0x7ffdf681f424,35807108,0,0x0,8
tick,0x7ffdf681f424,35809113,0,0x0,8
tick,0x7ffdf681f424,35811109,0,0x0,8
tick,0x7ffdf681f424,35813005,0,0x0,8
tick,0x7ffdf681f424,35815093,0,0x0,8
tick,0x7ffdf681f424,35817085,0,0x0,8
tick,0x7ffdf681f424,35819082,0,0x0,8
tick,0x7ffdf681f424,35821093,0,0x0,8
tick,0x7ffdf681f424,35823078,0,0x0,8
tick,0x7ffdf681f424,35825060,0,0x0,8
tick,0x7ffdf681f424,35826959,0,0x0,8
tick,0x7ffdf681f424,35829036,0,0x0,8
tick,0x7ffdf681f424,35831049,0,0x0,8
tick,0x7ffdf681f424,35833043,0,0x0,8
tick,0x7ffdf681f424,35835035,0,0x0,8
tick,0x7ffdf681f424,35837034,0,0x0,8
tick,0x7ffdf681f424,35839023,0,0x0,8
tick,0x7ffdf681f424,35840928,0,0x0,8
tick,0x7ffdf681f424,35843037,0,0x0,8
tick,0x7ffdf681f424,35844908,0,0x0,8
tick,0x7ffdf681f424,35847007,0,0x0,8
tick,0x7ffdf681f424,35848895,0,0x0,8
tick,0x7ffdf681f424,35850882,0,0x0,8
tick,0x7ffdf681f424,35852879,0,0x0,8
tick,0x7ffdf681f424,35855024,0,0x0,8
tick,0x7ffdf681f424,35856902,0,0x0,8
tick,0x7ffdf681f424,35858882,0,0x0,8
tick,0x7ffdf681f424,35860867,0,0x0,8
tick,0x7ffdf681f424,35862965,0,0x0,8
tick,0x7ffdf681f424,35864936,0,0x0,8
tick,0x7ffdf681f424,35866959,0,0x0,8
tick,0x7ffdf681f424,35868905,0,0x0,8
tick,0x7ffdf681f424,35870843,0,0x0,8
tick,0x7ffdf681f424,35872896,0,0x0,8
tick,0x7ffdf681f424,35874929,0,0x0,8
tick,0x7ffdf681f424,35876791,0,0x0,8
tick,0x7ffdf681f424,35878944,0,0x0,8
tick,0x7ffdf681f424,35880832,0,0x0,8
tick,0x7ffdf681f424,35882906,0,0x0,8
tick,0x7ffdf681f424,35884832,0,0x0,8
tick,0x7ffdf681f424,35886873,0,0x0,8
tick,0x7ffdf681f424,35888904,0,0x0,8
tick,0x7ffdf681f424,35890831,0,0x0,8
tick,0x7ffdf681f424,35892879,0,0x0,8
tick,0x7ffdf681f424,35894879,0,0x0,8
tick,0x7ffdf681f424,35896877,0,0x0,8
tick,0x7ffdf681f424,35898871,0,0x0,8
tick,0x7ffdf681f424,35900868,0,0x0,8
tick,0x7ffdf681f424,35902877,0,0x0,8
tick,0x7ffdf681f424,35904857,0,0x0,8
tick,0x7ffdf681f424,35906849,0,0x0,8
tick,0x7ffdf681f424,35908788,0,0x0,8
tick,0x7ffdf681f424,35910864,0,0x0,8
tick,0x7ffdf681f424,35912763,0,0x0,8
tick,0x7ffdf681f424,35914725,0,0x0,8
tick,0x7ffdf681f424,35916824,0,0x0,8
tick,0x7ffdf681f424,35918751,0,0x0,8
tick,0x7ffdf681f424,35920813,0,0x0,8
tick,0x7ffdf681f424,35922812,0,0x0,8
tick,0x7ffdf681f424,35924808,0,0x0,8
tick,0x7ffdf681f424,35926783,0,0x0,8
tick,0x7ffdf681f424,35928804,0,0x0,8
tick,0x7ffdf681f424,35930825,0,0x0,8
tick,0x7ffdf681f424,35932827,0,0x0,8
tick,0x7ffdf681f424,35934805,0,0x0,8
tick,0x7ffdf681f424,35936778,0,0x0,8
tick,0x7ffdf681f424,35938759,0,0x0,8
tick,0x7ffdf681f424,35940756,0,0x0,8
tick,0x7ffdf681f424,35942749,0,0x0,8
tick,0x7ffdf681f424,35944786,0,0x0,8
tick,0x7ffdf681f424,35946751,0,0x0,8
tick,0x7ffdf681f424,35948785,0,0x0,8
tick,0x7ffdf681f424,35950776,0,0x0,8
tick,0x7ffdf681f424,35952707,0,0x0,8
tick,0x7ffdf681f424,35954760,0,0x0,8
tick,0x7ffdf681f424,35956753,0,0x0,8
tick,0x7ffdf681f424,35958719,0,0x0,8
tick,0x7ffdf681f424,35960593,0,0x0,8
tick,0x7ffdf681f424,35962722,0,0x0,8
tick,0x7ffdf681f424,35964716,0,0x0,8
tick,0x7ffdf681f424,35966737,0,0x0,8
tick,0x7ffdf681f424,35968630,0,0x0,8
tick,0x7ffdf681f424,35970688,0,0x0,8
tick,0x7ffdf681f424,35972669,0,0x0,8
tick,0x7ffdf681f424,35974641,0,0x0,8
tick,0x7ffdf681f424,35976668,0,0x0,8
tick,0x7ffdf681f424,35978649,0,0x0,8
tick,0x7ffdf681f424,35980657,0,0x0,8
tick,0x7ffdf681f424,35982639,0,0x0,8
tick,0x7ffdf681f424,35984635,0,0x0,8
tick,0x7ffdf681f424,35986638,0,0x0,8
tick,0x7ffdf681f424,35988634,0,0x0,8
tick,0x7ffdf681f424,35990625,0,0x0,8
tick,0x7ffdf681f424,35992623,0,0x0,8
tick,0x7ffdf681f424,35994610,0,0x0,8
tick,0x7ffdf681f424,35996654,0,0x0,8
tick,0x7ffdf681f424,35998631,0,0x0,8
tick,0x7ffdf681f424,36000599,0,0x0,8
tick,0x7ffdf681f424,36002588,0,0x0,8
tick,0x7ffdf681f424,36004590,0,0x0,8
tick,0x7ffdf681f424,36006575,0,0x0,8
tick,0x7ffdf681f424,36008578,0,0x0,8
tick,0x7ffdf681f424,36010486,0,0x0,8
tick,0x7ffdf681f424,36012558,0,0x0,8
tick,0x7ffdf681f424,36014559,0,0x0,8
tick,0x7ffdf681f424,36016548,0,0x0,8
tick,0x7ffdf681f424,36018423,0,0x0,8
tick,0x7ffdf681f424,36020550,0,0x0,8
tick,0x7ffdf681f424,36022579,0,0x0,8
tick,0x7ffdf681f424,36024576,0,0x0,8
tick,0x7ffdf681f424,36026531,0,0x0,8
tick,0x7ffdf681f424,36028528,0,0x0,8
tick,0x7ffdf681f424,36030525,0,0x0,8
tick,0x7ffdf681f424,36032517,0,0x0,8
tick,0x7ffdf681f424,36034502,0,0x0,8
tick,0x7ffdf681f424,36036508,0,0x0,8
tick,0x7ffdf681f424,36038500,0,0x0,8
tick,0x7ffdf681f424,36040503,0,0x0,8
tick,0x7ffdf681f424,36042485,0,0x0,8
tick,0x7ffdf681f424,36044476,0,0x0,8
tick,0x7ffdf681f424,36046474,0,0x0,8
tick,0x7ffdf681f424,36048468,0,0x0,8
tick,0x7ffdf681f424,36050463,0,0x0,8
tick,0x7ffdf681f424,36052357,0,0x0,8
tick,0x7ffdf681f424,36054395,0,0x0,8
tick,0x7ffdf681f424,36056323,0,0x0,8
tick,0x7ffdf681f424,36058335,0,0x0,8
tick,0x7ffdf681f424,36060323,0,0x0,8
tick,0x7ffdf681f424,36062344,0,0x0,8
tick,0x7ffdf681f424,36064436,0,0x0,8
tick,0x7ffdf681f424,36066382,0,0x0,8
tick,0x7ffdf681f424,36068395,0,0x0,8
tick,0x7ffdf681f424,36070302,0,0x0,8
tick,0x7ffdf681f424,36072405,0,0x0,8
tick,0x7ffdf681f424,36074425,0,0x0,8
tick,0x7ffdf681f424,36076398,0,0x0,8
tick,0x7ffdf681f424,36078286,0,0x0,8
tick,0x7ffdf681f424,36080377,0,0x0,8
tick,0x7ffdf681f424,36082378,0,0x0,8
tick,0x7ffdf681f424,36084356,0,0x0,8
tick,0x7ffdf681f424,36086300,0,0x0,8
tick,0x7ffdf681f424,36088357,0,0x0,8
tick,0x7ffdf681f424,36090359,0,0x0,8
tick,0x7ffdf681f424,36092345,0,0x0,8
tick,0x7ffdf681f424,36094248,0,0x0,8
tick,0x7ffdf681f424,36096240,0,0x0,8
tick,0x7ffdf681f424,36098366,0,0x0,8
tick,0x7ffdf681f424,36100332,0,0x0,8
tick,0x7ffdf681f424,36102276,0,0x0,8
tick,0x7ffdf681f424,36104263,0,0x0,8
tick,0x7ffdf681f424,36106322,0,0x0,8
tick,0x7ffdf681f424,36108314,0,0x0,8
tick,0x7ffdf681f424,36110203,0,0x0,8
tick,0x7ffdf681f424,36112397,0,0x0,8
tick,0x7ffdf681f424,36114286,0,0x0,8
tick,0x7ffdf681f424,36116287,0,0x0,8
tick,0x7ffdf681f424,36118293,0,0x0,8
tick,0x7ffdf681f424,36120180,0,0x0,8
tick,0x7ffdf681f424,36122268,0,0x0,8
tick,0x7ffdf681f424,36124263,0,0x0,8
tick,0x7ffdf681f424,36126260,0,0x0,8
tick,0x7ffdf681f424,36128216,0,0x0,8
tick,0x7ffdf681f424,36130264,0,0x0,8
tick,0x7ffdf681f424,36132241,0,0x0,8
tick,0x7ffdf681f424,36134234,0,0x0,8
tick,0x7ffdf681f424,36136119,0,0x0,8
tick,0x7ffdf681f424,36138223,0,0x0,8
tick,0x7ffdf681f424,36140136,0,0x0,8
tick,0x7ffdf681f424,36142183,0,0x0,8
tick,0x7ffdf681f424,36144159,0,0x0,8
tick,0x7ffdf681f424,36146170,0,0x0,8
tick,0x7ffdf681f424,36148147,0,0x0,8
tick,0x7ffdf681f424,36149312,0,0x0,8
tick,0x7ffdf681f424,36151314,0,0x0,8
tick,0x7ffdf681f424,36153288,0,0x0,8
tick,0x7ffdf681f424,36154439,0,0x0,8
tick,0x7ffdf681f424,36156447,0,0x0,8
tick,0x7ffdf681f424,36158331,0,0x0,8
tick,0x7ffdf681f424,36160269,0,0x0,8
tick,0x7ffdf681f424,36162393,0,0x0,8
tick,0x7ffdf681f424,36164409,0,0x0,8
tick,0x7ffdf681f424,36165604,0,0x0,8
tick,0x7ffdf681f424,36167523,0,0x0,8
tick,0x7ffdf681f424,36169694,0,0x0,8
tick,0x7ffdf681f424,36171629,0,0x0,8
tick,0x7ffdf681f424,36173702,0,0x0,8
tick,0x7ffdf681f424,36174910,0,0x0,8
tick,0x7ffdf681f424,36176051,0,0x0,8
tick,0x7ffdf681f424,36177254,0,0x0,8
tick,0x7ffdf681f424,36178394,0,0x0,8
tick,0x7ffdf681f424,36179597,0,0x0,8
tick,0x7ffdf681f424,36181418,0,0x0,8
tick,0x7ffdf681f424,36182570,0,0x0,8
tick,0x7ffdf681f424,36184793,0,0x0,8
tick,0x7ffdf681f424,36186736,0,0x0,8
tick,0x7ffdf681f424,36187887,0,0x0,8
tick,0x7ffdf681f424,36190040,0,0x0,8
tick,0x7ffdf681f424,36191922,0,0x0,8
tick,0x7ffdf681f424,36193887,0,0x0,8
tick,0x7ffdf681f424,36195890,0,0x0,8
tick,0x7ffdf681f424,36197932,0,0x0,8
tick,0x7ffdf681f424,36199942,0,0x0,8
tick,0x7ffdf681f424,36201884,0,0x0,8
tick,0x7ffdf681f424,36203952,0,0x0,8
tick,0x7ffdf681f424,36205942,0,0x0,8
tick,0x7ffdf681f424,36208007,0,0x0,8
tick,0x7ffdf681f424,36210017,0,0x0,8
tick,0x7ffdf681f424,36212042,0,0x0,8
tick,0x7ffdf681f424,36214050,0,0x0,8
tick,0x7ffdf681f424,36215982,0,0x0,8
tick,0x7ffdf681f424,36218022,0,0x0,8
tick,0x7ffdf681f424,36219965,0,0x0,8
tick,0x7ffdf681f424,36222050,0,0x0,8
tick,0x7ffdf681f424,36224048,0,0x0,8
tick,0x7ffdf681f424,36226041,0,0x0,8
tick,0x7ffdf681f424,36228054,0,0x0,8
tick,0x7ffdf681f424,36230072,0,0x0,8
tick,0x7ffdf681f424,36231988,0,0x0,8
tick,0x7ffdf681f424,36233980,0,0x0,8
tick,0x7ffdf681f424,36236081,0,0x0,8
tick,0x7ffdf681f424,36237933,0,0x0,8
tick,0x7ffdf681f424,36239968,0,0x0,8
tick,0x7ffdf681f424,36242041,0,0x0,8
tick,0x7ffdf681f424,36243984,0,0x0,8
tick,0x7ffdf681f424,36246004,0,0x0,8
tick,0x7ffdf681f424,36247962,0,0x0,8
tick,0x7ffdf681f424,36250016,0,0x0,8
tick,0x7ffdf681f424,36251995,0,0x0,8
tick,0x7ffdf681f424,36253951,0,0x0,8
tick,0x7ffdf681f424,36255923,0,0x0,8
tick,0x7ffdf681f424,36257930,0,0x0,8
tick,0x7ffdf681f424,36259990,0,0x0,8
tick,0x7ffdf681f424,36261923,0,0x0,8
tick,0x7ffdf681f424,36263992,0,0x0,8
tick,0x7ffdf681f424,36265957,0,0x0,8
tick,0x7ffdf681f424,36267933,0,0x0,8
tick,0x7ffdf681f424,36269926,0,0x0,8
tick,0x7ffdf681f424,36271919,0,0x0,8
tick,0x7ffdf681f424,36273892,0,0x0,8
tick,0x7ffdf681f424,36275916,0,0x0,8
tick,0x7ffdf681f424,36277864,0,0x0,8
tick,0x7ffdf681f424,36279852,0,0x0,8
tick,0x7ffdf681f424,36281895,0,0x0,8
tick,0x7ffdf681f424,36283862,0,0x0,8
tick,0x7ffdf681f424,36285873,0,0x0,8
tick,0x7ffdf681f424,36287861,0,0x0,8
tick,0x7ffdf681f424,36289862,0,0x0,8
tick,0x7ffdf681f424,36291861,0,0x0,8
tick,0x7ffdf681f424,36293855,0,0x0,8
tick,0x7ffdf681f424,36295849,0,0x0,8
tick,0x7ffdf681f424,36297846,0,0x0,8
tick,0x7ffdf681f424,36299836,0,0x0,8
tick,0x7ffdf681f424,36301811,0,0x0,8
tick,0x7ffdf681f424,36303845,0,0x0,8
tick,0x7ffdf681f424,36305868,0,0x0,8
tick,0x7ffdf681f424,36307830,0,0x0,8
tick,0x7ffdf681f424,36309814,0,0x0,8
tick,0x7ffdf681f424,36311860,0,0x0,8
tick,0x7ffdf681f424,36313812,0,0x0,8
tick,0x7ffdf681f424,36315933,0,0x0,8
tick,0x7ffdf681f424,36318010,0,0x0,8
tick,0x7ffdf681f424,36319979,0,0x0,8
tick,0x7ffdf681f424,36321914,0,0x0,8
tick,0x7ffdf681f424,36323915,0,0x0,8
tick,0x7ffdf681f424,36325957,0,0x0,8
tick,0x7ffdf681f424,36328047,0,0x0,8
tick,0x7ffdf681f424,36329917,0,0x0,8
tick,0x7ffdf681f424,36331895,0,0x0,8
tick,0x7ffdf681f424,36333896,0,0x0,8
tick,0x7ffdf681f424,36335887,0,0x0,8
tick,0x7ffdf681f424,36337928,0,0x0,8
tick,0x7ffdf681f424,36339935,0,0x0,8
tick,0x7ffdf681f424,36341875,0,0x0,8
tick,0x7ffdf681f424,36343943,0,0x0,8
tick,0x7ffdf681f424,36345922,0,0x0,8
tick,0x7ffdf681f424,36347892,0,0x0,8
tick,0x7ffdf681f424,36349910,0,0x0,8
tick,0x7ffdf681f424,36351903,0,0x0,8
tick,0x7ffdf681f424,36353887,0,0x0,8
tick,0x7ffdf681f424,36355894,0,0x0,8
tick,0x7ffdf681f424,36357875,0,0x0,8
tick,0x7ffdf681f424,36359879,0,0x0,8
tick,0x7ffdf681f424,36361922,0,0x0,8
tick,0x7ffdf681f424,36363843,0,0x0,8
tick,0x7ffdf681f424,36365839,0,0x0,8
tick,0x7ffdf681f424,36367951,0,0x0,8
tick,0x7ffdf681f424,36369976,0,0x0,8
tick,0x7ffdf681f424,36371957,0,0x0,8
tick,0x7ffdf681f424,36373960,0,0x0,8
tick,0x7ffdf681f424,36375957,0,0x0,8
tick,0x7ffdf681f424,36377882,0,0x0,8
tick,0x7ffdf681f424,36379933,0,0x0,8
tick,0x7ffdf681f424,36382002,0,0x0,8
tick,0x7ffdf681f424,36384024,0,0x0,8
tick,0x7ffdf681f424,36386016,0,0x0,8
tick,0x7ffdf681f424,36387971,0,0x0,8
tick,0x7ffdf681f424,36389978,0,0x0,8
tick,0x7ffdf681f424,36391966,0,0x0,8
tick,0x7ffdf681f424,36393998,0,0x0,8
tick,0x7ffdf681f424,36395871,0,0x0,8
tick,0x7ffdf681f424,36397946,0,0x0,8
tick,0x7ffdf681f424,36399918,0,0x0,8
tick,0x7ffdf681f424,36401908,0,0x0,8
tick,0x7ffdf681f424,36403874,0,0x0,8
tick,0x7ffdf681f424,36405860,0,0x0,8
tick,0x7ffdf681f424,36407904,0,0x0,8
tick,0x7ffdf681f424,36410020,0,0x0,8
tick,0x7ffdf681f424,36412106,0,0x0,8
tick,0x7ffdf681f424,36413198,0,0x0,8
tick,0x7ffdf681f424,36415207,0,0x0,8
tick,0x7ffdf681f424,36417201,0,0x0,8
tick,0x7ffdf681f424,36419145,0,0x0,8
tick,0x7ffdf681f424,36421176,0,0x0,8
tick,0x7ffdf681f424,36423129,0,0x0,8
tick,0x7ffdf681f424,36425141,0,0x0,8
tick,0x7ffdf681f424,36427186,0,0x0,8
tick,0x7ffdf681f424,36429114,0,0x0,8
tick,0x7ffdf681f424,36431182,0,0x0,8
tick,0x7ffdf681f424,36433144,0,0x0,8
tick,0x7ffdf681f424,36435072,0,0x0,8
tick,0x7ffdf681f424,36437107,0,0x0,8
tick,0x7ffdf681f424,36439086,0,0x0,8
tick,0x7ffdf681f424,36441056,0,0x0,8
tick,0x7ffdf681f424,36443094,0,0x0,8
tick,0x7ffdf681f424,36445150,0,0x0,8
tick,0x7ffdf681f424,36447063,0,0x0,8
tick,0x7ffdf681f424,36449029,0,0x0,8
tick,0x7ffdf681f424,36451031,0,0x0,8
tick,0x7ffdf681f424,36453041,0,0x0,8
tick,0x7ffdf681f424,36455020,0,0x0,8
tick,0x7ffdf681f424,36456990,0,0x0,8
tick,0x7ffdf681f424,36458988,0,0x0,8
tick,0x7ffdf681f424,36461083,0,0x0,8
tick,0x7ffdf681f424,36462998,0,0x0,8
tick,0x7ffdf681f424,36464994,0,0x0,8
tick,0x7ffdf681f424,36466989,0,0x0,8
tick,0x7ffdf681f424,36468993,0,0x0,8
tick,0x7ffdf681f424,36470974,0,0x0,8
tick,0x7ffdf681f424,36472972,0,0x0,8
tick,0x7ffdf681f424,36474980,0,0x0,8
tick,0x7ffdf681f424,36476996,0,0x0,8
tick,0x7ffdf681f424,36478947,0,0x0,8
tick,0x7ffdf681f424,36480965,0,0x0,8
tick,0x7ffdf681f424,36482975,0,0x0,8
tick,0x7ffdf681f424,36484944,0,0x0,8
tick,0x7ffdf681f424,36486972,0,0x0,8
tick,0x7ffdf681f424,36489022,0,0x0,8
tick,0x7ffdf681f424,36491029,0,0x0,8
tick,0x7ffdf681f424,36492936,0,0x0,8
tick,0x7ffdf681f424,36494908,0,0x0,8
tick,0x7ffdf681f424,36496937,0,0x0,8
tick,0x7ffdf681f424,36498896,0,0x0,8
tick,0x7ffdf681f424,36500874,0,0x0,8
tick,0x7ffdf681f424,36502909,0,0x0,8
tick,0x7ffdf681f424,36504880,0,0x0,8
tick,0x7ffdf681f424,36506877,0,0x0,8
tick,0x7ffdf681f424,36508906,0,0x0,8
tick,0x7ffdf681f424,36510870,0,0x0,8
tick,0x7ffdf681f424,36512973,0,0x0,8
tick,0x7ffdf681f424,36514881,0,0x0,8
tick,0x7ffdf681f424,36516867,0,0x0,8
tick,0x7ffdf681f424,36518892,0,0x0,8
tick,0x7ffdf681f424,36520881,0,0x0,8
tick,0x7ffdf681f424,36522880,0,0x0,8
tick,0x7ffdf681f424,36524859,0,0x0,8
tick,0x7ffdf681f424,36526815,0,0x0,8
tick,0x7ffdf681f424,36528870,0,0x0,8
tick,0x7ffdf681f424,36530866,0,0x0,8
tick,0x7ffdf681f424,36532850,0,0x0,8
tick,0x7ffdf681f424,36534854,0,0x0,8
tick,0x7ffdf681f424,36536871,0,0x0,8
tick,0x7ffdf681f424,36538851,0,0x0,8
tick,0x7ffdf681f424,36540844,0,0x0,8
tick,0x7ffdf681f424,36542853,0,0x0,8
tick,0x7ffdf681f424,36544875,0,0x0,8
tick,0x7ffdf681f424,36546868,0,0x0,8
tick,0x7ffdf681f424,36548886,0,0x0,8
tick,0x7ffdf681f424,36550852,0,0x0,8
tick,0x7ffdf681f424,36552792,0,0x0,8
tick,0x7ffdf681f424,36554868,0,0x0,8
tick,0x7ffdf681f424,36556877,0,0x0,8
tick,0x7ffdf681f424,36558894,0,0x0,8
tick,0x7ffdf681f424,36560743,0,0x0,8
tick,0x7ffdf681f424,36562866,0,0x0,8
tick,0x7ffdf681f424,36564846,0,0x0,8
tick,0x7ffdf681f424,36566846,0,0x0,8
tick,0x7ffdf681f424,36568788,0,0x0,8
tick,0x7ffdf681f424,36570861,0,0x0,8
tick,0x7ffdf681f424,36572879,0,0x0,8
tick,0x7ffdf681f424,36574855,0,0x0,8
tick,0x7ffdf681f424,36576811,0,0x0,8
tick,0x7ffdf681f424,36578857,0,0x0,8
tick,0x7ffdf681f424,36580850,0,0x0,8
tick,0x7ffdf681f424,36582825,0,0x0,8
tick,0x7ffdf681f424,36584793,0,0x0,8
tick,0x7ffdf681f424,36586709,0,0x0,8
tick,0x7ffdf681f424,36588805,0,0x0,8
tick,0x7ffdf681f424,36590778,0,0x0,8
tick,0x7ffdf681f424,36592844,0,0x0,8
tick,0x7ffdf681f424,36594763,0,0x0,8
tick,0x7ffdf681f424,36596783,0,0x0,8
tick,0x7ffdf681f424,36598768,0,0x0,8
tick,0x7ffdf681f424,36600755,0,0x0,8
tick,0x7ffdf681f424,36602754,0,0x0,8
tick,0x7ffdf681f424,36604726,0,0x0,8
tick,0x7ffdf681f424,36606743,0,0x0,8
tick,0x7ffdf681f424,36608722,0,0x0,8
tick,0x7ffdf681f424,36610604,0,0x0,8
tick,0x7ffdf681f424,36612724,0,0x0,8
tick,0x7ffdf681f424,36614688,0,0x0,8
tick,0x7ffdf681f424,36616708,0,0x0,8
tick,0x7ffdf681f424,36618582,0,0x0,8
tick,0x7ffdf681f424,36620568,0,0x0,8
tick,0x7ffdf681f424,36622562,0,0x0,8
tick,0x7ffdf681f424,36624670,0,0x0,8
tick,0x7ffdf681f424,36626720,0,0x0,8
tick,0x7ffdf681f424,36628669,0,0x0,8
tick,0x7ffdf681f424,36630710,0,0x0,8
tick,0x7ffdf681f424,36632685,0,0x0,8
tick,0x7ffdf681f424,36634660,0,0x0,8
tick,0x7ffdf681f424,36636659,0,0x0,8
tick,0x7ffdf681f424,36638633,0,0x0,8
tick,0x7ffdf681f424,36640645,0,0x0,8
tick,0x7ffdf681f424,36642625,0,0x0,8
tick,0x7ffdf681f424,36644506,0,0x0,8
tick,0x7ffdf681f424,36646637,0,0x0,8
tick,0x7ffdf681f424,36648608,0,0x0,8
tick,0x7ffdf681f424,36650616,0,0x0,8
tick,0x7ffdf681f424,36652482,0,0x0,8
tick,0x7ffdf681f424,36654602,0,0x0,8
tick,0x7ffdf681f424,36656600,0,0x0,8
tick,0x7ffdf681f424,36658608,0,0x0,8
tick,0x7ffdf681f424,36660461,0,0x0,8
tick,0x7ffdf681f424,36662580,0,0x0,8
tick,0x7ffdf681f424,36664579,0,0x0,8
tick,0x7ffdf681f424,36666561,0,0x0,8
tick,0x7ffdf681f424,36668529,0,0x0,8
tick,0x7ffdf681f424,36670547,0,0x0,8
tick,0x7ffdf681f424,36672555,0,0x0,8
tick,0x7ffdf681f424,36674545,0,0x0,8
tick,0x7ffdf681f424,36676540,0,0x0,8
tick,0x7ffdf681f424,36678540,0,0x0,8
tick,0x7ffdf681f424,36680541,0,0x0,8
tick,0x7ffdf681f424,36682514,0,0x0,8
tick,0x7ffdf681f424,36684518,0,0x0,8
tick,0x7ffdf681f424,36686507,0,0x0,8
tick,0x7ffdf681f424,36688507,0,0x0,8
tick,0x7ffdf681f424,36690484,0,0x0,8
tick,0x7ffdf681f424,36692482,0,0x0,8
tick,0x7ffdf681f424,36694493,0,0x0,8
tick,0x7ffdf681f424,36696478,0,0x0,8
tick,0x7ffdf681f424,36698479,0,0x0,8
tick,0x7ffdf681f424,36700467,0,0x0,8
tick,0x7ffdf681f424,36702364,0,0x0,8
tick,0x7ffdf681f424,36704465,0,0x0,8
tick,0x7ffdf681f424,36706442,0,0x0,8
tick,0x7ffdf681f424,36708447,0,0x0,8
tick,0x7ffdf681f424,36710360,0,0x0,8
tick,0x7ffdf681f424,36712483,0,0x0,8
tick,0x7ffdf681f424,36714478,0,0x0,8
tick,0x7ffdf681f424,36716450,0,0x0,8
tick,0x7ffdf681f424,36718387,0,0x0,8
tick,0x7ffdf681f424,36720415,0,0x0,8
tick,0x7ffdf681f424,36722409,0,0x0,8
tick,0x7ffdf681f424,36724436,0,0x0,8
tick,0x7ffdf681f424,36726400,0,0x0,8
tick,0x7ffdf681f424,36728288,0,0x0,8
tick,0x7ffdf681f424,36730394,0,0x0,8
tick,0x7ffdf681f424,36732393,0,0x0,8
tick,0x7ffdf681f424,36734420,0,0x0,8
tick,0x7ffdf681f424,36736379,0,0x0,8
tick,0x7ffdf681f424,36738276,0,0x0,8
tick,0x7ffdf681f424,36740399,0,0x0,8
tick,0x7ffdf681f424,36742391,0,0x0,8
tick,0x7ffdf681f424,36744390,0,0x0,8
tick,0x7ffdf681f424,36746429,0,0x0,8
tick,0x7ffdf681f424,36748378,0,0x0,8
tick,0x7ffdf681f424,36750257,0,0x0,8
tick,0x7ffdf681f424,36752251,0,0x0,8
tick,0x7ffdf681f424,36754336,0,0x0,8
tick,0x7ffdf681f424,36756418,0,0x0,8
tick,0x7ffdf681f424,36758336,0,0x0,8
tick,0x7ffdf681f424,36760215,0,0x0,8
tick,0x7ffdf681f424,36762329,0,0x0,8
tick,0x7ffdf681f424,36764312,0,0x0,8
tick,0x7ffdf681f424,36766321,0,0x0,8
tick,0x7ffdf681f424,36768335,0,0x0,8
tick,0x7ffdf681f424,36770206,0,0x0,8
tick,0x7ffdf681f424,36772244,0,0x0,8
tick,0x7ffdf681f424,36774229,0,0x0,8
tick,0x7ffdf681f424,36776223,0,0x0,8
tick,0x7ffdf681f424,36778239,0,0x0,8
tick,0x7ffdf681f424,36780275,0,0x0,8
tick,0x7ffdf681f424,36782280,0,0x0,8
tick,0x7ffdf681f424,36784160,0,0x0,8
tick,0x7ffdf681f424,36786244,0,0x0,8
tick,0x7ffdf681f424,36788139,0,0x0,8
tick,0x7ffdf681f424,36790102,0,0x0,8
tick,0x7ffdf681f424,36792124,0,0x0,8
tick,0x7ffdf681f424,36794180,0,0x0,8
tick,0x7ffdf681f424,36796187,0,0x0,8
tick,0x7ffdf681f424,36798100,0,0x0,8
tick,0x7ffdf681f424,36800194,0,0x0,8
tick,0x7ffdf681f424,36802058,0,0x0,8
tick,0x7ffdf681f424,36804119,0,0x0,8
tick,0x7ffdf681f424,36806189,0,0x0,8
tick,0x7ffdf681f424,36808078,0,0x0,8
tick,0x7ffdf681f424,36810151,0,0x0,8
tick,0x7ffdf681f424,36812164,0,0x0,8
tick,0x7ffdf681f424,36814101,0,0x0,8
tick,0x7ffdf681f424,36816054,0,0x0,8
tick,0x7ffdf681f424,36818001,0,0x0,8
tick,0x7ffdf681f424,36819998,0,0x0,8
tick,0x7ffdf681f424,36822042,0,0x0,8
tick,0x7ffdf681f424,36824007,0,0x0,8
tick,0x7ffdf681f424,36826009,0,0x0,8
tick,0x7ffdf681f424,36828163,0,0x0,8
tick,0x7ffdf681f424,36830158,0,0x0,8
tick,0x7ffdf681f424,36832042,0,0x0,8
tick,0x7ffdf681f424,36834173,0,0x0,8
tick,0x7ffdf681f424,36836075,0,0x0,8
tick,0x7ffdf681f424,36838146,0,0x0,8
tick,0x7ffdf681f424,36840126,0,0x0,8
tick,0x7ffdf681f424,36842135,0,0x0,8
tick,0x7ffdf681f424,36844118,0,0x0,8
tick,0x7ffdf681f424,36846115,0,0x0,8
tick,0x7ffdf681f424,36848000,0,0x0,8
tick,0x7ffdf681f424,36850073,0,0x0,8
tick,0x7ffdf681f424,36851987,0,0x0,8
tick,0x7ffdf681f424,36854090,0,0x0,8
tick,0x7ffdf681f424,36856116,0,0x0,8
tick,0x7ffdf681f424,36858084,0,0x0,8
tick,0x7ffdf681f424,36860154,0,0x0,8
tick,0x7ffdf681f424,36862072,0,0x0,8
tick,0x7ffdf681f424,36864070,0,0x0,8
tick,0x7ffdf681f424,36866074,0,0x0,8
tick,0x7ffdf681f424,36868055,0,0x0,8
tick,0x7ffdf681f424,36870028,0,0x0,8
tick,0x7ffdf681f424,36872048,0,0x0,8
tick,0x7ffdf681f424,36874042,0,0x0,8
tick,0x7ffdf681f424,36876001,0,0x0,8
tick,0x7ffdf681f424,36878011,0,0x0,8
tick,0x7ffdf681f424,36880025,0,0x0,8
tick,0x7ffdf681f424,36882024,0,0x0,8
tick,0x7ffdf681f424,36884017,0,0x0,8
tick,0x7ffdf681f424,36886024,0,0x0,8
tick,0x7ffdf681f424,36888008,0,0x0,8
tick,0x7ffdf681f424,36890005,0,0x0,8
tick,0x7ffdf681f424,36892003,0,0x0,8
tick,0x7ffdf681f424,36893963,0,0x0,8
tick,0x7ffdf681f424,36895981,0,0x0,8
tick,0x7ffdf681f424,36897993,0,0x0,8
tick,0x7ffdf681f424,36899972,0,0x0,8
tick,0x7ffdf681f424,36901882,0,0x0,8
tick,0x7ffdf681f424,36903960,0,0x0,8
tick,0x7ffdf681f424,36905963,0,0x0,8
tick,0x7ffdf681f424,36907962,0,0x0,8
tick,0x7ffdf681f424,36909946,0,0x0,8
tick,0x7ffdf681f424,36911841,0,0x0,8
tick,0x7ffdf681f424,36913954,0,0x0,8
tick,0x7ffdf681f424,36915931,0,0x0,8
tick,0x7ffdf681f424,36917923,0,0x0,8
tick,0x7ffdf681f424,36919926,0,0x0,8
tick,0x7ffdf681f424,36921940,0,0x0,8
tick,0x7ffdf681f424,36923907,0,0x0,8
tick,0x7ffdf681f424,36925899,0,0x0,8
tick,0x7ffdf681f424,36927897,0,0x0,8
tick,0x7ffdf681f424,36929896,0,0x0,8
tick,0x7ffdf681f424,36931904,0,0x0,8
tick,0x7ffdf681f424,36933763,0,0x0,8
tick,0x7ffdf681f424,36935900,0,0x0,8
tick,0x7ffdf681f424,36937767,0,0x0,8
tick,0x7ffdf681f424,36939759,0,0x0,8
tick,0x7ffdf681f424,36941732,0,0x0,8
tick,0x7ffdf681f424,36951749,0,0x0,8
tick,0x7ffdf681f424,36953787,0,0x0,8
tick,0x7ffdf681f424,36955680,0,0x0,8
tick,0x7ffdf681f424,36957765,0,0x0,8
tick,0x7ffdf681f424,36959815,0,0x0,8
tick,0x7ffdf681f424,36961949,0,0x0,8
tick,0x7ffdf681f424,36963892,0,0x0,8
tick,0x7ffdf681f424,36965132,0,0x0,8
tick,0x7ffdf681f424,36966358,0,0x0,8
tick,0x7ffdf681f424,36967540,0,0x0,8
tick,0x7ffdf681f424,36969566,0,0x0,8
tick,0x7ffdf681f424,36970744,0,0x0,8
tick,0x7ffdf681f424,36972568,0,0x0,8
tick,0x7ffdf681f424,36974719,0,0x0,8
tick,0x7ffdf681f424,36976739,0,0x0,8
tick,0x7ffdf681f424,36978875,0,0x0,8
tick,0x7ffdf681f424,36980080,0,0x0,8
tick,0x7ffdf681f424,36981335,0,0x0,8
tick,0x7ffdf681f424,36982496,0,0x0,8
tick,0x7ffdf681f424,36984584,0,0x0,8
tick,0x7ffdf681f424,36986537,0,0x0,8
tick,0x7ffdf681f424,36987701,0,0x0,8
tick,0x7ffdf681f424,36989759,0,0x0,8
tick,0x7ffdf681f424,36990931,0,0x0,8
tick,0x7ffdf681f424,36992123,0,0x0,8
tick,0x7ffdf681f424,36993306,0,0x0,8
tick,0x7ffdf681f424,36995233,0,0x0,8
tick,0x7ffdf681f424,36997256,0,0x0,8
tick,0x7ffdf681f424,36999259,0,0x0,8
tick,0x7ffdf681f424,37001303,0,0x0,8
tick,0x7ffdf681f424,37002447,0,0x0,8
tick,0x7ffdf681f424,37003677,0,0x0,8
tick,0x7ffdf681f424,37005700,0,0x0,8
tick,0x7ffdf681f424,37007671,0,0x0,8
tick,0x7ffdf681f424,37008845,0,0x0,8
tick,0x7ffdf681f424,37010090,0,0x0,8
tick,0x7ffdf681f424,37012031,0,0x0,8
tick,0x7ffdf681f424,37014001,0,0x0,8
tick,0x7ffdf681f424,37016046,0,0x0,8
tick,0x7ffdf681f424,37017993,0,0x0,8
tick,0x7ffdf681f424,37019128,0,0x0,8
tick,0x7ffdf681f424,37020203,0,0x0,8
tick,0x7ffdf681f424,37022219,0,0x0,8
tick,0x7ffdf681f424,37024186,0,0x0,8
tick,0x7ffdf681f424,37026221,0,0x0,8
tick,0x7ffdf681f424,37028167,0,0x0,8
tick,0x7ffdf681f424,37030190,0,0x0,8
tick,0x7ffdf681f424,37032163,0,0x0,8
tick,0x7ffdf681f424,37034075,0,0x0,8
tick,0x7ffdf681f424,37036221,0,0x0,8
tick,0x7ffdf681f424,37038098,0,0x0,8
tick,0x7ffdf681f424,37040130,0,0x0,8
tick,0x7ffdf681f424,37042109,0,0x0,8
tick,0x7ffdf681f424,37044069,0,0x0,8
tick,0x7ffdf681f424,37046157,0,0x0,8
tick,0x7ffdf681f424,37048195,0,0x0,8
tick,0x7ffdf681f424,37050152,0,0x0,8
tick,0x7ffdf681f424,37052052,0,0x0,8
tick,0x7ffdf681f424,37054147,0,0x0,8
tick,0x7ffdf681f424,37056144,0,0x0,8
tick,0x7ffdf681f424,37058148,0,0x0,8
tick,0x7ffdf681f424,37060071,0,0x0,8
tick,0x7ffdf681f424,37062117,0,0x0,8
tick,0x7ffdf681f424,37064119,0,0x0,8
tick,0x7ffdf681f424,37066113,0,0x0,8
tick,0x7ffdf681f424,37068108,0,0x0,8
tick,0x7ffdf681f424,37070124,0,0x0,8
tick,0x7ffdf681f424,37072097,0,0x0,8
tick,0x7ffdf681f424,37074083,0,0x0,8
tick,0x7ffdf681f424,37076089,0,0x0,8
tick,0x7ffdf681f424,37078073,0,0x0,8
tick,0x7ffdf681f424,37080109,0,0x0,8
tick,0x7ffdf681f424,37082058,0,0x0,8
tick,0x7ffdf681f424,37084063,0,0x0,8
tick,0x7ffdf681f424,37086055,0,0x0,8
tick,0x7ffdf681f424,37088059,0,0x0,8
tick,0x7ffdf681f424,37090047,0,0x0,8
tick,0x7ffdf681f424,37092070,0,0x0,8
tick,0x7ffdf681f424,37094033,0,0x0,8
tick,0x7ffdf681f424,37095914,0,0x0,8
tick,0x7ffdf681f424,37098025,0,0x0,8
tick,0x7ffdf681f424,37100023,0,0x0,8
tick,0x7ffdf681f424,37101985,0,0x0,8
tick,0x7ffdf681f424,37104023,0,0x0,8
tick,0x7ffdf681f424,37106012,0,0x0,8
tick,0x7ffdf681f424,37107989,0,0x0,8
tick,0x7ffdf681f424,37109998,0,0x0,8
tick,0x7ffdf681f424,37111992,0,0x0,8
tick,0x7ffdf681f424,37114010,0,0x0,8
tick,0x7ffdf681f424,37115977,0,0x0,8
tick,0x7ffdf681f424,37117974,0,0x0,8
tick,0x7ffdf681f424,37119970,0,0x0,8
tick,0x7ffdf681f424,37121853,0,0x0,8
tick,0x7ffdf681f424,37124020,0,0x0,8
tick,0x7ffdf681f424,37125963,0,0x0,8
tick,0x7ffdf681f424,37127948,0,0x0,8
tick,0x7ffdf681f424,37129942,0,0x0,8
tick,0x7ffdf681f424,37131861,0,0x0,8
tick,0x7ffdf681f424,37133928,0,0x0,8
tick,0x7ffdf681f424,37135937,0,0x0,8
tick,0x7ffdf681f424,37137838,0,0x0,8
tick,0x7ffdf681f424,37139909,0,0x0,8
tick,0x7ffdf681f424,37141904,0,0x0,8
tick,0x7ffdf681f424,37143806,0,0x0,8
tick,0x7ffdf681f424,37145952,0,0x0,8
tick,0x7ffdf681f424,37147906,0,0x0,8
tick,0x7ffdf681f424,37149880,0,0x0,8
tick,0x7ffdf681f424,37151890,0,0x0,8
tick,0x7ffdf681f424,37153874,0,0x0,8
tick,0x7ffdf681f424,37155876,0,0x0,8
tick,0x7ffdf681f424,37157891,0,0x0,8
tick,0x7ffdf681f424,37159846,0,0x0,8
tick,0x7ffdf681f424,37161857,0,0x0,8
tick,0x7ffdf681f424,37163884,0,0x0,8
tick,0x7ffdf681f424,37165844,0,0x0,8
tick,0x7ffdf681f424,37167859,0,0x0,8
tick,0x7ffdf681f424,37169846,0,0x0,8
tick,0x7ffdf681f424,37171831,0,0x0,8
tick,0x7ffdf681f424,37173824,0,0x0,8
tick,0x7ffdf681f424,37175828,0,0x0,8
tick,0x7ffdf681f424,37177810,0,0x0,8
tick,0x7ffdf681f424,37179820,0,0x0,8
tick,0x7ffdf681f424,37181802,0,0x0,8
tick,0x7ffdf681f424,37183807,0,0x0,8
tick,0x7ffdf681f424,37185679,0,0x0,8
tick,0x7ffdf681f424,37187790,0,0x0,8
tick,0x7ffdf681f424,37189832,0,0x0,8
tick,0x7ffdf681f424,37191791,0,0x0,8
tick,0x7ffdf681f424,37193687,0,0x0,8
tick,0x7ffdf681f424,37195686,0,0x0,8
tick,0x7ffdf681f424,37197620,0,0x0,8
tick,0x7ffdf681f424,37199697,0,0x0,8
tick,0x7ffdf681f424,37201768,0,0x0,8
tick,0x7ffdf681f424,37203738,0,0x0,8
tick,0x7ffdf681f424,37205744,0,0x0,8
tick,0x7ffdf681f424,37207738,0,0x0,8
tick,0x7ffdf681f424,37209739,0,0x0,8
tick,0x7ffdf681f424,37211735,0,0x0,8
tick,0x7ffdf681f424,37213726,0,0x0,8
tick,0x7ffdf681f424,37215706,0,0x0,8
tick,0x7ffdf681f424,37217702,0,0x0,8
tick,0x7ffdf681f424,37219706,0,0x0,8
tick,0x7ffdf681f424,37221687,0,0x0,8
tick,0x7ffdf681f424,37223615,0,0x0,8
tick,0x7ffdf681f424,37225697,0,0x0,8
tick,0x7ffdf681f424,37227676,0,0x0,8
tick,0x7ffdf681f424,37229679,0,0x0,8
tick,0x7ffdf681f424,37231672,0,0x0,8
tick,0x7ffdf681f424,37233677,0,0x0,8
tick,0x7ffdf681f424,37235671,0,0x0,8
tick,0x7ffdf681f424,37237654,0,0x0,8
tick,0x7ffdf681f424,37239653,0,0x0,8
tick,0x7ffdf681f424,37241642,0,0x0,8
tick,0x7ffdf681f424,37243642,0,0x0,8
tick,0x7ffdf681f424,37245658,0,0x0,8
tick,0x7ffdf681f424,37247633,0,0x0,8
tick,0x7ffdf681f424,37249629,0,0x0,8
tick,0x7ffdf681f424,37251611,0,0x0,8
tick,0x7ffdf681f424,37253616,0,0x0,8
tick,0x7ffdf681f424,37255657,0,0x0,8
tick,0x7ffdf681f424,37257615,0,0x0,8
tick,0x7ffdf681f424,37259594,0,0x0,8
tick,0x7ffdf681f424,37261589,0,0x0,8
tick,0x7ffdf681f424,37263586,0,0x0,8
tick,0x7ffdf681f424,37265594,0,0x0,8
tick,0x7ffdf681f424,37267586,0,0x0,8
tick,0x7ffdf681f424,37269567,0,0x0,8
tick,0x7ffdf681f424,37271572,0,0x0,8
tick,0x7ffdf681f424,37273549,0,0x0,8
tick,0x7ffdf681f424,37275555,0,0x0,8
tick,0x7ffdf681f424,37277609,0,0x0,8
tick,0x7ffdf681f424,37279561,0,0x0,8
tick,0x7ffdf681f424,37281533,0,0x0,8
tick,0x7ffdf681f424,37283412,0,0x0,8
tick,0x7ffdf681f424,37285525,0,0x0,8
tick,0x7ffdf681f424,37287519,0,0x0,8
tick,0x7ffdf681f424,37289532,0,0x0,8
tick,0x7ffdf681f424,37291507,0,0x0,8
tick,0x7ffdf681f424,37293498,0,0x0,8
tick,0x7ffdf681f424,37295500,0,0x0,8
tick,0x7ffdf681f424,37297487,0,0x0,8
tick,0x7ffdf681f424,37299512,0,0x0,8
tick,0x7ffdf681f424,37301496,0,0x0,8
tick,0x7ffdf681f424,37303480,0,0x0,8
tick,0x7ffdf681f424,37305471,0,0x0,8
tick,0x7ffdf681f424,37307464,0,0x0,8
tick,0x7ffdf681f424,37309348,0,0x0,8
tick,0x7ffdf681f424,37311479,0,0x0,8
tick,0x7ffdf681f424,37313447,0,0x0,8
tick,0x7ffdf681f424,37315455,0,0x0,8
tick,0x7ffdf681f424,37317432,0,0x0,8
tick,0x7ffdf681f424,37319429,0,0x0,8
tick,0x7ffdf681f424,37321508,0,0x0,8
tick,0x7ffdf681f424,37323449,0,0x0,8
tick,0x7ffdf681f424,37325425,0,0x0,8
tick,0x7ffdf681f424,37327437,0,0x0,8
tick,0x7ffdf681f424,37329420,0,0x0,8
tick,0x7ffdf681f424,37331418,0,0x0,8
tick,0x7ffdf681f424,37333411,0,0x0,8
tick,0x7ffdf681f424,37335390,0,0x0,8
tick,0x7ffdf681f424,37337392,0,0x0,8
tick,0x7ffdf681f424,37339400,0,0x0,8
tick,0x7ffdf681f424,37341379,0,0x0,8
tick,0x7ffdf681f424,37343492,0,0x0,8
tick,0x7ffdf681f424,37345259,0,0x0,8
tick,0x7ffdf681f424,37347351,0,0x0,8
tick,0x7ffdf681f424,37349357,0,0x0,8
tick,0x7ffdf681f424,37351258,0,0x0,8
tick,0x7ffdf681f424,37353353,0,0x0,8
tick,0x7ffdf681f424,37355382,0,0x0,8
tick,0x7ffdf681f424,37357345,0,0x0,8
tick,0x7ffdf681f424,37359334,0,0x0,8
tick,0x7ffdf681f424,37361334,0,0x0,8
tick,0x7ffdf681f424,37363326,0,0x0,8
tick,0x7ffdf681f424,37365364,0,0x0,8
tick,0x7ffdf681f424,37367328,0,0x0,8
tick,0x7ffdf681f424,37369305,0,0x0,8
tick,0x7ffdf681f424,37371183,0,0x0,8
tick,0x7ffdf681f424,37373294,0,0x0,8
tick,0x7ffdf681f424,37375291,0,0x0,8
tick,0x7ffdf681f424,37377205,0,0x0,8
tick,0x7ffdf681f424,37379283,0,0x0,8
tick,0x7ffdf681f424,37381275,0,0x0,8
tick,0x7ffdf681f424,37383276,0,0x0,8
tick,0x7ffdf681f424,37385153,0,0x0,8
tick,0x7ffdf681f424,37387294,0,0x0,8
tick,0x7ffdf681f424,37389266,0,0x0,8
tick,0x7ffdf681f424,37391250,0,0x0,8
tick,0x7ffdf681f424,37393239,0,0x0,8
tick,0x7ffdf681f424,37395243,0,0x0,8
tick,0x7ffdf681f424,37397232,0,0x0,8
tick,0x7ffdf681f424,37399236,0,0x0,8
tick,0x7ffdf681f424,37401220,0,0x0,8
tick,0x7ffdf681f424,37403220,0,0x0,8
tick,0x7ffdf681f424,37405208,0,0x0,8
tick,0x7ffdf681f424,37407214,0,0x0,8
tick,0x7ffdf681f424,37409177,0,0x0,8
tick,0x7ffdf681f424,37411095,0,0x0,8
tick,0x7ffdf681f424,37413173,0,0x0,8
tick,0x7ffdf681f424,37415076,0,0x0,8
tick,0x7ffdf681f424,37417174,0,0x0,8
tick,0x7ffdf681f424,37419165,0,0x0,8
tick,0x7ffdf681f424,37421062,0,0x0,8
