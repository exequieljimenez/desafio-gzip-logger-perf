v8-version,9,4,146,24,-node.20,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff7c00e0000,0x7ff7c3e02000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7ffdf6780000,0x7ffdf6970000,0
shared-library,C:\\Program Files\\AVG\\Antivirus\\aswhook.dll,0x7ffdc9740000,0x7ffdc9759000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7ffdf5e50000,0x7ffdf5f02000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7ffdf3c40000,0x7ffdf3ee5000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7ffdf66d0000,0x7ffdf673f000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7ffdf5f20000,0x7ffdf6040000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7ffdf6560000,0x7ffdf6568000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7ffdebf00000,0x7ffdec0f4000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7ffdf5000000,0x7ffdf50a3000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7ffdf4ae0000,0x7ffdf4b7e000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7ffdf4080000,0x7ffdf417a000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7ffdf6570000,0x7ffdf6607000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7ffdf2c00000,0x7ffdf2c3a000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7ffdf3620000,0x7ffdf3645000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7ffdf50e0000,0x7ffdf5274000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7ffdf3fe0000,0x7ffdf4001000,0
shared-library,C:\\WINDOWS\\System32\\profapi.dll,0x7ffdf37a0000,0x7ffdf37c3000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7ffdf50b0000,0x7ffdf50d6000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7ffdf3880000,0x7ffdf3a16000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7ffdf3b70000,0x7ffdf3c0e000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7ffdf3a20000,0x7ffdf3b69000,0
shared-library,C:\\WINDOWS\\System32\\MSASN1.dll,0x7ffdf3730000,0x7ffdf3742000,0
shared-library,C:\\WINDOWS\\System32\\bcrypt.dll,0x7ffdf3c10000,0x7ffdf3c36000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7ffdf1710000,0x7ffdf1734000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\winmmbase.dll,0x7ffdf16e0000,0x7ffdf170d000,0
shared-library,C:\\WINDOWS\\System32\\cfgmgr32.dll,0x7ffdf4010000,0x7ffdf405a000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7ffdf30c0000,0x7ffdf30cc000,0
shared-library,C:\\WINDOWS\\System32\\bcryptPrimitives.dll,0x7ffdf3ef0000,0x7ffdf3f71000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7ffdf5970000,0x7ffdf599e000,0
shared-library,C:\\WINDOWS\\System32\\powrprof.dll,0x7ffdf3750000,0x7ffdf379a000,0
shared-library,C:\\WINDOWS\\System32\\UMPDC.dll,0x7ffdf3700000,0x7ffdf3710000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7ffdf1a40000,0x7ffdf1ad9000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7ffdf4cc0000,0x7ffdf4ff6000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7ffdf2ef0000,0x7ffdf2f57000,0
shared-library,C:\\WINDOWS\\System32\\kernel.appcore.dll,0x7ffdf3710000,0x7ffdf3721000,0
shared-library-end
profiler,begin,1000
tick,0x7ffdf681c774,113134,0,0x0,6
new,CodeRange,0x20400fd0000,0
new,MemoryChunk,0x1495e540000,262144
new,MemoryChunk,0x165c8600000,262144
new,MemoryChunk,0x2016d440000,262144
new,MemoryChunk,0x3375fa80000,262144
new,MemoryChunk,0x334f0b00000,262144
heap-capacity,1031072
heap-available,4346136384
new,MemoryChunk,0x17449fc0000,262144
new,MemoryChunk,0x359dc200000,262144
new,MemoryChunk,0x21794140000,262144
new,MemoryChunk,0x29f2e340000,262144
tick,0x7ff7c11c0cf9,114587,0,0x0,6
new,MemoryChunk,0x5da1380000,262144
new,MemoryChunk,0x4713780000,262144
new,MemoryChunk,0x160e4c40000,262144
new,MemoryChunk,0x20401000000,262144
new,MemoryChunk,0x2d12cbc0000,262144
tick,0x7ff7c08de9e3,116638,0,0x0,6
code-creation,Builtin,2,116712,0x7ff7c0c504a4,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,116723,0x7ff7c0c50a04,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,116729,0x7ff7c0c50be4,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,116735,0x7ff7c0c50e64,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,116761,0x7ff7c0c50f44,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,116770,0x7ff7c0c510c4,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,116776,0x7ff7c0c51164,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,116781,0x7ff7c0c511a4,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,116787,0x7ff7c0c51324,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,116793,0x7ff7c0c514e4,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,116798,0x7ff7c0c516a4,104,CallBoundFunction
code-creation,Builtin,2,116803,0x7ff7c0c51724,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,116808,0x7ff7c0c517a4,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,116814,0x7ff7c0c51824,120,Call_ReceiverIsAny
code-creation,Builtin,2,116819,0x7ff7c0c518a4,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,116824,0x7ff7c0c51ca4,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,116830,0x7ff7c0c520a4,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,116836,0x7ff7c0c524e4,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,116841,0x7ff7c0c52924,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,116847,0x7ff7c0c52d64,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,116853,0x7ff7c0c531a4,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,116859,0x7ff7c0c53564,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,116864,0x7ff7c0c53924,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,116870,0x7ff7c0c53ce4,736,CallProxy
code-creation,Builtin,2,116875,0x7ff7c0c53fe4,148,CallVarargs
code-creation,Builtin,2,116880,0x7ff7c0c54084,944,CallWithSpread
code-creation,Builtin,2,116885,0x7ff7c0c54444,1956,CallWithSpread_Baseline
code-creation,Builtin,2,116891,0x7ff7c0c54c04,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,116896,0x7ff7c0c553a4,864,CallWithArrayLike
code-creation,Builtin,2,116901,0x7ff7c0c55724,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,116906,0x7ff7c0c55e44,156,CallForwardVarargs
code-creation,Builtin,2,116911,0x7ff7c0c55ee4,156,CallFunctionForwardVarargs
code-creation,Builtin,2,116917,0x7ff7c0c55f84,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,116922,0x7ff7c0c56024,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,116928,0x7ff7c0c56124,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,116934,0x7ff7c0c56264,28,ConstructFunction
code-creation,Builtin,2,116939,0x7ff7c0c56284,104,ConstructBoundFunction
code-creation,Builtin,2,116944,0x7ff7c0c56304,28,ConstructedNonConstructable
code-creation,Builtin,2,116949,0x7ff7c0c56324,100,Construct
code-creation,Builtin,2,116954,0x7ff7c0c563a4,148,ConstructVarargs
code-creation,Builtin,2,116959,0x7ff7c0c56444,968,ConstructWithSpread
code-creation,Builtin,2,116964,0x7ff7c0c56824,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,116969,0x7ff7c0c56f04,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,116975,0x7ff7c0c57604,924,ConstructWithArrayLike
code-creation,Builtin,2,116980,0x7ff7c0c579a4,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,116986,0x7ff7c0c58024,196,ConstructForwardVarargs
code-creation,Builtin,2,116991,0x7ff7c0c58104,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,116996,0x7ff7c0c581e4,804,Construct_Baseline
code-creation,Builtin,2,117001,0x7ff7c0c58524,820,Construct_WithFeedback
code-creation,Builtin,2,117007,0x7ff7c0c58864,476,JSConstructStubGeneric
code-creation,Builtin,2,117012,0x7ff7c0c58a44,376,JSBuiltinsConstructStub
code-creation,Builtin,2,117017,0x7ff7c0c58bc4,676,FastNewObject
code-creation,Builtin,2,117022,0x7ff7c0c58e84,292,FastNewClosure
code-creation,Builtin,2,117027,0x7ff7c0c58fc4,720,ConstructProxy
code-creation,Builtin,2,117031,0x7ff7c0c592a4,360,JSEntry
code-creation,Builtin,2,117036,0x7ff7c0c59424,360,JSConstructEntry
code-creation,Builtin,2,117041,0x7ff7c0c595a4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,117060,0x7ff7c0c59724,96,JSEntryTrampoline
code-creation,Builtin,2,117066,0x7ff7c0c597a4,96,JSConstructEntryTrampoline
code-creation,Builtin,2,117072,0x7ff7c0c59824,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,117077,0x7ff7c0c59944,1116,StringCodePointAt
code-creation,Builtin,2,117082,0x7ff7c0c59da4,1552,StringFromCodePointAt
code-creation,Builtin,2,117087,0x7ff7c0c5a3c4,544,StringEqual
code-creation,Builtin,2,117093,0x7ff7c0c5a604,276,StringGreaterThan
code-creation,Builtin,2,117098,0x7ff7c0c5a724,276,StringGreaterThanOrEqual
code-creation,Builtin,2,117104,0x7ff7c0c5a844,276,StringLessThan
code-creation,Builtin,2,117109,0x7ff7c0c5a964,276,StringLessThanOrEqual
code-creation,Builtin,2,117115,0x7ff7c0c5aa84,2492,StringSubstring
code-creation,Builtin,2,117120,0x7ff7c0c5b444,80,OrderedHashTableHealIndex
code-creation,Builtin,2,117125,0x7ff7c0c5b4a4,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,117130,0x7ff7c0c5b944,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,117136,0x7ff7c0c5b9a4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,117141,0x7ff7c0c5ba04,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,117147,0x7ff7c0c5ba64,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,117152,0x7ff7c0c5bac4,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,117158,0x7ff7c0c5bb24,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,117163,0x7ff7c0c5bb84,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,117169,0x7ff7c0c5bbe4,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,117174,0x7ff7c0c5bcc4,52,InterpreterOnStackReplacement
code-creation,Builtin,2,117180,0x7ff7c0c5bd04,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,117185,0x7ff7c0c5bf64,56,BaselineOnStackReplacement
code-creation,Builtin,2,117190,0x7ff7c0c5bfa4,84,BaselineLeaveFrame
code-creation,Builtin,2,117195,0x7ff7c0c5c004,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,117201,0x7ff7c0c5c0e4,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,117206,0x7ff7c0c5c1e4,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,117212,0x7ff7c0c5c2c4,1004,CompileLazy
code-creation,Builtin,2,117217,0x7ff7c0c5c6c4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,117222,0x7ff7c0c5c724,252,InstantiateAsmJs
code-creation,Builtin,2,117227,0x7ff7c0c5c824,32,NotifyDeoptimized
code-creation,Builtin,2,117232,0x7ff7c0c5c864,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,117237,0x7ff7c0c5cb84,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,117242,0x7ff7c0c5cea4,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,117247,0x7ff7c0c5d1c4,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,117252,0x7ff7c0c5d4e4,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,117258,0x7ff7c0c5d524,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,117263,0x7ff7c0c5d564,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,117269,0x7ff7c0c5d5a4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,117274,0x7ff7c0c5d604,288,CallApiCallback
code-creation,Builtin,2,117279,0x7ff7c0c5d744,268,CallApiGetter
code-creation,Builtin,2,117284,0x7ff7c0c5d864,12,HandleApiCall
code-creation,Builtin,2,117289,0x7ff7c0c5d884,12,HandleApiCallAsFunction
code-creation,Builtin,2,117294,0x7ff7c0c5d8a4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,117299,0x7ff7c0c5d8c4,64,AllocateInYoungGeneration
code-creation,Builtin,2,117305,0x7ff7c0c5d924,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,117311,0x7ff7c0c5d964,64,AllocateInOldGeneration
code-creation,Builtin,2,117316,0x7ff7c0c5d9c4,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,117321,0x7ff7c0c5da04,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,117326,0x7ff7c0c5dbc4,496,GrowFastDoubleElements
code-creation,Builtin,2,117331,0x7ff7c0c5ddc4,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,117337,0x7ff7c0c5df64,388,DebugBreakTrampoline
code-creation,Builtin,2,117342,0x7ff7c0c5e104,180,ToNumber
code-creation,Builtin,2,117348,0x7ff7c0c5e1c4,292,ToNumber_Baseline
code-creation,Builtin,2,117353,0x7ff7c0c5e304,360,ToNumeric_Baseline
code-creation,Builtin,2,117358,0x7ff7c0c5e484,104,PlainPrimitiveToNumber
code-creation,Builtin,2,117363,0x7ff7c0c5e504,212,ToNumberConvertBigInt
code-creation,Builtin,2,117368,0x7ff7c0c5e5e4,132,Typeof
code-creation,Builtin,2,117373,0x7ff7c0c5e684,104,BigIntToI64
code-creation,Builtin,2,117378,0x7ff7c0c5e704,4,BigIntToI32Pair
code-creation,Builtin,2,117383,0x7ff7c0c5e724,232,I64ToBigInt
code-creation,Builtin,2,117388,0x7ff7c0c5e824,4,I32PairToBigInt
code-creation,Builtin,2,117393,0x7ff7c0c5e844,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,117398,0x7ff7c0c5e8c4,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,117403,0x7ff7c0c5f964,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,117408,0x7ff7c0c63764,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,117413,0x7ff7c0c63884,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,117419,0x7ff7c0c638c4,12,LoadIC_StringLength
code-creation,Builtin,2,117424,0x7ff7c0c638e4,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,117429,0x7ff7c0c63904,3056,LoadIC_NoFeedback
code-creation,Builtin,2,117434,0x7ff7c0c64504,32,StoreGlobalIC_Slow
code-creation,Builtin,2,117439,0x7ff7c0c64544,7332,StoreIC_NoFeedback
code-creation,Builtin,2,117444,0x7ff7c0c66204,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,117449,0x7ff7c0c662c4,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,117454,0x7ff7c0c66324,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,117460,0x7ff7c0c66424,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,117466,0x7ff7c0c66524,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,117471,0x7ff7c0c66624,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,117477,0x7ff7c0c66724,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,117482,0x7ff7c0c69f44,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,117488,0x7ff7c0c6c4e4,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,117493,0x7ff7c0c6f924,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,117499,0x7ff7c0c71104,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,117505,0x7ff7c0c73244,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,117511,0x7ff7c0c77e04,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,117516,0x7ff7c0c79f44,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,117522,0x7ff7c0c7ca64,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,117527,0x7ff7c0c7cd84,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,117532,0x7ff7c0c7ce44,72,HasIndexedInterceptorIC
code-creation,Builtin,2,117538,0x7ff7c0c7cea4,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,117544,0x7ff7c0c7cf24,224,DynamicCheckMaps
code-creation,Builtin,2,117550,0x7ff7c0c7d024,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,117556,0x7ff7c0c7d0a4,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,117561,0x7ff7c0c7d164,152,EnqueueMicrotask
code-creation,Builtin,2,117566,0x7ff7c0c7d204,8,RunMicrotasksTrampoline
code-creation,Builtin,2,117571,0x7ff7c0c7d224,3476,RunMicrotasks
code-creation,Builtin,2,117576,0x7ff7c0c7dfc4,2636,HasProperty
code-creation,Builtin,2,117581,0x7ff7c0c7ea24,1156,DeleteProperty
code-creation,Builtin,2,117587,0x7ff7c0c7eec4,1972,CopyDataProperties
code-creation,Builtin,2,117592,0x7ff7c0c7f684,9184,SetDataProperties
code-creation,Builtin,2,117597,0x7ff7c0c81a84,28,Abort
code-creation,Builtin,2,117601,0x7ff7c0c81aa4,28,AbortCSAAssert
code-creation,Builtin,2,117606,0x7ff7c0c81ac4,12,EmptyFunction
code-creation,Builtin,2,117611,0x7ff7c0c81ae4,12,Illegal
code-creation,Builtin,2,117616,0x7ff7c0c81b04,12,StrictPoisonPillThrower
code-creation,Builtin,2,117621,0x7ff7c0c81b24,12,UnsupportedThrower
code-creation,Builtin,2,117627,0x7ff7c0c81b44,64,ReturnReceiver
code-creation,Builtin,2,117643,0x7ff7c0c81ba4,28,ArrayConstructor
code-creation,Builtin,2,117649,0x7ff7c0c81bc4,404,ArrayConstructorImpl
code-creation,Builtin,2,117655,0x7ff7c0c81d64,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,117660,0x7ff7c0c81e44,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,117666,0x7ff7c0c81f24,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,117672,0x7ff7c0c81fe4,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,117678,0x7ff7c0c820a4,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,117684,0x7ff7c0c82164,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,117690,0x7ff7c0c82224,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,117698,0x7ff7c0c822e4,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,117704,0x7ff7c0c823a4,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,117709,0x7ff7c0c825c4,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,117715,0x7ff7c0c827c4,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,117722,0x7ff7c0c82984,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,117728,0x7ff7c0c82b24,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,117734,0x7ff7c0c82ce4,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,117740,0x7ff7c0c82e84,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,117746,0x7ff7c0c83064,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,117752,0x7ff7c0c83204,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,117757,0x7ff7c0c83264,12,ArrayConcat
code-creation,Builtin,2,117762,0x7ff7c0c83284,12,ArrayPrototypeFill
code-creation,Builtin,2,117767,0x7ff7c0c832a4,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,117773,0x7ff7c0c83664,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,117778,0x7ff7c0c83704,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,117783,0x7ff7c0c837e4,548,ArrayIncludes
code-creation,Builtin,2,117788,0x7ff7c0c83a24,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,117793,0x7ff7c0c83d84,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,117798,0x7ff7c0c83e04,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,117803,0x7ff7c0c83e84,552,ArrayIndexOf
code-creation,Builtin,2,117808,0x7ff7c0c840c4,12,ArrayPop
code-creation,Builtin,2,117813,0x7ff7c0c840e4,616,ArrayPrototypePop
code-creation,Builtin,2,117818,0x7ff7c0c84364,12,ArrayPush
code-creation,Builtin,2,117823,0x7ff7c0c84384,2424,ArrayPrototypePush
code-creation,Builtin,2,117828,0x7ff7c0c84d04,12,ArrayShift
code-creation,Builtin,2,117832,0x7ff7c0c84d24,12,ArrayUnshift
code-creation,Builtin,2,117837,0x7ff7c0c84d44,956,CloneFastJSArray
code-creation,Builtin,2,117842,0x7ff7c0c85104,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,117847,0x7ff7c0c859a4,976,ExtractFastJSArray
code-creation,Builtin,2,117853,0x7ff7c0c85d84,260,ArrayPrototypeEntries
code-creation,Builtin,2,117858,0x7ff7c0c85ea4,248,ArrayPrototypeKeys
code-creation,Builtin,2,117863,0x7ff7c0c85fa4,260,ArrayPrototypeValues
code-creation,Builtin,2,117868,0x7ff7c0c860c4,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,117873,0x7ff7c0c87224,4168,FlattenIntoArray
code-creation,Builtin,2,117878,0x7ff7c0c88284,4172,FlatMapIntoArray
code-creation,Builtin,2,117883,0x7ff7c0c892e4,372,ArrayPrototypeFlat
code-creation,Builtin,2,117888,0x7ff7c0c89464,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,117893,0x7ff7c0c89624,12,ArrayBufferConstructor
code-creation,Builtin,2,117898,0x7ff7c0c89644,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,117904,0x7ff7c0c89664,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,117909,0x7ff7c0c89684,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,117924,0x7ff7c0c896a4,804,AsyncFunctionEnter
code-creation,Builtin,2,117931,0x7ff7c0c899e4,132,AsyncFunctionReject
code-creation,Builtin,2,117936,0x7ff7c0c89a84,128,AsyncFunctionResolve
code-creation,Builtin,2,117941,0x7ff7c0c89b24,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,117946,0x7ff7c0c89b44,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,117952,0x7ff7c0c8a644,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,117957,0x7ff7c0c8b144,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,117963,0x7ff7c0c8b204,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,117968,0x7ff7c0c8b2c4,12,BigIntConstructor
code-creation,Builtin,2,117973,0x7ff7c0c8b2e4,12,BigIntAsUintN
code-creation,Builtin,2,117978,0x7ff7c0c8b304,12,BigIntAsIntN
code-creation,Builtin,2,117983,0x7ff7c0c8b324,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,117988,0x7ff7c0c8b344,12,BigIntPrototypeToString
code-creation,Builtin,2,117993,0x7ff7c0c8b364,12,BigIntPrototypeValueOf
code-creation,Builtin,2,117999,0x7ff7c0c8b384,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,118004,0x7ff7c0c8b3a4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,118009,0x7ff7c0c8b3c4,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,118015,0x7ff7c0c8b3e4,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,118020,0x7ff7c0c8b404,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,118025,0x7ff7c0c8b424,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,118031,0x7ff7c0c8b444,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,118036,0x7ff7c0c8b464,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,118042,0x7ff7c0c8b484,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,118047,0x7ff7c0c8b4a4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,118052,0x7ff7c0c8b4c4,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,118057,0x7ff7c0c8b4e4,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,118063,0x7ff7c0c8b504,12,CallSitePrototypeGetThis
code-creation,Builtin,2,118068,0x7ff7c0c8b524,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,118073,0x7ff7c0c8b544,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,118079,0x7ff7c0c8b564,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,118084,0x7ff7c0c8b584,12,CallSitePrototypeIsEval
code-creation,Builtin,2,118089,0x7ff7c0c8b5a4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,118094,0x7ff7c0c8b5c4,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,118099,0x7ff7c0c8b5e4,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,118104,0x7ff7c0c8b604,12,CallSitePrototypeToString
code-creation,Builtin,2,118110,0x7ff7c0c8b624,12,ConsoleDebug
code-creation,Builtin,2,118115,0x7ff7c0c8b644,12,ConsoleError
code-creation,Builtin,2,118120,0x7ff7c0c8b664,12,ConsoleInfo
code-creation,Builtin,2,118125,0x7ff7c0c8b684,12,ConsoleLog
code-creation,Builtin,2,118129,0x7ff7c0c8b6a4,12,ConsoleWarn
code-creation,Builtin,2,118134,0x7ff7c0c8b6c4,12,ConsoleDir
code-creation,Builtin,2,118139,0x7ff7c0c8b6e4,12,ConsoleDirXml
code-creation,Builtin,2,118144,0x7ff7c0c8b704,12,ConsoleTable
code-creation,Builtin,2,118149,0x7ff7c0c8b724,12,ConsoleTrace
code-creation,Builtin,2,118154,0x7ff7c0c8b744,12,ConsoleGroup
code-creation,Builtin,2,118159,0x7ff7c0c8b764,12,ConsoleGroupCollapsed
code-creation,Builtin,2,118164,0x7ff7c0c8b784,12,ConsoleGroupEnd
code-creation,Builtin,2,118168,0x7ff7c0c8b7a4,12,ConsoleClear
code-creation,Builtin,2,118173,0x7ff7c0c8b7c4,12,ConsoleCount
code-creation,Builtin,2,118178,0x7ff7c0c8b7e4,12,ConsoleCountReset
code-creation,Builtin,2,118183,0x7ff7c0c8b804,12,ConsoleAssert
code-creation,Builtin,2,118188,0x7ff7c0c8b824,12,ConsoleProfile
code-creation,Builtin,2,118193,0x7ff7c0c8b844,12,ConsoleProfileEnd
code-creation,Builtin,2,118198,0x7ff7c0c8b864,12,ConsoleTime
code-creation,Builtin,2,118203,0x7ff7c0c8b884,12,ConsoleTimeLog
code-creation,Builtin,2,118208,0x7ff7c0c8b8a4,12,ConsoleTimeEnd
code-creation,Builtin,2,118222,0x7ff7c0c8b8c4,12,ConsoleTimeStamp
code-creation,Builtin,2,118228,0x7ff7c0c8b8e4,12,ConsoleContext
code-creation,Builtin,2,118233,0x7ff7c0c8b904,12,DataViewConstructor
code-creation,Builtin,2,118239,0x7ff7c0c8b924,12,DateConstructor
code-creation,Builtin,2,118244,0x7ff7c0c8b944,216,DatePrototypeGetDate
code-creation,Builtin,2,118249,0x7ff7c0c8ba24,216,DatePrototypeGetDay
code-creation,Builtin,2,118254,0x7ff7c0c8bb04,216,DatePrototypeGetFullYear
code-creation,Builtin,2,118259,0x7ff7c0c8bbe4,216,DatePrototypeGetHours
code-creation,Builtin,2,118264,0x7ff7c0c8bcc4,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,118269,0x7ff7c0c8bda4,216,DatePrototypeGetMinutes
code-creation,Builtin,2,118274,0x7ff7c0c8be84,216,DatePrototypeGetMonth
code-creation,Builtin,2,118279,0x7ff7c0c8bf64,216,DatePrototypeGetSeconds
code-creation,Builtin,2,118285,0x7ff7c0c8c044,124,DatePrototypeGetTime
code-creation,Builtin,2,118290,0x7ff7c0c8c0c4,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,118295,0x7ff7c0c8c1a4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,118300,0x7ff7c0c8c284,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,118305,0x7ff7c0c8c364,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,118311,0x7ff7c0c8c444,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,118316,0x7ff7c0c8c524,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,118321,0x7ff7c0c8c604,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,118326,0x7ff7c0c8c6e4,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,118332,0x7ff7c0c8c7c4,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,118337,0x7ff7c0c8c8a4,124,DatePrototypeValueOf
code-creation,Builtin,2,118342,0x7ff7c0c8c924,352,DatePrototypeToPrimitive
code-creation,Builtin,2,118347,0x7ff7c0c8caa4,12,DatePrototypeGetYear
code-creation,Builtin,2,118352,0x7ff7c0c8cac4,12,DatePrototypeSetYear
code-creation,Builtin,2,118357,0x7ff7c0c8cae4,12,DateNow
code-creation,Builtin,2,118362,0x7ff7c0c8cb04,12,DateParse
code-creation,Builtin,2,118367,0x7ff7c0c8cb24,12,DatePrototypeSetDate
code-creation,Builtin,2,118372,0x7ff7c0c8cb44,12,DatePrototypeSetFullYear
code-creation,Builtin,2,118377,0x7ff7c0c8cb64,12,DatePrototypeSetHours
code-creation,Builtin,2,118382,0x7ff7c0c8cb84,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,118387,0x7ff7c0c8cba4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,118392,0x7ff7c0c8cbc4,12,DatePrototypeSetMonth
code-creation,Builtin,2,118397,0x7ff7c0c8cbe4,12,DatePrototypeSetSeconds
code-creation,Builtin,2,118403,0x7ff7c0c8cc04,12,DatePrototypeSetTime
code-creation,Builtin,2,118408,0x7ff7c0c8cc24,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,118413,0x7ff7c0c8cc44,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,118418,0x7ff7c0c8cc64,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,118423,0x7ff7c0c8cc84,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,118428,0x7ff7c0c8cca4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,118433,0x7ff7c0c8ccc4,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,118438,0x7ff7c0c8cce4,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,118444,0x7ff7c0c8cd04,12,DatePrototypeToDateString
code-creation,Builtin,2,118449,0x7ff7c0c8cd24,12,DatePrototypeToISOString
code-creation,Builtin,2,118454,0x7ff7c0c8cd44,12,DatePrototypeToUTCString
code-creation,Builtin,2,118459,0x7ff7c0c8cd64,12,DatePrototypeToString
code-creation,Builtin,2,118464,0x7ff7c0c8cd84,12,DatePrototypeToTimeString
code-creation,Builtin,2,118469,0x7ff7c0c8cda4,12,DatePrototypeToJson
code-creation,Builtin,2,118474,0x7ff7c0c8cdc4,12,DateUTC
code-creation,Builtin,2,118478,0x7ff7c0c8cde4,12,ErrorConstructor
code-creation,Builtin,2,118485,0x7ff7c0c8ce04,12,ErrorCaptureStackTrace
code-creation,Builtin,2,118490,0x7ff7c0c8ce24,12,ErrorPrototypeToString
code-creation,Builtin,2,118495,0x7ff7c0c8ce44,12,FunctionConstructor
code-creation,Builtin,2,118500,0x7ff7c0c8ce64,68,FunctionPrototypeApply
code-creation,Builtin,2,118505,0x7ff7c0c8cec4,12,FunctionPrototypeBind
code-creation,Builtin,2,118510,0x7ff7c0c8cee4,32,FunctionPrototypeCall
code-creation,Builtin,2,118532,0x7ff7c0c8cf24,12,FunctionPrototypeToString
code-creation,Builtin,2,118540,0x7ff7c0c8cf44,192,CreateIterResultObject
code-creation,Builtin,2,118545,0x7ff7c0c8d024,788,CreateGeneratorObject
code-creation,Builtin,2,118551,0x7ff7c0c8d344,12,GeneratorFunctionConstructor
code-creation,Builtin,2,118556,0x7ff7c0c8d364,412,GeneratorPrototypeNext
code-creation,Builtin,2,118561,0x7ff7c0c8d504,420,GeneratorPrototypeReturn
code-creation,Builtin,2,118612,0x7ff7c0c8d6c4,424,GeneratorPrototypeThrow
code-creation,Builtin,2,118619,0x7ff7c0c8d884,12,AsyncFunctionConstructor
code-creation,Builtin,2,118624,0x7ff7c0c8d8a4,372,SuspendGeneratorBaseline
code-creation,Builtin,2,118629,0x7ff7c0c8da24,88,ResumeGeneratorBaseline
code-creation,Builtin,2,118634,0x7ff7c0c8da84,36,GetIteratorWithFeedbackLazyDeoptContinuation
tick,0x7ffdf681c7f4,118640,0,0x0,6
code-creation,Builtin,2,118655,0x7ff7c0c8dac4,12,GlobalDecodeURI
code-creation,Builtin,2,118662,0x7ff7c0c8dae4,12,GlobalDecodeURIComponent
code-creation,Builtin,2,118667,0x7ff7c0c8db04,12,GlobalEncodeURI
code-creation,Builtin,2,118672,0x7ff7c0c8db24,12,GlobalEncodeURIComponent
code-creation,Builtin,2,118677,0x7ff7c0c8db44,12,GlobalEscape
code-creation,Builtin,2,118682,0x7ff7c0c8db64,12,GlobalUnescape
code-creation,Builtin,2,118687,0x7ff7c0c8db84,12,GlobalEval
code-creation,Builtin,2,118691,0x7ff7c0c8dba4,132,GlobalIsFinite
code-creation,Builtin,2,118697,0x7ff7c0c8dc44,124,GlobalIsNaN
code-creation,Builtin,2,118702,0x7ff7c0c8dcc4,12,JsonParse
code-creation,Builtin,2,118706,0x7ff7c0c8dce4,12,JsonStringify
code-creation,Builtin,2,118711,0x7ff7c0c8dd04,4608,LoadIC
code-creation,Builtin,2,118717,0x7ff7c0c8ef24,4296,LoadIC_Megamorphic
code-creation,Builtin,2,118722,0x7ff7c0c90004,4520,LoadIC_Noninlined
code-creation,Builtin,2,118727,0x7ff7c0c911c4,44,LoadICTrampoline
code-creation,Builtin,2,118732,0x7ff7c0c91204,24,LoadICBaseline
code-creation,Builtin,2,118737,0x7ff7c0c91224,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,118743,0x7ff7c0c91264,7376,LoadSuperIC
code-creation,Builtin,2,118748,0x7ff7c0c92f44,24,LoadSuperICBaseline
code-creation,Builtin,2,118753,0x7ff7c0c92f64,8148,KeyedLoadIC
code-creation,Builtin,2,118758,0x7ff7c0c94f44,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,118763,0x7ff7c0c98284,44,KeyedLoadICTrampoline
code-creation,Builtin,2,118768,0x7ff7c0c982c4,24,KeyedLoadICBaseline
code-creation,Builtin,2,118773,0x7ff7c0c982e4,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,118779,0x7ff7c0c98324,5104,StoreGlobalIC
code-creation,Builtin,2,118784,0x7ff7c0c99724,44,StoreGlobalICTrampoline
code-creation,Builtin,2,118789,0x7ff7c0c99764,24,StoreGlobalICBaseline
code-creation,Builtin,2,118794,0x7ff7c0c99784,5340,StoreIC
code-creation,Builtin,2,118798,0x7ff7c0c9ac64,44,StoreICTrampoline
code-creation,Builtin,2,118803,0x7ff7c0c9aca4,24,StoreICBaseline
code-creation,Builtin,2,118808,0x7ff7c0c9acc4,5780,KeyedStoreIC
code-creation,Builtin,2,118813,0x7ff7c0c9c364,44,KeyedStoreICTrampoline
code-creation,Builtin,2,118818,0x7ff7c0c9c3a4,24,KeyedStoreICBaseline
code-creation,Builtin,2,118823,0x7ff7c0c9c3c4,404,StoreInArrayLiteralIC
code-creation,Builtin,2,118829,0x7ff7c0c9c564,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,118834,0x7ff7c0c9c584,140,LookupContextBaseline
code-creation,Builtin,2,118839,0x7ff7c0c9c624,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,118845,0x7ff7c0c9c6c4,3244,LoadGlobalIC
code-creation,Builtin,2,118850,0x7ff7c0c9d384,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,118855,0x7ff7c0c9e024,44,LoadGlobalICTrampoline
code-creation,Builtin,2,118861,0x7ff7c0c9e064,24,LoadGlobalICBaseline
code-creation,Builtin,2,118866,0x7ff7c0c9e084,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,118872,0x7ff7c0c9e0c4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,118877,0x7ff7c0c9e0e4,140,LookupGlobalICBaseline
code-creation,Builtin,2,118882,0x7ff7c0c9e184,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,118888,0x7ff7c0c9e224,2064,CloneObjectIC
code-creation,Builtin,2,118892,0x7ff7c0c9ea44,24,CloneObjectICBaseline
code-creation,Builtin,2,118899,0x7ff7c0c9ea64,1988,CloneObjectIC_Slow
code-creation,Builtin,2,118904,0x7ff7c0c9f244,2756,KeyedHasIC
code-creation,Builtin,2,118910,0x7ff7c0c9fd24,24,KeyedHasICBaseline
code-creation,Builtin,2,118915,0x7ff7c0c9fd44,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,118920,0x7ff7c0ca07a4,1436,IterableToList
code-creation,Builtin,2,118925,0x7ff7c0ca0d44,1240,IterableToFixedArray
code-creation,Builtin,2,118930,0x7ff7c0ca1224,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,118935,0x7ff7c0ca1524,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,118941,0x7ff7c0ca1564,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,118946,0x7ff7c0ca15e4,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,118952,0x7ff7c0ca19c4,1616,StringListFromIterable
code-creation,Builtin,2,118957,0x7ff7c0ca2024,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,118962,0x7ff7c0ca2504,4156,MapConstructor
code-creation,Builtin,2,118967,0x7ff7c0ca3544,1996,MapPrototypeSet
code-creation,Builtin,2,118972,0x7ff7c0ca3d24,1524,MapPrototypeDelete
code-creation,Builtin,2,118977,0x7ff7c0ca4324,204,MapPrototypeGet
code-creation,Builtin,2,118982,0x7ff7c0ca4404,164,MapPrototypeHas
code-creation,Builtin,2,118987,0x7ff7c0ca44c4,12,MapPrototypeClear
code-creation,Builtin,2,118992,0x7ff7c0ca44e4,284,MapPrototypeEntries
code-creation,Builtin,2,118997,0x7ff7c0ca4604,144,MapPrototypeGetSize
code-creation,Builtin,2,119002,0x7ff7c0ca46a4,492,MapPrototypeForEach
code-creation,Builtin,2,119007,0x7ff7c0ca48a4,284,MapPrototypeKeys
code-creation,Builtin,2,119012,0x7ff7c0ca49c4,284,MapPrototypeValues
code-creation,Builtin,2,119017,0x7ff7c0ca4ae4,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,119023,0x7ff7c0ca4f04,1168,MapIteratorToList
code-creation,Builtin,2,119028,0x7ff7c0ca53a4,12,NumberPrototypeToExponential
code-creation,Builtin,2,119033,0x7ff7c0ca53c4,12,NumberPrototypeToFixed
code-creation,Builtin,2,119038,0x7ff7c0ca53e4,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,119043,0x7ff7c0ca5404,12,NumberPrototypeToPrecision
code-creation,Builtin,2,119049,0x7ff7c0ca5424,328,SameValue
code-creation,Builtin,2,119054,0x7ff7c0ca5584,204,SameValueNumbersOnly
code-creation,Builtin,2,119059,0x7ff7c0ca5664,792,Add_Baseline
code-creation,Builtin,2,119064,0x7ff7c0ca5984,828,Subtract_Baseline
code-creation,Builtin,2,119069,0x7ff7c0ca5cc4,808,Multiply_Baseline
code-creation,Builtin,2,119074,0x7ff7c0ca6004,832,Divide_Baseline
code-creation,Builtin,2,119079,0x7ff7c0ca6364,764,Modulus_Baseline
code-creation,Builtin,2,119084,0x7ff7c0ca6664,808,Exponentiate_Baseline
code-creation,Builtin,2,119089,0x7ff7c0ca69a4,708,BitwiseAnd_Baseline
code-creation,Builtin,2,119094,0x7ff7c0ca6c84,700,BitwiseOr_Baseline
code-creation,Builtin,2,119099,0x7ff7c0ca6f44,708,BitwiseXor_Baseline
code-creation,Builtin,2,119104,0x7ff7c0ca7224,720,ShiftLeft_Baseline
code-creation,Builtin,2,119109,0x7ff7c0ca7504,720,ShiftRight_Baseline
code-creation,Builtin,2,119114,0x7ff7c0ca77e4,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,119119,0x7ff7c0ca7b44,720,Add_WithFeedback
code-creation,Builtin,2,119124,0x7ff7c0ca7e24,780,Subtract_WithFeedback
code-creation,Builtin,2,119129,0x7ff7c0ca8144,776,Multiply_WithFeedback
code-creation,Builtin,2,119134,0x7ff7c0ca8464,804,Divide_WithFeedback
code-creation,Builtin,2,119139,0x7ff7c0ca87a4,724,Modulus_WithFeedback
code-creation,Builtin,2,119144,0x7ff7c0ca8a84,764,Exponentiate_WithFeedback
code-creation,Builtin,2,119150,0x7ff7c0ca8d84,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,119155,0x7ff7c0ca9044,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,119160,0x7ff7c0ca9304,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,119165,0x7ff7c0ca95c4,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,119170,0x7ff7c0ca9884,692,ShiftRight_WithFeedback
code-creation,Builtin,2,119175,0x7ff7c0ca9b44,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,119180,0x7ff7c0ca9e84,1696,Equal_Baseline
code-creation,Builtin,2,119186,0x7ff7c0caa544,908,StrictEqual_Baseline
code-creation,Builtin,2,119191,0x7ff7c0caa8e4,1264,LessThan_Baseline
code-creation,Builtin,2,119197,0x7ff7c0caade4,1264,GreaterThan_Baseline
code-creation,Builtin,2,119202,0x7ff7c0cab2e4,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,119207,0x7ff7c0cab7e4,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,119212,0x7ff7c0cabce4,1620,Equal_WithFeedback
code-creation,Builtin,2,119218,0x7ff7c0cac344,940,StrictEqual_WithFeedback
code-creation,Builtin,2,119223,0x7ff7c0cac704,1240,LessThan_WithFeedback
code-creation,Builtin,2,119228,0x7ff7c0cacbe4,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,119233,0x7ff7c0cad0c4,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,119239,0x7ff7c0cad5a4,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,119244,0x7ff7c0cada84,332,BitwiseNot_Baseline
code-creation,Builtin,2,119249,0x7ff7c0cadbe4,460,Decrement_Baseline
code-creation,Builtin,2,119254,0x7ff7c0caddc4,464,Increment_Baseline
code-creation,Builtin,2,119259,0x7ff7c0cadfa4,488,Negate_Baseline
code-creation,Builtin,2,119264,0x7ff7c0cae1a4,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,119269,0x7ff7c0cae2e4,440,Decrement_WithFeedback
code-creation,Builtin,2,119275,0x7ff7c0cae4a4,444,Increment_WithFeedback
code-creation,Builtin,2,119280,0x7ff7c0cae664,472,Negate_WithFeedback
code-creation,Builtin,2,119285,0x7ff7c0cae844,252,ObjectAssign
code-creation,Builtin,2,119290,0x7ff7c0cae944,864,ObjectCreate
code-creation,Builtin,2,119295,0x7ff7c0caecc4,12,ObjectDefineGetter
code-creation,Builtin,2,119300,0x7ff7c0caece4,12,ObjectDefineProperties
code-creation,Builtin,2,119305,0x7ff7c0caed04,12,ObjectDefineProperty
code-creation,Builtin,2,119310,0x7ff7c0caed24,12,ObjectDefineSetter
code-creation,Builtin,2,119315,0x7ff7c0caed44,1516,ObjectEntries
code-creation,Builtin,2,119320,0x7ff7c0caf344,12,ObjectFreeze
code-creation,Builtin,2,119325,0x7ff7c0caf364,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,119330,0x7ff7c0cb0964,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,119336,0x7ff7c0cb0984,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,119341,0x7ff7c0cb0be4,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,119346,0x7ff7c0cb0c04,164,ObjectHasOwn
code-creation,Builtin,2,119351,0x7ff7c0cb0cc4,388,ObjectIs
code-creation,Builtin,2,119356,0x7ff7c0cb0e64,12,ObjectIsFrozen
code-creation,Builtin,2,119361,0x7ff7c0cb0e84,12,ObjectIsSealed
code-creation,Builtin,2,119366,0x7ff7c0cb0ea4,536,ObjectKeys
code-creation,Builtin,2,119371,0x7ff7c0cb10c4,12,ObjectLookupGetter
code-creation,Builtin,2,119376,0x7ff7c0cb10e4,12,ObjectLookupSetter
code-creation,Builtin,2,119381,0x7ff7c0cb1104,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,119386,0x7ff7c0cb1a04,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,119392,0x7ff7c0cb1ae4,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,119397,0x7ff7c0cb1b04,12,ObjectPrototypeGetProto
code-creation,Builtin,2,119402,0x7ff7c0cb1b24,12,ObjectPrototypeSetProto
code-creation,Builtin,2,119408,0x7ff7c0cb1b44,12,ObjectSeal
code-creation,Builtin,2,119412,0x7ff7c0cb1b64,1108,ObjectToString
code-creation,Builtin,2,119417,0x7ff7c0cb1fc4,1284,ObjectValues
code-creation,Builtin,2,119422,0x7ff7c0cb24e4,280,OrdinaryHasInstance
code-creation,Builtin,2,119427,0x7ff7c0cb2604,344,InstanceOf
code-creation,Builtin,2,119432,0x7ff7c0cb2764,632,InstanceOf_WithFeedback
code-creation,Builtin,2,119437,0x7ff7c0cb29e4,648,InstanceOf_Baseline
code-creation,Builtin,2,119443,0x7ff7c0cb2c84,268,ForInEnumerate
code-creation,Builtin,2,119448,0x7ff7c0cb2da4,148,ForInPrepare
code-creation,Builtin,2,119453,0x7ff7c0cb2e44,2584,ForInFilter
code-creation,Builtin,2,119457,0x7ff7c0cb3864,52,ReflectApply
code-creation,Builtin,2,119462,0x7ff7c0cb38a4,60,ReflectConstruct
code-creation,Builtin,2,119467,0x7ff7c0cb38e4,12,ReflectDefineProperty
code-creation,Builtin,2,119472,0x7ff7c0cb3904,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,119478,0x7ff7c0cb3924,12,ReflectOwnKeys
code-creation,Builtin,2,119483,0x7ff7c0cb3944,12,ReflectSet
code-creation,Builtin,2,119488,0x7ff7c0cb3964,12,RegExpCapture1Getter
code-creation,Builtin,2,119493,0x7ff7c0cb3984,12,RegExpCapture2Getter
code-creation,Builtin,2,119499,0x7ff7c0cb39a4,12,RegExpCapture3Getter
code-creation,Builtin,2,119505,0x7ff7c0cb39c4,12,RegExpCapture4Getter
code-creation,Builtin,2,119510,0x7ff7c0cb39e4,12,RegExpCapture5Getter
code-creation,Builtin,2,119515,0x7ff7c0cb3a04,12,RegExpCapture6Getter
code-creation,Builtin,2,119521,0x7ff7c0cb3a24,12,RegExpCapture7Getter
code-creation,Builtin,2,119526,0x7ff7c0cb3a44,12,RegExpCapture8Getter
code-creation,Builtin,2,119531,0x7ff7c0cb3a64,12,RegExpCapture9Getter
code-creation,Builtin,2,119537,0x7ff7c0cb3a84,2212,RegExpConstructor
code-creation,Builtin,2,119542,0x7ff7c0cb4344,12,RegExpInputGetter
code-creation,Builtin,2,119547,0x7ff7c0cb4364,12,RegExpInputSetter
code-creation,Builtin,2,119552,0x7ff7c0cb4384,12,RegExpLastMatchGetter
code-creation,Builtin,2,119557,0x7ff7c0cb43a4,12,RegExpLastParenGetter
code-creation,Builtin,2,119562,0x7ff7c0cb43c4,12,RegExpLeftContextGetter
code-creation,Builtin,2,119567,0x7ff7c0cb43e4,908,RegExpPrototypeCompile
code-creation,Builtin,2,119572,0x7ff7c0cb4784,12,RegExpPrototypeToString
code-creation,Builtin,2,119577,0x7ff7c0cb47a4,12,RegExpRightContextGetter
code-creation,Builtin,2,119582,0x7ff7c0cb47c4,252,RegExpExecAtom
code-creation,Builtin,2,119587,0x7ff7c0cb48c4,1040,RegExpExecInternal
code-creation,Builtin,2,119593,0x7ff7c0cb4ce4,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,119598,0x7ff7c0cb4d04,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,119603,0x7ff7c0cb4d24,2684,SetConstructor
code-creation,Builtin,2,119608,0x7ff7c0cb57a4,1284,SetPrototypeHas
code-creation,Builtin,2,119613,0x7ff7c0cb5cc4,1736,SetPrototypeAdd
code-creation,Builtin,2,119618,0x7ff7c0cb63a4,1476,SetPrototypeDelete
code-creation,Builtin,2,119623,0x7ff7c0cb6984,12,SetPrototypeClear
code-creation,Builtin,2,119628,0x7ff7c0cb69a4,284,SetPrototypeEntries
code-creation,Builtin,2,119634,0x7ff7c0cb6ac4,144,SetPrototypeGetSize
code-creation,Builtin,2,119639,0x7ff7c0cb6b64,444,SetPrototypeForEach
code-creation,Builtin,2,119644,0x7ff7c0cb6d24,284,SetPrototypeValues
code-creation,Builtin,2,119649,0x7ff7c0cb6e44,988,SetIteratorPrototypeNext
code-creation,Builtin,2,119654,0x7ff7c0cb7224,1112,SetOrSetIteratorToList
code-creation,Builtin,2,119659,0x7ff7c0cb7684,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,119665,0x7ff7c0cb76a4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,119671,0x7ff7c0cb76c4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,119676,0x7ff7c0cb76e4,1280,AtomicsLoad
code-creation,Builtin,2,119681,0x7ff7c0cb7c04,1008,AtomicsStore
code-creation,Builtin,2,119686,0x7ff7c0cb8004,1704,AtomicsExchange
code-creation,Builtin,2,119691,0x7ff7c0cb86c4,2092,AtomicsCompareExchange
code-creation,Builtin,2,119696,0x7ff7c0cb8f04,1804,AtomicsAdd
code-creation,Builtin,2,119701,0x7ff7c0cb9624,1804,AtomicsSub
code-creation,Builtin,2,119706,0x7ff7c0cb9d44,1804,AtomicsAnd
code-creation,Builtin,2,119711,0x7ff7c0cba464,1804,AtomicsOr
code-creation,Builtin,2,119716,0x7ff7c0cbab84,1804,AtomicsXor
code-creation,Builtin,2,119721,0x7ff7c0cbb2a4,12,AtomicsNotify
code-creation,Builtin,2,119726,0x7ff7c0cbb2c4,12,AtomicsIsLockFree
code-creation,Builtin,2,119731,0x7ff7c0cbb2e4,12,AtomicsWait
code-creation,Builtin,2,119735,0x7ff7c0cbb304,12,AtomicsWaitAsync
code-creation,Builtin,2,119740,0x7ff7c0cbb324,12,StringFromCodePoint
code-creation,Builtin,2,119745,0x7ff7c0cbb344,1428,StringFromCharCode
code-creation,Builtin,2,119751,0x7ff7c0cbb8e4,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,119756,0x7ff7c0cbb904,4360,StringPrototypeMatchAll
code-creation,Builtin,2,119761,0x7ff7c0cbca24,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,119767,0x7ff7c0cbca44,1228,StringPrototypeReplace
code-creation,Builtin,2,119772,0x7ff7c0cbcf24,2900,StringPrototypeSplit
code-creation,Builtin,2,119777,0x7ff7c0cbda84,12,StringRaw
code-creation,Builtin,2,119782,0x7ff7c0cbdaa4,12,SymbolConstructor
code-creation,Builtin,2,119787,0x7ff7c0cbdac4,12,SymbolFor
code-creation,Builtin,2,119792,0x7ff7c0cbdae4,12,SymbolKeyFor
code-creation,Builtin,2,119798,0x7ff7c0cbdb04,88,TypedArrayBaseConstructor
code-creation,Builtin,2,119803,0x7ff7c0cbdb64,256,TypedArrayConstructor
code-creation,Builtin,2,119808,0x7ff7c0cbdc84,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,119813,0x7ff7c0cbdca4,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,119819,0x7ff7c0cbe024,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,119824,0x7ff7c0cbe1a4,584,TypedArrayPrototypeLength
code-creation,Builtin,2,119829,0x7ff7c0cbe404,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,119835,0x7ff7c0cbe424,12,TypedArrayPrototypeFill
code-creation,Builtin,2,119840,0x7ff7c0cbe444,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,119845,0x7ff7c0cbe464,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,119850,0x7ff7c0cbe484,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,119856,0x7ff7c0cbe4a4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,119861,0x7ff7c0cbe4c4,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,119866,0x7ff7c0cbe604,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,119871,0x7ff7c0cc0fc4,792,GenericJSToWasmWrapper
code-creation,Builtin,2,119877,0x7ff7c0cc12e4,148,WasmCompileLazy
code-creation,Builtin,2,119882,0x7ff7c0cc1384,168,WasmDebugBreak
code-creation,Builtin,2,119887,0x7ff7c0cc1444,16,WasmOnStackReplace
code-creation,Builtin,2,119892,0x7ff7c0cc1464,140,WasmFloat32ToNumber
code-creation,Builtin,2,119897,0x7ff7c0cc1504,152,WasmFloat64ToNumber
code-creation,Builtin,2,119902,0x7ff7c0cc15a4,4,WasmI32AtomicWait32
code-creation,Builtin,2,119907,0x7ff7c0cc15c4,4,WasmI64AtomicWait32
code-creation,Builtin,2,119912,0x7ff7c0cc15e4,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,119917,0x7ff7c0cc1604,4320,WeakMapConstructor
code-creation,Builtin,2,119923,0x7ff7c0cc2704,196,WeakMapLookupHashIndex
code-creation,Builtin,2,119928,0x7ff7c0cc27e4,220,WeakMapGet
code-creation,Builtin,2,119933,0x7ff7c0cc28c4,176,WeakMapPrototypeHas
code-creation,Builtin,2,119938,0x7ff7c0cc2984,204,WeakMapPrototypeSet
code-creation,Builtin,2,119943,0x7ff7c0cc2a64,144,WeakMapPrototypeDelete
code-creation,Builtin,2,119948,0x7ff7c0cc2b04,2876,WeakSetConstructor
code-creation,Builtin,2,119953,0x7ff7c0cc3644,176,WeakSetPrototypeHas
code-creation,Builtin,2,119958,0x7ff7c0cc3704,204,WeakSetPrototypeAdd
code-creation,Builtin,2,119963,0x7ff7c0cc37e4,144,WeakSetPrototypeDelete
code-creation,Builtin,2,119969,0x7ff7c0cc3884,372,WeakCollectionDelete
code-creation,Builtin,2,119974,0x7ff7c0cc3a04,764,WeakCollectionSet
code-creation,Builtin,2,119979,0x7ff7c0cc3d04,296,AsyncGeneratorResolve
code-creation,Builtin,2,119984,0x7ff7c0cc3e44,100,AsyncGeneratorReject
code-creation,Builtin,2,119989,0x7ff7c0cc3ec4,2760,AsyncGeneratorYield
code-creation,Builtin,2,119994,0x7ff7c0cc49a4,2872,AsyncGeneratorReturn
code-creation,Builtin,2,119999,0x7ff7c0cc54e4,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,120005,0x7ff7c0cc5624,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,120010,0x7ff7c0cc5644,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,120015,0x7ff7c0cc5a44,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,120020,0x7ff7c0cc5e64,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,120026,0x7ff7c0cc6284,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,120031,0x7ff7c0cc6d44,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,120036,0x7ff7c0cc7804,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,120042,0x7ff7c0cc7884,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,120047,0x7ff7c0cc7924,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,120053,0x7ff7c0cc79a4,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,120058,0x7ff7c0cc7a24,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,120064,0x7ff7c0cc7aa4,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,120069,0x7ff7c0cc7b44,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,120074,0x7ff7c0cc8184,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,120080,0x7ff7c0cc8844,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,120087,0x7ff7c0cc8f04,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,120092,0x7ff7c0cc8f84,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,120098,0x7ff7c0cc9084,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,120104,0x7ff7c0cc9184,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,120110,0x7ff7c0cc9264,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,120115,0x7ff7c0cc9404,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,120121,0x7ff7c0cc95a4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,120127,0x7ff7c0cc96a4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,120133,0x7ff7c0cc97a4,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,120139,0x7ff7c0cc98a4,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,120145,0x7ff7c0cc9a44,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,120151,0x7ff7c0cc9be4,4,DirectCEntry
code-creation,Builtin,2,120156,0x7ff7c0cc9c04,1096,StringAdd_CheckNone
code-creation,Builtin,2,120161,0x7ff7c0cca064,2484,SubString
code-creation,Builtin,2,120166,0x7ff7c0ccaa24,16,StackCheck
code-creation,Builtin,2,120171,0x7ff7c0ccaa44,84,DoubleToI
code-creation,Builtin,2,120176,0x7ff7c0ccaaa4,2236,GetProperty
code-creation,Builtin,2,120181,0x7ff7c0ccb364,2308,GetPropertyWithReceiver
code-creation,Builtin,2,120186,0x7ff7c0ccbc84,16004,SetProperty
code-creation,Builtin,2,120191,0x7ff7c0ccfb24,13480,SetPropertyInLiteral
code-creation,Builtin,2,120196,0x7ff7c0cd2fe4,8,MemCopyUint8Uint8
code-creation,Builtin,2,120201,0x7ff7c0cd3004,8,MemMove
code-creation,Builtin,2,120206,0x7ff7c0cd3024,12,IsTraceCategoryEnabled
code-creation,Builtin,2,120211,0x7ff7c0cd3044,12,Trace
code-creation,Builtin,2,120216,0x7ff7c0cd3064,12,FinalizationRegistryUnregister
code-creation,Builtin,2,120221,0x7ff7c0cd3084,416,AsyncModuleEvaluate
code-creation,Builtin,2,120226,0x7ff7c0cd3244,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,120231,0x7ff7c0cd3264,12,CallAsyncModuleRejected
code-creation,Builtin,2,120236,0x7ff7c0cd3284,260,AggregateErrorConstructor
code-creation,Builtin,2,120242,0x7ff7c0cd33a4,856,ArrayPrototypeAt
code-creation,Builtin,2,120247,0x7ff7c0cd3704,656,ArrayPrototypeConcat
code-creation,Builtin,2,120251,0x7ff7c0cd39a4,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,120257,0x7ff7c0cd5084,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,120263,0x7ff7c0cd5164,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,120268,0x7ff7c0cd53e4,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,120273,0x7ff7c0cd60e4,1464,ArrayEvery
code-creation,Builtin,2,120278,0x7ff7c0cd66a4,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,120284,0x7ff7c0cd67c4,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,120289,0x7ff7c0cd6ba4,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,120294,0x7ff7c0cd79a4,4260,ArrayFilter
code-creation,Builtin,2,120299,0x7ff7c0cd8a64,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,120305,0x7ff7c0cd8b44,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,120310,0x7ff7c0cd8b84,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,120316,0x7ff7c0cd8cc4,528,ArrayFindLoopContinuation
code-creation,Builtin,2,120321,0x7ff7c0cd8ee4,1460,ArrayPrototypeFind
code-creation,Builtin,2,120326,0x7ff7c0cd94a4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,120332,0x7ff7c0cd9584,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,120337,0x7ff7c0cd95c4,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,120343,0x7ff7c0cd9704,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,120350,0x7ff7c0cd9924,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,120356,0x7ff7c0cd9ee4,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,120362,0x7ff7c0cda0c4,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,120367,0x7ff7c0cda784,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,120372,0x7ff7c0cda964,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,120377,0x7ff7c0cdb024,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,120383,0x7ff7c0cdb104,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,120389,0x7ff7c0cdb1e4,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,120394,0x7ff7c0cdbe44,1328,ArrayForEach
code-creation,Builtin,2,120399,0x7ff7c0cdc384,3572,ArrayFrom
code-creation,Builtin,2,120404,0x7ff7c0cdd184,148,ArrayIsArray
code-creation,Builtin,2,120408,0x7ff7c0cdd224,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,120414,0x7ff7c0cdd3c4,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,120419,0x7ff7c0cdd404,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,120425,0x7ff7c0cdd4a4,312,ConvertToLocaleString
code-creation,Builtin,2,120430,0x7ff7c0cdd5e4,752,JoinStackPush
code-creation,Builtin,2,120435,0x7ff7c0cdd8e4,272,JoinStackPop
code-creation,Builtin,2,120440,0x7ff7c0cdda04,6628,ArrayPrototypeJoin
code-creation,Builtin,2,120445,0x7ff7c0cdf404,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,120450,0x7ff7c0ce0904,236,ArrayPrototypeToString
code-creation,Builtin,2,120455,0x7ff7c0ce0a04,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,120461,0x7ff7c0ce2144,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,120466,0x7ff7c0ce3364,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,120472,0x7ff7c0ce4264,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,120477,0x7ff7c0ce4384,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,120483,0x7ff7c0ce4484,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,120488,0x7ff7c0ce46a4,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,120493,0x7ff7c0ce5324,3912,ArrayMap
code-creation,Builtin,2,120498,0x7ff7c0ce6284,1000,ArrayOf
code-creation,Builtin,2,120503,0x7ff7c0ce6684,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,120508,0x7ff7c0ce6844,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,120514,0x7ff7c0ce6924,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,120520,0x7ff7c0ce6a04,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,120526,0x7ff7c0ce76a4,2000,ArrayReduceRight
code-creation,Builtin,2,120531,0x7ff7c0ce7e84,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,120536,0x7ff7c0ce7f44,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,120542,0x7ff7c0ce8024,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,120547,0x7ff7c0ce8104,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,120553,0x7ff7c0ce8dc4,1604,ArrayReduce
tick,0x7ff7c11dbe0e,120607,0,0x0,6
code-creation,Builtin,2,120621,0x7ff7c0ce9424,3216,ArrayPrototypeReverse
code-creation,Builtin,2,120628,0x7ff7c0cea0c4,3592,ArrayPrototypeShift
code-creation,Builtin,2,120633,0x7ff7c0ceaee4,5220,ArrayPrototypeSlice
code-creation,Builtin,2,120638,0x7ff7c0cec364,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,120644,0x7ff7c0cec444,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,120649,0x7ff7c0cec6a4,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,120654,0x7ff7c0ced3a4,1448,ArraySome
code-creation,Builtin,2,120659,0x7ff7c0ced964,14216,ArrayPrototypeSplice
code-creation,Builtin,2,120664,0x7ff7c0cf1104,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,120670,0x7ff7c0cf1de4,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,120675,0x7ff7c0cf1f44,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,120681,0x7ff7c0cf20a4,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,120686,0x7ff7c0cf2184,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,120692,0x7ff7c0cf22e4,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,120698,0x7ff7c0cf23c4,96,ArrayBufferIsView
code-creation,Builtin,2,120703,0x7ff7c0cf2444,396,ToInteger
code-creation,Builtin,2,120708,0x7ff7c0cf25e4,3084,FastCreateDataProperty
code-creation,Builtin,2,120713,0x7ff7c0cf3204,676,CheckNumberInRange
code-creation,Builtin,2,120719,0x7ff7c0cf34c4,584,CheckSameObject
code-creation,Builtin,2,120724,0x7ff7c0cf3724,904,BooleanConstructor
code-creation,Builtin,2,120729,0x7ff7c0cf3ac4,164,BooleanPrototypeToString
code-creation,Builtin,2,120734,0x7ff7c0cf3b84,156,BooleanPrototypeValueOf
code-creation,Builtin,2,120739,0x7ff7c0cf3c24,1184,BigIntAddNoThrow
code-creation,Builtin,2,120744,0x7ff7c0cf40e4,1280,BigIntAdd
code-creation,Builtin,2,120749,0x7ff7c0cf4604,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,120754,0x7ff7c0cf4ac4,1280,BigIntSubtract
code-creation,Builtin,2,120759,0x7ff7c0cf4fe4,284,BigIntUnaryMinus
code-creation,Builtin,2,120764,0x7ff7c0cf5104,1360,ToString
code-creation,Builtin,2,120770,0x7ff7c0cf5664,156,StringPrototypeToString
code-creation,Builtin,2,120775,0x7ff7c0cf5704,156,StringPrototypeValueOf
code-creation,Builtin,2,120780,0x7ff7c0cf57a4,2480,StringToList
code-creation,Builtin,2,120785,0x7ff7c0cf6164,1012,StringPrototypeCharAt
code-creation,Builtin,2,120790,0x7ff7c0cf6564,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,120795,0x7ff7c0cf6824,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,120800,0x7ff7c0cf6d44,400,StringPrototypeConcat
code-creation,Builtin,2,120806,0x7ff7c0cf6ee4,992,StringConstructor
code-creation,Builtin,2,120811,0x7ff7c0cf72e4,1436,StringAddConvertLeft
code-creation,Builtin,2,120816,0x7ff7c0cf7884,1464,StringAddConvertRight
code-creation,Builtin,2,120821,0x7ff7c0cf7e44,816,StringCharAt
code-creation,Builtin,2,120826,0x7ff7c0cf8184,16,FastNewClosureBaseline
code-creation,Builtin,2,120831,0x7ff7c0cf81a4,196,FastNewFunctionContextEval
code-creation,Builtin,2,120836,0x7ff7c0cf8284,196,FastNewFunctionContextFunction
code-creation,Builtin,2,120842,0x7ff7c0cf8364,248,CreateRegExpLiteral
code-creation,Builtin,2,120847,0x7ff7c0cf8464,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,120852,0x7ff7c0cf88a4,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,120857,0x7ff7c0cf8aa4,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,120863,0x7ff7c0cf9184,384,ObjectConstructor
code-creation,Builtin,2,120867,0x7ff7c0cf9324,176,CreateEmptyLiteralObject
code-creation,Builtin,2,120873,0x7ff7c0cf93e4,536,NumberConstructor
code-creation,Builtin,2,120878,0x7ff7c0cf9604,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,120883,0x7ff7c0cf9664,64,StringToNumber
code-creation,Builtin,2,120888,0x7ff7c0cf96c4,184,NonNumberToNumber
code-creation,Builtin,2,120893,0x7ff7c0cf9784,240,NonNumberToNumeric
code-creation,Builtin,2,120898,0x7ff7c0cf9884,36,ToNumeric
code-creation,Builtin,2,120903,0x7ff7c0cf98c4,1184,NumberToString
code-creation,Builtin,2,120908,0x7ff7c0cf9d84,92,ToBoolean
code-creation,Builtin,2,120912,0x7ff7c0cf9de4,96,ToBooleanForBaselineJump
code-creation,Builtin,2,120918,0x7ff7c0cf9e64,728,ToLength
code-creation,Builtin,2,120923,0x7ff7c0cfa144,1312,ToName
code-creation,Builtin,2,120928,0x7ff7c0cfa684,756,ToObject
code-creation,Builtin,2,120932,0x7ff7c0cfa984,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,120938,0x7ff7c0cfaa64,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,120943,0x7ff7c0cfab44,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,120948,0x7ff7c0cfac24,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,120953,0x7ff7c0cfad64,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,120959,0x7ff7c0cfaea4,216,FastConsoleAssert
code-creation,Builtin,2,120964,0x7ff7c0cfaf84,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,120969,0x7ff7c0cfb044,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,120974,0x7ff7c0cfb1a4,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,120980,0x7ff7c0cfb304,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,120985,0x7ff7c0cfb544,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,120991,0x7ff7c0cfb784,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,120997,0x7ff7c0cfba24,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,121002,0x7ff7c0cfbcc4,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,121007,0x7ff7c0cfc004,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,121013,0x7ff7c0cfc2c4,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,121018,0x7ff7c0cfc624,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,121023,0x7ff7c0cfc9c4,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,121028,0x7ff7c0cfcda4,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,121034,0x7ff7c0cfd1a4,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,121039,0x7ff7c0cfd564,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,121044,0x7ff7c0cfd924,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,121049,0x7ff7c0cfdd44,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,121055,0x7ff7c0cfe164,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,121060,0x7ff7c0cfe5a4,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,121065,0x7ff7c0cfe9e4,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,121070,0x7ff7c0cfee04,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,121075,0x7ff7c0cff264,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,121081,0x7ff7c0cff624,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,121086,0x7ff7c0cff9e4,828,FinalizationRegistryConstructor
code-creation,Builtin,2,121091,0x7ff7c0cffd24,1152,FinalizationRegistryRegister
code-creation,Builtin,2,121097,0x7ff7c0d001c4,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,121102,0x7ff7c0d00464,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,121108,0x7ff7c0d005c4,924,FastFunctionPrototypeBind
code-creation,Builtin,2,121113,0x7ff7c0d00964,88,IncBlockCounter
code-creation,Builtin,2,121118,0x7ff7c0d009c4,228,GetTemplateObject
code-creation,Builtin,2,121123,0x7ff7c0d00ac4,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,121128,0x7ff7c0d00ae4,92,ForInNext
code-creation,Builtin,2,121133,0x7ff7c0d00b44,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,121138,0x7ff7c0d00be4,116,GetIteratorWithFeedback
code-creation,Builtin,2,121144,0x7ff7c0d00c64,100,GetIteratorBaseline
code-creation,Builtin,2,121149,0x7ff7c0d00ce4,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,121154,0x7ff7c0d00e04,1084,CallIteratorWithFeedback
code-creation,Builtin,2,121159,0x7ff7c0d01244,288,MathAbs
code-creation,Builtin,2,121164,0x7ff7c0d01384,428,MathCeil
code-creation,Builtin,2,121169,0x7ff7c0d01544,432,MathFloor
code-creation,Builtin,2,121174,0x7ff7c0d01704,488,MathRound
code-creation,Builtin,2,121178,0x7ff7c0d01904,428,MathTrunc
code-creation,Builtin,2,121184,0x7ff7c0d01ac4,368,MathPow
code-creation,Builtin,2,121188,0x7ff7c0d01c44,396,MathMax
code-creation,Builtin,2,121193,0x7ff7c0d01de4,404,MathMin
code-creation,Builtin,2,121198,0x7ff7c0d01f84,320,MathAcos
code-creation,Builtin,2,121203,0x7ff7c0d020e4,320,MathAcosh
code-creation,Builtin,2,121207,0x7ff7c0d02244,320,MathAsin
code-creation,Builtin,2,121212,0x7ff7c0d023a4,320,MathAsinh
code-creation,Builtin,2,121217,0x7ff7c0d02504,320,MathAtan
code-creation,Builtin,2,121222,0x7ff7c0d02664,416,MathAtan2
code-creation,Builtin,2,121227,0x7ff7c0d02824,320,MathAtanh
code-creation,Builtin,2,121232,0x7ff7c0d02984,320,MathCbrt
code-creation,Builtin,2,121236,0x7ff7c0d02ae4,168,MathClz32
code-creation,Builtin,2,121241,0x7ff7c0d02ba4,320,MathCos
code-creation,Builtin,2,121247,0x7ff7c0d02d04,320,MathCosh
code-creation,Builtin,2,121252,0x7ff7c0d02e64,320,MathExp
code-creation,Builtin,2,121257,0x7ff7c0d02fc4,320,MathExpm1
code-creation,Builtin,2,121262,0x7ff7c0d03124,272,MathFround
code-creation,Builtin,2,121266,0x7ff7c0d03244,304,MathImul
code-creation,Builtin,2,121271,0x7ff7c0d03384,320,MathLog
code-creation,Builtin,2,121276,0x7ff7c0d034e4,320,MathLog1p
code-creation,Builtin,2,121281,0x7ff7c0d03644,320,MathLog10
code-creation,Builtin,2,121286,0x7ff7c0d037a4,320,MathLog2
code-creation,Builtin,2,121291,0x7ff7c0d03904,320,MathSin
code-creation,Builtin,2,121297,0x7ff7c0d03a64,180,MathSign
code-creation,Builtin,2,121302,0x7ff7c0d03b24,320,MathSinh
code-creation,Builtin,2,121307,0x7ff7c0d03c84,268,MathSqrt
code-creation,Builtin,2,121311,0x7ff7c0d03da4,320,MathTan
code-creation,Builtin,2,121316,0x7ff7c0d03f04,320,MathTanh
code-creation,Builtin,2,121321,0x7ff7c0d04064,1060,MathHypot
code-creation,Builtin,2,121326,0x7ff7c0d044a4,332,MathRandom
code-creation,Builtin,2,121331,0x7ff7c0d04604,2956,NumberPrototypeToString
code-creation,Builtin,2,121336,0x7ff7c0d051a4,136,NumberIsFinite
code-creation,Builtin,2,121341,0x7ff7c0d05244,340,NumberIsInteger
code-creation,Builtin,2,121346,0x7ff7c0d053a4,116,NumberIsNaN
code-creation,Builtin,2,121351,0x7ff7c0d05424,372,NumberIsSafeInteger
code-creation,Builtin,2,121356,0x7ff7c0d055a4,156,NumberPrototypeValueOf
code-creation,Builtin,2,121361,0x7ff7c0d05644,196,NumberParseFloat
code-creation,Builtin,2,121366,0x7ff7c0d05724,248,ParseInt
code-creation,Builtin,2,121371,0x7ff7c0d05824,84,NumberParseInt
code-creation,Builtin,2,121376,0x7ff7c0d05884,860,Add
code-creation,Builtin,2,121381,0x7ff7c0d05be4,424,Subtract
code-creation,Builtin,2,121385,0x7ff7c0d05da4,608,Multiply
code-creation,Builtin,2,121390,0x7ff7c0d06024,532,Divide
code-creation,Builtin,2,121395,0x7ff7c0d06244,592,Modulus
code-creation,Builtin,2,121399,0x7ff7c0d064a4,524,Exponentiate
code-creation,Builtin,2,121405,0x7ff7c0d066c4,344,Negate
code-creation,Builtin,2,121409,0x7ff7c0d06824,112,BitwiseNot
code-creation,Builtin,2,121415,0x7ff7c0d068a4,112,Decrement
code-creation,Builtin,2,121419,0x7ff7c0d06924,112,Increment
code-creation,Builtin,2,121424,0x7ff7c0d069a4,392,ShiftLeft
code-creation,Builtin,2,121429,0x7ff7c0d06b44,392,ShiftRight
code-creation,Builtin,2,121434,0x7ff7c0d06ce4,508,ShiftRightLogical
code-creation,Builtin,2,121439,0x7ff7c0d06ee4,388,BitwiseAnd
code-creation,Builtin,2,121444,0x7ff7c0d07084,388,BitwiseOr
code-creation,Builtin,2,121449,0x7ff7c0d07224,388,BitwiseXor
code-creation,Builtin,2,121454,0x7ff7c0d073c4,796,LessThan
code-creation,Builtin,2,121458,0x7ff7c0d076e4,796,LessThanOrEqual
code-creation,Builtin,2,121463,0x7ff7c0d07a04,796,GreaterThan
code-creation,Builtin,2,121468,0x7ff7c0d07d24,796,GreaterThanOrEqual
code-creation,Builtin,2,121473,0x7ff7c0d08044,860,Equal
code-creation,Builtin,2,121478,0x7ff7c0d083a4,348,StrictEqual
code-creation,Builtin,2,121483,0x7ff7c0d08504,3132,ObjectFromEntries
code-creation,Builtin,2,121488,0x7ff7c0d09144,756,CreateObjectWithoutProperties
code-creation,Builtin,2,121493,0x7ff7c0d09444,144,ObjectIsExtensible
code-creation,Builtin,2,121498,0x7ff7c0d094e4,148,ObjectPreventExtensions
code-creation,Builtin,2,121503,0x7ff7c0d09584,144,ObjectGetPrototypeOf
code-creation,Builtin,2,121508,0x7ff7c0d09624,300,ObjectSetPrototypeOf
code-creation,Builtin,2,121513,0x7ff7c0d09764,80,ObjectPrototypeToString
code-creation,Builtin,2,121518,0x7ff7c0d097c4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,121525,0x7ff7c0d09844,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,121530,0x7ff7c0d09904,868,FulfillPromise
code-creation,Builtin,2,121535,0x7ff7c0d09c84,988,RejectPromise
code-creation,Builtin,2,121540,0x7ff7c0d0a064,2416,NewPromiseCapability
code-creation,Builtin,2,121545,0x7ff7c0d0a9e4,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,121551,0x7ff7c0d0aaa4,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,121556,0x7ff7c0d0ab44,1416,PerformPromiseThen
code-creation,Builtin,2,121561,0x7ff7c0d0b0e4,648,PromiseReject
code-creation,Builtin,2,121566,0x7ff7c0d0b384,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,121572,0x7ff7c0d0b4a4,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,121577,0x7ff7c0d0b524,4560,PromiseAll
code-creation,Builtin,2,121582,0x7ff7c0d0c704,4880,PromiseAllSettled
code-creation,Builtin,2,121587,0x7ff7c0d0da24,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,121592,0x7ff7c0d0de84,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,121598,0x7ff7c0d0e404,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,121605,0x7ff7c0d0e984,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,121611,0x7ff7c0d0ee24,2368,PromiseAny
code-creation,Builtin,2,121616,0x7ff7c0d0f784,2908,PromiseConstructor
code-creation,Builtin,2,121620,0x7ff7c0d102e4,296,PromisePrototypeCatch
code-creation,Builtin,2,121626,0x7ff7c0d10424,88,PromiseValueThunkFinally
code-creation,Builtin,2,121631,0x7ff7c0d10484,84,PromiseThrowerFinally
code-creation,Builtin,2,121636,0x7ff7c0d104e4,904,PromiseCatchFinally
code-creation,Builtin,2,121641,0x7ff7c0d10884,904,PromiseThenFinally
code-creation,Builtin,2,121646,0x7ff7c0d10c24,1700,PromisePrototypeFinally
code-creation,Builtin,2,121651,0x7ff7c0d112e4,1336,PromiseRace
code-creation,Builtin,2,121656,0x7ff7c0d11824,268,PromiseFulfillReactionJob
code-creation,Builtin,2,121661,0x7ff7c0d11944,364,PromiseRejectReactionJob
code-creation,Builtin,2,121666,0x7ff7c0d11ac4,156,PromiseResolveTrampoline
code-creation,Builtin,2,121672,0x7ff7c0d11b64,656,PromiseResolve
code-creation,Builtin,2,121677,0x7ff7c0d11e04,712,ResolvePromise
code-creation,Builtin,2,121682,0x7ff7c0d120e4,2224,PromisePrototypeThen
code-creation,Builtin,2,121687,0x7ff7c0d129a4,1144,PromiseResolveThenableJob
code-creation,Builtin,2,121692,0x7ff7c0d12e24,448,ProxyConstructor
code-creation,Builtin,2,121697,0x7ff7c0d13004,1760,ProxyDeleteProperty
code-creation,Builtin,2,121702,0x7ff7c0d13704,2112,ProxyGetProperty
code-creation,Builtin,2,121707,0x7ff7c0d13f64,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,121712,0x7ff7c0d143a4,1668,ProxyHasProperty
code-creation,Builtin,2,121717,0x7ff7c0d14a44,760,ProxyIsExtensible
code-creation,Builtin,2,121722,0x7ff7c0d14d44,800,ProxyPreventExtensions
code-creation,Builtin,2,121728,0x7ff7c0d15084,1148,ProxyRevocable
code-creation,Builtin,2,121733,0x7ff7c0d15504,120,ProxyRevoke
code-creation,Builtin,2,121738,0x7ff7c0d15584,2216,ProxySetProperty
code-creation,Builtin,2,121743,0x7ff7c0d15e44,1292,ProxySetPrototypeOf
code-creation,Builtin,2,121748,0x7ff7c0d16364,208,ReflectIsExtensible
code-creation,Builtin,2,121753,0x7ff7c0d16444,212,ReflectPreventExtensions
code-creation,Builtin,2,121758,0x7ff7c0d16524,188,ReflectGetPrototypeOf
code-creation,Builtin,2,121763,0x7ff7c0d165e4,292,ReflectSetPrototypeOf
code-creation,Builtin,2,121768,0x7ff7c0d16724,284,ReflectGet
code-creation,Builtin,2,121773,0x7ff7c0d16844,160,ReflectDeleteProperty
code-creation,Builtin,2,121779,0x7ff7c0d16904,148,ReflectHas
code-creation,Builtin,2,121783,0x7ff7c0d169a4,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,121789,0x7ff7c0d17dc4,5104,RegExpPrototypeExec
code-creation,Builtin,2,121794,0x7ff7c0d191c4,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,121799,0x7ff7c0d19b04,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,121804,0x7ff7c0d1bfe4,8840,RegExpMatchFast
code-creation,Builtin,2,121809,0x7ff7c0d1e284,3600,RegExpPrototypeMatch
code-creation,Builtin,2,121815,0x7ff7c0d1f0a4,6328,RegExpReplace
code-creation,Builtin,2,121820,0x7ff7c0d20964,524,RegExpPrototypeReplace
code-creation,Builtin,2,121825,0x7ff7c0d20b84,1424,RegExpSearchFast
code-creation,Builtin,2,121830,0x7ff7c0d21124,1640,RegExpPrototypeSearch
code-creation,Builtin,2,121835,0x7ff7c0d217a4,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,121840,0x7ff7c0d21884,5872,RegExpSplit
code-creation,Builtin,2,121845,0x7ff7c0d22f84,476,RegExpPrototypeSplit
code-creation,Builtin,2,121850,0x7ff7c0d23164,2252,RegExpPrototypeTest
code-creation,Builtin,2,121855,0x7ff7c0d23a44,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,121861,0x7ff7c0d23fa4,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,121866,0x7ff7c0d240a4,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,121871,0x7ff7c0d241a4,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,121877,0x7ff7c0d242a4,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,121882,0x7ff7c0d243a4,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,121887,0x7ff7c0d244a4,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,121892,0x7ff7c0d245a4,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,121898,0x7ff7c0d246c4,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,121904,0x7ff7c0d247e4,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,121909,0x7ff7c0d250c4,1500,StringPrototypeAt
code-creation,Builtin,2,121914,0x7ff7c0d256a4,3008,StringPrototypeEndsWith
code-creation,Builtin,2,121920,0x7ff7c0d26284,480,CreateHTML
code-creation,Builtin,2,121924,0x7ff7c0d26484,164,StringPrototypeAnchor
code-creation,Builtin,2,121929,0x7ff7c0d26544,128,StringPrototypeBig
code-creation,Builtin,2,121935,0x7ff7c0d265e4,128,StringPrototypeBlink
code-creation,Builtin,2,121940,0x7ff7c0d26684,128,StringPrototypeBold
code-creation,Builtin,2,121945,0x7ff7c0d26724,168,StringPrototypeFontcolor
code-creation,Builtin,2,121950,0x7ff7c0d267e4,168,StringPrototypeFontsize
code-creation,Builtin,2,121955,0x7ff7c0d268a4,128,StringPrototypeFixed
code-creation,Builtin,2,121960,0x7ff7c0d26944,128,StringPrototypeItalics
code-creation,Builtin,2,121965,0x7ff7c0d269e4,168,StringPrototypeLink
code-creation,Builtin,2,121970,0x7ff7c0d26aa4,128,StringPrototypeSmall
code-creation,Builtin,2,121976,0x7ff7c0d26b44,128,StringPrototypeStrike
code-creation,Builtin,2,121981,0x7ff7c0d26be4,128,StringPrototypeSub
code-creation,Builtin,2,121986,0x7ff7c0d26c84,128,StringPrototypeSup
code-creation,Builtin,2,121991,0x7ff7c0d26d24,1028,StringPrototypeIncludes
code-creation,Builtin,2,121996,0x7ff7c0d27144,628,StringPrototypeIndexOf
code-creation,Builtin,2,122001,0x7ff7c0d273c4,344,StringPrototypeIterator
code-creation,Builtin,2,122006,0x7ff7c0d27524,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,122011,0x7ff7c0d27d24,1304,StringPrototypeMatch
code-creation,Builtin,2,122017,0x7ff7c0d28244,1304,StringPrototypeSearch
code-creation,Builtin,2,122022,0x7ff7c0d28764,824,StringPrototypePadStart
code-creation,Builtin,2,122027,0x7ff7c0d28aa4,824,StringPrototypePadEnd
code-creation,Builtin,2,122032,0x7ff7c0d28de4,120,StringRepeat
code-creation,Builtin,2,122037,0x7ff7c0d28e64,400,StringPrototypeRepeat
code-creation,Builtin,2,122042,0x7ff7c0d29004,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,122047,0x7ff7c0d2bbc4,3388,StringPrototypeSlice
code-creation,Builtin,2,122052,0x7ff7c0d2c904,3028,StringPrototypeStartsWith
code-creation,Builtin,2,122058,0x7ff7c0d2d4e4,3328,StringPrototypeSubstr
code-creation,Builtin,2,122063,0x7ff7c0d2e204,3260,StringPrototypeSubstring
code-creation,Builtin,2,122068,0x7ff7c0d2eec4,6916,StringPrototypeTrim
code-creation,Builtin,2,122073,0x7ff7c0d309e4,6332,StringPrototypeTrimStart
code-creation,Builtin,2,122078,0x7ff7c0d322a4,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,122083,0x7ff7c0d33984,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,122089,0x7ff7c0d33a44,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,122094,0x7ff7c0d33ae4,172,SymbolPrototypeToString
code-creation,Builtin,2,122099,0x7ff7c0d33ba4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,122105,0x7ff7c0d33c44,832,TypedArrayPrototypeAt
code-creation,Builtin,2,122110,0x7ff7c0d33fa4,10064,CreateTypedArray
code-creation,Builtin,2,122115,0x7ff7c0d36704,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,122120,0x7ff7c0d36b04,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,122125,0x7ff7c0d36c84,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,122130,0x7ff7c0d37a44,996,TypedArrayPrototypeFind
code-creation,Builtin,2,122135,0x7ff7c0d37e44,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,122141,0x7ff7c0d38244,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,122146,0x7ff7c0d38404,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,122152,0x7ff7c0d388c4,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,122157,0x7ff7c0d38a84,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,122163,0x7ff7c0d38f64,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,122168,0x7ff7c0d392e4,2352,TypedArrayFrom
code-creation,Builtin,2,122173,0x7ff7c0d39c24,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,122178,0x7ff7c0d39da4,1028,TypedArrayOf
code-creation,Builtin,2,122184,0x7ff7c0d3a1c4,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,122189,0x7ff7c0d3a584,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,122195,0x7ff7c0d3a944,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,122200,0x7ff7c0d3b324,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,122205,0x7ff7c0d3bf24,992,TypedArrayPrototypeSome
code-creation,Builtin,2,122211,0x7ff7c0d3c324,1060,TypedArrayMergeSort
code-creation,Builtin,2,122216,0x7ff7c0d3c764,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,122222,0x7ff7c0d3cdc4,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,122227,0x7ff7c0d3d884,372,TypedArrayPrototypeValues
code-creation,Builtin,2,122232,0x7ff7c0d3da04,952,WeakRefConstructor
code-creation,Builtin,2,122237,0x7ff7c0d3ddc4,184,WeakRefDeref
code-creation,Builtin,2,122242,0x7ff7c0d3de84,680,NewSloppyArgumentsElements
code-creation,Builtin,2,122247,0x7ff7c0d3e144,296,NewStrictArgumentsElements
code-creation,Builtin,2,122252,0x7ff7c0d3e284,320,NewRestArgumentsElements
code-creation,Builtin,2,122258,0x7ff7c0d3e3e4,1388,FastNewSloppyArguments
code-creation,Builtin,2,122263,0x7ff7c0d3e964,524,FastNewStrictArguments
code-creation,Builtin,2,122269,0x7ff7c0d3eb84,556,FastNewRestArguments
code-creation,Builtin,2,122274,0x7ff7c0d3edc4,676,StringSlowFlatten
code-creation,Builtin,2,122278,0x7ff7c0d3f084,2068,StringIndexOf
code-creation,Builtin,2,122283,0x7ff7c0d3f8a4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,122289,0x7ff7c0d3f8c4,20,TestHelperPlus1
code-creation,Builtin,2,122293,0x7ff7c0d3f8e4,20,TestHelperPlus2
code-creation,Builtin,2,122298,0x7ff7c0d3f904,96,NewSmiBox
code-creation,Builtin,2,122303,0x7ff7c0d3f984,24,ReturnTwoValues
code-creation,Builtin,2,122308,0x7ff7c0d3f9a4,32,Load_FastSmiElements_0
code-creation,Builtin,2,122313,0x7ff7c0d3f9e4,32,Load_FastObjectElements_0
code-creation,Builtin,2,122319,0x7ff7c0d3fa24,144,Load_FastDoubleElements_0
code-creation,Builtin,2,122324,0x7ff7c0d3fac4,32,Store_FastSmiElements_0
code-creation,Builtin,2,122329,0x7ff7c0d3fb04,96,Store_FastObjectElements_0
code-creation,Builtin,2,122334,0x7ff7c0d3fb84,48,Store_FastDoubleElements_0
code-creation,Builtin,2,122339,0x7ff7c0d3fbc4,36,Delete_FastSmiElements_0
code-creation,Builtin,2,122345,0x7ff7c0d3fc04,36,Delete_FastObjectElements_0
code-creation,Builtin,2,122350,0x7ff7c0d3fc44,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,122355,0x7ff7c0d3fc84,308,SortCompareDefault
code-creation,Builtin,2,122360,0x7ff7c0d3fdc4,92,SortCompareUserFn
code-creation,Builtin,2,122365,0x7ff7c0d3fe24,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,122371,0x7ff7c0d3fe44,312,Copy
code-creation,Builtin,2,122375,0x7ff7c0d3ff84,5776,MergeAt
code-creation,Builtin,2,122380,0x7ff7c0d41624,792,GallopLeft
code-creation,Builtin,2,122385,0x7ff7c0d41944,832,GallopRight
code-creation,Builtin,2,122390,0x7ff7c0d41ca4,3832,ArrayTimSort
code-creation,Builtin,2,122395,0x7ff7c0d42ba4,2112,ArrayPrototypeSort
code-creation,Builtin,2,122400,0x7ff7c0d43404,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,122405,0x7ff7c0d43484,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,122410,0x7ff7c0d43504,76,WasmTaggedToFloat64
code-creation,Builtin,2,122415,0x7ff7c0d43564,72,WasmMemoryGrow
code-creation,Builtin,2,122420,0x7ff7c0d435c4,100,WasmTableInit
code-creation,Builtin,2,122425,0x7ff7c0d43644,100,WasmTableCopy
code-creation,Builtin,2,122430,0x7ff7c0d436c4,84,WasmTableFill
code-creation,Builtin,2,122435,0x7ff7c0d43724,72,WasmTableGrow
code-creation,Builtin,2,122440,0x7ff7c0d43784,144,WasmTableGet
code-creation,Builtin,2,122445,0x7ff7c0d43824,236,WasmTableSet
code-creation,Builtin,2,122450,0x7ff7c0d43924,88,WasmRefFunc
code-creation,Builtin,2,122454,0x7ff7c0d43984,144,WasmAllocateFixedArray
code-creation,Builtin,2,122459,0x7ff7c0d43a24,44,WasmThrow
code-creation,Builtin,2,122464,0x7ff7c0d43a64,52,WasmRethrow
code-creation,Builtin,2,122469,0x7ff7c0d43aa4,44,WasmTriggerTierUp
code-creation,Builtin,2,122474,0x7ff7c0d43ae4,32,WasmStackGuard
code-creation,Builtin,2,122479,0x7ff7c0d43b24,32,WasmStackOverflow
code-creation,Builtin,2,122485,0x7ff7c0d43b64,40,WasmTraceMemory
code-creation,Builtin,2,122490,0x7ff7c0d43ba4,32,WasmTraceEnter
code-creation,Builtin,2,122495,0x7ff7c0d43be4,40,WasmTraceExit
code-creation,Builtin,2,122500,0x7ff7c0d43c24,332,WasmAllocateJSArray
code-creation,Builtin,2,122505,0x7ff7c0d43d84,104,WasmAllocatePair
code-creation,Builtin,2,122510,0x7ff7c0d43e04,64,WasmAllocateRtt
code-creation,Builtin,2,122516,0x7ff7c0d43e64,72,WasmAllocateFreshRtt
code-creation,Builtin,2,122521,0x7ff7c0d43ec4,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,122526,0x7ff7c0d43f44,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,122532,0x7ff7c0d43fe4,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,122537,0x7ff7c0d440a4,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,122542,0x7ff7c0d44164,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,122547,0x7ff7c0d441e4,60,WasmArrayCopy
code-creation,Builtin,2,122552,0x7ff7c0d44224,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,122558,0x7ff7c0d44324,52,WasmSubtypeCheck
code-creation,Builtin,2,122609,0x7ff7c0d44364,8,WasmInt32ToNumber
code-creation,Builtin,2,122614,0x7ff7c0d44384,116,WasmUint32ToNumber
code-creation,Builtin,2,122619,0x7ff7c0d44404,144,UintPtr53ToNumber
code-creation,Builtin,2,122624,0x7ff7c0d444a4,96,WasmAtomicNotify
code-creation,Builtin,2,122629,0x7ff7c0d44524,116,WasmI32AtomicWait64
code-creation,Builtin,2,122635,0x7ff7c0d445a4,116,WasmI64AtomicWait64
code-creation,Builtin,2,122641,0x7ff7c0d44624,580,WasmGetOwnProperty
code-creation,Builtin,2,122646,0x7ff7c0d44884,40,WasmTrap
code-creation,Builtin,2,122652,0x7ff7c0d448c4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,122658,0x7ff7c0d448e4,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,122664,0x7ff7c0d44904,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,122669,0x7ff7c0d44924,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,122675,0x7ff7c0d44944,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,122680,0x7ff7c0d44964,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,122686,0x7ff7c0d44984,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,122692,0x7ff7c0d449a4,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,122698,0x7ff7c0d449c4,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,122704,0x7ff7c0d449e4,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,122710,0x7ff7c0d44a04,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,122715,0x7ff7c0d44a24,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,122721,0x7ff7c0d44a44,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,122727,0x7ff7c0d44a64,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,122733,0x7ff7c0d44a84,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,122739,0x7ff7c0d44aa4,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,122746,0x7ff7c0d44ac4,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,122752,0x7ff7c0d44b84,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,122758,0x7ff7c0d44ba4,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,122765,0x7ff7c0d44c24,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,122771,0x7ff7c0d44ca4,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,122777,0x7ff7c0d44cc4,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,122783,0x7ff7c0d44da4,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,122789,0x7ff7c0d44ea4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,122795,0x7ff7c0d44ec4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,122801,0x7ff7c0d44ee4,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,122807,0x7ff7c0d44f04,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,122813,0x7ff7c0d44f24,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,122819,0x7ff7c0d44fc4,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,122824,0x7ff7c0d44fe4,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,122830,0x7ff7c0d45024,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,122837,0x7ff7c0d45064,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,122844,0x7ff7c0d450a4,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,122850,0x7ff7c0d45b24,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,122855,0x7ff7c0d45b44,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,122861,0x7ff7c0d45b84,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,122867,0x7ff7c0d45ba4,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,122873,0x7ff7c0d45c64,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,122878,0x7ff7c0d45d24,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,122884,0x7ff7c0d45da4,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,122889,0x7ff7c0d45de4,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,122895,0x7ff7c0d45e84,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,122901,0x7ff7c0d45f04,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,122906,0x7ff7c0d45f24,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,122912,0x7ff7c0d45fc4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,122917,0x7ff7c0d45fe4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,122923,0x7ff7c0d46004,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,122929,0x7ff7c0d46284,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,122935,0x7ff7c0d46364,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,122941,0x7ff7c0d463a4,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,122947,0x7ff7c0d46484,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,122952,0x7ff7c0d46584,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,122958,0x7ff7c0d465c4,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,122963,0x7ff7c0d466a4,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,122969,0x7ff7c0d466c4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,122974,0x7ff7c0d466e4,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,122980,0x7ff7c0d467a4,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,122985,0x7ff7c0d467c4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,122991,0x7ff7c0d467e4,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,122998,0x7ff7c0d468a4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,123004,0x7ff7c0d468c4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,123010,0x7ff7c0d468e4,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,123017,0x7ff7c0d469a4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,123022,0x7ff7c0d469c4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,123029,0x7ff7c0d469e4,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,123035,0x7ff7c0d46aa4,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,123040,0x7ff7c0d46b44,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,123046,0x7ff7c0d46c04,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,123051,0x7ff7c0d46cc4,12,CollatorConstructor
code-creation,Builtin,2,123056,0x7ff7c0d46ce4,12,CollatorInternalCompare
code-creation,Builtin,2,123061,0x7ff7c0d46d04,12,CollatorPrototypeCompare
code-creation,Builtin,2,123066,0x7ff7c0d46d24,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,123072,0x7ff7c0d46d44,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,123077,0x7ff7c0d46d64,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,123083,0x7ff7c0d46d84,12,DatePrototypeToLocaleString
code-creation,Builtin,2,123088,0x7ff7c0d46da4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,123093,0x7ff7c0d46dc4,12,DateTimeFormatConstructor
code-creation,Builtin,2,123099,0x7ff7c0d46de4,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,123104,0x7ff7c0d46e04,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,123110,0x7ff7c0d46e24,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,123115,0x7ff7c0d46e44,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,123121,0x7ff7c0d46e64,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,123127,0x7ff7c0d46e84,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,123133,0x7ff7c0d46ea4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,123138,0x7ff7c0d46ec4,12,DisplayNamesConstructor
code-creation,Builtin,2,123143,0x7ff7c0d46ee4,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,123148,0x7ff7c0d46f04,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,123153,0x7ff7c0d46f24,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,123159,0x7ff7c0d46f44,12,IntlGetCanonicalLocales
code-creation,Builtin,2,123164,0x7ff7c0d46f64,12,ListFormatConstructor
code-creation,Builtin,2,123169,0x7ff7c0d46f84,224,ListFormatPrototypeFormat
code-creation,Builtin,2,123175,0x7ff7c0d47084,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,123180,0x7ff7c0d47184,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,123185,0x7ff7c0d471a4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,123191,0x7ff7c0d471c4,12,LocaleConstructor
code-creation,Builtin,2,123197,0x7ff7c0d471e4,12,LocalePrototypeBaseName
code-creation,Builtin,2,123204,0x7ff7c0d47204,12,LocalePrototypeCalendar
code-creation,Builtin,2,123210,0x7ff7c0d47224,12,LocalePrototypeCalendars
code-creation,Builtin,2,123216,0x7ff7c0d47244,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,123222,0x7ff7c0d47264,12,LocalePrototypeCollation
code-creation,Builtin,2,123228,0x7ff7c0d47284,12,LocalePrototypeCollations
code-creation,Builtin,2,123234,0x7ff7c0d472a4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,123240,0x7ff7c0d472c4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,123245,0x7ff7c0d472e4,12,LocalePrototypeLanguage
code-creation,Builtin,2,123251,0x7ff7c0d47304,12,LocalePrototypeMaximize
code-creation,Builtin,2,123256,0x7ff7c0d47324,12,LocalePrototypeMinimize
code-creation,Builtin,2,123262,0x7ff7c0d47344,12,LocalePrototypeNumeric
code-creation,Builtin,2,123267,0x7ff7c0d47364,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,123272,0x7ff7c0d47384,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,123277,0x7ff7c0d473a4,12,LocalePrototypeRegion
code-creation,Builtin,2,123282,0x7ff7c0d473c4,12,LocalePrototypeScript
code-creation,Builtin,2,123287,0x7ff7c0d473e4,12,LocalePrototypeTextInfo
code-creation,Builtin,2,123293,0x7ff7c0d47404,12,LocalePrototypeTimeZones
code-creation,Builtin,2,123298,0x7ff7c0d47424,12,LocalePrototypeToString
code-creation,Builtin,2,123303,0x7ff7c0d47444,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,123308,0x7ff7c0d47464,12,NumberFormatConstructor
code-creation,Builtin,2,123313,0x7ff7c0d47484,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,123319,0x7ff7c0d474a4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,123324,0x7ff7c0d474c4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,123329,0x7ff7c0d474e4,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,123335,0x7ff7c0d47504,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,123342,0x7ff7c0d47524,12,PluralRulesConstructor
code-creation,Builtin,2,123348,0x7ff7c0d47544,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,123354,0x7ff7c0d47564,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,123360,0x7ff7c0d47584,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,123365,0x7ff7c0d475a4,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,123371,0x7ff7c0d475c4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,123376,0x7ff7c0d475e4,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,123381,0x7ff7c0d47604,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,123387,0x7ff7c0d47624,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,123392,0x7ff7c0d47644,12,SegmenterConstructor
code-creation,Builtin,2,123398,0x7ff7c0d47664,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,123404,0x7ff7c0d47684,12,SegmenterPrototypeSegment
code-creation,Builtin,2,123410,0x7ff7c0d476a4,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,123415,0x7ff7c0d476c4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,123420,0x7ff7c0d476e4,12,SegmentsPrototypeContaining
code-creation,Builtin,2,123425,0x7ff7c0d47704,12,SegmentsPrototypeIterator
code-creation,Builtin,2,123430,0x7ff7c0d47724,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,123435,0x7ff7c0d47744,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,123441,0x7ff7c0d47764,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,123446,0x7ff7c0d47784,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,123452,0x7ff7c0d47864,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,123457,0x7ff7c0d47884,636,StringToLowerCaseIntl
code-creation,Builtin,2,123462,0x7ff7c0d47b04,12,V8BreakIteratorConstructor
code-creation,Builtin,2,123467,0x7ff7c0d47b24,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,123473,0x7ff7c0d47b44,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,123478,0x7ff7c0d47b64,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,123484,0x7ff7c0d47b84,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,123489,0x7ff7c0d47ba4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,123494,0x7ff7c0d47bc4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,123500,0x7ff7c0d47be4,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,123505,0x7ff7c0d47c04,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,123511,0x7ff7c0d47c24,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,123518,0x7ff7c0d47c44,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,123524,0x7ff7c0d47c64,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,123530,0x7ff7c0d47c84,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,123537,0x7ff7c0d47ca4,24,Wide
code-creation,BytecodeHandler,0,123542,0x7ff7c0d47cc4,24,ExtraWide
code-creation,BytecodeHandler,0,123547,0x7ff7c0d47ce4,104,DebugBreakWide
code-creation,BytecodeHandler,0,123553,0x7ff7c0d47d64,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,123558,0x7ff7c0d47de4,164,DebugBreak0
code-creation,BytecodeHandler,0,123563,0x7ff7c0d47ea4,104,DebugBreak1
code-creation,BytecodeHandler,0,123569,0x7ff7c0d47f24,104,DebugBreak2
code-creation,BytecodeHandler,0,123574,0x7ff7c0d47fa4,104,DebugBreak3
code-creation,BytecodeHandler,0,123579,0x7ff7c0d48024,104,DebugBreak4
code-creation,BytecodeHandler,0,123584,0x7ff7c0d480a4,104,DebugBreak5
code-creation,BytecodeHandler,0,123589,0x7ff7c0d48124,104,DebugBreak6
code-creation,BytecodeHandler,0,123595,0x7ff7c0d481a4,32,Ldar
code-creation,BytecodeHandler,0,123601,0x7ff7c0d481e4,68,LdaZero
code-creation,BytecodeHandler,0,123607,0x7ff7c0d48244,76,LdaSmi
code-creation,BytecodeHandler,0,123612,0x7ff7c0d482a4,68,LdaUndefined
code-creation,BytecodeHandler,0,123617,0x7ff7c0d48304,68,LdaNull
code-creation,BytecodeHandler,0,123622,0x7ff7c0d48364,68,LdaTheHole
code-creation,BytecodeHandler,0,123628,0x7ff7c0d483c4,20,LdaTrue
code-creation,BytecodeHandler,0,123633,0x7ff7c0d483e4,20,LdaFalse
code-creation,BytecodeHandler,0,123637,0x7ff7c0d48404,76,LdaConstant
code-creation,BytecodeHandler,0,123642,0x7ff7c0d48464,132,LdaContextSlot
code-creation,BytecodeHandler,0,123648,0x7ff7c0d48504,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,123653,0x7ff7c0d485a4,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,123659,0x7ff7c0d48604,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,123665,0x7ff7c0d48664,32,Star
code-creation,BytecodeHandler,0,123670,0x7ff7c0d486a4,40,Mov
code-creation,BytecodeHandler,0,123675,0x7ff7c0d486e4,40,PushContext
code-creation,BytecodeHandler,0,123680,0x7ff7c0d48724,36,PopContext
code-creation,BytecodeHandler,0,123685,0x7ff7c0d48764,48,TestReferenceEqual
code-creation,BytecodeHandler,0,123690,0x7ff7c0d487a4,52,TestUndetectable
code-creation,BytecodeHandler,0,123696,0x7ff7c0d487e4,36,TestNull
code-creation,BytecodeHandler,0,123702,0x7ff7c0d48824,36,TestUndefined
code-creation,BytecodeHandler,0,123707,0x7ff7c0d48864,336,TestTypeOf
code-creation,BytecodeHandler,0,123712,0x7ff7c0d489c4,6036,LdaGlobal
code-creation,BytecodeHandler,0,123717,0x7ff7c0d4a164,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,123723,0x7ff7c0d4b324,168,StaGlobal
code-creation,BytecodeHandler,0,123728,0x7ff7c0d4b3e4,160,StaContextSlot
code-creation,BytecodeHandler,0,123733,0x7ff7c0d4b4a4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,123739,0x7ff7c0d4b524,124,LdaLookupSlot
code-creation,BytecodeHandler,0,123744,0x7ff7c0d4b5a4,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,123749,0x7ff7c0d4b6a4,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,123755,0x7ff7c0d4c964,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,123761,0x7ff7c0d4c9e4,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,123766,0x7ff7c0d4cae4,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,123772,0x7ff7c0d4dd84,220,StaLookupSlot
code-creation,BytecodeHandler,0,123777,0x7ff7c0d4de64,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,123783,0x7ff7c0d4f2e4,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,123788,0x7ff7c0d4f3a4,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,123794,0x7ff7c0d4f484,160,LdaModuleVariable
code-creation,BytecodeHandler,0,123799,0x7ff7c0d4f544,292,StaModuleVariable
code-creation,BytecodeHandler,0,123804,0x7ff7c0d4f684,172,StaNamedProperty
code-creation,BytecodeHandler,0,123810,0x7ff7c0d4f744,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,123816,0x7ff7c0d4f804,164,StaKeyedProperty
code-creation,BytecodeHandler,0,123821,0x7ff7c0d4f8c4,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,123827,0x7ff7c0d4f984,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,123832,0x7ff7c0d4fa64,160,CollectTypeProfile
code-creation,BytecodeHandler,0,123838,0x7ff7c0d4fb24,1028,Add
code-creation,BytecodeHandler,0,123843,0x7ff7c0d4ff44,1064,Sub
code-creation,BytecodeHandler,0,123847,0x7ff7c0d50384,1024,Mul
code-creation,BytecodeHandler,0,123852,0x7ff7c0d507a4,988,Div
code-creation,BytecodeHandler,0,123857,0x7ff7c0d50b84,912,Mod
code-creation,BytecodeHandler,0,123862,0x7ff7c0d50f24,964,Exp
code-creation,BytecodeHandler,0,123867,0x7ff7c0d51304,876,BitwiseOr
code-creation,BytecodeHandler,0,123873,0x7ff7c0d51684,888,BitwiseXor
code-creation,BytecodeHandler,0,123878,0x7ff7c0d51a04,888,BitwiseAnd
code-creation,BytecodeHandler,0,123883,0x7ff7c0d51d84,900,ShiftLeft
code-creation,BytecodeHandler,0,123888,0x7ff7c0d52124,900,ShiftRight
code-creation,BytecodeHandler,0,123893,0x7ff7c0d524c4,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,123899,0x7ff7c0d528c4,960,AddSmi
code-creation,BytecodeHandler,0,123904,0x7ff7c0d52ca4,1000,SubSmi
code-creation,BytecodeHandler,0,123909,0x7ff7c0d530a4,916,MulSmi
code-creation,BytecodeHandler,0,123914,0x7ff7c0d53444,920,DivSmi
code-creation,BytecodeHandler,0,123919,0x7ff7c0d537e4,816,ModSmi
code-creation,BytecodeHandler,0,123924,0x7ff7c0d53b24,872,ExpSmi
code-creation,BytecodeHandler,0,123929,0x7ff7c0d53ea4,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,123934,0x7ff7c0d540a4,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,123939,0x7ff7c0d542a4,488,BitwiseAndSmi
tick,0x7ff7c11f0079,123945,0,0x0,6
code-creation,BytecodeHandler,0,123960,0x7ff7c0d544a4,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,123967,0x7ff7c0d546a4,488,ShiftRightSmi
code-creation,BytecodeHandler,0,123972,0x7ff7c0d548a4,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,123978,0x7ff7c0d54b44,656,Inc
code-creation,BytecodeHandler,0,123983,0x7ff7c0d54de4,656,Dec
code-creation,BytecodeHandler,0,123987,0x7ff7c0d55084,640,Negate
code-creation,BytecodeHandler,0,123993,0x7ff7c0d55324,480,BitwiseNot
code-creation,BytecodeHandler,0,123998,0x7ff7c0d55524,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,124003,0x7ff7c0d555a4,36,LogicalNot
code-creation,BytecodeHandler,0,124008,0x7ff7c0d555e4,208,TypeOf
code-creation,BytecodeHandler,0,124014,0x7ff7c0d556c4,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,124020,0x7ff7c0d55744,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,124025,0x7ff7c0d557c4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,124031,0x7ff7c0d55804,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,124036,0x7ff7c0d55c84,1132,CallProperty
code-creation,BytecodeHandler,0,124042,0x7ff7c0d56104,1012,CallProperty0
code-creation,BytecodeHandler,0,124047,0x7ff7c0d56504,1028,CallProperty1
code-creation,BytecodeHandler,0,124052,0x7ff7c0d56924,1040,CallProperty2
code-creation,BytecodeHandler,0,124057,0x7ff7c0d56d44,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,124063,0x7ff7c0d57144,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,124068,0x7ff7c0d57564,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,124074,0x7ff7c0d57964,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,124079,0x7ff7c0d57d84,1132,CallWithSpread
code-creation,BytecodeHandler,0,124085,0x7ff7c0d58204,124,CallRuntime
code-creation,BytecodeHandler,0,124090,0x7ff7c0d58284,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,124095,0x7ff7c0d58324,80,CallJSRuntime
code-creation,BytecodeHandler,0,124100,0x7ff7c0d58384,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,124105,0x7ff7c0d58864,1020,Construct
code-creation,BytecodeHandler,0,124111,0x7ff7c0d58c64,536,ConstructWithSpread
code-creation,BytecodeHandler,0,124116,0x7ff7c0d58e84,1936,TestEqual
code-creation,BytecodeHandler,0,124121,0x7ff7c0d59624,1064,TestEqualStrict
code-creation,BytecodeHandler,0,124127,0x7ff7c0d59a64,1624,TestLessThan
code-creation,BytecodeHandler,0,124132,0x7ff7c0d5a0c4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,124137,0x7ff7c0d5a724,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,124143,0x7ff7c0d5ad84,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,124148,0x7ff7c0d5b3e4,860,TestInstanceOf
code-creation,BytecodeHandler,0,124153,0x7ff7c0d5b744,156,TestIn
code-creation,BytecodeHandler,0,124158,0x7ff7c0d5b7e4,112,ToName
code-creation,BytecodeHandler,0,124163,0x7ff7c0d5b864,212,ToNumber
code-creation,BytecodeHandler,0,124168,0x7ff7c0d5b944,232,ToNumeric
code-creation,BytecodeHandler,0,124174,0x7ff7c0d5ba44,112,ToObject
code-creation,BytecodeHandler,0,124179,0x7ff7c0d5bac4,116,ToString
code-creation,BytecodeHandler,0,124184,0x7ff7c0d5bb44,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,124189,0x7ff7c0d5bce4,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,124194,0x7ff7c0d5c2a4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,124200,0x7ff7c0d5c304,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,124206,0x7ff7c0d5c624,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,124211,0x7ff7c0d5ce84,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,124217,0x7ff7c0d5cf84,168,CloneObject
code-creation,BytecodeHandler,0,124222,0x7ff7c0d5d044,212,GetTemplateObject
code-creation,BytecodeHandler,0,124227,0x7ff7c0d5d124,328,CreateClosure
code-creation,BytecodeHandler,0,124232,0x7ff7c0d5d284,120,CreateBlockContext
code-creation,BytecodeHandler,0,124238,0x7ff7c0d5d304,132,CreateCatchContext
code-creation,BytecodeHandler,0,124243,0x7ff7c0d5d3a4,256,CreateFunctionContext
code-creation,BytecodeHandler,0,124248,0x7ff7c0d5d4c4,256,CreateEvalContext
code-creation,BytecodeHandler,0,124254,0x7ff7c0d5d5e4,132,CreateWithContext
code-creation,BytecodeHandler,0,124259,0x7ff7c0d5d684,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,124265,0x7ff7c0d5dcc4,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,124270,0x7ff7c0d5df24,632,CreateRestParameter
code-creation,BytecodeHandler,0,124275,0x7ff7c0d5e1a4,424,JumpLoop
code-creation,BytecodeHandler,0,124280,0x7ff7c0d5e364,44,Jump
code-creation,BytecodeHandler,0,124285,0x7ff7c0d5e3a4,56,JumpConstant
code-creation,BytecodeHandler,0,124291,0x7ff7c0d5e3e4,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,124296,0x7ff7c0d5e444,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,124302,0x7ff7c0d5e4a4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,124308,0x7ff7c0d5e504,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,124314,0x7ff7c0d5e564,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,124319,0x7ff7c0d5e5c4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,124325,0x7ff7c0d5e624,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,124330,0x7ff7c0d5e684,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,124336,0x7ff7c0d5e6e4,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,124341,0x7ff7c0d5e784,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,124347,0x7ff7c0d5e824,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,124353,0x7ff7c0d5e8c4,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,124358,0x7ff7c0d5e964,64,JumpIfTrue
code-creation,BytecodeHandler,0,124363,0x7ff7c0d5e9c4,64,JumpIfFalse
code-creation,BytecodeHandler,0,124368,0x7ff7c0d5ea24,64,JumpIfNull
code-creation,BytecodeHandler,0,124373,0x7ff7c0d5ea84,64,JumpIfNotNull
code-creation,BytecodeHandler,0,124378,0x7ff7c0d5eae4,64,JumpIfUndefined
code-creation,BytecodeHandler,0,124384,0x7ff7c0d5eb44,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,124389,0x7ff7c0d5eba4,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,124395,0x7ff7c0d5ec04,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,124400,0x7ff7c0d5ec64,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,124405,0x7ff7c0d5ece4,464,ForInEnumerate
code-creation,BytecodeHandler,0,124410,0x7ff7c0d5eec4,252,ForInPrepare
code-creation,BytecodeHandler,0,124416,0x7ff7c0d5efc4,60,ForInContinue
code-creation,BytecodeHandler,0,124421,0x7ff7c0d5f004,256,ForInNext
code-creation,BytecodeHandler,0,124426,0x7ff7c0d5f124,48,ForInStep
code-creation,BytecodeHandler,0,124431,0x7ff7c0d5f164,36,SetPendingMessage
code-creation,BytecodeHandler,0,124437,0x7ff7c0d5f1a4,116,Throw
code-creation,BytecodeHandler,0,124441,0x7ff7c0d5f224,116,ReThrow
code-creation,BytecodeHandler,0,124446,0x7ff7c0d5f2a4,112,Return
code-creation,BytecodeHandler,0,124451,0x7ff7c0d5f324,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,124457,0x7ff7c0d5f404,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,124463,0x7ff7c0d5f4a4,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,124469,0x7ff7c0d5f544,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,124474,0x7ff7c0d5f5e4,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,124480,0x7ff7c0d5f664,512,SuspendGenerator
code-creation,BytecodeHandler,0,124485,0x7ff7c0d5f884,128,ResumeGenerator
code-creation,BytecodeHandler,0,124490,0x7ff7c0d5f924,152,GetIterator
code-creation,BytecodeHandler,0,124496,0x7ff7c0d5f9c4,116,Debugger
code-creation,BytecodeHandler,0,124502,0x7ff7c0d5fa44,124,IncBlockCounter
code-creation,BytecodeHandler,0,124507,0x7ff7c0d5fac4,56,Abort
code-creation,BytecodeHandler,0,124512,0x7ff7c0d5fb04,32,Star0
code-creation,BytecodeHandler,0,124518,0x7ff7c0d5fb44,60,Illegal
code-creation,BytecodeHandler,0,124524,0x7ff7c0d5fb84,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,124530,0x7ff7c0d5fc04,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,124536,0x7ff7c0d5fc84,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,124541,0x7ff7c0d5fd04,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,124547,0x7ff7c0d5fd84,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,124552,0x7ff7c0d5fe04,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,124602,0x7ff7c0d5fe84,32,Ldar.Wide
code-creation,BytecodeHandler,0,124608,0x7ff7c0d5fec4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,124614,0x7ff7c0d5ff04,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,124619,0x7ff7c0d5ff44,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,124625,0x7ff7c0d5ffa4,92,LdaImmutableContextSlot.Wide
tick,0x7ffdf681c7f4,124631,0,0x0,6
code-creation,BytecodeHandler,0,124645,0x7ff7c0d60004,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,124652,0x7ff7c0d60044,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,124659,0x7ff7c0d60084,32,Star.Wide
code-creation,BytecodeHandler,0,124665,0x7ff7c0d600c4,40,Mov.Wide
code-creation,BytecodeHandler,0,124670,0x7ff7c0d60104,40,PushContext.Wide
code-creation,BytecodeHandler,0,124675,0x7ff7c0d60144,36,PopContext.Wide
code-creation,BytecodeHandler,0,124681,0x7ff7c0d60184,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,124686,0x7ff7c0d601c4,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,124691,0x7ff7c0d61404,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,124697,0x7ff7c0d62604,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,124703,0x7ff7c0d626c4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,124708,0x7ff7c0d62784,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,124714,0x7ff7c0d62804,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,124719,0x7ff7c0d628a4,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,124725,0x7ff7c0d629a4,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,124730,0x7ff7c0d63ca4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,124736,0x7ff7c0d63d44,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,124742,0x7ff7c0d63e44,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,124748,0x7ff7c0d65124,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,124754,0x7ff7c0d65204,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,124759,0x7ff7c0d66684,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,124765,0x7ff7c0d66744,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,124770,0x7ff7c0d66804,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,124776,0x7ff7c0d668c4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,124781,0x7ff7c0d66a04,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,124786,0x7ff7c0d66ac4,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,124792,0x7ff7c0d66b84,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,124798,0x7ff7c0d66c44,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,124803,0x7ff7c0d66d04,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,124809,0x7ff7c0d66de4,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,124814,0x7ff7c0d66ea4,984,Add.Wide
code-creation,BytecodeHandler,0,124819,0x7ff7c0d67284,1020,Sub.Wide
code-creation,BytecodeHandler,0,124824,0x7ff7c0d67684,972,Mul.Wide
code-creation,BytecodeHandler,0,124829,0x7ff7c0d67a64,988,Div.Wide
code-creation,BytecodeHandler,0,124835,0x7ff7c0d67e44,916,Mod.Wide
code-creation,BytecodeHandler,0,124840,0x7ff7c0d681e4,988,Exp.Wide
code-creation,BytecodeHandler,0,124845,0x7ff7c0d685c4,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,124850,0x7ff7c0d68964,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,124855,0x7ff7c0d68d04,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,124861,0x7ff7c0d690a4,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,124866,0x7ff7c0d69464,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,124871,0x7ff7c0d69824,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,124877,0x7ff7c0d69c44,916,AddSmi.Wide
code-creation,BytecodeHandler,0,124882,0x7ff7c0d69fe4,960,SubSmi.Wide
code-creation,BytecodeHandler,0,124887,0x7ff7c0d6a3c4,912,MulSmi.Wide
code-creation,BytecodeHandler,0,124892,0x7ff7c0d6a764,920,DivSmi.Wide
code-creation,BytecodeHandler,0,124897,0x7ff7c0d6ab04,816,ModSmi.Wide
code-creation,BytecodeHandler,0,124902,0x7ff7c0d6ae44,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,124908,0x7ff7c0d6b1c4,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,124913,0x7ff7c0d6b3c4,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,124919,0x7ff7c0d6b5c4,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,124924,0x7ff7c0d6b7c4,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,124929,0x7ff7c0d6b9c4,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,124935,0x7ff7c0d6bbc4,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,124940,0x7ff7c0d6be64,616,Inc.Wide
code-creation,BytecodeHandler,0,124945,0x7ff7c0d6c0e4,616,Dec.Wide
code-creation,BytecodeHandler,0,124951,0x7ff7c0d6c364,648,Negate.Wide
code-creation,BytecodeHandler,0,124957,0x7ff7c0d6c604,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,124962,0x7ff7c0d6c804,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,124968,0x7ff7c0d6c884,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,124973,0x7ff7c0d6c904,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,124979,0x7ff7c0d6c944,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,124985,0x7ff7c0d6cdc4,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,124990,0x7ff7c0d6d244,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,124995,0x7ff7c0d6d644,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,125001,0x7ff7c0d6da64,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,125006,0x7ff7c0d6de84,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,125012,0x7ff7c0d6e284,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,125018,0x7ff7c0d6e6a4,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,125023,0x7ff7c0d6eac4,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,125029,0x7ff7c0d6eee4,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,125034,0x7ff7c0d6f364,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,125039,0x7ff7c0d6f404,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,125045,0x7ff7c0d6f4c4,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,125051,0x7ff7c0d6f524,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,125056,0x7ff7c0d6fa04,968,Construct.Wide
code-creation,BytecodeHandler,0,125061,0x7ff7c0d6fde4,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,125067,0x7ff7c0d6ffc4,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,125072,0x7ff7c0d70784,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,125078,0x7ff7c0d70bc4,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,125083,0x7ff7c0d711c4,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,125088,0x7ff7c0d717c4,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,125094,0x7ff7c0d71dc4,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,125100,0x7ff7c0d723c4,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,125105,0x7ff7c0d72744,160,TestIn.Wide
code-creation,BytecodeHandler,0,125110,0x7ff7c0d72804,116,ToName.Wide
code-creation,BytecodeHandler,0,125115,0x7ff7c0d72884,216,ToNumber.Wide
code-creation,BytecodeHandler,0,125120,0x7ff7c0d72964,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,125125,0x7ff7c0d72a64,116,ToObject.Wide
code-creation,BytecodeHandler,0,125131,0x7ff7c0d72ae4,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,125136,0x7ff7c0d72c84,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,125142,0x7ff7c0d73204,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,125148,0x7ff7c0d73524,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,125153,0x7ff7c0d73d24,172,CloneObject.Wide
code-creation,BytecodeHandler,0,125159,0x7ff7c0d73de4,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,125164,0x7ff7c0d73ea4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,125170,0x7ff7c0d74004,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,125175,0x7ff7c0d74084,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,125181,0x7ff7c0d74124,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,125186,0x7ff7c0d74244,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,125192,0x7ff7c0d74364,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,125197,0x7ff7c0d74404,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,125202,0x7ff7c0d745c4,44,Jump.Wide
code-creation,BytecodeHandler,0,125207,0x7ff7c0d74604,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,125213,0x7ff7c0d74644,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,125218,0x7ff7c0d746a4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,125224,0x7ff7c0d74704,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,125230,0x7ff7c0d74764,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,125237,0x7ff7c0d747c4,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,125243,0x7ff7c0d74824,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,125248,0x7ff7c0d74884,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,125254,0x7ff7c0d748e4,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,125259,0x7ff7c0d74944,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,125266,0x7ff7c0d749e4,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,125272,0x7ff7c0d74a84,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,125277,0x7ff7c0d74b24,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,125283,0x7ff7c0d74bc4,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,125288,0x7ff7c0d74c24,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,125293,0x7ff7c0d74c84,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,125299,0x7ff7c0d74ce4,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,125304,0x7ff7c0d74d44,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,125310,0x7ff7c0d74da4,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,125315,0x7ff7c0d74e04,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,125321,0x7ff7c0d74e64,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,125327,0x7ff7c0d74ec4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,125332,0x7ff7c0d74f44,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,125338,0x7ff7c0d75124,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,125343,0x7ff7c0d75224,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,125348,0x7ff7c0d75264,260,ForInNext.Wide
code-creation,BytecodeHandler,0,125353,0x7ff7c0d75384,48,ForInStep.Wide
code-creation,BytecodeHandler,0,125359,0x7ff7c0d753c4,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,125365,0x7ff7c0d75464,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,125371,0x7ff7c0d75524,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,125376,0x7ff7c0d755a4,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,125382,0x7ff7c0d757c4,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,125387,0x7ff7c0d75864,156,GetIterator.Wide
code-creation,BytecodeHandler,0,125392,0x7ff7c0d75904,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,125398,0x7ff7c0d759a4,56,Abort.Wide
code-creation,BytecodeHandler,0,125403,0x7ff7c0d759e4,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,125409,0x7ff7c0d75a64,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,125414,0x7ff7c0d75ae4,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,125420,0x7ff7c0d75b64,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,125425,0x7ff7c0d75be4,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,125431,0x7ff7c0d75c64,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,125436,0x7ff7c0d75ce4,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,125441,0x7ff7c0d75d24,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,125447,0x7ff7c0d75d44,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,125453,0x7ff7c0d75d84,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,125458,0x7ff7c0d75de4,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,125464,0x7ff7c0d75e44,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,125470,0x7ff7c0d75e84,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,125476,0x7ff7c0d75ec4,28,Star.ExtraWide
code-creation,BytecodeHandler,0,125481,0x7ff7c0d75ee4,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,125486,0x7ff7c0d75f24,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,125492,0x7ff7c0d75f64,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,125497,0x7ff7c0d75fa4,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,125503,0x7ff7c0d75fe4,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,125509,0x7ff7c0d77224,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,125516,0x7ff7c0d78424,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,125521,0x7ff7c0d784e4,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,125527,0x7ff7c0d78584,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,125533,0x7ff7c0d78604,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,125539,0x7ff7c0d786a4,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,125545,0x7ff7c0d787a4,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,125550,0x7ff7c0d79aa4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,125556,0x7ff7c0d79b44,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,125562,0x7ff7c0d79c44,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,125568,0x7ff7c0d7af24,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,125574,0x7ff7c0d7b004,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,125580,0x7ff7c0d7c464,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,125586,0x7ff7c0d7c524,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,125592,0x7ff7c0d7c5c4,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,125598,0x7ff7c0d7c684,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,125604,0x7ff7c0d7c7c4,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,125609,0x7ff7c0d7c884,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,125615,0x7ff7c0d7c944,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,125620,0x7ff7c0d7ca04,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,125626,0x7ff7c0d7cac4,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,125632,0x7ff7c0d7cba4,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,125638,0x7ff7c0d7cc64,980,Add.ExtraWide
code-creation,BytecodeHandler,0,125643,0x7ff7c0d7d044,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,125649,0x7ff7c0d7d444,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,125654,0x7ff7c0d7d824,988,Div.ExtraWide
code-creation,BytecodeHandler,0,125659,0x7ff7c0d7dc04,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,125664,0x7ff7c0d7dfa4,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,125669,0x7ff7c0d7e384,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,125675,0x7ff7c0d7e724,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,125681,0x7ff7c0d7eac4,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,125686,0x7ff7c0d7ee64,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,125692,0x7ff7c0d7f224,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,125697,0x7ff7c0d7f5e4,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,125703,0x7ff7c0d7fa04,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,125708,0x7ff7c0d7fda4,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,125714,0x7ff7c0d80184,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,125719,0x7ff7c0d80524,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,125725,0x7ff7c0d808c4,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,125730,0x7ff7c0d80c04,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,125735,0x7ff7c0d80f84,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,125741,0x7ff7c0d81184,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,125746,0x7ff7c0d81384,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,125752,0x7ff7c0d81584,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,125757,0x7ff7c0d81784,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,125763,0x7ff7c0d81984,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,125769,0x7ff7c0d81c24,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,125774,0x7ff7c0d81ea4,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,125779,0x7ff7c0d82124,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,125785,0x7ff7c0d823c4,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,125790,0x7ff7c0d825c4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,125796,0x7ff7c0d82644,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,125803,0x7ff7c0d826c4,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,125809,0x7ff7c0d82704,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,125814,0x7ff7c0d82b84,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,125820,0x7ff7c0d83004,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,125825,0x7ff7c0d83404,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,125831,0x7ff7c0d83824,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,125836,0x7ff7c0d83c44,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,125842,0x7ff7c0d84044,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,125848,0x7ff7c0d84464,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,125854,0x7ff7c0d84864,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,125860,0x7ff7c0d84c84,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,125866,0x7ff7c0d85104,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,125872,0x7ff7c0d851a4,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,125877,0x7ff7c0d85264,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,125883,0x7ff7c0d852c4,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,125889,0x7ff7c0d857a4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,125894,0x7ff7c0d85b84,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,125900,0x7ff7c0d85d64,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,125906,0x7ff7c0d86524,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,125911,0x7ff7c0d86964,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,125917,0x7ff7c0d86f64,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,125922,0x7ff7c0d87564,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,125928,0x7ff7c0d87b64,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,125934,0x7ff7c0d88164,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,125940,0x7ff7c0d884e4,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,125945,0x7ff7c0d88584,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,125951,0x7ff7c0d88604,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,125956,0x7ff7c0d886e4,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,125962,0x7ff7c0d887e4,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,125967,0x7ff7c0d88864,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,125973,0x7ff7c0d88a04,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,125978,0x7ff7c0d88f84,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,125984,0x7ff7c0d892a4,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,125990,0x7ff7c0d89aa4,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,125996,0x7ff7c0d89b64,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,126001,0x7ff7c0d89c24,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,126007,0x7ff7c0d89d84,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,126012,0x7ff7c0d89e04,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,126018,0x7ff7c0d89ea4,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,126024,0x7ff7c0d89fc4,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,126029,0x7ff7c0d8a0e4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,126035,0x7ff7c0d8a184,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,126040,0x7ff7c0d8a344,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,126046,0x7ff7c0d8a384,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,126051,0x7ff7c0d8a3c4,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,126057,0x7ff7c0d8a424,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,126063,0x7ff7c0d8a484,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,126068,0x7ff7c0d8a4e4,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,126087,0x7ff7c0d8a544,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,126095,0x7ff7c0d8a5a4,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,126101,0x7ff7c0d8a604,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,126107,0x7ff7c0d8a664,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,126112,0x7ff7c0d8a6c4,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,126118,0x7ff7c0d8a764,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,126124,0x7ff7c0d8a804,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,126130,0x7ff7c0d8a8a4,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,126136,0x7ff7c0d8a944,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,126141,0x7ff7c0d8a9a4,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,126147,0x7ff7c0d8aa04,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,126152,0x7ff7c0d8aa64,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,126158,0x7ff7c0d8aac4,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,126163,0x7ff7c0d8ab24,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,126169,0x7ff7c0d8ab84,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,126174,0x7ff7c0d8abe4,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,126180,0x7ff7c0d8ac44,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,126186,0x7ff7c0d8acc4,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,126192,0x7ff7c0d8aea4,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,126197,0x7ff7c0d8afa4,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,126202,0x7ff7c0d8afe4,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,126208,0x7ff7c0d8b104,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,126213,0x7ff7c0d8b144,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,126219,0x7ff7c0d8b1e4,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,126225,0x7ff7c0d8b2a4,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,126231,0x7ff7c0d8b324,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,126237,0x7ff7c0d8b544,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,126242,0x7ff7c0d8b5c4,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,126248,0x7ff7c0d8b664,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,126253,0x7ff7c0d8b6e4,56,Abort.ExtraWide
tick,0x7ff7c091cd9c,126615,0,0x0,6
new,MemoryChunk,0xc705680000,262144
new,MemoryChunk,0x19a14ec0000,262144
new,MemoryChunk,0x2a0ef080000,262144
tick,0x7ff7c11c0dc0,128608,0,0x0,5
new,MemoryChunk,0x2ba1080000,262144
new,MemoryChunk,0x3a72c5c0000,262144
code-creation,Eval,10,130134,0x3a72c5c1fae,5, node:internal/main/run_main_module:1:1,0x3a72c5c1e68,~
script-source,95,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x3a72c5c1fae,95,0,649,C0O0C4O649,,
code-creation,Function,10,130187,0x3a72c5c2056,58, node:internal/main/run_main_module:1:1,0x3a72c5c1f28,~
code-source-info,0x3a72c5c2056,95,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,130419,0x3a72c5c2296,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x17449fcfdc0,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x3a72c5c2296,9,10647,11000,C0O10657C2O10668C4O10664C9O10685C13O10706C14O10729C19O10742C24O10746C29O10746C35O10890C37O10900C47O10948C60O10906C65O10900C66O10970C71O10970C75O10997,,
tick,0x7ff7c0172233,130970,0,0x0,3,0x7ff7c08240c0,0x3a72c5c2059
code-creation,LazyCompile,10,131019,0x3a72c5c2fa6,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x17449fcfcf0,~
code-source-info,0x3a72c5c2fa6,9,9827,10410,C0O9846C6O9861C12O9891C16O9899C17O9930C22O9939C23O9952C30O9998C37O10029C45O9998C63O10131C70O10131C75O10167C89O10202C103O10159C108O10242C109O10254C124O10286C126O10299C141O10322C152O10341C160O10373C165O10322C170O10397C174O10405,,
code-creation,Eval,10,131361,0x3a72c5c3f7e,5, node:internal/bootstrap/pre_execution:1:1,0x3a72c5c3b88,~
script-source,96,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (!getOptionValue('--experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  emitExperimentalWarning('Fetch');\x0d\n\x0d\n  const undici = require('internal/deps/undici/undici');\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C undici.fetch);\x0d\n  exposeInterface(globalThis\x2C 'FormData'\x2C undici.FormData);\x0d\n  exposeInterface(globalThis\x2C 'Headers'\x2C undici.Headers);\x0d\n  exposeInterface(globalThis\x2C 'Request'\x2C undici.Request);\x0d\n  exposeInterface(globalThis\x2C 'Response'\x2C undici.Response);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let webcrypto;\x0d\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                       ObjectGetOwnPropertyDescriptor({\x0d\n                         get crypto() {\x0d\n                           webcrypto ??= require('internal/crypto/webcrypto');\x0d\n                           return webcrypto.crypto;\x0d\n                         }\x0d\n                       }\x2C 'crypto'));\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    webcrypto ??= require('internal/crypto/webcrypto');\x0d\n    ObjectDefineProperty(globalThis\x2C 'Crypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.Crypto\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'CryptoKey'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.CryptoKey\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'SubtleCrypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.SubtleCrypto\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupFetch\x2C\x0d\n  setupWebCrypto\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x3a72c5c3f7e,96,0,18262,C0O0C4O18262,,
code-creation,Function,10,132138,0x3a72c5c4bae,497, node:internal/bootstrap/pre_execution:1:1,0x3a72c5c3ef8,~
code-source-info,0x3a72c5c4bae,96,0,18262,C0O0C214O28C220O47C226O72C232O107C238O119C244O135C250O165C256O253C262O253C267O209C273O228C279O319C285O319C290O291C296O429C302O429C307O359C313O379C319O407C325O477C331O477C336O466C342O539C348O539C353O565C358O505C364O589C370O589C374O589C376O17813C383O17835C389O17858C395O17881C401O17905C407O17920C413O17939C419O17957C425O17976C431O18007C437O18034C443O18058C449O18089C455O18122C461O18145C467O18173C473O18197C479O18218C485O18242C491O17828C496O18261,,
code-creation,LazyCompile,10,132365,0x3a72c5c6476,225,prepareMainThreadExecution node:internal/bootstrap/pre_execution:28:36,0x3a72c5c3fb0,~
code-source-info,0x3a72c5c
code-creation,LazyCompile,10,132478,0x3a72c5c7886,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x29f2e34bdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x3a72c5c7886,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
tick,0x7ffdf679b39d,133813,0,0x0,3,0x7ff7c08240c0,0x3a72c5c6485,0x3a72c5c2065
code-creation,LazyCompile,10,133891,0x3a72c5ca0be,397,patchProcessObject node:internal/bootstrap/pre_execution:89:28,0x3a72c5c4000,~
code-source-info,0x3a72c5ca0be
code-creation,LazyCompile,10,133981,0x3a72c5ca3ee,69,internalBinding node:internal/bootstrap/loaders:164:45,0x17449fcf840,~
code-source-info,0x3a72c5ca3ee,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,134097,0x3a72c5ca6a6,69,refreshHrtimeBuffer node:internal/process/per_thread:66:29,0x29f2e358598,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x3a72c5ca6a6,30,1477,1925,C0O1668C7O1695C10O1703C17O1679C25O1677C31O1858C38O1894C41O1902C53O1875C61O1873C68O1924,,
tick,0x7ff7c09ef4be,134633,0,0x0,3,0x7ff7c08240c0,0x3a72c5ca0e6,0x3a72c5c648b,0x3a72c5c2065
code-creation,LazyCompile,10,134842,0x3a72c5cb766,832,resolve node:path:158:10,0x5da138d510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x3a72c5cb
tick,0x7ffdf67ba8cf,136907,0,0x0,3,0x7ff7c08240c0,0x3a72c5ca180,0x3a72c5c648b,0x3a72c5c2065
code-creation,LazyCompile,10,136948,0x3a72c5ced7e,30,validateString node:internal/validators:118:24,0x17449ffce70,~
script-source,15,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x3a72c5ced7e,15,3534,3646,C0O3553C6O3589C22O3595C27O3589C29O3645,,
code-creation,LazyCompile,10,137327,0x3a72c5cf71e,17,isPathSeparator node:path:52:25,0x5da138cf90,~
code-source-info,0x3a72c5cf71e,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,137361,0x3a72c5cf81e,35,isWindowsDeviceRoot node:path:60:29,0x5da138d408,~
code-source-info,0x3a72c5cf81e,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,137410,0x3a72c5cf93e,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x17449ffeee8,~
script-source,94,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x3a72c5cf93e,94,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,137675,0x3a72c5cffa6,442,normalizeString node:path:66:25,0x5da138d458,~
code-source-info,0x3a72c5cffa6,41,2226,4212,C0O2292C3O2323C5O2345C8O2363C10O2380C12O2399C14O2412C18O2404C23O2445C27O2438C32O2460C37O2467C45O2517C51O2547C53O2571C58O2609C64O2641C66O2661C69O2655C76O2673C83O2713C85O2722C90O2748C97O2755C104O2780C111O2802C114O2837C118O2844C122O2802C130O2853C132O2849C139O2878C142O2913C146O2920C150O2878C158O2929C160O2925C165O2960C172O2967C177O3010C182O3010C188O3067C190O3086C195O3111C198O3136C202O3196C215O3202C221O3304C225O3311C231O3317C234O3317C239O3315C243O3389C246O3417C248O3440C250O3476C256O3483C261O3505C264O3528C266O3564C269O3592C271O3615C273O3658C277O3702C283O3709C293O3718C308O3751C313O3818C319O3825C324O3841C326O3851C330O3863C335O3900C345O3863C363O3936C370O3979C380O3942C386O3997C388O4019C391O4031C395O4052C398O4074C402O4096C404O4109C406O4105C413O4126C418O4143C425O4172C428O2422C433O2386C439O4198C441O4209,,
code-creation,LazyCompile,10,137829,0x3a72c5d06c6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:130:33,0x3a72c5c4050,~
code-source-info,0x3a72c5d06c6,96,4358,4593,C16O4411C21O4411C26O4438C28O4456C36O4486C43O4552C49O4571C56O4456C62O4592,,
code-creation,LazyCompile,10,137881,0x3a72c5d0866,82,getOptionValue node:internal/options:39:24,0x160e4c7db40,~
script-source,91,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0x3a72c5d0866,91,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,138003,0x3a72c5d0c16,33,getCLIOptionsFromBinding node:internal/options:18:34,0x160e4c7d848,~
code-source-info,0x3a72c5d0c16,91,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,138264,0x3a72c5d0d96,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:277:33,0x3a72c5c43c0,~
code-source-info,0x3a72c5d0d96,96,8711,8942,C0O8754C6O8754C11O8727C16O8827C22O8827C27O8798C32O8870C35O8895C40O8870C45O8941,,
code-creation,LazyCompile,10,138318,0x3a72c5d0f2e,77,toggleTraceCategoryState node:internal/process/per_thread:390:34,0x29f2e358cb8,~
code-source-info,0x3a72c5d0f2e,30,11548,11855,C0O11573C4O11603C10O11639C16O11671C21O11715C26O11716C33O11660C39O11742C44O11763C49O11763C55O11783C61O11816C66O11837C71O11837C76O11854,,
code-creation,LazyCompile,10,138360,0x3a72c5d10de,42,setupPerfHooks node:internal/bootstrap/pre_execution:283:24,0x3a72c5c4410,~
code-source-info,0x3a72c5d10de,96,8969,9092,C0O8977C6O8977C11O9013C16O9014C20O9038C26O9038C31O9068C36O9069C41O9091,,
code-creation,LazyCompile,10,138405,0x3a72c5d125e,42,refreshTimeOrigin node:internal/perf/performance:181:27,0x47137ab218,~
script-source,73,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('name');\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('type');\x0d\n  }\x0d\n  type = `${type}`;\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x3a72c5d125e,73,4040,4203,C0O4048C7O4069C10O4081C25O4168C28O4168C35O4048C41O4202,,
tick,0x7ff7c11eed25,138670,0,0x0,3,0x7ff7c08240c0,0x3a72c5d10ee,0x3a72c5c6498,0x3a72c5c2065
code-creation,LazyCompile,10,138687,0x3a72c5d1986,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x5da13a2118,~
script-source,46,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x3a72c5d1986,46,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,138764,0x3a72c5d1bf6,62,setupInspectorHooks node:internal/bootstrap/pre_execution:288:29,0x3a72c5c4460,~
code-source-info,0x3a72c5d1bf6,96,9124,9690,C0O9473C6O9477C11O9502C17O9571C23O9571C28O9539C33O9554C38O9618C44O9618C49O9646C54O9647C61O9689,,
code-creation,Eval,10,138873,0x3a72c5d1fa6,5, node:internal/inspector_async_hook:1:1,0x3a72c5d1df0,~
script-source,97,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x3a72c5d1fa6,97,0,2048,C0O0C4O2048,,
code-creation,Function,10,138979,0x3a72c5d21c6,79, node:internal/inspector_async_hook:1:1,0x3a72c5d1f20,~
code-source-info,0x3a72c5d21c6,97,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,139068,0x3a72c5d282e,69,setupWarningHandler node:internal/bootstrap/pre_execution:142:29,0x3a72c5c40a0,~
code-source-info,0x3a72c5d282e,96,4625,4830,C0O4663C6O4663C11O4646C16O4703C24O4707C33O4752C38O4756C45O4773C50O4789C53O4797C61O4797C68O4829,,
code-creation,LazyCompile,10,139169,0x3a72c5d298e,20,addListener node:events:618:58,0x2179416ba38,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x3a72c5d298e,23,18854,18928,C0O18876C14O18883C19O18925,,
tick,0x7ff7c11d01df,140544,0,0x0,3,0x7ff7c08240c0,0x3a72c5d286b,0x3a72c5c64a4,0x3a72c5c2065
code-creation,LazyCompile,10,140642,0x3a72c5d5056,378,_addListener node:events:555:22,0x2179416b998,~
code-source-info,0x3a72c5d
code-creation,LazyCompile,10,140727,0x3a72c5d5366,15,checkListener node:events:258:23,0x2179416b2f8,~
code-source-info,0x3a72c5d5366,23,7884,7942,C0O7900C8O7900C14O7941,,
code-creation,LazyCompile,10,140761,0x3a72c5d5456,30, node:internal/validators:236:42,0x17449ffd308,~
code-source-info,0x3a72c5d5456,15,7461,7580,C0O7483C6O7521C22O7527C27O7521C29O7579,,
code-creation,LazyCompile,10,140864,0x3a72c5d56d6,380,emit node:events:475:44,0x2179416b8d8,~
code-source-info,0x3a72c5d56d
code-creation,LazyCompile,10,140982,0x3a72c5d5a7e,172,startListeningIfSignal node:internal/process/signal:22:32,0x17449ffdca8,~
script-source,93,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x3a72c5d5a7e,93,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,141090,0x3a72c5d5e3e,19,isSignal node:internal/process/signal:17:18,0x17449ffdaf0,~
code-source-info,0x3a72c5d5e3e,93,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,141140,0x3a72c5d6076,156,setupFetch node:internal/bootstrap/pre_execution:153:20,0x3a72c5c40f0,~
code-source-info,0x3a72c5d6076,96,4888,5357,C0O4896C8O4901C14O4948C15O4955C16O4966C24O4966C28O5020C34O5020C39O5063C46O5079C52O5107C57O5063C62O5118C69O5134C75O5165C80O5118C85O5179C92O5195C98O5225C103O5179C108O5238C115O5254C121O5284C126O5238C131O5297C138O5313C144O5344C149O5297C155O5356,,
new,MemoryChunk,0x20401040000,262144
code-creation,Function,11,141256,0x20401043060,572,getOptionValue node:internal/options:39:24,0x160e4c7db40,^
code-source-info,0x20401043060,91,940,1190,,,
code-creation,Function,11,141284,0x20401043300,216,isPathSeparator node:path:52:25,0x5da138cf90,^
code-source-info,0x20401043300,41,1794,1876,,,
code-creation,Function,11,141328,0x20401043440,3076,normalizeString node:path:66:25,0x5da138d458,^
code-source-info,0x20401043440,41,2226,4212,,,
code-creation,LazyCompile,10,141399,0x3a72c5d6886,268,setupWebCrypto node:internal/bootstrap/pre_execution:170:24,0x3a72c5c4140,~
code-source-info,0x3a72c5d6886,96,5490,6624,C0O5490C8O5498C13O5510C18O5517C23O5527C33O5562C39O5562C45O5620C46O5627C47O5642C48O5642C50O5656C61O5677C71O5723C102O5723C108O5656C113O6000C121O6004C126O6029C132O6049C146O6063C150O6059C152O6106C163O6127C177O6251C185O6106C190O6272C201O6293C215O6420C223O6272C228O6444C239O6465C253O6595C261O6444C267O6623,,
code-creation,LazyCompile,10,141480,0x3a72c5d6b06,5,get node:internal/bootstrap/node:135:6,0x17449fd4a28,~
script-source,10,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\x0d\n// responsible for setting up node.js core before executing main scripts\x0d\n// under `lib/internal/main/`.\x0d\n//\x0d\n// This file is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority\x0d\n// of the code here focuses on setting up the global proxy and the process\x0d\n// object in a synchronous manner.\x0d\n// As special caution is given to the performance of the startup process\x2C\x0d\n// many dependencies are invoked lazily.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `NativeModule`.\x0d\n//\x0d\n// This file is run to bootstrap both the main thread and the worker threads.\x0d\n// After this file is run\x2C certain properties are setup according to the\x0d\n// configuration of the Node.js instance using the files in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/bootstrap/pre_execution.js` depending on the runtime states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFill\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPreventExtensions\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  ReflectSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst nativeModule = internalBinding('native_module');\x0d\n\x0d\n// TODO(@jasnell): Once this has gone through one full major\x0d\n// release cycle\x2C remove the Proxy and setter and update the\x0d\n// getter to either return a read-only object or always return\x0d\n// a freshly parsed version of nativeModule.config.\x0d\n\x0d\nconst deprecationHandler = {\x0d\n  warned: false\x2C\x0d\n  message: 'Setting process.config is deprecated. ' +\x0d\n           'In the future the property will be read-only.'\x2C\x0d\n  code: 'DEP0150'\x2C\x0d\n  maybeWarn() {\x0d\n    if (!this.warned) {\x0d\n      process.emitWarning(this.message\x2C {\x0d\n        type: 'DeprecationWarning'\x2C\x0d\n        code: this.code\x0d\n      });\x0d\n      this.warned = true;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C key\x2C descriptor) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\x0d\n  }\x2C\x0d\n\x0d\n  deleteProperty(target\x2C key) {\x0d\n    this.maybeWarn();\x0d\n    delete target[key];\x0d\n  }\x2C\x0d\n\x0d\n  preventExtensions(target) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectPreventExtensions(target);\x0d\n  }\x2C\x0d\n\x0d\n  set(target\x2C key\x2C value) {\x0d\n    this.maybeWarn();\x0d\n    return ReflectSet(target\x2C key\x2C value);\x0d\n  }\x2C\x0d\n\x0d\n  get(target\x2C key\x2C receiver) {\x0d\n    const val = ReflectGet(target\x2C key\x2C receiver);\x0d\n    if (val != null && typeof val === 'object') {\x0d\n      // eslint-disable-next-line node-core/prefer-primordials\x0d\n      return new Proxy(val\x2C deprecationHandler);\x0d\n    }\x0d\n    return val;\x0d\n  }\x2C\x0d\n\x0d\n  setPrototypeOf(target\x2C proto) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectSetPrototypeOf(target\x2C proto);\x0d\n  }\x0d\n};\x0d\n\x0d\n// eslint-disable-next-line node-core/prefer-primordials\x0d\nlet processConfig = new Proxy(\x0d\n  JSONParse(nativeModule.config)\x2C\x0d\n  deprecationHandler);\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return processConfig; }\x2C\x0d\n  set(value) {\x0d\n    deprecationHandler.maybeWarn();\x0d\n    processConfig = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n\x0d\n  process.getActiveResourcesInfo = function() {\x0d\n    const timerCounts = internalTimers.getTimerCounts();\x0d\n    return ArrayPrototypeConcat(\x0d\n      rawMethods._getActiveRequestsInfo()\x2C\x0d\n      rawMethods._getActiveHandlesInfo()\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\x0d\n  };\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\nif (!config.noBrowserGlobals) {\x0d\n  // Override global console from the one provided by the VM\x0d\n  // to the one implemented by Node.js\x0d\n  // https://console.spec.whatwg.org/#console-namespace\x0d\n  exposeNamespace(globalThis\x2C 'console'\x2C\x0d\n                  createGlobalConsole(globalThis.console));\x0d\n\x0d\n  const { URL\x2C URLSearchParams } = require('internal/url');\x0d\n  // https://url.spec.whatwg.org/#url\x0d\n  exposeInterface(globalThis\x2C 'URL'\x2C URL);\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams\x0d\n  exposeInterface(globalThis\x2C 'URLSearchParams'\x2C URLSearchParams);\x0d\n\x0d\n  const {\x0d\n    TextEncoder\x2C TextDecoder\x0d\n  } = require('internal/encoding');\x0d\n  // https://encoding.spec.whatwg.org/#textencoder\x0d\n  exposeInterface(globalThis\x2C 'TextEncoder'\x2C TextEncoder);\x0d\n  // https://encoding.spec.whatwg.org/#textdecoder\x0d\n  exposeInterface(globalThis\x2C 'TextDecoder'\x2C TextDecoder);\x0d\n\x0d\n  const {\x0d\n    AbortController\x2C\x0d\n    AbortSignal\x2C\x0d\n  } = require('internal/abort_controller');\x0d\n  exposeInterface(globalThis\x2C 'AbortController'\x2C AbortController);\x0d\n  exposeInterface(globalThis\x2C 'AbortSignal'\x2C AbortSignal);\x0d\n\x0d\n  const {\x0d\n    EventTarget\x2C\x0d\n    Event\x2C\x0d\n  } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'EventTarget'\x2C EventTarget);\x0d\n  exposeInterface(globalThis\x2C 'Event'\x2C Event);\x0d\n  const {\x0d\n    MessageChannel\x2C\x0d\n    MessagePort\x2C\x0d\n    MessageEvent\x2C\x0d\n  } = require('internal/worker/io');\x0d\n  exposeInterface(globalThis\x2C 'MessageChannel'\x2C MessageChannel);\x0d\n  exposeInterface(globalThis\x2C 'MessagePort'\x2C MessagePort);\x0d\n  exposeInterface(globalThis\x2C 'MessageEvent'\x2C MessageEvent);\x0d\n\x0d\n  // https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope\x0d\n  const timers = require('timers');\x0d\n  defineOperation(globalThis\x2C 'clearInterval'\x2C timers.clearInterval);\x0d\n  defineOperation(globalThis\x2C 'clearTimeout'\x2C timers.clearTimeout);\x0d\n  defineOperation(globalThis\x2C 'setInterval'\x2C timers.setInterval);\x0d\n  defineOperation(globalThis\x2C 'setTimeout'\x2C timers.setTimeout);\x0d\n\x0d\n  defineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\n  // https://www.w3.org/TR/hr-time-2/#the-performance-attribute\x0d\n  defineReplacableAttribute(globalThis\x2C 'performance'\x2C\x0d\n                            require('perf_hooks').performance);\x0d\n\x0d\n  // Non-standard extensions:\x0d\n  defineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\n  defineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n}\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because snapshot is built without code cache.\x0d\n  // TODO(joyeecheung): https://github.com/nodejs/node/issues/31074\x0d\n  // Make it possible to build snapshot with code cache\x0d\n  get cached_builtins() {\x0d\n    return nativeModule.hasCachedBuiltins();\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n// Preload modules so that they are included in the builtin snapshot.\x0d\nrequire('fs');\x0d\nrequire('v8');\x0d\nrequire('vm');\x0d\nrequire('url');\x0d\nrequire('internal/options');\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x0d\n  });\x0d\n  // Make process globally available to users by putting it on the global proxy\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    value: process\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n    atob\x2C\x0d\n    btoa\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    'Buffer': {\x0d\n      value: Buffer\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'atob': {\x0d\n      value: atob\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'btoa': {\x0d\n      value: btoa\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction createGlobalConsole(consoleFromVM) {\x0d\n  const consoleFromNode =\x0d\n    require('internal/console/global');\x0d\n  if (config.hasInspector) {\x0d\n    const inspector = require('internal/util/inspector');\x0d\n    // This will be exposed by `require('inspector').console` later.\x0d\n    inspector.consoleFromVM = consoleFromVM;\x0d\n    // TODO(joyeecheung): postpone this until the first time inspector\x0d\n    // is activated.\x0d\n    inspector.wrapConsole(consoleFromNode\x2C consoleFromVM);\x0d\n    const { setConsoleExtensionInstaller } = internalBinding('inspector');\x0d\n    // Setup inspector command line API.\x0d\n    setConsoleExtensionInstaller(inspector.installConsoleExtensions);\x0d\n  }\x0d\n  return consoleFromNode;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#Replaceable\x0d\nfunction defineReplacableAttribute(target\x2C name\x2C value) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x3a72c5d6b06,10,4267,4295,C0O4272C4O4293,,
code-creation,LazyCompile,10,142176,0x3a72c5d7c76,52,get node:internal/bootstrap/node:112:6,0x17449fd4988,~
code-source-info,0x3a72c5d7c76,10,3630,3901,C0O3673C14O3673C20O3713C29O3830C35O3852C43O3837C48O3872C49O3885C51O3896,,
code-creation,LazyCompile,10,142249,0x3a72c5d7e9e,75,setupDebugEnv node:internal/bootstrap/pre_execution:249:23,0x3a72c5c42d0,~
code-source-info,0x3a72c5d7e9e,96,7933,8148,C0O7941C6O7941C11O7974C19O8002C24O8006C29O7975C34O8022C42O8026C48O8071C54O8071C59O8108C64O8121C69O8122C74O8147,,
code-creation,LazyCompile,10,142325,0x3a72c5d82d6,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x217941619f0,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x3a72c5d82d6,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
tick,0x7ff7c0cae944,142510,0,0x0,0,0x3a72c5d7ebb,0x3a72c5c64e4,0x3a72c5c2065
code-creation,LazyCompile,10,142539,0x3a72c5d88de,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:228:40,0x3a72c5c4208,~
code-source-info,0x3a72c5d88de,96,7477,7671,C0O7485C8O7490C14O7531C15O7538C16O7574C22O7574C27O7555C32O7626C38O7660C43O7660C48O7670,,
code-creation,LazyCompile,10,142591,0x3a72c5d8af6,62,initializeReport node:internal/bootstrap/pre_execution:238:26,0x3a72c5c4258,~
code-source-info,0x3a72c5d8af6,96,7700,7907,C0O7700C8O7727C16O7727C21O7716C27O7766C42O7787C47O7861C55O7766C61O7906,,
code-creation,Eval,10,142737,0x3a72c5d90a6,5, node:internal/process/report:1:1,0x3a72c5d8eb0,~
script-source,98,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x3a72c5d90a6,98,0,2666,C0O0C4O2666,,
code-creation,Function,10,142876,0x3a72c5d9bb6,306, node:internal/process/report:1:1,0x3a72c5d9020,~
code-source-info,0x3a72c5d9bb6,98,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,143048,0x3a72c5dba6e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:257:40,0x3a72c5c4320,~
code-source-info,0x3a72c5dba6e,96,8252,8352,C0O8289C6O8289C11O8268C16O8330C20O8351,,
code-creation,LazyCompile,10,143096,0x3a72c5dbb76,57,addSignalHandler node:internal/process/report:98:26,0x3a72c5d90d8,~
code-source-info,0x3a72c5dbb76,98,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,143144,0x3a72c5dc13e,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:263:46,0x3a72c5c4370,~
code-source-info,0x3a72c5dc13e,96,8401,8675,C0O8401C8O8424C18O8424C23O8470C25O8488C26O8495C27O8501C35O8501C40O8531C45O8532C50O8593C58O8593C63O8571C69O8613C74O8621C79O8624C84O8621C91O8674,,
code-creation,LazyCompile,10,143204,0x3a72c5dc3ce,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:393:37,0x3a72c5c4540,~
code-source-info,0x3a72c5dc3ce,96,12545,13091,C0O12553C3O12565C8O12569C14O12608C20O12608C25O12654C33O12677C38O12681C46O12654C52O12708C53O12718C57O12708C61O12802C64O12817C73O12878C76O12886C81O12890C90O12938C93O12953C102O12997C108O12997C113O13021C118O13022C124O13062C127O13077C132O13062C137O13090,,
code-creation,LazyCompile,10,143271,0x3a72c5dc55e,21,assert node:internal/assert:11:16,0x217941609c8,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x3a72c5dc55e,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,143748,0x3a72c5dd3d6,5, node:child_process:1:1,0x3a72c5dcf00,~
script-source,99,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x3a72c5dd3d6,99,0,25421,C0O0C4O25421,,
code-creation,Function,10,144872,0x3a72c5dde36,748, node:child_process:1:1,0x3a72c5dd350,~
code-source-info,0x3a72c5dde
tick,0x7ff7c11ce5d0,144957,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x3a72c5c2fec,0x3a72c5c22dd,0x3a72c5dc43a,0x3a72c5c6502,0x3a72c5c2065
code-creation,LazyCompile,10,145069,0x3a72c5e0406,82,debuglog node:internal/util/debuglog:71:18,0x21794161d40,~
code-source-info,0x3a72c5e0406,22,2302,3328,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3216C74O3169C79O3311C81O3325,,
code-creation,Eval,10,145739,0x3a72c5e33ee,5, node:internal/child_process:1:1,0x3a72c5e2cf0,~
script-source,100,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x3a72c5e33ee,100,0,32650,C0O0C4O32650,,
code-creation,Function,10,147079,0x3a72c5e4a0e,1265, node:internal/child_process:1:1,0x3a72c5e3368,~
code-source-info,0x3a72c5e4a0e
code-creation,Function,10,147216,0x3a72c5e5186,35,<instance_members_initializer> node:internal/child_process:525:3,0x3a72c5e40d0,~
code-source-info,0x3a72c5e5186,100,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
tick,0x7ff7c09ef441,147235,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x3a72c5c2fec,0x3a72c5c22dd,0x3a72c5de07a,0x3a72c5c300d,0x3a72c5c22dd,0x3a72c5dc43a,0x3a72c5c6502,0x3a72c5c2065
code-creation,Eval,10,148200,0x3a72c5e9476,5, node:net:1:1,0x3a72c5e8c78,~
script-source,101,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive && enable !== this[kSetKeepAlive]) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && handle.setNoDelay) {\x0d\n    handle.setNoDelay(true);\x0d\n  }\x0d\n\x0d\n  if (self.keepAlive && self.setKeepAlive) {\x0d\n    handle.setKeepAlive(true\x2C handle.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x3a72c5e9476,101,0,51035,C0O0C4O51035,,
tick,0x7ff7c11dbdd1,150285,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x3a72c5c2fec,0x3a72c5c22dd,0x3a72c5e4bfc,0x3a72c5c300d,0x3a72c5c22dd,0x3a72c5de07a,0x3a72c5c300d,0x3a72c5c22dd,0x3a72c5dc43a,0x3a72c5c6502,0x3a72c5c2065
code-creation,Function,10,150308,0x3a72c5ec356,2547, node:net:1:1,0x3a72c5e93f0,~
code-source-info,0x3a72c5ec356,101,0,51035,C0O0C417O1183C423O1200C429O1226C435O1238C441O1249C447O1265C453O1284C459O1309C464O1334C469O1384C475O1384C479O1384C481O1419C487O1419C491O1419C493O1451C499O1451C504O1484C518O1485C524O1451C526O1618C532O1618C537O1543C543O1552C548O1563C553O1574C559O1599C565O1659C571O1659C575O1659C577O1748C580O1748C585O1699C591O1717C597O1731C603O1793C609O1793C614O1782C620O1841C623O1841C628O1821C634O1892C637O1892C642O1875C648O1992C651O1992C656O1936C662O1944C668O1974C674O2092C677O2092C682O2033C688O2042C694O2073C700O2228C706O2228C711O2134C717O2149C728O2191C734O2208C740O2438C746O2438C751O2273C757O2291C763O2308C769O2325C774O2346C780O2358C785O2375C790O2396C796O2408C802O2422C808O2856C814O2856C819O2856C824O2505C830O2538C836O2565C842O2593C848O2619C854O2648C860O2680C866O2709C872O2733C878O2760C884O2779C890O2805C896O2826C902O2910C908O2910C913O2893C919O3073C925O3073C930O2954C936O2978C942O2999C948O3017C954O3036C960O3053C966O3134C969O3134C973O3134C975O3236C981O3236C986O3176C992O3209C998O3319C999O3319C1001O3333C1002O3333C1004O3343C1005O3343C1007O3359C1008O3359C1010O3402C1016O3402C1021O3385C1027O3443C1033O3443C1038O3430C1044O3500C1046O3500C1048O3538C1050O3538C1052O3565C1055O3573C1062O3582C1065O3565C1067O3611C1071O3611C1073O7211C1076O7211C1080O7211C1082O7256C1085O7256C1089O7256C1091O7302C1094O7302C1098O7302C1100O7348C1103O7348C1107O7348C1109O7408C1112O7408C1116O7408C1118O12064C1121O12092C1129O12110C1134O12117C1139O12064C1144O12130C1150O12166C1155O12130C1160O12209C1163O12216C1172O12238C1176O12474C1179O12481C1188O12498C1192O14068C1195O14075C1202O14096C1206O14121C1209O14128C1218O14149C1222O14677C1225O14684C1234O14705C1238O15106C1241O15113C1250O15136C1254O15642C1257O15649C1266O15667C1270O15722C1276O15750C1290O15786C1298O15722C1303O15841C1309O15869C1323O15896C1331O15841C1336O15988C1342O16016C1356O16051C1364O15988C1369O16388C1375O16416C1389O16451C1397O16388C1402O16544C1408O16572C1413O16583C1419O16607C1430O16544C1435O16988C1438O16995C1447O17011C1451O17258C1454O17265C1463O17279C1467O17480C1470O17487C1479O17503C1483O17857C1486O17864C1495O17881C1499O18080C1502O18087C1511O18102C1515O18456C1518O18463C1527O18485C1531O18649C1534O18656C1543O18675C1547O19674C1550O19681C1559O19704C1563O20184C1571O20184C1576O20308C1584O20308C1594O20411C1602O20411C1612O20511C1620O20511C1630O20607C1633O20614C1642O20637C1650O20931C1658O20931C1668O21034C1676O21034C1686O21128C1689O21135C1694O21145C1698O21163C1706O21219C1709O21226C1718O21250C1726O22049C1729O22056C1738O22074C1746O22153C1749O22160C1758O22177C1766O22428C1774O22428C1784O22572C1792O22572C1802O26164C1805O26171C1814O26189C1822O30744C1825O30751C1834O30765C1842O30972C1845O30979C1854O30995C1862O34520C1865O34548C1877O34572C1886O34520C1896O34585C1902O34585C1912O38706C1915O38713C1926O38732C1934O40250C1937O40257C1950O40274C1958O44343C1964O44371C1985O44405C1997O44343C2007O44503C2010O44510C2023O44528C2031O45846C2034O45853C2047O45878C2055O46675C2058O46682C2071O46698C2079O47609C2082O47616C2095O47646C2103O48146C2106O48153C2118O48176C2131O48200C2139O48533C2145O48558C2166O48583C2178O48624C2190O48533C2200O48674C2206O48702C2223O48729C2235O48765C2247O48674C2257O48810C2260O48817C2273O48840C2281O49095C2284O49102C2297O49116C2305O49228C2308O49235C2321O49251C2329O49368C2331O49424C2332O49424C2334O49433C2345O49457C2346O49457C2348O49483C2357O50213C2362O50495C2372O50538C2382O50577C2392O50595C2402O50863C2412O50893C2422O50905C2432O50928C2442O50945C2452O50964C2462O50975C2472O50986C2482O51005C2537O50510C2546O51034,,
tick,0x7ff7c11f0237,150637,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x3a72c5c2fec,0x3a72c5c22dd,0x3a72c5e4bfc,0x3a72c5c300d,0x3a72c5c22dd,0x3a72c5de07a,0x3a72c5c300d,0x3a72c5c22dd,0x3a72c5dc43a,0x3a72c5c6502,0x3a72c5c2065
code-creation,Eval,10,150955,0x3a72c5f1cf6,5, node:internal/net:1:1,0x3a72c5f1b30,~
script-source,102,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x3a72c5f1cf6,102,0,1818,C0O0C4O1818,,
code-creation,Function,10,151054,0x3a72c5f20e6,617, node:internal/net:1:1,0x3a72c5f1c70,~
code-source-info,0x3a72c5f20e6,102,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,151327,0x3a72c5f3aee,5, node:internal/dtrace:1:1,0x3a72c5f39a8,~
script-source,103,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x3a72c5f3aee,103,0,589,C0O0C4O589,,
code-creation,Function,10,151429,0x3a72c5f3fc6,140, node:internal/dtrace:1:1,0x3a72c5f3a68,~
code-source-info,0x3a72c5f3fc6,103,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,151637,0x3a72c5f4f8e,34,protoGetter node:net:740:21,0x3a72c5e98b8,~
code-source-info,0x3a72c5f4f8e,101,20034,20180,C0O20056C8O20084C13O20095C20O20162C27O20056C33O20179,,
code-creation,Eval,10,152245,0x3a72c5fa31e,5, node:dgram:1:1,0x3a72c5f9db8,~
script-source,104,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x3a72c5fa31e,104,0,28325,C0O0C4O28325,,
code-creation,Function,10,153502,0x3a72c5fc22e,1501, node:dgram:1:1,0x3a72c5fa298,~
code-source-info,0x3a72c5fc22e
tick,0x7ff7c073cbe3,153686,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x3a72c5c2fec,0x3a72c5c22dd,0x3a72c5e4c08,0x3a72c5c300d,0x3a72c5c22dd,0x3a72c5de07a,0x3a72c5c300d,0x3a72c5c22dd,0x3a72c5dc43a,0x3a72c5c6502,0x3a72c5c2065
code-creation,Eval,10,153901,0x3a72c5ff636,5, node:internal/dgram:1:1,0x3a72c5ff430,~
script-source,105,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x3a72c5ff636,105,0,1941,C0O0C4O1941,,
code-creation,Function,10,154009,0x3a72c5ff8fe,196, node:internal/dgram:1:1,0x3a72c5ff5b0,~
code-source-info,0x3a72c5ff8fe,105,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
new,MemoryChunk,0x3318a240000,262144
code-creation,LazyCompile,10,154271,0x3318a243406,152,deprecate node:internal/util:96:19,0x21794145aa8,~
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEnumerableProperty\x2C\x0d\n};\x0d\n
code-source-info,0x3318a243406,16,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
tick,0x7ffdf67ba8cf,154951,0,0x0,3,0x7ff7c08240c0,0x3a72c5fc670,0x3a72c5c300d,0x3a72c5c22dd,0x3a72c5e4c08,0x3a72c5c300d,0x3a72c5c22dd,0x3a72c5de07a,0x3a72c5c300d,0x3a72c5c22dd,0x3a72c5dc43a,0x3a72c5c6502,0x3a72c5c2065
code-creation,Function,11,155047,0x204010440c0,1344,deprecate node:internal/util:96:19,0x21794145aa8,^
code-source-info,0x204010440c0,16,2503,3720,,,
code-creation,Function,11,155076,0x20401044660,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x17449fcfdc0,^
code-source-info,0x20401044660,9,10647,11000,,,
code-creation,Function,11,155100,0x20401044960,548,internalBinding node:internal/bootstrap/loaders:164:45,0x17449fcf840,^
code-source-info,0x20401044960,9,5278,5523,,,
code-creation,Function,11,155129,0x20401044c00,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x17449fcfcf0,^
code-source-info,0x20401044c00,9,9827,10410,,,
code-creation,Eval,10,155334,0x3318a245ad6,5, node:internal/socket_list:1:1,0x3318a245980,~
script-source,106,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x3318a245ad6,106,0,2813,C0O0C4O2813,,
code-creation,Function,10,155476,0x3318a246116,126, node:internal/socket_list:1:1,0x3318a245a50,~
code-source-info,0x3318a246116,106,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,155671,0x3318a246cb6,14,customPromiseExecFunction node:child_process:230:35,0x3a72c5dd9b8,~
code-source-info,0x3318a246cb6,99,6803,7183,C0O6803C9O6818C13O7180,,
code-creation,LazyCompile,10,155741,0x3318a248cd6,129,_forkChild node:child_process:169:20,0x3a72c5dd458,~
code-source-info,0x3318a248cd6,99,5058,5540,C0O5058C8O5122C19O5131C22O5145C29O5122C35O5156C40O5156C45O5171C50O5171C54O5199C72O5199C77O5199C79O5247C84O5255C97O5255C103O5390C108O5398C121O5398C128O5539,,
tick,0x7ffdf681cdb4,156424,1,0x7ff7c0229b60,6,0x7ff7c0bf59a0,0x3318a248cfe,0x3a72c5dc444,0x3a72c5c6502,0x3a72c5c2065
tick,0x7ffdf5e7021b,158443,1,0x7ff7c0229b60,6,0x7ff7c0bf59a0,0x3318a248cfe,0x3a72c5dc444,0x3a72c5c6502,0x3a72c5c2065
code-creation,LazyCompile,10,159295,0x3318a2496d6,396,setupChannel node:internal/child_process:571:22,0x3a72c5e36a0,~
code-source-info,0x3318a2496d
code-creation,LazyCompile,10,159394,0x3318a24beae,72,Control node:internal/child_process:529:14,0x3a72c5e3ed8,~
code-source-info,0x3318a24beae,100,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,159437,0x3318a24bfe6,21,EventEmitter node:events:208:22,0x2179416b1b0,~
code-source-info,0x3318a24bfe6,23,6474,6524,C0O6486C3O6499C8O6504C13O6504C20O6523,,
code-creation,LazyCompile,10,159497,0x3318a24c12e,149,EventEmitter.init node:events:327:29,0x2179416b5a8,~
code-source-info,0x3318a24c12e,23,10006,10614,C0O10029C6O10066C13O10078C16O10078C21O10104C25O10074C30O10121C32O10136C37O10136C41O10134C45O10161C46O10179C50O10220C60O10213C64O10255C71O10263C80O10291C85O10312C93O10291C98O10366C100O10371C105O10383C108O10396C113O10383C117O10381C123O10556C125O10561C131O10586C138O10596C140O10595C143O10571C148O10613,,
code-creation,Eval,10,159759,0x3318a24cc76,5, node:internal/child_process/serialization:1:1,0x3318a24c990,~
script-source,107,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x3318a24cc76,107,0,4335,C0O0C4O4335,,
code-creation,Function,10,159952,0x3318a24d4de,369, node:internal/child_process/serialization:1:1,0x3318a24cbf0,~
code-source-info,0x3318a24d4de,107,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,160114,0x3318a24e17e,23,initMessageChannel node:internal/child_process/serialization:100:21,0x3318a24ced8,~
code-source-info,0x3318a24e17e,107,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,160187,0x3318a24e7d6,19,_getMaxListeners node:events:404:26,0x2179416b778,~
code-source-info,0x3318a24e7d6,23,12272,12400,C0O12293C6O12327C9O12347C13O12367C14O12383C18O12397,,
code-creation,LazyCompile,10,160218,0x3318a24e8ce,5,get node:events:264:16,0x2179416b398,~
code-source-info,0x3318a24e8ce,23,8043,8085,C0O8053C4O8080,,
code-creation,LazyCompile,10,160283,0x3318a24ec2e,322,arrayClone node:events:879:20,0x2179416c040,~
code-source-info,0x3318a24ec2e,23,26079,26544,C0O26221C42O26244C50O26255C62O26263C71O26268C72O26282C80O26293C92O26301C104O26309C113O26314C114O26328C122O26339C134O26347C146O26355C158O26363C167O26368C168O26382C176O26393C188O26401C200O26409C212O26417C224O26425C233O26430C234O26444C242O26455C254O26463C266O26471C278O26479C290O26487C302O26495C311O26500C312O26509C317O26516C321O26541,,
code-creation,LazyCompile,10,160355,0x3318a24eefe,22, node:internal/child_process:706:36,0x3318a2491f0,~
code-source-info,0x3318a24eefe,100,20095,20508,C0O20107C5O20115C15O20115C21O20507,,
tick,0x7ff7c0a1b196,160465,0,0x0,3,0x7ff7c08240c0,0x3318a24ef0d,0x3a72c5d5827,0x3a72c5d50a3,0x3a72c5d299c,0x3318a248d37,0x3a72c5dc444,0x3a72c5c6502,0x3a72c5c2065
code-creation,LazyCompile,10,160487,0x3318a24f19e,368,nextTick node:internal/process/task_queues:104:18,0x29f2e35aa50,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0x3318a24f19e
code-creation,LazyCompile,10,160764,0x3318a24fa0e,21, node:internal/validators:222:42,0x17449ffd268,~
code-source-info,0x3318a24fa0e,15,7036,7140,C0O7055C6O7096C13O7102C18O7096C20O7139,,
code-creation,LazyCompile,10,160804,0x3318a24fb0e,15,isEmpty node:internal/fixed_queue:95:10,0x29f2e35fc80,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x3318a24fb0e,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,160991,0x3318a24ffc6,13,isEmpty node:internal/fixed_queue:67:10,0x29f2e35fa10,~
code-source-info,0x3318a24ffc6,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,161022,0x3318a2500b6,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x29f2e35a960,~
code-source-info,0x3318a2500b6,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,161084,0x3318a2501ae,23,newAsyncId node:internal/async_hooks:417:20,0x17449ff8838,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x3318a2501ae,13,14929,14982,C0O14937C7O14962C16O14977C22O14979,,
code-creation,LazyCompile,10,161882,0x3318a25168e,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x17449ff88d8,~
code-source-info,0x3318a25168e,13,15404,15667,C0O15442C7O15458C9O15457C13O15553C14O15579C19O15589C26O15612C28O15611C31O15631C32O15635C34O15664,,
code-creation,LazyCompile,10,161926,0x3318a25179e,13,initHooksExist node:internal/async_hooks:479:24,0x17449ff8ac8,~
code-source-info,0x3318a25179e,13,16671,16705,C0O16679C5O16695C8O16686C12O16702,,
code-creation,LazyCompile,10,161955,0x3318a251886,16,hasHooks node:internal/async_hooks:471:18,0x17449ff8a28,~
code-source-info,0x3318a251886,13,16531,16579,C0O16542C7O16566C12O16572C15O16576,,
code-creation,LazyCompile,10,161989,0x3318a251996,59,push node:internal/fixed_queue:99:7,0x29f2e35fcd0,~
code-source-info,0x3318a251996,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,162024,0x3318a251ade,24,isFull node:internal/fixed_queue:71:9,0x29f2e35fa60,~
code-source-info,0x3318a251ade,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,162059,0x3318a251bee,37,push node:internal/fixed_queue:75:7,0x29f2e35fac8,~
code-source-info,0x3318a251bee,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,162114,0x3318a251d0e,30,onNewListener node:child_process:175:51,0x3318a248b90,~
code-source-info,0x3318a251d0e,99,5295,5384,C0O5309C2O5318C9O5340C14O5358C19O5366C24O5366C29O5383,,
code-creation,LazyCompile,10,162222,0x3318a25205e,455,initializePolicy node:internal/bootstrap/pre_execution:421:26,0x3a72c5c45e0,~
code-source-info,0x3318a25205e
code-creation,LazyCompile,10,162320,0x3318a25242e,63,initializeClusterIPC node:internal/bootstrap/pre_execution:412:30,0x3a72c5c4590,~
code-source-info,0x3318a25242e,96,13124,13372,C0O13132C3O13144C10O13148C18O13163C23O13167C29O13206C35O13206C40O13239C45O13239C49O13330C52O13345C62O13371,,
code-creation,LazyCompile,10,162371,0x3318a25259e,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:516:38,0x3a72c5c4720,~
code-source-info,0x3318a25259e,96,17027,17180,C0O17073C6O17073C11O17043C16O17125C21O17154C26O17179,,
tick,0x7ff7c07cc917,162419,1,0x7ff7c02ae150,2,0x7ff7c0bf59a0,0x20401044e3b,0x204010448e5,0x3318a2525a4,0x3a72c5c6514,0x3a72c5c2065
code-creation,Eval,10,162591,0x3318a252ed6,5, node:internal/source_map/source_map_cache:1:1,0x3318a252b70,~
script-source,108,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x3318a252ed6,108,0,7881,C0O0C4O7881,,
code-creation,Function,10,162923,0x3318a25354e,435, node:internal/source_map/source_map_cache:1:1,0x3318a252e50,~
code-source-info,0x3318a25354e,108,0,7881,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7738C399O7760C405O7778C411O7803C417O7828C423O7852C429O7753C434O7880,,
code-creation,Eval,10,163122,0x3318a25458e,5, node:internal/util/iterable_weak_map:1:1,0x3318a254340,~
script-source,109,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x3318a25458e,109,0,2042,C0O0C4O2042,,
code-creation,Function,10,163232,0x3318a254cee,196, node:internal/util/iterable_weak_map:1:1,0x3318a254508,~
code-source-info,0x3318a254cee,109,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,163255,0x3318a254e6e,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x3318a254818,~
code-source-info,0x3318a254e6e,109,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,163490,0x3318a255aa6,5, node:internal/modules/cjs/helpers:1:1,0x3318a2557f0,~
script-source,110,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x3318a255aa6,110,0,7046,C0O0C4O7046,,
code-creation,Function,10,163871,0x3318a256026,536, node:internal/modules/cjs/helpers:1:1,0x3318a255a20,~
code-source-info,0x3318a256026,110,0,7046,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6877C488O6899C494O6926C500O6944C506O6961C512O6982C518O7006C524O7031C530O6892C535O7045,,
code-creation,LazyCompile,10,164035,0x3318a256c8e,27,SafeSet node:internal/per_context/primordials:373:16,0x17449fca230,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x3318a256c8e,6,11034,11051,C3O11040C7O11046C11O11040C26O11050,,
code-creation,LazyCompile,10,164625,0x3318a257b16,27,SafeMap node:internal/per_context/primordials:360:16,0x17449fca0a8,~
code-source-info,0x3318a257b16,6,10694,10711,C3O10700C7O10706C11O10700C26O10710,,
tick,0x7ffdf67d3bd4,164672,0,0x0,3,0x7ff7c08240c0,0x3318a2561f7,0x20401044f03,0x204010448e5,0x3318a253685,0x20401044f03,0x204010448e5,0x3318a2525a4,0x3a72c5c6514,0x3a72c5c2065
code-creation,LazyCompile,10,164691,0x3318a257c0e,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x3318a254610,~
code-source-info,0x3318a257c0e,109,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,164724,0x3318a257f96,27,SafeWeakMap node:internal/per_context/primordials:366:16,0x17449fca168,~
code-source-info,0x3318a257f96,6,10871,10888,C3O10877C7O10883C11O10877C26O10887,,
code-creation,LazyCompile,10,164760,0x3318a25809e,27,SafeFinalizationRegistry node:internal/per_context/primordials:387:16,0x17449fca3b8,~
code-source-info,0x3318a25809e,6,11498,11543,C3O11518C7O11524C11O11518C26O11542,,
code-creation,LazyCompile,10,164875,0x3318a25891e,492,initializeDeprecations node:internal/bootstrap/pre_execution:306:32,0x3a72c5c44b0,~
code-source-info,0x3318a25891e
code-creation,LazyCompile,10,164984,0x3318a258ec6,53,initializeWASI node:internal/bootstrap/pre_execution:470:24,0x3a72c5c4630,~
code-source-info,0x3318a258ec6,96,15273,15484,C0O15306C6O15306C11O15289C16O15373C21O15377C29O15377C35O15393C37O15425C43O15425C47O15418C52O15483,,
code-creation,LazyCompile,10,165035,0x3318a2590c6,66,initializeCJSLoader node:internal/bootstrap/pre_execution:477:29,0x3a72c5c4680,~
code-source-info,0x3318a2590c6,96,15516,15839,C0O15542C6O15542C11O15585C16O15590C20O15610C26O15649C31O15656C36O15656C40O15755C51O15777C56O15813C60O15770C65O15838,,
code-creation,Eval,10,165796,0x3318a25b016,5, node:internal/modules/cjs/loader:1:1,0x3318a25a730,~
script-source,111,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x3318a25b016,111,0,41761,C0O0C4O41761,,
code-creation,Function,10,167521,0x3318a25cdb6,2547, node:internal/modules/cjs/loader:1:1,0x3318a25af90,~
code-source-info,0x3318a25cdb6,111,0,41761,C0O0C446O1183C452O1200C458O1225C464O1250C470O1277C476O1303C482O1326C488O1349C494O1373C500O1398C506O1424C512O1455C518O1467C524O1477C530O1491C535O1508C541O1533C546O1550C552O1585C558O1610C564O1625C570O1645C576O1679C582O1704C587O1714C593O1731C599O1746C605O1770C611O1794C617O1806C622O1822C628O1833C634O1859C640O1889C646O1917C652O1948C658O1975C664O2000C670O2026C676O2051C682O2076C688O2186C690O2186C695O2186C697O2262C709O2284C715O2294C721O2302C727O2314C733O2332C763O2277C767O2452C771O2452C777O2435C783O2529C787O2529C793O2503C799O2635C803O2635C809O2587C815O2602C821O2617C827O2683C831O2683C837O2669C842O2721C846O2721C850O2721C852O2752C856O2752C860O2752C862O2792C866O2792C870O2792C872O2827C876O2827C880O2827C882O2871C886O2871C890O2871C892O2905C896O2897C902O2943C910O2943C916O2920C922O2993C926O2993C930O2993C932O3066C940O3066C946O3051C952O3230C956O3230C962O3110C968O3128C974O3145C980O3166C986O3190C992O3215C998O3299C1002O3299C1008O3280C1014O3354C1022O3354C1026O3354C1028O3423C1036O3423C1040O3423C1042O3535C1050O3535C1060O3580C1067O3535C1069O3765C1070O3765C1072O3944C1076O3944C1082O3944C1088O3800C1094O3828C1100O3863C1106O3885C1112O3922C1118O4000C1122O4000C1128O3981C1134O4060C1142O4060C1147O4178C1151O4178C1157O4115C1163O4138C1169O4162C1175O4236C1179O4236C1185O4223C1191O4288C1195O4288C1199O4288C1201O4356C1205O4356C1211O4337C1217O4425C1225O4425C1231O4410C1237O4542C1241O4542C1247O4469C1253O4489C1259O4515C1265O4604C1269O4612C1277O4621C1280O4604C1282O4666C1285O4666C1289O4666C1291O4708C1292O4708C1294O4728C1295O4728C1297O4754C1298O4754C1300O5420C1302O5420C1307O5420C1309O5728C1312O5778C1316O5778C1350O5760C1381O5749C1388O5756C1397O5796C1403O5825C1407O5825C1412O5733C1483O5876C1487O5907C1493O5929C1497O5950C1504O5966C1508O5964C1512O5987C1519O6007C1527O6005C1535O6028C1542O6049C1550O6047C1558O6088C1562O6088C1564O6093C1572O6112C1580O6135C1581O6135C1583O6196C1587O6196C1589O6296C1597O6415C1606O6429C1618O6561C1635O6405C1645O6405C1647O6706C1659O6727C1668O6748C1680O6785C1692O6706C1702O6851C1714O6872C1723O6896C1735O6941C1747O6851C1757O7040C1766O7042C1781O7077C1789O7105C1806O7077C1816O7152C1824O7186C1841O7152C1851O7388C1859O7416C1884O7447C1892O7572C1907O7468C1921O7656C1931O7681C1939O7806C1954O7702C1968O7890C1976O7388C1986O7927C1990O7927C2000O7960C2020O7961C2032O7927C2034O8011C2050O8027C2060O8025C2068O8353C2072O8353C2082O8353C2084O11246C2088O11246C2098O11246C2100O13968C2107O13968C2109O14774C2116O14774C2118O14793C2126O14810C2134O17571C2141O17571C2143O17649C2147O17657C2155O17649C2157O17666C2161O17731C2169O17755C2179O19385C2187O19409C2195O20593C2203O20620C2211O22216C2223O22235C2235O22621C2249O22216C2259O22216C2261O23941C2269O23954C2277O26976C2285O27000C2293O31201C2297O31208C2311O31223C2319O32165C2323O32172C2337O32190C2345O32645C2346O32645C2348O32681C2349O32681C2351O34014C2355O34021C2369O34040C2377O35977C2381O35984C2395O36003C2403O37849C2407O37856C2421O37877C2429O38295C2433O38302C2447O38323C2455O39163C2461O39213C2467O39163C2469O39819C2475O39840C2483O39860C2491O39878C2499O40877C2507O40900C2515O41510C2523O41539C2531O41736C2537O41750C2546O41760,,
tick,0x7ff7c09ef441,167795,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x20401044e3b,0x204010448e5,0x3318a2590cc,0x3a72c5c6526,0x3a72c5c2065
code-creation,Eval,10,167969,0x3318a260d76,5, node:internal/modules/package_json_reader:1:1,0x3318a260bd0,~
script-source,112,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x3318a260d76,112,0,1024,C0O0C4O1024,,
code-creation,Function,10,168053,0x3318a260ec6,113, node:internal/modules/package_json_reader:1:1,0x3318a260cf0,~
code-source-info,0x3318a260ec6,112,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,168202,0x3318a26170e,5, node:internal/process/esm_loader:1:1,0x3318a261518,~
script-source,113,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x3318a26170e,113,0,2982,C0O0C4O2982,,
code-creation,Function,10,168368,0x3318a2619ae,182, node:internal/process/esm_loader:1:1,0x3318a261688,~
code-source-info,0x3318a2619ae,113,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
tick,0x7ffdf67c1b6f,168500,1,0x7ff7c02ae150,6,0x7ff7c0bf59a0,0x20401044e3b,0x204010448e5,0x3318a25d261,0x20401044f03,0x204010448e5,0x3318a2590cc,0x3a72c5c6526,0x3a72c5c2065
code-creation,Eval,10,168762,0x3318a262cbe,5, node:internal/modules/esm/loader:1:1,0x3318a262830,~
script-source,114,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  fetchModule\x2C\x0d\n} = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {Function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C\x0d\n                             this.getBaseURL(url)\x2C\x0d\n                             importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the url to use for the resolution of a given cache key url\x0d\n   * These are not guaranteed to be the same.\x0d\n   *\x0d\n   * In WHATWG HTTP spec for ESM the cache key is the non-I/O bound\x0d\n   * synchronous resolution using only string operations\x0d\n   *   ~= resolveImportMap(new URL(specifier\x2C importerHREF))\x0d\n   *\x0d\n   * The url used for subsequent resolution is the response URL after\x0d\n   * all redirects have been resolved.\x0d\n   *\x0d\n   * https://example.com/foo redirecting to https://example.com/bar\x0d\n   * would have a cache key of https://example.com/foo and baseURL\x0d\n   * of https://example.com/bar\x0d\n   *\x0d\n   * MUST BE SYNCHRONOUS for import.meta initialization\x0d\n   * MUST BE CALLED AFTER receiving the url body due to I/O\x0d\n   * @param {string} url\x0d\n   * @returns {string}\x0d\n   */\x0d\n  getBaseURL(url) {\x0d\n    if (\x0d\n      StringPrototypeStartsWith(url\x2C 'http:') ||\x0d\n      StringPrototypeStartsWith(url\x2C 'https:')\x0d\n    ) {\x0d\n      // The request & response have already settled\x2C so they are in\x0d\n      // fetchModule's cache\x2C in which case\x2C fetchModule returns\x0d\n      // immediately and synchronously\x0d\n      url = fetchModule(new URL(url)\x2C { parentURL: url }).resolvedHREF;\x0d\n      // This should only occur if the module hasn't been fetched yet\x0d\n      if (typeof url !== 'string') {\x0d\n        throw new ERR_INTERNAL_ASSERTION(`Base url for module ${url} not loaded.`);\x0d\n      }\x0d\n    }\x0d\n    return url;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve =\x0d\n        ObjectAssign(ObjectCreate(null)\x2C importAssertions);\x0d\n    }\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C url);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<object | object[]>} A list of module export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n        dataUrl ? dataUrl[1] : format\x2C\x0d\n        url);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const preload = this.#globalPreloaders[i]({\x0d\n        port: insideLoader\x0d\n      });\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ url: string }}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = ObjectCreate(null)\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        importAssertions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') { // non-strings can be coerced to a url string\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    new URL(url); // Intentionally trigger error if `url` is invalid\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x3318a262cbe,114,0,18635,C0O0C4O18635,,
code-creation,Function,10,169573,0x3318a26358e,659, node:internal/modules/esm/loader:1:1,0x3318a262c38,~
code-source-info,0x3318a26358e,114,0,18635,C0O0C122O82C128O82C132O136C138O146C144O163C150O186C156O209C162O235C168O261C174O278C180O295C185O320C191O335C197O359C203O381C209O397C215O427C221O485C227O485C232O466C238O706C244O706C249O732C254O530C260O557C266O582C272O608C278O646C284O675C290O787C296O787C301O749C307O764C313O779C319O869C325O869C330O824C336O845C342O920C348O920C352O920C354O983C360O983C364O983C366O1085C372O1085C377O1041C383O1060C389O1164C395O1164C400O1138C406O1245C412O1245C417O1229C423O1308C429O1308C434O1292C440O1385C446O1385C451O1366C457O1444C463O1444C468O1426C639O18582C646O18551C651O18603C653O18621C658O18634,,
code-creation,Function,10,169635,0x3318a263a36,154,<instance_members_initializer> node:internal/modules/esm/loader:68:3,0x3318a2630b0,~
code-source-info,0x3318a263a36,114,1944,2827,C3O1964C17O2126C28O2133C45O2315C56O2322C73O2374C88O2473C95O2473C109O2596C119O2688C126O2688C140O2816C153O2827,,
code-creation,Eval,10,169788,0x3318a26540e,5, node:internal/modules/esm/module_map:1:1,0x3318a265220,~
script-source,115,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x3318a26540e,115,0,1487,C0O0C4O1487,,
code-creation,Function,10,169888,0x3318a265846,175, node:internal/modules/esm/module_map:1:1,0x3318a265388,~
code-source-info,0x3318a265846,115,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,170100,0x3318a2662ee,5, node:internal/modules/esm/module_job:1:1,0x3318a265ff8,~
script-source,116,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const baseURL = this.loader.getBaseURL(url);\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C baseURL\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
tick,0x7ff7c01718a0,170527,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x20401044e3b,0x204010448e5,0x3318a265860,0x20401044f03,0x204010448e5,0x3318a2636ea,0x20401044f03,0x204010448e5,0x3318a2619fc,0x20401044f03,0x204010448e5,0x3318a25d261,0x20401044f03,0x204010448e5,0x3318a2590cc,0x3a72c5c6526,0x3a72c5c2065
code-source-info,0x3318a2662ee,116,0,8465,C0O0C4O8465,,
code-creation,Function,10,170564,0x3318a2667e6,343, node:internal/modules/esm/module_job:1:1,0x3318a266268,~
code-source-info,0x3318a2667e6,116,0,8465,C0O0C88O28C94O51C100O73C106O96C112O119C117O141C123O158C128O183C134O198C139O217C145O243C151O260C157O284C163O306C169O318C175O346C181O371C187O398C193O423C199O494C205O494C210O479C216O560C222O560C227O537C233O625C239O625C244O598C250O690C256O690C260O690C262O743C265O743C267O777C269O777C271O820C272O820C274O852C278O852C280O977C284O977C323O8417C330O8386C335O8436C337O8451C342O8464,,
code-creation,Eval,10,170775,0x3318a26843e,5, node:internal/modules/esm/assert:1:1,0x3318a268248,~
script-source,117,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0x3318a26843e,117,0,3734,C0O0C4O3734,,
code-creation,Function,10,170943,0x3318a268716,201, node:internal/modules/esm/assert:1:1,0x3318a2683b8,~
code-source-info,0x3318a268716,117,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,171042,0x3318a268d26,9, node:internal/modules/esm/assert:43:3,0x3318a268510,~
code-source-info,0x3318a268d26,117,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,171726,0x3318a26a966,5, node:internal/modules/esm/resolve:1:1,0x3318a26a1a8,~
script-source,118,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap(); /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\nlet experimentalSpecifierResolutionWarned = false;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  let path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    if (!experimentalSpecifierResolutionWarned) {\x0d\n      process.emitWarning(\x0d\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\x0d\n        'ExperimentalWarning');\x0d\n      experimentalSpecifierResolutionWarned = true;\x0d\n    }\x0d\n\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n\x0d\n    // Directory\x0d\n    if (file === undefined) {\x0d\n      file = StringPrototypeEndsWith(path\x2C '/') ?\x0d\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n\x0d\n      if (file === resolved) return file;\x0d\n\x0d\n      if (file === undefined) {\x0d\n        throw new ERR_MODULE_NOT_FOUND(\x0d\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    path = file;\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier))\x0d\n    return new URL('node:' + specifier);\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    const parentURL = fileURLToPath(parsedParentURL?.href);\x0d\n\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (NativeModule.canBeRequiredByUsers(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ));\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context\x2C $defaultResolve);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x0d\n      )\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x3318a26a966,118,0,42310,C0O0C4O42310,,
code-creation,Function,10,173433,0x3318a26ba96,1191, node:internal/modules/esm/resolve:1:1,0x3318a26a8e0,~
code-source-info,0x3318a26ba96,118,0,42310,C0O0C415O28C421O45C427O70C433O93C439O117C445O131C451O149C456O166C462O196C468O230C474O241C480O265C486O298C492O322C497O334C503O346C509O357C515O385C521O413C527O440C533O471C539O496C545O521C551O586C554O586C558O586C560O642C563O642C568O625C574O735C577O735C582O693C588O710C594O723C600O778C603O778C608O759C614O875C620O875C629O920C636O875C638O1002C641O1002C646O975C652O980C658O990C664O1045C670O1045C674O1045C676O1114C682O1114C686O1114C688O1197C694O1197C698O1197C700O1265C706O1265C710O1265C712O1325C718O1325C722O1325C724O1413C727O1413C732O1375C738O1380C744O1395C750O1834C753O1834C758O1860C763O1450C769O1481C775O1507C781O1540C787O1571C793O1602C799O1638C805O1663C811O1698C817O1732C823O1763C829O1797C835O1899C838O1899C843O1885C849O1968C852O1968C856O1968C858O2041C864O2041C869O2091C875O2091C880O2147C891O2210C898O2255C899O2255C953O2278C1004O2210C1008O2210C1010O2333C1018O2333C1023O2333C1025O2688C1028O2688C1033O2688C1035O5911C1037O5911C1042O5911C1044O5952C1046O5952C1051O5952C1053O6098C1057O6098C1059O11574C1063O11574C1065O12583C1069O12583C1071O12640C1072O12640C1074O16335C1078O16335C1080O16539C1084O16539C1086O16573C1090O16573C1092O41492C1099O41514C1105O41537C1111O41556C1117O41576C1123O41602C1129O41621C1135O41647C1141O41507C1145O41734C1148O41734C1153O41698C1159O41781C1170O41822C1172O41822C1174O41848C1183O41871C1190O42309,,
tick,0x7ff7c01f0a54,173592,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x20401044e3b,0x204010448e5,0x3318a263702,0x20401044f03,0x204010448e5,0x3318a2619fc,0x20401044f03,0x204010448e5,0x3318a25d261,0x20401044f03,0x204010448e5,0x3318a2590cc,0x3a72c5c6526,0x3a72c5c2065
code-creation,Eval,10,173794,0x3318a26f556,5, node:internal/modules/esm/get_format:1:1,0x3318a26f2d0,~
script-source,119,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors) return undefined;\x0d\n    let suggestion = '';\x0d\n    if (getPackageType(url) === 'module' && ext === '') {\x0d\n      const config = getPackageScopeConfig(url);\x0d\n      const fileBasename = basename(filepath);\x0d\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n      suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n        '"type":"module" package.json contexts. The package.json file ' +\x0d\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n        'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n    }\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n  }\x0d\n\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x3318a26f556,119,0,4260,C0O0C4O4260,,
code-creation,Function,10,173986,0x3318a26f9d6,368, node:internal/modules/esm/get_format:1:1,0x3318a26f4d0,~
code-source-info,0x3318a26f9d6,119,0,4260,C0O0C90O26C95O43C100O60C106O94C112O119C118O138C124O162C130O243C133O243C138O211C144O221C150O230C156O288C159O288C164O269C169O342C172O342C177O326C183O471C186O471C191O400C197O423C203O452C209O553C212O553C216O553C218O647C221O647C225O647C227O753C230O753C235O711C241O727C247O826C250O826C255O803C261O808C267O891C270O891C275O917C280O860C286O953C288O966C300O1000C306O1041C312O1082C318O1124C322O1156C330O953C335O953C337O4158C344O4180C350O4201C356O4235C362O4173C367O4259,,
code-creation,Eval,10,174237,0x3318a270846,5, node:internal/modules/esm/fetch_module:1:1,0x3318a270580,~
script-source,120,node:internal/modules/esm/fetch_module,'use strict';\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  Buffer: {\x0d\n    concat: BufferConcat\x0d\n  }\x0d\n} = require('buffer');\x0d\nconst {\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { URL } = require('internal/url');\x0d\nconst net = require('net');\x0d\n\x0d\n/**\x0d\n * @typedef CacheEntry\x0d\n * @property {Promise<string> | string} resolvedHREF\x0d\n * @property {Record<string\x2C string>} headers\x0d\n * @property {Promise<Buffer> | Buffer} body\x0d\n */\x0d\n\x0d\n/**\x0d\n * Only for GET requests\x2C other requests would need new Map\x0d\n * HTTP cache semantics keep diff caches\x0d\n *\x0d\n * Maps HREF to pending cache entry\x0d\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\x0d\n */\x0d\nconst cacheForGET = new SafeMap();\x0d\n\x0d\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\x0d\n// lazily/at runtime and not top level of an internal module.\x0d\n\x0d\n// [2] Creating a new agent instead of using the gloabl agent improves\x0d\n// performance and precludes the agent becoming tainted.\x0d\n\x0d\nlet HTTPSAgent;\x0d\nfunction HTTPSGet(url\x2C opts) {\x0d\n  const https = require('https'); // [1]\x0d\n  HTTPSAgent ??= new https.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return https.get(url\x2C {\x0d\n    agent: HTTPSAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nlet HTTPAgent;\x0d\nfunction HTTPGet(url\x2C opts) {\x0d\n  const http = require('http'); // [1]\x0d\n  HTTPAgent ??= new http.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return http.get(url\x2C {\x0d\n    agent: HTTPAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction dnsLookup(name\x2C opts) {\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  dnsLookup = require('dns/promises').lookup;\x0d\n  return dnsLookup(name\x2C opts);\x0d\n}\x0d\n\x0d\nlet zlib;\x0d\nfunction createBrotliDecompress() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createBrotliDecompress = zlib.createBrotliDecompress;\x0d\n  return createBrotliDecompress();\x0d\n}\x0d\n\x0d\nfunction createUnzip() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createUnzip = zlib.createUnzip;\x0d\n  return createUnzip();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {Promise<CacheEntry> | CacheEntry}\x0d\n */\x0d\nfunction fetchWithRedirects(parsed) {\x0d\n  const existing = cacheForGET.get(parsed.href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\x0d\n  const result = new Promise((fulfill\x2C reject) => {\x0d\n    const req = handler(parsed\x2C {\x0d\n      headers: {\x0d\n        Accept: '*/*'\x0d\n      }\x0d\n    })\x0d\n    .on('error'\x2C reject)\x0d\n    .on('response'\x2C (res) => {\x0d\n      function dispose() {\x0d\n        req.destroy();\x0d\n        res.destroy();\x0d\n      }\x0d\n      if (res.statusCode >= 300 && res.statusCode <= 303) {\x0d\n        if (res.headers.location) {\x0d\n          dispose();\x0d\n          try {\x0d\n            const location = new URL(res.headers.location\x2C parsed);\x0d\n            if (location.protocol !== 'http:' &&\x0d\n              location.protocol !== 'https:') {\x0d\n              reject(new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n                res.headers.location\x2C\x0d\n                parsed.href\x2C\x0d\n                'cannot redirect to non-network location'));\x0d\n              return;\x0d\n            }\x0d\n            return PromisePrototypeThen(\x0d\n              PromiseResolve(fetchWithRedirects(location))\x2C\x0d\n              (entry) => {\x0d\n                cacheForGET.set(parsed.href\x2C entry);\x0d\n                fulfill(entry);\x0d\n              });\x0d\n          } catch (e) {\x0d\n            dispose();\x0d\n            reject(e);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      if (res.statusCode > 303 || res.statusCode < 200) {\x0d\n        dispose();\x0d\n        reject(\x0d\n          new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n            parsed.href\x2C\x0d\n            'HTTP response returned status code of ' + res.statusCode));\x0d\n        return;\x0d\n      }\x0d\n      const { headers } = res;\x0d\n      const contentType = headers['content-type'];\x0d\n      if (!contentType) {\x0d\n        dispose();\x0d\n        reject(new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n          parsed.href\x2C\x0d\n          'the \\'Content-Type\\' header is required'));\x0d\n        return;\x0d\n      }\x0d\n      /**\x0d\n       * @type {CacheEntry}\x0d\n       */\x0d\n      const entry = {\x0d\n        resolvedHREF: parsed.href\x2C\x0d\n        headers: {\x0d\n          'content-type': res.headers['content-type']\x0d\n        }\x2C\x0d\n        body: new Promise((f\x2C r) => {\x0d\n          const buffers = [];\x0d\n          let size = 0;\x0d\n          let bodyStream = res;\x0d\n          let onError;\x0d\n          if (res.headers['content-encoding'] === 'br') {\x0d\n            bodyStream = createBrotliDecompress();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else if (res.headers['content-encoding'] === 'gzip' ||\x0d\n            res.headers['content-encoding'] === 'deflate') {\x0d\n            bodyStream = createUnzip();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else {\x0d\n            onError = function onError(error) {\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n          }\x0d\n          bodyStream.on('error'\x2C onError);\x0d\n          bodyStream.on('data'\x2C (d) => {\x0d\n            ArrayPrototypePush(buffers\x2C d);\x0d\n            size += d.length;\x0d\n          });\x0d\n          bodyStream.on('end'\x2C () => {\x0d\n            const body = entry.body = /** @type {Buffer} */(\x0d\n              BufferConcat(buffers\x2C size)\x0d\n            );\x0d\n            f(body);\x0d\n          });\x0d\n        })\x2C\x0d\n      };\x0d\n      cacheForGET.set(parsed.href\x2C entry);\x0d\n      fulfill(entry);\x0d\n    });\x0d\n  });\x0d\n  cacheForGET.set(parsed.href\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst allowList = new net.BlockList();\x0d\nallowList.addAddress('::1'\x2C 'ipv6');\x0d\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\x0d\n\x0d\n/**\x0d\n * Returns if an address has local status by if it is going to a local\x0d\n * interface or is an address resolved by DNS to be a local interface\x0d\n * @param {string} hostname url.hostname to test\x0d\n * @returns {Promise<boolean>}\x0d\n */\x0d\nasync function isLocalAddress(hostname) {\x0d\n  try {\x0d\n    if (StringPrototypeStartsWith(hostname\x2C '[') &&\x0d\n        StringPrototypeEndsWith(hostname\x2C ']')) {\x0d\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\x0d\n    }\x0d\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\x0d\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\x0d\n    return allowList.check(addr.address\x2C ipv);\x0d\n  } catch {\x0d\n    // If it errored\x2C the answer is no.\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Fetches a location with a shared cache following redirects.\x0d\n * Does not respect HTTP cache headers.\x0d\n *\x0d\n * This splits the header and body Promises so that things only needing\x0d\n * headers don't need to wait on the body.\x0d\n *\x0d\n * In cases where the request & response have already settled\x2C this returns the\x0d\n * cache value synchronously.\x0d\n *\x0d\n * @param {URL} parsed\x0d\n * @param {ESModuleContext} context\x0d\n * @returns {ReturnType<typeof fetchWithRedirects>}\x0d\n */\x0d\nfunction fetchModule(parsed\x2C { parentURL }) {\x0d\n  const { href } = parsed;\x0d\n  const existing = cacheForGET.get(href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  if (parsed.protocol === 'http:') {\x0d\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\x0d\n      if (is !== true) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          href\x2C\x0d\n          parentURL\x2C\x0d\n          'http can only be used to load local resources (use https instead).'\x0d\n        );\x0d\n      }\x0d\n      return fetchWithRedirects(parsed);\x0d\n    });\x0d\n  }\x0d\n  return fetchWithRedirects(parsed);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fetchModule: fetchModule\x0d\n};\x0d\n
code-source-info,0x3318a270846,120,0,8052,C0O0C4O8052,,
code-creation,Function,10,174603,0x3318a270cde,318, node:internal/modules/esm/fetch_module:1:1,0x3318a2707c0,~
code-source-info,0x3318a270cde,120,0,8052,C0O0C104O26C110O49C116O61C122O86C128O105C133O117C139O145C145O170C151O273C157O273C162O273C167O250C173O376C179O376C184O402C189O304C195O338C201O427C207O427C212O419C218O465C224O465C229O899C231O899C236O899C238O1197C239O1197C241O1435C242O1435C244O1830C245O1830C247O6127C252O6119C257O6119C259O6141C262O6151C273O6151C279O6179C282O6189C293O6189C299O8000C306O8035C312O8015C317O8051,,
tick,0x7ffdf679b393,174683,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x20401044e3b,0x204010448e5,0x3318a26fa82,0x20401044f03,0x204010448e5,0x3318a26bf12,0x20401044f03,0x204010448e5,0x3318a263702,0x20401044f03,0x204010448e5,0x3318a2619fc,0x20401044f03,0x204010448e5,0x3318a25d261,0x20401044f03,0x204010448e5,0x3318a2590cc,0x3a72c5c6526,0x3a72c5c2065
code-creation,LazyCompile,10,174709,0x3318a2719be,37,get BlockList node:net:1826:16,0x3a72c5eb7e8,~
code-source-info,0x3318a2719be,101,50636,50728,C0O50646C14O50660C19O50689C26O50656C32O50706C36O50723,,
code-creation,Eval,10,174861,0x3318a271e9e,5, node:internal/blocklist:1:1,0x3318a271cb8,~
script-source,121,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0x3318a271e9e,121,0,4043,C0O0C4O4043,,
code-creation,Function,10,175072,0x3318a2728a6,359, node:internal/blocklist:1:1,0x3318a271e18,~
code-source-info,0x3318a2728a6,121,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,175315,0x3318a274176,5, node:internal/socketaddress:1:1,0x3318a273f80,~
script-source,122,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0x3318a274176,122,0,3363,C0O0C4O3363,,
code-creation,Function,10,175505,0x3318a274c9e,366, node:internal/socketaddress:1:1,0x3318a2740f0,~
code-source-info,0x3318a274c9e,122,0,3363,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3135C307O3176C312O3186C316O3157C320O3243C325O3268C330O3200C335O3283C342O3305C348O3323C354O3349C360O3298C365O3362,,
code-creation,LazyCompile,10,175658,0x3318a27574e,72,BlockList node:internal/blocklist:40:14,0x3318a271ed0,~
code-source-info,0x3318a27574e,121,814,922,C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921,,
code-creation,LazyCompile,10,175730,0x3318a275ef6,115,addAddress node:internal/blocklist:60:13,0x3318a271f70,~
code-source-info,0x3318a275ef6,121,1208,1529,C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528,,
code-creation,LazyCompile,10,175781,0x3318a276076,20,isSocketAddress node:internal/socketaddress:43:25,0x3318a2741f8,~
code-source-info,0x3318a276076,122,784,842,C0O799C9O814C11O813C18O823C19O837,,
code-creation,LazyCompile,10,175864,0x3318a27680e,323,SocketAddress node:internal/socketaddress:47:14,0x3318a2741a8,~
code-source-info,0x3318a27680e,122,859,1842,C7O859C13O881C21O881C33O895C41O895C46O942C58O991C69O1009C81O1050C89O1067C97O1111C99O1122C106O1139C117O1192C122O1192C127O1212C146O1259C151O1284C153O1320C158O1346C160O1378C168O1436C175O1384C180O1378C181O1459C189O1459C194O1508C202O1508C207O1549C220O1549C225O1611C230O1616C235O1631C252O1627C257O1625C261O1684C266O1689C274O1705C276O1704C280O1714C291O1739C296O1763C301O1789C306O1818C310O1714C315O1698C322O1841,,
code-creation,LazyCompile,10,175949,0x3318a276b5e,99, node:internal/validators:154:3,0x17449ffd020,~
code-source-info,0x3318a276b5e,15,4537,5108,C0O4596C4O4637C9O4673C14O4712C21O4748C26O4785C33O4821C38O4836C46O4884C50O4898C53O4898C67O4975C75O5042C91O5048C96O5042C98O5107,,
code-creation,LazyCompile,10,176012,0x3318a276d0e,129,validatePort node:internal/validators:211:22,0x17449ffd1f8,~
code-source-info,0x3318a276d0e,15,6624,6991,C24O6669C44O6767C47O6767C52O6792C58O6800C65O6817C70O6828C72O6834C75O6823C86O6856C92O6881C99O6891C101O6910C117O6916C122O6910C123O6972C125O6984C128O6988,,
code-creation,LazyCompile,10,176073,0x3318a276f5e,149, node:internal/validators:101:40,0x17449ffce20,~
code-source-info,0x3318a276f5e,15,2980,3505,C0O3012C3O3017C9O3041C15O3081C31O3087C36O3081C37O3148C42O3153C48O3186C64O3192C69O3186C70O3265C80O3319C90O3358C109O3325C114O3319C115O3397C120O3419C125O3433C141O3439C146O3433C148O3504,,
code-creation,LazyCompile,10,176116,0x3318a2770ee,9,isUint32 node:internal/validators:40:18,0x17449ffccc0,~
code-source-info,0x3318a2770ee,15,835,882,C0O848C2O872C5O861C8O879,,
code-creation,LazyCompile,10,176193,0x3318a277326,229,addRange node:internal/blocklist:72:11,0x3318a271fc0,~
code-source-info,0x3318a277326,121,1543,2235,C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234,,
code-creation,Eval,10,176338,0x3318a2777a6,5, node:internal/modules/esm/formats:1:1,0x3318a277630,~
script-source,123,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeTest\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeTest(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x0d\n    )\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x3318a2777a6,123,0,1247,C0O0C4O1247,,
code-creation,Function,10,176464,0x3318a277a5e,120, node:internal/modules/esm/formats:1:1,0x3318a277720,~
code-source-info,0x3318a277a5e,123,0,1247,C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1125C90O1147C96O1170C102O1199C108O1228C114O1140C119O1246,,
tick,0x7ffdf681c7f4,176500,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x20401044e3b,0x204010448e5,0x3318a26fa90,0x20401044f03,0x204010448e5,0x3318a26bf12,0x20401044f03,0x204010448e5,0x3318a263702,0x20401044f03,0x204010448e5,0x3318a2619fc,0x20401044f03,0x204010448e5,0x3318a25d261,0x20401044f03,0x204010448e5,0x3318a2590cc,0x3a72c5c6526,0x3a72c5c2065
code-creation,Eval,10,176605,0x3318a2780e6,5, node:internal/modules/esm/initialize_import_meta:1:1,0x3318a277f50,~
script-source,124,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  let url = context.url;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  url = asyncESM.esmLoader.getBaseURL(url);\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0x3318a2780e6,124,0,1066,C0O0C4O1066,,
code-creation,Function,10,176673,0x3318a2782ae,90, node:internal/modules/esm/initialize_import_meta:1:1,0x3318a278060,~
code-source-info,0x3318a2782ae,124,0,1066,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O1018C78O1040C84O1033C89O1065,,
code-creation,Eval,10,176790,0x3318a2787c6,5, node:internal/modules/esm/load:1:1,0x3318a278650,~
script-source,125,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C context);\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x3318a2787c6,125,0,903,C0O0C4O903,,
code-creation,Function,10,176852,0x3318a27890e,80, node:internal/modules/esm/load:1:1,0x3318a278740,~
code-source-info,0x3318a27890e,125,0,903,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O196C50O196C55O173C61O863C68O885C74O878C79O902,,
code-creation,Eval,10,176965,0x3318a278f06,5, node:internal/modules/esm/get_source:1:1,0x3318a278d00,~
script-source,126,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C context\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n  } else {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat([\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ]));\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0x3318a278f06,126,0,1929,C0O0C4O1929,,
code-creation,Function,10,177080,0x3318a27909e,212, node:internal/modules/esm/get_source:1:1,0x3318a278e80,~
code-source-info,0x3318a27909e,126,0,1929,C0O0C46O28C52O53C58O77C64O143C67O143C72O124C77O197C80O197C85O181C91O313C94O313C103O358C110O313C112O443C115O443C119O443C121O537C124O537C129O537C134O520C140O570C143O570C148O601C153O628C156O628C161O620C167O722C170O722C175O748C180O665C186O685C192O782C196O779C198O820C202O820C204O1883C206O1908C211O1928,,
code-creation,Eval,10,177649,0x3318a27a466,5, node:internal/fs/promises:1:1,0x3318a279cb8,~
script-source,127,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectCreate\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    bufferOrOptions ??= ObjectCreate(null);\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = bufferOrOptions);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x3318a27a466,127,0,23678,C0O0C4O23678,,
code-creation,Function,10,178748,0x3318a27cba6,1672, node:internal/fs/promises:1:1,0x3318a27a3e0,~
code-source-info,0x3318a27cba
code-creation,Function,10,178893,0x3318a27d55e,27,<instance_members_initializer> node:internal/fs/promises:190:3,0x3318a27ba40,~
code-source-info,0x3318a27d55e,127,4407,5236,C0O4407C12O4415C26O5236,,
tick,0x7ff7c01f0c21,178925,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x20401044e3b,0x204010448e5,0x3318a27912d,0x20401044f03,0x204010448e5,0x3318a278932,0x20401044f03,0x204010448e5,0x3318a26372a,0x20401044f03,0x204010448e5,0x3318a2619fc,0x20401044f03,0x204010448e5,0x3318a25d261,0x20401044f03,0x204010448e5,0x3318a2590cc,0x3a72c5c6526,0x3a72c5c2065
new,MemoryChunk,0x204a9c80000,262144
code-creation,Eval,10,179233,0x204a9c8114e,5, node:internal/fs/rimraf:1:1,0x3318a27fca8,~
script-source,128,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x204a9c8114e,128,0,7392,C0O0C4O7392,,
code-creation,Function,10,179565,0x204a9c8174e,409, node:internal/fs/rimraf:1:1,0x3318a27ff88,~
code-source-info,0x204a9c8174e,128,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,179767,0x204a9c825e6,188,from node:buffer:296:28,0x21794176f90,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x204a9c825e6,24,8735,9718,C3O8774C9O8810C12O8817C17O8853C18O8859C28O8915C33O8919C39O8951C51O8958C56O9007C57O9037C63O9054C68O9054C73O9070C78O9110C95O9203C104O9210C109O9250C110O9275C113O9275C118O9299C120O9313C122O9322C123O9330C125O9347C127O9346C134O9409C136O9415C138O9414C145O9433C151O9452C155O9498C158O9505C163O9545C164O9572C182O9578C187O9572,,
tick,0x7ff7c017186a,181381,0,0x0,3,0x7ff7c08240c0,0x204a9c818c1,0x20401044f03,0x204010448e5,0x3318a27ce74,0x20401044f03,0x204010448e5,0x3318a27912d,0x20401044f03,0x204010448e5,0x3318a278932,0x20401044f03,0x204010448e5,0x3318a26372a,0x20401044f03,0x204010448e5,0x3318a2619fc,0x20401044f03,0x204010448e5,0x3318a25d261,0x20401044f03,0x204010448e5,0x3318a2590cc,0x3a72c5c6526,0x3a72c5c2065
code-creation,LazyCompile,10,181412,0x204a9c85016,110,fromString node:buffer:432:20,0x21794177378,~
code-source-info,0x204a9c85016,24,12922,13371,C0O12950C2O12958C8O13003C14O13010C19O13035C25O13042C30O13056C35O13063C40O13080C41O13086C46O13104C51O13115C56O13154C59O13160C64O13191C66O13221C73O13227C78O13221C79O13279C85O13286C90O13300C95O13307C100O13324C101O13333C104O13340C109O13368,,
code-creation,LazyCompile,10,181487,0x204a9c851ce,177,fromStringFast node:buffer:413:24,0x217941772d8,~
code-source-info,0x204a9c851ce,24,12359,12899,C0O12397C5O12397C11O12422C14O12444C18O12453C21O12433C26O12466C31O12502C36O12473C41O12515C42O12521C44O12535C49O12546C51O12544C54O12532C59O12564C62O12564C65O12589C72O12604C77O12615C85O12589C91O12658C110O12658C116O12690C118O12701C123O12787C130O12806C135O12817C143O12791C149O12846C156O12860C162O12857C168O12871C171O12871C174O12887C176O12896,,
code-creation,LazyCompile,10,181548,0x204a9c853be,36,FastBuffer node:internal/buffer:958:14,0x29f2e34bb00,~
code-source-info,0x204a9c853be,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,181580,0x204a9c854be,23,write node:buffer:593:12,0x217941776e8,~
code-source-info,0x204a9c854be,24,17151,17215,C0O17185C17O17185C22O17215,,
code-creation,LazyCompile,10,181616,0x204a9c855ae,42,alignPool node:buffer:159:19,0x21794176d10,~
code-source-info,0x204a9c855ae,24,4190,4300,C0O4226C4O4241C9O4255C19O4266C25O4279C34O4289C41O4299,,
code-creation,LazyCompile,10,181711,0x204a9c8596e,251,promisify node:internal/util:324:19,0x217941461f8,~
code-source-info,0x204a9c8596e,16,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
code-creation,LazyCompile,10,181859,0x204a9c85f1e,65,EventEmitterMixin node:internal/event_target:962:27,0x5da139e378,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol\x2C kEnumerableProperty } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler ?? null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x204a9c85f1e,44,26678,27112,C0O26731C23O26922C30O26954C33O26967C38O26922C43O26982C47O27016C52O27057C57O27016C62O27084C64O27109,,
tick,0x7ffdf67ba8cf,183043,0,0x0,3,0x7ff7c08240c0,0x3318a27d070,0x20401044f03,0x204010448e5,0x3318a27912d,0x20401044f03,0x204010448e5,0x3318a278932,0x20401044f03,0x204010448e5,0x3318a26372a,0x20401044f03,0x204010448e5,0x3318a2619fc,0x20401044f03,0x204010448e5,0x3318a25d261,0x20401044f03,0x204010448e5,0x3318a2590cc,0x3a72c5c6526,0x3a72c5c2065
code-creation,Eval,10,183415,0x204a9c889de,5, node:internal/modules/esm/translators:1:1,0x204a9c88578,~
script-source,129,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C\x0d\n                                   asyncESM.esmLoader.getBaseURL(url)\x2C\x0d\n                                   assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C {\x0d\n      url: wrap.url\x0d\n    })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x204a9c889de,129,0,11128,C0O0C4O11128,,
code-creation,Function,10,183871,0x204a9c8917e,715, node:internal/modules/esm/translators:1:1,0x204a9c88958,~
code-source-info,0x204a9c8917e
code-creation,Eval,10,184091,0x204a9c8a686,5, node:internal/modules/esm/create_dynamic_module:1:1,0x204a9c8a4b0,~
script-source,130,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x204a9c8a686,130,0,1828,C0O0C4O1828,,
code-creation,Function,10,184192,0x204a9c8a8ae,111, node:internal/modules/esm/create_dynamic_module:1:1,0x204a9c8a600,~
code-source-info,0x204a9c8a8ae,130,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
tick,0x7ff7c07cc930,184477,1,0x7ff7c02ae150,2,0x7ff7c0bf59a0,0x20401044e3b,0x204010448e5,0x3318a261a2f,0x20401044f03,0x204010448e5,0x3318a25d261,0x20401044f03,0x204010448e5,0x3318a2590cc,0x3a72c5c6526,0x3a72c5c2065
code-creation,Eval,10,184630,0x204a9c8bb56,5, node:internal/vm/module:1:1,0x204a9c8b610,~
script-source,131,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x204a9c8bb56,131,0,12768,C0O0C4O12768,,
code-creation,Function,10,185162,0x204a9c8cdb6,872, node:internal/vm/module:1:1,0x204a9c8bad0,~
code-source-info,0x204a9c8cdb
code-creation,Function,10,185253,0x204a9c8d2f6,30,<instance_members_initializer> node:internal/vm/module:256:3,0x204a9c8c140,~
code-source-info,0x204a9c8d2f6,131,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,185408,0x204a9c8e6ee,30,ESMLoader node:internal/modules/esm/loader:61:1,0x3318a262d40,~
code-source-info,0x204a9c8e6ee,114,1718,1718,C9O1718C29O1718,,
code-creation,LazyCompile,10,185454,0x204a9c8fba6,27,ModuleMap node:internal/modules/esm/module_map:17:14,0x3318a265490,~
code-source-info,0x204a9c8fba6,115,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,185499,0x204a9c8fe4e,13,desc.value node:internal/per_context/primordials:334:32,0x17449fca000,~
code-source-info,0x204a9c8fe4e,6,9964,10025,C0O9982C7O9989C12O10012,,
code-creation,LazyCompile,10,185531,0x204a9c8ff56,13,SafeIterator node:internal/per_context/primordials:279:16,0x17449fc9a50,~
code-source-info,0x204a9c8ff56,6,8198,8260,C0O8218C3O8235C7O8233C12O8259,,
code-creation,LazyCompile,10,185566,0x204a9c9008e,13,next node:internal/per_context/primordials:282:9,0x17449fc9b18,~
code-source-info,0x204a9c9008e,6,8270,8317,C0O8282C3O8299C8O8289C12O8310,,
code-creation,LazyCompile,10,185712,0x204a9c90706,28,getEmbedderOptions node:internal/options:32:28,0x160e4c7dac8,~
code-source-info,0x204a9c90706,91,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,185844,0x204a9c909ae,315,Module._initPaths node:internal/modules/cjs/loader:1233:29,0x3318a25c298,~
code-source-info,0x204a9c909ae
code-creation,Eval,10,186040,0x204a9c93906,5, node:internal/modules/run_main:1:1,0x204a9c936e0,~
script-source,132,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x204a9c93906,132,0,2621,C0O0C4O2621,,
code-creation,Function,10,186165,0x204a9c93bee,178, node:internal/modules/run_main:1:1,0x204a9c93880,~
code-source-info,0x204a9c93bee,132,0,2621,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2549C160O2571C166O2597C172O2564C177O2620,,
code-creation,LazyCompile,10,186269,0x204a9c9441e,163,initializeESMLoader node:internal/bootstrap/pre_execution:487:29,0x3a72c5c46d0,~
code-source-info,0x204a9c9441e,96,15871,16986,C0O15955C6O15955C13O16004C16O16000C21O15998C25O16024C30O16028C34O16048C40O16077C41O16084C42O16189C48O16189C53O16103C58O16144C63O16236C69O16236C74O16440C79O16398C83O16511C88O16472C92O16681C100O16685C106O16804C112O16804C117O16752C122O16760C127O16778C132O16851C138O16851C143O16871C145O16881C149O16896C151O16916C155O16941C157O16960C162O16985,,
code-creation,LazyCompile,10,186336,0x204a9c94636,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x3318a25b788,~
code-source-info,0x204a9c94636,111,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,186422,0x204a9c9471e,53,loadPreloadModules node:internal/bootstrap/pre_execution:530:28,0x3a72c5c47c0,~
code-source-info,0x204a9c9471e,96,17478,17809,C0O17567C8O17567C13O17599C15O17636C21O17643C26O17724C32O17724C37O17724C42O17689C47O17769C52O17808,,
tick,0x7ff7c0a0c361,186448,0,0x0,3,0x7ff7c08240c0,0x3a72c5c654c,0x3a72c5c2065
code-creation,LazyCompile,10,186490,0x204a9c94916,166,Module._preloadModules node:internal/modules/cjs/loader:1263:34,0x3318a25c328,~
code-source-info,0x204a9c94916,111,40910,41505,C0O40926C5O40931C11O40960C12O40967C13O40973C17O40986C23O41186C33O41186C42O41238C45O41260C53O41285C58O41285C63O41260C68O41251C85O41315C88O41321C95O41326C100O41349C106O41362C114O41378C116O41378C119O41415C121O41431C125O41420C130O41456C137O41472C141O41456C146O41440C151O41402C154O41481C158O41494C165O41504,,
code-creation,LazyCompile,10,186557,0x204a9c94b36,94,Module node:internal/modules/cjs/loader:172:16,0x3318a25b0e8,~
code-source-info,0x204a9c94b36,111,5455,5701,C14O5478C16O5486C20O5495C22O5507C25O5512C30O5512C35O5505C39O5528C40O5541C44O5550C49O5568C54O5568C60O5590C71O5590C76O5630C77O5644C81O5655C82O5667C86O5679C88O5693C93O5700,,
code-creation,LazyCompile,10,186670,0x204a9c94d2e,449,dirname node:path:653:10,0x5da138d768,~
code-source-info,0x204a9c94d2e
code-creation,LazyCompile,10,186796,0x204a9c95136,45,updateChildren node:internal/modules/cjs/loader:165:24,0x3318a25b098,~
code-source-info,0x204a9c95136,111,5213,5390,C0O5257C7O5263C15O5278C19O5296C23O5304C26O5304C33O5351C38O5351C44O5389,,
code-creation,LazyCompile,10,186875,0x204a9c95326,251,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x3318a25bb38,~
code-source-info,0x204a9c95326,111,17765,19316,C0O17822C5O17834C10O17834C17O18174C22O18215C26O18222C30O18178C38O18242C40O18227C47O18274C50O18311C54O18318C58O18274C66O18327C68O18323C73O18346C82O18359C91O18377C92O18399C95O18426C99O18433C103O18442C105O18457C110O18467C111O18467C116O18500C121O18500C127O18839C129O18852C131O18848C138O18895C140O18891C147O18937C149O18933C154O18960C156O18970C158O18966C163O18988C170O19041C181O19041C189O19077C193O18988C198O19119C201O19138C205O19159C207O19165C212O19184C219O19195C225O19199C230O19222C237O19256C240O18475C245O18408C248O19298C250O19311,,
code-creation,Function,11,186995,0x20401045160,2060,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x3318a25bb38,^
code-source-info,0x20401045160,111,17765,19316,,,
code-creation,Function,11,187020,0x204010459e0,432,getCLIOptionsFromBinding node:internal/options:18:34,0x160e4c7d848,^
code-source-info,0x204010459e0,91,514,620,,,
code-creation,Function,11,187037,0x20401045c00,104,next node:internal/per_context/primordials:282:9,0x17449fc9b18,^
code-source-info,0x20401045c00,6,8270,8317,,,
code-creation,Function,11,187055,0x20401045ce0,252,SafeMap node:internal/per_context/primordials:360:16,0x17449fca0a8,^
code-source-info,0x20401045ce0,6,10694,10711,,,
code-creation,Function,11,187073,0x20401045e40,272,validateString node:internal/validators:118:24,0x17449ffce70,^
code-source-info,0x20401045e40,15,3534,3646,,,
code-creation,Function,11,187093,0x20401045fc0,412,isWindowsDeviceRoot node:path:60:29,0x5da138d408,^
code-source-info,0x20401045fc0,41,1991,2136,,,
code-creation,LazyCompile,10,187152,0x204a9c95aa6,127,Module.require node:internal/modules/cjs/loader:997:36,0x3318a25bf28,~
code-source-info,0x204a9c95aa6,111,32200,32503,C0O32210C8O32210C13O32239C15O32246C20O32261C36O32267C41O32261C42O32379C51O32391C60O32409C63O32423C76O32423C93O32480C102O32492C126O32502,,
code-creation,LazyCompile,10,187282,0x204a9c95d8e,619,Module._load node:internal/modules/cjs/loader:757:24,0x3318a25bd88,~
code-source-info,0x204a9c95d8e
code-creation,LazyCompile,10,187411,0x204a9c96226,89,logger node:internal/util/debuglog:95:18,0x21794161f90,~
code-source-info,0x204a9c96226,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,187456,0x204a9c96366,3, node:internal/per_context/primordials:285:21,0x17449fc9bc0,~
code-source-info,0x204a9c96366,6,8339,8370,C0O8351C2O8363,,
code-creation,LazyCompile,10,187503,0x204a9c9643e,140,debug node:internal/util/debuglog:76:15,0x21794161ef0,~
code-source-info,0x204a9c9643e,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,187551,0x204a9c965ee,41,init node:internal/util/debuglog:72:16,0x21794161ea0,~
code-source-info,0x204a9c965ee,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,187582,0x204a9c966de,2,testEnabled node:internal/util/debuglog:32:19,0x3a72c5d81b0,~
code-source-info,0x204a9c966de,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,187631,0x204a9c96876,116,debuglogImpl node:internal/util/debuglog:49:22,0x21794161cf0,~
code-source-info,0x204a9c96876,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,187674,0x204a9c96a2e,10, node:internal/modules/cjs/loader:272:66,0x3318a25ba58,~
code-source-info,0x204a9c96a2e,111,7980,8007,C0O7993C2O7999C9O8006,,
code-creation,LazyCompile,10,187700,0x204a9c96ade,2,noop node:internal/util/debuglog:47:14,0x21794161ca0,~
code-source-info,0x204a9c96ade,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,187839,0x204a9c96ede,812,Module._resolveFilename node:internal/modules/cjs/loader:848:35,0x3318a25be10,~
code-source-info,0x204a9c96ede,111,27010,30096,C0O27050C10O27054C19O27108C23O27121C29O27121C36O27159C38O27174C39O27189C41O27201C51O27261C57O27286C63O27265C69O27322C79O27322C88O27377C96O27377C105O27435C111O27448C119O27448C128O27505C136O27505C142O27559C144O27602C151O27653C164O27653C170O27686C173O27722C175O27737C181O27743C185O27727C190O27790C198O27795C202O27811C206O27837C212O27837C217O27828C221O27892C225O27899C231O27899C238O27967C240O27986C244O27972C249O28014C257O28060C262O28019C269O28081C277O28118C282O28081C287O27995C292O27954C295O27752C300O27709C305O28181C311O28211C315O28226C321O28226C330O28285C340O28342C348O28291C353O28285C356O28374C360O28389C366O28389C373O28437C380O28447C389O28466C390O28477C397O28481C402O28511C406O28535C412O28511C420O28567C428O28571C441O28618C447O28661C453O28692C457O28713C463O28692C471O28759C478O28661C485O28791C491O28818C500O28625C505O28824C519O28859C523O28865C531O28870C536O28911C542O28917C546O28911C547O28959C549O28959C550O29063C554O29063C559O29114C563O29114C569O29147C571O29189C573O29197C578O29225C586O29232C592O29245C599O29251C607O29251C612O29206C616O29292C620O29299C628O29320C632O29341C634O29361C635O29451C639O29458C657O29458C663O29503C665O29517C667O29533C668O29558C671O29583C676O29596C680O29656C686O29696C695O29715C701O29656C706O29616C712O29636C718O29636C724O29565C727O29742C733O29765C745O29797C752O29804C757O29816C759O29834C766O29876C774O29876C779O29859C783O29990C791O29990C797O30013C799O30022C803O30047C805O30064C809O30083C811O30083,,
code-creation,LazyCompile,10,187981,0x204a9c9749e,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x17449fcfb20,~
code-source-info,0x204a9c9749e,9,7593,7692,C0O7617C5O7630C10O7634C15O7634C21O7648C23O7666C27O7687,,
code-creation,LazyCompile,10,188053,0x204a9c97756,327,Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38,0x3318a25bc58,~
code-source-info,0x204a9c
code-creation,LazyCompile,10,188143,0x204a9c97a76,76,trySelfParentPath node:internal/modules/cjs/loader:427:27,0x3318a25b408,~
code-source-info,0x204a9c97a76,111,12696,12971,C0O12710C4O12723C5O12736C6O12753C12O12784C16O12793C17O12815C24O12818C29O12841C36O12844C44O12888C47O12903C52O12903C59O12911C62O12916C66O12909C69O12920C72O12943C73O12956C75O12970,,
code-creation,LazyCompile,10,188222,0x204a9c97cb6,235,trySelf node:internal/modules/cjs/loader:441:17,0x3318a25b458,~
code-source-info,0x204a9c97cb6,111,12991,13849,C0O13018C4O13035C5O13048C6O13091C9O13091C17O13068C22O13079C27O13130C31O13146C37O13169C38O13182C39O13201C47O13220C48O13233C49O13243C51O13277C55O13269C60O13290C65O13317C70O13363C82O13321C89O13380C94O13398C97O13432C102O13437C107O13398C112O13396C118O13463C119O13476C123O13498C128O13527C133O13557C138O13579C142O13557C149O13622C152O13622C159O13649C168O13527C183O13505C188O13695C200O13718C203O13724C210O13729C215O13764C222O13808C226O13770C231O13764C232O13833C234O13833,,
code-creation,LazyCompile,10,188307,0x204a9c97f6e,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x3318a25b228,~
code-source-info,0x204a9c97f6e,111,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,188443,0x204a9c982ce,234,readPackage node:internal/modules/cjs/loader:290:21,0x3318a25b1d8,~
code-source-info,0x204a9c982ce,111,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
tick,0x7ff7c0c0b05c,188496,0,0x0,2,0x7ff7c08240c0,0x204a9c97fc8,0x204a9c97cbf,0x204a9c97111,0x204a9c95e18,0x204a9c95af2,0x204a9c949a3,0x204a9c9474d,0x3a72c5c654c,0x3a72c5c2065
code-creation,LazyCompile,10,188552,0x204a9c985d6,199,read node:internal/modules/package_json_reader:16:14,0x3318a260da8,~
code-source-info,0x204a9c985d6,112,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,188636,0x204a9c989f6,232,toNamespacedPath node:path:618:19,0x5da138d6f8,~
code-source-info,0x204a9c989f6,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,188940,0x204a9c9918e,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x3318a25baa8,~
code-source-info,0x204a9c9918e
code-creation,LazyCompile,10,189062,0x204a9c9953e,109,isAbsolute node:path:402:13,0x5da138d5d0,~
code-source-info,0x204a9c9953e,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,189200,0x204a9c997ce,85,stat node:internal/modules/cjs/loader:151:14,0x3318a25b048,~
code-source-info,0x204a9c997ce,111,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,189298,0x204a9c99926,44,tryExtensions node:internal/modules/cjs/loader:400:23,0x3318a25b368,~
code-source-info,0x204a9c99926,111,11900,12093,C0O11936C2O11948C6O11941C11O11985C16O12001C19O11995C23O11985C29O12022C31O12045C33O12061C34O11957C39O11923C42O12077C43O12090,,
code-creation,LazyCompile,10,189349,0x204a9c99a56,50,tryFile node:internal/modules/cjs/loader:384:17,0x3318a25b2c8,~
code-source-info,0x204a9c99a56,111,11460,11661,C0O11498C3O11498C8O11520C9O11527C14O11534C15O11541C16O11545C24O11570C26O11585C31O11597C36O11597C41O11618C42O11627C45O11634C49O11658,,
code-creation,LazyCompile,10,189441,0x204a9c99b9e,42,toRealPath node:internal/modules/cjs/loader:393:20,0x3318a25b318,~
code-source-info,0x204a9c99b9e,111,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
code-creation,LazyCompile,10,189719,0x204a9c99fb6,1042,realpathSync node:fs:2425:22,0x160e4c593f0,~
script-source,80,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = ObjectCreate(null);\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\x0d\n    const options = offset || ObjectCreate(null);\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x204a9c99fb
tick,0x7ffdf679b39d,193441,0,0x0,3,0x7ff7c08240c0,0x204a9c99bc1,0x204a9c99a83,0x204a9c9993d,0x204a9c992e4,0x204a9c9716f,0x204a9c95e18,0x204a9c95af2,0x204a9c949a3,0x204a9c9474d,0x3a72c5c654c,0x3a72c5c2065
tick,0x7ffdf67ba8cf,193463,0,0x0,3,0x7ff7c08240c0,0x204a9c99bc1,0x204a9c99a83,0x204a9c9993d,0x204a9c992e4,0x204a9c9716f,0x204a9c95e18,0x204a9c95af2,0x204a9c949a3,0x204a9c9474d,0x3a72c5c654c,0x3a72c5c2065
code-creation,LazyCompile,10,193491,0x204a9ca06de,123,getOptions node:internal/fs/utils:315:20,0x160e4c61c98,~
script-source,81,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x204a9ca06de,81,7566,8210,C0O7597C14O7691C16O7713C17O7724C23O7764C29O7809C31O7833C35O7849C42O7885C48O7925C66O7931C71O7925C72O8021C79O8030C84O8049C87O8072C92O8049C96O8100C102O8129C107O8157C115O8129C120O8192C122O8207,,
tick,0x7ff7c01f0bdd,194632,0,0x0,3,0x7ff7c08240c0,0x204a9c99fc2,0x204a9c99bc1,0x204a9c99a83,0x204a9c9993d,0x204a9c992e4,0x204a9c9716f,0x204a9c95e18,0x204a9c95af2,0x204a9c949a3,0x204a9c9474d,0x3a72c5c654c,0x3a72c5c2065
code-creation,LazyCompile,10,194656,0x204a9ca2666,48,assertEncoding node:internal/fs/utils:152:24,0x160e4c616a0,~
code-source-info,0x204a9ca2666,81,3712,3894,C0O3728C6O3745C9O3752C14O3752C21O3796C24O3824C40O3830C45O3824C47O3893,,
code-creation,LazyCompile,10,194755,0x204a9ca277e,20,toPathIfFileURL node:internal/url:1499:25,0x29f2e379258,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(input\x2C flags) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x204a9ca277e,39,43048,43173,C0O43069C3O43074C9O43109C11O43130C12O43134C15O43141C19O43170,,
code-creation,LazyCompile,10,196556,0x204a9ca58c6,17,isURLInstance node:internal/url:1495:23,0x29f2e379208,~
code-source-info,0x204a9ca58c6,39,42921,43020,C0O42942C3O42963C6O42988C12O43010C16O43017,,
tick,0x7ff7c09ef420,196580,0,0x0,3,0x7ff7c08240c0,0x204a9c99fcf,0x204a9c99bc1,0x204a9c99a83,0x204a9c9993d,0x204a9c992e4,0x204a9c9716f,0x204a9c95e18,0x204a9c95af2,0x204a9c949a3,0x204a9c9474d,0x3a72c5c654c,0x3a72c5c2065
code-creation,LazyCompile,10,196604,0x204a9ca5a26,81, node:internal/fs/utils:669:38,0x160e4c626c0,~
code-source-info,0x204a9ca5a26,81,18865,19145,C14O18899C22O18932C25O18932C31O18959C36O18990C49O18965C54O18959C55O19058C68O19058C74O19097C76O19127C78O19127C80O19144,,
code-creation,LazyCompile,10,196659,0x204a9ca5c36,110, node:internal/fs/utils:358:35,0x160e4c61d38,~
code-source-info,0x204a9ca5c36,81,8960,9569,C16O9025C21O9079C26O9079C31O9176C37O9199C41O9228C45O9245C51O9245C60O9297C64O9318C69O9318C76O9364C77O9371C78O9394C94O9394C100O9513C104O9536C106O9536C107O9555C109O9566,,
code-creation,LazyCompile,10,196708,0x204a9ca5dae,16,isUint8Array node:internal/util/types:13:22,0x21794147418,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x204a9ca5dae,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,196865,0x204a9ca6216,23,splitRoot node:fs:2375:33,0x160e4c592a8,~
code-source-info,0x204a9ca6216,80,65400,65466,C0O65413C9O65440C12O65420C19O65457C22O65461,,
code-creation,LazyCompile,10,196998,0x204a9ca631e,63,handleErrorFromBinding node:internal/fs/utils:341:32,0x160e4c61ce8,~
code-source-info,0x204a9ca631e,81,8304,8815,C0O8323C6O8387C11O8387C16O8410C24O8410C29O8468C31O8468C32O8495C38O8727C43O8754C51O8727C56O8801C60O8791C62O8814,,
code-creation,LazyCompile,10,197053,0x204a9ca6496,53,nextPart node:fs:2401:31,0x160e4c593a0,~
code-source-info,0x204a9ca6496,80,66157,66408,C0O66184C4O66180C9O66217C14O66217C20O66301C22O66312C24O66308C31O66342C33O66338C38O66371C40O66380C41O66194C47O66171C50O66393C52O66403,,
code-creation,LazyCompile,10,197145,0x204a9ca65f6,34,isFileType node:fs:205:20,0x160e4c57010,~
code-source-info,0x204a9ca65f6,80,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,Function,11,197328,0x204010461c0,6232,resolve node:path:158:10,0x5da138d510,^
code-source-info,0x204010461c0,41,4875,9786,,,
code-creation,Function,11,197355,0x20401047a80,544,nextPart node:fs:2401:31,0x160e4c593a0,^
code-source-info,0x20401047a80,80,66157,66408,,,
code-creation,LazyCompile,10,197662,0x204a9ca7206,72,encodeRealpathResult node:fs:2388:30,0x160e4c59350,~
code-source-info,0x204a9ca7206,80,65746,66012,C0O65769C4O65794C10O65814C17O65823C22O65840C24O65854C25O65875C30O65882C35O65882C41O65911C48O65920C53O65941C55O65957C56O65982C61O65999C66O65982C71O66009,,
code-creation,LazyCompile,10,197729,0x204a9ca7396,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0x3318a255ad8,~
code-source-info,0x204a9ca7396,110,1194,1482,C0O1231C5O1244C10O1248C15O1248C21O1266C26O1273C35O1304C43O1304C48O1432C53O1432C57O1463C59O1474C61O1481,,
code-creation,LazyCompile,10,197806,0x204a9ca7d0e,246,Module.load node:internal/modules/cjs/loader:969:33,0x3318a25bea0,~
code-source-info,0x204a9ca7d0e,111,31233,32069,C0O31249C8O31295C16O31249C21O31305C26O31318C32O31305C36O31330C38O31344C42O31359C45O31379C52O31396C55O31401C60O31401C66O31379C71O31370C75O31444C78O31444C83O31523C91O31527C101O31580C106O31591C112O31606C124O31612C129O31606C130O31654C133O31661C140O31672C144O31683C150O31704C151O31716C155O31747C160O31756C165O31860C170O31897C175O31908C187O31949C192O31956C197O31956C204O31970C206O31968C211O32003C216O32012C221O32012C228O32038C233O32047C238O32047C245O32068,,
code-creation,LazyCompile,10,197915,0x204a9ca7fbe,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40,0x3318a25b3b8,~
code-source-info,0x204a9ca7fbe,111,12225,12666,C0O12254C5O12259C10O12259C16O12286C18O12311C20O12338C22O12407C36O12360C44O12407C49O12422C51O12441C55O12451C56O12461C61O12468C63O12516C68O12535C74O12575C77O12586C84O12597C89O12617C91O12641C92O12344C95O12650C97O12663,,
code-creation,LazyCompile,10,198024,0x204a9ca819e,415,basename node:path:749:11,0x5da138d7d0,~
code-source-info,0x204a9ca819e
code-creation,LazyCompile,10,198197,0x204a9ca86be,485,Module._extensions..js node:internal/modules/cjs/loader:1114:37,0x3318a25c040,~
code-source-info,0x204a9ca86be
code-creation,LazyCompile,10,198339,0x204a9ca8b06,376,readFileSync node:fs:450:22,0x160e4c574c8,~
code-source-info,0x204a9ca8b
tick,0x7ff7c11ddb2c,198485,0,0x0,3,0x7ff7c08240c0,0x204a9ca86fa,0x204a9ca7d9e,0x204a9c95f27,0x204a9c95af2,0x204a9c949a3,0x204a9c9474d,0x3a72c5c654c,0x3a72c5c2065
code-creation,LazyCompile,10,198507,0x204a9ca8e26,30,isEncoding node:buffer:530:40,0x217941775c0,~
code-source-info,0x204a9ca8e26,24,15337,15472,C0O15353C6O15401C12O15408C20O15427C23O15427C28O15455C29O15469,,
code-creation,LazyCompile,10,198548,0x204a9ca8f2e,30,normalizeEncoding node:internal/util:160:27,0x21794145d58,~
code-source-info,0x204a9ca8f2e,16,4365,4473,C0O4376C7O4399C14O4417C19O4430C21O4444C22O4448C25O4455C29O4470,,
code-creation,LazyCompile,10,198600,0x204a9ca90a6,113,openSync node:fs:576:18,0x160e4c576b0,~
code-source-info,0x204a9ca90a6,80,14993,15383,C0O15018C5O15025C11O15072C16O15072C21O15097C37O15104C44O15157C51O15159C58O15185C63O15193C70O15198C73O15209C78O15209C95O15193C101O15334C106O15334C110O15366C112O15380,,
code-creation,LazyCompile,10,198647,0x204a9ca9226,37, node:internal/fs/utils:681:42,0x160e4c62710,~
code-source-info,0x204a9ca9226,81,19192,19331,C14O19248C19O19248C24O19283C29O19283C34O19316C36O19328,,
code-creation,LazyCompile,10,198721,0x204a9ca95fe,515,stringToFlags node:internal/fs/utils:556:23,0x160e4c62530,~
code-source-info,0x204a9ca95fe
code-creation,LazyCompile,10,198838,0x204a9ca99ee,97,parseFileMode node:internal/validators:59:23,0x17449ffcd10,~
code-source-info,0x204a9ca99ee,15,1545,1852,C0O1569C11O1587C17O1625C24O1650C27O1630C34O1677C41O1722C52O1683C57O1677C58O1745C66O1753C73O1789C89O1789C94O1836C96O1849,,
code-creation,LazyCompile,10,198921,0x204a9ca9b86,206, node:internal/validators:84:3,0x17449ffcdd0,~
code-source-info,0x204a9ca9b86,15,2338,2933,C36O2481C39O2486C45O2511C51O2553C67O2559C72O2553C73O2624C78O2629C84O2664C100O2670C105O2664C106O2735C116O2774C129O2787C142O2741C147O2735C148O2814C150O2824C157O2839C162O2855C172O2894C185O2907C198O2861C203O2855C205O2932,,
code-creation,LazyCompile,10,198968,0x204a9ca9d4e,9,isInt32 node:internal/validators:36:17,0x17449ffc7b0,~
code-source-info,0x204a9ca9d4e,15,769,814,C0O782C2O806C5O795C8O811,,
code-creation,LazyCompile,10,199081,0x204a9ca9e56,66,tryStatSync node:fs:404:21,0x160e4c573d8,~
code-source-info,0x204a9ca9e56,80,10725,10943,C0O10757C2O10778C7O10786C22O10786C28O10831C36O10855C38O10872C43O10875C48O10875C53O10895C58O10901C62O10895C63O10927C65O10940,,
code-creation,LazyCompile,10,199154,0x204a9ca9fce,96,tryCreateBuffer node:fs:414:25,0x160e4c57428,~
code-source-info,0x204a9ca9fce,80,10971,11271,C0O11009C2O11022C7O11044C9O11055C11O11053C16O11078C23O11084C28O11078C29O11129C34O11145C39O11145C45O11169C57O11175C58O11204C65O11218C67O11228C72O11231C77O11231C93O11254C95O11268,,
code-creation,LazyCompile,10,199199,0x204a9caa126,17,allocUnsafe node:buffer:373:42,0x21794177138,~
code-source-info,0x204a9caa126,24,11277,11335,C0O11289C5O11289C9O11310C12O11317C16O11332,,
code-creation,LazyCompile,10,199234,0x204a9caa22e,54, node:buffer:349:36,0x21794177080,~
code-source-info,0x204a9caa22e,24,10551,10711,C0O10566C8O10566C13O10599C14O10610C21O10626C23O10623C28O10646C33O10678C46O10652C51O10646C53O10710,,
code-creation,LazyCompile,10,199271,0x204a9caa356,30,validateNumber node:internal/validators:123:24,0x17449ffcf10,~
code-source-info,0x204a9caa356,15,3673,3785,C0O3692C6O3728C22O3734C27O3728C29O3784,,
code-creation,LazyCompile,10,199317,0x204a9caa46e,119,allocate node:buffer:398:18,0x21794177288,~
code-source-info,0x204a9caa46e,24,12004,12332,C0O12016C1O12025C6O12038C11O12045C16O12062C17O12071C20O12090C24O12099C27O12080C32O12114C34O12126C39O12137C41O12135C44O12123C49O12157C52O12157C55O12186C62O12201C67O12212C75O12186C81O12236C88O12250C94O12247C100O12261C103O12261C106O12279C108O12288C109O12297C114O12304C118O12329,,
code-creation,LazyCompile,10,199384,0x204a9caa62e,86,tryReadSync node:fs:429:21,0x160e4c57478,~
code-source-info,0x204a9caa62e,80,11295,11540,C0O11345C2O11358C7O11383C12O11398C29O11398C35O11435C47O11441C48O11470C55O11484C57O11494C62O11497C67O11497C83O11520C85O11537,,
code-creation,LazyCompile,10,199458,0x204a9caa81e,258,readSync node:fs:684:18,0x160e4c57780,~
code-source-info,0x204a9caa81e,80,17835,18869,C0O17835C2O17879C7O17884C13O17909C18O17909C22O17952C29O17959C34O18036C40O18046C45O18046C50O18083C62O18102C68O18118C75O18129C80O18146C89O18191C94O18218C99O18247C112O18247C117O18295C124O18313C125O18324C130O18338C131O18347C132O18369C138O18380C143O18394C159O18400C164O18394C165O18526C170O18574C181O18526C186O18592C191O18619C195O18639C203O18639C208O18696C210O18718C215O18726C240O18726C246O18820C251O18820C255O18852C257O18866,,
code-creation,LazyCompile,10,199525,0x204a9caaa8e,52, node:internal/fs/utils:687:40,0x160e4c62760,~
code-source-info,0x204a9caaa8e,81,19376,19505,C14O19406C22O19410C29O19435C30O19444C31O19455C44O19455C49O19492C51O19502,,
code-creation,LazyCompile,10,199566,0x204a9caabfe,51, node:internal/validators:191:40,0x17449ffd138,~
code-source-info,0x204a9caabfe,15,5871,6107,C14O5905C19O5910C25O5944C30O5975C43O5950C48O5944C50O6106,,
code-creation,LazyCompile,10,199613,0x204a9caad56,151, node:internal/validators:73:3,0x17449ffcd80,~
code-source-info,0x204a9caad56,15,1900,2288,C12O1920C25O1950C32O1984C38O2022C54O2028C59O2022C60O2082C65O2087C71O2118C87O2124C92O2118C93O2178C95O2188C102O2203C107O2217C117O2256C130O2269C143O2223C148O2217C150O2287,,
code-creation,LazyCompile,10,199672,0x204a9caaf5e,103, node:internal/fs/utils:637:3,0x160e4c62620,~
code-source-info,0x204a9caaf5e,81,17950,18340,C0O17991C1O18002C6O18016C22O18022C27O18016C28O18082C29O18093C34O18107C50O18113C55O18107C56O18173C58O18184C64O18193C69O18218C82O18308C95O18224C100O18218C102O18339,,
code-creation,LazyCompile,10,199736,0x204a9cab266,151, node:internal/fs/utils:892:42,0x160e4c62a80,~
code-source-info,0x204a9cab266,81,25170,25742,C0O25195C6O25236C14O25236C21O25285C27O25326C32O25349C35O25344C37O25341C47O25375C53O25382C56O25369C61O25398C77O25482C80O25477C98O25502C104O25509C117O25404C122O25398C125O25586C143O25592C148O25586C150O25741,,
code-creation,LazyCompile,10,199802,0x204a9cab41e,47,closeSync node:fs:526:19,0x160e4c575d8,~
code-source-info,0x204a9cab41e,80,13812,13940,C0O13822C5O13827C11O13864C13O13871C18O13879C31O13879C36O13909C41O13909C46O13939,,
code-creation,LazyCompile,10,199879,0x204a9cab556,162,toString node:buffer:783:46,0x21794178fc0,~
code-source-info,0x204a9cab556,24,24080,24672,C0O24080C2O24122C8O24129C13O24155C20O24173C25O24155C31O24181C32O24209C37O24222C38O24232C43O24243C48O24262C50O24272C55O24285C57O24295C58O24309C65O24326C71O24355C76O24367C83O24391C90O24406C92O24414C97O24429C99O24439C100O24445C104O24490C109O24490C115O24512C116O24530C119O24530C124O24559C126O24587C133O24593C138O24587C139O24645C156O24645C161O24669,,
code-creation,LazyCompile,10,199985,0x204a9cab816,499,getEncodingOps node:buffer:679:24,0x21794178e18,~
code-source-info,0x204a9cab
code-creation,LazyCompile,10,200105,0x204a9cabbfe,12,slice node:buffer:594:12,0x217941777e0,~
code-source-info,0x204a9cabbfe,24,17229,17275,C0O17254C5O17254C11O17275,,
tick,0x7ff7c0927b25,200432,0,0x0,0,0x7ff7c0bd50f0,0x204a9c98339,0x204a9c97fc8,0x204a9ca8714,0x204a9ca7d9e,0x204a9c95f27,0x204a9c95af2,0x204a9c949a3,0x204a9c9474d,0x3a72c5c654c,0x3a72c5c2065
code-creation,LazyCompile,10,200489,0x204a9cac6b6,499,Module._compile node:internal/modules/cjs/loader:1059:37,0x3318a25bfb0,~
code-source-info,0x204a9cac6b6,111,34050,35943,C0O34079C2O34097C4O34111C11O34121C20O34140C25O34152C30O34182C35O34201C40O34210C45O34210C51O34247C56O34254C61O34263C66O34263C72O34310C86O34310C91O34383C103O34383C109O34446C111O34455C119O34459C128O34502C135O34524C141O34620C144O34632C151O34636C159O34669C162O34691C170O34716C177O34720C185O34691C193O34682C203O34917C210O34924C215O34937C221O34937C226O34924C231O34917C237O35004C242O35017C248O35089C256O35110C262O35141C264O35137C269O35164C273O35179C279O35194C285O35213C290O35241C295O35294C300O35299C305O35299C311O35337C316O35337C322O35382C324O35414C329O35444C330O35471C333O35480C339O35497C344O35504C349O35516C357O35514C363O35534C367O35563C388O35572C396O35711C401O35750C410O35789C419O35798C428O35807C437O35815C446O35825C459O35720C465O35844C469O35870C475O35881C481O35898C486O35905C490O35915C496O35926C498O35940,,
code-creation,LazyCompile,10,200632,0x204a9cacc1e,224,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x3318a252ff8,~
code-source-info,0x204a9cacc1e,108,2312,3375,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2645C68O2662C69O2669C70O2692C75O2719C80O2692C86O2799C88O2830C91O2858C96O2865C101O2830C107O2901C112O2921C117O2928C122O2951C126O2983C131O3001C136O3005C143O3035C150O3067C160O3098C166O3113C170O3001C178O3244C183O3262C188O3266C196O3300C206O3331C212O3346C216O3262C223O3374,,
code-creation,LazyCompile,10,200700,0x204a9cad676,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x3318a252f58,~
code-source-info,0x204a9cad676,108,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,200750,0x204a9cad7ee,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x3318a252fa8,~
code-source-info,0x204a9cad7ee,108,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,200795,0x204a9cad966,30,validateBoolean node:internal/validators:139:25,0x17449ffcfb0,~
code-source-info,0x204a9cad966,15,4199,4313,C0O4218C6O4255C22O4261C27O4255C29O4312,,
code-creation,LazyCompile,10,200871,0x204a9cadd5e,165,wrapSafe node:internal/modules/cjs/loader:1017:18,0x3318a25b638,~
code-source-info,0x204a9cadd5e,111,32708,33836,C0O32708C9O32752C17O32788C22O32795C27O32795C33O32815C40O32825C45O32842C52O32860C56O32952C64O32825C70O33229C74O33249C81O33259C86O33275C98O33397C102O33414C113O33259C118O33705C130O33730C135O33742C142O33753C147O33783C157O33783C162O33818C164O33818,,
code-creation,LazyCompile,10,201022,0x204a9cae536,472,compileFunction node:vm:308:25,0x160e4c74570,~
script-source,88,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  constants\x2C\x0d\n  compileFunction: _compileFunction\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = {}) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInThisContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInThisContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    ArrayPrototypeUnshift(args\x2C contextifiedObject);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(options = {}) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [timeout\x2C displayErrors\x2C breakOnSigint\x2C breakFirstLine]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = {}) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = {}) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = _compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result.function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = {}) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x204a9cae
code-creation,LazyCompile,10,201645,0x204a9caf6fe,95, node:internal/validators:168:39,0x17449ffd070,~
code-source-info,0x204a9caf6fe,15,5152,5438,C16O5189C21O5194C27O5222C43O5228C48O5222C49O5294C56O5301C61O5336C66O5359C71O5377C87O5383C92O5377C94O5437,,
code-creation,LazyCompile,10,201688,0x204a9caf85e,27, node:vm:313:27,0x204a9cae208,~
code-source-info,0x204a9caf85e,88,10064,10115,C0O10078C10O10110C21O10078C26O10115,,
code-creation,Eval,10,201737,0x204a9cafad6,5, C:\\Users\\Malinconia\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x204a9caf990,~
script-source,133,C:\\Users\\Malinconia\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0x204a9cafad6,133,0,119,C0O0C4O119,,
code-creation,Function,10,201768,0x204a9cafbbe,29, C:\\Users\\Malinconia\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x204a9cafa50,~
code-source-info,0x204a9cafbbe,133,0,119,C0O16C3O16C8O44C21O44C28O118,,
code-creation,LazyCompile,10,201849,0x204a9cafe36,19,importModuleDynamicallyWrap node:internal/vm/module:435:37,0x204a9c8bb88,~
code-source-info,0x204a9cafe36,131,12139,12597,C0O12139C13O12209C18O12594,,
code-creation,LazyCompile,10,201921,0x204a9cb100e,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0x3318a255b28,~
code-source-info,0x204a9cb100e,110,1765,3805,C0O1765C22O1802C25O1806C29O1802C31O1828C33O1840C53O1873C58O1877C69O1893C73O1873C75O1921C81O1921C83O1949C89O1958C95O1987C104O3182C109O3423C111O3439C115O3586C117O3600C121O3614C126O3637C130O3627C134O3705C137O3733C141O3724C145O3751C148O3774C152O3765C156O3787C158O3802,,
code-creation,LazyCompile,10,201985,0x204a9cb125e,14,require node:internal/modules/cjs/helpers:101:31,0x204a9cb0ee0,~
code-source-info,0x204a9cb125e,110,3208,3256,C0O3224C3O3235C8O3235C13O3249,,
code-creation,LazyCompile,10,202024,0x204a9cb13a6,10, node:internal/modules/cjs/helpers:29:66,0x3318a255cf8,~
code-source-info,0x204a9cb13a6,110,838,865,C0O851C2O857C9O864,,
code-creation,LazyCompile,10,202073,0x204a9cb151e,129,compileForPublicLoader node:internal/bootstrap/loaders:246:25,0x17449fcfb98,~
code-source-info,0x204a9cb151e,9,7789,8477,C0O7809C6O7956C16O7999C33O7962C38O7956C39O8038C44O8038C48O8081C54O8273C61O8304C69O8273C75O8329C80O8347C90O8363C93O8379C98O8363C102O8345C106O8406C111O8406C115O8432C120O8432C124O8464C128O8472,,
code-creation,Eval,10,202141,0x204a9cb187e,5, node:cluster:1:1,0x204a9cb1738,~
script-source,134,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst childOrPrimary = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'primary';\x0d\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\x0d\n
code-source-info,0x204a9cb187e,134,0,1316,C0O0C4O1316,,
code-creation,Function,10,202209,0x204a9cb1926,39, node:cluster:1:1,0x204a9cb17f8,~
code-source-info,0x204a9cb1926,134,0,1316,C0O1195C3O1223C7O1212C19O1251C24O1296C29O1268C33O1266C38O1315,,
tick,0x7ffdf67bb958,202410,1,0x7ff7c02ae150,2,0x7ff7c0bf59a0,0x20401044e3b,0x204010448e5,0x204a9cb1943,0x20401044f03,0x204a9cb154a,0x204a9ca73cb,0x204a9c95ebe,0x204a9c95af2,0x204a9cb1266,0x204a9cafbc1,0x204a9cac881,0x204a9ca889b,0x204a9ca7d9e,0x204a9c95f27,0x204a9c95af2,0x204a9c949a3,0x204a9c9474d,0x3a72c5c654c,0x3a72c5c2065
code-creation,Eval,10,202543,0x204a9cb24e6,5, node:internal/cluster/primary:1:1,0x204a9cb2160,~
script-source,135,node:internal/cluster/primary,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst { fork } = require('child_process');\x0d\nconst path = require('path');\x0d\nconst EventEmitter = require('events');\x0d\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\x0d\nconst SharedHandle = require('internal/cluster/shared_handle');\x0d\nconst Worker = require('internal/cluster/worker');\x0d\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\x0d\nconst cluster = new EventEmitter();\x0d\nconst intercom = new EventEmitter();\x0d\nconst SCHED_NONE = 1;\x0d\nconst SCHED_RR = 2;\x0d\nconst minPort = 1024;\x0d\nconst maxPort = 65535;\x0d\nconst { validatePort } = require('internal/validators');\x0d\n\x0d\nmodule.exports = cluster;\x0d\n\x0d\nconst handles = new SafeMap();\x0d\ncluster.isWorker = false;\x0d\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\x0d\ncluster.isPrimary = true;\x0d\ncluster.Worker = Worker;\x0d\ncluster.workers = {};\x0d\ncluster.settings = {};\x0d\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\x0d\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\x0d\n\x0d\nlet ids = 0;\x0d\nlet debugPortOffset = 1;\x0d\nlet initialized = false;\x0d\n\x0d\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\x0d\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\x0d\nif (schedulingPolicy === 'rr')\x0d\n  schedulingPolicy = SCHED_RR;\x0d\nelse if (schedulingPolicy === 'none')\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\nelse if (process.platform === 'win32') {\x0d\n  // Round-robin doesn't perform well on\x0d\n  // Windows due to the way IOCP is wired up.\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\n} else\x0d\n  schedulingPolicy = SCHED_RR;\x0d\n\x0d\ncluster.schedulingPolicy = schedulingPolicy;\x0d\n\x0d\ncluster.setupPrimary = function(options) {\x0d\n  const settings = {\x0d\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\x0d\n    exec: process.argv[1]\x2C\x0d\n    execArgv: process.execArgv\x2C\x0d\n    silent: false\x2C\x0d\n    ...cluster.settings\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Tell V8 to write profile data for each process to a separate file.\x0d\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\x0d\n  // file. (Unusable because what V8 logs are memory addresses and each\x0d\n  // process has its own memory mappings.)\x0d\n  if (ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\x0d\n      !ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\x0d\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\x0d\n  }\x0d\n\x0d\n  cluster.settings = settings;\x0d\n\x0d\n  if (initialized === true)\x0d\n    return process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  initialized = true;\x0d\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\x0d\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\x0d\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\x0d\n\x0d\n  process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  process.on('internalMessage'\x2C (message) => {\x0d\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\x0d\n      return;\x0d\n\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.state === 'online' || worker.state === 'listening') {\x0d\n        process._debugProcess(worker.process.pid);\x0d\n      } else {\x0d\n        worker.once('online'\x2C function() {\x0d\n          process._debugProcess(this.process.pid);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n// Deprecated alias must be same as setupPrimary\x0d\ncluster.setupMaster = cluster.setupPrimary;\x0d\n\x0d\nfunction setupSettingsNT(settings) {\x0d\n  cluster.emit('setup'\x2C settings);\x0d\n}\x0d\n\x0d\nfunction createWorkerProcess(id\x2C env) {\x0d\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\x0d\n  const execArgv = [...cluster.settings.execArgv];\x0d\n  const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\x0d\n  const nodeOptions = process.env.NODE_OPTIONS || '';\x0d\n\x0d\n  if (ArrayPrototypeSome(execArgv\x2C\x0d\n                         (arg) => RegExpPrototypeTest(debugArgRegex\x2C arg)) ||\x0d\n      RegExpPrototypeTest(debugArgRegex\x2C nodeOptions)) {\x0d\n    let inspectPort;\x0d\n    if ('inspectPort' in cluster.settings) {\x0d\n      if (typeof cluster.settings.inspectPort === 'function')\x0d\n        inspectPort = cluster.settings.inspectPort();\x0d\n      else\x0d\n        inspectPort = cluster.settings.inspectPort;\x0d\n\x0d\n      validatePort(inspectPort);\x0d\n    } else {\x0d\n      inspectPort = process.debugPort + debugPortOffset;\x0d\n      if (inspectPort > maxPort)\x0d\n        inspectPort = inspectPort - maxPort + minPort - 1;\x0d\n      debugPortOffset++;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${inspectPort}`);\x0d\n  }\x0d\n\x0d\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\x0d\n    cwd: cluster.settings.cwd\x2C\x0d\n    env: workerEnv\x2C\x0d\n    serialization: cluster.settings.serialization\x2C\x0d\n    silent: cluster.settings.silent\x2C\x0d\n    windowsHide: cluster.settings.windowsHide\x2C\x0d\n    execArgv: execArgv\x2C\x0d\n    stdio: cluster.settings.stdio\x2C\x0d\n    gid: cluster.settings.gid\x2C\x0d\n    uid: cluster.settings.uid\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction removeWorker(worker) {\x0d\n  assert(worker);\x0d\n  delete cluster.workers[worker.id];\x0d\n\x0d\n  if (ObjectKeys(cluster.workers).length === 0) {\x0d\n    assert(handles.size === 0\x2C 'Resource leak detected.');\x0d\n    intercom.emit('disconnect');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeHandlesForWorker(worker) {\x0d\n  assert(worker);\x0d\n\x0d\n  handles.forEach((handle\x2C key) => {\x0d\n    if (handle.remove(worker))\x0d\n      handles.delete(key);\x0d\n  });\x0d\n}\x0d\n\x0d\ncluster.fork = function(env) {\x0d\n  cluster.setupPrimary();\x0d\n  const id = ++ids;\x0d\n  const workerProcess = createWorkerProcess(id\x2C env);\x0d\n  const worker = new Worker({\x0d\n    id: id\x2C\x0d\n    process: workerProcess\x0d\n  });\x0d\n\x0d\n  worker.on('message'\x2C function(message\x2C handle) {\x0d\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\x0d\n  });\x0d\n\x0d\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if it has disconnected\x2C otherwise we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (!worker.isConnected()) {\x0d\n      removeHandlesForWorker(worker);\x0d\n      removeWorker(worker);\x0d\n    }\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'dead';\x0d\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\x0d\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\x0d\n  });\x0d\n\x0d\n  worker.process.once('disconnect'\x2C () => {\x0d\n    /*\x0d\n     * Now is a good time to remove the handles\x0d\n     * associated with this worker because it is\x0d\n     * not connected to the primary anymore.\x0d\n     */\x0d\n    removeHandlesForWorker(worker);\x0d\n\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if its process has exited. Otherwise\x2C we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (worker.isDead())\x0d\n      removeWorker(worker);\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'disconnected';\x0d\n    worker.emit('disconnect');\x0d\n    cluster.emit('disconnect'\x2C worker);\x0d\n  });\x0d\n\x0d\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\x0d\n  process.nextTick(emitForkNT\x2C worker);\x0d\n  cluster.workers[worker.id] = worker;\x0d\n  return worker;\x0d\n};\x0d\n\x0d\nfunction emitForkNT(worker) {\x0d\n  cluster.emit('fork'\x2C worker);\x0d\n}\x0d\n\x0d\ncluster.disconnect = function(cb) {\x0d\n  const workers = ObjectKeys(cluster.workers);\x0d\n\x0d\n  if (workers.length === 0) {\x0d\n    process.nextTick(() => intercom.emit('disconnect'));\x0d\n  } else {\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.isConnected()) {\x0d\n        worker.disconnect();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    intercom.once('disconnect'\x2C cb);\x0d\n};\x0d\n\x0d\nconst methodMessageMapping = {\x0d\n  close\x2C\x0d\n  exitedAfterDisconnect\x2C\x0d\n  listening\x2C\x0d\n  online\x2C\x0d\n  queryServer\x2C\x0d\n};\x0d\n\x0d\nfunction onmessage(message\x2C handle) {\x0d\n  const worker = this;\x0d\n\x0d\n  const fn = methodMessageMapping[message.act];\x0d\n\x0d\n  if (typeof fn === 'function')\x0d\n    fn(worker\x2C message);\x0d\n}\x0d\n\x0d\nfunction online(worker) {\x0d\n  worker.state = 'online';\x0d\n  worker.emit('online');\x0d\n  cluster.emit('online'\x2C worker);\x0d\n}\x0d\n\x0d\nfunction exitedAfterDisconnect(worker\x2C message) {\x0d\n  worker.exitedAfterDisconnect = true;\x0d\n  send(worker\x2C { ack: message.seq });\x0d\n}\x0d\n\x0d\nfunction queryServer(worker\x2C message) {\x0d\n  // Stop processing if worker already disconnecting\x0d\n  if (worker.exitedAfterDisconnect)\x0d\n    return;\x0d\n\x0d\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\x0d\n              `${message.fd}:${message.index}`;\x0d\n  let handle = handles.get(key);\x0d\n\x0d\n  if (handle === undefined) {\x0d\n    let address = message.address;\x0d\n\x0d\n    // Find shortest path for unix sockets because of the ~100 byte limit\x0d\n    if (message.port < 0 && typeof address === 'string' &&\x0d\n        process.platform !== 'win32') {\x0d\n\x0d\n      address = path.relative(process.cwd()\x2C address);\x0d\n\x0d\n      if (message.address.length < address.length)\x0d\n        address = message.address;\x0d\n    }\x0d\n\x0d\n    // UDP is exempt from round-robin connection balancing for what should\x0d\n    // be obvious reasons: it's connectionless. There is nothing to send to\x0d\n    // the workers except raw datagrams and that's pointless.\x0d\n    if (schedulingPolicy !== SCHED_RR ||\x0d\n        message.addressType === 'udp4' ||\x0d\n        message.addressType === 'udp6') {\x0d\n      handle = new SharedHandle(key\x2C address\x2C message);\x0d\n    } else {\x0d\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\x0d\n    }\x0d\n\x0d\n    handles.set(key\x2C handle);\x0d\n  }\x0d\n\x0d\n  if (!handle.data)\x0d\n    handle.data = message.data;\x0d\n\x0d\n  // Set custom server data\x0d\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\x0d\n    const { data } = handles.get(key);\x0d\n\x0d\n    if (errno)\x0d\n      handles.delete(key);  // Gives other workers a chance to retry.\x0d\n\x0d\n    send(worker\x2C {\x0d\n      errno\x2C\x0d\n      key\x2C\x0d\n      ack: message.seq\x2C\x0d\n      data\x2C\x0d\n      ...reply\x0d\n    }\x2C handle);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction listening(worker\x2C message) {\x0d\n  const info = {\x0d\n    addressType: message.addressType\x2C\x0d\n    address: message.address\x2C\x0d\n    port: message.port\x2C\x0d\n    fd: message.fd\x0d\n  };\x0d\n\x0d\n  worker.state = 'listening';\x0d\n  worker.emit('listening'\x2C info);\x0d\n  cluster.emit('listening'\x2C worker\x2C info);\x0d\n}\x0d\n\x0d\n// Server in worker is closing\x2C remove from list. The handle may have been\x0d\n// removed by a prior call to removeHandlesForWorker() so guard against that.\x0d\nfunction close(worker\x2C message) {\x0d\n  const key = message.key;\x0d\n  const handle = handles.get(key);\x0d\n\x0d\n  if (handle && handle.remove(worker))\x0d\n    handles.delete(key);\x0d\n}\x0d\n\x0d\nfunction send(worker\x2C message\x2C handle\x2C cb) {\x0d\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\x0d\n}\x0d\n\x0d\n// Extend generic Worker with methods specific to the primary process.\x0d\nWorker.prototype.disconnect = function() {\x0d\n  this.exitedAfterDisconnect = true;\x0d\n  send(this\x2C { act: 'disconnect' });\x0d\n  removeHandlesForWorker(this);\x0d\n  removeWorker(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWorker.prototype.destroy = function(signo) {\x0d\n  const proc = this.process;\x0d\n\x0d\n  signo = signo || 'SIGTERM';\x0d\n\x0d\n  if (this.isConnected()) {\x0d\n    this.once('disconnect'\x2C () => proc.kill(signo));\x0d\n    this.disconnect();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  proc.kill(signo);\x0d\n};\x0d\n
code-source-info,0x204a9cb24e6,135,0,11181,C0O0C4O11181,,
code-creation,Function,10,203008,0x204a9cb2eae,640, node:internal/cluster/primary:1:1,0x204a9cb2460,~
code-source-info,0x204a9cb2eae
code-creation,Eval,10,203267,0x204a9cb44f6,5, node:internal/cluster/round_robin_handle:1:1,0x204a9cb42e0,~
script-source,136,node:internal/cluster/round_robin_handle,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Boolean\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst net = require('net');\x0d\nconst { sendHelper } = require('internal/cluster/utils');\x0d\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\x0d\nconst { constants } = internalBinding('tcp_wrap');\x0d\n\x0d\nmodule.exports = RoundRobinHandle;\x0d\n\x0d\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags\x2C backlog }) {\x0d\n  this.key = key;\x0d\n  this.all = new SafeMap();\x0d\n  this.free = new SafeMap();\x0d\n  this.handles = init(ObjectCreate(null));\x0d\n  this.handle = null;\x0d\n  this.server = net.createServer(assert.fail);\x0d\n\x0d\n  if (fd >= 0)\x0d\n    this.server.listen({ fd\x2C backlog });\x0d\n  else if (port >= 0) {\x0d\n    this.server.listen({\x0d\n      port\x2C\x0d\n      host: address\x2C\x0d\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\x0d\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\x0d\n      backlog\x2C\x0d\n    });\x0d\n  } else\x0d\n    this.server.listen(address\x2C backlog);  // UNIX socket path.\x0d\n\x0d\n  this.server.once('listening'\x2C () => {\x0d\n    this.handle = this.server._handle;\x0d\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\x0d\n    this.server._handle = null;\x0d\n    this.server = null;\x0d\n  });\x0d\n}\x0d\n\x0d\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(this.all.has(worker.id) === false);\x0d\n  this.all.set(worker.id\x2C worker);\x0d\n\x0d\n  const done = () => {\x0d\n    if (this.handle.getsockname) {\x0d\n      const out = {};\x0d\n      this.handle.getsockname(out);\x0d\n      // TODO(bnoordhuis) Check err.\x0d\n      send(null\x2C { sockname: out }\x2C null);\x0d\n    } else {\x0d\n      send(null\x2C null\x2C null);  // UNIX socket.\x0d\n    }\x0d\n\x0d\n    this.handoff(worker);  // In case there are connections pending.\x0d\n  };\x0d\n\x0d\n  if (this.server === null)\x0d\n    return done();\x0d\n\x0d\n  // Still busy binding.\x0d\n  this.server.once('listening'\x2C done);\x0d\n  this.server.once('error'\x2C (err) => {\x0d\n    send(err.errno\x2C null);\x0d\n  });\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.remove = function(worker) {\x0d\n  const existed = this.all.delete(worker.id);\x0d\n\x0d\n  if (!existed)\x0d\n    return false;\x0d\n\x0d\n  this.free.delete(worker.id);\x0d\n\x0d\n  if (this.all.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  while (!isEmpty(this.handles)) {\x0d\n    const handle = peek(this.handles);\x0d\n    handle.close();\x0d\n    remove(handle);\x0d\n  }\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\x0d\n  append(this.handles\x2C handle);\x0d\n  // eslint-disable-next-line node-core/no-array-destructuring\x0d\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\x0d\n\x0d\n  if (ArrayIsArray(workerEntry)) {\x0d\n    const { 0: workerId\x2C 1: worker } = workerEntry;\x0d\n    this.free.delete(workerId);\x0d\n    this.handoff(worker);\x0d\n  }\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.handoff = function(worker) {\x0d\n  if (!this.all.has(worker.id)) {\x0d\n    return;  // Worker is closing (or has closed) the server.\x0d\n  }\x0d\n\x0d\n  const handle = peek(this.handles);\x0d\n\x0d\n  if (handle === null) {\x0d\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  remove(handle);\x0d\n\x0d\n  const message = { act: 'newconn'\x2C key: this.key };\x0d\n\x0d\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\x0d\n    if (reply.accepted)\x0d\n      handle.close();\x0d\n    else\x0d\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\x0d\n\x0d\n    this.handoff(worker);\x0d\n  });\x0d\n};\x0d\n
code-source-info,0x204a9cb44f6,136,0,3423,C0O0C4O3423,,
code-creation,Function,10,203437,0x204a9cb48be,217, node:internal/cluster/round_robin_handle:1:1,0x204a9cb4470,~
code-source-info,0x204a9cb48be,136,0,3423,C0O0C49O28C55O45C61O57C67O74C73O119C76O119C80O119C82O160C85O160C89O160C91O200C94O200C99O185C105O284C108O284C113O244C119O252C125O258C131O267C137O273C143O339C146O339C151O325C157O371C159O386C163O1307C172O1321C176O1999C185O2016C189O2419C198O2440C202O2807C211O2825C216O3422,,
code-creation,Eval,10,203559,0x204a9cb51de,5, node:internal/cluster/utils:1:1,0x204a9cb5068,~
script-source,137,node:internal/cluster/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = {\x0d\n  sendHelper\x2C\x0d\n  internal\x0d\n};\x0d\n\x0d\nconst callbacks = new SafeMap();\x0d\nlet seq = 0;\x0d\n\x0d\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\x0d\n  if (!proc.connected)\x0d\n    return false;\x0d\n\x0d\n  // Mark message as internal. See INTERNAL_PREFIX\x0d\n  // in lib/internal/child_process.js\x0d\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    callbacks.set(seq\x2C cb);\x0d\n\x0d\n  seq += 1;\x0d\n  return proc.send(message\x2C handle);\x0d\n}\x0d\n\x0d\n// Returns an internalMessage listener that hands off normal messages\x0d\n// to the callback but intercepts and redirects ACK messages.\x0d\nfunction internal(worker\x2C cb) {\x0d\n  return function onInternalMessage(message\x2C handle) {\x0d\n    if (message.cmd !== 'NODE_CLUSTER')\x0d\n      return;\x0d\n\x0d\n    let fn = cb;\x0d\n\x0d\n    if (message.ack !== undefined) {\x0d\n      const callback = callbacks.get(message.ack);\x0d\n\x0d\n      if (callback !== undefined) {\x0d\n        fn = callback;\x0d\n        callbacks.delete(message.ack);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ReflectApply(fn\x2C worker\x2C arguments);\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x204a9cb51de,137,0,1104,C0O0C4O1104,,
code-creation,Function,10,203629,0x204a9cb539e,72, node:internal/cluster/utils:1:1,0x204a9cb5158,~
code-source-info,0x204a9cb539e,137,0,1104,C0O0C24O28C30O45C35O75C42O97C48O112C54O90C58O146C60O146C65O146C67O172C68O172C71O1103,,
code-creation,Eval,10,203740,0x204a9cb59ae,5, node:internal/cluster/shared_handle:1:1,0x204a9cb5828,~
script-source,138,node:internal/cluster/shared_handle,'use strict';\x0d\nconst { SafeMap } = primordials;\x0d\nconst assert = require('internal/assert');\x0d\nconst dgram = require('internal/dgram');\x0d\nconst net = require('net');\x0d\n\x0d\nmodule.exports = SharedHandle;\x0d\n\x0d\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\x0d\n  this.key = key;\x0d\n  this.workers = new SafeMap();\x0d\n  this.handle = null;\x0d\n  this.errno = 0;\x0d\n\x0d\n  let rval;\x0d\n  if (addressType === 'udp4' || addressType === 'udp6')\x0d\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n  else\x0d\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n  if (typeof rval === 'number')\x0d\n    this.errno = rval;\x0d\n  else\x0d\n    this.handle = rval;\x0d\n}\x0d\n\x0d\nSharedHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(!this.workers.has(worker.id));\x0d\n  this.workers.set(worker.id\x2C worker);\x0d\n  send(this.errno\x2C null\x2C this.handle);\x0d\n};\x0d\n\x0d\nSharedHandle.prototype.remove = function(worker) {\x0d\n  if (!this.workers.has(worker.id))\x0d\n    return false;\x0d\n\x0d\n  this.workers.delete(worker.id);\x0d\n\x0d\n  if (this.workers.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n
code-source-info,0x204a9cb59ae,138,0,1147,C0O0C4O1147,,
code-creation,Function,10,203813,0x204a9cb5be6,89, node:internal/cluster/shared_handle:1:1,0x204a9cb5928,~
code-source-info,0x204a9cb5be6,138,0,1147,C0O0C22O23C28O64C31O64C35O64C37O107C40O107C44O107C46O147C49O147C53O147C55O166C57O181C61O711C70O725C74O893C83O910C88O1146,,
code-creation,Eval,10,203926,0x204a9cb61ce,5, node:internal/cluster/worker:1:1,0x204a9cb6058,~
script-source,139,node:internal/cluster/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\nmodule.exports = Worker;\x0d\n\x0d\n// Common Worker implementation shared between the cluster primary and workers.\x0d\nfunction Worker(options) {\x0d\n  if (!(this instanceof Worker))\x0d\n    return new Worker(options);\x0d\n\x0d\n  ReflectApply(EventEmitter\x2C this\x2C []);\x0d\n\x0d\n  if (options === null || typeof options !== 'object')\x0d\n    options = {};\x0d\n\x0d\n  this.exitedAfterDisconnect = undefined;\x0d\n\x0d\n  this.state = options.state || 'none';\x0d\n  this.id = options.id | 0;\x0d\n\x0d\n  if (options.process) {\x0d\n    this.process = options.process;\x0d\n    this.process.on('error'\x2C (code\x2C signal) =>\x0d\n      this.emit('error'\x2C code\x2C signal)\x0d\n    );\x0d\n    this.process.on('message'\x2C (message\x2C handle) =>\x0d\n      this.emit('message'\x2C message\x2C handle)\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\x0d\n\x0d\nWorker.prototype.kill = function() {\x0d\n  ReflectApply(this.destroy\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.send = function() {\x0d\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.isDead = function() {\x0d\n  return this.process.exitCode != null || this.process.signalCode != null;\x0d\n};\x0d\n\x0d\nWorker.prototype.isConnected = function() {\x0d\n  return this.process.connected;\x0d\n};\x0d\n
code-source-info,0x204a9cb61ce,139,0,1370,C0O0C4O1370,,
code-creation,Function,10,204005,0x204a9cb6536,141, node:internal/cluster/worker:1:1,0x204a9cb6148,~
code-source-info,0x204a9cb6536,139,0,1370,C0O0C17O28C22O53C28O109C31O109C35O109C37O131C39O146C43O849C46O877C54O901C59O849C64O914C70O914C75O961C78O968C87O983C91O1053C94O1060C103O1075C107O1165C110O1172C119O1189C123O1287C126O1294C135O1316C140O1369,,
code-creation,LazyCompile,10,204148,0x204a9cb6cce,151,getESMFacade node:internal/bootstrap/loaders:264:15,0x17449fcfc10,~
code-source-info,0x204a9cb6cce,9,8495,9141,C0O8495C8O8514C14O8534C18O8541C19O8570C29O8570C34O8555C39O8619C42O8632C51O8664C53O8664C55O8695C62O8720C67O8695C72O8738C82O8738C87O8787C89O8840C102O8801C107O8799C111O9052C116O9059C121O9059C125O9084C130O9091C140O9091C146O9129C150O9136,,
code-creation,LazyCompile,10,204228,0x204a9cb70b6,40, node:internal/bootstrap/loaders:273:15,0x204a9cb6bc8,~
code-source-info,0x204a9cb70b6,9,8868,8976,C0O8882C5O8895C10O8895C14O8924C24O8945C27O8958C32O8924C39O8975,,
code-creation,LazyCompile,10,204279,0x204a9cb720e,89,syncExports node:internal/bootstrap/loaders:287:14,0x17449fcfc80,~
code-source-info,0x204a9cb720e,9,9454,9797,C0O9483C5O9509C11O9539C13O9552C17O9544C22O9595C24O9600C28O9614C30O9629C35O9644C37O9668C42O9675C51O9728C54O9740C59O9766C67O9728C73O9675C79O9561C84O9526C88O9796,,
code-creation,LazyCompile,10,204327,0x204a9cb7376,35,getOwn node:internal/bootstrap/loaders:180:16,0x17449fcf918,~
code-source-info,0x204a9cb7376,9,5677,5835,C0O5714C5O5721C14O5776C26O5776C34O5832,,
tick,0x7ffdf681c7f4,204420,0,0x0,3,0x7ff7c08240c0,0x204a9cb7251,0x204a9cb70c0,0x7ff7c033d220,0x204a9cb6d5a,0x204a9cb158d,0x204a9ca73cb,0x204a9c95ebe,0x204a9c95af2,0x204a9cb1266,0x204a9cafbc1,0x204a9cac881,0x204a9ca889b,0x204a9ca7d9e,0x204a9c95f27,0x204a9c95af2,0x204a9c949a3,0x204a9c9474d,0x3a72c5c654c,0x3a72c5c2065
code-creation,RegExp,3,204505,0x20401047d00,1532,(?:^|\\/)\\.?\\.$
code-creation,RegExp,3,204655,0x20401048360,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Function,11,204814,0x20401048a00,3380,dirname node:path:653:10,0x5da138d768,^
code-source-info,0x20401048a00,41,21280,23908,,,
code-creation,Function,11,204851,0x204010497a0,1936,toNamespacedPath node:path:618:19,0x5da138d6f8,^
code-source-info,0x204010497a0,41,20086,21201,,,
code-creation,Function,11,204871,0x20401049fa0,320,isFileType node:fs:205:20,0x160e4c57010,^
code-source-info,0x20401049fa0,80,5489,5737,,,
code-creation,Function,11,204889,0x2040104a140,304,getOwn node:internal/bootstrap/loaders:180:16,0x17449fcf918,^
code-source-info,0x2040104a140,9,5677,5835,,,
code-creation,Function,11,204910,0x2040104a2e0,672,syncExports node:internal/bootstrap/loaders:287:14,0x17449fcfc80,^
code-source-info,0x2040104a2e0,9,9454,9797,,,
code-creation,Eval,10,205144,0x204a9cb805e,5, C:\\Users\\Malinconia\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x204a9cb7eb8,~
script-source,140,C:\\Users\\Malinconia\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout\x2C 'fd'\x2C {\n    value: socket._handle.fd\n  })\n}\n
code-source-info,0x204a9cb805e,140,0,494,C0O0C4O494,,
code-creation,Function,10,205190,0x204a9cb8306,157, C:\\Users\\Malinconia\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x204a9cb7fd8,~
code-source-info,0x204a9cb8306,140,0,494,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493,,
code-creation,LazyCompile,10,205280,0x204a9cb87d6,37,get SocketAddress node:net:1830:20,0x3a72c5eb860,~
code-source-info,0x204a9cb87d6,101,50750,50858,C0O50760C14O50778C19O50811C26O50774C32O50832C36O50853,,
code-creation,Eval,10,205367,0x204a9cb8b9e,5, node:worker_threads:1:1,0x204a9cb8a58,~
script-source,141,node:worker_threads,'use strict';\x0d\n\x0d\nconst {\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x0d\n} = require('internal/worker');\x0d\n\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  BroadcastChannel\x2C\x0d\n} = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  markAsUntransferable\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nmodule.exports = {\x0d\n  isMainThread\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  resourceLimits\x2C\x0d\n  threadId\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  Worker\x2C\x0d\n  parentPort: null\x2C\x0d\n  workerData: null\x2C\x0d\n  BroadcastChannel\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n};\x0d\n
code-source-info,0x204a9cb8b9e,141,0,727,C0O0C4O727,,
code-creation,Function,10,205426,0x204a9cb8dae,180, node:worker_threads:1:1,0x204a9cb8b18,~
code-source-info,0x204a9cb8dae,141,0,727,C0O149C3O149C8O28C13O45C18O59C23O78C28O101C33O124C38O137C43O303C46O303C51O191C56O207C61O226C66O255C71O280C76O375C79O375C84O348C89O406C96O428C102O445C108O461C114O480C120O505C126O534C132O559C138O578C144O591C150O605C156O658C162O679C168O702C174O421C179O726,,
code-creation,Eval,10,205830,0x204a9cb9d36,5, node:internal/worker:1:1,0x204a9cb9758,~
script-source,142,node:internal/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  JSONStringify\x2C\x0d\n  MathMax\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectEntries\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst path = require('path');\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst errorCodes = require('internal/errors').codes;\x0d\nconst {\x0d\n  ERR_WORKER_NOT_RUNNING\x2C\x0d\n  ERR_WORKER_PATH\x2C\x0d\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\x0d\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = errorCodes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst workerIo = require('internal/worker/io');\x0d\nconst {\x0d\n  drainMessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x0d\n} = workerIo;\x0d\nconst { deserializeError } = require('internal/error_serdes');\x0d\nconst { fileURLToPath\x2C isURLInstance\x2C pathToFileURL } = require('internal/url');\x0d\nconst { validateArray } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  resourceLimits: resourceLimitsRaw\x2C\x0d\n  threadId\x2C\x0d\n  Worker: WorkerImpl\x2C\x0d\n  kMaxYoungGenerationSizeMb\x2C\x0d\n  kMaxOldGenerationSizeMb\x2C\x0d\n  kCodeRangeSizeMb\x2C\x0d\n  kStackSizeMb\x2C\x0d\n  kTotalResourceLimitCount\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kPublicPort = Symbol('kPublicPort');\x0d\nconst kDispose = Symbol('kDispose');\x0d\nconst kOnExit = Symbol('kOnExit');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\x0d\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\x0d\nconst kParentSideStdio = Symbol('kParentSideStdio');\x0d\nconst kLoopStartTime = Symbol('kLoopStartTime');\x0d\nconst kIsOnline = Symbol('kIsOnline');\x0d\n\x0d\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\x0d\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nlet cwdCounter;\x0d\n\x0d\nconst environmentData = new SafeMap();\x0d\n\x0d\nif (isMainThread) {\x0d\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\x0d\n  const originalChdir = process.chdir;\x0d\n  process.chdir = function(path) {\x0d\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\x0d\n    originalChdir(path);\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction setEnvironmentData(key\x2C value) {\x0d\n  if (value === undefined)\x0d\n    environmentData.delete(key);\x0d\n  else\x0d\n    environmentData.set(key\x2C value);\x0d\n}\x0d\n\x0d\nfunction getEnvironmentData(key) {\x0d\n  return environmentData.get(key);\x0d\n}\x0d\n\x0d\nfunction assignEnvironmentData(data) {\x0d\n  if (data === undefined) return;\x0d\n  data.forEach((value\x2C key) => {\x0d\n    environmentData.set(key\x2C value);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass Worker extends EventEmitter {\x0d\n  constructor(filename\x2C options = {}) {\x0d\n    super();\x0d\n    debug(`[${threadId}] create new worker`\x2C filename\x2C options);\x0d\n    if (options.execArgv)\x0d\n      validateArray(options.execArgv\x2C 'options.execArgv');\x0d\n\x0d\n    let argv;\x0d\n    if (options.argv) {\x0d\n      validateArray(options.argv\x2C 'options.argv');\x0d\n      argv = ArrayPrototypeMap(options.argv\x2C String);\x0d\n    }\x0d\n\x0d\n    let url\x2C doEval;\x0d\n    if (options.eval) {\x0d\n      if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'options.eval'\x2C\x0d\n          options.eval\x2C\x0d\n          'must be false when \\'filename\\' is not a string'\x0d\n        );\x0d\n      }\x0d\n      url = null;\x0d\n      doEval = 'classic';\x0d\n    } else if (isURLInstance(filename) && filename.protocol === 'data:') {\x0d\n      url = null;\x0d\n      doEval = 'module';\x0d\n      filename = `import ${JSONStringify(`${filename}`)}`;\x0d\n    } else {\x0d\n      doEval = false;\x0d\n      if (isURLInstance(filename)) {\x0d\n        url = filename;\x0d\n        filename = fileURLToPath(filename);\x0d\n      } else if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'filename'\x2C\x0d\n          ['string'\x2C 'URL']\x2C\x0d\n          filename\x0d\n        );\x0d\n      } else if (path.isAbsolute(filename) ||\x0d\n                 RegExpPrototypeTest(/^\\.\\.?[\\\\/]/\x2C filename)) {\x0d\n        filename = path.resolve(filename);\x0d\n        url = pathToFileURL(filename);\x0d\n      } else {\x0d\n        throw new ERR_WORKER_PATH(filename);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let env;\x0d\n    if (typeof options.env === 'object' && options.env !== null) {\x0d\n      env = ObjectCreate(null);\x0d\n      ArrayPrototypeForEach(\x0d\n        ObjectEntries(options.env)\x2C\x0d\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x0d\n      );\x0d\n    } else if (options.env == null) {\x0d\n      env = process.env;\x0d\n    } else if (options.env !== SHARE_ENV) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.env'\x2C\x0d\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\x0d\n        options.env);\x0d\n    }\x0d\n\x0d\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\x0d\n    this[kHandle] = new WorkerImpl(url\x2C\x0d\n                                   env === process.env ? null : env\x2C\x0d\n                                   options.execArgv\x2C\x0d\n                                   parseResourceLimits(options.resourceLimits)\x2C\x0d\n                                   !!(options.trackUnmanagedFds ?? true));\x0d\n    if (this[kHandle].invalidExecArgv) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\x0d\n    }\x0d\n    if (this[kHandle].invalidNodeOptions) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\x0d\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\x0d\n    }\x0d\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\x0d\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\x0d\n    };\x0d\n    this[kPort] = this[kHandle].messagePort;\x0d\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\x0d\n    this[kPort].start();\x0d\n    this[kPort].unref();\x0d\n    this[kPort][kWaitingStreams] = 0;\x0d\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\x0d\n\x0d\n    let stdin = null;\x0d\n    if (options.stdin)\x0d\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\x0d\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\x0d\n    if (!options.stdout) {\x0d\n      stdout[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stdout\x2C process.stdout);\x0d\n    }\x0d\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\x0d\n    if (!options.stderr) {\x0d\n      stderr[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stderr\x2C process.stderr);\x0d\n    }\x0d\n\x0d\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\x0d\n\x0d\n    const { port1\x2C port2 } = new MessageChannel();\x0d\n    const transferList = [port2];\x0d\n    // If transferList is provided.\x0d\n    if (options.transferList)\x0d\n      ArrayPrototypePush(transferList\x2C\x0d\n                         ...new SafeArrayIterator(options.transferList));\x0d\n\x0d\n    this[kPublicPort] = port1;\x0d\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\x0d\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\x0d\n    });\x0d\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\x0d\n    this[kPort].postMessage({\x0d\n      argv\x2C\x0d\n      type: messageTypes.LOAD_SCRIPT\x2C\x0d\n      filename\x2C\x0d\n      doEval\x2C\x0d\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\x0d\n      workerData: options.workerData\x2C\x0d\n      environmentData\x2C\x0d\n      publicPort: port2\x2C\x0d\n      manifestURL: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').url :\x0d\n        null\x2C\x0d\n      manifestSrc: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').src :\x0d\n        null\x2C\x0d\n      hasStdin: !!options.stdin\x0d\n    }\x2C transferList);\x0d\n    // Use this to cache the Worker's loopStart value once available.\x0d\n    this[kLoopStartTime] = -1;\x0d\n    this[kIsOnline] = false;\x0d\n    this.performance = {\x0d\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\x0d\n    };\x0d\n    // Actually start the new thread now that everything is in place.\x0d\n    this[kHandle].startThread();\x0d\n\x0d\n    process.nextTick(() => process.emit('worker'\x2C this));\x0d\n  }\x0d\n\x0d\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\x0d\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\x0d\n    drainMessagePort(this[kPublicPort]);\x0d\n    drainMessagePort(this[kPort]);\x0d\n    this.removeAllListeners('message');\x0d\n    this.removeAllListeners('messageerrors');\x0d\n    this[kPublicPort].unref();\x0d\n    this[kPort].unref();\x0d\n    this[kDispose]();\x0d\n    if (customErr) {\x0d\n      debug(`[${threadId}] failing with custom error ${customErr} \\\x0d\n        and with reason ${customErrReason}`);\x0d\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\x0d\n    }\x0d\n    this.emit('exit'\x2C code);\x0d\n    this.removeAllListeners();\x0d\n  }\x0d\n\x0d\n  [kOnCouldNotSerializeErr]() {\x0d\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\x0d\n  }\x0d\n\x0d\n  [kOnErrorMessage](serialized) {\x0d\n    // This is what is called for uncaught exceptions.\x0d\n    const error = deserializeError(serialized);\x0d\n    this.emit('error'\x2C error);\x0d\n  }\x0d\n\x0d\n  [kOnMessage](message) {\x0d\n    switch (message.type) {\x0d\n      case messageTypes.UP_AND_RUNNING:\x0d\n        this[kIsOnline] = true;\x0d\n        return this.emit('online');\x0d\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\x0d\n        return this[kOnCouldNotSerializeErr]();\x0d\n      case messageTypes.ERROR_MESSAGE:\x0d\n        return this[kOnErrorMessage](message.error);\x0d\n      case messageTypes.STDIO_PAYLOAD:\x0d\n      {\x0d\n        const { stream\x2C chunks } = message;\x0d\n        const readable = this[kParentSideStdio][stream];\x0d\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\x0d\n          readable.push(chunk\x2C encoding);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n      case messageTypes.STDIO_WANTS_MORE_DATA:\x0d\n      {\x0d\n        const { stream } = message;\x0d\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    assert.fail(`Unknown worker message type ${message.type}`);\x0d\n  }\x0d\n\x0d\n  [kDispose]() {\x0d\n    this[kHandle].onexit = null;\x0d\n    this[kHandle] = null;\x0d\n    this[kPort] = null;\x0d\n    this[kPublicPort] = null;\x0d\n\x0d\n    const { stdout\x2C stderr } = this[kParentSideStdio];\x0d\n\x0d\n    if (!stdout.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\x0d\n      stdout.push(null);\x0d\n    }\x0d\n    if (!stderr.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\x0d\n      stderr.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  postMessage(...args) {\x0d\n    if (this[kPublicPort] === null) return;\x0d\n\x0d\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\x0d\n  }\x0d\n\x0d\n  terminate(callback) {\x0d\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\x0d\n\x0d\n    this.ref();\x0d\n\x0d\n    if (typeof callback === 'function') {\x0d\n      process.emitWarning(\x0d\n        'Passing a callback to worker.terminate() is deprecated. ' +\x0d\n        'It returns a Promise instead.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0132');\x0d\n      if (this[kHandle] === null) return PromiseResolve();\x0d\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\x0d\n    }\x0d\n\x0d\n    if (this[kHandle] === null) return PromiseResolve();\x0d\n\x0d\n    this[kHandle].stopThread();\x0d\n\x0d\n    // Do not use events.once() here\x2C because the 'exit' event will always be\x0d\n    // emitted regardless of any errors\x2C and the point is to only resolve\x0d\n    // once the thread has actually stopped.\x0d\n    return new Promise((resolve) => {\x0d\n      this.once('exit'\x2C resolve);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].ref();\x0d\n    this[kPublicPort].ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].unref();\x0d\n    this[kPublicPort].unref();\x0d\n  }\x0d\n\x0d\n  get threadId() {\x0d\n    if (this[kHandle] === null) return -1;\x0d\n\x0d\n    return this[kHandle].threadId;\x0d\n  }\x0d\n\x0d\n  get stdin() {\x0d\n    return this[kParentSideStdio].stdin;\x0d\n  }\x0d\n\x0d\n  get stdout() {\x0d\n    return this[kParentSideStdio].stdout;\x0d\n  }\x0d\n\x0d\n  get stderr() {\x0d\n    return this[kParentSideStdio].stderr;\x0d\n  }\x0d\n\x0d\n  get resourceLimits() {\x0d\n    if (this[kHandle] === null) return {};\x0d\n\x0d\n    return makeResourceLimits(this[kHandle].getResourceLimits());\x0d\n  }\x0d\n\x0d\n  getHeapSnapshot() {\x0d\n    const heapSnapshotTaker = this[kHandle] && this[kHandle].takeHeapSnapshot();\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\x0d\n      heapSnapshotTaker.ondone = (handle) => {\x0d\n        const { HeapSnapshotStream } = require('internal/heap_utils');\x0d\n        resolve(new HeapSnapshotStream(handle));\x0d\n      };\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeWithoutWarning(source\x2C dest) {\x0d\n  const sourceMaxListeners = source._maxListeners;\x0d\n  const destMaxListeners = dest._maxListeners;\x0d\n  source.setMaxListeners(Infinity);\x0d\n  dest.setMaxListeners(Infinity);\x0d\n\x0d\n  source.pipe(dest);\x0d\n\x0d\n  source._maxListeners = sourceMaxListeners;\x0d\n  dest._maxListeners = destMaxListeners;\x0d\n}\x0d\n\x0d\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\x0d\nfunction parseResourceLimits(obj) {\x0d\n  const ret = resourceLimitsArray;\x0d\n  TypedArrayPrototypeFill(ret\x2C -1);\x0d\n  if (typeof obj !== 'object' || obj === null) return ret;\x0d\n\x0d\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\x0d\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\x0d\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\x0d\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\x0d\n  if (typeof obj.codeRangeSizeMb === 'number')\x0d\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\x0d\n  if (typeof obj.stackSizeMb === 'number')\x0d\n    ret[kStackSizeMb] = obj.stackSizeMb;\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction makeResourceLimits(float64arr) {\x0d\n  return {\x0d\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\x0d\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\x0d\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\x0d\n    stackSizeMb: float64arr[kStackSizeMb]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\x0d\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\x0d\n  // has had a chance to turn. So it will be impossible to read the ELU of\x0d\n  // a worker thread immediately after it's been created.\x0d\n  if (!this[kIsOnline] || !this[kHandle]) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  // Cache loopStart\x2C since it's only written to once.\x0d\n  if (this[kLoopStartTime] === -1) {\x0d\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\x0d\n    if (this[kLoopStartTime] === -1)\x0d\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  if (util2) {\x0d\n    const idle = util1.idle - util2.idle;\x0d\n    const active = util1.active - util2.active;\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle = this[kHandle].loopIdleTime();\x0d\n\x0d\n  // Using performance.now() here is fine since it's always the time from\x0d\n  // the beginning of the process\x2C and is why it needs to be offset by the\x0d\n  // loopStart time (which is also calculated from the beginning of the\x0d\n  // process).\x0d\n  const active = now() - this[kLoopStartTime] - idle;\x0d\n\x0d\n  if (!util1) {\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle_delta = idle - util1.idle;\x0d\n  const active_delta = active - util1.active;\x0d\n  const utilization = active_delta / (idle_delta + active_delta);\x0d\n  return { idle: idle_delta\x2C active: active_delta\x2C utilization };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits:\x0d\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  assignEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x2C\x0d\n};\x0d\n
code-source-info,0x204a9cb9d36,142,0,15857,C0O0C4O15857,,
code-creation,Function,10,206641,0x204a9cbb086,1185, node:internal/worker:1:1,0x204a9cb9cb0,~
code-source-info,0x204a9cbb
tick,0x7ff7c0172273,206801,1,0x7ff7c02ae150,3,0x7ff7c0bf59a0,0x20401044e3b,0x204010448e5,0x204a9cb8db1,0x20401044f03,0x204a9cb154a,0x204a9ca73cb,0x204a9c95ebe,0x204a9c95af2,0x204a9cb1266,0x204a9cb8316,0x204a9cac881,0x204a9ca889b,0x204a9ca7d9e,0x204a9c95f27,0x204a9c95af2,0x204a9c949a3,0x204a9c9474d,0x3a72c5c654c,0x3a72c5c2065
code-creation,Eval,10,206980,0x204a9cbcfce,5, node:internal/error_serdes:1:1,0x204a9cbcd08,~
script-source,143,node:internal/error_serdes,'use strict';\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  EvalError\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  RangeError\x2C\x0d\n  ReferenceError\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kSerializedError = 0;\x0d\nconst kSerializedObject = 1;\x0d\nconst kInspectedError = 2;\x0d\n\x0d\nconst errors = {\x0d\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x0d\n};\x0d\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\x0d\n\x0d\nfunction TryGetAllProperties(object\x2C target = object) {\x0d\n  const all = ObjectCreate(null);\x0d\n  if (object === null)\x0d\n    return all;\x0d\n  ObjectAssign(all\x2C\x0d\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\x0d\n  const keys = ObjectGetOwnPropertyNames(object);\x0d\n  ArrayPrototypeForEach(keys\x2C (key) => {\x0d\n    let descriptor;\x0d\n    try {\x0d\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\x0d\n    } catch { return; }\x0d\n    const getter = descriptor.get;\x0d\n    if (getter && key !== '__proto__') {\x0d\n      try {\x0d\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n    }\x0d\n    if ('value' in descriptor && typeof descriptor.value !== 'function') {\x0d\n      delete descriptor.get;\x0d\n      delete descriptor.set;\x0d\n      all[key] = descriptor;\x0d\n    }\x0d\n  });\x0d\n  return all;\x0d\n}\x0d\n\x0d\nfunction GetConstructors(object) {\x0d\n  const constructors = [];\x0d\n\x0d\n  for (let current = object;\x0d\n    current !== null;\x0d\n    current = ObjectGetPrototypeOf(current)) {\x0d\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\x0d\n    if (desc && desc.value) {\x0d\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\x0d\n        value: desc.value\x2C enumerable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return constructors;\x0d\n}\x0d\n\x0d\nfunction GetName(object) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\x0d\n  return desc && desc.value;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect;\x0d\nfunction inspect(...args) {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect.inspect(...args);\x0d\n}\x0d\n\x0d\nlet serialize;\x0d\nfunction serializeError(error) {\x0d\n  if (!serialize) serialize = require('v8').serialize;\x0d\n  try {\x0d\n    if (typeof error === 'object' &&\x0d\n        ObjectPrototypeToString(error) === '[object Error]') {\x0d\n      const constructors = GetConstructors(error);\x0d\n      for (let i = 0; i < constructors.length; i++) {\x0d\n        const name = GetName(constructors[i]);\x0d\n        if (errorConstructorNames.has(name)) {\x0d\n          const serialized = serialize({\x0d\n            constructor: name\x2C\x0d\n            properties: TryGetAllProperties(error)\x0d\n          });\x0d\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  try {\x0d\n    const serialized = serialize(error);\x0d\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return Buffer.concat([Buffer.from([kInspectedError])\x2C\x0d\n                        Buffer.from(inspect(error)\x2C 'utf8')]);\x0d\n}\x0d\n\x0d\nlet deserialize;\x0d\nfunction deserializeError(error) {\x0d\n  if (!deserialize) deserialize = require('v8').deserialize;\x0d\n  switch (error[0]) {\x0d\n    case kSerializedError: {\x0d\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\x0d\n      const ctor = errors[constructor];\x0d\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\x0d\n        value: { value: 'Error'\x2C configurable: true }\x2C\x0d\n        enumerable: true\x0d\n      });\x0d\n      return ObjectCreate(ctor.prototype\x2C properties);\x0d\n    }\x0d\n    case kSerializedObject:\x0d\n      return deserialize(error.subarray(1));\x0d\n    case kInspectedError: {\x0d\n      const buf = Buffer.from(error.buffer\x2C\x0d\n                              error.byteOffset + 1\x2C\x0d\n                              error.byteLength - 1);\x0d\n      return buf.toString('utf8');\x0d\n    }\x0d\n  }\x0d\n  require('assert').fail('This should not happen');\x0d\n}\x0d\n\x0d\nmodule.exports = { serializeError\x2C deserializeError };\x0d\n
code-source-info,0x204a9cbcfce,143,0,4324,C0O0C4O4324,,
code-creation,Function,10,207177,0x204a9cbd3ee,335, node:internal/error_serdes:1:1,0x204a9cbcf48,~
code-source-info,0x204a9cbd3ee,143,0,4324,C0O0C100O32C106O32C111O49C115O32C117O70C123O96C128O106C133O120C139O146C145O163C151O180C157O205C163O240C169O270C175O295C180O310C186O338C191O353C196O372C201O384C207O406C212O422C217O436C222O492C223O492C225O522C227O522C229O550C231O550C233O571C240O576C246O583C252O594C258O606C264O616C270O629C276O645C282O571C284O690C287O702C294O690C299O690C301O2171C302O2171C304O2376C305O2376C307O3408C308O3408C310O4268C317O4287C323O4303C329O4283C334O4323,,
code-creation,LazyCompile,10,207500,0x204a9cbe78e,914,Socket node:net:285:16,0x3a72c5e9728,~
code-source-info,0x204a9cbe78e
code-creation,LazyCompile,10,207701,0x204a9cbee5e,109,Duplex node:internal/streams/duplex:52:16,0x5da13b7fb0,~
script-source,55,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (const method of ObjectKeys(Writable.prototype)) {\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  Readable.call(this\x2C options);\x0d\n  Writable.call(this\x2C options);\x0d\n  this.allowHalfOpen = true;\x0d\n\x0d\n  if (options) {\x0d\n    if (options.readable === false)\x0d\n      this.readable = false;\x0d\n\x0d\n    if (options.writable === false)\x0d\n      this.writable = false;\x0d\n\x0d\n    if (options.allowHalfOpen === false) {\x0d\n      this.allowHalfOpen = false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable')\x2C\x0d\n  writableHighWaterMark:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark')\x2C\x0d\n  writableObjectMode:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode')\x2C\x0d\n  writableBuffer:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer')\x2C\x0d\n  writableLength:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength')\x2C\x0d\n  writableFinished:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished')\x2C\x0d\n  writableCorked:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked')\x2C\x0d\n  writableEnded:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded')\x2C\x0d\n  writableNeedDrain:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain')\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x204a9cbee5e,55,2002,2430,C0O2017C2O2028C7O2053C12O2060C17O2080C18O2086C23O2095C28O2095C34O2119C39O2128C44O2128C50O2152C51O2171C55O2184C59O2216C65O2225C70O2243C71O2257C75O2285C81O2294C86O2312C87O2326C91O2354C97O2368C102O2388C103O2407C108O2429,,
new,MemoryChunk,0x1dc8f480000,262144
code-creation,LazyCompile,10,208014,0x204a9cbf506,220,Readable node:internal/streams/readable:181:18,0x471378c230,~
script-source,56,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst BufferList = require('internal/streams/buffer_list');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst kPaused = Symbol('kPaused');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream.\x0d\n  // These options can be provided separately as readableXXX and writableXXX.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.readableObjectMode);\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // A linked list is used to store data chunks instead of an array because the\x0d\n  // linked list can remove elements from the beginning faster than\x0d\n  // array.shift().\x0d\n  this.buffer = new BufferList();\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n  this.flowing = null;\x0d\n  this.ended = false;\x0d\n  this.endEmitted = false;\x0d\n  this.reading = false;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  this.needReadable = false;\x0d\n  this.emittedReadable = false;\x0d\n  this.readableListening = false;\x0d\n  this.resumeScheduled = false;\x0d\n  this[kPaused] = null;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n  this.multiAwaitDrain = false;\x0d\n\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  this.readingMore = false;\x0d\n\x0d\n  this.dataEmitted = false;\x0d\n\x0d\n  this.decoder = null;\x0d\n  this.encoding = null;\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the ReadableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = this instanceof Stream.Duplex;\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal && !isDuplex)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    if (this._readableState.needReadable) {\x0d\n      maybeReadMore(this\x2C this._readableState);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\x0d\n  debug('readableAddChunk'\x2C chunk);\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let err;\x0d\n  if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      encoding = encoding || state.defaultEncoding;\x0d\n      if (state.encoding !== encoding) {\x0d\n        if (addToFront && state.encoding) {\x0d\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n          // the string in the BufferList with the state encoding.\x0d\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n        } else {\x0d\n          chunk = Buffer.from(chunk\x2C encoding);\x0d\n          encoding = '';\x0d\n        }\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = '';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = '';\x0d\n    } else if (chunk != null) {\x0d\n      err = new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    errorOrDestroy(stream\x2C err);\x0d\n  } else if (chunk === null) {\x0d\n    state.reading = false;\x0d\n    onEofChunk(stream\x2C state);\x0d\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\x0d\n    if (addToFront) {\x0d\n      if (state.endEmitted)\x0d\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n      else\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n    } else if (state.ended) {\x0d\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    } else if (state.destroyed || state.errored) {\x0d\n      return false;\x0d\n    } else {\x0d\n      state.reading = false;\x0d\n      if (state.decoder && !encoding) {\x0d\n        chunk = state.decoder.write(chunk);\x0d\n        if (state.objectMode || chunk.length !== 0)\x0d\n          addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n        else\x0d\n          maybeReadMore(stream\x2C state);\x0d\n      } else {\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n      }\x0d\n    }\x0d\n  } else if (!addToFront) {\x0d\n    state.reading = false;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n  }\x0d\n\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return !state.ended &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if (state.flowing && state.length === 0 && !state.sync &&\x0d\n      stream.listenerCount('data') > 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n    state.dataEmitted = true;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += state.objectMode ? 1 : chunk.length;\x0d\n    if (addToFront)\x0d\n      state.buffer.unshift(chunk);\x0d\n    else\x0d\n      state.buffer.push(chunk);\x0d\n\x0d\n    if (state.needReadable)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return state[kPaused] === true || state.flowing === false;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  this._readableState.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  this._readableState.encoding = this._readableState.decoder.encoding;\x0d\n\x0d\n  const buffer = this._readableState.buffer;\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of buffer) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  buffer.clear();\x0d\n  if (content !== '')\x0d\n    buffer.push(content);\x0d\n  this._readableState.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n >= MAX_HWM) {\x0d\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\x0d\n    n = MAX_HWM;\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && state.ended))\x0d\n    return 0;\x0d\n  if (state.objectMode)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if (state.flowing && state.length)\x0d\n      return state.buffer.first().length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return state.ended ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state.emittedReadable = false;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      state.needReadable &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       state.ended)) {\x0d\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\x0d\n    if (state.length === 0 && state.ended)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && state.ended) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = state.needReadable;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if (state.ended || state.reading || state.destroyed || state.errored ||\x0d\n      !state.constructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state.reading = true;\x0d\n    state.sync = true;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // Call internal read method\x0d\n    this._read(state.highWaterMark);\x0d\n\x0d\n    state.sync = false;\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if (!state.reading)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state.needReadable = state.length <= state.highWaterMark;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if (!state.ended)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && state.ended)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null) {\x0d\n    state.dataEmitted = true;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if (state.ended) return;\x0d\n  if (state.decoder) {\x0d\n    const chunk = state.decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += state.objectMode ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state.ended = true;\x0d\n\x0d\n  if (state.sync) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state.needReadable = false;\x0d\n    state.emittedReadable = true;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\x0d\n  state.needReadable = false;\x0d\n  if (!state.emittedReadable) {\x0d\n    debug('emitReadable'\x2C state.flowing);\x0d\n    state.emittedReadable = true;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\x0d\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\x0d\n    stream.emit('readable');\x0d\n    state.emittedReadable = false;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state.needReadable =\x0d\n    !state.flowing &&\x0d\n    !state.ended &&\x0d\n    state.length <= state.highWaterMark;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if (!state.readingMore && state.constructed) {\x0d\n    state.readingMore = true;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while (!state.reading && !state.ended &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          (state.flowing && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state.readingMore = false;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if (!state.multiAwaitDrain) {\x0d\n      state.multiAwaitDrain = true;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if (state.endEmitted)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state.multiAwaitDrain = false;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (EE.listenerCount(dest\x2C 'error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    if (state.flowing) {\x0d\n      pause();\x0d\n    }\x0d\n  } else if (!state.flowing) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if (state.multiAwaitDrain) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      EE.listenerCount(src\x2C 'data')) {\x0d\n      src.resume();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state.readableListening = this.listenerCount('readable') > 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if (state.flowing !== false)\x0d\n      this.resume();\x0d\n  } else if (ev === 'readable') {\x0d\n    if (!state.endEmitted && !state.readableListening) {\x0d\n      state.readableListening = state.needReadable = true;\x0d\n      state.flowing = false;\x0d\n      state.emittedReadable = false;\x0d\n      debug('on readable'\x2C state.length\x2C state.reading);\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if (!state.reading) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n  state.readableListening = self.listenerCount('readable') > 0;\x0d\n\x0d\n  if (state.resumeScheduled && state[kPaused] === false) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state.flowing = true;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if (self.listenerCount('data') > 0) {\x0d\n    self.resume();\x0d\n  } else if (!state.readableListening) {\x0d\n    state.flowing = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if (!state.flowing) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state.flowing = !state.readableListening;\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kPaused] = false;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if (!state.resumeScheduled) {\x0d\n    state.resumeScheduled = true;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C state.reading);\x0d\n  if (!state.reading) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state.resumeScheduled = false;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if (state.flowing && !state.reading)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\x0d\n  if (this._readableState.flowing !== false) {\x0d\n    debug('pause');\x0d\n    this._readableState.flowing = false;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  this._readableState[kPaused] = true;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow'\x2C state.flowing);\x0d\n  while (state.flowing && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  const opts = {\x0d\n    destroyOnReturn: true\x2C\x0d\n    destroyOnError: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let error = state.errored;\x0d\n  let errorEmitted = state.errorEmitted;\x0d\n  let endEmitted = state.endEmitted;\x0d\n  let closeEmitted = state.closeEmitted;\x0d\n\x0d\n  stream\x0d\n    .on('readable'\x2C next)\x0d\n    .on('error'\x2C function(err) {\x0d\n      error = err;\x0d\n      errorEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('end'\x2C function() {\x0d\n      endEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('close'\x2C function() {\x0d\n      closeEmitted = true;\x0d\n      next.call(this);\x0d\n    });\x0d\n\x0d\n  let errorThrown = false;\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (errorEmitted) {\x0d\n        throw error;\x0d\n      } else if (endEmitted) {\x0d\n        break;\x0d\n      } else if (closeEmitted) {\x0d\n        break;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    if (opts.destroyOnError) {\x0d\n      destroyImpl.destroyer(stream\x2C err);\x0d\n    }\x0d\n    errorThrown = true;\x0d\n    throw err;\x0d\n  } finally {\x0d\n    if (!errorThrown && opts.destroyOnReturn) {\x0d\n      if (state.autoDestroy || !endEmitted) {\x0d\n        // TODO(ronag): ERR_PREMATURE_CLOSE?\x0d\n        destroyImpl.destroyer(stream\x2C null);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._readableState.readable !== false &&\x0d\n        (this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    get() {\x0d\n      return this[kPaused] !== false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPaused] = !!value;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let ret;\x0d\n  if (state.objectMode)\x0d\n    ret = state.buffer.shift();\x0d\n  else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if (state.decoder)\x0d\n      ret = state.buffer.join('');\x0d\n    else if (state.buffer.length === 1)\x0d\n      ret = state.buffer.first();\x0d\n    else\x0d\n      ret = state.buffer.concat(state.length);\x0d\n    state.buffer.clear();\x0d\n  } else {\x0d\n    // read part of list.\x0d\n    ret = state.buffer.consume(n\x2C state.decoder);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable'\x2C state.endEmitted);\x0d\n  if (!state.endEmitted) {\x0d\n    state.ended = true;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if (!state.errorEmitted && !state.closeEmitted &&\x0d\n      !state.endEmitted && state.length === 0) {\x0d\n    state.endEmitted = true;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0x204a9cbf506,56,6426,7336,C0O6426C9O6441C16O6452C21O6479C28O6486C33O6508C34O6667C41O6683C44O6690C48O6672C52O6703C71O6725C76O6723C80O6774C84O6813C92O6841C95O6862C99O6852C103O6894C111O6925C114O6949C118O6939C122O6984C130O7017C133O7043C137O7033C141O7071C149O7082C151O7099C158O7132C166O7099C171O7157C178O7164C186O7164C192O7190C199O7202C212O7202C219O7335,,
tick,0x7ff7c11d2c04,209691,0,0x0,3,0x7ff7c0812760,0x204a9cb8347,0x204a9cac881,0x204a9ca889b,0x204a9ca7d9e,0x204a9c95f27,0x204a9c95af2,0x204a9c949a3,0x204a9c9474d,0x3a72c5c654c,0x3a72c5c2065
code-creation,LazyCompile,10,209717,0x1dc8f483d6e,18,Stream node:internal/streams/legacy:10:16,0x471378ea90,~
script-source,57,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x1dc8f483d6e,57,136,171,C0O148C5O151C10O151C17O170,,
code-creation,LazyCompile,10,209973,0x1dc8f484636,354,ReadableState node:internal/streams/readable:78:23,0x471378c1e0,~
code-source-info,0x1dc8f
code-creation,LazyCompile,10,210099,0x1dc8f484a46,98,getHighWaterMark node:internal/streams/state:19:26,0x4713791578,~
script-source,60,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? 16 : 16 * 1024;\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n};\x0d\n
code-source-info,0x1dc8f484a46,60,442,862,C0O497C12O497C18O549C21O573C26O578C33O606C38O633C47O655C56O701C69O707C74O701C75O757C80O764C84O779C85O810C88O847C93O817C97O859,,
code-creation,LazyCompile,10,210186,0x1dc8f484cde,26,highWaterMarkFrom node:internal/streams/state:10:27,0x4713791418,~
code-source-info,0x1dc8f484cde,60,177,321,C0O228C7O260C15O281C19O299C25O318,,
code-creation,LazyCompile,10,210216,0x1dc8f484db6,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x4713791528,~
code-source-info,0x1dc8f484db6,60,357,413,C0O375C12O410,,
code-creation,LazyCompile,10,210255,0x1dc8f484e96,17,BufferList node:internal/streams/buffer_list:14:14,0x47137908d0,~
script-source,59,node:internal/streams/buffer_list,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolIterator\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nmodule.exports = class BufferList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  push(v) {\x0d\n    const entry = { data: v\x2C next: null };\x0d\n    if (this.length > 0)\x0d\n      this.tail.next = entry;\x0d\n    else\x0d\n      this.head = entry;\x0d\n    this.tail = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  unshift(v) {\x0d\n    const entry = { data: v\x2C next: this.head };\x0d\n    if (this.length === 0)\x0d\n      this.tail = entry;\x0d\n    this.head = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    if (this.length === 0)\x0d\n      return;\x0d\n    const ret = this.head.data;\x0d\n    if (this.length === 1)\x0d\n      this.head = this.tail = null;\x0d\n    else\x0d\n      this.head = this.head.next;\x0d\n    --this.length;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  clear() {\x0d\n    this.head = this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  join(s) {\x0d\n    if (this.length === 0)\x0d\n      return '';\x0d\n    let p = this.head;\x0d\n    let ret = '' + p.data;\x0d\n    while ((p = p.next) !== null)\x0d\n      ret += s + p.data;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  concat(n) {\x0d\n    if (this.length === 0)\x0d\n      return Buffer.alloc(0);\x0d\n    const ret = Buffer.allocUnsafe(n >>> 0);\x0d\n    let p = this.head;\x0d\n    let i = 0;\x0d\n    while (p) {\x0d\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\x0d\n      i += p.data.length;\x0d\n      p = p.next;\x0d\n    }\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes or characters from the buffered data.\x0d\n  consume(n\x2C hasStrings) {\x0d\n    const data = this.head.data;\x0d\n    if (n < data.length) {\x0d\n      // `slice` is the same for buffers and strings.\x0d\n      const slice = data.slice(0\x2C n);\x0d\n      this.head.data = data.slice(n);\x0d\n      return slice;\x0d\n    }\x0d\n    if (n === data.length) {\x0d\n      // First chunk is a perfect match.\x0d\n      return this.shift();\x0d\n    }\x0d\n    // Result spans more than one buffer.\x0d\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\x0d\n  }\x0d\n\x0d\n  first() {\x0d\n    return this.head.data;\x0d\n  }\x0d\n\x0d\n  *[SymbolIterator]() {\x0d\n    for (let p = this.head; p; p = p.next) {\x0d\n      yield p.data;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of characters from the buffered data.\x0d\n  _getString(n) {\x0d\n    let ret = '';\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const str = p.data;\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n      } else {\x0d\n        if (n === str.length) {\x0d\n          ret += str;\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\x0d\n          this.head = p;\x0d\n          p.data = StringPrototypeSlice(str\x2C n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes from the buffered data.\x0d\n  _getBuffer(n) {\x0d\n    const ret = Buffer.allocUnsafe(n);\x0d\n    const retLen = n;\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const buf = p.data;\x0d\n      if (n > buf.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n        n -= buf.length;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C\x0d\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\x0d\n                                 retLen - n);\x0d\n          this.head = p;\x0d\n          p.data = buf.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x0d\n    });\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x1dc8f484e96,59,278,355,C0O288C1O298C5O311C6O321C10O334C11O346C16O354,,
tick,0x7ffdf67ba8cf,210500,0,0x0,3,0x7ff7c0812760,0x1dc8f4846a9,0x204a9cbf54d,0x204a9cbee7a,0x204a9cbe8fe,0x204a9cb8347,0x204a9cac881,0x204a9ca889b,0x204a9ca7d9e,0x204a9c95f27,0x204a9c95af2,0x204a9c949a3,0x204a9c9474d,0x3a72c5c654c,0x3a72c5c2065
code-creation,LazyCompile,10,210577,0x1dc8f4855e6,98,construct node:internal/streams/destroy:225:19,0x5da13b6c70,~
script-source,54,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w.destroyed = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.destroyed = true;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if (!s.constructed) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w.closed = true;\x0d\n    }\x0d\n    if (r) {\x0d\n      r.closed = true;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const result = self._destroy(err || null\x2C onDestroy);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            process.nextTick(onDestroy\x2C null);\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            process.nextTick(onDestroy\x2C err);\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w.closeEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.closeEmitted = true;\x0d\n  }\x0d\n\x0d\n  if ((w && w.emitClose) || (r && r.emitClose)) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.errorEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.errorEmitted = true;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = false;\x0d\n    r.endEmitted = false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.ended = false;\x0d\n    w.ending = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.finished = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if ((r && r.autoDestroy) || (w && w.autoDestroy))\x0d\n    stream.destroy(err);\x0d\n  else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = false;\x0d\n  }\x0d\n  if (w) {\x0d\n    w.constructed = false;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r.constructed = true;\x0d\n    }\x0d\n    if (w) {\x0d\n      w.constructed = true;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      process.nextTick(emitConstructNT\x2C stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const result = stream._construct(onConstruct);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onConstruct(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitConstructNT(stream) {\x0d\n  stream.emit(kConstruct);\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream && stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream) return;\x0d\n  if (isRequest(stream)) return stream.abort();\x0d\n  if (isRequest(stream.req)) return stream.req.abort();\x0d\n  if (typeof stream.destroy === 'function') return stream.destroy(err);\x0d\n  if (typeof stream.close === 'function') return stream.close();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x0d\n};\x0d\n
code-source-info,0x1dc8f4855e6,54,4850,5261,C0O4886C8O4920C9O4927C10O4955C15O4991C20O5012C24O5026C25O5040C29O5057C33O5071C34O5085C38O5111C45O5116C48O5111C54O5149C61O5163C64O5149C72O5175C77O5202C78O5209C79O5220C82O5228C90O5228C97O5260,,
code-creation,LazyCompile,10,210994,0x1dc8f4862be,266,Writable node:internal/streams/writable:219:18,0x471379aec8,~
script-source,63,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinished = Symbol('kOnFinished');\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream\x2C\x0d\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.writableObjectMode);\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // if _final has been called.\x0d\n  this.finalCalled = false;\x0d\n\x0d\n  // drain event flag.\x0d\n  this.needDrain = false;\x0d\n  // At the start of calling end()\x0d\n  this.ending = false;\x0d\n  // When end() has been called\x2C and returned.\x0d\n  this.ended = false;\x0d\n  // When 'finish' is emitted.\x0d\n  this.finished = false;\x0d\n\x0d\n  // Has it been destroyed\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  const noDecode = !!(options && options.decodeStrings === false);\x0d\n  this.decodeStrings = !noDecode;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  this.writing = false;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  this.bufferProcessing = false;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  this.writecb = null;\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  this.afterWriteTickInfo = null;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  this.prefinished = false;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  this[kOnFinished] = [];\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state.buffered = [];\x0d\n  state.bufferedIndex = 0;\x0d\n  state.allBuffers = true;\x0d\n  state.allNoop = true;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  get() {\x0d\n    return this.buffered.length - this.bufferedIndex;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction Writable(options) {\x0d\n  // Writable ctor is applied to Duplexes\x2C too.\x0d\n  // `realHasInstance` is necessary because using plain `instanceof`\x0d\n  // would return false\x2C as no `_writableState` property is attached.\x0d\n\x0d\n  // Trying to use the custom `instanceof` for Writable here will also break the\x0d\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\x0d\n  // `_writableState` that would lead to infinite recursion.\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the WritableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = (this instanceof Stream.Duplex);\x0d\n\x0d\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    const state = this._writableState;\x0d\n\x0d\n    if (!state.writing) {\x0d\n      clearBuffer(this\x2C state);\x0d\n    }\x0d\n\x0d\n    finishMaybe(this\x2C state);\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = state.defaultEncoding;\x0d\n  } else {\x0d\n    if (!encoding)\x0d\n      encoding = state.defaultEncoding;\x0d\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (typeof cb !== 'function')\x0d\n      cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  } else if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      if (state.decodeStrings !== false) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (state.ending) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  this._writableState.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.writing)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = state.objectMode ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  // stream._write resets state.length\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n  // We must ensure that previous needDrain will not be reset to false.\x0d\n  if (!ret)\x0d\n    state.needDrain = true;\x0d\n\x0d\n  if (state.writing || state.corked || state.errored || !state.constructed) {\x0d\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\x0d\n    if (state.allBuffers && encoding !== 'buffer') {\x0d\n      state.allBuffers = false;\x0d\n    }\x0d\n    if (state.allNoop && callback !== nop) {\x0d\n      state.allNoop = false;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    state.writecb = callback;\x0d\n    state.writing = true;\x0d\n    state.sync = true;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state.sync = false;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && !state.errored && !state.destroyed;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  state.writecb = cb;\x0d\n  state.writing = true;\x0d\n  state.sync = true;\x0d\n  if (state.destroyed)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n  const sync = state.sync;\x0d\n  const cb = state.writecb;\x0d\n\x0d\n  if (typeof cb !== 'function') {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  state.writing = false;\x0d\n  state.writecb = null;\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (!state.errored) {\x0d\n      state.errored = er;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if (state.buffered.length > state.bufferedIndex) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (state.afterWriteTickInfo !== null &&\x0d\n          state.afterWriteTickInfo.cb === cb) {\x0d\n        state.afterWriteTickInfo.count++;\x0d\n      } else {\x0d\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state.afterWriteTickInfo = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\x0d\n    state.needDrain;\x0d\n  if (needDrain) {\x0d\n    state.needDrain = false;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb();\x0d\n  }\x0d\n\x0d\n  if (state.destroyed) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  finishMaybe(stream\x2C state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if (state.writing) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n    const { chunk\x2C callback } = state.buffered[n];\x0d\n    const len = state.objectMode ? 1 : chunk.length;\x0d\n    state.length -= len;\x0d\n    callback(new ERR_STREAM_DESTROYED('write'));\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](new ERR_STREAM_DESTROYED('end'));\x0d\n  }\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if (state.corked ||\x0d\n      state.bufferProcessing ||\x0d\n      state.destroyed ||\x0d\n      !state.constructed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state.bufferProcessing = true;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = state.allNoop ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = state.allNoop && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = state.allBuffers;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && !state.writing);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state.bufferProcessing = false;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk !== null && chunk !== undefined) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if (state.corked) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if (!state.errored && !state.ending) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state.ending = true;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state.ended = true;\x0d\n  } else if (state.finished) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err || state.finished) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else {\x0d\n      state[kOnFinished].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (state.ending &&\x0d\n          state.constructed &&\x0d\n          state.length === 0 &&\x0d\n          !state.errored &&\x0d\n          state.buffered.length === 0 &&\x0d\n          !state.finished &&\x0d\n          !state.writing &&\x0d\n          !state.errorEmitted &&\x0d\n          !state.closeEmitted);\x0d\n}\x0d\n\x0d\nfunction callFinal(stream\x2C state) {\x0d\n  let called = false;\x0d\n\x0d\n  function onFinish(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    state.pendingcb--;\x0d\n    if (err) {\x0d\n      const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n        onfinishCallbacks[i](err);\x0d\n      }\x0d\n      errorOrDestroy(stream\x2C err\x2C state.sync);\x0d\n    } else if (needFinish(state)) {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n      // Backwards compat. Don't check state.sync here.\x0d\n      // Some streams assume 'finish' will be emitted\x0d\n      // asynchronously relative to _final callback.\x0d\n      state.pendingcb++;\x0d\n      process.nextTick(finish\x2C stream\x2C state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.sync = true;\x0d\n  state.pendingcb++;\x0d\n\x0d\n  try {\x0d\n    const result = stream._final(onFinish);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onFinish(err);\x0d\n  }\x0d\n\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if (!state.prefinished && !state.finalCalled) {\x0d\n    if (typeof stream._final === 'function' && !state.destroyed) {\x0d\n      state.finalCalled = true;\x0d\n      callFinal(stream\x2C state);\x0d\n    } else {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0 && needFinish(state)) {\x0d\n      state.pendingcb++;\x0d\n      if (sync) {\x0d\n        process.nextTick(finish\x2C stream\x2C state);\x0d\n      } else {\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state.finished = true;\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i]();\x0d\n  }\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if (state.autoDestroy) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\x0d\n        !w.ending && !w.ended;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.finished : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.getBuffer();\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.ending : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    get() {\x0d\n      const wState = this._writableState;\x0d\n      if (!wState) return false;\x0d\n      return !wState.destroyed && !wState.ending && wState.needDrain;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.corked : 0;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.length;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if (!state.destroyed &&\x0d\n    (state.bufferedIndex < state.buffered.length ||\x0d\n      state[kOnFinished].length)) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n
code-source-info,0x1dc8f4862be,63,7627,9195,C0O7627C9O8212C16O8229C19O8236C23O8218C27O8250C33O8268C44O8268C51O8325C58O8332C63O8354C64O8360C83O8382C88O8380C92O8431C96O8470C104O8499C107O8521C111O8511C115O8554C123O8584C126O8607C130O8597C134O8641C142O8672C145O8696C149O8686C153O8731C161O8760C164O8782C168O8772C172O8815C180O8848C183O8874C187O8864C191O8902C197O8917C204O8950C212O8917C217O8975C224O8982C232O8982C238O9008C245O9020C258O9020C265O9194,,
code-creation,LazyCompile,10,212098,0x1dc8f48832e,341,WritableState node:internal/streams/writable:77:23,0x471379ad68,~
code-source-info,0x1dc8f48832e,63,2558,7182,C0O2898C6O2938C8O2967C11O2974C15O2956C20O3086C25O3107C27O3126C33O3102C37O3144C41O3186C52O3210C54O3229C60O3179C64O3443C69O3464C73O3479C88O3479C97O3553C102O3553C106O3462C110O3623C111O3640C115O3678C116O3693C120O3741C121O3753C125O3813C126O3824C130O3868C131O3882C135O3924C136O3939C140O4143C144O4165C150O4179C156O4194C158O4216C159O4213C163O4429C168O4453C170O4472C178O4450C182O4655C183O4667C187O4734C188O4747C192O4827C193O4839C197O5109C198O5119C202O5327C203O5349C207O5418C210O5441C217O5441C223O5431C227O5544C228O5557C232O5632C233O5646C237O5765C238O5789C242O5802C245O5802C249O5933C250O5948C254O6144C255O6161C259O6303C260O6320C264O6410C265O6428C269O6502C271O6520C277O6539C283O6549C287O6517C291O6639C293O6659C299O6678C305O6690C309O6656C313O6918C314O6931C318O7004C319O7016C323O7124C324O7142C328O7156C330O7161C335O7174C340O7181,,
code-creation,LazyCompile,10,212292,0x1dc8f48873e,23,resetBuffer node:internal/streams/writable:202:21,0x471379adb8,~
code-source-info,0x1dc8f48873e,63,7206,7323,C0O7219C2O7234C6O7243C7O7263C11O7271C12O7288C16O7299C17O7313C22O7322,,
tick,0x7ff7c094f0a1,212345,0,0x0,0,0x7ff7c0a5bed0,0x1dc8f488463,0x1dc8f486311,0x204a9cbee8a,0x204a9cbe8fe,0x204a9cb8347,0x204a9cac881,0x204a9ca889b,0x204a9ca7d9e,0x204a9c95f27,0x204a9c95af2,0x204a9c949a3,0x204a9c9474d,0x3a72c5c654c,0x3a72c5c2065
code-creation,LazyCompile,10,212372,0x1dc8f488846,21,set node:internal/streams/readable:1174:8,0x471378d1d8,~
code-source-info,0x1dc8f488846,56,36985,37117,C0O37037C6O37069C13O37097C15O37093C20O37116,,
code-creation,LazyCompile,10,212429,0x1dc8f48899e,131,createHandle node:net:137:22,0x3a72c5e94f8,~
code-source-info,0x1dc8f48899e,101,3745,4121,C0O3766C13O3766C18O3810C23O3810C28O3834C30O3843C35O3862C42O3886C46O3898C49O3912C57O3921C60O3935C67O3869C72O3949C73O3960C75O3969C80O3987C87O4010C91O4022C94O4035C102O4044C105O4057C112O3994C117O4071C118O4082C125O4088C130O4082,,
code-creation,LazyCompile,10,212487,0x1dc8f488b3e,14,set node:net:1754:6,0x3a72c5eb538,~
code-source-info,0x1dc8f488b3e,101,48768,48801,C0O48774C2O48786C7O48795C13O48799,,
code-creation,LazyCompile,10,212518,0x1dc8f488c2e,8,get node:net:1753:6,0x3a72c5eb4e8,~
code-source-info,0x1dc8f488c2e,101,48732,48760,C0O48737C2O48749C4O48748C7O48758,,
code-creation,LazyCompile,10,212598,0x1dc8f488dde,196,Readable.on node:internal/streams/readable:874:33,0x471378cb10,~
code-source-info,0x1dc8f488dde,56,28621,29547,C0O28647C5O28654C10O28664C15O28667C29O28667C35O28709C40O28730C42O28737C47O28922C55O28922C62O28948C65O28915C69O29044C75O29052C80O29075C85O29075C91O29095C93O29102C98O29136C104O29157C110O29185C112O29230C118O29209C122O29245C123O29259C127O29275C128O29297C132O29313C140O29340C145O29354C150O29313C155O29381C161O29400C164O29400C170O29445C176O29465C179O29473C187O29473C193O29533C195O29544,,
code-creation,LazyCompile,10,212686,0x1dc8f489056,135,initSocketHandle node:net:254:26,0x3a72c5e96d8,~
code-source-info,0x1dc8f489056,101,6586,7186,C0O6603C5O6603C9O6620C10O6635C14O6724C20O6745C27O6753C32O6767C36O6785C43O6802C45O6800C49O6821C51O6826C57O6864C62O6845C66O6843C70O6895C72O6900C74O6899C78O6915C80O6952C82O6957C84O6956C88O6977C90O7019C94O7038C99O7043C105O7077C106O7084C107O7094C109O7099C114O7108C118O7140C123O7148C128O7148C134O7185,,
code-creation,LazyCompile,10,212755,0x1dc8f489286,120,undestroy node:internal/streams/destroy:160:19,0x5da13b6bb0,~
code-source-info,0x1dc8f489286,54,3223,3849,C0O3246C5O3280C10O3301C14O3315C15O3329C19O3342C20O3351C24O3365C25O3380C29O3394C30O3406C34O3420C35O3430C39O3443C40O3458C44O3472C45O3482C49O3496C50O3504C54O3518C55O3531C59O3550C63O3564C64O3578C68O3591C69O3603C73O3617C74O3626C78O3640C79O3655C83O3669C84O3679C88O3692C89O3707C93O3721C94O3729C98O3743C99O3752C103O3766C104O3780C108O3794C109O3808C113O3822C114O3833C119O3848,,
code-creation,LazyCompile,10,212827,0x1dc8f489486,32,getNewAsyncId node:net:156:23,0x3a72c5e9548,~
code-source-info,0x1dc8f489486,101,4149,4268,C0O4163C4O4196C14O4230C17O4230C22O4252C27O4252C31O4265,,
code-creation,LazyCompile,10,212870,0x1dc8f489586,5,get node:internal/bootstrap/pre_execution:370:8,0x3318a258478,~
code-source-info,0x1dc8f489586,96,12136,12171,C0O12148C4O12164,,
code-creation,LazyCompile,10,212904,0x1dc8f48965e,5,get C:\\Users\\Malinconia\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:19:10,0x204a9cb8090,~
code-source-info,0x1dc8f48965e,140,392,404,C0O398C4O404,,
code-creation,Function,11,213353,0x2040104a5e0,1148,readPackageScope node:internal/modules/cjs/loader:321:26,0x3318a25b228,^
code-source-info,0x2040104a5e0,111,9239,9772,,,
code-creation,Function,11,213382,0x2040104aac0,216, node:vm:313:27,0x204a9cae208,^
code-source-info,0x2040104aac0,88,10064,10115,,,
code-creation,Function,11,213398,0x2040104ac00,72,isUint32 node:internal/validators:40:18,0x17449ffccc0,^
code-source-info,0x2040104ac00,15,835,882,,,
code-creation,Function,11,213415,0x2040104acc0,40,noop node:internal/util/debuglog:47:14,0x21794161ca0,^
code-source-info,0x2040104acc0,22,1465,1473,,,
code-creation,Function,11,213439,0x2040104ad60,1020,debuglog node:internal/util/debuglog:71:18,0x21794161d40,^
code-source-info,0x2040104ad60,22,2302,3328,,,
code-creation,Function,11,213457,0x2040104b1c0,252,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x17449fcfb20,^
code-source-info,0x2040104b1c0,9,7593,7692,,,
code-creation,Function,11,213473,0x2040104b320,72,isInt32 node:internal/validators:36:17,0x17449ffc7b0,^
code-source-info,0x2040104b320,15,769,814,,,
code-creation,Eval,10,213554,0x1dc8f489e2e,5, C:\\Users\\Malinconia\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x1dc8f489ce8,~
script-source,144,C:\\Users\\Malinconia\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js,'use strict'\n\nprocess.on('SIGINT'\x2C process.exit)\nprocess.on('SIGTERM'\x2C process.exit)\n
code-source-info,0x1dc8f489e2e,144,0,85,C0O0C4O85,,
code-creation,Function,10,213586,0x1dc8f489ece,56, C:\\Users\\Malinconia\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x1dc8f489da8,~
code-source-info,0x1dc8f489ece,144,0,85,C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84,,
code-creation,LazyCompile,10,213709,0x1dc8f48a5ae,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:522:36,0x3a72c5c4770,~
code-source-info,0x1dc8f48a5ae,96,17219,17447,C0O17227C8O17231C14O17277C17O17285C28O17285C34O17399C40O17399C45O17436C49O17446,,
code-creation,LazyCompile,10,213768,0x1dc8f48a6d6,80,executeUserEntryPoint node:internal/modules/run_main:70:31,0x204a9c93a78,~
code-source-info,0x1dc8f48a6d6,132,2231,2545,C7O2247C14O2251C22O2282C25O2282C30O2329C33O2329C38O2366C40O2391C45O2402C50O2391C56O2506C61O2513C73O2513C79O2544,,
code-creation,LazyCompile,10,213817,0x1dc8f48ab06,68,resolveMainPath node:internal/modules/run_main:15:25,0x204a9c93938,~
code-source-info,0x1dc8f48ab06,132,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,Function,11,214120,0x2040104b3e0,7720,realpathSync node:fs:2425:22,0x160e4c593f0,^
code-source-info,0x2040104b3e0,80,66755,70785,,,
code-creation,Function,11,214144,0x2040104d280,160,checkListener node:events:258:23,0x2179416b2f8,^
code-source-info,0x2040104d280,23,7884,7942,,,
code-creation,Function,11,214160,0x2040104d380,128,addListener node:events:618:58,0x2179416ba38,^
code-source-info,0x2040104d380,23,18854,18928,,,
tick,0x7ffdf681d014,214367,1,0x7ff7c02f7210,6,0x7ff7c0bf59a0,0x2040104c43e,0x204a9c99bc1,0x204a9c992b9,0x1dc8f48ab24,0x1dc8f48a6ef,0x3a72c5c2089
code-creation,LazyCompile,10,214406,0x1dc8f48b7fe,109,shouldUseESMLoader node:internal/modules/run_main:30:28,0x204a9c93988,~
code-source-info,0x1dc8f48b7fe,132,870,1445,C0O905C8O905C13O949C15O970C16O982C17O1027C25O1027C30O1085C32O1117C37O1134C38O1146C39O1196C45O1212C51O1212C58O1260C59O1272C60O1276C66O1293C72O1293C79O1341C80O1354C81O1370C86O1370C91O1401C93O1419C98O1424C105O1429C108O1442,,
code-creation,LazyCompile,10,214536,0x1dc8f48ba76,70,runMainESM node:internal/modules/run_main:47:20,0x204a9c939d8,~
code-source-info,0x1dc8f48ba76,132,1468,1817,C0O1468C12O1504C20O1504C25O1492C30O1573C38O1573C43O1555C49O1603C54O1621C59O1621C64O1603C69O1816,,
code-creation,LazyCompile,10,214604,0x1dc8f48bcb6,222,loadESM node:internal/process/esm_loader:85:41,0x3318a261870,~
code-source-info,0x1dc8f48bcb6,113,2652,2979,C10O2652C21O2679C24O2685C35O2679C58O2710C60O2725C63O2716C75O2710C113O2761C120O2765C125O2813C130O2821C138O2821C143O2850C154O2857C155O2870C163O2870C168O2895C178O2896C197O2978,,
code-creation,LazyCompile,10,214679,0x1dc8f48c2d6,284,initializeLoader node:internal/process/esm_loader:50:32,0x3318a261740,~
code-source-info,0x1dc8f48c2d6,113,1490,2608,C10O1490C18O1525C24O1525C29O1506C34O1690C37O1690C42O1755C48O1763C59O1770C60O1812C66O1812C71O1784C76O1841C79O1841C83O1900C88O1919C91O1933C96O1933C103O1939C110O1923C111O1964C114O2229C119O2229C125O2371C132O2404C135O2404C140O2422C147O2434C152O2434C163O2377C176O2347C202O2563C207O2579C212O2579C225O2563C259O2607,,
code-creation,LazyCompile,10,214757,0x1dc8f48c5c6,175,handleMainPromise node:internal/modules/run_main:58:33,0x204a9c93a28,~
code-source-info,0x1dc8f48c5c6,132,1853,2010,C10O1853C18O1868C21O1876C31O1887C34O1876C43O1921C53O1928C90O1963C93O1971C103O1983C106O1971C150O2009,,
code-creation,LazyCompile,10,214853,0x1dc8f48c806,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x29f2e35aa00,~
code-source-info,0x1dc8f48c
code-creation,LazyCompile,10,214934,0x1dc8f48cade,43,shift node:internal/fixed_queue:108:8,0x29f2e35fd20,~
code-source-info,0x1dc8f48cade,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,214975,0x1dc8f48cc26,54,shift node:internal/fixed_queue:80:8,0x29f2e35fb30,~
code-source-info,0x1dc8f48cc26,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,215021,0x1dc8f48cd5e,42,emitBeforeScript node:internal/async_hooks:510:26,0x17449ff8c78,~
code-source-info,0x1dc8f48cd5e,13,17372,17528,C0O17413C12O17413C17O17471C22O17484C25O17475C31O17499C36O17499C41O17527,,
code-creation,LazyCompile,10,215071,0x1dc8f48ceae,180,pushAsyncContext node:internal/async_hooks:540:26,0x17449ff8e20,~
code-source-info,0x1dc8f48ceae,13,18046,18601,C0O18102C7O18120C9O18119C13O18138C20O18172C24O18187C26O18198C32O18205C35O18216C40O18232C44O18202C49O18245C54O18252C59O18295C60O18299C65O18310C72O18333C78O18340C83O18356C85O18355C88O18338C92O18379C97O18390C104O18413C107O18417C113O18424C118O18440C120O18439C123O18422C127O18461C134O18479C142O18492C146O18499C153O18515C158O18534C162O18548C169O18564C174O18581C179O18600,,
code-creation,LazyCompile,10,215154,0x1dc8f48d0c6,125, node:internal/child_process:708:22,0x3318a24ee58,~
code-source-info,0x1dc8f48d0c6,100,20124,20501,C0O20139C3O20151C12O20170C20O20170C27O20205C28O20212C29O20239C32O20246C41O20254C43O20253C47O20288C52O20316C54O20329C55O20336C56O20359C58O20364C60O20364C65O20390C75O20410C85O20432C89O20390C94O20375C99O20346C102O20456C105O20463C114O20471C119O20489C124O20500,,
code-creation,LazyCompile,10,215212,0x1dc8f48d286,31,listenerCount node:events:854:23,0x2179416bf80,~
code-source-info,0x1dc8f48d286,23,25515,25797,C0O25547C5O25561C7O25613C9O25619C13O25634C17O25681C19O25690C20O25703C24O25760C28O25767C29O25785C30O25794,,
code-creation,LazyCompile,10,215247,0x1dc8f48d38e,13,destroyHooksExist node:internal/async_hooks:487:27,0x17449ff8b88,~
code-source-info,0x1dc8f48d38e,13,16798,16835,C0O16806C5O16822C8O16813C12O16832,,
code-creation,LazyCompile,10,215278,0x1dc8f48d47e,32,emitAfterScript node:internal/async_hooks:518:25,0x17449ff8cc8,~
code-source-info,0x1dc8f48d47e,13,17558,17659,C0O17573C5O17586C8O17577C14O17600C19O17600C23O17631C26O17631C31O17658,,
code-creation,LazyCompile,10,215328,0x1dc8f48d5e6,167,popAsyncContext node:internal/async_hooks:554:25,0x17449ff8e70,~
code-source-info,0x1dc8f48d5e6,13,18694,19296,C0O18729C7O18747C9O18746C13O18765C14O18781C19O18788C20O18801C21O18807C24O18811C31O18834C36O18850C38O18849C44O18869C49O18953C54O18960C58O18986C59O19012C61O19024C65O19032C72O19048C77O19069C80O19080C87O19098C90O19095C93O19067C97O19112C104O19128C109O19147C112O19158C119O19176C122O19185C125O19173C128O19145C132O19194C137O19220C142O19220C146O19230C153O19248C158O19262C162O19275C163O19289C166O19293,,
code-creation,LazyCompile,10,215386,0x1dc8f48d7c6,13,enabledHooksExist node:internal/async_hooks:475:27,0x17449ff8a78,~
code-source-info,0x1dc8f48d7c6,13,16609,16644,C0O16617C5O16633C8O16624C12O16641,,
code-creation,LazyCompile,10,215458,0x1dc8f48d976,77, node:internal/modules/run_main:51:29,0x1dc8f48b9b0,~
code-source-info,0x1dc8f48d976,132,1629,1811,C0O1664C7O1669C15O1669C24O1699C30O1699C35O1722C44O1762C55O1786C60O1786C71O1768C76O1806,,
code-creation,LazyCompile,10,215539,0x1dc8f48dbf6,283,pathToFileURL node:internal/url:1458:23,0x29f2e379198,~
code-source-info,0x1dc8f48dbf
code-creation,LazyCompile,10,215627,0x1dc8f48dec6,136,URL node:internal/url:621:14,0x29f2e377fb0,~
code-source-info,0x1dc8f48dec6,39,17620,18024,C13O17688C17O17717C19O17736C23O17769C30O17784C40O17798C42O17797C46O17820C50O17825C57O17840C60O17836C65O17834C69O17859C85O17912C93O17912C103O17969C117O17969C129O17859C135O18023,,
code-creation,LazyCompile,10,215677,0x1dc8f48e0a6,51,URLContext node:internal/url:161:14,0x29f2e377750,~
code-source-info,0x1dc8f48e0a6,39,3883,4105,C0O3893C1O3904C5O3914C7O3926C11O3938C13O3952C17O3963C19O3977C23O3988C24O3998C28O4011C29O4021C33O4034C35O4044C39O4055C40O4066C44O4079C45O4093C50O4104,,
code-creation,LazyCompile,10,215767,0x1dc8f48e2ee,190,onParseComplete node:internal/url:533:25,0x29f2e377ce0,~
code-source-info,0x1dc8f48e2ee,39,14738,15424,C0O14854C2O14859C4O14858C8O14872C10O14882C14O14894C16O14905C20O14920C22O14944C24O14942C29O14968C43O14933C47O14994C49O15018C51O15016C56O15042C70O15007C74O15068C76O15077C80O15088C82O15108C84O15106C89O15128C101O15136C103O15097C107O15150C109O15160C113O15172C115O15185C119O15200C121O15209C125O15220C127O15230C129O15229C134O15284C136O15289C141O15309C144O15305C149O15303C153O15333C155O15338C157O15337C163O15352C168O15361C172O15377C177O15399C179O15398C183O15377C189O15423,,
code-creation,LazyCompile,10,215926,0x1dc8f48e776,889,URLSearchParams node:internal/url:183:14,0x29f2e3777f0,~
code-source-info,0x1dc8f48e
code-creation,LazyCompile,10,216045,0x1dc8f48ed56,35,initSearchParams node:internal/url:1019:26,0x29f2e378cf8,~
code-source-info,0x1dc8f48ed56,39,28156,28277,C0O28173C4O28191C6O28195C11O28209C15O28220C16O28227C17O28236C19O28240C25O28256C29O28254C34O28276,,
code-creation,LazyCompile,10,216115,0x1dc8f48ef06,199,encodePathChars node:internal/url:1443:25,0x29f2e379148,~
code-source-info,0x1dc8f48ef06,39,40900,41605,C0O40916C8O40920C15O40965C22O41009C31O40976C38O41091C46O41109C52O41109C59O41155C66O41199C75O41166C82O41226C90O41230C97O41276C104O41320C113O41287C120O41345C128O41349C135O41395C142O41439C151O41406C158O41471C166O41475C173O41521C180O41565C189O41532C196O41586C198O41602,,
code-creation,LazyCompile,10,216181,0x1dc8f48f136,70,set pathname node:internal/url:887:15,0x29f2e3788e8,~
code-source-info,0x1dc8f48f136,39,24614,24823,C0O24663C5O24686C9O24695C11O24694C16O24717C17O24724C18O24730C29O24742C38O24765C40O24764C49O24806C54O24806C63O24730C69O24822,,
code-creation,LazyCompile,10,216221,0x1dc8f48f286,31, node:internal/url:638:21,0x29f2e378088,~
code-source-info,0x1dc8f48f286,39,18137,18214,C0O18147C4O18160C6O18159C10O18169C19O18177C21O18175C26O18203C30O18209,,
code-creation,LazyCompile,10,216281,0x1dc8f48f3b6,108,onParsePathComplete node:internal/url:592:29,0x29f2e377ec0,~
code-source-info,0x1dc8f48f3b6,39,16756,17238,C0O16876C2O16881C4O16880C8O16894C10O16907C12O16905C17O16927C22O16941C24O16950C28O16963C35O16976C40O16973C46O17013C48O17022C52O17033C59O17047C61O17046C66O17043C70O17129C72O17142C74O17140C79O17162C84O17176C86O17185C90O17198C97O17211C102O17208C107O17237,,
tick,0x7ff7c11f0249,216376,0,0x0,3,0x7ff7c08240c0,0x7ff7c026c5e0,0x1dc8f48f175,0x7ff7c0cc8fc1,0x1dc8f48dd0a,0x1dc8f48d994,0x1dc8f48bcf5,0x7ff7c0c8b243,0x7ff7c0274770,0x1dc8f48c90b
code-creation,LazyCompile,10,216399,0x1dc8f48f556,18,get href node:internal/url:736:11,0x29f2e378218,~
code-source-info,0x1dc8f48f556,39,20900,20940,C0O20910C4O20922C6O20921C12O20930C17O20935,,
code-creation,LazyCompile,10,216483,0x1dc8f48f80e,393, node:internal/url:684:12,0x29f2e378178,~
code-source-info,0x1dc8f48f80e
code-creation,LazyCompile,10,216613,0x1dc8f48fc9e,308,import node:internal/modules/esm/loader:372:15,0x3318a262f20,~
code-source-info,0x1dc8f48fc9e,114,11547,12117,C10O11547C18O11611C25O11611C30O11642C32O11655C41O11669C50O11714C55O11740C64O11740C70O11778C81O11973C90O11793C98O11783C100O11783C116O11821C123O11844C137O11821C143O11887C154O11888C160O11922C170O11923C175O11814C186O11765C201O12001C212O12022C217O12018C223O12007C235O12001C261O12055C270O12108C283O12112,,
code-creation,LazyCompile,10,216702,0x1dc8f490006,251,getModuleJob node:internal/modules/esm/loader:285:21,0x3318a262ed0,~
code-source-info,0x1dc8f490006,114,8519,9368,C10O8519C18O8571C20O8604C22O8613C26O8622C33O8629C38O8796C49O8847C54O8847C59O8834C65O8940C82O8940C95O8929C118O8906C123O8914C128O9021C133O9031C138O9057C143O9031C150O9132C154O9177C159O9187C166O9213C176O9187C181O9235C185O9267C187O9278C208O9294C214O9352C226O9363,,
code-creation,LazyCompile,10,216802,0x1dc8f49045e,425,resolve node:internal/modules/esm/loader:556:16,0x3318a263060,~
code-source-info,0x1dc8f49045e,114,17002,18544,C10O17002C32O17068C37O17068C75O17114C79O17146C91O17217C94O17217C100O17249C120O17255C125O17249C126O17379C133O17430C135O17435C140O17445C144O17474C146O17479C150O17490C157O17497C168O17542C174O17552C178O17604C185O17641C191O17662C197O17689C207O17587C220O17581C246O17749C252O17794C270O17800C275O17794C276O17929C281O17937C286O17964C297O18044C318O18050C323O18044C324O18195C330O18279C351O18285C356O18279C357O18424C366O18424C371O18496C378O18512C384O18527C400O18539,,
code-creation,LazyCompile,10,217042,0x1dc8f490ad6,939,defaultResolve node:internal/modules/esm/resolve:1128:30,0x3318a26b438,~
code-source-info,0x1dc8f490ad
code-creation,LazyCompile,10,217176,0x1dc8f493916,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:975:49,0x3318a26b258,~
code-source-info,0x1dc8f493916,118,32653,32792,C0O32670C2O32684C7O32692C8O32705C9O32709C10O32722C16O32726C21O32735C22O32747C23O32751C26O32758C30O32789,,
code-creation,LazyCompile,10,217223,0x1dc8f493a2e,81,isRelativeSpecifier node:internal/modules/esm/resolve:965:29,0x3318a26b208,~
code-source-info,0x1dc8f493a2e,118,32350,32601,C0O32367C1O32380C7O32384C12O32414C19O32421C26O32439C32O32443C37O32452C38O32464C39O32470C41O32483C47O32487C52O32519C59O32526C66O32544C72O32548C77O32557C78O32569C79O32585C80O32598,,
code-creation,LazyCompile,10,217281,0x1dc8f493bbe,15,get protocol node:internal/url:772:15,0x29f2e378358,~
code-source-info,0x1dc8f493bbe,39,21820,21863,C0O21830C4O21842C6O21841C10O21851C14O21858,,
code-creation,LazyCompile,10,217338,0x1dc8f493db6,191,checkIfDisallowedImport node:internal/modules/esm/resolve:1059:33,0x3318a26b348,~
code-source-info,0x1dc8f493db6,118,35531,36707,C0O35573C4O35619C16O35648C24O35619C29O35692C36O35701C41O35739C48O35748C53O35777C56O35781C62O35940C66O35972C73O35981C78O36015C85O36024C90O36060C106O36066C111O36060C112O36252C117O36273C127O36280C128O36297C133O36314C138O36314C145O36358C161O36364C166O36358C167O36538C183O36544C188O36538C190O36706,,
code-creation,LazyCompile,10,217405,0x1dc8f49401e,104,throwIfUnsupportedURLScheme node:internal/modules/esm/resolve:1107:37,0x3318a26b3e8,~
code-source-info,0x1dc8f49401e,118,36954,37425,C0O36996C4O37028C11O37037C16O37064C23O37073C30O37103C32O37158C39O37167C44O37199C51O37208C56O37248C63O37297C77O37356C88O37297C96O37254C101O37248C103O37424,,
code-creation,LazyCompile,10,217486,0x1dc8f4941d6,64,getConditionsSet node:internal/modules/esm/resolve:170:26,0x3318a26aa88,~
code-source-info,0x1dc8f4941d6,118,5549,5885,C0O5567C6O5614C8O5610C13O5641C18O5646C24O5681C40O5687C45O5681C46O5812C53O5819C58O5843C59O5852C63O5882,,
code-creation,LazyCompile,10,217550,0x1dc8f494356,171,moduleResolve node:internal/modules/esm/resolve:988:23,0x3318a26b2a8,~
code-source-info,0x1dc8f494356,118,32994,33785,C0O33069C7O33078C12O33103C19O33112C23O33235C25O33248C28O33252C34O33311C47O33322C55O33358C60O33384C66O33388C71O33404C83O33420C89O33407C99O33503C106O33514C115O33512C116O33556C120O33582C132O33593C138O33675C145O33684C150O33702C152O33718C153O33722C165O33729C170O33782,,
code-creation,LazyCompile,10,217675,0x1dc8f4946e6,490,finalizeResolution node:internal/modules/esm/resolve:397:28,0x3318a26ad08,~
code-source-info,0x1dc8f4946e
code-creation,LazyCompile,10,217787,0x1dc8f494b06,78,get pathname node:internal/url:878:15,0x29f2e378878,~
code-source-info,0x1dc8f494b06,39,24396,24596,C0O24418C4O24423C6O24422C10O24438C14O24447C16O24446C21O24480C27O24484C30O24488C31O24502C36O24507C42O24514C47O24528C49O24538C50O24544C57O24555C60O24578C68O24555C77O24591,,
code-creation,LazyCompile,10,217890,0x1dc8f494d5e,106,fileURLToPath node:internal/url:1416:23,0x29f2e3790f8,~
code-source-info,0x1dc8f494d5e,39,39764,40097,C0O39776C6O39811C13O39818C22O39841C25O39846C31O39872C49O39878C54O39872C55O39949C62O39958C67O39976C77O39982C82O39976C83O40021C92O40040C101O40068C105O40094,,
code-creation,LazyCompile,10,217959,0x1dc8f494f96,150,get origin node:internal/url:749:13,0x29f2e3782e8,~
code-source-info,0x1dc8f494f96,39,21222,21802,C0O21306C4O21311C6O21310C10O21338C59O21386C64O21391C70O21398C78O21435C83O21455C89O21459C95O21443C101O21465C105O21472C110O21570C116O21591C117O21703C122O21735C127O21747C132O21757C137O21710C142O21763C143O21776C149O21797,,
code-creation,LazyCompile,10,218045,0x1dc8f495266,261,getPathFromURLWin32 node:internal/url:1363:29,0x29f2e379058,~
code-source-info,0x1dc8f
code-creation,LazyCompile,10,218113,0x1dc8f49550e,19,get hostname node:internal/url:844:15,0x29f2e3786c8,~
code-source-info,0x1dc8f49550e,39,23572,23619,C0O23582C4O23594C6O23593C10O23603C18O23614,,
code-creation,LazyCompile,10,218182,0x1dc8f495886,30,tryStatSync node:internal/modules/esm/resolve:189:3,0x3318a26b488,~
code-source-info,0x1dc8f495886,118,6098,6164,C0O6153C5O6117C10O6108C21O6157C24O6153C29O6164,,
code-creation,LazyCompile,10,218238,0x1dc8f495a3e,123,statSync node:fs:1543:18,0x160e4c584e8,~
code-source-info,0x1dc8f495a3e,80,40711,41125,C7O40711C16O40774C21O40781C26O40820C33O40822C40O40847C45O40855C52O40860C55O40871C60O40871C66O40933C76O40855C82O40973C88O40988C96O41001C102O41030C103O41047C104O41056C109O41056C113O41088C118O41095C122O41122,,
tick,0x7ffdf681d194,218367,1,0x7ff7c02fe560,6,0x7ff7c0bf59a0,0x1dc8f495a8a,0x1dc8f495890,0x1dc8f4947fa,0x1dc8f4943fb,0x1dc8f490d41,0x1dc8f49052d,0x1dc8f490058,0x1dc8f48fd27,0x1dc8f48d9bd,0x1dc8f48bcf5,0x7ff7c0c8b243,0x7ff7c0274770,0x1dc8f48c90b
code-creation,LazyCompile,10,218390,0x1dc8f495c4e,64,hasNoEntryError node:fs:1480:25,0x160e4c583b8,~
code-source-info,0x1dc8f495c4e,80,39085,39287,C0O39104C6O39132C11O39148C16O39132C21O39161C27O39175C36O39179C39O39192C40O39211C46O39236C51O39242C58O39247C61O39260C62O39271C63O39284,,
code-creation,LazyCompile,10,218469,0x1dc8f495d86,576,getStatsFromBinding node:internal/fs/utils:531:29,0x160e4c624e0,~
code-source-info,0x1dc8f495d
code-creation,LazyCompile,10,218565,0x1dc8f4961b6,16,isBigUint64Array node:internal/util/types:53:26,0x21794147880,~
code-source-info,0x1dc8f4961b6,17,1423,1514,C0O1436C5O1443C12O1490C15O1511,,
code-creation,LazyCompile,10,218598,0x1dc8f4962d6,19,msFromTimeSpec node:internal/fs/utils:447:24,0x160e4c62208,~
code-source-info,0x1dc8f4962d6,81,11486,11547,C0O11503C2O11516C4O11514C10O11535C12O11533C15O11526C18O11544,,
code-creation,LazyCompile,10,218645,0x1dc8f496516,116,Stats node:internal/fs/utils:496:15,0x160e4c62400,~
code-source-info,0x1dc8f496516,81,13278,13819,C0O13418C41O13418C46O13548C48O13561C52O13575C54O13588C58O13602C60O13615C64O13629C66O13646C70O13664C73O13677C77O13675C81O13701C84O13714C88O13712C92O13738C95O13751C99O13749C103O13775C106O13792C110O13790C115O13818,,
code-creation,LazyCompile,10,218694,0x1dc8f4966ee,62,StatsBase node:internal/fs/utils:401:19,0x160e4c61dd8,~
code-source-info,0x1dc8f4966ee,81,10347,10648,C0O10435C2O10444C6O10454C8O10464C12O10475C14O10486C18O10498C20O10507C24O10517C26O10526C30O10536C32O10546C36O10557C38O10570C42O10584C44O10593C48O10603C50O10613C54O10624C56O10636C61O10647,,
code-creation,LazyCompile,10,218754,0x1dc8f4968e6,29,dateFromMs node:internal/fs/utils:461:20,0x160e4c622a8,~
code-source-info,0x1dc8f4968e6,81,12012,12059,C0O12022C7O12038C10O12038C17O12049C23O12029C28O12056,,
code-creation,LazyCompile,10,218795,0x1dc8f4969ee,16,StatsBase.isDirectory node:internal/fs/utils:415:43,0x160e4c61e28,~
code-source-info,0x1dc8f4969ee,81,10694,10745,C0O10714C7O10733C10O10714C15O10742,,
code-creation,LazyCompile,10,218832,0x1dc8f496b06,54,Stats._checkModeProperty node:internal/fs/utils:518:46,0x160e4c62450,~
code-source-info,0x1dc8f496b06,81,14177,14405,C0O14193C8O14224C10O14220C17O14248C19O14244C26O14277C28O14273C33O14295C34O14308C35O14374C42O14381C44O14379C50O14389C53O14402,,
code-creation,LazyCompile,10,218868,0x1dc8f496c3e,16,StatsBase.isFile node:internal/fs/utils:419:38,0x160e4c61eb8,~
code-source-info,0x1dc8f496c3e,81,10787,10838,C0O10807C7O10826C10O10807C15O10835,,
code-creation,Function,11,219084,0x2040104d460,568,handleErrorFromBinding node:internal/fs/utils:341:32,0x160e4c61ce8,^
code-source-info,0x2040104d460,81,8304,8815,,,
code-creation,Function,11,219107,0x2040104d700,152,hasHooks node:internal/async_hooks:471:18,0x17449ff8a28,^
code-source-info,0x2040104d700,13,16531,16579,,,
code-creation,Function,11,219123,0x2040104d800,108,isEmpty node:internal/fixed_queue:67:10,0x29f2e35fa10,^
code-source-info,0x2040104d800,34,3150,3197,,,
code-creation,Function,11,219155,0x2040104d8e0,1916,getPathFromURLWin32 node:internal/url:1363:29,0x29f2e379058,^
code-source-info,0x2040104d8e0,39,37816,39214,,,
code-creation,Function,11,219174,0x2040104e0c0,164,isUint8Array node:internal/util/types:13:22,0x21794147418,^
code-source-info,0x2040104e0c0,17,269,356,,,
code-creation,Function,11,219191,0x2040104e1e0,188,isURLInstance node:internal/url:1495:23,0x29f2e379208,^
code-source-info,0x2040104e1e0,39,42921,43020,,,
code-creation,LazyCompile,10,219310,0x1dc8f4971ae,37,get search node:internal/url:896:13,0x29f2e378958,~
code-source-info,0x1dc8f4971ae,39,24839,24970,C0O24867C4O24872C6O24871C10O24857C15O24887C19O24915C24O24930C26O24940C27O24946C32O24957C36O24965,,
code-creation,LazyCompile,10,219354,0x1dc8f4972f6,37,get hash node:internal/url:926:11,0x29f2e378aa8,~
code-source-info,0x1dc8f4972f6,39,25601,25744,C0O25632C4O25637C6O25636C10O25619C15O25652C19O25686C24O25701C26O25711C27O25717C32O25728C36O25739,,
code-creation,LazyCompile,10,219442,0x1dc8f497486,181,set search node:internal/url:903:13,0x29f2e3789c8,~
code-source-info,0x1dc8f497486,39,24986,25509,C0O25014C4O25019C6O25018C10O25034C17O25043C23O25069C25O25080C30O25097C31O25107C35O25122C44O25136C46O25135C51O25132C57O25178C58O25188C64O25192C69O25201C79O25210C86O25250C88O25260C92O25273C101O25286C106O25283C110O25314C114O25337C125O25351C134O25385C142O25385C154O25337C159O25459C168O25481C170O25480C174O25459C180O25508,,
code-creation,LazyCompile,10,219507,0x1dc8f49767e,41,toUSVString node:internal/util:59:21,0x21794145110,~
code-source-info,0x1dc8f49767e,16,1409,1709,C0O1432C4O1586C11O1606C14O1586C20O1636C22O1653C24O1664C25O1668C30O1699C35O1675C40O1706,,
code-creation,LazyCompile,10,219577,0x1dc8f4977f6,144,set hash node:internal/url:933:11,0x29f2e378b10,~
code-source-info,0x1dc8f4977f6,39,25758,26205,C0O25784C4O25789C6O25788C10O25839C15O25862C17O25882C18O25895C22O25910C31O25924C33O25923C38O25920C42O25955C43O25962C44O25975C45O25983C51O25987C56O25996C66O26003C73O26039C75O26052C79O26063C88O26076C93O26073C97O26105C108O26117C117O26150C125O26150C137O26105C143O26204,,
code-creation,LazyCompile,10,219634,0x1dc8f4979be,51,throwIfUnsupportedURLProtocol node:internal/modules/esm/resolve:1100:39,0x3318a26b398,~
code-source-info,0x1dc8f4979be,118,36749,36914,C0O36768C7O36777C12O36796C19O36805C24O36831C31O36840C36O36860C43O36866C48O36860C50O36913,,
code-creation,LazyCompile,10,219698,0x1dc8f497e26,64,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:103:39,0x3318a26f678,~
code-source-info,0x1dc8f497e26,119,3548,3759,C0O3583C7O3583C13O3600C20O3635C23O3660C28O3605C35O3676C36O3688C37O3692C42O3723C46O3715C58O3732C63O3756,,
code-creation,LazyCompile,10,219737,0x1dc8f498366,18,toString node:internal/url:732:11,0x29f2e3781c8,~
code-source-info,0x1dc8f498366,39,20846,20886,C0O20856C4O20868C6O20867C12O20876C17O20881,,
code-creation,LazyCompile,10,219826,0x1dc8f49870e,280,getFileProtocolModuleFormat node:internal/modules/esm/get_format:51:37,0x3318a26f5d8,~
code-source-info,0x1dc8f49870e,119,1588,2922,C0O1639C5O1639C10O1674C15O1674C20O1696C22O1704C27O1722C32O1729C39O1749C50O1786C51O1812C58O1830C62O1840C64O1852C66O1866C67O1872C74O1908C79O2007C83O2025C84O2042C85O2065C88O2074C93O2078C100O2098C107O2118C112O2150C117O2150C122O2206C127O2206C132O2254C139O2275C142O2291C147O2275C156O2254C162O2324C167O2395C171O2491C182O2470C191O2568C201O2545C207O2621C216O2747C229O2765C239O2708C243O2799C259O2805C264O2799C265O2874C270O2881C279O2919,,
code-creation,LazyCompile,10,219959,0x1dc8f498ae6,275,extname node:path:836:10,0x5da138d838,~
code-source-info,0x1dc8f498ae6,41,26915,29043,C0O26929C8O26929C13O26976C15O26999C18O27024C20O27042C23O27070C25O27219C27O27415C34O27422C41O27439C47O27439C55O27478C57O27474C67O27521C72O27521C78O27501C84O27567C88O27622C92O27629C96O27636C98O27636C103O27673C108O27673C114O27716C117O27720C123O27890C127O27922C129O27936C133O27952C135O27979C137O28005C139O28013C144O28131C146O28162C148O28170C152O28191C154O28204C156O28200C161O28301C163O28314C168O28333C175O28361C177O28377C182O28395C187O28426C189O28439C194O28602C197O27648C202O27604C205O28643C207O28656C214O28679C220O28776C227O28875C234O28911C237O28903C244O28951C247O28937C252O28966C254O28976C255O28989C269O28996C274O29038,,
code-creation,LazyCompile,10,220044,0x1dc8f498d76,13,getPackageType node:internal/modules/esm/resolve:848:24,0x3318a26b0c8,~
code-source-info,0x1dc8f498d76,118,28538,28631,C0O28571C3O28571C8O28623C12O28628,,
code-creation,LazyCompile,10,220104,0x1dc8f498fce,173,getPackageScopeConfig node:internal/modules/esm/resolve:253:31,0x3318a26ab28,~
code-source-info,0x1dc8f498fce,118,7802,8901,C0O7839C13O7839C19O7938C24O7953C32O7957C39O8035C41O8069C46O8086C49O8086C54O8069C60O8195C66O8203C68O8224C69O8259C72O8280C85O8297C91O8506C96O8538C100O8515C105O8548C107O7879C110O8587C115O8587C120O8643C127O8661C132O8709C137O8731C142O8775C147O8800C154O8820C159O8837C164O8837C170O8877C172O8898,,
code-creation,LazyCompile,10,220249,0x1dc8f4993ee,331,getPackageConfig node:internal/modules/esm/resolve:197:26,0x3318a26aad8,~
code-source-info,0x1dc8f4993ee,118,6331,7694,C0O6377C5O6394C10O6394C16O6408C18O6443C20O6459C21O6483C26O6501C31O6501C37O6511C42O6523C44O6578C51O6598C56O6639C61O6663C66O6711C71O6738C78O6762C83O6779C88O6779C94O6810C96O6831C97O6846C102O6873C107O6887C115O6885C125O6932C137O6991C144O7002C163O7029C168O7043C174O7029C178O7027C185O7076C192O6938C197O6932C198O7108C203O7117C208O7123C213O7129C218O7162C223O7190C233O7243C235O7267C241O7297C243O7318C249O7348C251O7423C253O7432C260O7453C265O7469C268O7511C275O7529C281O7559C287O7570C293O7581C299O7592C305O7606C312O7624C317O7641C322O7641C328O7670C330O7691,,
tick,0x7ff7c11bccc2,220365,0,0x0,3,0x7ff7c08240c0,0x1dc8f499004,0x1dc8f498d79,0x1dc8f49872e,0x1dc8f497e60,0x1dc8f490e4d,0x1dc8f49052d,0x1dc8f490058,0x1dc8f48fd27,0x1dc8f48d9bd,0x1dc8f48bcf5,0x7ff7c0c8b243,0x7ff7c0274770,0x1dc8f48c90b
code-creation,Function,11,220440,0x2040104e300,956,URL node:internal/url:621:14,0x29f2e377fb0,^
code-source-info,0x2040104e300,39,17620,18024,,,
code-creation,Function,11,220464,0x2040104e720,280, node:internal/url:638:21,0x29f2e378088,^
code-source-info,0x2040104e720,39,18137,18214,,,
code-creation,Function,11,220480,0x2040104e8a0,156,get protocol node:internal/url:772:15,0x29f2e378358,^
code-source-info,0x2040104e8a0,39,21820,21863,,,
code-creation,Function,11,220496,0x2040104e9a0,340,URLContext node:internal/url:161:14,0x29f2e377750,^
code-source-info,0x2040104e9a0,39,3883,4105,,,
code-creation,Function,11,220523,0x2040104eb60,1468,onParseComplete node:internal/url:533:25,0x29f2e377ce0,^
code-source-info,0x2040104eb60,39,14738,15424,,,
code-creation,LazyCompile,10,220631,0x1dc8f499ce6,78,get node:internal/modules/esm/module_map:18:6,0x3318a2654e0,~
code-source-info,0x1dc8f499ce6,115,604,748,C11O617C18O645C28O645C33O678C43O678C48O713C50O726C61O726C71O736C77O743,,
code-creation,LazyCompile,10,220699,0x1dc8f499ede,111,#createModuleJob node:internal/modules/esm/loader:321:19,0x3318a262cf0,~
code-source-info,0x1dc8f499ede,114,10035,10886,C0O10035C17O10108C22O10555C31O10598C37O10598C42O10657C70O10657C76O10810C79O10815C84O10825C92O10851C103O10825C108O10870C110O10881,,
code-creation,LazyCompile,10,220791,0x1dc8f49a206,196,ModuleJob node:internal/modules/esm/module_job:56:14,0x3318a266370,~
code-source-info,0x1dc8f49a206,116,1367,3272,C0O1367C27O1400C32O1400C50O1478C55O1490C59O1505C64O1527C68O1552C73O1564C77O1579C82O1595C86O1616C90O1628C94O1766C101O1787C104O1816C113O1825C122O1830C135O1787C140O1785C144O1937C149O2948C152O2962C155O2960C159O3072C169O3099C178O3107C181O3072C186O3237C190O3255C195O3271,,
code-creation,LazyCompile,10,220874,0x1dc8f49ac7e,193,moduleProvider node:internal/modules/esm/loader:322:28,0x1dc8f499e08,~
code-source-info,0x1dc8f49ac7e,114,10108,10527,C10O10108C18O10206C21O10217C26O10222C33O10238C39O10255C43O10217C57O10206C80O10165C85O10187C90O10312C97O10324C102O10324C108O10351C110O10379C125O10385C130O10379C131O10452C153O10459C168O10520,,
code-creation,LazyCompile,10,220973,0x1dc8f49b08e,397,load node:internal/modules/esm/loader:401:13,0x3318a262f70,~
code-source-info,0x1dc8f49b08e,114,12495,13760,C10O12495C60O12544C62O12549C67O12557C71O12584C73O12589C77O12598C84O12605C95O12648C101O12656C105O12681C114O12687C127O12681C153O12731C159O12772C177O12778C182O12772C183O12907C188O12922C193O12954C198O12999C210O12999C216O13108C225O13154C229O13171C242O13114C247O13108C248O13214C254O13255C275O13261C280O13255C281O13406C296O13481C299O13481C309O13517C312O13517C318O13550C337O13556C342O13550C343O13709C350O13725C356O13740C372O13755,,
code-creation,LazyCompile,10,221062,0x1dc8f49b456,226,defaultLoad node:internal/modules/esm/load:13:27,0x3318a2787f8,~
code-source-info,0x1dc8f49b456,125,380,859,C10O380C18O408C23O452C28O465C33O494C38O521C43O536C56O530C84O578C98O578C103O634C105O651C112O680C117O707C121O732C126O759C131O774C144O768C172O816C179O830C185O843C201O856,,
code-creation,LazyCompile,10,221128,0x1dc8f49b7d6,150,validateAssertions node:internal/modules/esm/assert:55:28,0x3318a268470,~
code-source-info,0x1dc8f49b7d6,117,1835,2993,C12O1897C17O1897C26O1940C33O1953C37O1968C38O1999C48O2155C55O2505C66O2130C67O2142C68O2320C76O2325C83O2393C84O2405C85O2422C88O2469C93O2429C98O2475C99O2581C100O2593C101O2745C109O2750C116O2862C129O2868C134O2862C135O2939C138O2979C143O2939C149O2992,,
code-creation,LazyCompile,10,221229,0x1dc8f49bb46,430,defaultGetSource node:internal/modules/esm/get_source:30:32,0x3318a278f38,~
code-source-info,0x1dc8f49bb46,126,903,1881,C10O903C18O956C25O956C31O977C33O999C40O1008C45O1028C50O1043C62O1037C92O1087C99O1096C104O1130C111O1150C114O1175C119O1130C125O1191C127O1212C134O1218C139O1212C140O1267C147O1278C154O1299C161O1319C164O1319C171O1345C180O1308C188O1384C194O1432C201O1441C206O1469C213O1478C218O1515C223O1521C236O1515C262O1575C274O1565C304O1598C311O1647C324O1707C343O1647C350O1604C355O1598C356O1778C363O1788C372O1807C377O1814C382O1823C387O1823C393O1864C405O1878,,
code-creation,LazyCompile,10,221365,0x1dc8f49c116,196,readFile node:internal/fs/promises:788:24,0x3318a27b258,~
code-source-info,0x1dc8f49c116,127,22848,23194,C10O22848C18O22869C23O22890C28O22879C35O22939C44O22957C46O22977C48O22966C53O22994C56O23001C71O23031C72O23037C75O23058C80O23037C84O23083C98O23089C111O23083C137O23117C145O23152C151O23184C156O23124C171O23191,,
code-creation,LazyCompile,10,221416,0x1dc8f49dd2e,29,checkAborted node:internal/fs/promises:320:22,0x3318a27a588,~
code-source-info,0x1dc8f49dd2e,127,7483,7549,C0O7497C7O7507C16O7523C21O7529C26O7523C28O7548,,
code-creation,LazyCompile,10,221462,0x1dc8f49ded6,182,open node:internal/fs/promises:450:20,0x3318a27a768,~
code-source-info,0x1dc8f49ded6,127,11766,12079,C10O11766C18O11791C23O11798C29O11845C34O11845C39O11870C55O11877C62O11916C69O11950C72O11958C79O11973C82O11984C87O11984C95O12061C104O11958C117O11944C142O11923C157O12076,,
code-creation,LazyCompile,10,222086,0x1dc8f49e3ce,263,link node:internal/modules/esm/module_job:69:18,0x1dc8f49a088,~
code-source-info,0x1dc8f49e3ce,116,1937,2889,C4O1937C26O1958C36O1983C48O1972C73O1970C77O2005C89O2017C98O2035C100O2024C104O2005C108O2357C110O2357C112O2385C117O2390C122O2397C132O2397C138O2728C140O2765C151O2786C156O2782C162O2771C174O2765C199O2825C210O2847C218O2843C224O2832C238O2882,,
code-creation,LazyCompile,10,222144,0x1dc8f49e656,19,primordials.PromisePrototypeCatch node:internal/per_context/primordials:406:37,0x17449fca548,~
code-source-info,0x1dc8f49e656,6,11986,12074,C0O12018C13O12018C18O12074,,
code-creation,LazyCompile,10,222206,0x1dc8f49e82e,216,set node:internal/modules/esm/module_map:23:6,0x3318a265530,~
code-source-info,0x1dc8f49e82e,115,755,1288,C11O768C21O801C31O801C36O834C46O834C51O869C55O888C57O877C62O898C73O955C91O961C96O955C97O1024C109O1041C124O1066C126O1062C137O1106C148O1024C152O1165C154O1171C165O1171C178O1183C183O1183C188O1208C190O1231C194O1243C196O1256C210O1256C215O1283,,
code-creation,LazyCompile,10,222263,0x1dc8f49ea36,10, node:internal/modules/esm/module_map:9:63,0x3318a265440,~
code-source-info,0x1dc8f49ea36,115,271,298,C0O284C2O290C9O297,,
code-creation,LazyCompile,10,222333,0x1dc8f49eafe,10, node:internal/modules/esm/loader:381:15,0x1dc8f48fb08,~
code-source-info,0x1dc8f49eafe,114,11893,11911,C0O11906C5O11906C9O11911,,
tick,0x7ffdf681c7f4,222357,0,0x0,3,0x7ff7c08240c0,0x204a9c96470,0x204a9c96248,0x1dc8f49e8c2,0x1dc8f499f45,0x1dc8f4900d6,0x7ff7c0c8b243,0x7ff7c0274770,0x1dc8f48c90b
code-creation,LazyCompile,10,222413,0x1dc8f49ef56,433,run node:internal/modules/esm/module_job:193:12,0x3318a266460,~
code-source-info,0x1dc8f49ef56,116,7177,8381,C10O7177C18O7198C23O7198C35O7187C58O7234C61O7265C66O7301C71O7308C76O7308C90O7290C128O7368C133O7373C143O7380C152O7415C158O7453C163O7415C169O7474C182O7484C186O7521C196O7553C204O7525C211O7588C224O7598C228O7688C235O7719C240O7726C248O7688C259O7758C267O7808C272O7815C277O7758C292O7836C297O7891C302O7919C307O7926C312O7892C318O7959C325O7964C330O7991C344O8140C358O8082C364O8163C370O8243C376O8001C380O8324C382O8324C383O8345C388O8367C408O8376,,
code-creation,LazyCompile,10,222483,0x1dc8f49f286,24,instantiate node:internal/modules/esm/module_job:102:14,0x3318a2663c0,~
code-source-info,0x1dc8f49f286,116,3289,3428,C0O3308C6O3370C11O3370C15O3363C19O3410C23O3423,,
code-creation,LazyCompile,10,222611,0x1dc8f49f98e,935,_instantiate node:internal/modules/esm/module_job:109:21,0x3318a266410,~
code-source-info,0x1dc8f49f98e
code-creation,LazyCompile,10,222728,0x1dc8f4a0006,179,addJobsToDependencyGraph node:internal/modules/esm/module_job:111:38,0x1dc8f49f6d0,~
code-source-info,0x1dc8f4a0006,116,3535,3840,C10O3535C18O3565C23O3581C28O3581C35O3608C46O3615C47O3632C52O3644C57O3644C62O3706C74O3690C100O3721C111O3743C118O3771C123O3805C126O3771C134O3739C140O3728C154O3833,,
code-creation,LazyCompile,10,222878,0x1dc8f4a039e,627,processPromiseRejections node:internal/process/promises:211:34,0x29f2e35e438,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x1dc8f4a039e
code-creation,LazyCompile,10,223406,0x1dc8f4a12f6,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x29f2e35d9a8,~
code-source-info,0x1dc8f4a12f6,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
code-creation,LazyCompile,10,223467,0x1dc8f4a1416,112,FileHandle node:internal/fs/promises:117:14,0x3318a27b2a8,~
code-source-info,0x1dc8f4a1416,127,2979,3152,C3O2999C11O2999C40O3013C45O3018C50O3027C54O3046C59O3051C67O3058C69O3082C77O3056C81O3098C86O3103C91O3110C95O3120C100O3125C104O3140C111O3151,,
code-creation,LazyCompile,10,223514,0x1dc8f4a1596,63,MixedEventEmitter node:internal/event_target:964:16,0x204a9c85d18,~
code-source-info,0x1dc8f4a1596,44,26760,26894,C0O26760C8O26779C15O26786C21O26822C25O26831C29O26822C41O26845C48O26867C54O26845C62O26893,,
code-creation,LazyCompile,10,223652,0x1dc8f4a187e,601,readFileHandle node:internal/fs/promises:360:30,0x3318a27a628,~
code-source-info,0x1dc8f4a187e
code-creation,LazyCompile,10,223757,0x1dc8f4a1cc6,8,get fd node:internal/fs/promises:130:9,0x3318a27b360,~
code-source-info,0x1dc8f4a1cc6,127,3229,3261,C0O3239C2O3251C4O3250C7O3256,,
code-creation,LazyCompile,10,223806,0x1dc8f4a1e46,33,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:418:43,0x17449fca600,~
code-source-info,0x1dc8f4a1e46,6,12582,12862,C0O12582C13O12718C27O12718C32O12862,,
code-creation,LazyCompile,10,223845,0x1dc8f4a1fd6,46, node:internal/per_context/primordials:421:15,0x1dc8f4a1d98,~
code-source-info,0x1dc8f4a1fd6,6,12730,12857,C0O12847C14O12745C20O12820C28O12827C34O12846C39O12847C45O12857,,
code-creation,LazyCompile,10,223879,0x1dc8f4a211e,27,SafePromise node:internal/per_context/primordials:402:16,0x17449fca4f8,~
code-source-info,0x1dc8f4a211e,6,11906,11937,C3O11919C7O11925C11O11919C26O11936,,
code-creation,LazyCompile,10,223911,0x1dc8f4a2216,22, node:internal/per_context/primordials:422:21,0x1dc8f4a1f20,~
code-source-info,0x1dc8f4a2216,6,12761,12810,C0O12771C16O12771C21O12810,,
code-creation,LazyCompile,10,223960,0x1dc8f4a230e,19,allocUnsafeSlow node:buffer:383:50,0x217941771a8,~
code-source-info,0x1dc8f4a230e,24,11607,11675,C0O11619C5O11619C9O11640C14O11647C18O11672,,
code-creation,LazyCompile,10,223999,0x1dc8f4a2436,71,createUnsafeBuffer node:internal/buffer:1059:28,0x29f2e34bd18,~
code-source-info,0x1dc8f4a2436,25,31379,31495,C0O31391C8O31403C15O31422C22O31429C39O31471C48O31483C70O31494,,
code-creation,LazyCompile,10,224128,0x1dc8f4a2726,248,close node:internal/fs/promises:190:11,0x3318a27d4b0,~
code-source-info,0x1dc8f4a2726,127,4415,5236,C0O4428C7O4437C9O4436C15O4442C20O4459C27O4466C30O4483C31O4498C38O4507C40O4506C45O4532C52O4544C54O4543C57O4559C58O4574C65O4579C73O4585C77O4594C84O4603C86O4602C91O4610C96O4626C103O4631C108O4636C112O4649C119O4654C126O4671C136O4714C138O4713C142O4723C147O4723C157O4671C162O4669C168O4815C175O4820C182O4837C189O4879C199O4875C210O4837C215O4835C219O5179C222O5184C230O5184C235O5204C242O5216C244O5215C247O5231,,
code-creation,LazyCompile,10,224256,0x1dc8f4a2a8e,17, node:internal/fs/promises:204:9,0x1dc8f4a2510,~
code-source-info,0x1dc8f4a2a8e,127,4741,4783,C0O4749C7O4754C11O4769C16O4782,,
tick,0x7ff7c11dbd9d,224338,0,0x0,3,0x7ff7c08240c0,0x7ff7c0d108bc
code-creation,LazyCompile,10,224392,0x1dc8f4a2e26,193,moduleStrategy node:internal/modules/esm/translators:112:56,0x204a9c88ce0,~
code-source-info,0x1dc8f4a2e26,129,3253,3705,C0O3253C23O3280C36O3280C41O3325C46O3334C52O3356C59O3356C64O3393C76O3429C81O3393C85O3455C106O3455C112O3504C119O3515C124O3527C129O3531C134O3568C146O3653C150O3527C156O3688C168O3702,,
code-creation,LazyCompile,10,224453,0x1dc8f4a3b9e,83,assertBufferSource node:internal/modules/esm/translators:74:28,0x204a9c88ab0,~
code-source-info,0x1dc8f4a3b9e,129,2103,2510,C0O2138C10O2190C11O2197C12O2254C15O2254C19O2214C24O2233C29O2274C35O2301C41O2332C42O2339C43O2348C50O2401C77O2354C82O2348,,
code-creation,LazyCompile,10,224494,0x1dc8f4a3cf6,31,lazyTypes node:internal/modules/esm/translators:22:19,0x204a9c88a10,~
code-source-info,0x1dc8f4a3cf6,129,417,514,C0O425C6O446C10O460C11O464C17O480C24O478C30O511,,
code-creation,LazyCompile,10,224536,0x1dc8f4a3e0e,72,stringify node:internal/modules/esm/translators:90:19,0x204a9c88b00,~
code-source-info,0x1dc8f4a3e0e,129,2532,2737,C0O2544C6O2574C8O2586C9O2590C20O2590C25O2645C33O2678C36O2674C45O2694C50O2653C56O2706C61O2721C66O2721C71O2734,,
code-creation,LazyCompile,10,224629,0x1dc8f4a3ffe,206,TextDecoder node:internal/encoding:380:16,0x29f2e353fe8,~
script-source,27,node:internal/encoding,'use strict';\x0d\n\x0d\n// An implementation of the WHATWG Encoding Standard\x0d\n// https://encoding.spec.whatwg.org\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint32Array\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ENCODING_INVALID_ENCODED_DATA\x2C\x0d\n  ERR_ENCODING_NOT_SUPPORTED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_NO_ICU\x0d\n} = require('internal/errors').codes;\x0d\nconst kHandle = Symbol('handle');\x0d\nconst kFlags = Symbol('flags');\x0d\nconst kEncoding = Symbol('encoding');\x0d\nconst kDecoder = Symbol('decoder');\x0d\nconst kEncoder = Symbol('encoder');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol: inspect\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  encodeInto\x2C\x0d\n  encodeUtf8String\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nlet Buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (Buffer === undefined)\x0d\n    Buffer = require('buffer').Buffer;\x0d\n  return Buffer;\x0d\n}\x0d\n\x0d\nfunction validateEncoder(obj) {\x0d\n  if (obj == null || obj[kEncoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextEncoder');\x0d\n}\x0d\n\x0d\nfunction validateDecoder(obj) {\x0d\n  if (obj == null || obj[kDecoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextDecoder');\x0d\n}\x0d\n\x0d\nconst CONVERTER_FLAGS_FLUSH = 0x1;\x0d\nconst CONVERTER_FLAGS_FATAL = 0x2;\x0d\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\x0d\n\x0d\nconst empty = new Uint8Array(0);\x0d\n\x0d\nconst encodings = new SafeMap([\x0d\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\x0d\n  ['utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf-8'\x2C 'utf-8']\x2C\x0d\n  ['866'\x2C 'ibm866']\x2C\x0d\n  ['cp866'\x2C 'ibm866']\x2C\x0d\n  ['csibm866'\x2C 'ibm866']\x2C\x0d\n  ['ibm866'\x2C 'ibm866']\x2C\x0d\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso88592'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\x0d\n  ['l2'\x2C 'iso-8859-2']\x2C\x0d\n  ['latin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso88593'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\x0d\n  ['l3'\x2C 'iso-8859-3']\x2C\x0d\n  ['latin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso88594'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\x0d\n  ['l4'\x2C 'iso-8859-4']\x2C\x0d\n  ['latin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso88595'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\x0d\n  ['arabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso88596'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\x0d\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\x0d\n  ['elot_928'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek8'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso88597'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\x0d\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\x0d\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['hebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso88598'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\x0d\n  ['visual'\x2C 'iso-8859-8']\x2C\x0d\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['logical'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso885910'\x2C 'iso-8859-10']\x2C\x0d\n  ['l6'\x2C 'iso-8859-10']\x2C\x0d\n  ['latin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso885913'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso885914'\x2C 'iso-8859-14']\x2C\x0d\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso885915'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['l9'\x2C 'iso-8859-15']\x2C\x0d\n  ['cskoi8r'\x2C 'koi8-r']\x2C\x0d\n  ['koi'\x2C 'koi8-r']\x2C\x0d\n  ['koi8'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8_r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-ru'\x2C 'koi8-u']\x2C\x0d\n  ['koi8-u'\x2C 'koi8-u']\x2C\x0d\n  ['csmacintosh'\x2C 'macintosh']\x2C\x0d\n  ['mac'\x2C 'macintosh']\x2C\x0d\n  ['macintosh'\x2C 'macintosh']\x2C\x0d\n  ['x-mac-roman'\x2C 'macintosh']\x2C\x0d\n  ['dos-874'\x2C 'windows-874']\x2C\x0d\n  ['iso-8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso885911'\x2C 'windows-874']\x2C\x0d\n  ['tis-620'\x2C 'windows-874']\x2C\x0d\n  ['windows-874'\x2C 'windows-874']\x2C\x0d\n  ['cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['windows-1250'\x2C 'windows-1250']\x2C\x0d\n  ['x-cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['windows-1251'\x2C 'windows-1251']\x2C\x0d\n  ['x-cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\x0d\n  ['ascii'\x2C 'windows-1252']\x2C\x0d\n  ['cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp819'\x2C 'windows-1252']\x2C\x0d\n  ['csisolatin1'\x2C 'windows-1252']\x2C\x0d\n  ['ibm819'\x2C 'windows-1252']\x2C\x0d\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\x0d\n  ['iso8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso88591'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\x0d\n  ['l1'\x2C 'windows-1252']\x2C\x0d\n  ['latin1'\x2C 'windows-1252']\x2C\x0d\n  ['us-ascii'\x2C 'windows-1252']\x2C\x0d\n  ['windows-1252'\x2C 'windows-1252']\x2C\x0d\n  ['x-cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['windows-1253'\x2C 'windows-1253']\x2C\x0d\n  ['x-cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['csisolatin5'\x2C 'windows-1254']\x2C\x0d\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\x0d\n  ['iso8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso88599'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\x0d\n  ['l5'\x2C 'windows-1254']\x2C\x0d\n  ['latin5'\x2C 'windows-1254']\x2C\x0d\n  ['windows-1254'\x2C 'windows-1254']\x2C\x0d\n  ['x-cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['windows-1255'\x2C 'windows-1255']\x2C\x0d\n  ['x-cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['windows-1256'\x2C 'windows-1256']\x2C\x0d\n  ['x-cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['windows-1257'\x2C 'windows-1257']\x2C\x0d\n  ['x-cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['windows-1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['chinese'\x2C 'gbk']\x2C\x0d\n  ['csgb2312'\x2C 'gbk']\x2C\x0d\n  ['csiso58gb231280'\x2C 'gbk']\x2C\x0d\n  ['gb2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312-80'\x2C 'gbk']\x2C\x0d\n  ['gbk'\x2C 'gbk']\x2C\x0d\n  ['iso-ir-58'\x2C 'gbk']\x2C\x0d\n  ['x-gbk'\x2C 'gbk']\x2C\x0d\n  ['gb18030'\x2C 'gb18030']\x2C\x0d\n  ['big5'\x2C 'big5']\x2C\x0d\n  ['big5-hkscs'\x2C 'big5']\x2C\x0d\n  ['cn-big5'\x2C 'big5']\x2C\x0d\n  ['csbig5'\x2C 'big5']\x2C\x0d\n  ['x-x-big5'\x2C 'big5']\x2C\x0d\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\x0d\n  ['euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['csshiftjis'\x2C 'shift_jis']\x2C\x0d\n  ['ms932'\x2C 'shift_jis']\x2C\x0d\n  ['ms_kanji'\x2C 'shift_jis']\x2C\x0d\n  ['shift-jis'\x2C 'shift_jis']\x2C\x0d\n  ['shift_jis'\x2C 'shift_jis']\x2C\x0d\n  ['sjis'\x2C 'shift_jis']\x2C\x0d\n  ['windows-31j'\x2C 'shift_jis']\x2C\x0d\n  ['x-sjis'\x2C 'shift_jis']\x2C\x0d\n  ['cseuckr'\x2C 'euc-kr']\x2C\x0d\n  ['csksc56011987'\x2C 'euc-kr']\x2C\x0d\n  ['euc-kr'\x2C 'euc-kr']\x2C\x0d\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\x0d\n  ['korean'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\x0d\n  ['ksc5601'\x2C 'euc-kr']\x2C\x0d\n  ['ksc_5601'\x2C 'euc-kr']\x2C\x0d\n  ['windows-949'\x2C 'euc-kr']\x2C\x0d\n  ['utf-16be'\x2C 'utf-16be']\x2C\x0d\n  ['utf-16le'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16'\x2C 'utf-16le']\x2C\x0d\n]);\x0d\n\x0d\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\x0d\n// so we have to do this manually\x0d\nfunction trimAsciiWhitespace(label) {\x0d\n  let s = 0;\x0d\n  let e = label.length;\x0d\n  while (s < e && (\x0d\n    label[s] === '\\u0009' ||\x0d\n    label[s] === '\\u000a' ||\x0d\n    label[s] === '\\u000c' ||\x0d\n    label[s] === '\\u000d' ||\x0d\n    label[s] === '\\u0020')) {\x0d\n    s++;\x0d\n  }\x0d\n  while (e > s && (\x0d\n    label[e - 1] === '\\u0009' ||\x0d\n    label[e - 1] === '\\u000a' ||\x0d\n    label[e - 1] === '\\u000c' ||\x0d\n    label[e - 1] === '\\u000d' ||\x0d\n    label[e - 1] === '\\u0020')) {\x0d\n    e--;\x0d\n  }\x0d\n  return StringPrototypeSlice(label\x2C s\x2C e);\x0d\n}\x0d\n\x0d\nfunction getEncodingFromLabel(label) {\x0d\n  const enc = encodings.get(label);\x0d\n  if (enc !== undefined) return enc;\x0d\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\x0d\n}\x0d\n\x0d\nconst encodeIntoResults = new Uint32Array(2);\x0d\n\x0d\nclass TextEncoder {\x0d\n  constructor() {\x0d\n    this[kEncoder] = true;\x0d\n  }\x0d\n\x0d\n  get encoding() {\x0d\n    validateEncoder(this);\x0d\n    return 'utf-8';\x0d\n  }\x0d\n\x0d\n  encode(input = '') {\x0d\n    validateEncoder(this);\x0d\n    return encodeUtf8String(`${input}`);\x0d\n  }\x0d\n\x0d\n  encodeInto(src\x2C dest) {\x0d\n    validateEncoder(this);\x0d\n    validateString(src\x2C 'src');\x0d\n    if (!dest || !isUint8Array(dest))\x0d\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\x0d\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\x0d\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\x0d\n  }\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateEncoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const ctor = getConstructorOf(this);\x0d\n    const obj = ObjectCreate({\x0d\n      constructor: ctor === null ? TextEncoder : ctor\x0d\n    });\x0d\n    obj.encoding = this.encoding;\x0d\n    // Lazy to avoid circular dependency\x0d\n    return require('internal/util/inspect').inspect(obj\x2C opts);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  TextEncoder.prototype\x2C {\x0d\n    'encode': kEnumerableProperty\x2C\x0d\n    'encodeInto': kEnumerableProperty\x2C\x0d\n    'encoding': kEnumerableProperty\x2C\x0d\n    [SymbolToStringTag]: { configurable: true\x2C value: 'TextEncoder' }\x2C\x0d\n  });\x0d\n\x0d\nconst TextDecoder =\x0d\n  internalBinding('config').hasIntl ?\x0d\n    makeTextDecoderICU() :\x0d\n    makeTextDecoderJS();\x0d\n\x0d\nfunction makeTextDecoderICU() {\x0d\n  const {\x0d\n    decode: _decode\x2C\x0d\n    getConverter\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      const handle = getConverter(enc\x2C flags);\x0d\n      if (handle === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      this[kHandle] = handle;\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n    }\x0d\n\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (!isArrayBufferView(input)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null)\x0d\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\x0d\n\x0d\n      const ret = _decode(this[kHandle]\x2C input\x2C flags);\x0d\n      if (typeof ret === 'number') {\x0d\n        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding\x2C ret);\x0d\n      }\x0d\n      return ret.toString('ucs2');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\nfunction makeTextDecoderJS() {\x0d\n  let StringDecoder;\x0d\n  function lazyStringDecoder() {\x0d\n    if (StringDecoder === undefined)\x0d\n      ({ StringDecoder } = require('string_decoder'));\x0d\n    return StringDecoder;\x0d\n  }\x0d\n\x0d\n  const kBOMSeen = Symbol('BOM seen');\x0d\n\x0d\n  function hasConverter(encoding) {\x0d\n    return encoding === 'utf-8' || encoding === 'utf-16le';\x0d\n  }\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined || !hasConverter(enc))\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        if (options.fatal) {\x0d\n          throw new ERR_NO_ICU('"fatal" option');\x0d\n        }\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\x0d\n      this[kHandle] = new (lazyStringDecoder())(enc);\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kBOMSeen] = false;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (isArrayBufferView(input)) {\x0d\n        input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\x0d\n                                  input.byteLength);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\x0d\n        this[kBOMSeen] = false;\x0d\n      }\x0d\n\x0d\n      if (options !== null && options.stream) {\x0d\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\x0d\n      } else {\x0d\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\x0d\n      }\x0d\n\x0d\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\x0d\n        this[kHandle].end(input) :\x0d\n        this[kHandle].write(input);\x0d\n\x0d\n      if (result.length > 0 &&\x0d\n          !this[kBOMSeen] &&\x0d\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\x0d\n        // If the very first result in the stream is a BOM\x2C and we are not\x0d\n        // explicitly told to ignore it\x2C then we discard it.\x0d\n        if (result[0] === '\\ufeff') {\x0d\n          result = StringPrototypeSlice(result\x2C 1);\x0d\n        }\x0d\n        this[kBOMSeen] = true;\x0d\n      }\x0d\n\x0d\n      return result;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\n// Mix in some shared properties.\x0d\nObjectDefineProperties(\x0d\n  TextDecoder.prototype\x2C\x0d\n  ObjectGetOwnPropertyDescriptors({\x0d\n    get encoding() {\x0d\n      validateDecoder(this);\x0d\n      return this[kEncoding];\x0d\n    }\x2C\x0d\n\x0d\n    get fatal() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\x0d\n    }\x2C\x0d\n\x0d\n    get ignoreBOM() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\x0d\n              CONVERTER_FLAGS_IGNORE_BOM;\x0d\n    }\x2C\x0d\n\x0d\n    [inspect](depth\x2C opts) {\x0d\n      validateDecoder(this);\x0d\n      if (typeof depth === 'number' && depth < 0)\x0d\n        return this;\x0d\n      const constructor = getConstructorOf(this) || TextDecoder;\x0d\n      const obj = ObjectCreate({ constructor });\x0d\n      obj.encoding = this.encoding;\x0d\n      obj.fatal = this.fatal;\x0d\n      obj.ignoreBOM = this.ignoreBOM;\x0d\n      if (opts.showHidden) {\x0d\n        obj[kFlags] = this[kFlags];\x0d\n        obj[kHandle] = this[kHandle];\x0d\n      }\x0d\n      // Lazy to avoid circular dependency\x0d\n      const { inspect } = require('internal/util/inspect');\x0d\n      return `${constructor.name} ${inspect(obj)}`;\x0d\n    }\x0d\n  })\x0d\n);\x0d\n\x0d\nObjectDefineProperties(TextDecoder.prototype\x2C {\x0d\n  decode: kEnumerableProperty\x2C\x0d\n  [inspect]: { enumerable: false }\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    configurable: true\x2C\x0d\n    value: 'TextDecoder'\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  getEncodingFromLabel\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x0d\n};\x0d\n
code-source-info,0x1dc8f4a3ffe,27,10699,11509,C15O10699C21O10743C25O10776C35O10791C43O10776C48O10927C53O10927C58O10966C60O10998C69O11004C74O10998C75O11067C77O11077C81O11127C94O11135C103O11188C116O11200C125O11265C130O11265C136O11298C138O11333C147O11339C152O11333C153O11390C157O11395C161O11405C165O11420C169O11425C174O11434C178O11451C182O11456C187O11464C191O11480C195O11485C200O11496C205O11508,,
code-creation,LazyCompile,10,225504,0x1dc8f4a5486,55,getEncodingFromLabel node:internal/encoding:314:30,0x29f2e353d20,~
code-source-info,0x1dc8f4a5486,27,8982,9136,C0O9007C5O9017C10O9017C16O9032C18O9055C20O9066C21O9070C26O9087C34O9117C39O9117C44O9091C49O9087C54O9133,,
code-creation,LazyCompile,10,225595,0x1dc8f4a5796,227,decode node:internal/encoding:409:11,0x29f2e354108,~
code-source-info,0x1dc8f4a5796,27,11525,12371,C8O11534C25O11564C30O11564C34O11594C41O11598C47O11634C52O11642C56O11654C61O11655C69O11682C76O11687C82O11724C102O11730C107O11724C108O11904C118O11919C126O11904C131O12055C133O12065C137O12113C153O12126C159O12170C168O12183C170O12182C180O12170C186O12215C190O12255C197O12304C207O12261C212O12255C213O12347C221O12347C226O12364,,
code-creation,LazyCompile,10,225654,0x1dc8f4a59be,37,validateDecoder node:internal/encoding:65:25,0x29f2e353c80,~
code-source-info,0x1dc8f4a59be,27,1357,1461,C0O1368C7O1391C9O1390C14O1401C19O1416C29O1422C34O1416C36O1460,,
code-creation,LazyCompile,10,225708,0x1dc8f4a5b0e,12,slice node:buffer:603:12,0x21794177ac8,~
code-source-info,0x1dc8f4a5b0e,24,17607,17653,C0O17632C5O17632C11O17653,,
code-creation,LazyCompile,10,225754,0x1dc8f4a5bf6,10, node:internal/modules/esm/translators:42:63,0x204a9c88c90,~
code-source-info,0x1dc8f4a5bf6,129,1058,1085,C0O1071C2O1077C9O1084,,
code-creation,Script,10,225827,0x1dc8f4a5fe6,77, file:///C:/Exequiel/curso-coderhouse-backend/practica/gzip-log-perf/routes/randomNumbers.js:1:1,0x1dc8f4a5d80,~
script-source,145,file:///C:/Exequiel/curso-coderhouse-backend/practica/gzip-log-perf/routes/randomNumbers.js,\x0d\n\x0d\nexport function numerosRandom(x = 100000000){const numeros = {}\x0d\nfor(let i = 0; i < x; i++) {\x0d\n    const randomNum = Math.ceil(Math.random() * 1000)\x0d\n    numeros[randomNum] ? numeros[randomNum]++ : numeros[randomNum] = 1\x0d\n}\x0d\nreturn numeros\x0d\n}\x0d\n\x0d\nprocess.on('message'\x2C valor => {\x0d\n    let calcular\x0d\n    if(valor === null) {\x0d\n        calcular = numerosRandom()\x0d\n    } else {\x0d\n        calcular = numerosRandom(valor)\x0d\n    }\x0d\n    process.send(`Calculo de numeros random ${JSON.stringify(calcular)}`)\x0d\n})
code-source-info,0x1dc8f4a5fe6,145,0,503,C10O0C28O0C48O0C52O250C56O258C69O258C76O503,,
code-creation,LazyCompile,10,225971,0x1dc8f4a644e,44,refCounted node:internal/child_process:539:13,0x3a72c5e3f28,~
code-source-info,0x1dc8f4a644e,100,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,226023,0x1dc8f4a656e,15, node:internal/modules/esm/loader:382:15,0x1dc8f48fb58,~
code-source-info,0x1dc8f4a656e,114,11928,11965,C0O11931C5O11951C10O11951C14O11965,,
code-creation,LazyCompile,10,226116,0x1dc8f4a671e,307,removeListener node:events:689:28,0x2179416bcd8,~
code-source-info,0x1dc8f4a671e
code-creation,LazyCompile,10,226209,0x1dc8f4a6a06,64,stopListeningIfSignal node:internal/process/signal:43:31,0x17449ffdd70,~
code-source-info,0x1dc8f4a6a06,93,978,1149,C0O1003C5O1015C10O1015C16O1029C21O1063C26O1063C33O1083C38O1102C43O1102C47O1116C52O1128C57O1134C63O1148,,
tick,0x7ff7c01eeb7a,226329,0,0x0,3,0x7ff7c08240c0,0x3a72c5d5827,0x1dc8f4a6790,0x1dc8f48c630,0x7ff7c0c8b243
code-creation,LazyCompile,10,226348,0x1dc8f4a6b4e,30,onRemoveListener node:child_process:178:57,0x3318a248be0,~
code-source-info,0x1dc8f4a6b4e,99,5444,5535,C0O5458C2O5467C9O5489C14O5507C19O5515C24O5515C29O5534,,
tick,0x7ffdf681f424,228434,0,0x0,8
tick,0x7ffdf681f424,230399,0,0x0,8
tick,0x7ffdf681f424,232361,0,0x0,8
tick,0x7ffdf681f424,234366,0,0x0,8
tick,0x7ffdf681f424,236371,0,0x0,8
tick,0x7ffdf681f424,238360,0,0x0,8
tick,0x7ffdf681f424,240388,0,0x0,8
tick,0x7ffdf681f424,242362,0,0x0,8
tick,0x7ffdf681f424,244355,0,0x0,8
tick,0x7ffdf681f424,246358,0,0x0,8
tick,0x7ffdf681f424,248335,0,0x0,8
tick,0x7ffdf681f424,250286,0,0x0,8
tick,0x7ffdf681f424,252296,0,0x0,8
tick,0x7ffdf681f424,254291,0,0x0,8
tick,0x7ffdf681f424,256310,0,0x0,8
tick,0x7ffdf681f424,258305,0,0x0,8
tick,0x7ffdf681f424,260311,0,0x0,8
tick,0x7ffdf681f424,262279,0,0x0,8
tick,0x7ffdf681f424,264339,0,0x0,8
tick,0x7ffdf681f424,266312,0,0x0,8
tick,0x7ffdf681f424,268329,0,0x0,8
tick,0x7ffdf681f424,270323,0,0x0,8
tick,0x7ffdf681f424,272311,0,0x0,8
tick,0x7ffdf681f424,274268,0,0x0,8
tick,0x7ffdf681f424,276282,0,0x0,8
tick,0x7ffdf681f424,278306,0,0x0,8
tick,0x7ffdf681f424,280298,0,0x0,8
tick,0x7ffdf681f424,282287,0,0x0,8
tick,0x7ffdf681f424,284238,0,0x0,8
tick,0x7ffdf681f424,286286,0,0x0,8
tick,0x7ffdf681f424,288239,0,0x0,8
tick,0x7ffdf681f424,290294,0,0x0,8
tick,0x7ffdf681f424,292402,0,0x0,8
tick,0x7ffdf681f424,294237,0,0x0,8
tick,0x7ffdf681f424,296250,0,0x0,8
tick,0x7ffdf681f424,298251,0,0x0,8
tick,0x7ffdf681f424,300267,0,0x0,8
tick,0x7ffdf681f424,302215,0,0x0,8
tick,0x7ffdf681f424,304228,0,0x0,8
tick,0x7ffdf681f424,306216,0,0x0,8
tick,0x7ffdf681f424,308238,0,0x0,8
tick,0x7ffdf681f424,310218,0,0x0,8
tick,0x7ffdf681f424,312189,0,0x0,8
tick,0x7ffdf681f424,314185,0,0x0,8
tick,0x7ffdf681f424,316203,0,0x0,8
tick,0x7ffdf681f424,318174,0,0x0,8
tick,0x7ffdf681f424,320191,0,0x0,8
tick,0x7ffdf681f424,322164,0,0x0,8
tick,0x7ffdf681f424,324178,0,0x0,8
tick,0x7ffdf681f424,326183,0,0x0,8
tick,0x7ffdf681f424,328208,0,0x0,8
tick,0x7ffdf681f424,330201,0,0x0,8
tick,0x7ffdf681f424,332221,0,0x0,8
tick,0x7ffdf681f424,334132,0,0x0,8
tick,0x7ffdf681f424,336163,0,0x0,8
tick,0x7ffdf681f424,338198,0,0x0,8
tick,0x7ffdf681f424,340124,0,0x0,8
tick,0x7ffdf681f424,342122,0,0x0,8
tick,0x7ffdf681f424,344104,0,0x0,8
tick,0x7ffdf681f424,346100,0,0x0,8
tick,0x7ffdf681f424,348107,0,0x0,8
tick,0x7ffdf681f424,350095,0,0x0,8
tick,0x7ffdf681f424,352067,0,0x0,8
tick,0x7ffdf681f424,354077,0,0x0,8
tick,0x7ffdf681f424,356083,0,0x0,8
tick,0x7ffdf681f424,358085,0,0x0,8
tick,0x7ffdf681f424,360157,0,0x0,8
tick,0x7ffdf681f424,361954,0,0x0,8
tick,0x7ffdf681f424,364048,0,0x0,8
tick,0x7ffdf681f424,366047,0,0x0,8
tick,0x7ffdf681f424,368046,0,0x0,8
tick,0x7ffdf681f424,370036,0,0x0,8
tick,0x7ffdf681f424,372080,0,0x0,8
tick,0x7ffdf681f424,373930,0,0x0,8
tick,0x7ffdf681f424,376034,0,0x0,8
tick,0x7ffdf681f424,378023,0,0x0,8
tick,0x7ffdf681f424,380004,0,0x0,8
tick,0x7ffdf681f424,382015,0,0x0,8
tick,0x7ffdf681f424,383991,0,0x0,8
tick,0x7ffdf681f424,386000,0,0x0,8
tick,0x7ffdf681f424,387878,0,0x0,8
tick,0x7ffdf681f424,389988,0,0x0,8
tick,0x7ffdf681f424,391990,0,0x0,8
tick,0x7ffdf681f424,394008,0,0x0,8
tick,0x7ffdf681f424,395974,0,0x0,8
tick,0x7ffdf681f424,397966,0,0x0,8
tick,0x7ffdf681f424,399964,0,0x0,8
tick,0x7ffdf681f424,401846,0,0x0,8
tick,0x7ffdf681f424,403968,0,0x0,8
tick,0x7ffdf681f424,405934,0,0x0,8
tick,0x7ffdf681f424,407976,0,0x0,8
tick,0x7ffdf681f424,409945,0,0x0,8
tick,0x7ffdf681f424,411868,0,0x0,8
tick,0x7ffdf681f424,413944,0,0x0,8
tick,0x7ffdf681f424,415870,0,0x0,8
tick,0x7ffdf681f424,417817,0,0x0,8
tick,0x7ffdf681f424,419796,0,0x0,8
tick,0x7ffdf681f424,421796,0,0x0,8
tick,0x7ffdf681f424,423772,0,0x0,8
tick,0x7ffdf681f424,425789,0,0x0,8
tick,0x7ffdf681f424,427829,0,0x0,8
tick,0x7ffdf681f424,429774,0,0x0,8
tick,0x7ffdf681f424,431762,0,0x0,8
tick,0x7ffdf681f424,433714,0,0x0,8
tick,0x7ffdf681f424,435756,0,0x0,8
tick,0x7ffdf681f424,437827,0,0x0,8
tick,0x7ffdf681f424,439835,0,0x0,8
tick,0x7ffdf681f424,441845,0,0x0,8
tick,0x7ffdf681f424,443848,0,0x0,8
tick,0x7ffdf681f424,445844,0,0x0,8
tick,0x7ffdf681f424,447842,0,0x0,8
tick,0x7ffdf681f424,449804,0,0x0,8
tick,0x7ffdf681f424,451782,0,0x0,8
tick,0x7ffdf681f424,453819,0,0x0,8
tick,0x7ffdf681f424,455818,0,0x0,8
tick,0x7ffdf681f424,457821,0,0x0,8
tick,0x7ffdf681f424,459701,0,0x0,8
tick,0x7ffdf681f424,461689,0,0x0,8
tick,0x7ffdf681f424,463788,0,0x0,8
tick,0x7ffdf681f424,465669,0,0x0,8
tick,0x7ffdf681f424,467789,0,0x0,8
tick,0x7ffdf681f424,469783,0,0x0,8
tick,0x7ffdf681f424,471756,0,0x0,8
tick,0x7ffdf681f424,473782,0,0x0,8
tick,0x7ffdf681f424,475762,0,0x0,8
tick,0x7ffdf681f424,477763,0,0x0,8
tick,0x7ffdf681f424,479748,0,0x0,8
tick,0x7ffdf681f424,481714,0,0x0,8
tick,0x7ffdf681f424,483748,0,0x0,8
tick,0x7ffdf681f424,485733,0,0x0,8
tick,0x7ffdf681f424,487733,0,0x0,8
tick,0x7ffdf681f424,489725,0,0x0,8
tick,0x7ffdf681f424,491660,0,0x0,8
tick,0x7ffdf681f424,493683,0,0x0,8
tick,0x7ffdf681f424,495703,0,0x0,8
tick,0x7ffdf681f424,497706,0,0x0,8
tick,0x7ffdf681f424,499700,0,0x0,8
tick,0x7ffdf681f424,501693,0,0x0,8
tick,0x7ffdf681f424,503783,0,0x0,8
tick,0x7ffdf681f424,505682,0,0x0,8
tick,0x7ffdf681f424,507576,0,0x0,8
tick,0x7ffdf681f424,509675,0,0x0,8
tick,0x7ffdf681f424,511680,0,0x0,8
tick,0x7ffdf681f424,513662,0,0x0,8
tick,0x7ffdf681f424,515550,0,0x0,8
tick,0x7ffdf681f424,517649,0,0x0,8
tick,0x7ffdf681f424,519647,0,0x0,8
tick,0x7ffdf681f424,521680,0,0x0,8
tick,0x7ffdf681f424,523640,0,0x0,8
tick,0x7ffdf681f424,525642,0,0x0,8
tick,0x7ffdf681f424,527618,0,0x0,8
tick,0x7ffdf681f424,529619,0,0x0,8
tick,0x7ffdf681f424,531556,0,0x0,8
tick,0x7ffdf681f424,533609,0,0x0,8
tick,0x7ffdf681f424,535614,0,0x0,8
tick,0x7ffdf681f424,537565,0,0x0,8
tick,0x7ffdf681f424,539620,0,0x0,8
tick,0x7ffdf681f424,541473,0,0x0,8
tick,0x7ffdf681f424,543579,0,0x0,8
tick,0x7ffdf681f424,545581,0,0x0,8
tick,0x7ffdf681f424,547510,0,0x0,8
tick,0x7ffdf681f424,549456,0,0x0,8
tick,0x7ffdf681f424,551439,0,0x0,8
tick,0x7ffdf681f424,553507,0,0x0,8
tick,0x7ffdf681f424,555452,0,0x0,8
tick,0x7ffdf681f424,557433,0,0x0,8
tick,0x7ffdf681f424,559379,0,0x0,8
tick,0x7ffdf681f424,561446,0,0x0,8
tick,0x7ffdf681f424,563480,0,0x0,8
tick,0x7ffdf681f424,565478,0,0x0,8
tick,0x7ffdf681f424,567474,0,0x0,8
tick,0x7ffdf681f424,569545,0,0x0,8
tick,0x7ffdf681f424,571421,0,0x0,8
tick,0x7ffdf681f424,573418,0,0x0,8
tick,0x7ffdf681f424,574544,0,0x0,8
tick,0x7ffdf681f424,576576,0,0x0,8
tick,0x7ffdf681f424,578416,0,0x0,8
tick,0x7ffdf681f424,580383,0,0x0,8
tick,0x7ffdf681f424,582383,0,0x0,8
tick,0x7ffdf681f424,584427,0,0x0,8
tick,0x7ffdf681f424,586453,0,0x0,8
tick,0x7ffdf681f424,588422,0,0x0,8
tick,0x7ffdf681f424,590395,0,0x0,8
tick,0x7ffdf681f424,592497,0,0x0,8
tick,0x7ffdf681f424,594480,0,0x0,8
tick,0x7ffdf681f424,595713,0,0x0,8
tick,0x7ffdf681f424,597707,0,0x0,8
tick,0x7ffdf681f424,599668,0,0x0,8
tick,0x7ffdf681f424,601653,0,0x0,8
tick,0x7ffdf681f424,603715,0,0x0,8
tick,0x7ffdf681f424,604888,0,0x0,8
tick,0x7ffdf681f424,606103,0,0x0,8
tick,0x7ffdf681f424,607220,0,0x0,8
tick,0x7ffdf681f424,609292,0,0x0,8
tick,0x7ffdf681f424,611231,0,0x0,8
tick,0x7ffdf681f424,613193,0,0x0,8
tick,0x7ffdf681f424,615238,0,0x0,8
tick,0x7ffdf681f424,616410,0,0x0,8
tick,0x7ffdf681f424,618450,0,0x0,8
tick,0x7ffdf681f424,620411,0,0x0,8
tick,0x7ffdf681f424,622408,0,0x0,8
tick,0x7ffdf681f424,623616,0,0x0,8
tick,0x7ffdf681f424,625623,0,0x0,8
tick,0x7ffdf681f424,627594,0,0x0,8
tick,0x7ffdf681f424,628730,0,0x0,8
tick,0x7ffdf681f424,630724,0,0x0,8
tick,0x7ffdf681f424,632747,0,0x0,8
tick,0x7ffdf681f424,633902,0,0x0,8
tick,0x7ffdf681f424,635892,0,0x0,8
tick,0x7ffdf681f424,636975,0,0x0,8
tick,0x7ffdf681f424,638982,0,0x0,8
tick,0x7ffdf681f424,640958,0,0x0,8
tick,0x7ffdf681f424,642963,0,0x0,8
tick,0x7ffdf681f424,644992,0,0x0,8
tick,0x7ffdf681f424,646995,0,0x0,8
tick,0x7ffdf681f424,648867,0,0x0,8
tick,0x7ffdf681f424,650990,0,0x0,8
tick,0x7ffdf681f424,652860,0,0x0,8
tick,0x7ffdf681f424,654873,0,0x0,8
tick,0x7ffdf681f424,656970,0,0x0,8
tick,0x7ffdf681f424,658922,0,0x0,8
tick,0x7ffdf681f424,660992,0,0x0,8
tick,0x7ffdf681f424,662960,0,0x0,8
tick,0x7ffdf681f424,664977,0,0x0,8
tick,0x7ffdf681f424,666942,0,0x0,8
tick,0x7ffdf681f424,668938,0,0x0,8
tick,0x7ffdf681f424,670932,0,0x0,8
tick,0x7ffdf681f424,672932,0,0x0,8
tick,0x7ffdf681f424,674956,0,0x0,8
tick,0x7ffdf681f424,676921,0,0x0,8
tick,0x7ffdf681f424,678925,0,0x0,8
tick,0x7ffdf681f424,680910,0,0x0,8
tick,0x7ffdf681f424,682902,0,0x0,8
tick,0x7ffdf681f424,684897,0,0x0,8
tick,0x7ffdf681f424,686900,0,0x0,8
tick,0x7ffdf681f424,688894,0,0x0,8
tick,0x7ffdf681f424,690808,0,0x0,8
tick,0x7ffdf681f424,692781,0,0x0,8
tick,0x7ffdf681f424,694877,0,0x0,8
tick,0x7ffdf681f424,696920,0,0x0,8
tick,0x7ffdf681f424,698867,0,0x0,8
tick,0x7ffdf681f424,700899,0,0x0,8
tick,0x7ffdf681f424,702848,0,0x0,8
tick,0x7ffdf681f424,704853,0,0x0,8
tick,0x7ffdf681f424,706845,0,0x0,8
tick,0x7ffdf681f424,708757,0,0x0,8
tick,0x7ffdf681f424,710838,0,0x0,8
tick,0x7ffdf681f424,712846,0,0x0,8
tick,0x7ffdf681f424,714829,0,0x0,8
tick,0x7ffdf681f424,716819,0,0x0,8
tick,0x7ffdf681f424,718889,0,0x0,8
tick,0x7ffdf681f424,720809,0,0x0,8
tick,0x7ffdf681f424,722848,0,0x0,8
tick,0x7ffdf681f424,724788,0,0x0,8
tick,0x7ffdf681f424,726791,0,0x0,8
tick,0x7ffdf681f424,728790,0,0x0,8
tick,0x7ffdf681f424,730761,0,0x0,8
tick,0x7ffdf681f424,732665,0,0x0,8
tick,0x7ffdf681f424,734769,0,0x0,8
tick,0x7ffdf681f424,736795,0,0x0,8
tick,0x7ffdf681f424,738761,0,0x0,8
tick,0x7ffdf681f424,740697,0,0x0,8
tick,0x7ffdf681f424,742753,0,0x0,8
tick,0x7ffdf681f424,744747,0,0x0,8
tick,0x7ffdf681f424,746734,0,0x0,8
tick,0x7ffdf681f424,748709,0,0x0,8
tick,0x7ffdf681f424,750680,0,0x0,8
tick,0x7ffdf681f424,752728,0,0x0,8
tick,0x7ffdf681f424,754724,0,0x0,8
tick,0x7ffdf681f424,756710,0,0x0,8
tick,0x7ffdf681f424,758702,0,0x0,8
tick,0x7ffdf681f424,760653,0,0x0,8
tick,0x7ffdf681f424,762720,0,0x0,8
tick,0x7ffdf681f424,764687,0,0x0,8
tick,0x7ffdf681f424,766726,0,0x0,8
tick,0x7ffdf681f424,768662,0,0x0,8
tick,0x7ffdf681f424,770575,0,0x0,8
tick,0x7ffdf681f424,772556,0,0x0,8
tick,0x7ffdf681f424,774644,0,0x0,8
tick,0x7ffdf681f424,776651,0,0x0,8
tick,0x7ffdf681f424,778641,0,0x0,8
tick,0x7ffdf681f424,780630,0,0x0,8
tick,0x7ffdf681f424,782533,0,0x0,8
tick,0x7ffdf681f424,784667,0,0x0,8
tick,0x7ffdf681f424,786633,0,0x0,8
tick,0x7ffdf681f424,788672,0,0x0,8
tick,0x7ffdf681f424,790561,0,0x0,8
tick,0x7ffdf681f424,792609,0,0x0,8
tick,0x7ffdf681f424,794611,0,0x0,8
tick,0x7ffdf681f424,796564,0,0x0,8
tick,0x7ffdf681f424,798590,0,0x0,8
tick,0x7ffdf681f424,800584,0,0x0,8
tick,0x7ffdf681f424,802585,0,0x0,8
tick,0x7ffdf681f424,804584,0,0x0,8
tick,0x7ffdf681f424,806539,0,0x0,8
tick,0x7ffdf681f424,808562,0,0x0,8
tick,0x7ffdf681f424,810513,0,0x0,8
tick,0x7ffdf681f424,812473,0,0x0,8
tick,0x7ffdf681f424,814552,0,0x0,8
tick,0x7ffdf681f424,816551,0,0x0,8
tick,0x7ffdf681f424,818496,0,0x0,8
tick,0x7ffdf681f424,820536,0,0x0,8
tick,0x7ffdf681f424,822530,0,0x0,8
tick,0x7ffdf681f424,824423,0,0x0,8
tick,0x7ffdf681f424,826508,0,0x0,8
tick,0x7ffdf681f424,828471,0,0x0,8
tick,0x7ffdf681f424,830506,0,0x0,8
tick,0x7ffdf681f424,832403,0,0x0,8
tick,0x7ffdf681f424,834493,0,0x0,8
tick,0x7ffdf681f424,836495,0,0x0,8
tick,0x7ffdf681f424,838486,0,0x0,8
tick,0x7ffdf681f424,840452,0,0x0,8
tick,0x7ffdf681f424,842475,0,0x0,8
tick,0x7ffdf681f424,844471,0,0x0,8
tick,0x7ffdf681f424,846470,0,0x0,8
tick,0x7ffdf681f424,848459,0,0x0,8
tick,0x7ffdf681f424,850424,0,0x0,8
tick,0x7ffdf681f424,852362,0,0x0,8
tick,0x7ffdf681f424,854454,0,0x0,8
tick,0x7ffdf681f424,856442,0,0x0,8
tick,0x7ffdf681f424,858430,0,0x0,8
tick,0x7ffdf681f424,860430,0,0x0,8
tick,0x7ffdf681f424,862388,0,0x0,8
tick,0x7ffdf681f424,864413,0,0x0,8
tick,0x7ffdf681f424,866415,0,0x0,8
tick,0x7ffdf681f424,868301,0,0x0,8
tick,0x7ffdf681f424,870289,0,0x0,8
tick,0x7ffdf681f424,872292,0,0x0,8
tick,0x7ffdf681f424,874294,0,0x0,8
tick,0x7ffdf681f424,876291,0,0x0,8
tick,0x7ffdf681f424,878262,0,0x0,8
tick,0x7ffdf681f424,880270,0,0x0,8
tick,0x7ffdf681f424,882267,0,0x0,8
tick,0x7ffdf681f424,884181,0,0x0,8
tick,0x7ffdf681f424,886205,0,0x0,8
tick,0x7ffdf681f424,888196,0,0x0,8
tick,0x7ffdf681f424,890199,0,0x0,8
tick,0x7ffdf681f424,892187,0,0x0,8
tick,0x7ffdf681f424,894188,0,0x0,8
tick,0x7ffdf681f424,896175,0,0x0,8
tick,0x7ffdf681f424,898179,0,0x0,8
tick,0x7ffdf681f424,900190,0,0x0,8
tick,0x7ffdf681f424,902175,0,0x0,8
tick,0x7ffdf681f424,904152,0,0x0,8
tick,0x7ffdf681f424,906208,0,0x0,8
tick,0x7ffdf681f424,908209,0,0x0,8
tick,0x7ffdf681f424,910211,0,0x0,8
tick,0x7ffdf681f424,912098,0,0x0,8
tick,0x7ffdf681f424,914105,0,0x0,8
tick,0x7ffdf681f424,916084,0,0x0,8
tick,0x7ffdf681f424,918109,0,0x0,8
tick,0x7ffdf681f424,920081,0,0x0,8
tick,0x7ffdf681f424,922155,0,0x0,8
tick,0x7ffdf681f424,924066,0,0x0,8
tick,0x7ffdf681f424,926099,0,0x0,8
tick,0x7ffdf681f424,928097,0,0x0,8
tick,0x7ffdf681f424,930133,0,0x0,8
tick,0x7ffdf681f424,932106,0,0x0,8
tick,0x7ffdf681f424,934118,0,0x0,8
tick,0x7ffdf681f424,936039,0,0x0,8
tick,0x7ffdf681f424,938130,0,0x0,8
tick,0x7ffdf681f424,940061,0,0x0,8
tick,0x7ffdf681f424,942079,0,0x0,8
tick,0x7ffdf681f424,944065,0,0x0,8
tick,0x7ffdf681f424,946035,0,0x0,8
tick,0x7ffdf681f424,948034,0,0x0,8
tick,0x7ffdf681f424,950030,0,0x0,8
tick,0x7ffdf681f424,952021,0,0x0,8
tick,0x7ffdf681f424,954018,0,0x0,8
tick,0x7ffdf681f424,956023,0,0x0,8
tick,0x7ffdf681f424,958032,0,0x0,8
tick,0x7ffdf681f424,960024,0,0x0,8
tick,0x7ffdf681f424,962002,0,0x0,8
tick,0x7ffdf681f424,963985,0,0x0,8
tick,0x7ffdf681f424,965985,0,0x0,8
tick,0x7ffdf681f424,967981,0,0x0,8
tick,0x7ffdf681f424,969958,0,0x0,8
tick,0x7ffdf681f424,972051,0,0x0,8
tick,0x7ffdf681f424,974004,0,0x0,8
tick,0x7ffdf681f424,975973,0,0x0,8
tick,0x7ffdf681f424,977959,0,0x0,8
tick,0x7ffdf681f424,979964,0,0x0,8
tick,0x7ffdf681f424,982028,0,0x0,8
tick,0x7ffdf681f424,984007,0,0x0,8
tick,0x7ffdf681f424,986071,0,0x0,8
tick,0x7ffdf681f424,988087,0,0x0,8
tick,0x7ffdf681f424,990080,0,0x0,8
tick,0x7ffdf681f424,992073,0,0x0,8
tick,0x7ffdf681f424,994078,0,0x0,8
tick,0x7ffdf681f424,995964,0,0x0,8
tick,0x7ffdf681f424,998070,0,0x0,8
tick,0x7ffdf681f424,1000056,0,0x0,8
tick,0x7ffdf681f424,1001947,0,0x0,8
tick,0x7ffdf681f424,1004039,0,0x0,8
tick,0x7ffdf681f424,1006038,0,0x0,8
tick,0x7ffdf681f424,1008038,0,0x0,8
tick,0x7ffdf681f424,1010029,0,0x0,8
tick,0x7ffdf681f424,1011902,0,0x0,8
tick,0x7ffdf681f424,1014019,0,0x0,8
tick,0x7ffdf681f424,1016024,0,0x0,8
tick,0x7ffdf681f424,1018013,0,0x0,8
tick,0x7ffdf681f424,1020010,0,0x0,8
tick,0x7ffdf681f424,1022002,0,0x0,8
tick,0x7ffdf681f424,1023926,0,0x0,8
tick,0x7ffdf681f424,1025967,0,0x0,8
tick,0x7ffdf681f424,1027938,0,0x0,8
tick,0x7ffdf681f424,1029984,0,0x0,8
tick,0x7ffdf681f424,1031871,0,0x0,8
tick,0x7ffdf681f424,1033963,0,0x0,8
tick,0x7ffdf681f424,1035968,0,0x0,8
tick,0x7ffdf681f424,1037964,0,0x0,8
tick,0x7ffdf681f424,1039948,0,0x0,8
tick,0x7ffdf681f424,1041853,0,0x0,8
tick,0x7ffdf681f424,1043945,0,0x0,8
tick,0x7ffdf681f424,1045826,0,0x0,8
tick,0x7ffdf681f424,1047919,0,0x0,8
tick,0x7ffdf681f424,1049924,0,0x0,8
tick,0x7ffdf681f424,1051870,0,0x0,8
tick,0x7ffdf681f424,1053912,0,0x0,8
tick,0x7ffdf681f424,1055901,0,0x0,8
tick,0x7ffdf681f424,1057909,0,0x0,8
tick,0x7ffdf681f424,1059908,0,0x0,8
tick,0x7ffdf681f424,1061866,0,0x0,8
tick,0x7ffdf681f424,1063782,0,0x0,8
tick,0x7ffdf681f424,1065817,0,0x0,8
tick,0x7ffdf681f424,1067865,0,0x0,8
tick,0x7ffdf681f424,1069874,0,0x0,8
tick,0x7ffdf681f424,1071781,0,0x0,8
tick,0x7ffdf681f424,1073923,0,0x0,8
tick,0x7ffdf681f424,1075850,0,0x0,8
tick,0x7ffdf681f424,1077849,0,0x0,8
tick,0x7ffdf681f424,1079684,0,0x0,8
tick,0x7ffdf681f424,1081626,0,0x0,8
tick,0x7ffdf681f424,1083642,0,0x0,8
tick,0x7ffdf681f424,1085705,0,0x0,8
tick,0x7ffdf681f424,1087717,0,0x0,8
tick,0x7ffdf681f424,1089613,0,0x0,8
tick,0x7ffdf681f424,1091606,0,0x0,8
tick,0x7ffdf681f424,1093594,0,0x0,8
tick,0x7ffdf681f424,1095642,0,0x0,8
tick,0x7ffdf681f424,1097616,0,0x0,8
tick,0x7ffdf681f424,1099582,0,0x0,8
tick,0x7ffdf681f424,1101580,0,0x0,8
tick,0x7ffdf681f424,1103572,0,0x0,8
tick,0x7ffdf681f424,1104638,0,0x0,8
tick,0x7ffdf681f424,1106627,0,0x0,8
tick,0x7ffdf681f424,1108632,0,0x0,8
tick,0x7ffdf681f424,1110571,0,0x0,8
tick,0x7ffdf681f424,1112593,0,0x0,8
tick,0x7ffdf681f424,1114541,0,0x0,8
tick,0x7ffdf681f424,1116559,0,0x0,8
tick,0x7ffdf681f424,1118636,0,0x0,8
tick,0x7ffdf681f424,1120545,0,0x0,8
tick,0x7ffdf681f424,1122539,0,0x0,8
tick,0x7ffdf681f424,1123631,0,0x0,8
tick,0x7ffdf681f424,1125581,0,0x0,8
tick,0x7ffdf681f424,1127596,0,0x0,8
tick,0x7ffdf681f424,1129567,0,0x0,8
tick,0x7ffdf681f424,1131577,0,0x0,8
tick,0x7ffdf681f424,1133510,0,0x0,8
tick,0x7ffdf681f424,1135505,0,0x0,8
tick,0x7ffdf681f424,1137527,0,0x0,8
tick,0x7ffdf681f424,1139550,0,0x0,8
tick,0x7ffdf681f424,1141558,0,0x0,8
tick,0x7ffdf681f424,1143603,0,0x0,8
tick,0x7ffdf681f424,1145618,0,0x0,8
tick,0x7ffdf681f424,1147590,0,0x0,8
tick,0x7ffdf681f424,1149495,0,0x0,8
tick,0x7ffdf681f424,1151609,0,0x0,8
tick,0x7ffdf681f424,1153643,0,0x0,8
tick,0x7ffdf681f424,1155526,0,0x0,8
tick,0x7ffdf681f424,1157574,0,0x0,8
tick,0x7ffdf681f424,1159537,0,0x0,8
tick,0x7ffdf681f424,1161510,0,0x0,8
tick,0x7ffdf681f424,1163605,0,0x0,8
tick,0x7ffdf681f424,1165633,0,0x0,8
tick,0x7ffdf681f424,1167630,0,0x0,8
tick,0x7ffdf681f424,1169575,0,0x0,8
tick,0x7ffdf681f424,1171477,0,0x0,8
tick,0x7ffdf681f424,1173611,0,0x0,8
tick,0x7ffdf681f424,1175585,0,0x0,8
tick,0x7ffdf681f424,1177570,0,0x0,8
tick,0x7ffdf681f424,1179548,0,0x0,8
tick,0x7ffdf681f424,1181493,0,0x0,8
tick,0x7ffdf681f424,1183447,0,0x0,8
tick,0x7ffdf681f424,1185540,0,0x0,8
tick,0x7ffdf681f424,1187561,0,0x0,8
tick,0x7ffdf681f424,1189576,0,0x0,8
tick,0x7ffdf681f424,1191495,0,0x0,8
tick,0x7ffdf681f424,1193532,0,0x0,8
tick,0x7ffdf681f424,1195530,0,0x0,8
tick,0x7ffdf681f424,1197524,0,0x0,8
tick,0x7ffdf681f424,1199523,0,0x0,8
tick,0x7ffdf681f424,1201530,0,0x0,8
tick,0x7ffdf681f424,1203511,0,0x0,8
tick,0x7ffdf681f424,1205514,0,0x0,8
tick,0x7ffdf681f424,1207412,0,0x0,8
tick,0x7ffdf681f424,1209375,0,0x0,8
tick,0x7ffdf681f424,1211357,0,0x0,8
tick,0x7ffdf681f424,1213407,0,0x0,8
tick,0x7ffdf681f424,1215455,0,0x0,8
tick,0x7ffdf681f424,1217465,0,0x0,8
tick,0x7ffdf681f424,1219369,0,0x0,8
tick,0x7ffdf681f424,1221384,0,0x0,8
tick,0x7ffdf681f424,1223370,0,0x0,8
tick,0x7ffdf681f424,1225357,0,0x0,8
tick,0x7ffdf681f424,1227382,0,0x0,8
tick,0x7ffdf681f424,1229354,0,0x0,8
tick,0x7ffdf681f424,1231352,0,0x0,8
tick,0x7ffdf681f424,1233486,0,0x0,8
tick,0x7ffdf681f424,1235470,0,0x0,8
tick,0x7ffdf681f424,1237483,0,0x0,8
tick,0x7ffdf681f424,1238701,0,0x0,8
tick,0x7ffdf681f424,1239896,0,0x0,8
tick,0x7ffdf681f424,1241070,0,0x0,8
tick,0x7ffdf681f424,1243080,0,0x0,8
tick,0x7ffdf681f424,1245077,0,0x0,8
tick,0x7ffdf681f424,1246303,0,0x0,8
tick,0x7ffdf681f424,1248181,0,0x0,8
tick,0x7ffdf681f424,1250207,0,0x0,8
tick,0x7ffdf681f424,1252115,0,0x0,8
tick,0x7ffdf681f424,1254151,0,0x0,8
tick,0x7ffdf681f424,1256198,0,0x0,8
tick,0x7ffdf681f424,1258240,0,0x0,8
tick,0x7ffdf681f424,1260111,0,0x0,8
tick,0x7ffdf681f424,1262210,0,0x0,8
tick,0x7ffdf681f424,1264236,0,0x0,8
tick,0x7ffdf681f424,1266100,0,0x0,8
tick,0x7ffdf681f424,1268205,0,0x0,8
tick,0x7ffdf681f424,1270222,0,0x0,8
tick,0x7ffdf681f424,1272201,0,0x0,8
tick,0x7ffdf681f424,1274081,0,0x0,8
tick,0x7ffdf681f424,1276157,0,0x0,8
tick,0x7ffdf681f424,1278413,0,0x0,8
tick,0x7ffdf681f424,1280475,0,0x0,8
tick,0x7ffdf681f424,1282688,0,0x0,8
tick,0x7ffdf681f424,1284611,0,0x0,8
tick,0x7ffdf681f424,1286611,0,0x0,8
tick,0x7ffdf681f424,1288627,0,0x0,8
tick,0x7ffdf681f424,1289731,0,0x0,8
tick,0x7ffdf681f424,1291639,0,0x0,8
tick,0x7ffdf681f424,1293701,0,0x0,8
tick,0x7ffdf681f424,1295684,0,0x0,8
tick,0x7ffdf681f424,1296837,0,0x0,8
tick,0x7ffdf681f424,1298850,0,0x0,8
tick,0x7ffdf681f424,1300810,0,0x0,8
tick,0x7ffdf681f424,1302796,0,0x0,8
tick,0x7ffdf681f424,1304778,0,0x0,8
tick,0x7ffdf681f424,1306772,0,0x0,8
tick,0x7ffdf681f424,1308853,0,0x0,8
tick,0x7ffdf681f424,1310786,0,0x0,8
tick,0x7ffdf681f424,1312763,0,0x0,8
tick,0x7ffdf681f424,1314765,0,0x0,8
tick,0x7ffdf681f424,1316772,0,0x0,8
tick,0x7ffdf681f424,1318770,0,0x0,8
tick,0x7ffdf681f424,1320747,0,0x0,8
tick,0x7ffdf681f424,1322742,0,0x0,8
tick,0x7ffdf681f424,1324737,0,0x0,8
tick,0x7ffdf681f424,1326725,0,0x0,8
tick,0x7ffdf681f424,1328795,0,0x0,8
tick,0x7ffdf681f424,1330353,0,0x0,8
tick,0x7ffdf681f424,1332262,0,0x0,8
tick,0x7ffdf681f424,1334373,0,0x0,8
tick,0x7ffdf681f424,1336372,0,0x0,8
tick,0x7ffdf681f424,1338364,0,0x0,8
tick,0x7ffdf681f424,1340400,0,0x0,8
tick,0x7ffdf681f424,1342366,0,0x0,8
tick,0x7ffdf681f424,1344346,0,0x0,8
tick,0x7ffdf681f424,1346342,0,0x0,8
tick,0x7ffdf681f424,1348327,0,0x0,8
tick,0x7ffdf681f424,1350257,0,0x0,8
tick,0x7ffdf681f424,1352333,0,0x0,8
tick,0x7ffdf681f424,1354313,0,0x0,8
tick,0x7ffdf681f424,1356305,0,0x0,8
tick,0x7ffdf681f424,1358198,0,0x0,8
tick,0x7ffdf681f424,1360302,0,0x0,8
tick,0x7ffdf681f424,1362297,0,0x0,8
tick,0x7ffdf681f424,1364284,0,0x0,8
tick,0x7ffdf681f424,1366291,0,0x0,8
tick,0x7ffdf681f424,1368273,0,0x0,8
tick,0x7ffdf681f424,1370275,0,0x0,8
tick,0x7ffdf681f424,1372170,0,0x0,8
tick,0x7ffdf681f424,1374180,0,0x0,8
tick,0x7ffdf681f424,1376146,0,0x0,8
tick,0x7ffdf681f424,1378252,0,0x0,8
tick,0x7ffdf681f424,1380253,0,0x0,8
tick,0x7ffdf681f424,1382193,0,0x0,8
tick,0x7ffdf681f424,1384205,0,0x0,8
tick,0x7ffdf681f424,1386145,0,0x0,8
tick,0x7ffdf681f424,1388294,0,0x0,8
tick,0x7ffdf681f424,1390278,0,0x0,8
tick,0x7ffdf681f424,1392141,0,0x0,8
tick,0x7ffdf681f424,1393255,0,0x0,8
tick,0x7ffdf681f424,1394401,0,0x0,8
tick,0x7ffdf681f424,1396440,0,0x0,8
tick,0x7ffdf681f424,1397556,0,0x0,8
tick,0x7ffdf681f424,1399496,0,0x0,8
tick,0x7ffdf681f424,1400687,0,0x0,8
tick,0x7ffdf681f424,1401814,0,0x0,8
tick,0x7ffdf681f424,1403864,0,0x0,8
tick,0x7ffdf681f424,1406007,0,0x0,8
tick,0x7ffdf681f424,1407237,0,0x0,8
tick,0x7ffdf681f424,1409258,0,0x0,8
tick,0x7ffdf681f424,1411188,0,0x0,8
tick,0x7ffdf681f424,1413261,0,0x0,8
tick,0x7ffdf681f424,1415226,0,0x0,8
tick,0x7ffdf681f424,1417220,0,0x0,8
tick,0x7ffdf681f424,1419224,0,0x0,8
tick,0x7ffdf681f424,1421186,0,0x0,8
tick,0x7ffdf681f424,1423173,0,0x0,8
tick,0x7ffdf681f424,1425148,0,0x0,8
tick,0x7ffdf681f424,1427167,0,0x0,8
tick,0x7ffdf681f424,1429145,0,0x0,8
tick,0x7ffdf681f424,1430825,0,0x0,8
tick,0x7ffdf681f424,1432856,0,0x0,8
tick,0x7ffdf681f424,1434843,0,0x0,8
tick,0x7ffdf681f424,1436899,0,0x0,8
tick,0x7ffdf681f424,1438890,0,0x0,8
tick,0x7ffdf681f424,1440787,0,0x0,8
tick,0x7ffdf681f424,1442876,0,0x0,8
tick,0x7ffdf681f424,1444879,0,0x0,8
tick,0x7ffdf681f424,1446850,0,0x0,8
tick,0x7ffdf681f424,1448770,0,0x0,8
tick,0x7ffdf681f424,1450756,0,0x0,8
tick,0x7ffdf681f424,1452783,0,0x0,8
tick,0x7ffdf681f424,1454847,0,0x0,8
tick,0x7ffdf681f424,1456834,0,0x0,8
tick,0x7ffdf681f424,1458777,0,0x0,8
tick,0x7ffdf681f424,1460807,0,0x0,8
tick,0x7ffdf681f424,1462827,0,0x0,8
tick,0x7ffdf681f424,1464815,0,0x0,8
tick,0x7ffdf681f424,1466818,0,0x0,8
tick,0x7ffdf681f424,1468855,0,0x0,8
tick,0x7ffdf681f424,1470815,0,0x0,8
tick,0x7ffdf681f424,1472793,0,0x0,8
tick,0x7ffdf681f424,1474798,0,0x0,8
tick,0x7ffdf681f424,1476796,0,0x0,8
tick,0x7ffdf681f424,1478787,0,0x0,8
tick,0x7ffdf681f424,1480746,0,0x0,8
tick,0x7ffdf681f424,1482665,0,0x0,8
tick,0x7ffdf681f424,1484788,0,0x0,8
tick,0x7ffdf681f424,1486758,0,0x0,8
tick,0x7ffdf681f424,1488758,0,0x0,8
tick,0x7ffdf681f424,1490688,0,0x0,8
tick,0x7ffdf681f424,1492633,0,0x0,8
tick,0x7ffdf681f424,1494743,0,0x0,8
tick,0x7ffdf681f424,1496733,0,0x0,8
tick,0x7ffdf681f424,1498743,0,0x0,8
tick,0x7ffdf681f424,1500718,0,0x0,8
tick,0x7ffdf681f424,1502747,0,0x0,8
tick,0x7ffdf681f424,1504713,0,0x0,8
tick,0x7ffdf681f424,1506704,0,0x0,8
tick,0x7ffdf681f424,1508597,0,0x0,8
tick,0x7ffdf681f424,1510697,0,0x0,8
tick,0x7ffdf681f424,1512710,0,0x0,8
tick,0x7ffdf681f424,1514707,0,0x0,8
tick,0x7ffdf681f424,1516672,0,0x0,8
tick,0x7ffdf681f424,1518686,0,0x0,8
tick,0x7ffdf681f424,1520644,0,0x0,8
tick,0x7ffdf681f424,1522657,0,0x0,8
tick,0x7ffdf681f424,1524653,0,0x0,8
tick,0x7ffdf681f424,1526656,0,0x0,8
tick,0x7ffdf681f424,1528659,0,0x0,8
tick,0x7ffdf681f424,1530535,0,0x0,8
tick,0x7ffdf681f424,1532531,0,0x0,8
tick,0x7ffdf681f424,1534688,0,0x0,8
tick,0x7ffdf681f424,1536626,0,0x0,8
tick,0x7ffdf681f424,1538659,0,0x0,8
tick,0x7ffdf681f424,1540610,0,0x0,8
tick,0x7ffdf681f424,1542607,0,0x0,8
tick,0x7ffdf681f424,1544629,0,0x0,8
tick,0x7ffdf681f424,1546586,0,0x0,8
tick,0x7ffdf681f424,1548585,0,0x0,8
tick,0x7ffdf681f424,1550572,0,0x0,8
tick,0x7ffdf681f424,1552582,0,0x0,8
tick,0x7ffdf681f424,1554570,0,0x0,8
tick,0x7ffdf681f424,1556561,0,0x0,8
tick,0x7ffdf681f424,1558593,0,0x0,8
tick,0x7ffdf681f424,1560505,0,0x0,8
tick,0x7ffdf681f424,1562554,0,0x0,8
tick,0x7ffdf681f424,1564550,0,0x0,8
tick,0x7ffdf681f424,1566552,0,0x0,8
tick,0x7ffdf681f424,1568536,0,0x0,8
tick,0x7ffdf681f424,1570535,0,0x0,8
tick,0x7ffdf681f424,1572434,0,0x0,8
tick,0x7ffdf681f424,1574520,0,0x0,8
tick,0x7ffdf681f424,1576519,0,0x0,8
tick,0x7ffdf681f424,1578525,0,0x0,8
tick,0x7ffdf681f424,1580537,0,0x0,8
tick,0x7ffdf681f424,1582390,0,0x0,8
tick,0x7ffdf681f424,1584384,0,0x0,8
tick,0x7ffdf681f424,1586532,0,0x0,8
tick,0x7ffdf681f424,1588485,0,0x0,8
tick,0x7ffdf681f424,1590496,0,0x0,8
tick,0x7ffdf681f424,1592471,0,0x0,8
tick,0x7ffdf681f424,1594494,0,0x0,8
tick,0x7ffdf681f424,1596469,0,0x0,8
tick,0x7ffdf681f424,1598463,0,0x0,8
tick,0x7ffdf681f424,1600418,0,0x0,8
tick,0x7ffdf681f424,1602514,0,0x0,8
tick,0x7ffdf681f424,1604451,0,0x0,8
tick,0x7ffdf681f424,1606441,0,0x0,8
tick,0x7ffdf681f424,1608435,0,0x0,8
tick,0x7ffdf681f424,1610473,0,0x0,8
tick,0x7ffdf681f424,1612343,0,0x0,8
tick,0x7ffdf681f424,1614424,0,0x0,8
tick,0x7ffdf681f424,1616429,0,0x0,8
tick,0x7ffdf681f424,1618410,0,0x0,8
tick,0x7ffdf681f424,1620412,0,0x0,8
tick,0x7ffdf681f424,1622475,0,0x0,8
tick,0x7ffdf681f424,1624291,0,0x0,8
tick,0x7ffdf681f424,1626391,0,0x0,8
tick,0x7ffdf681f424,1628423,0,0x0,8
tick,0x7ffdf681f424,1630385,0,0x0,8
tick,0x7ffdf681f424,1632036,0,0x0,8
tick,0x7ffdf681f424,1633931,0,0x0,8
tick,0x7ffdf681f424,1636025,0,0x0,8
tick,0x7ffdf681f424,1638038,0,0x0,8
tick,0x7ffdf681f424,1640030,0,0x0,8
tick,0x7ffdf681f424,1642013,0,0x0,8
tick,0x7ffdf681f424,1644055,0,0x0,8
tick,0x7ffdf681f424,1646013,0,0x0,8
tick,0x7ffdf681f424,1647999,0,0x0,8
tick,0x7ffdf681f424,1649989,0,0x0,8
tick,0x7ffdf681f424,1651930,0,0x0,8
tick,0x7ffdf681f424,1653986,0,0x0,8
tick,0x7ffdf681f424,1655975,0,0x0,8
tick,0x7ffdf681f424,1657969,0,0x0,8
tick,0x7ffdf681f424,1659964,0,0x0,8
tick,0x7ffdf681f424,1661962,0,0x0,8
tick,0x7ffdf681f424,1663960,0,0x0,8
tick,0x7ffdf681f424,1665920,0,0x0,8
tick,0x7ffdf681f424,1667959,0,0x0,8
tick,0x7ffdf681f424,1669978,0,0x0,8
tick,0x7ffdf681f424,1671827,0,0x0,8
tick,0x7ffdf681f424,1673923,0,0x0,8
tick,0x7ffdf681f424,1675939,0,0x0,8
tick,0x7ffdf681f424,1677919,0,0x0,8
tick,0x7ffdf681f424,1679920,0,0x0,8
tick,0x7ffdf681f424,1681793,0,0x0,8
tick,0x7ffdf681f424,1683815,0,0x0,8
tick,0x7ffdf681f424,1685901,0,0x0,8
tick,0x7ffdf681f424,1687924,0,0x0,8
tick,0x7ffdf681f424,1689909,0,0x0,8
tick,0x7ffdf681f424,1691811,0,0x0,8
tick,0x7ffdf681f424,1693783,0,0x0,8
tick,0x7ffdf681f424,1695867,0,0x0,8
tick,0x7ffdf681f424,1697864,0,0x0,8
tick,0x7ffdf681f424,1699857,0,0x0,8
tick,0x7ffdf681f424,1701743,0,0x0,8
tick,0x7ffdf681f424,1703849,0,0x0,8
tick,0x7ffdf681f424,1705842,0,0x0,8
tick,0x7ffdf681f424,1707739,0,0x0,8
tick,0x7ffdf681f424,1709852,0,0x0,8
tick,0x7ffdf681f424,1711797,0,0x0,8
tick,0x7ffdf681f424,1713819,0,0x0,8
tick,0x7ffdf681f424,1715686,0,0x0,8
tick,0x7ffdf681f424,1717816,0,0x0,8
tick,0x7ffdf681f424,1719804,0,0x0,8
tick,0x7ffdf681f424,1721807,0,0x0,8
tick,0x7ffdf681f424,1723798,0,0x0,8
tick,0x7ffdf681f424,1725796,0,0x0,8
tick,0x7ffdf681f424,1727782,0,0x0,8
tick,0x7ffdf681f424,1729782,0,0x0,8
tick,0x7ffdf681f424,1731188,0,0x0,8
tick,0x7ffdf681f424,1733299,0,0x0,8
tick,0x7ffdf681f424,1735314,0,0x0,8
tick,0x7ffdf681f424,1737275,0,0x0,8
tick,0x7ffdf681f424,1739331,0,0x0,8
tick,0x7ffdf681f424,1741217,0,0x0,8
tick,0x7ffdf681f424,1743298,0,0x0,8
tick,0x7ffdf681f424,1745290,0,0x0,8
tick,0x7ffdf681f424,1747291,0,0x0,8
tick,0x7ffdf681f424,1749174,0,0x0,8
tick,0x7ffdf681f424,1751164,0,0x0,8
tick,0x7ffdf681f424,1753278,0,0x0,8
tick,0x7ffdf681f424,1755232,0,0x0,8
tick,0x7ffdf681f424,1757269,0,0x0,8
tick,0x7ffdf681f424,1759256,0,0x0,8
tick,0x7ffdf681f424,1761268,0,0x0,8
tick,0x7ffdf681f424,1763247,0,0x0,8
tick,0x7ffdf681f424,1765235,0,0x0,8
tick,0x7ffdf681f424,1767228,0,0x0,8
tick,0x7ffdf681f424,1769261,0,0x0,8
tick,0x7ffdf681f424,1771223,0,0x0,8
tick,0x7ffdf681f424,1773105,0,0x0,8
tick,0x7ffdf681f424,1775262,0,0x0,8
tick,0x7ffdf681f424,1777201,0,0x0,8
tick,0x7ffdf681f424,1779128,0,0x0,8
tick,0x7ffdf681f424,1781079,0,0x0,8
tick,0x7ffdf681f424,1783076,0,0x0,8
tick,0x7ffdf681f424,1785086,0,0x0,8
tick,0x7ffdf681f424,1787153,0,0x0,8
tick,0x7ffdf681f424,1789176,0,0x0,8
tick,0x7ffdf681f424,1791069,0,0x0,8
tick,0x7ffdf681f424,1793163,0,0x0,8
tick,0x7ffdf681f424,1795170,0,0x0,8
tick,0x7ffdf681f424,1797178,0,0x0,8
tick,0x7ffdf681f424,1799052,0,0x0,8
tick,0x7ffdf681f424,1801108,0,0x0,8
tick,0x7ffdf681f424,1803134,0,0x0,8
tick,0x7ffdf681f424,1805123,0,0x0,8
tick,0x7ffdf681f424,1807134,0,0x0,8
tick,0x7ffdf681f424,1809148,0,0x0,8
tick,0x7ffdf681f424,1811057,0,0x0,8
tick,0x7ffdf681f424,1813013,0,0x0,8
tick,0x7ffdf681f424,1815017,0,0x0,8
tick,0x7ffdf681f424,1817095,0,0x0,8
tick,0x7ffdf681f424,1819065,0,0x0,8
tick,0x7ffdf681f424,1821067,0,0x0,8
tick,0x7ffdf681f424,1823088,0,0x0,8
tick,0x7ffdf681f424,1825080,0,0x0,8
tick,0x7ffdf681f424,1827074,0,0x0,8
tick,0x7ffdf681f424,1828975,0,0x0,8
tick,0x7ffdf681f424,1831069,0,0x0,8
tick,0x7ffdf681f424,1832637,0,0x0,8
tick,0x7ffdf681f424,1834752,0,0x0,8
tick,0x7ffdf681f424,1836742,0,0x0,8
tick,0x7ffdf681f424,1838737,0,0x0,8
tick,0x7ffdf681f424,1840664,0,0x0,8
tick,0x7ffdf681f424,1842695,0,0x0,8
tick,0x7ffdf681f424,1844721,0,0x0,8
tick,0x7ffdf681f424,1846716,0,0x0,8
tick,0x7ffdf681f424,1848737,0,0x0,8
tick,0x7ffdf681f424,1850601,0,0x0,8
tick,0x7ffdf681f424,1852570,0,0x0,8
tick,0x7ffdf681f424,1854708,0,0x0,8
tick,0x7ffdf681f424,1856687,0,0x0,8
tick,0x7ffdf681f424,1858790,0,0x0,8
tick,0x7ffdf681f424,1860675,0,0x0,8
tick,0x7ffdf681f424,1862688,0,0x0,8
tick,0x7ffdf681f424,1864642,0,0x0,8
tick,0x7ffdf681f424,1866668,0,0x0,8
tick,0x7ffdf681f424,1868654,0,0x0,8
tick,0x7ffdf681f424,1870652,0,0x0,8
tick,0x7ffdf681f424,1872641,0,0x0,8
tick,0x7ffdf681f424,1874648,0,0x0,8
tick,0x7ffdf681f424,1876632,0,0x0,8
tick,0x7ffdf681f424,1878637,0,0x0,8
tick,0x7ffdf681f424,1880633,0,0x0,8
tick,0x7ffdf681f424,1882517,0,0x0,8
tick,0x7ffdf681f424,1884656,0,0x0,8
tick,0x7ffdf681f424,1886581,0,0x0,8
tick,0x7ffdf681f424,1888646,0,0x0,8
tick,0x7ffdf681f424,1890506,0,0x0,8
tick,0x7ffdf681f424,1892516,0,0x0,8
tick,0x7ffdf681f424,1894599,0,0x0,8
tick,0x7ffdf681f424,1896580,0,0x0,8
tick,0x7ffdf681f424,1898575,0,0x0,8
tick,0x7ffdf681f424,1900582,0,0x0,8
tick,0x7ffdf681f424,1902568,0,0x0,8
tick,0x7ffdf681f424,1904560,0,0x0,8
tick,0x7ffdf681f424,1906607,0,0x0,8
tick,0x7ffdf681f424,1908453,0,0x0,8
tick,0x7ffdf681f424,1910553,0,0x0,8
tick,0x7ffdf681f424,1912540,0,0x0,8
tick,0x7ffdf681f424,1914535,0,0x0,8
tick,0x7ffdf681f424,1916535,0,0x0,8
tick,0x7ffdf681f424,1918530,0,0x0,8
tick,0x7ffdf681f424,1920501,0,0x0,8
tick,0x7ffdf681f424,1922553,0,0x0,8
tick,0x7ffdf681f424,1924517,0,0x0,8
tick,0x7ffdf681f424,1926500,0,0x0,8
tick,0x7ffdf681f424,1928504,0,0x0,8
tick,0x7ffdf681f424,1930472,0,0x0,8
tick,0x7ffdf681f424,1932399,0,0x0,8
tick,0x7ffdf681f424,1934481,0,0x0,8
tick,0x7ffdf681f424,1936472,0,0x0,8
tick,0x7ffdf681f424,1938472,0,0x0,8
tick,0x7ffdf681f424,1940472,0,0x0,8
tick,0x7ffdf681f424,1942462,0,0x0,8
tick,0x7ffdf681f424,1944465,0,0x0,8
tick,0x7ffdf681f424,1946450,0,0x0,8
tick,0x7ffdf681f424,1948442,0,0x0,8
tick,0x7ffdf681f424,1950468,0,0x0,8
tick,0x7ffdf681f424,1952400,0,0x0,8
tick,0x7ffdf681f424,1954426,0,0x0,8
tick,0x7ffdf681f424,1956420,0,0x0,8
tick,0x7ffdf681f424,1958461,0,0x0,8
tick,0x7ffdf681f424,1960426,0,0x0,8
tick,0x7ffdf681f424,1962409,0,0x0,8
tick,0x7ffdf681f424,1964396,0,0x0,8
tick,0x7ffdf681f424,1966406,0,0x0,8
tick,0x7ffdf681f424,1968389,0,0x0,8
tick,0x7ffdf681f424,1970386,0,0x0,8
tick,0x7ffdf681f424,1972489,0,0x0,8
tick,0x7ffdf681f424,1974270,0,0x0,8
tick,0x7ffdf681f424,1976363,0,0x0,8
tick,0x7ffdf681f424,1978264,0,0x0,8
tick,0x7ffdf681f424,1980379,0,0x0,8
tick,0x7ffdf681f424,1982362,0,0x0,8
tick,0x7ffdf681f424,1984345,0,0x0,8
tick,0x7ffdf681f424,1986342,0,0x0,8
tick,0x7ffdf681f424,1988342,0,0x0,8
tick,0x7ffdf681f424,1990340,0,0x0,8
tick,0x7ffdf681f424,1992321,0,0x0,8
tick,0x7ffdf681f424,1994339,0,0x0,8
tick,0x7ffdf681f424,1996318,0,0x0,8
tick,0x7ffdf681f424,1998310,0,0x0,8
tick,0x7ffdf681f424,2000318,0,0x0,8
tick,0x7ffdf681f424,2002305,0,0x0,8
tick,0x7ffdf681f424,2004293,0,0x0,8
tick,0x7ffdf681f424,2006284,0,0x0,8
tick,0x7ffdf681f424,2008291,0,0x0,8
tick,0x7ffdf681f424,2010297,0,0x0,8
tick,0x7ffdf681f424,2012194,0,0x0,8
tick,0x7ffdf681f424,2014272,0,0x0,8
tick,0x7ffdf681f424,2016178,0,0x0,8
tick,0x7ffdf681f424,2018266,0,0x0,8
tick,0x7ffdf681f424,2020155,0,0x0,8
tick,0x7ffdf681f424,2022257,0,0x0,8
tick,0x7ffdf681f424,2024122,0,0x0,8
tick,0x7ffdf681f424,2026123,0,0x0,8
tick,0x7ffdf681f424,2028110,0,0x0,8
tick,0x7ffdf681f424,2030116,0,0x0,8
tick,0x7ffdf681f424,2032118,0,0x0,8
tick,0x7ffdf681f424,2034109,0,0x0,8
tick,0x7ffdf681f424,2036102,0,0x0,8
tick,0x7ffdf681f424,2038206,0,0x0,8
tick,0x7ffdf681f424,2040092,0,0x0,8
tick,0x7ffdf681f424,2042208,0,0x0,8
tick,0x7ffdf681f424,2044186,0,0x0,8
tick,0x7ffdf681f424,2046069,0,0x0,8
tick,0x7ffdf681f424,2048187,0,0x0,8
tick,0x7ffdf681f424,2050178,0,0x0,8
tick,0x7ffdf681f424,2052081,0,0x0,8
tick,0x7ffdf681f424,2054159,0,0x0,8
tick,0x7ffdf681f424,2056155,0,0x0,8
tick,0x7ffdf681f424,2058150,0,0x0,8
tick,0x7ffdf681f424,2060156,0,0x0,8
tick,0x7ffdf681f424,2062200,0,0x0,8
tick,0x7ffdf681f424,2064134,0,0x0,8
tick,0x7ffdf681f424,2066019,0,0x0,8
tick,0x7ffdf681f424,2068114,0,0x0,8
tick,0x7ffdf681f424,2070121,0,0x0,8
tick,0x7ffdf681f424,2072113,0,0x0,8
tick,0x7ffdf681f424,2074065,0,0x0,8
tick,0x7ffdf681f424,2076113,0,0x0,8
tick,0x7ffdf681f424,2078088,0,0x0,8
tick,0x7ffdf681f424,2080089,0,0x0,8
tick,0x7ffdf681f424,2082130,0,0x0,8
tick,0x7ffdf681f424,2084092,0,0x0,8
tick,0x7ffdf681f424,2086074,0,0x0,8
tick,0x7ffdf681f424,2088076,0,0x0,8
tick,0x7ffdf681f424,2090056,0,0x0,8
tick,0x7ffdf681f424,2091972,0,0x0,8
tick,0x7ffdf681f424,2094054,0,0x0,8
tick,0x7ffdf681f424,2096049,0,0x0,8
tick,0x7ffdf681f424,2098045,0,0x0,8
tick,0x7ffdf681f424,2100029,0,0x0,8
tick,0x7ffdf681f424,2102034,0,0x0,8
tick,0x7ffdf681f424,2104101,0,0x0,8
tick,0x7ffdf681f424,2106030,0,0x0,8
tick,0x7ffdf681f424,2107923,0,0x0,8
tick,0x7ffdf681f424,2110012,0,0x0,8
tick,0x7ffdf681f424,2111889,0,0x0,8
tick,0x7ffdf681f424,2113998,0,0x0,8
tick,0x7ffdf681f424,2115885,0,0x0,8
tick,0x7ffdf681f424,2117997,0,0x0,8
tick,0x7ffdf681f424,2119991,0,0x0,8
tick,0x7ffdf681f424,2121876,0,0x0,8
tick,0x7ffdf681f424,2123986,0,0x0,8
tick,0x7ffdf681f424,2126046,0,0x0,8
tick,0x7ffdf681f424,2128016,0,0x0,8
tick,0x7ffdf681f424,2129959,0,0x0,8
tick,0x7ffdf681f424,2131872,0,0x0,8
tick,0x7ffdf681f424,2133949,0,0x0,8
tick,0x7ffdf681f424,2135941,0,0x0,8
tick,0x7ffdf681f424,2137952,0,0x0,8
tick,0x7ffdf681f424,2139828,0,0x0,8
tick,0x7ffdf681f424,2141862,0,0x0,8
tick,0x7ffdf681f424,2143930,0,0x0,8
tick,0x7ffdf681f424,2145913,0,0x0,8
tick,0x7ffdf681f424,2147948,0,0x0,8
tick,0x7ffdf681f424,2149788,0,0x0,8
tick,0x7ffdf681f424,2151784,0,0x0,8
tick,0x7ffdf681f424,2153898,0,0x0,8
tick,0x7ffdf681f424,2155881,0,0x0,8
tick,0x7ffdf681f424,2157770,0,0x0,8
tick,0x7ffdf681f424,2159898,0,0x0,8
tick,0x7ffdf681f424,2161760,0,0x0,8
tick,0x7ffdf681f424,2163864,0,0x0,8
tick,0x7ffdf681f424,2165736,0,0x0,8
tick,0x7ffdf681f424,2167856,0,0x0,8
tick,0x7ffdf681f424,2169838,0,0x0,8
tick,0x7ffdf681f424,2171905,0,0x0,8
tick,0x7ffdf681f424,2173843,0,0x0,8
tick,0x7ffdf681f424,2175828,0,0x0,8
tick,0x7ffdf681f424,2177828,0,0x0,8
tick,0x7ffdf681f424,2179829,0,0x0,8
tick,0x7ffdf681f424,2181778,0,0x0,8
tick,0x7ffdf681f424,2183708,0,0x0,8
tick,0x7ffdf681f424,2185813,0,0x0,8
tick,0x7ffdf681f424,2187804,0,0x0,8
tick,0x7ffdf681f424,2189785,0,0x0,8
tick,0x7ffdf681f424,2191732,0,0x0,8
tick,0x7ffdf681f424,2193786,0,0x0,8
tick,0x7ffdf681f424,2195772,0,0x0,8
tick,0x7ffdf681f424,2197770,0,0x0,8
tick,0x7ffdf681f424,2199768,0,0x0,8
tick,0x7ffdf681f424,2201769,0,0x0,8
tick,0x7ffdf681f424,2203764,0,0x0,8
tick,0x7ffdf681f424,2205745,0,0x0,8
tick,0x7ffdf681f424,2207639,0,0x0,8
tick,0x7ffdf681f424,2209649,0,0x0,8
tick,0x7ffdf681f424,2211776,0,0x0,8
tick,0x7ffdf681f424,2213745,0,0x0,8
tick,0x7ffdf681f424,2215735,0,0x0,8
tick,0x7ffdf681f424,2217716,0,0x0,8
tick,0x7ffdf681f424,2219606,0,0x0,8
tick,0x7ffdf681f424,2221613,0,0x0,8
tick,0x7ffdf681f424,2223695,0,0x0,8
tick,0x7ffdf681f424,2225703,0,0x0,8
tick,0x7ffdf681f424,2227685,0,0x0,8
tick,0x7ffdf681f424,2229692,0,0x0,8
tick,0x7ffdf681f424,2231640,0,0x0,8
tick,0x7ffdf681f424,2233669,0,0x0,8
tick,0x7ffdf681f424,2235688,0,0x0,8
tick,0x7ffdf681f424,2237675,0,0x0,8
tick,0x7ffdf681f424,2239653,0,0x0,8
tick,0x7ffdf681f424,2241546,0,0x0,8
tick,0x7ffdf681f424,2243649,0,0x0,8
tick,0x7ffdf681f424,2245648,0,0x0,8
tick,0x7ffdf681f424,2247645,0,0x0,8
tick,0x7ffdf681f424,2249636,0,0x0,8
tick,0x7ffdf681f424,2251569,0,0x0,8
tick,0x7ffdf681f424,2253622,0,0x0,8
tick,0x7ffdf681f424,2255610,0,0x0,8
tick,0x7ffdf681f424,2257563,0,0x0,8
tick,0x7ffdf681f424,2259613,0,0x0,8
tick,0x7ffdf681f424,2261541,0,0x0,8
tick,0x7ffdf681f424,2263593,0,0x0,8
tick,0x7ffdf681f424,2265586,0,0x0,8
tick,0x7ffdf681f424,2267584,0,0x0,8
tick,0x7ffdf681f424,2269580,0,0x0,8
tick,0x7ffdf681f424,2271451,0,0x0,8
tick,0x7ffdf681f424,2273573,0,0x0,8
tick,0x7ffdf681f424,2275563,0,0x0,8
tick,0x7ffdf681f424,2277560,0,0x0,8
tick,0x7ffdf681f424,2279575,0,0x0,8
tick,0x7ffdf681f424,2281564,0,0x0,8
tick,0x7ffdf681f424,2283538,0,0x0,8
tick,0x7ffdf681f424,2285552,0,0x0,8
tick,0x7ffdf681f424,2287530,0,0x0,8
tick,0x7ffdf681f424,2289567,0,0x0,8
tick,0x7ffdf681f424,2291441,0,0x0,8
tick,0x7ffdf681f424,2293428,0,0x0,8
tick,0x7ffdf681f424,2295531,0,0x0,8
tick,0x7ffdf681f424,2297511,0,0x0,8
tick,0x7ffdf681f424,2299440,0,0x0,8
tick,0x7ffdf681f424,2301416,0,0x0,8
tick,0x7ffdf681f424,2303500,0,0x0,8
tick,0x7ffdf681f424,2305487,0,0x0,8
tick,0x7ffdf681f424,2307441,0,0x0,8
tick,0x7ffdf681f424,2309480,0,0x0,8
tick,0x7ffdf681f424,2311355,0,0x0,8
tick,0x7ffdf681f424,2313466,0,0x0,8
tick,0x7ffdf681f424,2315462,0,0x0,8
tick,0x7ffdf681f424,2317433,0,0x0,8
tick,0x7ffdf681f424,2319450,0,0x0,8
tick,0x7ffdf681f424,2321338,0,0x0,8
tick,0x7ffdf681f424,2323526,0,0x0,8
tick,0x7ffdf681f424,2325438,0,0x0,8
tick,0x7ffdf681f424,2327436,0,0x0,8
tick,0x7ffdf681f424,2329459,0,0x0,8
tick,0x7ffdf681f424,2331310,0,0x0,8
tick,0x7ffdf681f424,2333310,0,0x0,8
tick,0x7ffdf681f424,2335422,0,0x0,8
tick,0x7ffdf681f424,2337407,0,0x0,8
tick,0x7ffdf681f424,2339408,0,0x0,8
tick,0x7ffdf681f424,2341301,0,0x0,8
tick,0x7ffdf681f424,2343385,0,0x0,8
tick,0x7ffdf681f424,2345428,0,0x0,8
tick,0x7ffdf681f424,2347381,0,0x0,8
tick,0x7ffdf681f424,2349266,0,0x0,8
tick,0x7ffdf681f424,2351251,0,0x0,8
tick,0x7ffdf681f424,2353368,0,0x0,8
tick,0x7ffdf681f424,2355355,0,0x0,8
tick,0x7ffdf681f424,2357419,0,0x0,8
tick,0x7ffdf681f424,2359230,0,0x0,8
tick,0x7ffdf681f424,2361239,0,0x0,8
tick,0x7ffdf681f424,2363336,0,0x0,8
tick,0x7ffdf681f424,2365334,0,0x0,8
tick,0x7ffdf681f424,2367327,0,0x0,8
tick,0x7ffdf681f424,2369369,0,0x0,8
tick,0x7ffdf681f424,2371204,0,0x0,8
tick,0x7ffdf681f424,2373188,0,0x0,8
tick,0x7ffdf681f424,2375316,0,0x0,8
tick,0x7ffdf681f424,2377288,0,0x0,8
tick,0x7ffdf681f424,2379327,0,0x0,8
tick,0x7ffdf681f424,2381177,0,0x0,8
tick,0x7ffdf681f424,2383286,0,0x0,8
tick,0x7ffdf681f424,2385279,0,0x0,8
tick,0x7ffdf681f424,2387262,0,0x0,8
tick,0x7ffdf681f424,2389323,0,0x0,8
tick,0x7ffdf681f424,2391267,0,0x0,8
tick,0x7ffdf681f424,2393265,0,0x0,8
tick,0x7ffdf681f424,2395245,0,0x0,8
tick,0x7ffdf681f424,2397250,0,0x0,8
tick,0x7ffdf681f424,2399133,0,0x0,8
tick,0x7ffdf681f424,2401109,0,0x0,8
tick,0x7ffdf681f424,2403229,0,0x0,8
tick,0x7ffdf681f424,2405229,0,0x0,8
tick,0x7ffdf681f424,2407215,0,0x0,8
tick,0x7ffdf681f424,2409232,0,0x0,8
tick,0x7ffdf681f424,2411084,0,0x0,8
tick,0x7ffdf681f424,2413106,0,0x0,8
tick,0x7ffdf681f424,2415193,0,0x0,8
tick,0x7ffdf681f424,2417194,0,0x0,8
tick,0x7ffdf681f424,2419222,0,0x0,8
tick,0x7ffdf681f424,2421111,0,0x0,8
tick,0x7ffdf681f424,2423186,0,0x0,8
tick,0x7ffdf681f424,2425180,0,0x0,8
tick,0x7ffdf681f424,2427169,0,0x0,8
tick,0x7ffdf681f424,2429049,0,0x0,8
tick,0x7ffdf681f424,2431110,0,0x0,8
tick,0x7ffdf681f424,2433213,0,0x0,8
tick,0x7ffdf681f424,2435149,0,0x0,8
tick,0x7ffdf681f424,2437136,0,0x0,8
tick,0x7ffdf681f424,2439130,0,0x0,8
tick,0x7ffdf681f424,2441021,0,0x0,8
tick,0x7ffdf681f424,2443116,0,0x0,8
tick,0x7ffdf681f424,2445117,0,0x0,8
tick,0x7ffdf681f424,2446993,0,0x0,8
tick,0x7ffdf681f424,2449027,0,0x0,8
tick,0x7ffdf681f424,2450955,0,0x0,8
tick,0x7ffdf681f424,2452937,0,0x0,8
tick,0x7ffdf681f424,2455149,0,0x0,8
tick,0x7ffdf681f424,2457130,0,0x0,8
tick,0x7ffdf681f424,2458931,0,0x0,8
tick,0x7ffdf681f424,2461044,0,0x0,8
tick,0x7ffdf681f424,2463065,0,0x0,8
tick,0x7ffdf681f424,2465060,0,0x0,8
tick,0x7ffdf681f424,2467065,0,0x0,8
tick,0x7ffdf681f424,2469050,0,0x0,8
tick,0x7ffdf681f424,2471056,0,0x0,8
tick,0x7ffdf681f424,2473032,0,0x0,8
tick,0x7ffdf681f424,2475036,0,0x0,8
tick,0x7ffdf681f424,2477107,0,0x0,8
tick,0x7ffdf681f424,2479033,0,0x0,8
tick,0x7ffdf681f424,2481031,0,0x0,8
tick,0x7ffdf681f424,2483001,0,0x0,8
tick,0x7ffdf681f424,2484926,0,0x0,8
tick,0x7ffdf681f424,2487007,0,0x0,8
tick,0x7ffdf681f424,2489018,0,0x0,8
tick,0x7ffdf681f424,2490891,0,0x0,8
tick,0x7ffdf681f424,2492900,0,0x0,8
tick,0x7ffdf681f424,2495001,0,0x0,8
tick,0x7ffdf681f424,2496969,0,0x0,8
tick,0x7ffdf681f424,2498968,0,0x0,8
tick,0x7ffdf681f424,2500969,0,0x0,8
tick,0x7ffdf681f424,2502953,0,0x0,8
tick,0x7ffdf681f424,2504954,0,0x0,8
tick,0x7ffdf681f424,2506943,0,0x0,8
tick,0x7ffdf681f424,2508833,0,0x0,8
tick,0x7ffdf681f424,2510940,0,0x0,8
tick,0x7ffdf681f424,2512922,0,0x0,8
tick,0x7ffdf681f424,2514922,0,0x0,8
tick,0x7ffdf681f424,2516917,0,0x0,8
tick,0x7ffdf681f424,2518901,0,0x0,8
tick,0x7ffdf681f424,2520926,0,0x0,8
tick,0x7ffdf681f424,2522912,0,0x0,8
tick,0x7ffdf681f424,2524896,0,0x0,8
tick,0x7ffdf681f424,2526890,0,0x0,8
tick,0x7ffdf681f424,2528906,0,0x0,8
tick,0x7ffdf681f424,2530780,0,0x0,8
tick,0x7ffdf681f424,2532770,0,0x0,8
tick,0x7ffdf681f424,2534877,0,0x0,8
tick,0x7ffdf681f424,2536882,0,0x0,8
tick,0x7ffdf681f424,2538904,0,0x0,8
tick,0x7ffdf681f424,2540816,0,0x0,8
tick,0x7ffdf681f424,2542868,0,0x0,8
tick,0x7ffdf681f424,2544848,0,0x0,8
tick,0x7ffdf681f424,2546842,0,0x0,8
tick,0x7ffdf681f424,2548830,0,0x0,8
tick,0x7ffdf681f424,2550834,0,0x0,8
tick,0x7ffdf681f424,2552826,0,0x0,8
tick,0x7ffdf681f424,2554814,0,0x0,8
tick,0x7ffdf681f424,2556811,0,0x0,8
tick,0x7ffdf681f424,2558825,0,0x0,8
tick,0x7ffdf681f424,2560674,0,0x0,8
tick,0x7ffdf681f424,2562795,0,0x0,8
tick,0x7ffdf681f424,2564840,0,0x0,8
tick,0x7ffdf681f424,2566796,0,0x0,8
tick,0x7ffdf681f424,2568783,0,0x0,8
tick,0x7ffdf681f424,2570641,0,0x0,8
tick,0x7ffdf681f424,2572657,0,0x0,8
tick,0x7ffdf681f424,2574781,0,0x0,8
tick,0x7ffdf681f424,2576759,0,0x0,8
tick,0x7ffdf681f424,2578788,0,0x0,8
tick,0x7ffdf681f424,2580721,0,0x0,8
tick,0x7ffdf681f424,2582625,0,0x0,8
tick,0x7ffdf681f424,2584641,0,0x0,8
tick,0x7ffdf681f424,2586744,0,0x0,8
tick,0x7ffdf681f424,2588737,0,0x0,8
tick,0x7ffdf681f424,2590731,0,0x0,8
tick,0x7ffdf681f424,2592736,0,0x0,8
tick,0x7ffdf681f424,2594708,0,0x0,8
tick,0x7ffdf681f424,2596712,0,0x0,8
tick,0x7ffdf681f424,2598703,0,0x0,8
tick,0x7ffdf681f424,2600705,0,0x0,8
tick,0x7ffdf681f424,2602693,0,0x0,8
tick,0x7ffdf681f424,2604693,0,0x0,8
tick,0x7ffdf681f424,2606682,0,0x0,8
tick,0x7ffdf681f424,2608722,0,0x0,8
tick,0x7ffdf681f424,2610580,0,0x0,8
tick,0x7ffdf681f424,2612567,0,0x0,8
tick,0x7ffdf681f424,2614669,0,0x0,8
tick,0x7ffdf681f424,2616658,0,0x0,8
tick,0x7ffdf681f424,2618755,0,0x0,8
tick,0x7ffdf681f424,2620655,0,0x0,8
tick,0x7ffdf681f424,2622645,0,0x0,8
tick,0x7ffdf681f424,2624532,0,0x0,8
tick,0x7ffdf681f424,2626630,0,0x0,8
tick,0x7ffdf681f424,2628656,0,0x0,8
tick,0x7ffdf681f424,2630634,0,0x0,8
tick,0x7ffdf681f424,2632474,0,0x0,8
tick,0x7ffdf681f424,2634605,0,0x0,8
tick,0x7ffdf681f424,2636599,0,0x0,8
tick,0x7ffdf681f424,2638595,0,0x0,8
tick,0x7ffdf681f424,2640558,0,0x0,8
tick,0x7ffdf681f424,2642471,0,0x0,8
tick,0x7ffdf681f424,2644577,0,0x0,8
tick,0x7ffdf681f424,2646581,0,0x0,8
tick,0x7ffdf681f424,2648577,0,0x0,8
tick,0x7ffdf681f424,2650458,0,0x0,8
tick,0x7ffdf681f424,2652448,0,0x0,8
tick,0x7ffdf681f424,2654531,0,0x0,8
tick,0x7ffdf681f424,2656559,0,0x0,8
tick,0x7ffdf681f424,2658538,0,0x0,8
tick,0x7ffdf681f424,2660552,0,0x0,8
tick,0x7ffdf681f424,2662539,0,0x0,8
tick,0x7ffdf681f424,2664527,0,0x0,8
tick,0x7ffdf681f424,2666498,0,0x0,8
tick,0x7ffdf681f424,2668516,0,0x0,8
tick,0x7ffdf681f424,2670517,0,0x0,8
tick,0x7ffdf681f424,2672511,0,0x0,8
tick,0x7ffdf681f424,2674471,0,0x0,8
tick,0x7ffdf681f424,2676483,0,0x0,8
tick,0x7ffdf681f424,2678490,0,0x0,8
tick,0x7ffdf681f424,2680493,0,0x0,8
tick,0x7ffdf681f424,2682483,0,0x0,8
tick,0x7ffdf681f424,2684472,0,0x0,8
tick,0x7ffdf681f424,2686478,0,0x0,8
tick,0x7ffdf681f424,2688458,0,0x0,8
tick,0x7ffdf681f424,2690461,0,0x0,8
tick,0x7ffdf681f424,2692392,0,0x0,8
tick,0x7ffdf681f424,2694468,0,0x0,8
tick,0x7ffdf681f424,2696525,0,0x0,8
tick,0x7ffdf681f424,2698443,0,0x0,8
tick,0x7ffdf681f424,2700401,0,0x0,8
tick,0x7ffdf681f424,2702433,0,0x0,8
tick,0x7ffdf681f424,2704423,0,0x0,8
tick,0x7ffdf681f424,2706408,0,0x0,8
tick,0x7ffdf681f424,2708426,0,0x0,8
tick,0x7ffdf681f424,2710267,0,0x0,8
tick,0x7ffdf681f424,2712409,0,0x0,8
tick,0x7ffdf681f424,2714393,0,0x0,8
tick,0x7ffdf681f424,2716388,0,0x0,8
tick,0x7ffdf681f424,2718364,0,0x0,8
tick,0x7ffdf681f424,2720387,0,0x0,8
tick,0x7ffdf681f424,2722366,0,0x0,8
tick,0x7ffdf681f424,2724264,0,0x0,8
tick,0x7ffdf681f424,2726244,0,0x0,8
tick,0x7ffdf681f424,2728355,0,0x0,8
tick,0x7ffdf681f424,2730351,0,0x0,8
tick,0x7ffdf681f424,2732264,0,0x0,8
tick,0x7ffdf681f424,2734348,0,0x0,8
tick,0x7ffdf681f424,2736340,0,0x0,8
tick,0x7ffdf681f424,2738350,0,0x0,8
tick,0x7ffdf681f424,2740381,0,0x0,8
tick,0x7ffdf681f424,2742329,0,0x0,8
tick,0x7ffdf681f424,2744323,0,0x0,8
tick,0x7ffdf681f424,2746310,0,0x0,8
tick,0x7ffdf681f424,2748317,0,0x0,8
tick,0x7ffdf681f424,2750265,0,0x0,8
tick,0x7ffdf681f424,2752293,0,0x0,8
tick,0x7ffdf681f424,2754288,0,0x0,8
tick,0x7ffdf681f424,2756292,0,0x0,8
tick,0x7ffdf681f424,2758277,0,0x0,8
tick,0x7ffdf681f424,2760161,0,0x0,8
tick,0x7ffdf681f424,2762369,0,0x0,8
tick,0x7ffdf681f424,2764272,0,0x0,8
tick,0x7ffdf681f424,2766141,0,0x0,8
tick,0x7ffdf681f424,2768252,0,0x0,8
tick,0x7ffdf681f424,2770238,0,0x0,8
tick,0x7ffdf681f424,2772254,0,0x0,8
tick,0x7ffdf681f424,2774171,0,0x0,8
tick,0x7ffdf681f424,2776233,0,0x0,8
tick,0x7ffdf681f424,2778233,0,0x0,8
tick,0x7ffdf681f424,2780217,0,0x0,8
tick,0x7ffdf681f424,2782214,0,0x0,8
tick,0x7ffdf681f424,2784252,0,0x0,8
tick,0x7ffdf681f424,2786213,0,0x0,8
tick,0x7ffdf681f424,2788199,0,0x0,8
tick,0x7ffdf681f424,2790191,0,0x0,8
tick,0x7ffdf681f424,2792187,0,0x0,8
tick,0x7ffdf681f424,2794172,0,0x0,8
tick,0x7ffdf681f424,2796178,0,0x0,8
tick,0x7ffdf681f424,2798187,0,0x0,8
tick,0x7ffdf681f424,2800177,0,0x0,8
tick,0x7ffdf681f424,2802161,0,0x0,8
tick,0x7ffdf681f424,2804162,0,0x0,8
tick,0x7ffdf681f424,2806204,0,0x0,8
tick,0x7ffdf681f424,2808161,0,0x0,8
tick,0x7ffdf681f424,2810021,0,0x0,8
tick,0x7ffdf681f424,2812126,0,0x0,8
tick,0x7ffdf681f424,2814126,0,0x0,8
tick,0x7ffdf681f424,2816019,0,0x0,8
tick,0x7ffdf681f424,2818103,0,0x0,8
tick,0x7ffdf681f424,2820091,0,0x0,8
tick,0x7ffdf681f424,2822116,0,0x0,8
tick,0x7ffdf681f424,2824159,0,0x0,8
tick,0x7ffdf681f424,2826107,0,0x0,8
tick,0x7ffdf681f424,2828140,0,0x0,8
tick,0x7ffdf681f424,2830104,0,0x0,8
tick,0x7ffdf681f424,2832074,0,0x0,8
tick,0x7ffdf681f424,2834075,0,0x0,8
tick,0x7ffdf681f424,2836071,0,0x0,8
tick,0x7ffdf681f424,2838071,0,0x0,8
tick,0x7ffdf681f424,2840060,0,0x0,8
tick,0x7ffdf681f424,2841946,0,0x0,8
tick,0x7ffdf681f424,2844047,0,0x0,8
tick,0x7ffdf681f424,2845993,0,0x0,8
tick,0x7ffdf681f424,2848033,0,0x0,8
tick,0x7ffdf681f424,2850098,0,0x0,8
tick,0x7ffdf681f424,2852019,0,0x0,8
tick,0x7ffdf681f424,2854030,0,0x0,8
tick,0x7ffdf681f424,2856014,0,0x0,8
tick,0x7ffdf681f424,2858016,0,0x0,8
tick,0x7ffdf681f424,2860003,0,0x0,8
tick,0x7ffdf681f424,2862000,0,0x0,8
tick,0x7ffdf681f424,2863999,0,0x0,8
tick,0x7ffdf681f424,2865864,0,0x0,8
tick,0x7ffdf681f424,2867980,0,0x0,8
tick,0x7ffdf681f424,2869974,0,0x0,8
tick,0x7ffdf681f424,2871940,0,0x0,8
tick,0x7ffdf681f424,2873983,0,0x0,8
tick,0x7ffdf681f424,2875957,0,0x0,8
tick,0x7ffdf681f424,2877957,0,0x0,8
tick,0x7ffdf681f424,2879969,0,0x0,8
tick,0x7ffdf681f424,2881839,0,0x0,8
tick,0x7ffdf681f424,2883944,0,0x0,8
tick,0x7ffdf681f424,2885927,0,0x0,8
tick,0x7ffdf681f424,2887936,0,0x0,8
tick,0x7ffdf681f424,2889929,0,0x0,8
tick,0x7ffdf681f424,2891837,0,0x0,8
tick,0x7ffdf681f424,2893958,0,0x0,8
tick,0x7ffdf681f424,2895925,0,0x0,8
tick,0x7ffdf681f424,2897894,0,0x0,8
tick,0x7ffdf681f424,2899914,0,0x0,8
tick,0x7ffdf681f424,2901875,0,0x0,8
tick,0x7ffdf681f424,2903880,0,0x0,8
tick,0x7ffdf681f424,2905876,0,0x0,8
tick,0x7ffdf681f424,2907774,0,0x0,8
tick,0x7ffdf681f424,2909881,0,0x0,8
tick,0x7ffdf681f424,2911873,0,0x0,8
tick,0x7ffdf681f424,2913860,0,0x0,8
tick,0x7ffdf681f424,2915907,0,0x0,8
tick,0x7ffdf681f424,2917865,0,0x0,8
tick,0x7ffdf681f424,2919844,0,0x0,8
tick,0x7ffdf681f424,2921846,0,0x0,8
tick,0x7ffdf681f424,2923836,0,0x0,8
tick,0x7ffdf681f424,2925838,0,0x0,8
tick,0x7ffdf681f424,2927823,0,0x0,8
tick,0x7ffdf681f424,2929814,0,0x0,8
tick,0x7ffdf681f424,2931783,0,0x0,8
tick,0x7ffdf681f424,2933813,0,0x0,8
tick,0x7ffdf681f424,2935794,0,0x0,8
tick,0x7ffdf681f424,2937854,0,0x0,8
tick,0x7ffdf681f424,2939820,0,0x0,8
tick,0x7ffdf681f424,2941365,0,0x0,8
tick,0x7ffdf681f424,2943459,0,0x0,8
tick,0x7ffdf681f424,2945457,0,0x0,8
tick,0x7ffdf681f424,2947459,0,0x0,8
tick,0x7ffdf681f424,2949342,0,0x0,8
tick,0x7ffdf681f424,2951326,0,0x0,8
tick,0x7ffdf681f424,2953446,0,0x0,8
tick,0x7ffdf681f424,2955431,0,0x0,8
tick,0x7ffdf681f424,2957429,0,0x0,8
tick,0x7ffdf681f424,2959319,0,0x0,8
tick,0x7ffdf681f424,2961435,0,0x0,8
tick,0x7ffdf681f424,2963418,0,0x0,8
tick,0x7ffdf681f424,2965402,0,0x0,8
tick,0x7ffdf681f424,2967400,0,0x0,8
tick,0x7ffdf681f424,2969419,0,0x0,8
tick,0x7ffdf681f424,2971408,0,0x0,8
tick,0x7ffdf681f424,2973277,0,0x0,8
tick,0x7ffdf681f424,2975399,0,0x0,8
tick,0x7ffdf681f424,2977371,0,0x0,8
tick,0x7ffdf681f424,2979478,0,0x0,8
tick,0x7ffdf681f424,2981405,0,0x0,8
tick,0x7ffdf681f424,2983381,0,0x0,8
tick,0x7ffdf681f424,2985351,0,0x0,8
tick,0x7ffdf681f424,2987338,0,0x0,8
tick,0x7ffdf681f424,2989338,0,0x0,8
tick,0x7ffdf681f424,2991264,0,0x0,8
tick,0x7ffdf681f424,2993219,0,0x0,8
tick,0x7ffdf681f424,2995324,0,0x0,8
tick,0x7ffdf681f424,2997328,0,0x0,8
tick,0x7ffdf681f424,2999227,0,0x0,8
tick,0x7ffdf681f424,3001301,0,0x0,8
tick,0x7ffdf681f424,3003358,0,0x0,8
tick,0x7ffdf681f424,3005303,0,0x0,8
tick,0x7ffdf681f424,3007293,0,0x0,8
tick,0x7ffdf681f424,3009312,0,0x0,8
tick,0x7ffdf681f424,3011173,0,0x0,8
tick,0x7ffdf681f424,3013182,0,0x0,8
tick,0x7ffdf681f424,3015277,0,0x0,8
tick,0x7ffdf681f424,3017270,0,0x0,8
tick,0x7ffdf681f424,3019303,0,0x0,8
tick,0x7ffdf681f424,3021267,0,0x0,8
tick,0x7ffdf681f424,3023253,0,0x0,8
tick,0x7ffdf681f424,3025281,0,0x0,8
tick,0x7ffdf681f424,3027237,0,0x0,8
tick,0x7ffdf681f424,3029250,0,0x0,8
tick,0x7ffdf681f424,3031227,0,0x0,8
tick,0x7ffdf681f424,3033231,0,0x0,8
tick,0x7ffdf681f424,3035215,0,0x0,8
tick,0x7ffdf681f424,3037212,0,0x0,8
tick,0x7ffdf681f424,3039204,0,0x0,8
tick,0x7ffdf681f424,3040849,0,0x0,8
tick,0x7ffdf681f424,3042862,0,0x0,8
tick,0x7ffdf681f424,3044860,0,0x0,8
tick,0x7ffdf681f424,3046895,0,0x0,8
tick,0x7ffdf681f424,3048844,0,0x0,8
tick,0x7ffdf681f424,3050726,0,0x0,8
tick,0x7ffdf681f424,3052733,0,0x0,8
tick,0x7ffdf681f424,3054836,0,0x0,8
tick,0x7ffdf681f424,3056829,0,0x0,8
tick,0x7ffdf681f424,3058831,0,0x0,8
tick,0x7ffdf681f424,3060829,0,0x0,8
tick,0x7ffdf681f424,3062813,0,0x0,8
tick,0x7ffdf681f424,3064806,0,0x0,8
tick,0x7ffdf681f424,3066806,0,0x0,8
tick,0x7ffdf681f424,3068840,0,0x0,8
tick,0x7ffdf681f424,3070766,0,0x0,8
tick,0x7ffdf681f424,3072778,0,0x0,8
tick,0x7ffdf681f424,3074772,0,0x0,8
tick,0x7ffdf681f424,3076773,0,0x0,8
tick,0x7ffdf681f424,3078760,0,0x0,8
tick,0x7ffdf681f424,3080765,0,0x0,8
tick,0x7ffdf681f424,3082644,0,0x0,8
tick,0x7ffdf681f424,3084622,0,0x0,8
tick,0x7ffdf681f424,3086744,0,0x0,8
tick,0x7ffdf681f424,3088772,0,0x0,8
tick,0x7ffdf681f424,3090713,0,0x0,8
tick,0x7ffdf681f424,3092635,0,0x0,8
tick,0x7ffdf681f424,3094728,0,0x0,8
tick,0x7ffdf681f424,3096714,0,0x0,8
tick,0x7ffdf681f424,3098750,0,0x0,8
tick,0x7ffdf681f424,3100690,0,0x0,8
tick,0x7ffdf681f424,3102718,0,0x0,8
tick,0x7ffdf681f424,3104696,0,0x0,8
tick,0x7ffdf681f424,3106701,0,0x0,8
tick,0x7ffdf681f424,3108690,0,0x0,8
tick,0x7ffdf681f424,3110668,0,0x0,8
tick,0x7ffdf681f424,3112746,0,0x0,8
tick,0x7ffdf681f424,3114678,0,0x0,8
tick,0x7ffdf681f424,3116658,0,0x0,8
tick,0x7ffdf681f424,3118651,0,0x0,8
tick,0x7ffdf681f424,3120655,0,0x0,8
tick,0x7ffdf681f424,3122643,0,0x0,8
tick,0x7ffdf681f424,3124643,0,0x0,8
tick,0x7ffdf681f424,3126643,0,0x0,8
tick,0x7ffdf681f424,3128661,0,0x0,8
tick,0x7ffdf681f424,3130616,0,0x0,8
tick,0x7ffdf681f424,3132509,0,0x0,8
tick,0x7ffdf681f424,3134659,0,0x0,8
tick,0x7ffdf681f424,3136613,0,0x0,8
tick,0x7ffdf681f424,3138606,0,0x0,8
tick,0x7ffdf681f424,3140586,0,0x0,8
tick,0x7ffdf681f424,3142487,0,0x0,8
tick,0x7ffdf681f424,3144482,0,0x0,8
tick,0x7ffdf681f424,3146494,0,0x0,8
tick,0x7ffdf681f424,3148578,0,0x0,8
tick,0x7ffdf681f424,3150570,0,0x0,8
tick,0x7ffdf681f424,3152464,0,0x0,8
tick,0x7ffdf681f424,3154562,0,0x0,8
tick,0x7ffdf681f424,3156615,0,0x0,8
tick,0x7ffdf681f424,3158563,0,0x0,8
tick,0x7ffdf681f424,3160551,0,0x0,8
tick,0x7ffdf681f424,3162543,0,0x0,8
tick,0x7ffdf681f424,3164543,0,0x0,8
tick,0x7ffdf681f424,3166523,0,0x0,8
tick,0x7ffdf681f424,3168522,0,0x0,8
tick,0x7ffdf681f424,3170522,0,0x0,8
tick,0x7ffdf681f424,3172431,0,0x0,8
tick,0x7ffdf681f424,3174385,0,0x0,8
tick,0x7ffdf681f424,3176524,0,0x0,8
tick,0x7ffdf681f424,3178575,0,0x0,8
tick,0x7ffdf681f424,3180501,0,0x0,8
tick,0x7ffdf681f424,3182470,0,0x0,8
tick,0x7ffdf681f424,3184486,0,0x0,8
tick,0x7ffdf681f424,3186477,0,0x0,8
tick,0x7ffdf681f424,3188467,0,0x0,8
tick,0x7ffdf681f424,3190474,0,0x0,8
tick,0x7ffdf681f424,3192475,0,0x0,8
tick,0x7ffdf681f424,3194463,0,0x0,8
tick,0x7ffdf681f424,3196457,0,0x0,8
tick,0x7ffdf681f424,3198442,0,0x0,8
tick,0x7ffdf681f424,3200484,0,0x0,8
tick,0x7ffdf681f424,3202441,0,0x0,8
tick,0x7ffdf681f424,3204439,0,0x0,8
tick,0x7ffdf681f424,3206423,0,0x0,8
tick,0x7ffdf681f424,3208418,0,0x0,8
tick,0x7ffdf681f424,3210312,0,0x0,8
tick,0x7ffdf681f424,3212349,0,0x0,8
tick,0x7ffdf681f424,3214402,0,0x0,8
tick,0x7ffdf681f424,3216414,0,0x0,8
tick,0x7ffdf681f424,3218400,0,0x0,8
tick,0x7ffdf681f424,3220360,0,0x0,8
tick,0x7ffdf681f424,3222471,0,0x0,8
tick,0x7ffdf681f424,3224262,0,0x0,8
tick,0x7ffdf681f424,3226367,0,0x0,8
tick,0x7ffdf681f424,3228386,0,0x0,8
tick,0x7ffdf681f424,3230366,0,0x0,8
tick,0x7ffdf681f424,3232351,0,0x0,8
tick,0x7ffdf681f424,3234352,0,0x0,8
tick,0x7ffdf681f424,3236341,0,0x0,8
tick,0x7ffdf681f424,3238346,0,0x0,8
tick,0x7ffdf681f424,3240338,0,0x0,8
tick,0x7ffdf681f424,3241882,0,0x0,8
tick,0x7ffdf681f424,3243999,0,0x0,8
tick,0x7ffdf681f424,3245997,0,0x0,8
tick,0x7ffdf681f424,3247977,0,0x0,8
tick,0x7ffdf681f424,3249969,0,0x0,8
tick,0x7ffdf681f424,3251914,0,0x0,8
tick,0x7ffdf681f424,3253954,0,0x0,8
tick,0x7ffdf681f424,3255954,0,0x0,8
tick,0x7ffdf681f424,3257844,0,0x0,8
tick,0x7ffdf681f424,3260002,0,0x0,8
tick,0x7ffdf681f424,3261968,0,0x0,8
tick,0x7ffdf681f424,3263932,0,0x0,8
tick,0x7ffdf681f424,3265976,0,0x0,8
tick,0x7ffdf681f424,3267937,0,0x0,8
tick,0x7ffdf681f424,3269920,0,0x0,8
tick,0x7ffdf681f424,3271916,0,0x0,8
tick,0x7ffdf681f424,3273922,0,0x0,8
tick,0x7ffdf681f424,3275903,0,0x0,8
tick,0x7ffdf681f424,3277899,0,0x0,8
tick,0x7ffdf681f424,3279899,0,0x0,8
tick,0x7ffdf681f424,3281797,0,0x0,8
tick,0x7ffdf681f424,3283890,0,0x0,8
tick,0x7ffdf681f424,3285877,0,0x0,8
tick,0x7ffdf681f424,3287954,0,0x0,8
tick,0x7ffdf681f424,3289870,0,0x0,8
tick,0x7ffdf681f424,3291775,0,0x0,8
tick,0x7ffdf681f424,3293863,0,0x0,8
tick,0x7ffdf681f424,3295866,0,0x0,8
tick,0x7ffdf681f424,3297846,0,0x0,8
tick,0x7ffdf681f424,3299832,0,0x0,8
tick,0x7ffdf681f424,3301870,0,0x0,8
tick,0x7ffdf681f424,3303836,0,0x0,8
tick,0x7ffdf681f424,3305831,0,0x0,8
tick,0x7ffdf681f424,3307700,0,0x0,8
tick,0x7ffdf681f424,3309791,0,0x0,8
tick,0x7ffdf681f424,3311713,0,0x0,8
tick,0x7ffdf681f424,3313804,0,0x0,8
tick,0x7ffdf681f424,3315807,0,0x0,8
tick,0x7ffdf681f424,3317790,0,0x0,8
tick,0x7ffdf681f424,3319783,0,0x0,8
tick,0x7ffdf681f424,3321783,0,0x0,8
tick,0x7ffdf681f424,3323778,0,0x0,8
tick,0x7ffdf681f424,3325777,0,0x0,8
tick,0x7ffdf681f424,3327768,0,0x0,8
tick,0x7ffdf681f424,3329769,0,0x0,8
tick,0x7ffdf681f424,3331756,0,0x0,8
tick,0x7ffdf681f424,3333760,0,0x0,8
tick,0x7ffdf681f424,3335747,0,0x0,8
tick,0x7ffdf681f424,3337738,0,0x0,8
tick,0x7ffdf681f424,3339734,0,0x0,8
tick,0x7ffdf681f424,3341271,0,0x0,8
tick,0x7ffdf681f424,3343391,0,0x0,8
tick,0x7ffdf681f424,3345382,0,0x0,8
tick,0x7ffdf681f424,3347318,0,0x0,8
tick,0x7ffdf681f424,3349258,0,0x0,8
tick,0x7ffdf681f424,3351300,0,0x0,8
tick,0x7ffdf681f424,3353413,0,0x0,8
tick,0x7ffdf681f424,3355346,0,0x0,8
tick,0x7ffdf681f424,3357322,0,0x0,8
tick,0x7ffdf681f424,3359342,0,0x0,8
tick,0x7ffdf681f424,3361337,0,0x0,8
tick,0x7ffdf681f424,3363334,0,0x0,8
tick,0x7ffdf681f424,3365326,0,0x0,8
tick,0x7ffdf681f424,3367321,0,0x0,8
tick,0x7ffdf681f424,3369316,0,0x0,8
tick,0x7ffdf681f424,3371236,0,0x0,8
tick,0x7ffdf681f424,3373342,0,0x0,8
tick,0x7ffdf681f424,3375329,0,0x0,8
tick,0x7ffdf681f424,3377302,0,0x0,8
tick,0x7ffdf681f424,3379327,0,0x0,8
tick,0x7ffdf681f424,3381190,0,0x0,8
tick,0x7ffdf681f424,3383255,0,0x0,8
tick,0x7ffdf681f424,3385305,0,0x0,8
tick,0x7ffdf681f424,3387263,0,0x0,8
tick,0x7ffdf681f424,3389266,0,0x0,8
tick,0x7ffdf681f424,3391150,0,0x0,8
tick,0x7ffdf681f424,3393255,0,0x0,8
tick,0x7ffdf681f424,3395242,0,0x0,8
tick,0x7ffdf681f424,3397256,0,0x0,8
tick,0x7ffdf681f424,3399249,0,0x0,8
tick,0x7ffdf681f424,3401233,0,0x0,8
tick,0x7ffdf681f424,3403225,0,0x0,8
tick,0x7ffdf681f424,3405225,0,0x0,8
tick,0x7ffdf681f424,3407139,0,0x0,8
tick,0x7ffdf681f424,3409236,0,0x0,8
tick,0x7ffdf681f424,3411106,0,0x0,8
tick,0x7ffdf681f424,3413110,0,0x0,8
tick,0x7ffdf681f424,3415202,0,0x0,8
tick,0x7ffdf681f424,3417185,0,0x0,8
tick,0x7ffdf681f424,3419280,0,0x0,8
tick,0x7ffdf681f424,3421210,0,0x0,8
tick,0x7ffdf681f424,3423172,0,0x0,8
tick,0x7ffdf681f424,3425176,0,0x0,8
tick,0x7ffdf681f424,3427206,0,0x0,8
tick,0x7ffdf681f424,3429174,0,0x0,8
tick,0x7ffdf681f424,3431163,0,0x0,8
tick,0x7ffdf681f424,3433150,0,0x0,8
tick,0x7ffdf681f424,3435073,0,0x0,8
tick,0x7ffdf681f424,3437145,0,0x0,8
tick,0x7ffdf681f424,3439122,0,0x0,8
tick,0x7ffdf681f424,3441080,0,0x0,8
tick,0x7ffdf681f424,3442715,0,0x0,8
tick,0x7ffdf681f424,3444698,0,0x0,8
tick,0x7ffdf681f424,3446699,0,0x0,8
tick,0x7ffdf681f424,3448725,0,0x0,8
tick,0x7ffdf681f424,3450552,0,0x0,8
tick,0x7ffdf681f424,3452560,0,0x0,8
tick,0x7ffdf681f424,3454677,0,0x0,8
tick,0x7ffdf681f424,3456663,0,0x0,8
tick,0x7ffdf681f424,3458673,0,0x0,8
tick,0x7ffdf681f424,3460628,0,0x0,8
tick,0x7ffdf681f424,3462692,0,0x0,8
tick,0x7ffdf681f424,3464647,0,0x0,8
tick,0x7ffdf681f424,3466573,0,0x0,8
tick,0x7ffdf681f424,3468656,0,0x0,8
tick,0x7ffdf681f424,3470595,0,0x0,8
tick,0x7ffdf681f424,3472619,0,0x0,8
tick,0x7ffdf681f424,3474495,0,0x0,8
tick,0x7ffdf681f424,3476605,0,0x0,8
tick,0x7ffdf681f424,3478607,0,0x0,8
tick,0x7ffdf681f424,3480577,0,0x0,8
tick,0x7ffdf681f424,3482600,0,0x0,8
tick,0x7ffdf681f424,3484655,0,0x0,8
tick,0x7ffdf681f424,3486593,0,0x0,8
tick,0x7ffdf681f424,3488608,0,0x0,8
tick,0x7ffdf681f424,3490471,0,0x0,8
tick,0x7ffdf681f424,3492469,0,0x0,8
tick,0x7ffdf681f424,3494582,0,0x0,8
tick,0x7ffdf681f424,3496570,0,0x0,8
tick,0x7ffdf681f424,3498553,0,0x0,8
tick,0x7ffdf681f424,3500519,0,0x0,8
tick,0x7ffdf681f424,3502541,0,0x0,8
tick,0x7ffdf681f424,3504536,0,0x0,8
tick,0x7ffdf681f424,3506546,0,0x0,8
tick,0x7ffdf681f424,3508533,0,0x0,8
tick,0x7ffdf681f424,3510493,0,0x0,8
tick,0x7ffdf681f424,3512510,0,0x0,8
tick,0x7ffdf681f424,3514516,0,0x0,8
tick,0x7ffdf681f424,3516505,0,0x0,8
tick,0x7ffdf681f424,3518516,0,0x0,8
tick,0x7ffdf681f424,3520499,0,0x0,8
tick,0x7ffdf681f424,3522491,0,0x0,8
tick,0x7ffdf681f424,3524370,0,0x0,8
tick,0x7ffdf681f424,3526482,0,0x0,8
tick,0x7ffdf681f424,3528536,0,0x0,8
tick,0x7ffdf681f424,3530475,0,0x0,8
tick,0x7ffdf681f424,3532376,0,0x0,8
tick,0x7ffdf681f424,3534457,0,0x0,8
tick,0x7ffdf681f424,3536477,0,0x0,8
tick,0x7ffdf681f424,3538449,0,0x0,8
tick,0x7ffdf681f424,3540449,0,0x0,8
tick,0x7ffdf681f424,3542444,0,0x0,8
tick,0x7ffdf681f424,3544434,0,0x0,8
tick,0x7ffdf681f424,3546426,0,0x0,8
tick,0x7ffdf681f424,3548419,0,0x0,8
tick,0x7ffdf681f424,3550493,0,0x0,8
tick,0x7ffdf681f424,3552414,0,0x0,8
tick,0x7ffdf681f424,3554436,0,0x0,8
tick,0x7ffdf681f424,3556400,0,0x0,8
tick,0x7ffdf681f424,3558397,0,0x0,8
tick,0x7ffdf681f424,3560268,0,0x0,8
tick,0x7ffdf681f424,3562274,0,0x0,8
tick,0x7ffdf681f424,3564376,0,0x0,8
tick,0x7ffdf681f424,3566265,0,0x0,8
tick,0x7ffdf681f424,3568364,0,0x0,8
tick,0x7ffdf681f424,3570333,0,0x0,8
tick,0x7ffdf681f424,3572228,0,0x0,8
tick,0x7ffdf681f424,3574290,0,0x0,8
tick,0x7ffdf681f424,3576346,0,0x0,8
tick,0x7ffdf681f424,3578360,0,0x0,8
tick,0x7ffdf681f424,3580303,0,0x0,8
tick,0x7ffdf681f424,3582335,0,0x0,8
tick,0x7ffdf681f424,3584214,0,0x0,8
tick,0x7ffdf681f424,3586316,0,0x0,8
tick,0x7ffdf681f424,3588326,0,0x0,8
tick,0x7ffdf681f424,3590311,0,0x0,8
tick,0x7ffdf681f424,3592308,0,0x0,8
tick,0x7ffdf681f424,3594338,0,0x0,8
tick,0x7ffdf681f424,3596306,0,0x0,8
tick,0x7ffdf681f424,3598286,0,0x0,8
tick,0x7ffdf681f424,3600281,0,0x0,8
tick,0x7ffdf681f424,3602169,0,0x0,8
tick,0x7ffdf681f424,3604259,0,0x0,8
tick,0x7ffdf681f424,3606268,0,0x0,8
tick,0x7ffdf681f424,3608251,0,0x0,8
tick,0x7ffdf681f424,3610252,0,0x0,8
tick,0x7ffdf681f424,3612193,0,0x0,8
tick,0x7ffdf681f424,3614249,0,0x0,8
tick,0x7ffdf681f424,3616155,0,0x0,8
tick,0x7ffdf681f424,3618245,0,0x0,8
tick,0x7ffdf681f424,3620267,0,0x0,8
tick,0x7ffdf681f424,3622226,0,0x0,8
tick,0x7ffdf681f424,3624220,0,0x0,8
tick,0x7ffdf681f424,3626214,0,0x0,8
tick,0x7ffdf681f424,3628204,0,0x0,8
tick,0x7ffdf681f424,3630224,0,0x0,8
tick,0x7ffdf681f424,3632200,0,0x0,8
tick,0x7ffdf681f424,3634188,0,0x0,8
tick,0x7ffdf681f424,3636189,0,0x0,8
tick,0x7ffdf681f424,3638133,0,0x0,8
tick,0x7ffdf681f424,3640069,0,0x0,8
tick,0x7ffdf681f424,3642047,0,0x0,8
tick,0x7ffdf681f424,3644163,0,0x0,8
tick,0x7ffdf681f424,3646164,0,0x0,8
tick,0x7ffdf681f424,3648158,0,0x0,8
tick,0x7ffdf681f424,3650147,0,0x0,8
tick,0x7ffdf681f424,3652082,0,0x0,8
tick,0x7ffdf681f424,3654147,0,0x0,8
tick,0x7ffdf681f424,3656133,0,0x0,8
tick,0x7ffdf681f424,3658124,0,0x0,8
tick,0x7ffdf681f424,3660163,0,0x0,8
tick,0x7ffdf681f424,3662136,0,0x0,8
tick,0x7ffdf681f424,3664108,0,0x0,8
tick,0x7ffdf681f424,3665975,0,0x0,8
tick,0x7ffdf681f424,3668059,0,0x0,8
tick,0x7ffdf681f424,3670093,0,0x0,8
tick,0x7ffdf681f424,3672090,0,0x0,8
tick,0x7ffdf681f424,3674092,0,0x0,8
tick,0x7ffdf681f424,3676082,0,0x0,8
tick,0x7ffdf681f424,3677967,0,0x0,8
tick,0x7ffdf681f424,3680068,0,0x0,8
tick,0x7ffdf681f424,3682120,0,0x0,8
tick,0x7ffdf681f424,3684070,0,0x0,8
tick,0x7ffdf681f424,3686059,0,0x0,8
tick,0x7ffdf681f424,3688045,0,0x0,8
tick,0x7ffdf681f424,3690030,0,0x0,8
tick,0x7ffdf681f424,3691950,0,0x0,8
tick,0x7ffdf681f424,3694023,0,0x0,8
tick,0x7ffdf681f424,3696028,0,0x0,8
tick,0x7ffdf681f424,3698033,0,0x0,8
tick,0x7ffdf681f424,3700000,0,0x0,8
tick,0x7ffdf681f424,3701891,0,0x0,8
tick,0x7ffdf681f424,3704065,0,0x0,8
tick,0x7ffdf681f424,3706001,0,0x0,8
tick,0x7ffdf681f424,3707888,0,0x0,8
tick,0x7ffdf681f424,3709986,0,0x0,8
tick,0x7ffdf681f424,3711875,0,0x0,8
tick,0x7ffdf681f424,3713964,0,0x0,8
tick,0x7ffdf681f424,3716010,0,0x0,8
tick,0x7ffdf681f424,3717972,0,0x0,8
tick,0x7ffdf681f424,3719963,0,0x0,8
tick,0x7ffdf681f424,3721870,0,0x0,8
tick,0x7ffdf681f424,3723898,0,0x0,8
tick,0x7ffdf681f424,3725828,0,0x0,8
tick,0x7ffdf681f424,3727947,0,0x0,8
tick,0x7ffdf681f424,3729930,0,0x0,8
tick,0x7ffdf681f424,3731904,0,0x0,8
tick,0x7ffdf681f424,3733912,0,0x0,8
tick,0x7ffdf681f424,3735917,0,0x0,8
tick,0x7ffdf681f424,3737908,0,0x0,8
tick,0x7ffdf681f424,3739796,0,0x0,8
tick,0x7ffdf681f424,3741916,0,0x0,8
tick,0x7ffdf681f424,3743898,0,0x0,8
tick,0x7ffdf681f424,3745917,0,0x0,8
tick,0x7ffdf681f424,3747896,0,0x0,8
tick,0x7ffdf681f424,3749881,0,0x0,8
tick,0x7ffdf681f424,3751867,0,0x0,8
tick,0x7ffdf681f424,3753872,0,0x0,8
tick,0x7ffdf681f424,3755870,0,0x0,8
tick,0x7ffdf681f424,3757749,0,0x0,8
tick,0x7ffdf681f424,3759848,0,0x0,8
tick,0x7ffdf681f424,3761847,0,0x0,8
tick,0x7ffdf681f424,3763846,0,0x0,8
tick,0x7ffdf681f424,3765831,0,0x0,8
tick,0x7ffdf681f424,3767822,0,0x0,8
tick,0x7ffdf681f424,3769835,0,0x0,8
tick,0x7ffdf681f424,3771865,0,0x0,8
tick,0x7ffdf681f424,3773815,0,0x0,8
tick,0x7ffdf681f424,3775801,0,0x0,8
tick,0x7ffdf681f424,3777799,0,0x0,8
tick,0x7ffdf681f424,3779796,0,0x0,8
tick,0x7ffdf681f424,3781794,0,0x0,8
tick,0x7ffdf681f424,3783747,0,0x0,8
tick,0x7ffdf681f424,3785787,0,0x0,8
tick,0x7ffdf681f424,3787797,0,0x0,8
tick,0x7ffdf681f424,3789782,0,0x0,8
tick,0x7ffdf681f424,3791757,0,0x0,8
tick,0x7ffdf681f424,3793776,0,0x0,8
tick,0x7ffdf681f424,3795758,0,0x0,8
tick,0x7ffdf681f424,3797751,0,0x0,8
tick,0x7ffdf681f424,3799708,0,0x0,8
tick,0x7ffdf681f424,3801634,0,0x0,8
tick,0x7ffdf681f424,3803736,0,0x0,8
tick,0x7ffdf681f424,3805737,0,0x0,8
tick,0x7ffdf681f424,3807664,0,0x0,8
tick,0x7ffdf681f424,3809720,0,0x0,8
tick,0x7ffdf681f424,3811656,0,0x0,8
tick,0x7ffdf681f424,3813776,0,0x0,8
tick,0x7ffdf681f424,3815710,0,0x0,8
tick,0x7ffdf681f424,3817697,0,0x0,8
tick,0x7ffdf681f424,3819686,0,0x0,8
tick,0x7ffdf681f424,3821683,0,0x0,8
tick,0x7ffdf681f424,3823673,0,0x0,8
tick,0x7ffdf681f424,3825570,0,0x0,8
tick,0x7ffdf681f424,3827666,0,0x0,8
tick,0x7ffdf681f424,3829694,0,0x0,8
tick,0x7ffdf681f424,3831570,0,0x0,8
tick,0x7ffdf681f424,3833654,0,0x0,8
tick,0x7ffdf681f424,3835680,0,0x0,8
tick,0x7ffdf681f424,3837658,0,0x0,8
tick,0x7ffdf681f424,3839632,0,0x0,8
tick,0x7ffdf681f424,3841633,0,0x0,8
tick,0x7ffdf681f424,3843630,0,0x0,8
tick,0x7ffdf681f424,3845630,0,0x0,8
tick,0x7ffdf681f424,3847617,0,0x0,8
tick,0x7ffdf681f424,3849498,0,0x0,8
tick,0x7ffdf681f424,3851546,0,0x0,8
tick,0x7ffdf681f424,3853597,0,0x0,8
tick,0x7ffdf681f424,3855602,0,0x0,8
tick,0x7ffdf681f424,3857619,0,0x0,8
tick,0x7ffdf681f424,3859562,0,0x0,8
tick,0x7ffdf681f424,3861475,0,0x0,8
tick,0x7ffdf681f424,3863581,0,0x0,8
tick,0x7ffdf681f424,3865573,0,0x0,8
tick,0x7ffdf681f424,3867573,0,0x0,8
tick,0x7ffdf681f424,3869456,0,0x0,8
tick,0x7ffdf681f424,3871457,0,0x0,8
tick,0x7ffdf681f424,3873558,0,0x0,8
tick,0x7ffdf681f424,3875550,0,0x0,8
tick,0x7ffdf681f424,3877543,0,0x0,8
tick,0x7ffdf681f424,3879550,0,0x0,8
tick,0x7ffdf681f424,3881430,0,0x0,8
tick,0x7ffdf681f424,3883524,0,0x0,8
tick,0x7ffdf681f424,3885516,0,0x0,8
tick,0x7ffdf681f424,3887512,0,0x0,8
tick,0x7ffdf681f424,3889527,0,0x0,8
tick,0x7ffdf681f424,3891461,0,0x0,8
tick,0x7ffdf681f424,3893386,0,0x0,8
tick,0x7ffdf681f424,3895504,0,0x0,8
tick,0x7ffdf681f424,3897493,0,0x0,8
tick,0x7ffdf681f424,3899392,0,0x0,8
tick,0x7ffdf681f424,3901393,0,0x0,8
tick,0x7ffdf681f424,3903482,0,0x0,8
tick,0x7ffdf681f424,3905461,0,0x0,8
tick,0x7ffdf681f424,3907454,0,0x0,8
tick,0x7ffdf681f424,3909458,0,0x0,8
tick,0x7ffdf681f424,3911448,0,0x0,8
tick,0x7ffdf681f424,3913441,0,0x0,8
tick,0x7ffdf681f424,3915436,0,0x0,8
tick,0x7ffdf681f424,3917454,0,0x0,8
tick,0x7ffdf681f424,3919440,0,0x0,8
tick,0x7ffdf681f424,3921444,0,0x0,8
tick,0x7ffdf681f424,3923400,0,0x0,8
tick,0x7ffdf681f424,3925419,0,0x0,8
tick,0x7ffdf681f424,3927411,0,0x0,8
tick,0x7ffdf681f424,3929429,0,0x0,8
tick,0x7ffdf681f424,3931307,0,0x0,8
tick,0x7ffdf681f424,3933299,0,0x0,8
tick,0x7ffdf681f424,3935388,0,0x0,8
tick,0x7ffdf681f424,3937379,0,0x0,8
tick,0x7ffdf681f424,3939446,0,0x0,8
tick,0x7ffdf681f424,3941265,0,0x0,8
tick,0x7ffdf681f424,3943365,0,0x0,8
tick,0x7ffdf681f424,3945379,0,0x0,8
tick,0x7ffdf681f424,3947367,0,0x0,8
tick,0x7ffdf681f424,3949341,0,0x0,8
tick,0x7ffdf681f424,3951353,0,0x0,8
tick,0x7ffdf681f424,3953341,0,0x0,8
tick,0x7ffdf681f424,3955339,0,0x0,8
tick,0x7ffdf681f424,3957322,0,0x0,8
tick,0x7ffdf681f424,3959217,0,0x0,8
tick,0x7ffdf681f424,3961205,0,0x0,8
tick,0x7ffdf681f424,3963315,0,0x0,8
tick,0x7ffdf681f424,3965321,0,0x0,8
tick,0x7ffdf681f424,3967376,0,0x0,8
tick,0x7ffdf681f424,3969298,0,0x0,8
tick,0x7ffdf681f424,3971182,0,0x0,8
tick,0x7ffdf681f424,3973177,0,0x0,8
tick,0x7ffdf681f424,3975288,0,0x0,8
tick,0x7ffdf681f424,3977271,0,0x0,8
tick,0x7ffdf681f424,3979367,0,0x0,8
tick,0x7ffdf681f424,3981161,0,0x0,8
tick,0x7ffdf681f424,3983163,0,0x0,8
tick,0x7ffdf681f424,3985254,0,0x0,8
tick,0x7ffdf681f424,3987245,0,0x0,8
tick,0x7ffdf681f424,3989283,0,0x0,8
tick,0x7ffdf681f424,3991118,0,0x0,8
tick,0x7ffdf681f424,3993236,0,0x0,8
tick,0x7ffdf681f424,3995224,0,0x0,8
tick,0x7ffdf681f424,3997225,0,0x0,8
tick,0x7ffdf681f424,3999220,0,0x0,8
tick,0x7ffdf681f424,4001220,0,0x0,8
tick,0x7ffdf681f424,4003203,0,0x0,8
tick,0x7ffdf681f424,4005200,0,0x0,8
tick,0x7ffdf681f424,4007191,0,0x0,8
tick,0x7ffdf681f424,4009211,0,0x0,8
tick,0x7ffdf681f424,4011090,0,0x0,8
tick,0x7ffdf681f424,4013076,0,0x0,8
tick,0x7ffdf681f424,4015177,0,0x0,8
tick,0x7ffdf681f424,4017171,0,0x0,8
tick,0x7ffdf681f424,4019195,0,0x0,8
tick,0x7ffdf681f424,4021163,0,0x0,8
tick,0x7ffdf681f424,4023146,0,0x0,8
tick,0x7ffdf681f424,4025146,0,0x0,8
tick,0x7ffdf681f424,4027146,0,0x0,8
tick,0x7ffdf681f424,4029140,0,0x0,8
tick,0x7ffdf681f424,4031138,0,0x0,8
tick,0x7ffdf681f424,4033123,0,0x0,8
tick,0x7ffdf681f424,4035126,0,0x0,8
tick,0x7ffdf681f424,4037116,0,0x0,8
tick,0x7ffdf681f424,4039108,0,0x0,8
tick,0x7ffdf681f424,4041020,0,0x0,8
tick,0x7ffdf681f424,4043110,0,0x0,8
tick,0x7ffdf681f424,4045099,0,0x0,8
tick,0x7ffdf681f424,4047089,0,0x0,8
tick,0x7ffdf681f424,4049123,0,0x0,8
tick,0x7ffdf681f424,4050976,0,0x0,8
tick,0x7ffdf681f424,4052960,0,0x0,8
tick,0x7ffdf681f424,4055102,0,0x0,8
tick,0x7ffdf681f424,4057072,0,0x0,8
tick,0x7ffdf681f424,4059085,0,0x0,8
tick,0x7ffdf681f424,4061060,0,0x0,8
tick,0x7ffdf681f424,4063035,0,0x0,8
tick,0x7ffdf681f424,4065034,0,0x0,8
tick,0x7ffdf681f424,4067046,0,0x0,8
tick,0x7ffdf681f424,4069024,0,0x0,8
tick,0x7ffdf681f424,4071034,0,0x0,8
tick,0x7ffdf681f424,4073018,0,0x0,8
tick,0x7ffdf681f424,4075010,0,0x0,8
tick,0x7ffdf681f424,4077032,0,0x0,8
tick,0x7ffdf681f424,4079012,0,0x0,8
tick,0x7ffdf681f424,4080971,0,0x0,8
tick,0x7ffdf681f424,4082873,0,0x0,8
tick,0x7ffdf681f424,4084842,0,0x0,8
tick,0x7ffdf681f424,4086971,0,0x0,8
tick,0x7ffdf681f424,4088994,0,0x0,8
tick,0x7ffdf681f424,4090875,0,0x0,8
tick,0x7ffdf681f424,4092866,0,0x0,8
tick,0x7ffdf681f424,4094955,0,0x0,8
tick,0x7ffdf681f424,4096944,0,0x0,8
tick,0x7ffdf681f424,4099112,0,0x0,8
tick,0x7ffdf681f424,4100961,0,0x0,8
tick,0x7ffdf681f424,4102935,0,0x0,8
tick,0x7ffdf681f424,4104930,0,0x0,8
tick,0x7ffdf681f424,4106925,0,0x0,8
tick,0x7ffdf681f424,4108826,0,0x0,8
tick,0x7ffdf681f424,4110877,0,0x0,8
tick,0x7ffdf681f424,4112910,0,0x0,8
tick,0x7ffdf681f424,4114901,0,0x0,8
tick,0x7ffdf681f424,4116899,0,0x0,8
tick,0x7ffdf681f424,4118895,0,0x0,8
tick,0x7ffdf681f424,4120932,0,0x0,8
tick,0x7ffdf681f424,4122895,0,0x0,8
tick,0x7ffdf681f424,4124884,0,0x0,8
tick,0x7ffdf681f424,4126880,0,0x0,8
tick,0x7ffdf681f424,4128908,0,0x0,8
tick,0x7ffdf681f424,4130808,0,0x0,8
tick,0x7ffdf681f424,4132758,0,0x0,8
tick,0x7ffdf681f424,4134858,0,0x0,8
tick,0x7ffdf681f424,4136850,0,0x0,8
tick,0x7ffdf681f424,4138882,0,0x0,8
tick,0x7ffdf681f424,4140845,0,0x0,8
tick,0x7ffdf681f424,4142907,0,0x0,8
tick,0x7ffdf681f424,4144837,0,0x0,8
tick,0x7ffdf681f424,4146830,0,0x0,8
tick,0x7ffdf681f424,4148814,0,0x0,8
tick,0x7ffdf681f424,4150814,0,0x0,8
tick,0x7ffdf681f424,4152805,0,0x0,8
tick,0x7ffdf681f424,4154798,0,0x0,8
tick,0x7ffdf681f424,4156797,0,0x0,8
tick,0x7ffdf681f424,4158785,0,0x0,8
tick,0x7ffdf681f424,4160785,0,0x0,8
tick,0x7ffdf681f424,4162799,0,0x0,8
tick,0x7ffdf681f424,4164814,0,0x0,8
tick,0x7ffdf681f424,4166799,0,0x0,8
tick,0x7ffdf681f424,4168766,0,0x0,8
tick,0x7ffdf681f424,4170640,0,0x0,8
tick,0x7ffdf681f424,4172649,0,0x0,8
tick,0x7ffdf681f424,4174645,0,0x0,8
tick,0x7ffdf681f424,4176631,0,0x0,8
tick,0x7ffdf681f424,4178824,0,0x0,8
tick,0x7ffdf681f424,4180737,0,0x0,8
tick,0x7ffdf681f424,4182709,0,0x0,8
tick,0x7ffdf681f424,4184719,0,0x0,8
tick,0x7ffdf681f424,4186769,0,0x0,8
tick,0x7ffdf681f424,4188699,0,0x0,8
tick,0x7ffdf681f424,4190706,0,0x0,8
tick,0x7ffdf681f424,4192694,0,0x0,8
tick,0x7ffdf681f424,4194693,0,0x0,8
tick,0x7ffdf681f424,4196690,0,0x0,8
tick,0x7ffdf681f424,4198680,0,0x0,8
tick,0x7ffdf681f424,4200675,0,0x0,8
tick,0x7ffdf681f424,4202669,0,0x0,8
tick,0x7ffdf681f424,4204657,0,0x0,8
tick,0x7ffdf681f424,4206654,0,0x0,8
tick,0x7ffdf681f424,4208633,0,0x0,8
tick,0x7ffdf681f424,4210578,0,0x0,8
tick,0x7ffdf681f424,4212533,0,0x0,8
tick,0x7ffdf681f424,4214634,0,0x0,8
tick,0x7ffdf681f424,4216544,0,0x0,8
tick,0x7ffdf681f424,4218658,0,0x0,8
tick,0x7ffdf681f424,4220631,0,0x0,8
tick,0x7ffdf681f424,4222618,0,0x0,8
tick,0x7ffdf681f424,4224502,0,0x0,8
tick,0x7ffdf681f424,4226607,0,0x0,8
tick,0x7ffdf681f424,4228604,0,0x0,8
tick,0x7ffdf681f424,4230656,0,0x0,8
tick,0x7ffdf681f424,4232719,0,0x0,8
tick,0x7ffdf681f424,4234590,0,0x0,8
tick,0x7ffdf681f424,4236579,0,0x0,8
tick,0x7ffdf681f424,4238573,0,0x0,8
tick,0x7ffdf681f424,4240570,0,0x0,8
tick,0x7ffdf681f424,4242555,0,0x0,8
tick,0x7ffdf681f424,4244556,0,0x0,8
tick,0x7ffdf681f424,4246556,0,0x0,8
tick,0x7ffdf681f424,4248554,0,0x0,8
tick,0x7ffdf681f424,4250429,0,0x0,8
tick,0x7ffdf681f424,4252486,0,0x0,8
tick,0x7ffdf681f424,4254557,0,0x0,8
tick,0x7ffdf681f424,4256549,0,0x0,8
tick,0x7ffdf681f424,4258520,0,0x0,8
tick,0x7ffdf681f424,4260527,0,0x0,8
tick,0x7ffdf681f424,4262504,0,0x0,8
tick,0x7ffdf681f424,4264496,0,0x0,8
tick,0x7ffdf681f424,4266400,0,0x0,8
tick,0x7ffdf681f424,4268496,0,0x0,8
tick,0x7ffdf681f424,4270478,0,0x0,8
tick,0x7ffdf681f424,4272371,0,0x0,8
tick,0x7ffdf681f424,4274435,0,0x0,8
tick,0x7ffdf681f424,4276482,0,0x0,8
tick,0x7ffdf681f424,4278468,0,0x0,8
tick,0x7ffdf681f424,4280468,0,0x0,8
tick,0x7ffdf681f424,4282457,0,0x0,8
tick,0x7ffdf681f424,4284458,0,0x0,8
tick,0x7ffdf681f424,4286449,0,0x0,8
tick,0x7ffdf681f424,4288436,0,0x0,8
tick,0x7ffdf681f424,4290421,0,0x0,8
tick,0x7ffdf681f424,4292350,0,0x0,8
tick,0x7ffdf681f424,4294424,0,0x0,8
tick,0x7ffdf681f424,4296400,0,0x0,8
tick,0x7ffdf681f424,4298422,0,0x0,8
tick,0x7ffdf681f424,4300418,0,0x0,8
tick,0x7ffdf681f424,4302399,0,0x0,8
tick,0x7ffdf681f424,4304401,0,0x0,8
tick,0x7ffdf681f424,4306387,0,0x0,8
tick,0x7ffdf681f424,4308278,0,0x0,8
tick,0x7ffdf681f424,4310389,0,0x0,8
tick,0x7ffdf681f424,4312380,0,0x0,8
tick,0x7ffdf681f424,4314371,0,0x0,8
tick,0x7ffdf681f424,4316262,0,0x0,8
tick,0x7ffdf681f424,4318403,0,0x0,8
tick,0x7ffdf681f424,4320361,0,0x0,8
tick,0x7ffdf681f424,4322345,0,0x0,8
tick,0x7ffdf681f424,4324357,0,0x0,8
tick,0x7ffdf681f424,4326339,0,0x0,8
tick,0x7ffdf681f424,4328332,0,0x0,8
tick,0x7ffdf681f424,4330340,0,0x0,8
tick,0x7ffdf681f424,4332263,0,0x0,8
tick,0x7ffdf681f424,4334324,0,0x0,8
tick,0x7ffdf681f424,4336314,0,0x0,8
tick,0x7ffdf681f424,4338306,0,0x0,8
tick,0x7ffdf681f424,4340279,0,0x0,8
tick,0x7ffdf681f424,4342218,0,0x0,8
tick,0x7ffdf681f424,4344295,0,0x0,8
tick,0x7ffdf681f424,4346290,0,0x0,8
tick,0x7ffdf681f424,4348292,0,0x0,8
tick,0x7ffdf681f424,4350267,0,0x0,8
tick,0x7ffdf681f424,4352269,0,0x0,8
tick,0x7ffdf681f424,4354267,0,0x0,8
tick,0x7ffdf681f424,4356265,0,0x0,8
tick,0x7ffdf681f424,4358295,0,0x0,8
tick,0x7ffdf681f424,4360098,0,0x0,8
tick,0x7ffdf681f424,4362092,0,0x0,8
tick,0x7ffdf681f424,4364210,0,0x0,8
tick,0x7ffdf681f424,4366125,0,0x0,8
tick,0x7ffdf681f424,4368226,0,0x0,8
tick,0x7ffdf681f424,4370221,0,0x0,8
tick,0x7ffdf681f424,4372303,0,0x0,8
tick,0x7ffdf681f424,4374206,0,0x0,8
tick,0x7ffdf681f424,4376205,0,0x0,8
tick,0x7ffdf681f424,4378206,0,0x0,8
tick,0x7ffdf681f424,4380201,0,0x0,8
tick,0x7ffdf681f424,4382227,0,0x0,8
tick,0x7ffdf681f424,4384132,0,0x0,8
tick,0x7ffdf681f424,4386191,0,0x0,8
tick,0x7ffdf681f424,4388168,0,0x0,8
tick,0x7ffdf681f424,4390165,0,0x0,8
tick,0x7ffdf681f424,4392160,0,0x0,8
tick,0x7ffdf681f424,4394151,0,0x0,8
tick,0x7ffdf681f424,4396147,0,0x0,8
tick,0x7ffdf681f424,4398144,0,0x0,8
tick,0x7ffdf681f424,4400023,0,0x0,8
tick,0x7ffdf681f424,4402124,0,0x0,8
tick,0x7ffdf681f424,4404124,0,0x0,8
tick,0x7ffdf681f424,4406138,0,0x0,8
tick,0x7ffdf681f424,4408025,0,0x0,8
tick,0x7ffdf681f424,4410122,0,0x0,8
tick,0x7ffdf681f424,4412094,0,0x0,8
tick,0x7ffdf681f424,4414094,0,0x0,8
tick,0x7ffdf681f424,4416067,0,0x0,8
tick,0x7ffdf681f424,4418101,0,0x0,8
tick,0x7ffdf681f424,4420088,0,0x0,8
tick,0x7ffdf681f424,4422084,0,0x0,8
tick,0x7ffdf681f424,4424091,0,0x0,8
tick,0x7ffdf681f424,4426066,0,0x0,8
tick,0x7ffdf681f424,4428068,0,0x0,8
tick,0x7ffdf681f424,4430079,0,0x0,8
tick,0x7ffdf681f424,4431990,0,0x0,8
tick,0x7ffdf681f424,4434039,0,0x0,8
tick,0x7ffdf681f424,4436045,0,0x0,8
tick,0x7ffdf681f424,4438040,0,0x0,8
tick,0x7ffdf681f424,4440030,0,0x0,8
tick,0x7ffdf681f424,4442024,0,0x0,8
tick,0x7ffdf681f424,4444026,0,0x0,8
tick,0x7ffdf681f424,4446004,0,0x0,8
tick,0x7ffdf681f424,4448006,0,0x0,8
tick,0x7ffdf681f424,4450019,0,0x0,8
tick,0x7ffdf681f424,4451964,0,0x0,8
tick,0x7ffdf681f424,4454009,0,0x0,8
tick,0x7ffdf681f424,4455983,0,0x0,8
tick,0x7ffdf681f424,4457891,0,0x0,8
tick,0x7ffdf681f424,4459952,0,0x0,8
tick,0x7ffdf681f424,4461943,0,0x0,8
tick,0x7ffdf681f424,4463969,0,0x0,8
tick,0x7ffdf681f424,4465971,0,0x0,8
tick,0x7ffdf681f424,4467956,0,0x0,8
tick,0x7ffdf681f424,4469949,0,0x0,8
tick,0x7ffdf681f424,4471943,0,0x0,8
tick,0x7ffdf681f424,4473962,0,0x0,8
tick,0x7ffdf681f424,4475929,0,0x0,8
tick,0x7ffdf681f424,4477925,0,0x0,8
tick,0x7ffdf681f424,4479922,0,0x0,8
tick,0x7ffdf681f424,4481921,0,0x0,8
tick,0x7ffdf681f424,4483801,0,0x0,8
tick,0x7ffdf681f424,4485907,0,0x0,8
tick,0x7ffdf681f424,4487902,0,0x0,8
tick,0x7ffdf681f424,4489900,0,0x0,8
tick,0x7ffdf681f424,4491811,0,0x0,8
tick,0x7ffdf681f424,4493968,0,0x0,8
tick,0x7ffdf681f424,4495899,0,0x0,8
tick,0x7ffdf681f424,4497881,0,0x0,8
tick,0x7ffdf681f424,4499773,0,0x0,8
tick,0x7ffdf681f424,4501874,0,0x0,8
tick,0x7ffdf681f424,4503868,0,0x0,8
tick,0x7ffdf681f424,4505755,0,0x0,8
tick,0x7ffdf681f424,4507709,0,0x0,8
tick,0x7ffdf681f424,4509844,0,0x0,8
tick,0x7ffdf681f424,4511840,0,0x0,8
tick,0x7ffdf681f424,4513838,0,0x0,8
tick,0x7ffdf681f424,4515914,0,0x0,8
tick,0x7ffdf681f424,4517847,0,0x0,8
tick,0x7ffdf681f424,4519820,0,0x0,8
tick,0x7ffdf681f424,4521729,0,0x0,8
tick,0x7ffdf681f424,4523805,0,0x0,8
tick,0x7ffdf681f424,4525805,0,0x0,8
tick,0x7ffdf681f424,4527804,0,0x0,8
tick,0x7ffdf681f424,4529795,0,0x0,8
tick,0x7ffdf681f424,4531794,0,0x0,8
tick,0x7ffdf681f424,4533780,0,0x0,8
tick,0x7ffdf681f424,4535795,0,0x0,8
tick,0x7ffdf681f424,4537842,0,0x0,8
tick,0x7ffdf681f424,4539789,0,0x0,8
tick,0x7ffdf681f424,4541656,0,0x0,8
tick,0x7ffdf681f424,4543754,0,0x0,8
tick,0x7ffdf681f424,4545752,0,0x0,8
tick,0x7ffdf681f424,4547683,0,0x0,8
tick,0x7ffdf681f424,4549622,0,0x0,8
tick,0x7ffdf681f424,4551319,0,0x0,8
tick,0x7ffdf681f424,4553308,0,0x0,8
tick,0x7ffdf681f424,4555310,0,0x0,8
tick,0x7ffdf681f424,4557290,0,0x0,8
tick,0x7ffdf681f424,4559269,0,0x0,8
tick,0x7ffdf681f424,4561174,0,0x0,8
tick,0x7ffdf681f424,4563270,0,0x0,8
tick,0x7ffdf681f424,4565270,0,0x0,8
tick,0x7ffdf681f424,4567260,0,0x0,8
tick,0x7ffdf681f424,4569255,0,0x0,8
tick,0x7ffdf681f424,4571180,0,0x0,8
tick,0x7ffdf681f424,4573186,0,0x0,8
tick,0x7ffdf681f424,4575235,0,0x0,8
tick,0x7ffdf681f424,4577236,0,0x0,8
tick,0x7ffdf681f424,4579261,0,0x0,8
tick,0x7ffdf681f424,4581198,0,0x0,8
tick,0x7ffdf681f424,4583116,0,0x0,8
tick,0x7ffdf681f424,4585213,0,0x0,8
tick,0x7ffdf681f424,4587207,0,0x0,8
tick,0x7ffdf681f424,4589198,0,0x0,8
tick,0x7ffdf681f424,4591104,0,0x0,8
tick,0x7ffdf681f424,4593188,0,0x0,8
tick,0x7ffdf681f424,4595199,0,0x0,8
tick,0x7ffdf681f424,4597191,0,0x0,8
tick,0x7ffdf681f424,4599172,0,0x0,8
tick,0x7ffdf681f424,4601172,0,0x0,8
tick,0x7ffdf681f424,4603192,0,0x0,8
tick,0x7ffdf681f424,4605171,0,0x0,8
tick,0x7ffdf681f424,4607166,0,0x0,8
tick,0x7ffdf681f424,4609181,0,0x0,8
tick,0x7ffdf681f424,4611056,0,0x0,8
tick,0x7ffdf681f424,4613039,0,0x0,8
tick,0x7ffdf681f424,4615131,0,0x0,8
tick,0x7ffdf681f424,4617139,0,0x0,8
tick,0x7ffdf681f424,4619173,0,0x0,8
tick,0x7ffdf681f424,4621123,0,0x0,8
tick,0x7ffdf681f424,4623107,0,0x0,8
tick,0x7ffdf681f424,4625085,0,0x0,8
tick,0x7ffdf681f424,4627105,0,0x0,8
tick,0x7ffdf681f424,4629100,0,0x0,8
tick,0x7ffdf681f424,4631144,0,0x0,8
tick,0x7ffdf681f424,4632981,0,0x0,8
tick,0x7ffdf681f424,4635072,0,0x0,8
tick,0x7ffdf681f424,4637083,0,0x0,8
tick,0x7ffdf681f424,4639076,0,0x0,8
tick,0x7ffdf681f424,4641075,0,0x0,8
tick,0x7ffdf681f424,4643051,0,0x0,8
tick,0x7ffdf681f424,4645050,0,0x0,8
tick,0x7ffdf681f424,4647137,0,0x0,8
tick,0x7ffdf681f424,4649049,0,0x0,8
tick,0x7ffdf681f424,4650716,0,0x0,8
tick,0x7ffdf681f424,4652698,0,0x0,8
tick,0x7ffdf681f424,4654708,0,0x0,8
tick,0x7ffdf681f424,4656683,0,0x0,8
tick,0x7ffdf681f424,4658735,0,0x0,8
tick,0x7ffdf681f424,4660688,0,0x0,8
tick,0x7ffdf681f424,4662699,0,0x0,8
tick,0x7ffdf681f424,4664673,0,0x0,8
tick,0x7ffdf681f424,4666553,0,0x0,8
tick,0x7ffdf681f424,4668666,0,0x0,8
tick,0x7ffdf681f424,4670659,0,0x0,8
tick,0x7ffdf681f424,4672649,0,0x0,8
tick,0x7ffdf681f424,4674540,0,0x0,8
tick,0x7ffdf681f424,4676629,0,0x0,8
tick,0x7ffdf681f424,4678632,0,0x0,8
tick,0x7ffdf681f424,4680632,0,0x0,8
tick,0x7ffdf681f424,4682513,0,0x0,8
tick,0x7ffdf681f424,4684612,0,0x0,8
tick,0x7ffdf681f424,4686610,0,0x0,8
tick,0x7ffdf681f424,4688589,0,0x0,8
tick,0x7ffdf681f424,4690561,0,0x0,8
tick,0x7ffdf681f424,4692493,0,0x0,8
tick,0x7ffdf681f424,4694596,0,0x0,8
tick,0x7ffdf681f424,4696587,0,0x0,8
tick,0x7ffdf681f424,4698589,0,0x0,8
tick,0x7ffdf681f424,4700506,0,0x0,8
tick,0x7ffdf681f424,4702567,0,0x0,8
tick,0x7ffdf681f424,4704598,0,0x0,8
tick,0x7ffdf681f424,4706601,0,0x0,8
tick,0x7ffdf681f424,4708536,0,0x0,8
tick,0x7ffdf681f424,4710545,0,0x0,8
tick,0x7ffdf681f424,4712588,0,0x0,8
tick,0x7ffdf681f424,4714558,0,0x0,8
tick,0x7ffdf681f424,4716456,0,0x0,8
tick,0x7ffdf681f424,4718528,0,0x0,8
tick,0x7ffdf681f424,4720528,0,0x0,8
tick,0x7ffdf681f424,4722433,0,0x0,8
tick,0x7ffdf681f424,4724487,0,0x0,8
tick,0x7ffdf681f424,4726506,0,0x0,8
tick,0x7ffdf681f424,4728519,0,0x0,8
tick,0x7ffdf681f424,4730469,0,0x0,8
tick,0x7ffdf681f424,4732515,0,0x0,8
tick,0x7ffdf681f424,4734541,0,0x0,8
tick,0x7ffdf681f424,4736487,0,0x0,8
tick,0x7ffdf681f424,4738473,0,0x0,8
tick,0x7ffdf681f424,4740477,0,0x0,8
tick,0x7ffdf681f424,4742340,0,0x0,8
tick,0x7ffdf681f424,4744453,0,0x0,8
tick,0x7ffdf681f424,4746455,0,0x0,8
tick,0x7ffdf681f424,4748446,0,0x0,8
tick,0x7ffdf681f424,4750441,0,0x0,8
tick,0x7ffdf681f424,4752436,0,0x0,8
tick,0x7ffdf681f424,4754428,0,0x0,8
tick,0x7ffdf681f424,4756486,0,0x0,8
tick,0x7ffdf681f424,4758429,0,0x0,8
tick,0x7ffdf681f424,4760429,0,0x0,8
tick,0x7ffdf681f424,4762305,0,0x0,8
tick,0x7ffdf681f424,4764409,0,0x0,8
tick,0x7ffdf681f424,4766296,0,0x0,8
tick,0x7ffdf681f424,4768331,0,0x0,8
tick,0x7ffdf681f424,4770387,0,0x0,8
tick,0x7ffdf681f424,4772306,0,0x0,8
tick,0x7ffdf681f424,4774395,0,0x0,8
tick,0x7ffdf681f424,4776376,0,0x0,8
tick,0x7ffdf681f424,4778412,0,0x0,8
tick,0x7ffdf681f424,4780391,0,0x0,8
tick,0x7ffdf681f424,4782354,0,0x0,8
tick,0x7ffdf681f424,4784363,0,0x0,8
tick,0x7ffdf681f424,4786343,0,0x0,8
tick,0x7ffdf681f424,4788344,0,0x0,8
tick,0x7ffdf681f424,4790227,0,0x0,8
tick,0x7ffdf681f424,4792321,0,0x0,8
tick,0x7ffdf681f424,4794323,0,0x0,8
tick,0x7ffdf681f424,4796320,0,0x0,8
tick,0x7ffdf681f424,4798309,0,0x0,8
tick,0x7ffdf681f424,4800326,0,0x0,8
tick,0x7ffdf681f424,4802308,0,0x0,8
tick,0x7ffdf681f424,4804295,0,0x0,8
tick,0x7ffdf681f424,4806282,0,0x0,8
tick,0x7ffdf681f424,4808281,0,0x0,8
tick,0x7ffdf681f424,4810301,0,0x0,8
tick,0x7ffdf681f424,4812289,0,0x0,8
tick,0x7ffdf681f424,4814260,0,0x0,8
tick,0x7ffdf681f424,4816160,0,0x0,8
tick,0x7ffdf681f424,4818265,0,0x0,8
tick,0x7ffdf681f424,4820253,0,0x0,8
tick,0x7ffdf681f424,4822254,0,0x0,8
tick,0x7ffdf681f424,4824259,0,0x0,8
tick,0x7ffdf681f424,4826237,0,0x0,8
tick,0x7ffdf681f424,4828224,0,0x0,8
tick,0x7ffdf681f424,4830200,0,0x0,8
tick,0x7ffdf681f424,4832223,0,0x0,8
tick,0x7ffdf681f424,4834208,0,0x0,8
tick,0x7ffdf681f424,4836207,0,0x0,8
tick,0x7ffdf681f424,4838211,0,0x0,8
tick,0x7ffdf681f424,4840189,0,0x0,8
tick,0x7ffdf681f424,4842191,0,0x0,8
tick,0x7ffdf681f424,4844198,0,0x0,8
tick,0x7ffdf681f424,4846184,0,0x0,8
tick,0x7ffdf681f424,4848184,0,0x0,8
tick,0x7ffdf681f424,4850165,0,0x0,8
tick,0x7ffdf681f424,4852080,0,0x0,8
tick,0x7ffdf681f424,4854149,0,0x0,8
tick,0x7ffdf681f424,4856162,0,0x0,8
tick,0x7ffdf681f424,4858050,0,0x0,8
tick,0x7ffdf681f424,4860146,0,0x0,8
tick,0x7ffdf681f424,4862133,0,0x0,8
tick,0x7ffdf681f424,4864131,0,0x0,8
tick,0x7ffdf681f424,4866114,0,0x0,8
tick,0x7ffdf681f424,4868132,0,0x0,8
tick,0x7ffdf681f424,4870117,0,0x0,8
tick,0x7ffdf681f424,4872089,0,0x0,8
tick,0x7ffdf681f424,4874105,0,0x0,8
tick,0x7ffdf681f424,4876102,0,0x0,8
tick,0x7ffdf681f424,4878083,0,0x0,8
tick,0x7ffdf681f424,4880085,0,0x0,8
tick,0x7ffdf681f424,4882086,0,0x0,8
tick,0x7ffdf681f424,4884071,0,0x0,8
tick,0x7ffdf681f424,4886070,0,0x0,8
tick,0x7ffdf681f424,4888084,0,0x0,8
tick,0x7ffdf681f424,4890073,0,0x0,8
tick,0x7ffdf681f424,4891997,0,0x0,8
tick,0x7ffdf681f424,4894052,0,0x0,8
tick,0x7ffdf681f424,4896045,0,0x0,8
tick,0x7ffdf681f424,4898045,0,0x0,8
tick,0x7ffdf681f424,4900051,0,0x0,8
tick,0x7ffdf681f424,4901929,0,0x0,8
tick,0x7ffdf681f424,4904042,0,0x0,8
tick,0x7ffdf681f424,4906031,0,0x0,8
tick,0x7ffdf681f424,4907914,0,0x0,8
tick,0x7ffdf681f424,4910094,0,0x0,8
tick,0x7ffdf681f424,4911901,0,0x0,8
tick,0x7ffdf681f424,4913929,0,0x0,8
tick,0x7ffdf681f424,4915997,0,0x0,8
tick,0x7ffdf681f424,4917995,0,0x0,8
tick,0x7ffdf681f424,4920009,0,0x0,8
tick,0x7ffdf681f424,4921933,0,0x0,8
tick,0x7ffdf681f424,4924009,0,0x0,8
tick,0x7ffdf681f424,4925969,0,0x0,8
tick,0x7ffdf681f424,4927967,0,0x0,8
tick,0x7ffdf681f424,4929962,0,0x0,8
tick,0x7ffdf681f424,4931905,0,0x0,8
tick,0x7ffdf681f424,4933964,0,0x0,8
tick,0x7ffdf681f424,4935943,0,0x0,8
tick,0x7ffdf681f424,4937937,0,0x0,8
tick,0x7ffdf681f424,4939945,0,0x0,8
tick,0x7ffdf681f424,4941821,0,0x0,8
tick,0x7ffdf681f424,4943925,0,0x0,8
tick,0x7ffdf681f424,4945909,0,0x0,8
tick,0x7ffdf681f424,4947920,0,0x0,8
tick,0x7ffdf681f424,4949804,0,0x0,8
tick,0x7ffdf681f424,4951543,0,0x0,8
tick,0x7ffdf681f424,4953600,0,0x0,8
tick,0x7ffdf681f424,4955579,0,0x0,8
tick,0x7ffdf681f424,4957570,0,0x0,8
tick,0x7ffdf681f424,4959439,0,0x0,8
tick,0x7ffdf681f424,4961450,0,0x0,8
tick,0x7ffdf681f424,4963543,0,0x0,8
tick,0x7ffdf681f424,4965529,0,0x0,8
tick,0x7ffdf681f424,4967532,0,0x0,8
tick,0x7ffdf681f424,4969538,0,0x0,8
tick,0x7ffdf681f424,4971433,0,0x0,8
tick,0x7ffdf681f424,4973515,0,0x0,8
tick,0x7ffdf681f424,4975579,0,0x0,8
tick,0x7ffdf681f424,4977510,0,0x0,8
tick,0x7ffdf681f424,4979540,0,0x0,8
tick,0x7ffdf681f424,4981407,0,0x0,8
tick,0x7ffdf681f424,4983418,0,0x0,8
tick,0x7ffdf681f424,4985486,0,0x0,8
tick,0x7ffdf681f424,4987480,0,0x0,8
tick,0x7ffdf681f424,4989378,0,0x0,8
tick,0x7ffdf681f424,4991371,0,0x0,8
tick,0x7ffdf681f424,4993354,0,0x0,8
tick,0x7ffdf681f424,4995449,0,0x0,8
tick,0x7ffdf681f424,4997518,0,0x0,8
tick,0x7ffdf681f424,4999454,0,0x0,8
tick,0x7ffdf681f424,5001445,0,0x0,8
tick,0x7ffdf681f424,5003430,0,0x0,8
tick,0x7ffdf681f424,5005430,0,0x0,8
tick,0x7ffdf681f424,5007426,0,0x0,8
tick,0x7ffdf681f424,5009445,0,0x0,8
tick,0x7ffdf681f424,5011312,0,0x0,8
tick,0x7ffdf681f424,5013316,0,0x0,8
tick,0x7ffdf681f424,5015410,0,0x0,8
tick,0x7ffdf681f424,5017400,0,0x0,8
tick,0x7ffdf681f424,5019433,0,0x0,8
tick,0x7ffdf681f424,5021309,0,0x0,8
tick,0x7ffdf681f424,5023377,0,0x0,8
tick,0x7ffdf681f424,5025390,0,0x0,8
tick,0x7ffdf681f424,5027368,0,0x0,8
tick,0x7ffdf681f424,5029261,0,0x0,8
tick,0x7ffdf681f424,5031276,0,0x0,8
tick,0x7ffdf681f424,5033358,0,0x0,8
tick,0x7ffdf681f424,5035362,0,0x0,8
tick,0x7ffdf681f424,5037346,0,0x0,8
tick,0x7ffdf681f424,5039351,0,0x0,8
tick,0x7ffdf681f424,5041250,0,0x0,8
tick,0x7ffdf681f424,5043344,0,0x0,8
tick,0x7ffdf681f424,5045323,0,0x0,8
tick,0x7ffdf681f424,5047312,0,0x0,8
tick,0x7ffdf681f424,5049321,0,0x0,8
tick,0x7ffdf681f424,5051197,0,0x0,8
tick,0x7ffdf681f424,5053200,0,0x0,8
tick,0x7ffdf681f424,5055304,0,0x0,8
tick,0x7ffdf681f424,5057290,0,0x0,8
tick,0x7ffdf681f424,5059385,0,0x0,8
tick,0x7ffdf681f424,5061289,0,0x0,8
tick,0x7ffdf681f424,5063318,0,0x0,8
tick,0x7ffdf681f424,5065270,0,0x0,8
tick,0x7ffdf681f424,5067251,0,0x0,8
tick,0x7ffdf681f424,5069261,0,0x0,8
tick,0x7ffdf681f424,5071288,0,0x0,8
tick,0x7ffdf681f424,5073253,0,0x0,8
tick,0x7ffdf681f424,5075243,0,0x0,8
tick,0x7ffdf681f424,5077240,0,0x0,8
tick,0x7ffdf681f424,5079239,0,0x0,8
tick,0x7ffdf681f424,5081268,0,0x0,8
tick,0x7ffdf681f424,5083123,0,0x0,8
tick,0x7ffdf681f424,5085291,0,0x0,8
tick,0x7ffdf681f424,5087223,0,0x0,8
tick,0x7ffdf681f424,5089227,0,0x0,8
tick,0x7ffdf681f424,5091140,0,0x0,8
tick,0x7ffdf681f424,5093094,0,0x0,8
tick,0x7ffdf681f424,5095196,0,0x0,8
tick,0x7ffdf681f424,5097188,0,0x0,8
tick,0x7ffdf681f424,5099223,0,0x0,8
tick,0x7ffdf681f424,5101162,0,0x0,8
tick,0x7ffdf681f424,5103169,0,0x0,8
tick,0x7ffdf681f424,5105172,0,0x0,8
tick,0x7ffdf681f424,5107227,0,0x0,8
tick,0x7ffdf681f424,5109052,0,0x0,8
tick,0x7ffdf681f424,5111050,0,0x0,8
tick,0x7ffdf681f424,5113135,0,0x0,8
tick,0x7ffdf681f424,5115137,0,0x0,8
tick,0x7ffdf681f424,5117012,0,0x0,8
tick,0x7ffdf681f424,5119128,0,0x0,8
tick,0x7ffdf681f424,5120976,0,0x0,8
tick,0x7ffdf681f424,5123011,0,0x0,8
tick,0x7ffdf681f424,5125009,0,0x0,8
tick,0x7ffdf681f424,5127001,0,0x0,8
tick,0x7ffdf681f424,5129069,0,0x0,8
tick,0x7ffdf681f424,5131005,0,0x0,8
tick,0x7ffdf681f424,5132964,0,0x0,8
tick,0x7ffdf681f424,5134990,0,0x0,8
tick,0x7ffdf681f424,5136988,0,0x0,8
tick,0x7ffdf681f424,5139118,0,0x0,8
tick,0x7ffdf681f424,5141005,0,0x0,8
tick,0x7ffdf681f424,5142990,0,0x0,8
tick,0x7ffdf681f424,5144994,0,0x0,8
tick,0x7ffdf681f424,5146974,0,0x0,8
tick,0x7ffdf681f424,5148980,0,0x0,8
tick,0x7ffdf681f424,5150951,0,0x0,8
tick,0x7ffdf681f424,5153005,0,0x0,8
tick,0x7ffdf681f424,5154986,0,0x0,8
tick,0x7ffdf681f424,5156988,0,0x0,8
tick,0x7ffdf681f424,5158984,0,0x0,8
tick,0x7ffdf681f424,5160970,0,0x0,8
tick,0x7ffdf681f424,5162988,0,0x0,8
tick,0x7ffdf681f424,5164992,0,0x0,8
tick,0x7ffdf681f424,5166997,0,0x0,8
tick,0x7ffdf681f424,5169024,0,0x0,8
tick,0x7ffdf681f424,5170876,0,0x0,8
tick,0x7ffdf681f424,5172863,0,0x0,8
tick,0x7ffdf681f424,5174961,0,0x0,8
tick,0x7ffdf681f424,5176974,0,0x0,8
tick,0x7ffdf681f424,5179125,0,0x0,8
tick,0x7ffdf681f424,5180952,0,0x0,8
tick,0x7ffdf681f424,5182871,0,0x0,8
tick,0x7ffdf681f424,5184961,0,0x0,8
tick,0x7ffdf681f424,5186942,0,0x0,8
tick,0x7ffdf681f424,5188955,0,0x0,8
tick,0x7ffdf681f424,5190925,0,0x0,8
tick,0x7ffdf681f424,5192918,0,0x0,8
tick,0x7ffdf681f424,5194935,0,0x0,8
tick,0x7ffdf681f424,5196924,0,0x0,8
tick,0x7ffdf681f424,5198907,0,0x0,8
tick,0x7ffdf681f424,5200782,0,0x0,8
tick,0x7ffdf681f424,5202898,0,0x0,8
tick,0x7ffdf681f424,5204865,0,0x0,8
tick,0x7ffdf681f424,5206880,0,0x0,8
tick,0x7ffdf681f424,5208948,0,0x0,8
tick,0x7ffdf681f424,5210945,0,0x0,8
tick,0x7ffdf681f424,5212784,0,0x0,8
tick,0x7ffdf681f424,5213936,0,0x0,8
tick,0x7ffdf681f424,5215937,0,0x0,8
tick,0x7ffdf681f424,5218005,0,0x0,8
tick,0x7ffdf681f424,5220143,0,0x0,8
tick,0x7ffdf681f424,5222136,0,0x0,8
tick,0x7ffdf681f424,5224253,0,0x0,8
tick,0x7ffdf681f424,5225354,0,0x0,8
tick,0x7ffdf681f424,5227238,0,0x0,8
tick,0x7ffdf681f424,5229235,0,0x0,8
tick,0x7ffdf681f424,5230341,0,0x0,8
tick,0x7ffdf681f424,5232354,0,0x0,8
tick,0x7ffdf681f424,5234429,0,0x0,8
tick,0x7ffdf681f424,5236524,0,0x0,8
tick,0x7ffdf681f424,5238684,0,0x0,8
tick,0x7ffdf681f424,5239842,0,0x0,8
tick,0x7ffdf681f424,5241873,0,0x0,8
tick,0x7ffdf681f424,5242953,0,0x0,8
tick,0x7ffdf681f424,5244053,0,0x0,8
tick,0x7ffdf681f424,5246012,0,0x0,8
tick,0x7ffdf681f424,5247156,0,0x0,8
tick,0x7ffdf681f424,5249036,0,0x0,8
tick,0x7ffdf681f424,5251116,0,0x0,8
tick,0x7ffdf681f424,5253207,0,0x0,8
tick,0x7ffdf681f424,5254387,0,0x0,8
tick,0x7ffdf681f424,5255562,0,0x0,8
tick,0x7ffdf681f424,5256673,0,0x0,8
tick,0x7ffdf681f424,5258734,0,0x0,8
tick,0x7ffdf681f424,5260687,0,0x0,8
tick,0x7ffdf681f424,5261857,0,0x0,8
tick,0x7ffdf681f424,5263864,0,0x0,8
tick,0x7ffdf681f424,5265846,0,0x0,8
tick,0x7ffdf681f424,5267854,0,0x0,8
tick,0x7ffdf681f424,5269882,0,0x0,8
tick,0x7ffdf681f424,5271979,0,0x0,8
tick,0x7ffdf681f424,5273954,0,0x0,8
tick,0x7ffdf681f424,5275917,0,0x0,8
tick,0x7ffdf681f424,5277920,0,0x0,8
tick,0x7ffdf681f424,5279948,0,0x0,8
tick,0x7ffdf681f424,5281949,0,0x0,8
tick,0x7ffdf681f424,5283928,0,0x0,8
tick,0x7ffdf681f424,5285914,0,0x0,8
tick,0x7ffdf681f424,5287907,0,0x0,8
tick,0x7ffdf681f424,5289872,0,0x0,8
tick,0x7ffdf681f424,5291819,0,0x0,8
tick,0x7ffdf681f424,5293947,0,0x0,8
tick,0x7ffdf681f424,5295917,0,0x0,8
tick,0x7ffdf681f424,5297912,0,0x0,8
tick,0x7ffdf681f424,5299782,0,0x0,8
tick,0x7ffdf681f424,5301914,0,0x0,8
tick,0x7ffdf681f424,5303900,0,0x0,8
tick,0x7ffdf681f424,5305896,0,0x0,8
tick,0x7ffdf681f424,5307852,0,0x0,8
tick,0x7ffdf681f424,5309897,0,0x0,8
tick,0x7ffdf681f424,5311888,0,0x0,8
tick,0x7ffdf681f424,5313871,0,0x0,8
tick,0x7ffdf681f424,5315864,0,0x0,8
tick,0x7ffdf681f424,5317874,0,0x0,8
tick,0x7ffdf681f424,5319852,0,0x0,8
tick,0x7ffdf681f424,5321796,0,0x0,8
tick,0x7ffdf681f424,5323825,0,0x0,8
tick,0x7ffdf681f424,5325798,0,0x0,8
tick,0x7ffdf681f424,5327839,0,0x0,8
tick,0x7ffdf681f424,5329844,0,0x0,8
tick,0x7ffdf681f424,5331827,0,0x0,8
tick,0x7ffdf681f424,5333815,0,0x0,8
tick,0x7ffdf681f424,5335808,0,0x0,8
tick,0x7ffdf681f424,5337812,0,0x0,8
tick,0x7ffdf681f424,5339802,0,0x0,8
tick,0x7ffdf681f424,5341709,0,0x0,8
tick,0x7ffdf681f424,5343735,0,0x0,8
tick,0x7ffdf681f424,5345773,0,0x0,8
tick,0x7ffdf681f424,5347744,0,0x0,8
tick,0x7ffdf681f424,5349631,0,0x0,8
tick,0x7ffdf681f424,5351670,0,0x0,8
tick,0x7ffdf681f424,5353795,0,0x0,8
tick,0x7ffdf681f424,5355762,0,0x0,8
tick,0x7ffdf681f424,5357753,0,0x0,8
tick,0x7ffdf681f424,5359745,0,0x0,8
tick,0x7ffdf681f424,5361731,0,0x0,8
tick,0x7ffdf681f424,5363736,0,0x0,8
tick,0x7ffdf681f424,5365768,0,0x0,8
tick,0x7ffdf681f424,5367738,0,0x0,8
tick,0x7ffdf681f424,5369721,0,0x0,8
tick,0x7ffdf681f424,5371663,0,0x0,8
tick,0x7ffdf681f424,5373668,0,0x0,8
tick,0x7ffdf681f424,5375722,0,0x0,8
tick,0x7ffdf681f424,5377716,0,0x0,8
tick,0x7ffdf681f424,5379697,0,0x0,8
tick,0x7ffdf681f424,5381690,0,0x0,8
tick,0x7ffdf681f424,5383681,0,0x0,8
tick,0x7ffdf681f424,5385689,0,0x0,8
tick,0x7ffdf681f424,5387710,0,0x0,8
tick,0x7ffdf681f424,5389677,0,0x0,8
tick,0x7ffdf681f424,5391590,0,0x0,8
tick,0x7ffdf681f424,5393670,0,0x0,8
tick,0x7ffdf681f424,5395653,0,0x0,8
tick,0x7ffdf681f424,5397658,0,0x0,8
tick,0x7ffdf681f424,5399557,0,0x0,8
tick,0x7ffdf681f424,5401625,0,0x0,8
tick,0x7ffdf681f424,5403633,0,0x0,8
tick,0x7ffdf681f424,5405525,0,0x0,8
tick,0x7ffdf681f424,5407633,0,0x0,8
tick,0x7ffdf681f424,5409659,0,0x0,8
tick,0x7ffdf681f424,5411551,0,0x0,8
tick,0x7ffdf681f424,5413610,0,0x0,8
tick,0x7ffdf681f424,5415606,0,0x0,8
tick,0x7ffdf681f424,5417596,0,0x0,8
tick,0x7ffdf681f424,5419600,0,0x0,8
tick,0x7ffdf681f424,5421484,0,0x0,8
tick,0x7ffdf681f424,5423575,0,0x0,8
tick,0x7ffdf681f424,5425572,0,0x0,8
tick,0x7ffdf681f424,5427603,0,0x0,8
tick,0x7ffdf681f424,5429566,0,0x0,8
tick,0x7ffdf681f424,5431495,0,0x0,8
tick,0x7ffdf681f424,5433564,0,0x0,8
tick,0x7ffdf681f424,5435547,0,0x0,8
tick,0x7ffdf681f424,5437546,0,0x0,8
tick,0x7ffdf681f424,5439531,0,0x0,8
tick,0x7ffdf681f424,5441426,0,0x0,8
tick,0x7ffdf681f424,5443527,0,0x0,8
tick,0x7ffdf681f424,5445518,0,0x0,8
tick,0x7ffdf681f424,5447509,0,0x0,8
tick,0x7ffdf681f424,5449512,0,0x0,8
tick,0x7ffdf681f424,5451404,0,0x0,8
tick,0x7ffdf681f424,5453495,0,0x0,8
tick,0x7ffdf681f424,5455508,0,0x0,8
tick,0x7ffdf681f424,5457489,0,0x0,8
tick,0x7ffdf681f424,5459380,0,0x0,8
tick,0x7ffdf681f424,5461348,0,0x0,8
tick,0x7ffdf681f424,5463484,0,0x0,8
tick,0x7ffdf681f424,5465480,0,0x0,8
tick,0x7ffdf681f424,5467372,0,0x0,8
tick,0x7ffdf681f424,5469467,0,0x0,8
tick,0x7ffdf681f424,5471469,0,0x0,8
tick,0x7ffdf681f424,5473464,0,0x0,8
tick,0x7ffdf681f424,5475443,0,0x0,8
tick,0x7ffdf681f424,5477462,0,0x0,8
tick,0x7ffdf681f424,5479450,0,0x0,8
tick,0x7ffdf681f424,5481339,0,0x0,8
tick,0x7ffdf681f424,5483435,0,0x0,8
tick,0x7ffdf681f424,5485426,0,0x0,8
tick,0x7ffdf681f424,5487421,0,0x0,8
tick,0x7ffdf681f424,5489415,0,0x0,8
tick,0x7ffdf681f424,5491324,0,0x0,8
tick,0x7ffdf681f424,5493301,0,0x0,8
tick,0x7ffdf681f424,5495410,0,0x0,8
tick,0x7ffdf681f424,5497347,0,0x0,8
tick,0x7ffdf681f424,5499375,0,0x0,8
tick,0x7ffdf681f424,5501283,0,0x0,8
tick,0x7ffdf681f424,5503417,0,0x0,8
tick,0x7ffdf681f424,5505385,0,0x0,8
tick,0x7ffdf681f424,5507375,0,0x0,8
tick,0x7ffdf681f424,5509369,0,0x0,8
tick,0x7ffdf681f424,5511370,0,0x0,8
tick,0x7ffdf681f424,5513363,0,0x0,8
tick,0x7ffdf681f424,5515359,0,0x0,8
tick,0x7ffdf681f424,5517239,0,0x0,8
tick,0x7ffdf681f424,5519382,0,0x0,8
tick,0x7ffdf681f424,5521353,0,0x0,8
tick,0x7ffdf681f424,5523335,0,0x0,8
tick,0x7ffdf681f424,5525337,0,0x0,8
tick,0x7ffdf681f424,5527327,0,0x0,8
tick,0x7ffdf681f424,5529310,0,0x0,8
tick,0x7ffdf681f424,5531277,0,0x0,8
tick,0x7ffdf681f424,5533185,0,0x0,8
tick,0x7ffdf681f424,5535301,0,0x0,8
tick,0x7ffdf681f424,5537299,0,0x0,8
tick,0x7ffdf681f424,5539257,0,0x0,8
tick,0x7ffdf681f424,5541125,0,0x0,8
tick,0x7ffdf681f424,5543286,0,0x0,8
tick,0x7ffdf681f424,5545261,0,0x0,8
tick,0x7ffdf681f424,5547272,0,0x0,8
tick,0x7ffdf681f424,5549265,0,0x0,8
tick,0x7ffdf681f424,5551232,0,0x0,8
tick,0x7ffdf681f424,5553259,0,0x0,8
tick,0x7ffdf681f424,5555252,0,0x0,8
tick,0x7ffdf681f424,5557243,0,0x0,8
tick,0x7ffdf681f424,5559254,0,0x0,8
tick,0x7ffdf681f424,5561121,0,0x0,8
tick,0x7ffdf681f424,5562266,0,0x0,8
tick,0x7ffdf681f424,5563415,0,0x0,8
tick,0x7ffdf681f424,5565411,0,0x0,8
tick,0x7ffdf681f424,5567401,0,0x0,8
tick,0x7ffdf681f424,5569348,0,0x0,8
tick,0x7ffdf681f424,5570483,0,0x0,8
tick,0x7ffdf681f424,5571627,0,0x0,8
tick,0x7ffdf681f424,5573526,0,0x0,8
tick,0x7ffdf681f424,5575621,0,0x0,8
tick,0x7ffdf681f424,5577725,0,0x0,8
tick,0x7ffdf681f424,5579677,0,0x0,8
tick,0x7ffdf681f424,5581695,0,0x0,8
tick,0x7ffdf681f424,5583689,0,0x0,8
tick,0x7ffdf681f424,5585716,0,0x0,8
tick,0x7ffdf681f424,5587705,0,0x0,8
tick,0x7ffdf681f424,5589672,0,0x0,8
tick,0x7ffdf681f424,5591581,0,0x0,8
tick,0x7ffdf681f424,5593688,0,0x0,8
tick,0x7ffdf681f424,5595682,0,0x0,8
tick,0x7ffdf681f424,5597666,0,0x0,8
tick,0x7ffdf681f424,5599598,0,0x0,8
tick,0x7ffdf681f424,5601619,0,0x0,8
tick,0x7ffdf681f424,5603661,0,0x0,8
tick,0x7ffdf681f424,5605642,0,0x0,8
tick,0x7ffdf681f424,5607650,0,0x0,8
tick,0x7ffdf681f424,5609629,0,0x0,8
tick,0x7ffdf681f424,5611584,0,0x0,8
tick,0x7ffdf681f424,5613634,0,0x0,8
tick,0x7ffdf681f424,5615612,0,0x0,8
tick,0x7ffdf681f424,5617616,0,0x0,8
tick,0x7ffdf681f424,5619620,0,0x0,8
tick,0x7ffdf681f424,5621501,0,0x0,8
tick,0x7ffdf681f424,5623594,0,0x0,8
tick,0x7ffdf681f424,5625598,0,0x0,8
tick,0x7ffdf681f424,5627585,0,0x0,8
tick,0x7ffdf681f424,5629587,0,0x0,8
tick,0x7ffdf681f424,5631442,0,0x0,8
tick,0x7ffdf681f424,5633560,0,0x0,8
tick,0x7ffdf681f424,5635567,0,0x0,8
tick,0x7ffdf681f424,5637511,0,0x0,8
tick,0x7ffdf681f424,5639539,0,0x0,8
tick,0x7ffdf681f424,5641443,0,0x0,8
tick,0x7ffdf681f424,5643544,0,0x0,8
tick,0x7ffdf681f424,5645547,0,0x0,8
tick,0x7ffdf681f424,5647536,0,0x0,8
tick,0x7ffdf681f424,5649535,0,0x0,8
tick,0x7ffdf681f424,5651416,0,0x0,8
tick,0x7ffdf681f424,5653402,0,0x0,8
tick,0x7ffdf681f424,5655500,0,0x0,8
tick,0x7ffdf681f424,5657498,0,0x0,8
tick,0x7ffdf681f424,5659446,0,0x0,8
tick,0x7ffdf681f424,5661440,0,0x0,8
tick,0x7ffdf681f424,5663491,0,0x0,8
tick,0x7ffdf681f424,5665483,0,0x0,8
tick,0x7ffdf681f424,5667389,0,0x0,8
tick,0x7ffdf681f424,5669481,0,0x0,8
tick,0x7ffdf681f424,5671430,0,0x0,8
tick,0x7ffdf681f424,5673475,0,0x0,8
tick,0x7ffdf681f424,5675459,0,0x0,8
tick,0x7ffdf681f424,5677469,0,0x0,8
tick,0x7ffdf681f424,5679451,0,0x0,8
tick,0x7ffdf681f424,5681286,0,0x0,8
tick,0x7ffdf681f424,5683461,0,0x0,8
tick,0x7ffdf681f424,5685438,0,0x0,8
tick,0x7ffdf681f424,5687425,0,0x0,8
tick,0x7ffdf681f424,5689433,0,0x0,8
tick,0x7ffdf681f424,5691309,0,0x0,8
tick,0x7ffdf681f424,5693320,0,0x0,8
tick,0x7ffdf681f424,5695429,0,0x0,8
tick,0x7ffdf681f424,5697415,0,0x0,8
tick,0x7ffdf681f424,5699398,0,0x0,8
tick,0x7ffdf681f424,5701281,0,0x0,8
tick,0x7ffdf681f424,5703356,0,0x0,8
tick,0x7ffdf681f424,5705283,0,0x0,8
tick,0x7ffdf681f424,5707377,0,0x0,8
tick,0x7ffdf681f424,5709287,0,0x0,8
tick,0x7ffdf681f424,5711213,0,0x0,8
tick,0x7ffdf681f424,5713353,0,0x0,8
tick,0x7ffdf681f424,5715256,0,0x0,8
tick,0x7ffdf681f424,5717345,0,0x0,8
tick,0x7ffdf681f424,5719339,0,0x0,8
tick,0x7ffdf681f424,5721334,0,0x0,8
tick,0x7ffdf681f424,5723285,0,0x0,8
tick,0x7ffdf681f424,5725379,0,0x0,8
tick,0x7ffdf681f424,5727218,0,0x0,8
tick,0x7ffdf681f424,5729262,0,0x0,8
tick,0x7ffdf681f424,5731206,0,0x0,8
tick,0x7ffdf681f424,5733224,0,0x0,8
tick,0x7ffdf681f424,5735257,0,0x0,8
tick,0x7ffdf681f424,5737298,0,0x0,8
tick,0x7ffdf681f424,5739254,0,0x0,8
tick,0x7ffdf681f424,5741140,0,0x0,8
tick,0x7ffdf681f424,5743286,0,0x0,8
tick,0x7ffdf681f424,5745267,0,0x0,8
tick,0x7ffdf681f424,5747223,0,0x0,8
tick,0x7ffdf681f424,5749270,0,0x0,8
tick,0x7ffdf681f424,5751270,0,0x0,8
tick,0x7ffdf681f424,5753253,0,0x0,8
tick,0x7ffdf681f424,5755243,0,0x0,8
tick,0x7ffdf681f424,5757240,0,0x0,8
tick,0x7ffdf681f424,5759236,0,0x0,8
tick,0x7ffdf681f424,5761242,0,0x0,8
tick,0x7ffdf681f424,5763231,0,0x0,8
tick,0x7ffdf681f424,5765234,0,0x0,8
tick,0x7ffdf681f424,5767220,0,0x0,8
tick,0x7ffdf681f424,5769245,0,0x0,8
tick,0x7ffdf681f424,5771104,0,0x0,8
tick,0x7ffdf681f424,5773089,0,0x0,8
tick,0x7ffdf681f424,5775101,0,0x0,8
tick,0x7ffdf681f424,5777193,0,0x0,8
tick,0x7ffdf681f424,5779207,0,0x0,8
tick,0x7ffdf681f424,5781186,0,0x0,8
tick,0x7ffdf681f424,5783022,0,0x0,8
tick,0x7ffdf681f424,5785162,0,0x0,8
tick,0x7ffdf681f424,5787160,0,0x0,8
tick,0x7ffdf681f424,5789157,0,0x0,8
tick,0x7ffdf681f424,5791094,0,0x0,8
tick,0x7ffdf681f424,5793154,0,0x0,8
tick,0x7ffdf681f424,5795143,0,0x0,8
tick,0x7ffdf681f424,5797145,0,0x0,8
tick,0x7ffdf681f424,5799142,0,0x0,8
tick,0x7ffdf681f424,5801131,0,0x0,8
tick,0x7ffdf681f424,5803115,0,0x0,8
tick,0x7ffdf681f424,5805124,0,0x0,8
tick,0x7ffdf681f424,5807113,0,0x0,8
tick,0x7ffdf681f424,5809127,0,0x0,8
tick,0x7ffdf681f424,5810990,0,0x0,8
tick,0x7ffdf681f424,5812943,0,0x0,8
tick,0x7ffdf681f424,5814999,0,0x0,8
tick,0x7ffdf681f424,5817025,0,0x0,8
tick,0x7ffdf681f424,5819030,0,0x0,8
tick,0x7ffdf681f424,5821030,0,0x0,8
tick,0x7ffdf681f424,5823068,0,0x0,8
tick,0x7ffdf681f424,5824947,0,0x0,8
tick,0x7ffdf681f424,5827058,0,0x0,8
tick,0x7ffdf681f424,5829047,0,0x0,8
tick,0x7ffdf681f424,5830891,0,0x0,8
tick,0x7ffdf681f424,5832954,0,0x0,8
tick,0x7ffdf681f424,5835039,0,0x0,8
tick,0x7ffdf681f424,5837047,0,0x0,8
tick,0x7ffdf681f424,5839031,0,0x0,8
tick,0x7ffdf681f424,5841022,0,0x0,8
tick,0x7ffdf681f424,5843016,0,0x0,8
tick,0x7ffdf681f424,5845021,0,0x0,8
tick,0x7ffdf681f424,5846927,0,0x0,8
tick,0x7ffdf681f424,5848910,0,0x0,8
tick,0x7ffdf681f424,5850872,0,0x0,8
tick,0x7ffdf681f424,5852889,0,0x0,8
tick,0x7ffdf681f424,5854943,0,0x0,8
tick,0x7ffdf681f424,5857055,0,0x0,8
tick,0x7ffdf681f424,5858975,0,0x0,8
tick,0x7ffdf681f424,5860866,0,0x0,8
tick,0x7ffdf681f424,5862957,0,0x0,8
tick,0x7ffdf681f424,5864970,0,0x0,8
tick,0x7ffdf681f424,5866827,0,0x0,8
tick,0x7ffdf681f424,5868834,0,0x0,8
tick,0x7ffdf681f424,5870837,0,0x0,8
tick,0x7ffdf681f424,5872921,0,0x0,8
tick,0x7ffdf681f424,5874806,0,0x0,8
tick,0x7ffdf681f424,5876918,0,0x0,8
tick,0x7ffdf681f424,5878896,0,0x0,8
tick,0x7ffdf681f424,5880865,0,0x0,8
tick,0x7ffdf681f424,5882851,0,0x0,8
tick,0x7ffdf681f424,5884890,0,0x0,8
tick,0x7ffdf681f424,5886887,0,0x0,8
tick,0x7ffdf681f424,5888884,0,0x0,8
tick,0x7ffdf681f424,5890763,0,0x0,8
tick,0x7ffdf681f424,5892810,0,0x0,8
tick,0x7ffdf681f424,5894869,0,0x0,8
tick,0x7ffdf681f424,5896865,0,0x0,8
tick,0x7ffdf681f424,5898872,0,0x0,8
tick,0x7ffdf681f424,5900688,0,0x0,8
tick,0x7ffdf681f424,5902796,0,0x0,8
tick,0x7ffdf681f424,5904835,0,0x0,8
tick,0x7ffdf681f424,5906841,0,0x0,8
tick,0x7ffdf681f424,5908827,0,0x0,8
tick,0x7ffdf681f424,5910787,0,0x0,8
tick,0x7ffdf681f424,5912768,0,0x0,8
tick,0x7ffdf681f424,5914819,0,0x0,8
tick,0x7ffdf681f424,5916701,0,0x0,8
tick,0x7ffdf681f424,5918802,0,0x0,8
tick,0x7ffdf681f424,5920811,0,0x0,8
tick,0x7ffdf681f424,5922784,0,0x0,8
tick,0x7ffdf681f424,5924678,0,0x0,8
tick,0x7ffdf681f424,5926783,0,0x0,8
tick,0x7ffdf681f424,5928728,0,0x0,8
tick,0x7ffdf681f424,5930668,0,0x0,8
tick,0x7ffdf681f424,5932727,0,0x0,8
tick,0x7ffdf681f424,5934718,0,0x0,8
tick,0x7ffdf681f424,5936756,0,0x0,8
tick,0x7ffdf681f424,5938661,0,0x0,8
tick,0x7ffdf681f424,5940757,0,0x0,8
tick,0x7ffdf681f424,5942640,0,0x0,8
tick,0x7ffdf681f424,5944674,0,0x0,8
tick,0x7ffdf681f424,5946736,0,0x0,8
tick,0x7ffdf681f424,5948739,0,0x0,8
tick,0x7ffdf681f424,5950719,0,0x0,8
tick,0x7ffdf681f424,5952709,0,0x0,8
tick,0x7ffdf681f424,5954685,0,0x0,8
tick,0x7ffdf681f424,5956650,0,0x0,8
tick,0x7ffdf681f424,5958665,0,0x0,8
tick,0x7ffdf681f424,5960638,0,0x0,8
tick,0x7ffdf681f424,5962638,0,0x0,8
tick,0x7ffdf681f424,5964641,0,0x0,8
tick,0x7ffdf681f424,5966522,0,0x0,8
tick,0x7ffdf681f424,5968639,0,0x0,8
tick,0x7ffdf681f424,5970528,0,0x0,8
tick,0x7ffdf681f424,5972623,0,0x0,8
tick,0x7ffdf681f424,5974581,0,0x0,8
tick,0x7ffdf681f424,5976598,0,0x0,8
tick,0x7ffdf681f424,5978603,0,0x0,8
tick,0x7ffdf681f424,5980593,0,0x0,8
tick,0x7ffdf681f424,5982561,0,0x0,8
tick,0x7ffdf681f424,5984572,0,0x0,8
tick,0x7ffdf681f424,5986571,0,0x0,8
tick,0x7ffdf681f424,5988559,0,0x0,8
tick,0x7ffdf681f424,5990561,0,0x0,8
tick,0x7ffdf681f424,5992543,0,0x0,8
tick,0x7ffdf681f424,5994447,0,0x0,8
tick,0x7ffdf681f424,5996434,0,0x0,8
tick,0x7ffdf681f424,5998432,0,0x0,8
tick,0x7ffdf681f424,6000598,0,0x0,8
tick,0x7ffdf681f424,6002474,0,0x0,8
tick,0x7ffdf681f424,6004520,0,0x0,8
tick,0x7ffdf681f424,6006499,0,0x0,8
tick,0x7ffdf681f424,6008407,0,0x0,8
tick,0x7ffdf681f424,6010433,0,0x0,8
tick,0x7ffdf681f424,6012496,0,0x0,8
tick,0x7ffdf681f424,6014382,0,0x0,8
tick,0x7ffdf681f424,6016391,0,0x0,8
tick,0x7ffdf681f424,6018373,0,0x0,8
tick,0x7ffdf681f424,6020432,0,0x0,8
tick,0x7ffdf681f424,6022365,0,0x0,8
tick,0x7ffdf681f424,6024376,0,0x0,8
tick,0x7ffdf681f424,6026352,0,0x0,8
tick,0x7ffdf681f424,6028350,0,0x0,8
tick,0x7ffdf681f424,6030342,0,0x0,8
tick,0x7ffdf681f424,6032304,0,0x0,8
tick,0x7ffdf681f424,6034339,0,0x0,8
tick,0x7ffdf681f424,6036332,0,0x0,8
tick,0x7ffdf681f424,6038373,0,0x0,8
tick,0x7ffdf681f424,6040318,0,0x0,8
tick,0x7ffdf681f424,6042325,0,0x0,8
tick,0x7ffdf681f424,6044317,0,0x0,8
tick,0x7ffdf681f424,6046322,0,0x0,8
tick,0x7ffdf681f424,6048374,0,0x0,8
tick,0x7ffdf681f424,6050269,0,0x0,8
tick,0x7ffdf681f424,6052294,0,0x0,8
tick,0x7ffdf681f424,6054278,0,0x0,8
tick,0x7ffdf681f424,6056274,0,0x0,8
tick,0x7ffdf681f424,6058301,0,0x0,8
tick,0x7ffdf681f424,6060289,0,0x0,8
tick,0x7ffdf681f424,6062304,0,0x0,8
tick,0x7ffdf681f424,6064299,0,0x0,8
tick,0x7ffdf681f424,6066251,0,0x0,8
tick,0x7ffdf681f424,6068243,0,0x0,8
tick,0x7ffdf681f424,6070243,0,0x0,8
tick,0x7ffdf681f424,6072226,0,0x0,8
tick,0x7ffdf681f424,6074219,0,0x0,8
tick,0x7ffdf681f424,6076214,0,0x0,8
tick,0x7ffdf681f424,6078217,0,0x0,8
tick,0x7ffdf681f424,6080205,0,0x0,8
tick,0x7ffdf681f424,6082189,0,0x0,8
tick,0x7ffdf681f424,6084164,0,0x0,8
tick,0x7ffdf681f424,6086165,0,0x0,8
tick,0x7ffdf681f424,6088155,0,0x0,8
tick,0x7ffdf681f424,6090154,0,0x0,8
tick,0x7ffdf681f424,6092168,0,0x0,8
tick,0x7ffdf681f424,6094153,0,0x0,8
tick,0x7ffdf681f424,6096155,0,0x0,8
tick,0x7ffdf681f424,6098196,0,0x0,8
tick,0x7ffdf681f424,6100145,0,0x0,8
tick,0x7ffdf681f424,6102154,0,0x0,8
tick,0x7ffdf681f424,6104202,0,0x0,8
tick,0x7ffdf681f424,6106161,0,0x0,8
tick,0x7ffdf681f424,6108124,0,0x0,8
tick,0x7ffdf681f424,6110148,0,0x0,8
tick,0x7ffdf681f424,6112146,0,0x0,8
tick,0x7ffdf681f424,6114184,0,0x0,8
tick,0x7ffdf681f424,6116171,0,0x0,8
tick,0x7ffdf681f424,6118150,0,0x0,8
tick,0x7ffdf681f424,6120137,0,0x0,8
tick,0x7ffdf681f424,6122152,0,0x0,8
tick,0x7ffdf681f424,6124146,0,0x0,8
tick,0x7ffdf681f424,6126179,0,0x0,8
tick,0x7ffdf681f424,6128152,0,0x0,8
tick,0x7ffdf681f424,6130135,0,0x0,8
tick,0x7ffdf681f424,6132162,0,0x0,8
tick,0x7ffdf681f424,6134130,0,0x0,8
tick,0x7ffdf681f424,6136148,0,0x0,8
tick,0x7ffdf681f424,6138159,0,0x0,8
tick,0x7ffdf681f424,6140201,0,0x0,8
tick,0x7ffdf681f424,6142145,0,0x0,8
tick,0x7ffdf681f424,6144130,0,0x0,8
tick,0x7ffdf681f424,6146118,0,0x0,8
tick,0x7ffdf681f424,6148141,0,0x0,8
tick,0x7ffdf681f424,6150049,0,0x0,8
tick,0x7ffdf681f424,6152104,0,0x0,8
tick,0x7ffdf681f424,6154110,0,0x0,8
tick,0x7ffdf681f424,6156140,0,0x0,8
tick,0x7ffdf681f424,6158228,0,0x0,8
tick,0x7ffdf681f424,6160212,0,0x0,8
tick,0x7ffdf681f424,6162175,0,0x0,8
tick,0x7ffdf681f424,6164306,0,0x0,8
tick,0x7ffdf681f424,6166264,0,0x0,8
tick,0x7ffdf681f424,6168378,0,0x0,8
tick,0x7ffdf681f424,6170428,0,0x0,8
tick,0x7ffdf681f424,6172330,0,0x0,8
tick,0x7ffdf681f424,6174313,0,0x0,8
tick,0x7ffdf681f424,6176338,0,0x0,8
tick,0x7ffdf681f424,6178386,0,0x0,8
tick,0x7ffdf681f424,6180301,0,0x0,8
tick,0x7ffdf681f424,6182387,0,0x0,8
tick,0x7ffdf681f424,6184245,0,0x0,8
tick,0x7ffdf681f424,6186349,0,0x0,8
tick,0x7ffdf681f424,6188365,0,0x0,8
tick,0x7ffdf681f424,6190354,0,0x0,8
tick,0x7ffdf681f424,6192247,0,0x0,8
tick,0x7ffdf681f424,6194256,0,0x0,8
tick,0x7ffdf681f424,6196330,0,0x0,8
tick,0x7ffdf681f424,6198326,0,0x0,8
tick,0x7ffdf681f424,6200226,0,0x0,8
tick,0x7ffdf681f424,6202329,0,0x0,8
tick,0x7ffdf681f424,6204345,0,0x0,8
tick,0x7ffdf681f424,6206302,0,0x0,8
tick,0x7ffdf681f424,6208239,0,0x0,8
tick,0x7ffdf681f424,6210189,0,0x0,8
tick,0x7ffdf681f424,6212286,0,0x0,8
tick,0x7ffdf681f424,6214174,0,0x0,8
tick,0x7ffdf681f424,6216286,0,0x0,8
tick,0x7ffdf681f424,6218174,0,0x0,8
tick,0x7ffdf681f424,6220204,0,0x0,8
tick,0x7ffdf681f424,6222170,0,0x0,8
tick,0x7ffdf681f424,6224263,0,0x0,8
tick,0x7ffdf681f424,6226104,0,0x0,8
tick,0x7ffdf681f424,6228238,0,0x0,8
tick,0x7ffdf681f424,6230141,0,0x0,8
tick,0x7ffdf681f424,6232246,0,0x0,8
tick,0x7ffdf681f424,6234122,0,0x0,8
tick,0x7ffdf681f424,6236115,0,0x0,8
tick,0x7ffdf681f424,6238113,0,0x0,8
tick,0x7ffdf681f424,6240111,0,0x0,8
tick,0x7ffdf681f424,6242124,0,0x0,8
tick,0x7ffdf681f424,6244096,0,0x0,8
tick,0x7ffdf681f424,6246120,0,0x0,8
tick,0x7ffdf681f424,6248148,0,0x0,8
tick,0x7ffdf681f424,6250100,0,0x0,8
tick,0x7ffdf681f424,6252056,0,0x0,8
tick,0x7ffdf681f424,6254093,0,0x0,8
tick,0x7ffdf681f424,6256066,0,0x0,8
tick,0x7ffdf681f424,6258082,0,0x0,8
tick,0x7ffdf681f424,6260028,0,0x0,8
tick,0x7ffdf681f424,6262029,0,0x0,8
tick,0x7ffdf681f424,6263997,0,0x0,8
tick,0x7ffdf681f424,6265991,0,0x0,8
tick,0x7ffdf681f424,6268054,0,0x0,8
tick,0x7ffdf681f424,6269983,0,0x0,8
tick,0x7ffdf681f424,6271973,0,0x0,8
tick,0x7ffdf681f424,6274021,0,0x0,8
tick,0x7ffdf681f424,6276028,0,0x0,8
tick,0x7ffdf681f424,6277963,0,0x0,8
tick,0x7ffdf681f424,6279965,0,0x0,8
tick,0x7ffdf681f424,6281999,0,0x0,8
tick,0x7ffdf681f424,6283942,0,0x0,8
tick,0x7ffdf681f424,6285950,0,0x0,8
tick,0x7ffdf681f424,6287980,0,0x0,8
tick,0x7ffdf681f424,6289924,0,0x0,8
tick,0x7ffdf681f424,6291898,0,0x0,8
tick,0x7ffdf681f424,6293914,0,0x0,8
tick,0x7ffdf681f424,6295976,0,0x0,8
tick,0x7ffdf681f424,6297946,0,0x0,8
tick,0x7ffdf681f424,6299969,0,0x0,8
tick,0x7ffdf681f424,6301938,0,0x0,8
tick,0x7ffdf681f424,6303920,0,0x0,8
tick,0x7ffdf681f424,6305972,0,0x0,8
tick,0x7ffdf681f424,6308003,0,0x0,8
tick,0x7ffdf681f424,6309906,0,0x0,8
tick,0x7ffdf681f424,6312023,0,0x0,8
tick,0x7ffdf681f424,6313988,0,0x0,8
tick,0x7ffdf681f424,6316022,0,0x0,8
tick,0x7ffdf681f424,6317924,0,0x0,8
tick,0x7ffdf681f424,6319967,0,0x0,8
tick,0x7ffdf681f424,6321977,0,0x0,8
tick,0x7ffdf681f424,6323981,0,0x0,8
tick,0x7ffdf681f424,6325901,0,0x0,8
tick,0x7ffdf681f424,6327886,0,0x0,8
tick,0x7ffdf681f424,6329968,0,0x0,8
tick,0x7ffdf681f424,6331936,0,0x0,8
tick,0x7ffdf681f424,6333895,0,0x0,8
tick,0x7ffdf681f424,6335890,0,0x0,8
tick,0x7ffdf681f424,6337956,0,0x0,8
tick,0x7ffdf681f424,6339877,0,0x0,8
tick,0x7ffdf681f424,6341865,0,0x0,8
tick,0x7ffdf681f424,6343910,0,0x0,8
tick,0x7ffdf681f424,6345929,0,0x0,8
tick,0x7ffdf681f424,6347916,0,0x0,8
tick,0x7ffdf681f424,6349844,0,0x0,8
tick,0x7ffdf681f424,6351843,0,0x0,8
tick,0x7ffdf681f424,6353907,0,0x0,8
tick,0x7ffdf681f424,6355903,0,0x0,8
tick,0x7ffdf681f424,6357898,0,0x0,8
tick,0x7ffdf681f424,6359829,0,0x0,8
tick,0x7ffdf681f424,6361702,0,0x0,8
tick,0x7ffdf681f424,6363838,0,0x0,8
tick,0x7ffdf681f424,6365837,0,0x0,8
tick,0x7ffdf681f424,6367753,0,0x0,8
tick,0x7ffdf681f424,6369820,0,0x0,8
tick,0x7ffdf681f424,6371771,0,0x0,8
tick,0x7ffdf681f424,6373844,0,0x0,8
tick,0x7ffdf681f424,6375777,0,0x0,8
tick,0x7ffdf681f424,6377757,0,0x0,8
tick,0x7ffdf681f424,6379756,0,0x0,8
tick,0x7ffdf681f424,6381738,0,0x0,8
tick,0x7ffdf681f424,6383752,0,0x0,8
tick,0x7ffdf681f424,6385729,0,0x0,8
tick,0x7ffdf681f424,6387815,0,0x0,8
tick,0x7ffdf681f424,6389813,0,0x0,8
tick,0x7ffdf681f424,6391724,0,0x0,8
tick,0x7ffdf681f424,6393750,0,0x0,8
tick,0x7ffdf681f424,6395791,0,0x0,8
tick,0x7ffdf681f424,6397683,0,0x0,8
tick,0x7ffdf681f424,6399748,0,0x0,8
tick,0x7ffdf681f424,6401605,0,0x0,8
tick,0x7ffdf681f424,6403767,0,0x0,8
tick,0x7ffdf681f424,6405769,0,0x0,8
tick,0x7ffdf681f424,6407771,0,0x0,8
tick,0x7ffdf681f424,6409678,0,0x0,8
tick,0x7ffdf681f424,6411778,0,0x0,8
tick,0x7ffdf681f424,6413665,0,0x0,8
tick,0x7ffdf681f424,6415738,0,0x0,8
tick,0x7ffdf681f424,6417648,0,0x0,8
tick,0x7ffdf681f424,6419622,0,0x0,8
tick,0x7ffdf681f424,6421711,0,0x0,8
tick,0x7ffdf681f424,6423708,0,0x0,8
tick,0x7ffdf681f424,6425632,0,0x0,8
tick,0x7ffdf681f424,6427646,0,0x0,8
tick,0x7ffdf681f424,6429616,0,0x0,8
tick,0x7ffdf681f424,6431694,0,0x0,8
tick,0x7ffdf681f424,6433596,0,0x0,8
tick,0x7ffdf681f424,6435591,0,0x0,8
tick,0x7ffdf681f424,6437687,0,0x0,8
tick,0x7ffdf681f424,6439673,0,0x0,8
tick,0x7ffdf681f424,6441581,0,0x0,8
tick,0x7ffdf681f424,6443584,0,0x0,8
tick,0x7ffdf681f424,6445687,0,0x0,8
tick,0x7ffdf681f424,6447654,0,0x0,8
tick,0x7ffdf681f424,6449639,0,0x0,8
tick,0x7ffdf681f424,6451545,0,0x0,8
tick,0x7ffdf681f424,6453641,0,0x0,8
tick,0x7ffdf681f424,6455634,0,0x0,8
tick,0x7ffdf681f424,6457629,0,0x0,8
tick,0x7ffdf681f424,6459537,0,0x0,8
tick,0x7ffdf681f424,6461628,0,0x0,8
tick,0x7ffdf681f424,6463610,0,0x0,8
tick,0x7ffdf681f424,6465609,0,0x0,8
tick,0x7ffdf681f424,6467438,0,0x0,8
tick,0x7ffdf681f424,6469443,0,0x0,8
tick,0x7ffdf681f424,6471487,0,0x0,8
tick,0x7ffdf681f424,6473597,0,0x0,8
tick,0x7ffdf681f424,6475482,0,0x0,8
tick,0x7ffdf681f424,6477557,0,0x0,8
tick,0x7ffdf681f424,6479572,0,0x0,8
tick,0x7ffdf681f424,6481465,0,0x0,8
tick,0x7ffdf681f424,6483423,0,0x0,8
tick,0x7ffdf681f424,6485569,0,0x0,8
tick,0x7ffdf681f424,6487548,0,0x0,8
tick,0x7ffdf681f424,6489555,0,0x0,8
tick,0x7ffdf681f424,6491444,0,0x0,8
tick,0x7ffdf681f424,6493434,0,0x0,8
tick,0x7ffdf681f424,6495449,0,0x0,8
tick,0x7ffdf681f424,6497519,0,0x0,8
tick,0x7ffdf681f424,6499543,0,0x0,8
tick,0x7ffdf681f424,6501425,0,0x0,8
tick,0x7ffdf681f424,6503506,0,0x0,8
tick,0x7ffdf681f424,6505502,0,0x0,8
tick,0x7ffdf681f424,6507501,0,0x0,8
tick,0x7ffdf681f424,6509417,0,0x0,8
tick,0x7ffdf681f424,6511462,0,0x0,8
tick,0x7ffdf681f424,6513471,0,0x0,8
tick,0x7ffdf681f424,6515421,0,0x0,8
tick,0x7ffdf681f424,6517396,0,0x0,8
tick,0x7ffdf681f424,6519357,0,0x0,8
tick,0x7ffdf681f424,6521450,0,0x0,8
tick,0x7ffdf681f424,6523452,0,0x0,8
tick,0x7ffdf681f424,6525361,0,0x0,8
tick,0x7ffdf681f424,6527395,0,0x0,8
tick,0x7ffdf681f424,6529365,0,0x0,8
tick,0x7ffdf681f424,6531366,0,0x0,8
tick,0x7ffdf681f424,6533379,0,0x0,8
tick,0x7ffdf681f424,6535334,0,0x0,8
tick,0x7ffdf681f424,6537316,0,0x0,8
tick,0x7ffdf681f424,6539307,0,0x0,8
tick,0x7ffdf681f424,6541389,0,0x0,8
tick,0x7ffdf681f424,6543295,0,0x0,8
tick,0x7ffdf681f424,6545376,0,0x0,8
tick,0x7ffdf681f424,6547285,0,0x0,8
tick,0x7ffdf681f424,6549277,0,0x0,8
tick,0x7ffdf681f424,6551254,0,0x0,8
tick,0x7ffdf681f424,6553232,0,0x0,8
tick,0x7ffdf681f424,6555239,0,0x0,8
tick,0x7ffdf681f424,6557229,0,0x0,8
tick,0x7ffdf681f424,6559195,0,0x0,8
tick,0x7ffdf681f424,6561231,0,0x0,8
tick,0x7ffdf681f424,6563187,0,0x0,8
tick,0x7ffdf681f424,6565189,0,0x0,8
tick,0x7ffdf681f424,6567232,0,0x0,8
tick,0x7ffdf681f424,6569220,0,0x0,8
tick,0x7ffdf681f424,6571256,0,0x0,8
tick,0x7ffdf681f424,6573240,0,0x0,8
tick,0x7ffdf681f424,6575224,0,0x0,8
tick,0x7ffdf681f424,6577202,0,0x0,8
tick,0x7ffdf681f424,6579213,0,0x0,8
tick,0x7ffdf681f424,6581211,0,0x0,8
tick,0x7ffdf681f424,6583210,0,0x0,8
tick,0x7ffdf681f424,6585110,0,0x0,8
tick,0x7ffdf681f424,6587159,0,0x0,8
tick,0x7ffdf681f424,6589162,0,0x0,8
tick,0x7ffdf681f424,6591174,0,0x0,8
tick,0x7ffdf681f424,6593181,0,0x0,8
tick,0x7ffdf681f424,6595154,0,0x0,8
tick,0x7ffdf681f424,6597158,0,0x0,8
tick,0x7ffdf681f424,6599166,0,0x0,8
tick,0x7ffdf681f424,6601159,0,0x0,8
tick,0x7ffdf681f424,6603136,0,0x0,8
tick,0x7ffdf681f424,6605122,0,0x0,8
tick,0x7ffdf681f424,6607121,0,0x0,8
tick,0x7ffdf681f424,6609106,0,0x0,8
tick,0x7ffdf681f424,6611252,0,0x0,8
tick,0x7ffdf681f424,6613114,0,0x0,8
tick,0x7ffdf681f424,6615114,0,0x0,8
tick,0x7ffdf681f424,6617099,0,0x0,8
tick,0x7ffdf681f424,6619134,0,0x0,8
tick,0x7ffdf681f424,6621195,0,0x0,8
tick,0x7ffdf681f424,6623190,0,0x0,8
tick,0x7ffdf681f424,6625088,0,0x0,8
tick,0x7ffdf681f424,6627057,0,0x0,8
tick,0x7ffdf681f424,6629173,0,0x0,8
tick,0x7ffdf681f424,6631061,0,0x0,8
tick,0x7ffdf681f424,6633105,0,0x0,8
tick,0x7ffdf681f424,6635007,0,0x0,8
tick,0x7ffdf681f424,6637151,0,0x0,8
tick,0x7ffdf681f424,6639037,0,0x0,8
tick,0x7ffdf681f424,6641136,0,0x0,8
tick,0x7ffdf681f424,6642983,0,0x0,8
tick,0x7ffdf681f424,6645022,0,0x0,8
tick,0x7ffdf681f424,6647005,0,0x0,8
tick,0x7ffdf681f424,6649003,0,0x0,8
tick,0x7ffdf681f424,6650958,0,0x0,8
tick,0x7ffdf681f424,6653001,0,0x0,8
tick,0x7ffdf681f424,6655047,0,0x0,8
tick,0x7ffdf681f424,6657089,0,0x0,8
tick,0x7ffdf681f424,6658989,0,0x0,8
tick,0x7ffdf681f424,6660966,0,0x0,8
tick,0x7ffdf681f424,6662957,0,0x0,8
tick,0x7ffdf681f424,6664951,0,0x0,8
tick,0x7ffdf681f424,6666976,0,0x0,8
tick,0x7ffdf681f424,6668997,0,0x0,8
tick,0x7ffdf681f424,6670988,0,0x0,8
tick,0x7ffdf681f424,6672974,0,0x0,8
tick,0x7ffdf681f424,6674978,0,0x0,8
tick,0x7ffdf681f424,6676941,0,0x0,8
tick,0x7ffdf681f424,6678967,0,0x0,8
tick,0x7ffdf681f424,6680987,0,0x0,8
tick,0x7ffdf681f424,6682969,0,0x0,8
tick,0x7ffdf681f424,6684925,0,0x0,8
tick,0x7ffdf681f424,6686986,0,0x0,8
tick,0x7ffdf681f424,6688969,0,0x0,8
tick,0x7ffdf681f424,6690922,0,0x0,8
tick,0x7ffdf681f424,6692953,0,0x0,8
tick,0x7ffdf681f424,6694898,0,0x0,8
tick,0x7ffdf681f424,6697008,0,0x0,8
tick,0x7ffdf681f424,6698998,0,0x0,8
tick,0x7ffdf681f424,6700880,0,0x0,8
tick,0x7ffdf681f424,6702949,0,0x0,8
tick,0x7ffdf681f424,6704970,0,0x0,8
tick,0x7ffdf681f424,6706968,0,0x0,8
tick,0x7ffdf681f424,6708862,0,0x0,8
tick,0x7ffdf681f424,6710863,0,0x0,8
tick,0x7ffdf681f424,6712935,0,0x0,8
tick,0x7ffdf681f424,6714904,0,0x0,8
tick,0x7ffdf681f424,6716860,0,0x0,8
tick,0x7ffdf681f424,6718900,0,0x0,8
tick,0x7ffdf681f424,6720933,0,0x0,8
tick,0x7ffdf681f424,6722919,0,0x0,8
tick,0x7ffdf681f424,6724724,0,0x0,8
tick,0x7ffdf681f424,6726825,0,0x0,8
tick,0x7ffdf681f424,6728937,0,0x0,8
tick,0x7ffdf681f424,6730797,0,0x0,8
tick,0x7ffdf681f424,6732791,0,0x0,8
tick,0x7ffdf681f424,6734825,0,0x0,8
tick,0x7ffdf681f424,6736806,0,0x0,8
tick,0x7ffdf681f424,6738905,0,0x0,8
tick,0x7ffdf681f424,6740888,0,0x0,8
tick,0x7ffdf681f424,6742753,0,0x0,8
tick,0x7ffdf681f424,6744795,0,0x0,8
tick,0x7ffdf681f424,6746842,0,0x0,8
tick,0x7ffdf681f424,6748858,0,0x0,8
tick,0x7ffdf681f424,6750752,0,0x0,8
tick,0x7ffdf681f424,6752781,0,0x0,8
tick,0x7ffdf681f424,6754830,0,0x0,8
tick,0x7ffdf681f424,6756841,0,0x0,8
tick,0x7ffdf681f424,6758715,0,0x0,8
tick,0x7ffdf681f424,6760718,0,0x0,8
tick,0x7ffdf681f424,6762298,0,0x0,8
tick,0x7ffdf681f424,6764377,0,0x0,8
tick,0x7ffdf681f424,6766385,0,0x0,8
tick,0x7ffdf681f424,6768266,0,0x0,8
tick,0x7ffdf681f424,6770257,0,0x0,8
tick,0x7ffdf681f424,6772278,0,0x0,8
tick,0x7ffdf681f424,6774323,0,0x0,8
tick,0x7ffdf681f424,6776252,0,0x0,8
tick,0x7ffdf681f424,6778330,0,0x0,8
tick,0x7ffdf681f424,6780244,0,0x0,8
tick,0x7ffdf681f424,6782332,0,0x0,8
tick,0x7ffdf681f424,6784226,0,0x0,8
tick,0x7ffdf681f424,6786230,0,0x0,8
tick,0x7ffdf681f424,6788304,0,0x0,8
tick,0x7ffdf681f424,6790213,0,0x0,8
tick,0x7ffdf681f424,6792227,0,0x0,8
tick,0x7ffdf681f424,6794214,0,0x0,8
tick,0x7ffdf681f424,6796322,0,0x0,8
tick,0x7ffdf681f424,6798177,0,0x0,8
tick,0x7ffdf681f424,6800155,0,0x0,8
tick,0x7ffdf681f424,6802182,0,0x0,8
tick,0x7ffdf681f424,6804262,0,0x0,8
tick,0x7ffdf681f424,6806259,0,0x0,8
tick,0x7ffdf681f424,6808148,0,0x0,8
tick,0x7ffdf681f424,6810156,0,0x0,8
tick,0x7ffdf681f424,6812245,0,0x0,8
tick,0x7ffdf681f424,6814140,0,0x0,8
tick,0x7ffdf681f424,6816137,0,0x0,8
tick,0x7ffdf681f424,6818140,0,0x0,8
tick,0x7ffdf681f424,6820128,0,0x0,8
tick,0x7ffdf681f424,6822111,0,0x0,8
tick,0x7ffdf681f424,6824103,0,0x0,8
tick,0x7ffdf681f424,6826098,0,0x0,8
tick,0x7ffdf681f424,6828114,0,0x0,8
tick,0x7ffdf681f424,6830104,0,0x0,8
tick,0x7ffdf681f424,6832104,0,0x0,8
tick,0x7ffdf681f424,6834099,0,0x0,8
tick,0x7ffdf681f424,6836083,0,0x0,8
tick,0x7ffdf681f424,6838089,0,0x0,8
tick,0x7ffdf681f424,6840101,0,0x0,8
tick,0x7ffdf681f424,6842065,0,0x0,8
tick,0x7ffdf681f424,6844057,0,0x0,8
tick,0x7ffdf681f424,6846054,0,0x0,8
tick,0x7ffdf681f424,6848036,0,0x0,8
tick,0x7ffdf681f424,6850071,0,0x0,8
tick,0x7ffdf681f424,6851983,0,0x0,8
tick,0x7ffdf681f424,6853979,0,0x0,8
tick,0x7ffdf681f424,6855969,0,0x0,8
tick,0x7ffdf681f424,6857977,0,0x0,8
tick,0x7ffdf681f424,6859975,0,0x0,8
tick,0x7ffdf681f424,6861599,0,0x0,8
tick,0x7ffdf681f424,6863611,0,0x0,8
tick,0x7ffdf681f424,6865601,0,0x0,8
tick,0x7ffdf681f424,6867535,0,0x0,8
tick,0x7ffdf681f424,6869514,0,0x0,8
tick,0x7ffdf681f424,6871624,0,0x0,8
tick,0x7ffdf681f424,6873590,0,0x0,8
tick,0x7ffdf681f424,6875532,0,0x0,8
tick,0x7ffdf681f424,6877467,0,0x0,8
tick,0x7ffdf681f424,6879571,0,0x0,8
tick,0x7ffdf681f424,6881577,0,0x0,8
tick,0x7ffdf681f424,6883523,0,0x0,8
tick,0x7ffdf681f424,6885440,0,0x0,8
tick,0x7ffdf681f424,6887552,0,0x0,8
tick,0x7ffdf681f424,6889581,0,0x0,8
tick,0x7ffdf681f424,6891448,0,0x0,8
tick,0x7ffdf681f424,6893450,0,0x0,8
tick,0x7ffdf681f424,6895525,0,0x0,8
tick,0x7ffdf681f424,6897521,0,0x0,8
tick,0x7ffdf681f424,6899607,0,0x0,8
tick,0x7ffdf681f424,6901571,0,0x0,8
tick,0x7ffdf681f424,6903515,0,0x0,8
tick,0x7ffdf681f424,6905497,0,0x0,8
tick,0x7ffdf681f424,6907499,0,0x0,8
tick,0x7ffdf681f424,6909379,0,0x0,8
tick,0x7ffdf681f424,6911395,0,0x0,8
tick,0x7ffdf681f424,6913479,0,0x0,8
tick,0x7ffdf681f424,6915474,0,0x0,8
tick,0x7ffdf681f424,6917471,0,0x0,8
tick,0x7ffdf681f424,6919472,0,0x0,8
tick,0x7ffdf681f424,6921380,0,0x0,8
tick,0x7ffdf681f424,6923448,0,0x0,8
tick,0x7ffdf681f424,6925442,0,0x0,8
tick,0x7ffdf681f424,6927427,0,0x0,8
tick,0x7ffdf681f424,6929403,0,0x0,8
tick,0x7ffdf681f424,6931358,0,0x0,8
tick,0x7ffdf681f424,6933342,0,0x0,8
tick,0x7ffdf681f424,6935441,0,0x0,8
tick,0x7ffdf681f424,6937339,0,0x0,8
tick,0x7ffdf681f424,6939414,0,0x0,8
tick,0x7ffdf681f424,6941310,0,0x0,8
tick,0x7ffdf681f424,6943292,0,0x0,8
tick,0x7ffdf681f424,6945394,0,0x0,8
tick,0x7ffdf681f424,6947300,0,0x0,8
tick,0x7ffdf681f424,6949303,0,0x0,8
tick,0x7ffdf681f424,6951282,0,0x0,8
tick,0x7ffdf681f424,6953297,0,0x0,8
tick,0x7ffdf681f424,6955278,0,0x0,8
tick,0x7ffdf681f424,6957281,0,0x0,8
tick,0x7ffdf681f424,6959261,0,0x0,8
tick,0x7ffdf681f424,6961245,0,0x0,8
tick,0x7ffdf681f424,6963238,0,0x0,8
tick,0x7ffdf681f424,6965232,0,0x0,8
tick,0x7ffdf681f424,6967230,0,0x0,8
tick,0x7ffdf681f424,6969340,0,0x0,8
tick,0x7ffdf681f424,6971219,0,0x0,8
tick,0x7ffdf681f424,6973241,0,0x0,8
tick,0x7ffdf681f424,6975317,0,0x0,8
tick,0x7ffdf681f424,6977208,0,0x0,8
tick,0x7ffdf681f424,6979210,0,0x0,8
tick,0x7ffdf681f424,6981224,0,0x0,8
tick,0x7ffdf681f424,6983178,0,0x0,8
tick,0x7ffdf681f424,6985194,0,0x0,8
tick,0x7ffdf681f424,6987174,0,0x0,8
tick,0x7ffdf681f424,6989175,0,0x0,8
tick,0x7ffdf681f424,6991168,0,0x0,8
tick,0x7ffdf681f424,6993164,0,0x0,8
tick,0x7ffdf681f424,6995264,0,0x0,8
tick,0x7ffdf681f424,6997264,0,0x0,8
tick,0x7ffdf681f424,6999276,0,0x0,8
tick,0x7ffdf681f424,7001141,0,0x0,8
tick,0x7ffdf681f424,7003134,0,0x0,8
tick,0x7ffdf681f424,7005238,0,0x0,8
tick,0x7ffdf681f424,7007122,0,0x0,8
tick,0x7ffdf681f424,7009127,0,0x0,8
tick,0x7ffdf681f424,7011112,0,0x0,8
tick,0x7ffdf681f424,7013107,0,0x0,8
tick,0x7ffdf681f424,7015278,0,0x0,8
tick,0x7ffdf681f424,7017232,0,0x0,8
tick,0x7ffdf681f424,7019237,0,0x0,8
tick,0x7ffdf681f424,7021148,0,0x0,8
tick,0x7ffdf681f424,7023244,0,0x0,8
tick,0x7ffdf681f424,7025136,0,0x0,8
tick,0x7ffdf681f424,7027124,0,0x0,8
tick,0x7ffdf681f424,7029121,0,0x0,8
tick,0x7ffdf681f424,7031136,0,0x0,8
tick,0x7ffdf681f424,7033102,0,0x0,8
tick,0x7ffdf681f424,7035234,0,0x0,8
tick,0x7ffdf681f424,7037224,0,0x0,8
tick,0x7ffdf681f424,7039092,0,0x0,8
tick,0x7ffdf681f424,7041131,0,0x0,8
tick,0x7ffdf681f424,7043074,0,0x0,8
tick,0x7ffdf681f424,7045072,0,0x0,8
tick,0x7ffdf681f424,7047023,0,0x0,8
tick,0x7ffdf681f424,7049083,0,0x0,8
tick,0x7ffdf681f424,7051066,0,0x0,8
tick,0x7ffdf681f424,7053066,0,0x0,8
tick,0x7ffdf681f424,7055057,0,0x0,8
tick,0x7ffdf681f424,7057078,0,0x0,8
tick,0x7ffdf681f424,7059109,0,0x0,8
tick,0x7ffdf681f424,7061031,0,0x0,8
tick,0x7ffdf681f424,7063077,0,0x0,8
tick,0x7ffdf681f424,7065015,0,0x0,8
tick,0x7ffdf681f424,7067036,0,0x0,8
tick,0x7ffdf681f424,7069122,0,0x0,8
tick,0x7ffdf681f424,7071125,0,0x0,8
tick,0x7ffdf681f424,7073002,0,0x0,8
tick,0x7ffdf681f424,7075014,0,0x0,8
tick,0x7ffdf681f424,7077019,0,0x0,8
tick,0x7ffdf681f424,7079106,0,0x0,8
tick,0x7ffdf681f424,7081073,0,0x0,8
tick,0x7ffdf681f424,7083011,0,0x0,8
tick,0x7ffdf681f424,7084963,0,0x0,8
tick,0x7ffdf681f424,7087023,0,0x0,8
tick,0x7ffdf681f424,7089077,0,0x0,8
tick,0x7ffdf681f424,7090963,0,0x0,8
tick,0x7ffdf681f424,7093047,0,0x0,8
tick,0x7ffdf681f424,7095012,0,0x0,8
tick,0x7ffdf681f424,7096982,0,0x0,8
tick,0x7ffdf681f424,7099055,0,0x0,8
tick,0x7ffdf681f424,7100999,0,0x0,8
tick,0x7ffdf681f424,7103018,0,0x0,8
tick,0x7ffdf681f424,7104971,0,0x0,8
tick,0x7ffdf681f424,7106974,0,0x0,8
tick,0x7ffdf681f424,7108963,0,0x0,8
tick,0x7ffdf681f424,7110935,0,0x0,8
tick,0x7ffdf681f424,7113015,0,0x0,8
tick,0x7ffdf681f424,7114977,0,0x0,8
tick,0x7ffdf681f424,7116997,0,0x0,8
tick,0x7ffdf681f424,7118980,0,0x0,8
tick,0x7ffdf681f424,7120977,0,0x0,8
tick,0x7ffdf681f424,7122973,0,0x0,8
tick,0x7ffdf681f424,7124859,0,0x0,8
tick,0x7ffdf681f424,7126955,0,0x0,8
tick,0x7ffdf681f424,7129008,0,0x0,8
tick,0x7ffdf681f424,7130850,0,0x0,8
tick,0x7ffdf681f424,7132861,0,0x0,8
tick,0x7ffdf681f424,7134966,0,0x0,8
tick,0x7ffdf681f424,7136962,0,0x0,8
tick,0x7ffdf681f424,7138781,0,0x0,8
tick,0x7ffdf681f424,7140710,0,0x0,8
tick,0x7ffdf681f424,7142802,0,0x0,8
tick,0x7ffdf681f424,7144918,0,0x0,8
tick,0x7ffdf681f424,7146921,0,0x0,8
tick,0x7ffdf681f424,7148921,0,0x0,8
tick,0x7ffdf681f424,7150825,0,0x0,8
tick,0x7ffdf681f424,7152866,0,0x0,8
tick,0x7ffdf681f424,7154903,0,0x0,8
tick,0x7ffdf681f424,7156864,0,0x0,8
tick,0x7ffdf681f424,7158886,0,0x0,8
tick,0x7ffdf681f424,7160824,0,0x0,8
tick,0x7ffdf681f424,7162842,0,0x0,8
tick,0x7ffdf681f424,7164873,0,0x0,8
tick,0x7ffdf681f424,7166745,0,0x0,8
tick,0x7ffdf681f424,7168867,0,0x0,8
tick,0x7ffdf681f424,7170697,0,0x0,8
tick,0x7ffdf681f424,7172773,0,0x0,8
tick,0x7ffdf681f424,7174835,0,0x0,8
tick,0x7ffdf681f424,7176850,0,0x0,8
tick,0x7ffdf681f424,7178830,0,0x0,8
tick,0x7ffdf681f424,7180799,0,0x0,8
tick,0x7ffdf681f424,7182816,0,0x0,8
tick,0x7ffdf681f424,7184804,0,0x0,8
tick,0x7ffdf681f424,7186799,0,0x0,8
tick,0x7ffdf681f424,7188811,0,0x0,8
tick,0x7ffdf681f424,7190793,0,0x0,8
tick,0x7ffdf681f424,7192781,0,0x0,8
tick,0x7ffdf681f424,7194788,0,0x0,8
tick,0x7ffdf681f424,7196794,0,0x0,8
tick,0x7ffdf681f424,7198799,0,0x0,8
tick,0x7ffdf681f424,7200732,0,0x0,8
tick,0x7ffdf681f424,7202757,0,0x0,8
tick,0x7ffdf681f424,7204750,0,0x0,8
tick,0x7ffdf681f424,7206747,0,0x0,8
tick,0x7ffdf681f424,7208761,0,0x0,8
tick,0x7ffdf681f424,7210664,0,0x0,8
tick,0x7ffdf681f424,7212614,0,0x0,8
tick,0x7ffdf681f424,7214725,0,0x0,8
tick,0x7ffdf681f424,7216625,0,0x0,8
tick,0x7ffdf681f424,7218713,0,0x0,8
tick,0x7ffdf681f424,7220722,0,0x0,8
tick,0x7ffdf681f424,7222758,0,0x0,8
tick,0x7ffdf681f424,7224694,0,0x0,8
tick,0x7ffdf681f424,7226695,0,0x0,8
tick,0x7ffdf681f424,7228687,0,0x0,8
tick,0x7ffdf681f424,7230582,0,0x0,8
tick,0x7ffdf681f424,7232585,0,0x0,8
tick,0x7ffdf681f424,7234674,0,0x0,8
tick,0x7ffdf681f424,7236661,0,0x0,8
tick,0x7ffdf681f424,7238680,0,0x0,8
tick,0x7ffdf681f424,7240674,0,0x0,8
tick,0x7ffdf681f424,7242592,0,0x0,8
tick,0x7ffdf681f424,7244668,0,0x0,8
tick,0x7ffdf681f424,7246634,0,0x0,8
tick,0x7ffdf681f424,7248654,0,0x0,8
tick,0x7ffdf681f424,7250602,0,0x0,8
tick,0x7ffdf681f424,7252599,0,0x0,8
tick,0x7ffdf681f424,7254567,0,0x0,8
tick,0x7ffdf681f424,7256610,0,0x0,8
tick,0x7ffdf681f424,7258525,0,0x0,8
tick,0x7ffdf681f424,7260612,0,0x0,8
tick,0x7ffdf681f424,7262605,0,0x0,8
tick,0x7ffdf681f424,7264545,0,0x0,8
tick,0x7ffdf681f424,7266472,0,0x0,8
tick,0x7ffdf681f424,7268579,0,0x0,8
tick,0x7ffdf681f424,7270582,0,0x0,8
tick,0x7ffdf681f424,7272567,0,0x0,8
tick,0x7ffdf681f424,7274561,0,0x0,8
tick,0x7ffdf681f424,7276562,0,0x0,8
tick,0x7ffdf681f424,7278550,0,0x0,8
tick,0x7ffdf681f424,7280554,0,0x0,8
tick,0x7ffdf681f424,7282542,0,0x0,8
tick,0x7ffdf681f424,7284549,0,0x0,8
tick,0x7ffdf681f424,7286533,0,0x0,8
tick,0x7ffdf681f424,7288548,0,0x0,8
tick,0x7ffdf681f424,7290522,0,0x0,8
tick,0x7ffdf681f424,7292405,0,0x0,8
tick,0x7ffdf681f424,7294509,0,0x0,8
tick,0x7ffdf681f424,7296504,0,0x0,8
tick,0x7ffdf681f424,7298496,0,0x0,8
tick,0x7ffdf681f424,7300509,0,0x0,8
tick,0x7ffdf681f424,7302484,0,0x0,8
tick,0x7ffdf681f424,7304482,0,0x0,8
tick,0x7ffdf681f424,7306488,0,0x0,8
tick,0x7ffdf681f424,7308366,0,0x0,8
tick,0x7ffdf681f424,7310482,0,0x0,8
tick,0x7ffdf681f424,7312466,0,0x0,8
tick,0x7ffdf681f424,7314461,0,0x0,8
tick,0x7ffdf681f424,7316461,0,0x0,8
tick,0x7ffdf681f424,7318443,0,0x0,8
tick,0x7ffdf681f424,7320448,0,0x0,8
tick,0x7ffdf681f424,7322437,0,0x0,8
tick,0x7ffdf681f424,7324433,0,0x0,8
tick,0x7ffdf681f424,7326407,0,0x0,8
tick,0x7ffdf681f424,7328427,0,0x0,8
tick,0x7ffdf681f424,7330365,0,0x0,8
tick,0x7ffdf681f424,7332296,0,0x0,8
tick,0x7ffdf681f424,7334412,0,0x0,8
tick,0x7ffdf681f424,7336403,0,0x0,8
tick,0x7ffdf681f424,7338389,0,0x0,8
tick,0x7ffdf681f424,7340421,0,0x0,8
tick,0x7ffdf681f424,7342378,0,0x0,8
tick,0x7ffdf681f424,7344338,0,0x0,8
tick,0x7ffdf681f424,7346371,0,0x0,8
tick,0x7ffdf681f424,7348365,0,0x0,8
tick,0x7ffdf681f424,7350287,0,0x0,8
tick,0x7ffdf681f424,7352362,0,0x0,8
tick,0x7ffdf681f424,7354389,0,0x0,8
tick,0x7ffdf681f424,7356351,0,0x0,8
tick,0x7ffdf681f424,7358257,0,0x0,8
tick,0x7ffdf681f424,7360337,0,0x0,8
tick,0x7ffdf681f424,7362329,0,0x0,8
tick,0x7ffdf681f424,7364323,0,0x0,8
tick,0x7ffdf681f424,7366318,0,0x0,8
tick,0x7ffdf681f424,7368316,0,0x0,8
tick,0x7ffdf681f424,7370315,0,0x0,8
tick,0x7ffdf681f424,7372307,0,0x0,8
tick,0x7ffdf681f424,7374304,0,0x0,8
tick,0x7ffdf681f424,7376318,0,0x0,8
tick,0x7ffdf681f424,7378299,0,0x0,8
tick,0x7ffdf681f424,7380290,0,0x0,8
tick,0x7ffdf681f424,7382275,0,0x0,8
tick,0x7ffdf681f424,7384232,0,0x0,8
tick,0x7ffdf681f424,7386266,0,0x0,8
tick,0x7ffdf681f424,7388259,0,0x0,8
tick,0x7ffdf681f424,7390276,0,0x0,8
tick,0x7ffdf681f424,7392265,0,0x0,8
tick,0x7ffdf681f424,7394285,0,0x0,8
tick,0x7ffdf681f424,7396251,0,0x0,8
tick,0x7ffdf681f424,7398270,0,0x0,8
tick,0x7ffdf681f424,7400168,0,0x0,8
tick,0x7ffdf681f424,7402230,0,0x0,8
tick,0x7ffdf681f424,7404227,0,0x0,8
tick,0x7ffdf681f424,7406229,0,0x0,8
tick,0x7ffdf681f424,7408192,0,0x0,8
tick,0x7ffdf681f424,7410181,0,0x0,8
tick,0x7ffdf681f424,7412160,0,0x0,8
tick,0x7ffdf681f424,7414196,0,0x0,8
tick,0x7ffdf681f424,7416214,0,0x0,8
tick,0x7ffdf681f424,7418192,0,0x0,8
tick,0x7ffdf681f424,7420210,0,0x0,8
tick,0x7ffdf681f424,7422188,0,0x0,8
tick,0x7ffdf681f424,7424173,0,0x0,8
tick,0x7ffdf681f424,7426070,0,0x0,8
tick,0x7ffdf681f424,7428165,0,0x0,8
tick,0x7ffdf681f424,7430158,0,0x0,8
tick,0x7ffdf681f424,7432150,0,0x0,8
tick,0x7ffdf681f424,7434142,0,0x0,8
tick,0x7ffdf681f424,7436154,0,0x0,8
tick,0x7ffdf681f424,7438144,0,0x0,8
tick,0x7ffdf681f424,7440138,0,0x0,8
tick,0x7ffdf681f424,7442081,0,0x0,8
tick,0x7ffdf681f424,7444125,0,0x0,8
tick,0x7ffdf681f424,7446111,0,0x0,8
tick,0x7ffdf681f424,7448110,0,0x0,8
tick,0x7ffdf681f424,7450006,0,0x0,8
tick,0x7ffdf681f424,7452011,0,0x0,8
tick,0x7ffdf681f424,7454099,0,0x0,8
tick,0x7ffdf681f424,7456100,0,0x0,8
tick,0x7ffdf681f424,7458116,0,0x0,8
tick,0x7ffdf681f424,7459890,0,0x0,8
tick,0x7ffdf681f424,7462084,0,0x0,8
tick,0x7ffdf681f424,7464105,0,0x0,8
tick,0x7ffdf681f424,7466084,0,0x0,8
tick,0x7ffdf681f424,7468021,0,0x0,8
tick,0x7ffdf681f424,7470066,0,0x0,8
tick,0x7ffdf681f424,7472072,0,0x0,8
tick,0x7ffdf681f424,7474057,0,0x0,8
tick,0x7ffdf681f424,7475950,0,0x0,8
tick,0x7ffdf681f424,7478048,0,0x0,8
tick,0x7ffdf681f424,7480026,0,0x0,8
tick,0x7ffdf681f424,7482043,0,0x0,8
tick,0x7ffdf681f424,7484028,0,0x0,8
tick,0x7ffdf681f424,7486029,0,0x0,8
tick,0x7ffdf681f424,7488013,0,0x0,8
tick,0x7ffdf681f424,7489998,0,0x0,8
tick,0x7ffdf681f424,7491975,0,0x0,8
tick,0x7ffdf681f424,7493989,0,0x0,8
tick,0x7ffdf681f424,7495979,0,0x0,8
tick,0x7ffdf681f424,7497974,0,0x0,8
tick,0x7ffdf681f424,7499828,0,0x0,8
tick,0x7ffdf681f424,7501863,0,0x0,8
tick,0x7ffdf681f424,7503972,0,0x0,8
tick,0x7ffdf681f424,7505960,0,0x0,8
tick,0x7ffdf681f424,7507998,0,0x0,8
tick,0x7ffdf681f424,7509947,0,0x0,8
tick,0x7ffdf681f424,7511832,0,0x0,8
tick,0x7ffdf681f424,7513930,0,0x0,8
tick,0x7ffdf681f424,7515929,0,0x0,8
tick,0x7ffdf681f424,7517932,0,0x0,8
tick,0x7ffdf681f424,7519924,0,0x0,8
tick,0x7ffdf681f424,7521922,0,0x0,8
tick,0x7ffdf681f424,7523907,0,0x0,8
tick,0x7ffdf681f424,7525912,0,0x0,8
tick,0x7ffdf681f424,7527903,0,0x0,8
tick,0x7ffdf681f424,7529913,0,0x0,8
tick,0x7ffdf681f424,7531865,0,0x0,8
tick,0x7ffdf681f424,7533884,0,0x0,8
tick,0x7ffdf681f424,7535829,0,0x0,8
tick,0x7ffdf681f424,7537869,0,0x0,8
tick,0x7ffdf681f424,7539866,0,0x0,8
tick,0x7ffdf681f424,7541742,0,0x0,8
tick,0x7ffdf681f424,7543874,0,0x0,8
tick,0x7ffdf681f424,7545740,0,0x0,8
tick,0x7ffdf681f424,7547883,0,0x0,8
tick,0x7ffdf681f424,7549846,0,0x0,8
tick,0x7ffdf681f424,7551858,0,0x0,8
tick,0x7ffdf681f424,7553835,0,0x0,8
tick,0x7ffdf681f424,7555827,0,0x0,8
tick,0x7ffdf681f424,7557821,0,0x0,8
tick,0x7ffdf681f424,7559723,0,0x0,8
tick,0x7ffdf681f424,7561715,0,0x0,8
tick,0x7ffdf681f424,7563797,0,0x0,8
tick,0x7ffdf681f424,7565790,0,0x0,8
tick,0x7ffdf681f424,7567787,0,0x0,8
tick,0x7ffdf681f424,7569798,0,0x0,8
tick,0x7ffdf681f424,7571665,0,0x0,8
tick,0x7ffdf681f424,7573818,0,0x0,8
tick,0x7ffdf681f424,7575779,0,0x0,8
tick,0x7ffdf681f424,7577773,0,0x0,8
tick,0x7ffdf681f424,7579763,0,0x0,8
tick,0x7ffdf681f424,7581768,0,0x0,8
tick,0x7ffdf681f424,7583674,0,0x0,8
tick,0x7ffdf681f424,7585751,0,0x0,8
tick,0x7ffdf681f424,7587747,0,0x0,8
tick,0x7ffdf681f424,7589750,0,0x0,8
tick,0x7ffdf681f424,7591621,0,0x0,8
tick,0x7ffdf681f424,7593740,0,0x0,8
tick,0x7ffdf681f424,7595741,0,0x0,8
tick,0x7ffdf681f424,7597712,0,0x0,8
tick,0x7ffdf681f424,7599700,0,0x0,8
tick,0x7ffdf681f424,7601589,0,0x0,8
tick,0x7ffdf681f424,7603709,0,0x0,8
tick,0x7ffdf681f424,7605684,0,0x0,8
tick,0x7ffdf681f424,7607682,0,0x0,8
tick,0x7ffdf681f424,7609673,0,0x0,8
tick,0x7ffdf681f424,7611667,0,0x0,8
tick,0x7ffdf681f424,7613676,0,0x0,8
tick,0x7ffdf681f424,7615673,0,0x0,8
tick,0x7ffdf681f424,7617683,0,0x0,8
tick,0x7ffdf681f424,7619659,0,0x0,8
tick,0x7ffdf681f424,7621660,0,0x0,8
tick,0x7ffdf681f424,7623636,0,0x0,8
tick,0x7ffdf681f424,7625635,0,0x0,8
tick,0x7ffdf681f424,7627633,0,0x0,8
tick,0x7ffdf681f424,7629623,0,0x0,8
tick,0x7ffdf681f424,7631509,0,0x0,8
tick,0x7ffdf681f424,7633507,0,0x0,8
tick,0x7ffdf681f424,7635646,0,0x0,8
tick,0x7ffdf681f424,7637611,0,0x0,8
tick,0x7ffdf681f424,7639601,0,0x0,8
tick,0x7ffdf681f424,7641492,0,0x0,8
tick,0x7ffdf681f424,7643586,0,0x0,8
tick,0x7ffdf681f424,7645600,0,0x0,8
tick,0x7ffdf681f424,7647579,0,0x0,8
tick,0x7ffdf681f424,7649558,0,0x0,8
tick,0x7ffdf681f424,7651451,0,0x0,8
tick,0x7ffdf681f424,7653513,0,0x0,8
tick,0x7ffdf681f424,7655562,0,0x0,8
tick,0x7ffdf681f424,7657577,0,0x0,8
tick,0x7ffdf681f424,7659563,0,0x0,8
tick,0x7ffdf681f424,7661520,0,0x0,8
tick,0x7ffdf681f424,7663538,0,0x0,8
tick,0x7ffdf681f424,7665531,0,0x0,8
tick,0x7ffdf681f424,7667517,0,0x0,8
tick,0x7ffdf681f424,7669514,0,0x0,8
tick,0x7ffdf681f424,7671414,0,0x0,8
tick,0x7ffdf681f424,7673504,0,0x0,8
tick,0x7ffdf681f424,7675502,0,0x0,8
tick,0x7ffdf681f424,7677496,0,0x0,8
tick,0x7ffdf681f424,7679503,0,0x0,8
tick,0x7ffdf681f424,7681488,0,0x0,8
tick,0x7ffdf681f424,7683399,0,0x0,8
tick,0x7ffdf681f424,7685496,0,0x0,8
tick,0x7ffdf681f424,7687471,0,0x0,8
tick,0x7ffdf681f424,7689480,0,0x0,8
tick,0x7ffdf681f424,7691463,0,0x0,8
tick,0x7ffdf681f424,7693347,0,0x0,8
tick,0x7ffdf681f424,7695452,0,0x0,8
tick,0x7ffdf681f424,7697440,0,0x0,8
tick,0x7ffdf681f424,7699449,0,0x0,8
tick,0x7ffdf681f424,7701319,0,0x0,8
tick,0x7ffdf681f424,7703428,0,0x0,8
tick,0x7ffdf681f424,7705446,0,0x0,8
tick,0x7ffdf681f424,7707426,0,0x0,8
tick,0x7ffdf681f424,7709319,0,0x0,8
tick,0x7ffdf681f424,7711406,0,0x0,8
tick,0x7ffdf681f424,7713398,0,0x0,8
tick,0x7ffdf681f424,7715395,0,0x0,8
tick,0x7ffdf681f424,7717395,0,0x0,8
tick,0x7ffdf681f424,7719381,0,0x0,8
tick,0x7ffdf681f424,7721313,0,0x0,8
tick,0x7ffdf681f424,7723412,0,0x0,8
tick,0x7ffdf681f424,7725373,0,0x0,8
tick,0x7ffdf681f424,7727399,0,0x0,8
tick,0x7ffdf681f424,7729391,0,0x0,8
tick,0x7ffdf681f424,7731246,0,0x0,8
tick,0x7ffdf681f424,7733247,0,0x0,8
tick,0x7ffdf681f424,7735345,0,0x0,8
tick,0x7ffdf681f424,7737339,0,0x0,8
tick,0x7ffdf681f424,7739341,0,0x0,8
tick,0x7ffdf681f424,7741223,0,0x0,8
tick,0x7ffdf681f424,7743212,0,0x0,8
tick,0x7ffdf681f424,7745263,0,0x0,8
tick,0x7ffdf681f424,7747325,0,0x0,8
tick,0x7ffdf681f424,7749327,0,0x0,8
tick,0x7ffdf681f424,7751275,0,0x0,8
tick,0x7ffdf681f424,7753291,0,0x0,8
tick,0x7ffdf681f424,7755177,0,0x0,8
tick,0x7ffdf681f424,7757293,0,0x0,8
tick,0x7ffdf681f424,7759274,0,0x0,8
tick,0x7ffdf681f424,7761272,0,0x0,8
tick,0x7ffdf681f424,7763163,0,0x0,8
tick,0x7ffdf681f424,7765161,0,0x0,8
tick,0x7ffdf681f424,7767169,0,0x0,8
tick,0x7ffdf681f424,7769266,0,0x0,8
tick,0x7ffdf681f424,7771116,0,0x0,8
tick,0x7ffdf681f424,7773134,0,0x0,8
tick,0x7ffdf681f424,7775110,0,0x0,8
tick,0x7ffdf681f424,7777130,0,0x0,8
tick,0x7ffdf681f424,7779239,0,0x0,8
tick,0x7ffdf681f424,7781114,0,0x0,8
tick,0x7ffdf681f424,7783155,0,0x0,8
tick,0x7ffdf681f424,7785210,0,0x0,8
tick,0x7ffdf681f424,7787208,0,0x0,8
tick,0x7ffdf681f424,7789211,0,0x0,8
tick,0x7ffdf681f424,7791098,0,0x0,8
tick,0x7ffdf681f424,7793199,0,0x0,8
tick,0x7ffdf681f424,7795168,0,0x0,8
tick,0x7ffdf681f424,7797168,0,0x0,8
tick,0x7ffdf681f424,7799171,0,0x0,8
tick,0x7ffdf681f424,7801173,0,0x0,8
tick,0x7ffdf681f424,7803157,0,0x0,8
tick,0x7ffdf681f424,7805157,0,0x0,8
tick,0x7ffdf681f424,7807138,0,0x0,8
tick,0x7ffdf681f424,7809150,0,0x0,8
tick,0x7ffdf681f424,7811035,0,0x0,8
tick,0x7ffdf681f424,7813033,0,0x0,8
tick,0x7ffdf681f424,7815158,0,0x0,8
tick,0x7ffdf681f424,7817139,0,0x0,8
tick,0x7ffdf681f424,7819117,0,0x0,8
tick,0x7ffdf681f424,7821079,0,0x0,8
tick,0x7ffdf681f424,7823104,0,0x0,8
tick,0x7ffdf681f424,7824984,0,0x0,8
tick,0x7ffdf681f424,7827064,0,0x0,8
tick,0x7ffdf681f424,7829081,0,0x0,8
tick,0x7ffdf681f424,7831026,0,0x0,8
tick,0x7ffdf681f424,7833093,0,0x0,8
tick,0x7ffdf681f424,7835071,0,0x0,8
tick,0x7ffdf681f424,7837096,0,0x0,8
tick,0x7ffdf681f424,7839052,0,0x0,8
tick,0x7ffdf681f424,7841003,0,0x0,8
tick,0x7ffdf681f424,7843044,0,0x0,8
tick,0x7ffdf681f424,7845037,0,0x0,8
tick,0x7ffdf681f424,7847035,0,0x0,8
tick,0x7ffdf681f424,7849062,0,0x0,8
tick,0x7ffdf681f424,7850923,0,0x0,8
tick,0x7ffdf681f424,7852955,0,0x0,8
tick,0x7ffdf681f424,7855030,0,0x0,8
tick,0x7ffdf681f424,7857013,0,0x0,8
tick,0x7ffdf681f424,7858960,0,0x0,8
tick,0x7ffdf681f424,7861005,0,0x0,8
tick,0x7ffdf681f424,7862999,0,0x0,8
tick,0x7ffdf681f424,7864991,0,0x0,8
tick,0x7ffdf681f424,7866890,0,0x0,8
tick,0x7ffdf681f424,7868984,0,0x0,8
tick,0x7ffdf681f424,7870981,0,0x0,8
tick,0x7ffdf681f424,7872971,0,0x0,8
tick,0x7ffdf681f424,7874923,0,0x0,8
tick,0x7ffdf681f424,7876973,0,0x0,8
tick,0x7ffdf681f424,7878965,0,0x0,8
tick,0x7ffdf681f424,7880987,0,0x0,8
tick,0x7ffdf681f424,7882939,0,0x0,8
tick,0x7ffdf681f424,7884937,0,0x0,8
tick,0x7ffdf681f424,7886928,0,0x0,8
tick,0x7ffdf681f424,7888907,0,0x0,8
tick,0x7ffdf681f424,7890884,0,0x0,8
tick,0x7ffdf681f424,7892906,0,0x0,8
tick,0x7ffdf681f424,7894919,0,0x0,8
tick,0x7ffdf681f424,7896907,0,0x0,8
tick,0x7ffdf681f424,7898893,0,0x0,8
tick,0x7ffdf681f424,7900935,0,0x0,8
tick,0x7ffdf681f424,7902914,0,0x0,8
tick,0x7ffdf681f424,7904884,0,0x0,8
tick,0x7ffdf681f424,7906887,0,0x0,8
tick,0x7ffdf681f424,7908877,0,0x0,8
tick,0x7ffdf681f424,7910882,0,0x0,8
tick,0x7ffdf681f424,7912866,0,0x0,8
tick,0x7ffdf681f424,7914863,0,0x0,8
tick,0x7ffdf681f424,7916753,0,0x0,8
tick,0x7ffdf681f424,7918845,0,0x0,8
tick,0x7ffdf681f424,7920880,0,0x0,8
tick,0x7ffdf681f424,7922842,0,0x0,8
tick,0x7ffdf681f424,7924901,0,0x0,8
tick,0x7ffdf681f424,7926829,0,0x0,8
tick,0x7ffdf681f424,7928804,0,0x0,8
tick,0x7ffdf681f424,7930714,0,0x0,8
tick,0x7ffdf681f424,7932700,0,0x0,8
tick,0x7ffdf681f424,7934810,0,0x0,8
tick,0x7ffdf681f424,7936804,0,0x0,8
tick,0x7ffdf681f424,7938783,0,0x0,8
tick,0x7ffdf681f424,7940797,0,0x0,8
tick,0x7ffdf681f424,7942695,0,0x0,8
tick,0x7ffdf681f424,7944784,0,0x0,8
tick,0x7ffdf681f424,7946793,0,0x0,8
tick,0x7ffdf681f424,7948778,0,0x0,8
tick,0x7ffdf681f424,7950766,0,0x0,8
tick,0x7ffdf681f424,7952787,0,0x0,8
tick,0x7ffdf681f424,7954770,0,0x0,8
tick,0x7ffdf681f424,7956747,0,0x0,8
tick,0x7ffdf681f424,7958679,0,0x0,8
tick,0x7ffdf681f424,7960730,0,0x0,8
tick,0x7ffdf681f424,7962742,0,0x0,8
tick,0x7ffdf681f424,7964738,0,0x0,8
tick,0x7ffdf681f424,7966622,0,0x0,8
tick,0x7ffdf681f424,7968730,0,0x0,8
tick,0x7ffdf681f424,7970371,0,0x0,8
tick,0x7ffdf681f424,7972371,0,0x0,8
tick,0x7ffdf681f424,7974401,0,0x0,8
tick,0x7ffdf681f424,7976386,0,0x0,8
tick,0x7ffdf681f424,7978384,0,0x0,8
tick,0x7ffdf681f424,7980383,0,0x0,8
tick,0x7ffdf681f424,7982377,0,0x0,8
tick,0x7ffdf681f424,7984368,0,0x0,8
tick,0x7ffdf681f424,7986375,0,0x0,8
tick,0x7ffdf681f424,7988364,0,0x0,8
tick,0x7ffdf681f424,7990278,0,0x0,8
tick,0x7ffdf681f424,7992339,0,0x0,8
tick,0x7ffdf681f424,7994336,0,0x0,8
tick,0x7ffdf681f424,7996336,0,0x0,8
tick,0x7ffdf681f424,7998329,0,0x0,8
tick,0x7ffdf681f424,8000263,0,0x0,8
tick,0x7ffdf681f424,8002311,0,0x0,8
tick,0x7ffdf681f424,8004315,0,0x0,8
tick,0x7ffdf681f424,8006307,0,0x0,8
tick,0x7ffdf681f424,8008277,0,0x0,8
tick,0x7ffdf681f424,8010304,0,0x0,8
tick,0x7ffdf681f424,8012279,0,0x0,8
tick,0x7ffdf681f424,8014281,0,0x0,8
tick,0x7ffdf681f424,8016277,0,0x0,8
tick,0x7ffdf681f424,8018272,0,0x0,8
tick,0x7ffdf681f424,8020277,0,0x0,8
tick,0x7ffdf681f424,8022259,0,0x0,8
tick,0x7ffdf681f424,8024266,0,0x0,8
tick,0x7ffdf681f424,8026147,0,0x0,8
tick,0x7ffdf681f424,8028244,0,0x0,8
tick,0x7ffdf681f424,8030254,0,0x0,8
tick,0x7ffdf681f424,8032238,0,0x0,8
tick,0x7ffdf681f424,8034258,0,0x0,8
tick,0x7ffdf681f424,8036228,0,0x0,8
tick,0x7ffdf681f424,8038222,0,0x0,8
tick,0x7ffdf681f424,8040207,0,0x0,8
tick,0x7ffdf681f424,8042215,0,0x0,8
tick,0x7ffdf681f424,8044206,0,0x0,8
tick,0x7ffdf681f424,8046191,0,0x0,8
tick,0x7ffdf681f424,8048200,0,0x0,8
tick,0x7ffdf681f424,8050085,0,0x0,8
tick,0x7ffdf681f424,8052075,0,0x0,8
tick,0x7ffdf681f424,8054180,0,0x0,8
tick,0x7ffdf681f424,8056196,0,0x0,8
tick,0x7ffdf681f424,8058171,0,0x0,8
tick,0x7ffdf681f424,8060166,0,0x0,8
tick,0x7ffdf681f424,8062159,0,0x0,8
tick,0x7ffdf681f424,8064154,0,0x0,8
tick,0x7ffdf681f424,8066145,0,0x0,8
tick,0x7ffdf681f424,8068037,0,0x0,8
tick,0x7ffdf681f424,8070087,0,0x0,8
tick,0x7ffdf681f424,8071678,0,0x0,8
tick,0x7ffdf681f424,8073791,0,0x0,8
tick,0x7ffdf681f424,8075785,0,0x0,8
tick,0x7ffdf681f424,8077806,0,0x0,8
tick,0x7ffdf681f424,8079774,0,0x0,8
tick,0x7ffdf681f424,8081656,0,0x0,8
tick,0x7ffdf681f424,8083736,0,0x0,8
tick,0x7ffdf681f424,8085763,0,0x0,8
tick,0x7ffdf681f424,8087743,0,0x0,8
tick,0x7ffdf681f424,8089752,0,0x0,8
tick,0x7ffdf681f424,8091651,0,0x0,8
tick,0x7ffdf681f424,8093741,0,0x0,8
tick,0x7ffdf681f424,8095743,0,0x0,8
tick,0x7ffdf681f424,8097736,0,0x0,8
tick,0x7ffdf681f424,8099646,0,0x0,8
tick,0x7ffdf681f424,8101717,0,0x0,8
tick,0x7ffdf681f424,8103709,0,0x0,8
tick,0x7ffdf681f424,8105704,0,0x0,8
tick,0x7ffdf681f424,8107710,0,0x0,8
tick,0x7ffdf681f424,8109703,0,0x0,8
tick,0x7ffdf681f424,8111594,0,0x0,8
tick,0x7ffdf681f424,8113686,0,0x0,8
tick,0x7ffdf681f424,8115680,0,0x0,8
tick,0x7ffdf681f424,8117707,0,0x0,8
tick,0x7ffdf681f424,8119669,0,0x0,8
tick,0x7ffdf681f424,8121700,0,0x0,8
tick,0x7ffdf681f424,8123655,0,0x0,8
tick,0x7ffdf681f424,8125658,0,0x0,8
tick,0x7ffdf681f424,8127660,0,0x0,8
tick,0x7ffdf681f424,8129652,0,0x0,8
tick,0x7ffdf681f424,8131528,0,0x0,8
tick,0x7ffdf681f424,8133529,0,0x0,8
tick,0x7ffdf681f424,8135652,0,0x0,8
tick,0x7ffdf681f424,8137619,0,0x0,8
tick,0x7ffdf681f424,8139664,0,0x0,8
tick,0x7ffdf681f424,8141497,0,0x0,8
tick,0x7ffdf681f424,8143657,0,0x0,8
tick,0x7ffdf681f424,8145597,0,0x0,8
tick,0x7ffdf681f424,8147588,0,0x0,8
tick,0x7ffdf681f424,8149592,0,0x0,8
tick,0x7ffdf681f424,8151554,0,0x0,8
tick,0x7ffdf681f424,8153597,0,0x0,8
tick,0x7ffdf681f424,8155580,0,0x0,8
tick,0x7ffdf681f424,8157573,0,0x0,8
tick,0x7ffdf681f424,8159557,0,0x0,8
tick,0x7ffdf681f424,8161591,0,0x0,8
tick,0x7ffdf681f424,8163560,0,0x0,8
tick,0x7ffdf681f424,8165571,0,0x0,8
tick,0x7ffdf681f424,8167538,0,0x0,8
tick,0x7ffdf681f424,8169542,0,0x0,8
tick,0x7ffdf681f424,8171458,0,0x0,8
tick,0x7ffdf681f424,8173426,0,0x0,8
tick,0x7ffdf681f424,8175421,0,0x0,8
tick,0x7ffdf681f424,8177517,0,0x0,8
tick,0x7ffdf681f424,8179523,0,0x0,8
tick,0x7ffdf681f424,8181511,0,0x0,8
tick,0x7ffdf681f424,8183400,0,0x0,8
tick,0x7ffdf681f424,8185406,0,0x0,8
tick,0x7ffdf681f424,8187300,0,0x0,8
tick,0x7ffdf681f424,8189399,0,0x0,8
tick,0x7ffdf681f424,8191381,0,0x0,8
tick,0x7ffdf681f424,8193512,0,0x0,8
tick,0x7ffdf681f424,8195483,0,0x0,8
tick,0x7ffdf681f424,8197504,0,0x0,8
tick,0x7ffdf681f424,8199427,0,0x0,8
tick,0x7ffdf681f424,8201322,0,0x0,8
tick,0x7ffdf681f424,8203430,0,0x0,8
tick,0x7ffdf681f424,8205434,0,0x0,8
tick,0x7ffdf681f424,8207420,0,0x0,8
tick,0x7ffdf681f424,8209333,0,0x0,8
tick,0x7ffdf681f424,8211418,0,0x0,8
tick,0x7ffdf681f424,8213309,0,0x0,8
tick,0x7ffdf681f424,8215424,0,0x0,8
tick,0x7ffdf681f424,8217351,0,0x0,8
tick,0x7ffdf681f424,8219422,0,0x0,8
tick,0x7ffdf681f424,8221390,0,0x0,8
tick,0x7ffdf681f424,8223380,0,0x0,8
tick,0x7ffdf681f424,8225279,0,0x0,8
tick,0x7ffdf681f424,8227370,0,0x0,8
tick,0x7ffdf681f424,8229368,0,0x0,8
tick,0x7ffdf681f424,8231367,0,0x0,8
tick,0x7ffdf681f424,8233310,0,0x0,8
tick,0x7ffdf681f424,8235348,0,0x0,8
tick,0x7ffdf681f424,8237354,0,0x0,8
tick,0x7ffdf681f424,8239347,0,0x0,8
tick,0x7ffdf681f424,8241379,0,0x0,8
tick,0x7ffdf681f424,8243334,0,0x0,8
tick,0x7ffdf681f424,8245324,0,0x0,8
tick,0x7ffdf681f424,8247322,0,0x0,8
tick,0x7ffdf681f424,8249300,0,0x0,8
tick,0x7ffdf681f424,8251204,0,0x0,8
tick,0x7ffdf681f424,8253240,0,0x0,8
tick,0x7ffdf681f424,8255320,0,0x0,8
tick,0x7ffdf681f424,8257296,0,0x0,8
tick,0x7ffdf681f424,8259269,0,0x0,8
tick,0x7ffdf681f424,8261310,0,0x0,8
tick,0x7ffdf681f424,8263310,0,0x0,8
tick,0x7ffdf681f424,8265275,0,0x0,8
tick,0x7ffdf681f424,8267163,0,0x0,8
tick,0x7ffdf681f424,8269254,0,0x0,8
tick,0x7ffdf681f424,8270924,0,0x0,8
tick,0x7ffdf681f424,8272817,0,0x0,8
tick,0x7ffdf681f424,8274934,0,0x0,8
tick,0x7ffdf681f424,8276909,0,0x0,8
tick,0x7ffdf681f424,8278915,0,0x0,8
tick,0x7ffdf681f424,8280920,0,0x0,8
tick,0x7ffdf681f424,8282898,0,0x0,8
tick,0x7ffdf681f424,8284925,0,0x0,8
tick,0x7ffdf681f424,8286882,0,0x0,8
tick,0x7ffdf681f424,8288893,0,0x0,8
tick,0x7ffdf681f424,8290875,0,0x0,8
tick,0x7ffdf681f424,8292855,0,0x0,8
tick,0x7ffdf681f424,8294870,0,0x0,8
tick,0x7ffdf681f424,8296875,0,0x0,8
tick,0x7ffdf681f424,8298846,0,0x0,8
tick,0x7ffdf681f424,8300822,0,0x0,8
tick,0x7ffdf681f424,8302848,0,0x0,8
tick,0x7ffdf681f424,8304842,0,0x0,8
tick,0x7ffdf681f424,8306861,0,0x0,8
tick,0x7ffdf681f424,8308722,0,0x0,8
tick,0x7ffdf681f424,8310784,0,0x0,8
tick,0x7ffdf681f424,8312813,0,0x0,8
tick,0x7ffdf681f424,8314807,0,0x0,8
tick,0x7ffdf681f424,8316705,0,0x0,8
tick,0x7ffdf681f424,8318800,0,0x0,8
tick,0x7ffdf681f424,8320738,0,0x0,8
tick,0x7ffdf681f424,8322789,0,0x0,8
tick,0x7ffdf681f424,8324789,0,0x0,8
tick,0x7ffdf681f424,8326789,0,0x0,8
tick,0x7ffdf681f424,8328741,0,0x0,8
tick,0x7ffdf681f424,8330678,0,0x0,8
tick,0x7ffdf681f424,8332658,0,0x0,8
tick,0x7ffdf681f424,8334764,0,0x0,8
tick,0x7ffdf681f424,8336751,0,0x0,8
tick,0x7ffdf681f424,8338770,0,0x0,8
tick,0x7ffdf681f424,8340698,0,0x0,8
tick,0x7ffdf681f424,8342736,0,0x0,8
tick,0x7ffdf681f424,8344728,0,0x0,8
tick,0x7ffdf681f424,8346754,0,0x0,8
tick,0x7ffdf681f424,8348720,0,0x0,8
tick,0x7ffdf681f424,8350663,0,0x0,8
tick,0x7ffdf681f424,8352708,0,0x0,8
tick,0x7ffdf681f424,8354703,0,0x0,8
tick,0x7ffdf681f424,8356716,0,0x0,8
tick,0x7ffdf681f424,8358580,0,0x0,8
tick,0x7ffdf681f424,8360597,0,0x0,8
tick,0x7ffdf681f424,8362532,0,0x0,8
tick,0x7ffdf681f424,8364608,0,0x0,8
tick,0x7ffdf681f424,8366620,0,0x0,8
tick,0x7ffdf681f424,8368639,0,0x0,8
tick,0x7ffdf681f424,8370602,0,0x0,8
tick,0x7ffdf681f424,8372225,0,0x0,8
tick,0x7ffdf681f424,8374313,0,0x0,8
tick,0x7ffdf681f424,8376304,0,0x0,8
tick,0x7ffdf681f424,8378296,0,0x0,8
tick,0x7ffdf681f424,8380206,0,0x0,8
tick,0x7ffdf681f424,8382282,0,0x0,8
tick,0x7ffdf681f424,8384262,0,0x0,8
tick,0x7ffdf681f424,8386268,0,0x0,8
tick,0x7ffdf681f424,8388265,0,0x0,8
tick,0x7ffdf681f424,8390304,0,0x0,8
tick,0x7ffdf681f424,8392246,0,0x0,8
tick,0x7ffdf681f424,8394294,0,0x0,8
tick,0x7ffdf681f424,8396255,0,0x0,8
tick,0x7ffdf681f424,8398252,0,0x0,8
tick,0x7ffdf681f424,8400127,0,0x0,8
tick,0x7ffdf681f424,8402236,0,0x0,8
tick,0x7ffdf681f424,8404231,0,0x0,8
tick,0x7ffdf681f424,8406234,0,0x0,8
tick,0x7ffdf681f424,8408223,0,0x0,8
tick,0x7ffdf681f424,8410223,0,0x0,8
tick,0x7ffdf681f424,8412066,0,0x0,8
tick,0x7ffdf681f424,8414013,0,0x0,8
tick,0x7ffdf681f424,8416053,0,0x0,8
tick,0x7ffdf681f424,8417989,0,0x0,8
tick,0x7ffdf681f424,8419982,0,0x0,8
tick,0x7ffdf681f424,8421964,0,0x0,8
tick,0x7ffdf681f424,8423986,0,0x0,8
tick,0x7ffdf681f424,8426011,0,0x0,8
tick,0x7ffdf681f424,8427951,0,0x0,8
tick,0x7ffdf681f424,8429946,0,0x0,8
tick,0x7ffdf681f424,8431940,0,0x0,8
tick,0x7ffdf681f424,8433971,0,0x0,8
tick,0x7ffdf681f424,8436016,0,0x0,8
tick,0x7ffdf681f424,8438007,0,0x0,8
tick,0x7ffdf681f424,8439985,0,0x0,8
tick,0x7ffdf681f424,8441965,0,0x0,8
tick,0x7ffdf681f424,8444031,0,0x0,8
tick,0x7ffdf681f424,8446041,0,0x0,8
tick,0x7ffdf681f424,8448085,0,0x0,8
tick,0x7ffdf681f424,8450032,0,0x0,8
tick,0x7ffdf681f424,8452065,0,0x0,8
tick,0x7ffdf681f424,8454003,0,0x0,8
tick,0x7ffdf681f424,8456023,0,0x0,8
tick,0x7ffdf681f424,8457990,0,0x0,8
tick,0x7ffdf681f424,8459966,0,0x0,8
tick,0x7ffdf681f424,8461966,0,0x0,8
tick,0x7ffdf681f424,8464071,0,0x0,8
tick,0x7ffdf681f424,8465957,0,0x0,8
tick,0x7ffdf681f424,8467964,0,0x0,8
tick,0x7ffdf681f424,8470023,0,0x0,8
tick,0x7ffdf681f424,8471538,0,0x0,8
tick,0x7ffdf681f424,8473631,0,0x0,8
tick,0x7ffdf681f424,8475519,0,0x0,8
tick,0x7ffdf681f424,8477537,0,0x0,8
tick,0x7ffdf681f424,8479618,0,0x0,8
tick,0x7ffdf681f424,8481511,0,0x0,8
tick,0x7ffdf681f424,8483499,0,0x0,8
tick,0x7ffdf681f424,8485487,0,0x0,8
tick,0x7ffdf681f424,8487594,0,0x0,8
tick,0x7ffdf681f424,8489580,0,0x0,8
tick,0x7ffdf681f424,8491478,0,0x0,8
tick,0x7ffdf681f424,8493457,0,0x0,8
tick,0x7ffdf681f424,8495565,0,0x0,8
tick,0x7ffdf681f424,8497553,0,0x0,8
tick,0x7ffdf681f424,8499598,0,0x0,8
tick,0x7ffdf681f424,8501414,0,0x0,8
tick,0x7ffdf681f424,8503445,0,0x0,8
tick,0x7ffdf681f424,8505543,0,0x0,8
tick,0x7ffdf681f424,8507529,0,0x0,8
tick,0x7ffdf681f424,8509408,0,0x0,8
tick,0x7ffdf681f424,8511431,0,0x0,8
tick,0x7ffdf681f424,8513497,0,0x0,8
tick,0x7ffdf681f424,8515510,0,0x0,8
tick,0x7ffdf681f424,8517412,0,0x0,8
tick,0x7ffdf681f424,8519410,0,0x0,8
tick,0x7ffdf681f424,8521514,0,0x0,8
tick,0x7ffdf681f424,8523536,0,0x0,8
tick,0x7ffdf681f424,8525383,0,0x0,8
tick,0x7ffdf681f424,8527454,0,0x0,8
tick,0x7ffdf681f424,8529496,0,0x0,8
tick,0x7ffdf681f424,8531352,0,0x0,8
tick,0x7ffdf681f424,8533362,0,0x0,8
tick,0x7ffdf681f424,8535362,0,0x0,8
tick,0x7ffdf681f424,8537460,0,0x0,8
tick,0x7ffdf681f424,8539466,0,0x0,8
tick,0x7ffdf681f424,8541463,0,0x0,8
tick,0x7ffdf681f424,8543386,0,0x0,8
tick,0x7ffdf681f424,8545433,0,0x0,8
tick,0x7ffdf681f424,8547435,0,0x0,8
tick,0x7ffdf681f424,8549416,0,0x0,8
tick,0x7ffdf681f424,8551323,0,0x0,8
tick,0x7ffdf681f424,8553343,0,0x0,8
tick,0x7ffdf681f424,8555412,0,0x0,8
tick,0x7ffdf681f424,8557420,0,0x0,8
tick,0x7ffdf681f424,8559201,0,0x0,8
tick,0x7ffdf681f424,8561294,0,0x0,8
tick,0x7ffdf681f424,8563277,0,0x0,8
tick,0x7ffdf681f424,8565428,0,0x0,8
tick,0x7ffdf681f424,8567317,0,0x0,8
tick,0x7ffdf681f424,8569317,0,0x0,8
tick,0x7ffdf681f424,8571301,0,0x0,8
tick,0x7ffdf681f424,8573390,0,0x0,8
tick,0x7ffdf681f424,8575240,0,0x0,8
tick,0x7ffdf681f424,8577294,0,0x0,8
tick,0x7ffdf681f424,8579413,0,0x0,8
tick,0x7ffdf681f424,8581568,0,0x0,8
tick,0x7ffdf681f424,8583437,0,0x0,8
tick,0x7ffdf681f424,8585452,0,0x0,8
tick,0x7ffdf681f424,8587505,0,0x0,8
tick,0x7ffdf681f424,8589506,0,0x0,8
tick,0x7ffdf681f424,8590675,0,0x0,8
tick,0x7ffdf681f424,8592642,0,0x0,8
tick,0x7ffdf681f424,8594604,0,0x0,8
tick,0x7ffdf681f424,8596652,0,0x0,8
tick,0x7ffdf681f424,8598657,0,0x0,8
tick,0x7ffdf681f424,8600581,0,0x0,8
tick,0x7ffdf681f424,8602599,0,0x0,8
tick,0x7ffdf681f424,8604750,0,0x0,8
tick,0x7ffdf681f424,8606786,0,0x0,8
tick,0x7ffdf681f424,8607945,0,0x0,8
tick,0x7ffdf681f424,8609814,0,0x0,8
tick,0x7ffdf681f424,8611977,0,0x0,8
tick,0x7ffdf681f424,8613063,0,0x0,8
tick,0x7ffdf681f424,8615085,0,0x0,8
tick,0x7ffdf681f424,8616946,0,0x0,8
tick,0x7ffdf681f424,8619003,0,0x0,8
tick,0x7ffdf681f424,8620973,0,0x0,8
tick,0x7ffdf681f424,8622116,0,0x0,8
tick,0x7ffdf681f424,8624079,0,0x0,8
tick,0x7ffdf681f424,8626049,0,0x0,8
tick,0x7ffdf681f424,8627974,0,0x0,8
tick,0x7ffdf681f424,8630055,0,0x0,8
tick,0x7ffdf681f424,8632045,0,0x0,8
tick,0x7ffdf681f424,8633996,0,0x0,8
tick,0x7ffdf681f424,8636021,0,0x0,8
tick,0x7ffdf681f424,8638045,0,0x0,8
tick,0x7ffdf681f424,8640038,0,0x0,8
tick,0x7ffdf681f424,8642038,0,0x0,8
tick,0x7ffdf681f424,8644039,0,0x0,8
tick,0x7ffdf681f424,8646103,0,0x0,8
tick,0x7ffdf681f424,8648197,0,0x0,8
tick,0x7ffdf681f424,8650105,0,0x0,8
tick,0x7ffdf681f424,8652146,0,0x0,8
tick,0x7ffdf681f424,8654106,0,0x0,8
tick,0x7ffdf681f424,8656156,0,0x0,8
tick,0x7ffdf681f424,8657297,0,0x0,8
tick,0x7ffdf681f424,8659409,0,0x0,8
tick,0x7ffdf681f424,8661269,0,0x0,8
tick,0x7ffdf681f424,8663319,0,0x0,8
tick,0x7ffdf681f424,8665376,0,0x0,8
tick,0x7ffdf681f424,8667317,0,0x0,8
tick,0x7ffdf681f424,8669352,0,0x0,8
tick,0x7ffdf681f424,8671371,0,0x0,8
tick,0x7ffdf681f424,8673398,0,0x0,8
tick,0x7ffdf681f424,8675356,0,0x0,8
tick,0x7ffdf681f424,8677356,0,0x0,8
tick,0x7ffdf681f424,8679378,0,0x0,8
tick,0x7ffdf681f424,8681381,0,0x0,8
tick,0x7ffdf681f424,8683413,0,0x0,8
tick,0x7ffdf681f424,8685338,0,0x0,8
tick,0x7ffdf681f424,8687409,0,0x0,8
tick,0x7ffdf681f424,8689398,0,0x0,8
tick,0x7ffdf681f424,8691442,0,0x0,8
tick,0x7ffdf681f424,8693397,0,0x0,8
tick,0x7ffdf681f424,8695410,0,0x0,8
tick,0x7ffdf681f424,8697465,0,0x0,8
tick,0x7ffdf681f424,8699467,0,0x0,8
tick,0x7ffdf681f424,8701422,0,0x0,8
tick,0x7ffdf681f424,8703440,0,0x0,8
tick,0x7ffdf681f424,8705414,0,0x0,8
tick,0x7ffdf681f424,8706552,0,0x0,8
tick,0x7ffdf681f424,8708460,0,0x0,8
tick,0x7ffdf681f424,8710494,0,0x0,8
tick,0x7ffdf681f424,8712493,0,0x0,8
tick,0x7ffdf681f424,8714518,0,0x0,8
tick,0x7ffdf681f424,8716616,0,0x0,8
tick,0x7ffdf681f424,8718587,0,0x0,8
tick,0x7ffdf681f424,8720603,0,0x0,8
tick,0x7ffdf681f424,8722582,0,0x0,8
tick,0x7ffdf681f424,8724616,0,0x0,8
tick,0x7ffdf681f424,8726581,0,0x0,8
tick,0x7ffdf681f424,8728569,0,0x0,8
tick,0x7ffdf681f424,8730610,0,0x0,8
tick,0x7ffdf681f424,8732582,0,0x0,8
tick,0x7ffdf681f424,8734511,0,0x0,8
tick,0x7ffdf681f424,8736535,0,0x0,8
tick,0x7ffdf681f424,8738560,0,0x0,8
tick,0x7ffdf681f424,8740575,0,0x0,8
tick,0x7ffdf681f424,8742462,0,0x0,8
tick,0x7ffdf681f424,8744439,0,0x0,8
tick,0x7ffdf681f424,8746555,0,0x0,8
tick,0x7ffdf681f424,8747735,0,0x0,8
tick,0x7ffdf681f424,8749731,0,0x0,8
tick,0x7ffdf681f424,8751624,0,0x0,8
tick,0x7ffdf681f424,8753757,0,0x0,8
tick,0x7ffdf681f424,8754898,0,0x0,8
tick,0x7ffdf681f424,8756926,0,0x0,8
tick,0x7ffdf681f424,8758818,0,0x0,8
tick,0x7ffdf681f424,8760916,0,0x0,8
tick,0x7ffdf681f424,8762119,0,0x0,8
tick,0x7ffdf681f424,8763271,0,0x0,8
tick,0x7ffdf681f424,8765290,0,0x0,8
tick,0x7ffdf681f424,8767193,0,0x0,8
tick,0x7ffdf681f424,8769321,0,0x0,8
tick,0x7ffdf681f424,8770415,0,0x0,8
tick,0x7ffdf681f424,8772301,0,0x0,8
tick,0x7ffdf681f424,8773389,0,0x0,8
tick,0x7ffdf681f424,8775281,0,0x0,8
tick,0x7ffdf681f424,8777305,0,0x0,8
tick,0x7ffdf681f424,8779329,0,0x0,8
tick,0x7ffdf681f424,8781313,0,0x0,8
tick,0x7ffdf681f424,8783334,0,0x0,8
tick,0x7ffdf681f424,8785246,0,0x0,8
tick,0x7ffdf681f424,8787313,0,0x0,8
tick,0x7ffdf681f424,8789312,0,0x0,8
tick,0x7ffdf681f424,8791227,0,0x0,8
tick,0x7ffdf681f424,8793174,0,0x0,8
tick,0x7ffdf681f424,8795231,0,0x0,8
tick,0x7ffdf681f424,8797232,0,0x0,8
tick,0x7ffdf681f424,8798357,0,0x0,8
tick,0x7ffdf681f424,8800283,0,0x0,8
tick,0x7ffdf681f424,8802240,0,0x0,8
tick,0x7ffdf681f424,8804345,0,0x0,8
tick,0x7ffdf681f424,8805501,0,0x0,8
tick,0x7ffdf681f424,8807419,0,0x0,8
tick,0x7ffdf681f424,8809378,0,0x0,8
tick,0x7ffdf681f424,8811382,0,0x0,8
tick,0x7ffdf681f424,8812483,0,0x0,8
tick,0x7ffdf681f424,8814491,0,0x0,8
tick,0x7ffdf681f424,8816468,0,0x0,8
tick,0x7ffdf681f424,8818343,0,0x0,8
tick,0x7ffdf681f424,8820431,0,0x0,8
tick,0x7ffdf681f424,8822412,0,0x0,8
tick,0x7ffdf681f424,8824422,0,0x0,8
tick,0x7ffdf681f424,8826312,0,0x0,8
tick,0x7ffdf681f424,8828381,0,0x0,8
tick,0x7ffdf681f424,8830408,0,0x0,8
tick,0x7ffdf681f424,8832424,0,0x0,8
tick,0x7ffdf681f424,8834293,0,0x0,8
tick,0x7ffdf681f424,8836295,0,0x0,8
tick,0x7ffdf681f424,8838368,0,0x0,8
tick,0x7ffdf681f424,8840374,0,0x0,8
tick,0x7ffdf681f424,8842264,0,0x0,8
tick,0x7ffdf681f424,8844257,0,0x0,8
tick,0x7ffdf681f424,8846252,0,0x0,8
tick,0x7ffdf681f424,8848356,0,0x0,8
tick,0x7ffdf681f424,8850261,0,0x0,8
tick,0x7ffdf681f424,8852236,0,0x0,8
tick,0x7ffdf681f424,8854357,0,0x0,8
tick,0x7ffdf681f424,8856325,0,0x0,8
tick,0x7ffdf681f424,8858301,0,0x0,8
tick,0x7ffdf681f424,8860232,0,0x0,8
tick,0x7ffdf681f424,8862318,0,0x0,8
tick,0x7ffdf681f424,8864304,0,0x0,8
tick,0x7ffdf681f424,8866299,0,0x0,8
tick,0x7ffdf681f424,8868222,0,0x0,8
tick,0x7ffdf681f424,8870294,0,0x0,8
tick,0x7ffdf681f424,8872307,0,0x0,8
tick,0x7ffdf681f424,8874285,0,0x0,8
tick,0x7ffdf681f424,8876196,0,0x0,8
tick,0x7ffdf681f424,8878253,0,0x0,8
tick,0x7ffdf681f424,8880266,0,0x0,8
tick,0x7ffdf681f424,8882254,0,0x0,8
tick,0x7ffdf681f424,8884213,0,0x0,8
tick,0x7ffdf681f424,8886155,0,0x0,8
tick,0x7ffdf681f424,8888244,0,0x0,8
tick,0x7ffdf681f424,8890235,0,0x0,8
tick,0x7ffdf681f424,8892130,0,0x0,8
tick,0x7ffdf681f424,8894257,0,0x0,8
tick,0x7ffdf681f424,8896222,0,0x0,8
tick,0x7ffdf681f424,8898242,0,0x0,8
tick,0x7ffdf681f424,8900036,0,0x0,8
tick,0x7ffdf681f424,8902107,0,0x0,8
tick,0x7ffdf681f424,8904203,0,0x0,8
tick,0x7ffdf681f424,8906196,0,0x0,8
tick,0x7ffdf681f424,8908182,0,0x0,8
tick,0x7ffdf681f424,8910095,0,0x0,8
tick,0x7ffdf681f424,8912171,0,0x0,8
tick,0x7ffdf681f424,8914170,0,0x0,8
tick,0x7ffdf681f424,8916093,0,0x0,8
tick,0x7ffdf681f424,8918077,0,0x0,8
tick,0x7ffdf681f424,8920067,0,0x0,8
tick,0x7ffdf681f424,8922051,0,0x0,8
tick,0x7ffdf681f424,8924028,0,0x0,8
tick,0x7ffdf681f424,8926108,0,0x0,8
tick,0x7ffdf681f424,8928033,0,0x0,8
tick,0x7ffdf681f424,8930029,0,0x0,8
tick,0x7ffdf681f424,8932008,0,0x0,8
tick,0x7ffdf681f424,8934035,0,0x0,8
tick,0x7ffdf681f424,8936035,0,0x0,8
tick,0x7ffdf681f424,8938007,0,0x0,8
tick,0x7ffdf681f424,8939965,0,0x0,8
tick,0x7ffdf681f424,8941936,0,0x0,8
tick,0x7ffdf681f424,8943971,0,0x0,8
tick,0x7ffdf681f424,8945950,0,0x0,8
tick,0x7ffdf681f424,8948085,0,0x0,8
tick,0x7ffdf681f424,8950128,0,0x0,8
tick,0x7ffdf681f424,8951979,0,0x0,8
tick,0x7ffdf681f424,8954098,0,0x0,8
tick,0x7ffdf681f424,8955230,0,0x0,8
tick,0x7ffdf681f424,8957268,0,0x0,8
tick,0x7ffdf681f424,8959156,0,0x0,8
tick,0x7ffdf681f424,8961122,0,0x0,8
tick,0x7ffdf681f424,8963083,0,0x0,8
tick,0x7ffdf681f424,8965193,0,0x0,8
tick,0x7ffdf681f424,8967134,0,0x0,8
tick,0x7ffdf681f424,8969211,0,0x0,8
tick,0x7ffdf681f424,8970419,0,0x0,8
tick,0x7ffdf681f424,8972401,0,0x0,8
tick,0x7ffdf681f424,8974414,0,0x0,8
tick,0x7ffdf681f424,8976368,0,0x0,8
tick,0x7ffdf681f424,8978410,0,0x0,8
tick,0x7ffdf681f424,8980357,0,0x0,8
tick,0x7ffdf681f424,8982463,0,0x0,8
tick,0x7ffdf681f424,8984334,0,0x0,8
tick,0x7ffdf681f424,8986384,0,0x0,8
tick,0x7ffdf681f424,8988310,0,0x0,8
tick,0x7ffdf681f424,8990360,0,0x0,8
tick,0x7ffdf681f424,8992324,0,0x0,8
tick,0x7ffdf681f424,8994363,0,0x0,8
tick,0x7ffdf681f424,8996356,0,0x0,8
tick,0x7ffdf681f424,8998325,0,0x0,8
tick,0x7ffdf681f424,9000225,0,0x0,8
tick,0x7ffdf681f424,9002296,0,0x0,8
tick,0x7ffdf681f424,9004255,0,0x0,8
tick,0x7ffdf681f424,9006280,0,0x0,8
tick,0x7ffdf681f424,9008277,0,0x0,8
tick,0x7ffdf681f424,9010220,0,0x0,8
tick,0x7ffdf681f424,9012210,0,0x0,8
tick,0x7ffdf681f424,9014242,0,0x0,8
tick,0x7ffdf681f424,9016240,0,0x0,8
tick,0x7ffdf681f424,9018185,0,0x0,8
tick,0x7ffdf681f424,9020149,0,0x0,8
tick,0x7ffdf681f424,9022203,0,0x0,8
tick,0x7ffdf681f424,9024219,0,0x0,8
tick,0x7ffdf681f424,9026182,0,0x0,8
tick,0x7ffdf681f424,9028149,0,0x0,8
tick,0x7ffdf681f424,9030221,0,0x0,8
tick,0x7ffdf681f424,9032218,0,0x0,8
tick,0x7ffdf681f424,9034163,0,0x0,8
tick,0x7ffdf681f424,9036182,0,0x0,8
tick,0x7ffdf681f424,9038178,0,0x0,8
tick,0x7ffdf681f424,9040158,0,0x0,8
tick,0x7ffdf681f424,9042117,0,0x0,8
tick,0x7ffdf681f424,9044048,0,0x0,8
tick,0x7ffdf681f424,9046139,0,0x0,8
tick,0x7ffdf681f424,9048149,0,0x0,8
tick,0x7ffdf681f424,9050140,0,0x0,8
tick,0x7ffdf681f424,9052069,0,0x0,8
tick,0x7ffdf681f424,9054125,0,0x0,8
tick,0x7ffdf681f424,9056125,0,0x0,8
tick,0x7ffdf681f424,9058119,0,0x0,8
tick,0x7ffdf681f424,9060033,0,0x0,8
tick,0x7ffdf681f424,9062108,0,0x0,8
tick,0x7ffdf681f424,9064109,0,0x0,8
tick,0x7ffdf681f424,9066115,0,0x0,8
tick,0x7ffdf681f424,9067983,0,0x0,8
tick,0x7ffdf681f424,9070111,0,0x0,8
tick,0x7ffdf681f424,9072102,0,0x0,8
tick,0x7ffdf681f424,9074078,0,0x0,8
tick,0x7ffdf681f424,9075997,0,0x0,8
tick,0x7ffdf681f424,9077956,0,0x0,8
tick,0x7ffdf681f424,9079959,0,0x0,8
tick,0x7ffdf681f424,9082066,0,0x0,8
tick,0x7ffdf681f424,9083996,0,0x0,8
tick,0x7ffdf681f424,9086049,0,0x0,8
tick,0x7ffdf681f424,9088074,0,0x0,8
tick,0x7ffdf681f424,9090041,0,0x0,8
tick,0x7ffdf681f424,9091925,0,0x0,8
tick,0x7ffdf681f424,9093943,0,0x0,8
tick,0x7ffdf681f424,9096019,0,0x0,8
tick,0x7ffdf681f424,9098018,0,0x0,8
tick,0x7ffdf681f424,9100007,0,0x0,8
tick,0x7ffdf681f424,9101905,0,0x0,8
tick,0x7ffdf681f424,9103997,0,0x0,8
tick,0x7ffdf681f424,9105992,0,0x0,8
tick,0x7ffdf681f424,9107989,0,0x0,8
tick,0x7ffdf681f424,9109944,0,0x0,8
tick,0x7ffdf681f424,9112000,0,0x0,8
tick,0x7ffdf681f424,9113971,0,0x0,8
tick,0x7ffdf681f424,9115987,0,0x0,8
tick,0x7ffdf681f424,9117929,0,0x0,8
tick,0x7ffdf681f424,9119964,0,0x0,8
tick,0x7ffdf681f424,9121944,0,0x0,8
tick,0x7ffdf681f424,9123953,0,0x0,8
tick,0x7ffdf681f424,9125847,0,0x0,8
tick,0x7ffdf681f424,9127961,0,0x0,8
tick,0x7ffdf681f424,9129931,0,0x0,8
tick,0x7ffdf681f424,9131945,0,0x0,8
tick,0x7ffdf681f424,9133870,0,0x0,8
tick,0x7ffdf681f424,9135808,0,0x0,8
tick,0x7ffdf681f424,9137925,0,0x0,8
tick,0x7ffdf681f424,9139904,0,0x0,8
tick,0x7ffdf681f424,9141840,0,0x0,8
tick,0x7ffdf681f424,9143813,0,0x0,8
tick,0x7ffdf681f424,9145880,0,0x0,8
tick,0x7ffdf681f424,9147885,0,0x0,8
tick,0x7ffdf681f424,9149879,0,0x0,8
tick,0x7ffdf681f424,9151767,0,0x0,8
tick,0x7ffdf681f424,9153887,0,0x0,8
tick,0x7ffdf681f424,9155751,0,0x0,8
tick,0x7ffdf681f424,9157784,0,0x0,8
tick,0x7ffdf681f424,9159789,0,0x0,8
tick,0x7ffdf681f424,9161865,0,0x0,8
tick,0x7ffdf681f424,9163845,0,0x0,8
tick,0x7ffdf681f424,9165840,0,0x0,8
tick,0x7ffdf681f424,9167783,0,0x0,8
tick,0x7ffdf681f424,9169817,0,0x0,8
tick,0x7ffdf681f424,9171819,0,0x0,8
tick,0x7ffdf681f424,9173812,0,0x0,8
tick,0x7ffdf681f424,9175783,0,0x0,8
tick,0x7ffdf681f424,9177725,0,0x0,8
tick,0x7ffdf681f424,9179797,0,0x0,8
tick,0x7ffdf681f424,9181808,0,0x0,8
tick,0x7ffdf681f424,9183745,0,0x0,8
tick,0x7ffdf681f424,9185707,0,0x0,8
tick,0x7ffdf681f424,9187796,0,0x0,8
tick,0x7ffdf681f424,9189764,0,0x0,8
tick,0x7ffdf681f424,9191752,0,0x0,8
tick,0x7ffdf681f424,9193660,0,0x0,8
tick,0x7ffdf681f424,9195745,0,0x0,8
tick,0x7ffdf681f424,9197774,0,0x0,8
tick,0x7ffdf681f424,9199741,0,0x0,8
tick,0x7ffdf681f424,9201716,0,0x0,8
tick,0x7ffdf681f424,9203738,0,0x0,8
tick,0x7ffdf681f424,9205727,0,0x0,8
tick,0x7ffdf681f424,9207726,0,0x0,8
tick,0x7ffdf681f424,9209664,0,0x0,8
tick,0x7ffdf681f424,9211605,0,0x0,8
tick,0x7ffdf681f424,9213703,0,0x0,8
tick,0x7ffdf681f424,9215698,0,0x0,8
tick,0x7ffdf681f424,9217699,0,0x0,8
tick,0x7ffdf681f424,9219677,0,0x0,8
tick,0x7ffdf681f424,9221682,0,0x0,8
tick,0x7ffdf681f424,9223677,0,0x0,8
tick,0x7ffdf681f424,9225595,0,0x0,8
tick,0x7ffdf681f424,9227666,0,0x0,8
tick,0x7ffdf681f424,9229587,0,0x0,8
tick,0x7ffdf681f424,9231687,0,0x0,8
tick,0x7ffdf681f424,9233521,0,0x0,8
tick,0x7ffdf681f424,9235648,0,0x0,8
tick,0x7ffdf681f424,9237642,0,0x0,8
tick,0x7ffdf681f424,9239639,0,0x0,8
tick,0x7ffdf681f424,9241658,0,0x0,8
tick,0x7ffdf681f424,9243626,0,0x0,8
tick,0x7ffdf681f424,9245612,0,0x0,8
tick,0x7ffdf681f424,9247645,0,0x0,8
tick,0x7ffdf681f424,9249615,0,0x0,8
tick,0x7ffdf681f424,9251608,0,0x0,8
tick,0x7ffdf681f424,9253598,0,0x0,8
tick,0x7ffdf681f424,9255592,0,0x0,8
tick,0x7ffdf681f424,9257589,0,0x0,8
tick,0x7ffdf681f424,9259582,0,0x0,8
tick,0x7ffdf681f424,9261579,0,0x0,8
tick,0x7ffdf681f424,9263646,0,0x0,8
tick,0x7ffdf681f424,9265595,0,0x0,8
tick,0x7ffdf681f424,9267565,0,0x0,8
tick,0x7ffdf681f424,9269589,0,0x0,8
tick,0x7ffdf681f424,9271545,0,0x0,8
tick,0x7ffdf681f424,9273561,0,0x0,8
tick,0x7ffdf681f424,9275544,0,0x0,8
tick,0x7ffdf681f424,9277533,0,0x0,8
tick,0x7ffdf681f424,9279527,0,0x0,8
tick,0x7ffdf681f424,9281522,0,0x0,8
tick,0x7ffdf681f424,9283430,0,0x0,8
tick,0x7ffdf681f424,9285536,0,0x0,8
tick,0x7ffdf681f424,9287533,0,0x0,8
tick,0x7ffdf681f424,9289509,0,0x0,8
tick,0x7ffdf681f424,9291568,0,0x0,8
tick,0x7ffdf681f424,9293506,0,0x0,8
tick,0x7ffdf681f424,9295508,0,0x0,8
tick,0x7ffdf681f424,9297481,0,0x0,8
tick,0x7ffdf681f424,9299481,0,0x0,8
tick,0x7ffdf681f424,9301478,0,0x0,8
tick,0x7ffdf681f424,9303476,0,0x0,8
tick,0x7ffdf681f424,9305462,0,0x0,8
tick,0x7ffdf681f424,9307347,0,0x0,8
tick,0x7ffdf681f424,9309454,0,0x0,8
tick,0x7ffdf681f424,9311459,0,0x0,8
tick,0x7ffdf681f424,9313522,0,0x0,8
tick,0x7ffdf681f424,9315437,0,0x0,8
tick,0x7ffdf681f424,9317372,0,0x0,8
tick,0x7ffdf681f424,9319422,0,0x0,8
tick,0x7ffdf681f424,9321422,0,0x0,8
tick,0x7ffdf681f424,9323416,0,0x0,8
tick,0x7ffdf681f424,9325304,0,0x0,8
tick,0x7ffdf681f424,9327406,0,0x0,8
tick,0x7ffdf681f424,9329442,0,0x0,8
tick,0x7ffdf681f424,9331396,0,0x0,8
tick,0x7ffdf681f424,9333397,0,0x0,8
tick,0x7ffdf681f424,9335401,0,0x0,8
tick,0x7ffdf681f424,9337381,0,0x0,8
tick,0x7ffdf681f424,9339384,0,0x0,8
tick,0x7ffdf681f424,9341378,0,0x0,8
tick,0x7ffdf681f424,9343364,0,0x0,8
tick,0x7ffdf681f424,9345357,0,0x0,8
tick,0x7ffdf681f424,9347363,0,0x0,8
tick,0x7ffdf681f424,9349349,0,0x0,8
tick,0x7ffdf681f424,9351417,0,0x0,8
tick,0x7ffdf681f424,9353364,0,0x0,8
tick,0x7ffdf681f424,9355340,0,0x0,8
tick,0x7ffdf681f424,9357383,0,0x0,8
tick,0x7ffdf681f424,9359321,0,0x0,8
tick,0x7ffdf681f424,9361322,0,0x0,8
tick,0x7ffdf681f424,9363306,0,0x0,8
tick,0x7ffdf681f424,9365306,0,0x0,8
tick,0x7ffdf681f424,9367299,0,0x0,8
tick,0x7ffdf681f424,9369322,0,0x0,8
tick,0x7ffdf681f424,9371288,0,0x0,8
tick,0x7ffdf681f424,9373307,0,0x0,8
tick,0x7ffdf681f424,9375194,0,0x0,8
tick,0x7ffdf681f424,9377272,0,0x0,8
tick,0x7ffdf681f424,9379349,0,0x0,8
tick,0x7ffdf681f424,9381258,0,0x0,8
tick,0x7ffdf681f424,9383168,0,0x0,8
tick,0x7ffdf681f424,9385251,0,0x0,8
tick,0x7ffdf681f424,9387245,0,0x0,8
tick,0x7ffdf681f424,9389243,0,0x0,8
tick,0x7ffdf681f424,9391236,0,0x0,8
tick,0x7ffdf681f424,9393157,0,0x0,8
tick,0x7ffdf681f424,9395247,0,0x0,8
tick,0x7ffdf681f424,9397241,0,0x0,8
tick,0x7ffdf681f424,9399108,0,0x0,8
tick,0x7ffdf681f424,9401264,0,0x0,8
tick,0x7ffdf681f424,9403203,0,0x0,8
tick,0x7ffdf681f424,9405204,0,0x0,8
tick,0x7ffdf681f424,9407191,0,0x0,8
tick,0x7ffdf681f424,9409193,0,0x0,8
tick,0x7ffdf681f424,9411176,0,0x0,8
tick,0x7ffdf681f424,9413185,0,0x0,8
tick,0x7ffdf681f424,9415172,0,0x0,8
tick,0x7ffdf681f424,9417108,0,0x0,8
tick,0x7ffdf681f424,9419160,0,0x0,8
tick,0x7ffdf681f424,9421163,0,0x0,8
tick,0x7ffdf681f424,9423178,0,0x0,8
tick,0x7ffdf681f424,9425126,0,0x0,8
tick,0x7ffdf681f424,9427024,0,0x0,8
tick,0x7ffdf681f424,9429033,0,0x0,8
tick,0x7ffdf681f424,9431018,0,0x0,8
tick,0x7ffdf681f424,9433010,0,0x0,8
tick,0x7ffdf681f424,9435020,0,0x0,8
tick,0x7ffdf681f424,9437030,0,0x0,8
tick,0x7ffdf681f424,9439097,0,0x0,8
tick,0x7ffdf681f424,9441031,0,0x0,8
tick,0x7ffdf681f424,9443012,0,0x0,8
tick,0x7ffdf681f424,9445065,0,0x0,8
tick,0x7ffdf681f424,9447034,0,0x0,8
tick,0x7ffdf681f424,9449064,0,0x0,8
tick,0x7ffdf681f424,9451062,0,0x0,8
tick,0x7ffdf681f424,9452943,0,0x0,8
tick,0x7ffdf681f424,9454948,0,0x0,8
tick,0x7ffdf681f424,9456934,0,0x0,8
tick,0x7ffdf681f424,9458939,0,0x0,8
tick,0x7ffdf681f424,9460943,0,0x0,8
tick,0x7ffdf681f424,9462937,0,0x0,8
tick,0x7ffdf681f424,9464929,0,0x0,8
tick,0x7ffdf681f424,9466955,0,0x0,8
tick,0x7ffdf681f424,9468997,0,0x0,8
tick,0x7ffdf681f424,9471161,0,0x0,8
tick,0x7ffdf681f424,9472879,0,0x0,8
tick,0x7ffdf681f424,9474847,0,0x0,8
tick,0x7ffdf681f424,9476879,0,0x0,8
tick,0x7ffdf681f424,9478946,0,0x0,8
tick,0x7ffdf681f424,9480951,0,0x0,8
tick,0x7ffdf681f424,9482936,0,0x0,8
tick,0x7ffdf681f424,9484907,0,0x0,8
tick,0x7ffdf681f424,9486958,0,0x0,8
tick,0x7ffdf681f424,9488998,0,0x0,8
tick,0x7ffdf681f424,9490947,0,0x0,8
tick,0x7ffdf681f424,9492881,0,0x0,8
tick,0x7ffdf681f424,9494868,0,0x0,8
tick,0x7ffdf681f424,9496947,0,0x0,8
tick,0x7ffdf681f424,9498945,0,0x0,8
tick,0x7ffdf681f424,9500885,0,0x0,8
tick,0x7ffdf681f424,9503059,0,0x0,8
tick,0x7ffdf681f424,9504936,0,0x0,8
tick,0x7ffdf681f424,9506941,0,0x0,8
tick,0x7ffdf681f424,9508844,0,0x0,8
tick,0x7ffdf681f424,9510849,0,0x0,8
tick,0x7ffdf681f424,9512852,0,0x0,8
tick,0x7ffdf681f424,9514922,0,0x0,8
tick,0x7ffdf681f424,9516806,0,0x0,8
tick,0x7ffdf681f424,9518854,0,0x0,8
tick,0x7ffdf681f424,9520886,0,0x0,8
tick,0x7ffdf681f424,9522884,0,0x0,8
tick,0x7ffdf681f424,9524912,0,0x0,8
tick,0x7ffdf681f424,9526834,0,0x0,8
tick,0x7ffdf681f424,9528887,0,0x0,8
tick,0x7ffdf681f424,9530855,0,0x0,8
tick,0x7ffdf681f424,9532867,0,0x0,8
tick,0x7ffdf681f424,9534745,0,0x0,8
tick,0x7ffdf681f424,9536903,0,0x0,8
tick,0x7ffdf681f424,9538856,0,0x0,8
tick,0x7ffdf681f424,9540829,0,0x0,8
tick,0x7ffdf681f424,9542762,0,0x0,8
tick,0x7ffdf681f424,9544778,0,0x0,8
tick,0x7ffdf681f424,9546813,0,0x0,8
tick,0x7ffdf681f424,9548827,0,0x0,8
tick,0x7ffdf681f424,9550766,0,0x0,8
tick,0x7ffdf681f424,9552820,0,0x0,8
tick,0x7ffdf681f424,9554807,0,0x0,8
tick,0x7ffdf681f424,9556788,0,0x0,8
tick,0x7ffdf681f424,9558715,0,0x0,8
tick,0x7ffdf681f424,9560692,0,0x0,8
tick,0x7ffdf681f424,9562828,0,0x0,8
tick,0x7ffdf681f424,9564763,0,0x0,8
tick,0x7ffdf681f424,9566764,0,0x0,8
tick,0x7ffdf681f424,9568756,0,0x0,8
tick,0x7ffdf681f424,9570748,0,0x0,8
tick,0x7ffdf681f424,9572632,0,0x0,8
tick,0x7ffdf681f424,9574733,0,0x0,8
tick,0x7ffdf681f424,9576728,0,0x0,8
tick,0x7ffdf681f424,9578726,0,0x0,8
tick,0x7ffdf681f424,9580727,0,0x0,8
tick,0x7ffdf681f424,9582715,0,0x0,8
tick,0x7ffdf681f424,9584609,0,0x0,8
tick,0x7ffdf681f424,9586621,0,0x0,8
tick,0x7ffdf681f424,9588709,0,0x0,8
tick,0x7ffdf681f424,9590695,0,0x0,8
tick,0x7ffdf681f424,9592637,0,0x0,8
tick,0x7ffdf681f424,9594617,0,0x0,8
tick,0x7ffdf681f424,9596667,0,0x0,8
tick,0x7ffdf681f424,9598664,0,0x0,8
tick,0x7ffdf681f424,9600562,0,0x0,8
tick,0x7ffdf681f424,9602641,0,0x0,8
tick,0x7ffdf681f424,9604659,0,0x0,8
tick,0x7ffdf681f424,9606654,0,0x0,8
tick,0x7ffdf681f424,9608541,0,0x0,8
tick,0x7ffdf681f424,9610598,0,0x0,8
tick,0x7ffdf681f424,9612594,0,0x0,8
tick,0x7ffdf681f424,9614564,0,0x0,8
tick,0x7ffdf681f424,9616514,0,0x0,8
tick,0x7ffdf681f424,9618552,0,0x0,8
tick,0x7ffdf681f424,9620612,0,0x0,8
tick,0x7ffdf681f424,9622609,0,0x0,8
tick,0x7ffdf681f424,9624585,0,0x0,8
tick,0x7ffdf681f424,9626535,0,0x0,8
tick,0x7ffdf681f424,9628600,0,0x0,8
tick,0x7ffdf681f424,9630585,0,0x0,8
tick,0x7ffdf681f424,9632555,0,0x0,8
tick,0x7ffdf681f424,9634485,0,0x0,8
tick,0x7ffdf681f424,9636459,0,0x0,8
tick,0x7ffdf681f424,9638567,0,0x0,8
tick,0x7ffdf681f424,9640557,0,0x0,8
tick,0x7ffdf681f424,9642506,0,0x0,8
tick,0x7ffdf681f424,9644537,0,0x0,8
tick,0x7ffdf681f424,9646546,0,0x0,8
tick,0x7ffdf681f424,9648540,0,0x0,8
tick,0x7ffdf681f424,9650421,0,0x0,8
tick,0x7ffdf681f424,9652453,0,0x0,8
tick,0x7ffdf681f424,9654471,0,0x0,8
tick,0x7ffdf681f424,9656434,0,0x0,8
tick,0x7ffdf681f424,9658419,0,0x0,8
tick,0x7ffdf681f424,9660461,0,0x0,8
tick,0x7ffdf681f424,9662392,0,0x0,8
tick,0x7ffdf681f424,9664434,0,0x0,8
tick,0x7ffdf681f424,9666379,0,0x0,8
tick,0x7ffdf681f424,9668391,0,0x0,8
tick,0x7ffdf681f424,9670416,0,0x0,8
tick,0x7ffdf681f424,9672394,0,0x0,8
tick,0x7ffdf681f424,9674376,0,0x0,8
tick,0x7ffdf681f424,9676408,0,0x0,8
tick,0x7ffdf681f424,9678354,0,0x0,8
tick,0x7ffdf681f424,9680339,0,0x0,8
tick,0x7ffdf681f424,9682352,0,0x0,8
tick,0x7ffdf681f424,9684376,0,0x0,8
tick,0x7ffdf681f424,9686334,0,0x0,8
tick,0x7ffdf681f424,9688320,0,0x0,8
tick,0x7ffdf681f424,9690336,0,0x0,8
tick,0x7ffdf681f424,9692361,0,0x0,8
tick,0x7ffdf681f424,9694325,0,0x0,8
tick,0x7ffdf681f424,9696299,0,0x0,8
tick,0x7ffdf681f424,9698292,0,0x0,8
tick,0x7ffdf681f424,9700289,0,0x0,8
tick,0x7ffdf681f424,9702293,0,0x0,8
tick,0x7ffdf681f424,9704278,0,0x0,8
tick,0x7ffdf681f424,9706275,0,0x0,8
tick,0x7ffdf681f424,9708272,0,0x0,8
tick,0x7ffdf681f424,9710294,0,0x0,8
tick,0x7ffdf681f424,9712284,0,0x0,8
tick,0x7ffdf681f424,9714253,0,0x0,8
tick,0x7ffdf681f424,9716244,0,0x0,8
tick,0x7ffdf681f424,9718304,0,0x0,8
tick,0x7ffdf681f424,9720239,0,0x0,8
tick,0x7ffdf681f424,9722226,0,0x0,8
tick,0x7ffdf681f424,9724246,0,0x0,8
tick,0x7ffdf681f424,9726259,0,0x0,8
tick,0x7ffdf681f424,9728216,0,0x0,8
tick,0x7ffdf681f424,9730227,0,0x0,8
tick,0x7ffdf681f424,9732233,0,0x0,8
tick,0x7ffdf681f424,9734234,0,0x0,8
tick,0x7ffdf681f424,9736206,0,0x0,8
tick,0x7ffdf681f424,9738193,0,0x0,8
tick,0x7ffdf681f424,9740178,0,0x0,8
tick,0x7ffdf681f424,9742160,0,0x0,8
tick,0x7ffdf681f424,9744202,0,0x0,8
tick,0x7ffdf681f424,9746187,0,0x0,8
tick,0x7ffdf681f424,9748160,0,0x0,8
tick,0x7ffdf681f424,9750179,0,0x0,8
tick,0x7ffdf681f424,9752199,0,0x0,8
tick,0x7ffdf681f424,9754122,0,0x0,8
tick,0x7ffdf681f424,9756169,0,0x0,8
tick,0x7ffdf681f424,9758133,0,0x0,8
tick,0x7ffdf681f424,9760183,0,0x0,8
tick,0x7ffdf681f424,9762153,0,0x0,8
tick,0x7ffdf681f424,9764139,0,0x0,8
tick,0x7ffdf681f424,9766101,0,0x0,8
tick,0x7ffdf681f424,9768105,0,0x0,8
tick,0x7ffdf681f424,9770160,0,0x0,8
tick,0x7ffdf681f424,9772156,0,0x0,8
tick,0x7ffdf681f424,9774118,0,0x0,8
tick,0x7ffdf681f424,9776106,0,0x0,8
tick,0x7ffdf681f424,9778094,0,0x0,8
tick,0x7ffdf681f424,9780142,0,0x0,8
tick,0x7ffdf681f424,9782078,0,0x0,8
tick,0x7ffdf681f424,9784144,0,0x0,8
tick,0x7ffdf681f424,9786101,0,0x0,8
tick,0x7ffdf681f424,9788058,0,0x0,8
tick,0x7ffdf681f424,9790069,0,0x0,8
tick,0x7ffdf681f424,9792061,0,0x0,8
tick,0x7ffdf681f424,9794041,0,0x0,8
tick,0x7ffdf681f424,9796073,0,0x0,8
tick,0x7ffdf681f424,9798029,0,0x0,8
tick,0x7ffdf681f424,9800057,0,0x0,8
tick,0x7ffdf681f424,9802032,0,0x0,8
tick,0x7ffdf681f424,9804009,0,0x0,8
tick,0x7ffdf681f424,9806012,0,0x0,8
tick,0x7ffdf681f424,9808029,0,0x0,8
tick,0x7ffdf681f424,9810074,0,0x0,8
tick,0x7ffdf681f424,9812037,0,0x0,8
tick,0x7ffdf681f424,9813986,0,0x0,8
tick,0x7ffdf681f424,9815976,0,0x0,8
tick,0x7ffdf681f424,9818066,0,0x0,8
tick,0x7ffdf681f424,9820016,0,0x0,8
tick,0x7ffdf681f424,9821990,0,0x0,8
tick,0x7ffdf681f424,9823989,0,0x0,8
tick,0x7ffdf681f424,9826000,0,0x0,8
tick,0x7ffdf681f424,9827973,0,0x0,8
tick,0x7ffdf681f424,9829957,0,0x0,8
tick,0x7ffdf681f424,9831995,0,0x0,8
tick,0x7ffdf681f424,9833916,0,0x0,8
tick,0x7ffdf681f424,9835971,0,0x0,8
tick,0x7ffdf681f424,9837987,0,0x0,8
tick,0x7ffdf681f424,9839997,0,0x0,8
tick,0x7ffdf681f424,9841898,0,0x0,8
tick,0x7ffdf681f424,9843978,0,0x0,8
tick,0x7ffdf681f424,9845997,0,0x0,8
tick,0x7ffdf681f424,9847892,0,0x0,8
tick,0x7ffdf681f424,9849927,0,0x0,8
tick,0x7ffdf681f424,9851965,0,0x0,8
tick,0x7ffdf681f424,9853919,0,0x0,8
tick,0x7ffdf681f424,9855999,0,0x0,8
tick,0x7ffdf681f424,9857948,0,0x0,8
tick,0x7ffdf681f424,9859929,0,0x0,8
tick,0x7ffdf681f424,9861874,0,0x0,8
tick,0x7ffdf681f424,9863918,0,0x0,8
tick,0x7ffdf681f424,9865920,0,0x0,8
tick,0x7ffdf681f424,9867888,0,0x0,8
tick,0x7ffdf681f424,9869864,0,0x0,8
tick,0x7ffdf681f424,9871919,0,0x0,8
tick,0x7ffdf681f424,9873944,0,0x0,8
tick,0x7ffdf681f424,9875880,0,0x0,8
tick,0x7ffdf681f424,9877946,0,0x0,8
tick,0x7ffdf681f424,9879931,0,0x0,8
tick,0x7ffdf681f424,9881920,0,0x0,8
tick,0x7ffdf681f424,9883803,0,0x0,8
tick,0x7ffdf681f424,9885838,0,0x0,8
tick,0x7ffdf681f424,9887898,0,0x0,8
tick,0x7ffdf681f424,9889895,0,0x0,8
tick,0x7ffdf681f424,9891870,0,0x0,8
tick,0x7ffdf681f424,9893830,0,0x0,8
tick,0x7ffdf681f424,9895904,0,0x0,8
tick,0x7ffdf681f424,9897870,0,0x0,8
tick,0x7ffdf681f424,9899890,0,0x0,8
tick,0x7ffdf681f424,9901817,0,0x0,8
tick,0x7ffdf681f424,9903911,0,0x0,8
tick,0x7ffdf681f424,9905878,0,0x0,8
tick,0x7ffdf681f424,9907875,0,0x0,8
tick,0x7ffdf681f424,9909786,0,0x0,8
tick,0x7ffdf681f424,9911750,0,0x0,8
tick,0x7ffdf681f424,9913826,0,0x0,8
tick,0x7ffdf681f424,9915826,0,0x0,8
tick,0x7ffdf681f424,9917740,0,0x0,8
tick,0x7ffdf681f424,9919837,0,0x0,8
tick,0x7ffdf681f424,9921800,0,0x0,8
tick,0x7ffdf681f424,9923697,0,0x0,8
tick,0x7ffdf681f424,9925701,0,0x0,8
tick,0x7ffdf681f424,9927804,0,0x0,8
tick,0x7ffdf681f424,9929786,0,0x0,8
tick,0x7ffdf681f424,9931814,0,0x0,8
tick,0x7ffdf681f424,9933636,0,0x0,8
tick,0x7ffdf681f424,9935668,0,0x0,8
tick,0x7ffdf681f424,9937808,0,0x0,8
tick,0x7ffdf681f424,9939767,0,0x0,8
tick,0x7ffdf681f424,9941759,0,0x0,8
tick,0x7ffdf681f424,9943618,0,0x0,8
tick,0x7ffdf681f424,9945734,0,0x0,8
tick,0x7ffdf681f424,9947745,0,0x0,8
tick,0x7ffdf681f424,9949732,0,0x0,8
tick,0x7ffdf681f424,9951669,0,0x0,8
tick,0x7ffdf681f424,9953726,0,0x0,8
tick,0x7ffdf681f424,9955723,0,0x0,8
tick,0x7ffdf681f424,9957599,0,0x0,8
tick,0x7ffdf681f424,9959647,0,0x0,8
tick,0x7ffdf681f424,9961593,0,0x0,8
tick,0x7ffdf681f424,9963709,0,0x0,8
tick,0x7ffdf681f424,9965674,0,0x0,8
tick,0x7ffdf681f424,9967611,0,0x0,8
tick,0x7ffdf681f424,9969568,0,0x0,8
tick,0x7ffdf681f424,9971675,0,0x0,8
tick,0x7ffdf681f424,9973679,0,0x0,8
tick,0x7ffdf681f424,9975523,0,0x0,8
tick,0x7ffdf681f424,9977723,0,0x0,8
tick,0x7ffdf681f424,9979657,0,0x0,8
tick,0x7ffdf681f424,9981649,0,0x0,8
tick,0x7ffdf681f424,9983518,0,0x0,8
tick,0x7ffdf681f424,9985533,0,0x0,8
tick,0x7ffdf681f424,9987616,0,0x0,8
tick,0x7ffdf681f424,9989627,0,0x0,8
tick,0x7ffdf681f424,9991622,0,0x0,8
tick,0x7ffdf681f424,9993561,0,0x0,8
tick,0x7ffdf681f424,9995521,0,0x0,8
tick,0x7ffdf681f424,9997523,0,0x0,8
tick,0x7ffdf681f424,9999594,0,0x0,8
tick,0x7ffdf681f424,10001531,0,0x0,8
tick,0x7ffdf681f424,10003591,0,0x0,8
tick,0x7ffdf681f424,10005558,0,0x0,8
tick,0x7ffdf681f424,10007569,0,0x0,8
tick,0x7ffdf681f424,10009478,0,0x0,8
tick,0x7ffdf681f424,10011522,0,0x0,8
tick,0x7ffdf681f424,10013451,0,0x0,8
tick,0x7ffdf681f424,10015554,0,0x0,8
tick,0x7ffdf681f424,10017497,0,0x0,8
tick,0x7ffdf681f424,10019482,0,0x0,8
tick,0x7ffdf681f424,10021539,0,0x0,8
tick,0x7ffdf681f424,10023538,0,0x0,8
tick,0x7ffdf681f424,10025456,0,0x0,8
tick,0x7ffdf681f424,10027446,0,0x0,8
tick,0x7ffdf681f424,10029547,0,0x0,8
tick,0x7ffdf681f424,10031542,0,0x0,8
tick,0x7ffdf681f424,10033503,0,0x0,8
tick,0x7ffdf681f424,10035404,0,0x0,8
tick,0x7ffdf681f424,10037503,0,0x0,8
tick,0x7ffdf681f424,10039504,0,0x0,8
tick,0x7ffdf681f424,10041482,0,0x0,8
tick,0x7ffdf681f424,10043447,0,0x0,8
tick,0x7ffdf681f424,10045479,0,0x0,8
tick,0x7ffdf681f424,10047485,0,0x0,8
tick,0x7ffdf681f424,10049478,0,0x0,8
tick,0x7ffdf681f424,10051363,0,0x0,8
tick,0x7ffdf681f424,10053486,0,0x0,8
tick,0x7ffdf681f424,10055452,0,0x0,8
tick,0x7ffdf681f424,10057447,0,0x0,8
tick,0x7ffdf681f424,10059383,0,0x0,8
tick,0x7ffdf681f424,10061334,0,0x0,8
tick,0x7ffdf681f424,10063432,0,0x0,8
tick,0x7ffdf681f424,10065419,0,0x0,8
tick,0x7ffdf681f424,10067372,0,0x0,8
tick,0x7ffdf681f424,10069419,0,0x0,8
tick,0x7ffdf681f424,10071436,0,0x0,8
tick,0x7ffdf681f424,10073300,0,0x0,8
tick,0x7ffdf681f424,10075361,0,0x0,8
tick,0x7ffdf681f424,10077286,0,0x0,8
tick,0x7ffdf681f424,10079282,0,0x0,8
tick,0x7ffdf681f424,10081386,0,0x0,8
tick,0x7ffdf681f424,10083471,0,0x0,8
tick,0x7ffdf681f424,10085326,0,0x0,8
tick,0x7ffdf681f424,10087257,0,0x0,8
tick,0x7ffdf681f424,10089349,0,0x0,8
tick,0x7ffdf681f424,10091250,0,0x0,8
tick,0x7ffdf681f424,10093303,0,0x0,8
tick,0x7ffdf681f424,10095345,0,0x0,8
tick,0x7ffdf681f424,10097370,0,0x0,8
tick,0x7ffdf681f424,10099338,0,0x0,8
tick,0x7ffdf681f424,10101283,0,0x0,8
tick,0x7ffdf681f424,10103215,0,0x0,8
tick,0x7ffdf681f424,10105218,0,0x0,8
tick,0x7ffdf681f424,10107314,0,0x0,8
tick,0x7ffdf681f424,10109253,0,0x0,8
tick,0x7ffdf681f424,10111224,0,0x0,8
tick,0x7ffdf681f424,10113189,0,0x0,8
tick,0x7ffdf681f424,10115199,0,0x0,8
tick,0x7ffdf681f424,10117249,0,0x0,8
tick,0x7ffdf681f424,10119183,0,0x0,8
tick,0x7ffdf681f424,10121233,0,0x0,8
tick,0x7ffdf681f424,10123201,0,0x0,8
tick,0x7ffdf681f424,10125180,0,0x0,8
tick,0x7ffdf681f424,10127188,0,0x0,8
tick,0x7ffdf681f424,10129169,0,0x0,8
tick,0x7ffdf681f424,10131138,0,0x0,8
tick,0x7ffdf681f424,10133143,0,0x0,8
tick,0x7ffdf681f424,10135115,0,0x0,8
tick,0x7ffdf681f424,10137126,0,0x0,8
tick,0x7ffdf681f424,10139145,0,0x0,8
tick,0x7ffdf681f424,10141107,0,0x0,8
tick,0x7ffdf681f424,10143203,0,0x0,8
tick,0x7ffdf681f424,10145101,0,0x0,8
tick,0x7ffdf681f424,10147128,0,0x0,8
tick,0x7ffdf681f424,10149094,0,0x0,8
tick,0x7ffdf681f424,10151162,0,0x0,8
tick,0x7ffdf681f424,10153113,0,0x0,8
tick,0x7ffdf681f424,10155094,0,0x0,8
tick,0x7ffdf681f424,10157072,0,0x0,8
tick,0x7ffdf681f424,10159033,0,0x0,8
tick,0x7ffdf681f424,10161063,0,0x0,8
tick,0x7ffdf681f424,10163063,0,0x0,8
tick,0x7ffdf681f424,10165122,0,0x0,8
tick,0x7ffdf681f424,10167124,0,0x0,8
tick,0x7ffdf681f424,10169078,0,0x0,8
tick,0x7ffdf681f424,10171107,0,0x0,8
tick,0x7ffdf681f424,10173039,0,0x0,8
tick,0x7ffdf681f424,10175037,0,0x0,8
tick,0x7ffdf681f424,10177022,0,0x0,8
tick,0x7ffdf681f424,10179011,0,0x0,8
tick,0x7ffdf681f424,10181066,0,0x0,8
tick,0x7ffdf681f424,10183053,0,0x0,8
tick,0x7ffdf681f424,10185000,0,0x0,8
tick,0x7ffdf681f424,10187038,0,0x0,8
tick,0x7ffdf681f424,10188987,0,0x0,8
tick,0x7ffdf681f424,10190986,0,0x0,8
tick,0x7ffdf681f424,10192983,0,0x0,8
tick,0x7ffdf681f424,10194971,0,0x0,8
tick,0x7ffdf681f424,10196971,0,0x0,8
tick,0x7ffdf681f424,10198961,0,0x0,8
tick,0x7ffdf681f424,10200997,0,0x0,8
tick,0x7ffdf681f424,10203000,0,0x0,8
tick,0x7ffdf681f424,10204968,0,0x0,8
tick,0x7ffdf681f424,10206991,0,0x0,8
tick,0x7ffdf681f424,10208936,0,0x0,8
tick,0x7ffdf681f424,10210953,0,0x0,8
tick,0x7ffdf681f424,10212991,0,0x0,8
tick,0x7ffdf681f424,10214987,0,0x0,8
tick,0x7ffdf681f424,10216973,0,0x0,8
tick,0x7ffdf681f424,10218921,0,0x0,8
tick,0x7ffdf681f424,10220918,0,0x0,8
tick,0x7ffdf681f424,10222917,0,0x0,8
tick,0x7ffdf681f424,10224941,0,0x0,8
tick,0x7ffdf681f424,10226893,0,0x0,8
tick,0x7ffdf681f424,10228888,0,0x0,8
tick,0x7ffdf681f424,10230924,0,0x0,8
tick,0x7ffdf681f424,10232915,0,0x0,8
tick,0x7ffdf681f424,10234930,0,0x0,8
tick,0x7ffdf681f424,10236882,0,0x0,8
tick,0x7ffdf681f424,10238929,0,0x0,8
tick,0x7ffdf681f424,10240929,0,0x0,8
tick,0x7ffdf681f424,10242900,0,0x0,8
tick,0x7ffdf681f424,10244868,0,0x0,8
tick,0x7ffdf681f424,10246933,0,0x0,8
tick,0x7ffdf681f424,10248915,0,0x0,8
tick,0x7ffdf681f424,10250910,0,0x0,8
tick,0x7ffdf681f424,10252872,0,0x0,8
tick,0x7ffdf681f424,10254967,0,0x0,8
tick,0x7ffdf681f424,10256938,0,0x0,8
tick,0x7ffdf681f424,10258838,0,0x0,8
tick,0x7ffdf681f424,10260855,0,0x0,8
tick,0x7ffdf681f424,10262895,0,0x0,8
tick,0x7ffdf681f424,10264886,0,0x0,8
tick,0x7ffdf681f424,10266884,0,0x0,8
tick,0x7ffdf681f424,10268810,0,0x0,8
tick,0x7ffdf681f424,10270817,0,0x0,8
tick,0x7ffdf681f424,10272874,0,0x0,8
tick,0x7ffdf681f424,10274858,0,0x0,8
tick,0x7ffdf681f424,10276813,0,0x0,8
tick,0x7ffdf681f424,10278749,0,0x0,8
tick,0x7ffdf681f424,10280857,0,0x0,8
tick,0x7ffdf681f424,10282848,0,0x0,8
tick,0x7ffdf681f424,10284736,0,0x0,8
tick,0x7ffdf681f424,10286767,0,0x0,8
tick,0x7ffdf681f424,10288824,0,0x0,8
tick,0x7ffdf681f424,10290848,0,0x0,8
tick,0x7ffdf681f424,10292768,0,0x0,8
tick,0x7ffdf681f424,10294687,0,0x0,8
tick,0x7ffdf681f424,10296805,0,0x0,8
tick,0x7ffdf681f424,10298824,0,0x0,8
tick,0x7ffdf681f424,10300749,0,0x0,8
tick,0x7ffdf681f424,10302727,0,0x0,8
tick,0x7ffdf681f424,10304788,0,0x0,8
tick,0x7ffdf681f424,10306792,0,0x0,8
tick,0x7ffdf681f424,10308736,0,0x0,8
tick,0x7ffdf681f424,10310670,0,0x0,8
tick,0x7ffdf681f424,10312768,0,0x0,8
tick,0x7ffdf681f424,10314751,0,0x0,8
tick,0x7ffdf681f424,10316755,0,0x0,8
tick,0x7ffdf681f424,10318659,0,0x0,8
tick,0x7ffdf681f424,10320655,0,0x0,8
tick,0x7ffdf681f424,10322756,0,0x0,8
tick,0x7ffdf681f424,10324723,0,0x0,8
tick,0x7ffdf681f424,10326724,0,0x0,8
tick,0x7ffdf681f424,10328650,0,0x0,8
tick,0x7ffdf681f424,10330704,0,0x0,8
tick,0x7ffdf681f424,10332705,0,0x0,8
tick,0x7ffdf681f424,10334665,0,0x0,8
tick,0x7ffdf681f424,10336649,0,0x0,8
tick,0x7ffdf681f424,10338704,0,0x0,8
tick,0x7ffdf681f424,10340625,0,0x0,8
tick,0x7ffdf681f424,10342638,0,0x0,8
tick,0x7ffdf681f424,10344602,0,0x0,8
tick,0x7ffdf681f424,10346667,0,0x0,8
tick,0x7ffdf681f424,10348664,0,0x0,8
tick,0x7ffdf681f424,10350630,0,0x0,8
tick,0x7ffdf681f424,10352602,0,0x0,8
tick,0x7ffdf681f424,10354655,0,0x0,8
tick,0x7ffdf681f424,10356658,0,0x0,8
tick,0x7ffdf681f424,10358505,0,0x0,8
tick,0x7ffdf681f424,10360541,0,0x0,8
tick,0x7ffdf681f424,10362521,0,0x0,8
tick,0x7ffdf681f424,10364543,0,0x0,8
tick,0x7ffdf681f424,10366597,0,0x0,8
tick,0x7ffdf681f424,10368597,0,0x0,8
tick,0x7ffdf681f424,10370530,0,0x0,8
tick,0x7ffdf681f424,10372496,0,0x0,8
tick,0x7ffdf681f424,10374598,0,0x0,8
tick,0x7ffdf681f424,10376587,0,0x0,8
tick,0x7ffdf681f424,10378514,0,0x0,8
tick,0x7ffdf681f424,10380562,0,0x0,8
tick,0x7ffdf681f424,10382521,0,0x0,8
tick,0x7ffdf681f424,10384526,0,0x0,8
tick,0x7ffdf681f424,10386482,0,0x0,8
tick,0x7ffdf681f424,10388573,0,0x0,8
tick,0x7ffdf681f424,10390551,0,0x0,8
tick,0x7ffdf681f424,10392444,0,0x0,8
tick,0x7ffdf681f424,10394537,0,0x0,8
tick,0x7ffdf681f424,10396547,0,0x0,8
tick,0x7ffdf681f424,10398531,0,0x0,8
tick,0x7ffdf681f424,10400478,0,0x0,8
tick,0x7ffdf681f424,10402440,0,0x0,8
tick,0x7ffdf681f424,10404525,0,0x0,8
tick,0x7ffdf681f424,10406506,0,0x0,8
tick,0x7ffdf681f424,10408506,0,0x0,8
tick,0x7ffdf681f424,10410465,0,0x0,8
tick,0x7ffdf681f424,10412491,0,0x0,8
tick,0x7ffdf681f424,10414488,0,0x0,8
tick,0x7ffdf681f424,10416374,0,0x0,8
tick,0x7ffdf681f424,10418437,0,0x0,8
tick,0x7ffdf681f424,10420480,0,0x0,8
tick,0x7ffdf681f424,10422482,0,0x0,8
tick,0x7ffdf681f424,10424465,0,0x0,8
tick,0x7ffdf681f424,10426360,0,0x0,8
tick,0x7ffdf681f424,10428393,0,0x0,8
tick,0x7ffdf681f424,10430449,0,0x0,8
tick,0x7ffdf681f424,10432384,0,0x0,8
tick,0x7ffdf681f424,10434336,0,0x0,8
tick,0x7ffdf681f424,10436391,0,0x0,8
tick,0x7ffdf681f424,10438427,0,0x0,8
tick,0x7ffdf681f424,10440400,0,0x0,8
tick,0x7ffdf681f424,10442384,0,0x0,8
tick,0x7ffdf681f424,10444332,0,0x0,8
tick,0x7ffdf681f424,10446383,0,0x0,8
tick,0x7ffdf681f424,10448363,0,0x0,8
tick,0x7ffdf681f424,10450282,0,0x0,8
tick,0x7ffdf681f424,10452289,0,0x0,8
tick,0x7ffdf681f424,10454339,0,0x0,8
tick,0x7ffdf681f424,10456389,0,0x0,8
tick,0x7ffdf681f424,10458266,0,0x0,8
tick,0x7ffdf681f424,10460296,0,0x0,8
tick,0x7ffdf681f424,10462261,0,0x0,8
tick,0x7ffdf681f424,10464282,0,0x0,8
tick,0x7ffdf681f424,10466294,0,0x0,8
tick,0x7ffdf681f424,10468252,0,0x0,8
tick,0x7ffdf681f424,10470241,0,0x0,8
tick,0x7ffdf681f424,10472240,0,0x0,8
tick,0x7ffdf681f424,10474222,0,0x0,8
tick,0x7ffdf681f424,10476299,0,0x0,8
tick,0x7ffdf681f424,10478222,0,0x0,8
tick,0x7ffdf681f424,10480217,0,0x0,8
tick,0x7ffdf681f424,10482208,0,0x0,8
tick,0x7ffdf681f424,10484263,0,0x0,8
tick,0x7ffdf681f424,10486224,0,0x0,8
tick,0x7ffdf681f424,10488198,0,0x0,8
tick,0x7ffdf681f424,10490179,0,0x0,8
tick,0x7ffdf681f424,10492221,0,0x0,8
tick,0x7ffdf681f424,10494179,0,0x0,8
tick,0x7ffdf681f424,10496159,0,0x0,8
tick,0x7ffdf681f424,10498163,0,0x0,8
tick,0x7ffdf681f424,10500156,0,0x0,8
tick,0x7ffdf681f424,10502214,0,0x0,8
tick,0x7ffdf681f424,10504197,0,0x0,8
tick,0x7ffdf681f424,10506205,0,0x0,8
tick,0x7ffdf681f424,10508181,0,0x0,8
tick,0x7ffdf681f424,10510153,0,0x0,8
tick,0x7ffdf681f424,10512147,0,0x0,8
tick,0x7ffdf681f424,10514117,0,0x0,8
tick,0x7ffdf681f424,10516176,0,0x0,8
tick,0x7ffdf681f424,10518182,0,0x0,8
tick,0x7ffdf681f424,10520092,0,0x0,8
tick,0x7ffdf681f424,10522122,0,0x0,8
tick,0x7ffdf681f424,10524105,0,0x0,8
tick,0x7ffdf681f424,10526185,0,0x0,8
tick,0x7ffdf681f424,10528120,0,0x0,8
tick,0x7ffdf681f424,10530118,0,0x0,8
tick,0x7ffdf681f424,10532053,0,0x0,8
tick,0x7ffdf681f424,10534158,0,0x0,8
tick,0x7ffdf681f424,10536071,0,0x0,8
tick,0x7ffdf681f424,10538069,0,0x0,8
tick,0x7ffdf681f424,10540078,0,0x0,8
tick,0x7ffdf681f424,10542132,0,0x0,8
tick,0x7ffdf681f424,10544058,0,0x0,8
tick,0x7ffdf681f424,10546024,0,0x0,8
tick,0x7ffdf681f424,10548062,0,0x0,8
tick,0x7ffdf681f424,10550016,0,0x0,8
tick,0x7ffdf681f424,10552080,0,0x0,8
tick,0x7ffdf681f424,10554036,0,0x0,8
tick,0x7ffdf681f424,10556031,0,0x0,8
tick,0x7ffdf681f424,10557998,0,0x0,8
tick,0x7ffdf681f424,10560096,0,0x0,8
tick,0x7ffdf681f424,10562121,0,0x0,8
tick,0x7ffdf681f424,10563984,0,0x0,8
tick,0x7ffdf681f424,10566079,0,0x0,8
tick,0x7ffdf681f424,10568078,0,0x0,8
tick,0x7ffdf681f424,10570101,0,0x0,8
tick,0x7ffdf681f424,10571973,0,0x0,8
tick,0x7ffdf681f424,10574077,0,0x0,8
tick,0x7ffdf681f424,10576016,0,0x0,8
tick,0x7ffdf681f424,10578062,0,0x0,8
tick,0x7ffdf681f424,10580041,0,0x0,8
tick,0x7ffdf681f424,10581977,0,0x0,8
tick,0x7ffdf681f424,10583986,0,0x0,8
tick,0x7ffdf681f424,10585990,0,0x0,8
tick,0x7ffdf681f424,10588029,0,0x0,8
tick,0x7ffdf681f424,10590022,0,0x0,8
tick,0x7ffdf681f424,10591953,0,0x0,8
tick,0x7ffdf681f424,10593911,0,0x0,8
tick,0x7ffdf681f424,10596003,0,0x0,8
tick,0x7ffdf681f424,10598016,0,0x0,8
tick,0x7ffdf681f424,10599996,0,0x0,8
tick,0x7ffdf681f424,10601888,0,0x0,8
tick,0x7ffdf681f424,10603987,0,0x0,8
tick,0x7ffdf681f424,10605982,0,0x0,8
tick,0x7ffdf681f424,10607990,0,0x0,8
tick,0x7ffdf681f424,10609924,0,0x0,8
tick,0x7ffdf681f424,10611999,0,0x0,8
tick,0x7ffdf681f424,10613986,0,0x0,8
tick,0x7ffdf681f424,10615913,0,0x0,8
tick,0x7ffdf681f424,10617903,0,0x0,8
tick,0x7ffdf681f424,10619878,0,0x0,8
tick,0x7ffdf681f424,10621938,0,0x0,8
tick,0x7ffdf681f424,10623940,0,0x0,8
tick,0x7ffdf681f424,10625909,0,0x0,8
tick,0x7ffdf681f424,10627806,0,0x0,8
tick,0x7ffdf681f424,10629947,0,0x0,8
tick,0x7ffdf681f424,10631911,0,0x0,8
tick,0x7ffdf681f424,10633801,0,0x0,8
tick,0x7ffdf681f424,10635832,0,0x0,8
tick,0x7ffdf681f424,10637896,0,0x0,8
tick,0x7ffdf681f424,10639893,0,0x0,8
tick,0x7ffdf681f424,10641900,0,0x0,8
tick,0x7ffdf681f424,10643827,0,0x0,8
tick,0x7ffdf681f424,10645902,0,0x0,8
tick,0x7ffdf681f424,10647872,0,0x0,8
tick,0x7ffdf681f424,10649863,0,0x0,8
tick,0x7ffdf681f424,10651771,0,0x0,8
tick,0x7ffdf681f424,10653852,0,0x0,8
tick,0x7ffdf681f424,10655855,0,0x0,8
tick,0x7ffdf681f424,10657840,0,0x0,8
tick,0x7ffdf681f424,10659753,0,0x0,8
tick,0x7ffdf681f424,10661856,0,0x0,8
tick,0x7ffdf681f424,10663851,0,0x0,8
tick,0x7ffdf681f424,10665823,0,0x0,8
tick,0x7ffdf681f424,10667735,0,0x0,8
tick,0x7ffdf681f424,10669836,0,0x0,8
tick,0x7ffdf681f424,10671808,0,0x0,8
tick,0x7ffdf681f424,10673811,0,0x0,8
tick,0x7ffdf681f424,10675753,0,0x0,8
tick,0x7ffdf681f424,10677820,0,0x0,8
tick,0x7ffdf681f424,10679787,0,0x0,8
tick,0x7ffdf681f424,10681778,0,0x0,8
tick,0x7ffdf681f424,10683738,0,0x0,8
tick,0x7ffdf681f424,10685700,0,0x0,8
tick,0x7ffdf681f424,10687700,0,0x0,8
tick,0x7ffdf681f424,10689708,0,0x0,8
tick,0x7ffdf681f424,10691767,0,0x0,8
tick,0x7ffdf681f424,10693686,0,0x0,8
tick,0x7ffdf681f424,10695754,0,0x0,8
tick,0x7ffdf681f424,10697737,0,0x0,8
tick,0x7ffdf681f424,10699731,0,0x0,8
tick,0x7ffdf681f424,10701645,0,0x0,8
tick,0x7ffdf681f424,10703713,0,0x0,8
tick,0x7ffdf681f424,10705716,0,0x0,8
tick,0x7ffdf681f424,10707716,0,0x0,8
tick,0x7ffdf681f424,10709615,0,0x0,8
tick,0x7ffdf681f424,10711629,0,0x0,8
tick,0x7ffdf681f424,10713687,0,0x0,8
tick,0x7ffdf681f424,10715687,0,0x0,8
tick,0x7ffdf681f424,10717636,0,0x0,8
tick,0x7ffdf681f424,10719694,0,0x0,8
tick,0x7ffdf681f424,10721671,0,0x0,8
tick,0x7ffdf681f424,10723703,0,0x0,8
tick,0x7ffdf681f424,10725632,0,0x0,8
tick,0x7ffdf681f424,10727639,0,0x0,8
tick,0x7ffdf681f424,10729663,0,0x0,8
tick,0x7ffdf681f424,10731640,0,0x0,8
tick,0x7ffdf681f424,10733629,0,0x0,8
tick,0x7ffdf681f424,10735525,0,0x0,8
tick,0x7ffdf681f424,10737634,0,0x0,8
tick,0x7ffdf681f424,10739638,0,0x0,8
tick,0x7ffdf681f424,10741619,0,0x0,8
tick,0x7ffdf681f424,10743537,0,0x0,8
tick,0x7ffdf681f424,10745613,0,0x0,8
tick,0x7ffdf681f424,10747500,0,0x0,8
tick,0x7ffdf681f424,10749597,0,0x0,8
tick,0x7ffdf681f424,10751525,0,0x0,8
tick,0x7ffdf681f424,10753585,0,0x0,8
tick,0x7ffdf681f424,10755606,0,0x0,8
tick,0x7ffdf681f424,10757575,0,0x0,8
tick,0x7ffdf681f424,10759470,0,0x0,8
tick,0x7ffdf681f424,10761600,0,0x0,8
tick,0x7ffdf681f424,10763559,0,0x0,8
tick,0x7ffdf681f424,10765456,0,0x0,8
tick,0x7ffdf681f424,10767522,0,0x0,8
tick,0x7ffdf681f424,10769436,0,0x0,8
tick,0x7ffdf681f424,10771525,0,0x0,8
tick,0x7ffdf681f424,10773530,0,0x0,8
tick,0x7ffdf681f424,10775510,0,0x0,8
tick,0x7ffdf681f424,10777417,0,0x0,8
tick,0x7ffdf681f424,10779551,0,0x0,8
tick,0x7ffdf681f424,10781511,0,0x0,8
tick,0x7ffdf681f424,10783521,0,0x0,8
tick,0x7ffdf681f424,10785463,0,0x0,8
tick,0x7ffdf681f424,10787496,0,0x0,8
tick,0x7ffdf681f424,10789504,0,0x0,8
tick,0x7ffdf681f424,10791479,0,0x0,8
tick,0x7ffdf681f424,10793413,0,0x0,8
tick,0x7ffdf681f424,10795486,0,0x0,8
tick,0x7ffdf681f424,10797469,0,0x0,8
tick,0x7ffdf681f424,10799489,0,0x0,8
tick,0x7ffdf681f424,10801424,0,0x0,8
tick,0x7ffdf681f424,10803452,0,0x0,8
tick,0x7ffdf681f424,10805462,0,0x0,8
tick,0x7ffdf681f424,10807445,0,0x0,8
tick,0x7ffdf681f424,10809413,0,0x0,8
tick,0x7ffdf681f424,10811460,0,0x0,8
tick,0x7ffdf681f424,10813426,0,0x0,8
tick,0x7ffdf681f424,10815421,0,0x0,8
tick,0x7ffdf681f424,10817305,0,0x0,8
tick,0x7ffdf681f424,10819424,0,0x0,8
tick,0x7ffdf681f424,10821416,0,0x0,8
tick,0x7ffdf681f424,10823394,0,0x0,8
tick,0x7ffdf681f424,10825329,0,0x0,8
tick,0x7ffdf681f424,10827323,0,0x0,8
tick,0x7ffdf681f424,10829384,0,0x0,8
tick,0x7ffdf681f424,10831381,0,0x0,8
tick,0x7ffdf681f424,10833374,0,0x0,8
tick,0x7ffdf681f424,10835271,0,0x0,8
tick,0x7ffdf681f424,10837363,0,0x0,8
tick,0x7ffdf681f424,10839410,0,0x0,8
tick,0x7ffdf681f424,10841251,0,0x0,8
tick,0x7ffdf681f424,10843330,0,0x0,8
tick,0x7ffdf681f424,10845334,0,0x0,8
tick,0x7ffdf681f424,10847335,0,0x0,8
tick,0x7ffdf681f424,10849346,0,0x0,8
tick,0x7ffdf681f424,10851293,0,0x0,8
tick,0x7ffdf681f424,10853247,0,0x0,8
tick,0x7ffdf681f424,10855314,0,0x0,8
tick,0x7ffdf681f424,10857310,0,0x0,8
tick,0x7ffdf681f424,10859291,0,0x0,8
tick,0x7ffdf681f424,10861338,0,0x0,8
tick,0x7ffdf681f424,10863320,0,0x0,8
tick,0x7ffdf681f424,10865332,0,0x0,8
tick,0x7ffdf681f424,10867237,0,0x0,8
tick,0x7ffdf681f424,10869203,0,0x0,8
tick,0x7ffdf681f424,10871286,0,0x0,8
tick,0x7ffdf681f424,10873274,0,0x0,8
tick,0x7ffdf681f424,10875261,0,0x0,8
tick,0x7ffdf681f424,10877158,0,0x0,8
tick,0x7ffdf681f424,10879158,0,0x0,8
tick,0x7ffdf681f424,10881239,0,0x0,8
tick,0x7ffdf681f424,10883203,0,0x0,8
tick,0x7ffdf681f424,10885166,0,0x0,8
tick,0x7ffdf681f424,10887151,0,0x0,8
tick,0x7ffdf681f424,10889145,0,0x0,8
tick,0x7ffdf681f424,10891120,0,0x0,8
tick,0x7ffdf681f424,10893210,0,0x0,8
tick,0x7ffdf681f424,10895131,0,0x0,8
tick,0x7ffdf681f424,10897096,0,0x0,8
tick,0x7ffdf681f424,10899155,0,0x0,8
tick,0x7ffdf681f424,10901266,0,0x0,8
tick,0x7ffdf681f424,10903120,0,0x0,8
tick,0x7ffdf681f424,10905110,0,0x0,8
tick,0x7ffdf681f424,10907096,0,0x0,8
tick,0x7ffdf681f424,10909013,0,0x0,8
tick,0x7ffdf681f424,10911149,0,0x0,8
tick,0x7ffdf681f424,10913051,0,0x0,8
tick,0x7ffdf681f424,10915071,0,0x0,8
tick,0x7ffdf681f424,10917097,0,0x0,8
tick,0x7ffdf681f424,10919052,0,0x0,8
tick,0x7ffdf681f424,10921035,0,0x0,8
tick,0x7ffdf681f424,10923045,0,0x0,8
tick,0x7ffdf681f424,10925073,0,0x0,8
tick,0x7ffdf681f424,10927057,0,0x0,8
tick,0x7ffdf681f424,10929026,0,0x0,8
tick,0x7ffdf681f424,10931100,0,0x0,8
tick,0x7ffdf681f424,10933024,0,0x0,8
tick,0x7ffdf681f424,10935021,0,0x0,8
tick,0x7ffdf681f424,10937093,0,0x0,8
tick,0x7ffdf681f424,10939078,0,0x0,8
tick,0x7ffdf681f424,10941023,0,0x0,8
tick,0x7ffdf681f424,10943047,0,0x0,8
tick,0x7ffdf681f424,10944967,0,0x0,8
tick,0x7ffdf681f424,10946975,0,0x0,8
tick,0x7ffdf681f424,10949059,0,0x0,8
tick,0x7ffdf681f424,10951042,0,0x0,8
tick,0x7ffdf681f424,10953005,0,0x0,8
tick,0x7ffdf681f424,10955043,0,0x0,8
tick,0x7ffdf681f424,10957043,0,0x0,8
tick,0x7ffdf681f424,10959000,0,0x0,8
tick,0x7ffdf681f424,10960981,0,0x0,8
tick,0x7ffdf681f424,10963020,0,0x0,8
tick,0x7ffdf681f424,10965022,0,0x0,8
tick,0x7ffdf681f424,10967084,0,0x0,8
tick,0x7ffdf681f424,10968908,0,0x0,8
tick,0x7ffdf681f424,10971014,0,0x0,8
tick,0x7ffdf681f424,10972999,0,0x0,8
tick,0x7ffdf681f424,10974887,0,0x0,8
tick,0x7ffdf681f424,10976891,0,0x0,8
tick,0x7ffdf681f424,10978984,0,0x0,8
tick,0x7ffdf681f424,10981005,0,0x0,8
tick,0x7ffdf681f424,10982982,0,0x0,8
tick,0x7ffdf681f424,10984916,0,0x0,8
tick,0x7ffdf681f424,10986961,0,0x0,8
tick,0x7ffdf681f424,10988951,0,0x0,8
tick,0x7ffdf681f424,10990963,0,0x0,8
tick,0x7ffdf681f424,10993020,0,0x0,8
tick,0x7ffdf681f424,10994966,0,0x0,8
tick,0x7ffdf681f424,10996962,0,0x0,8
tick,0x7ffdf681f424,10998835,0,0x0,8
tick,0x7ffdf681f424,11000826,0,0x0,8
tick,0x7ffdf681f424,11002848,0,0x0,8
tick,0x7ffdf681f424,11004916,0,0x0,8
tick,0x7ffdf681f424,11006913,0,0x0,8
tick,0x7ffdf681f424,11008854,0,0x0,8
tick,0x7ffdf681f424,11010826,0,0x0,8
tick,0x7ffdf681f424,11012898,0,0x0,8
tick,0x7ffdf681f424,11014898,0,0x0,8
tick,0x7ffdf681f424,11016891,0,0x0,8
tick,0x7ffdf681f424,11018793,0,0x0,8
tick,0x7ffdf681f424,11020898,0,0x0,8
tick,0x7ffdf681f424,11022869,0,0x0,8
tick,0x7ffdf681f424,11024858,0,0x0,8
tick,0x7ffdf681f424,11026753,0,0x0,8
tick,0x7ffdf681f424,11028852,0,0x0,8
tick,0x7ffdf681f424,11030836,0,0x0,8
tick,0x7ffdf681f424,11032757,0,0x0,8
tick,0x7ffdf681f424,11034807,0,0x0,8
tick,0x7ffdf681f424,11036826,0,0x0,8
tick,0x7ffdf681f424,11038836,0,0x0,8
tick,0x7ffdf681f424,11040860,0,0x0,8
tick,0x7ffdf681f424,11042707,0,0x0,8
tick,0x7ffdf681f424,11044808,0,0x0,8
tick,0x7ffdf681f424,11046810,0,0x0,8
tick,0x7ffdf681f424,11048799,0,0x0,8
tick,0x7ffdf681f424,11050692,0,0x0,8
tick,0x7ffdf681f424,11052781,0,0x0,8
tick,0x7ffdf681f424,11054822,0,0x0,8
tick,0x7ffdf681f424,11056799,0,0x0,8
tick,0x7ffdf681f424,11058644,0,0x0,8
tick,0x7ffdf681f424,11060791,0,0x0,8
tick,0x7ffdf681f424,11062784,0,0x0,8
tick,0x7ffdf681f424,11064759,0,0x0,8
tick,0x7ffdf681f424,11066800,0,0x0,8
tick,0x7ffdf681f424,11068757,0,0x0,8
tick,0x7ffdf681f424,11070738,0,0x0,8
tick,0x7ffdf681f424,11072751,0,0x0,8
tick,0x7ffdf681f424,11074651,0,0x0,8
tick,0x7ffdf681f424,11076624,0,0x0,8
tick,0x7ffdf681f424,11078703,0,0x0,8
tick,0x7ffdf681f424,11080726,0,0x0,8
tick,0x7ffdf681f424,11082733,0,0x0,8
tick,0x7ffdf681f424,11084704,0,0x0,8
tick,0x7ffdf681f424,11086727,0,0x0,8
tick,0x7ffdf681f424,11088694,0,0x0,8
tick,0x7ffdf681f424,11090704,0,0x0,8
tick,0x7ffdf681f424,11092648,0,0x0,8
tick,0x7ffdf681f424,11094679,0,0x0,8
tick,0x7ffdf681f424,11096664,0,0x0,8
tick,0x7ffdf681f424,11098668,0,0x0,8
tick,0x7ffdf681f424,11100562,0,0x0,8
tick,0x7ffdf681f424,11102660,0,0x0,8
tick,0x7ffdf681f424,11104659,0,0x0,8
tick,0x7ffdf681f424,11106665,0,0x0,8
tick,0x7ffdf681f424,11108668,0,0x0,8
tick,0x7ffdf681f424,11110641,0,0x0,8
tick,0x7ffdf681f424,11112639,0,0x0,8
tick,0x7ffdf681f424,11114622,0,0x0,8
tick,0x7ffdf681f424,11116616,0,0x0,8
tick,0x7ffdf681f424,11118615,0,0x0,8
tick,0x7ffdf681f424,11120613,0,0x0,8
tick,0x7ffdf681f424,11122600,0,0x0,8
tick,0x7ffdf681f424,11124599,0,0x0,8
tick,0x7ffdf681f424,11126592,0,0x0,8
tick,0x7ffdf681f424,11128601,0,0x0,8
tick,0x7ffdf681f424,11130578,0,0x0,8
tick,0x7ffdf681f424,11132572,0,0x0,8
tick,0x7ffdf681f424,11134581,0,0x0,8
tick,0x7ffdf681f424,11136556,0,0x0,8
tick,0x7ffdf681f424,11138585,0,0x0,8
tick,0x7ffdf681f424,11140546,0,0x0,8
tick,0x7ffdf681f424,11142545,0,0x0,8
tick,0x7ffdf681f424,11144542,0,0x0,8
tick,0x7ffdf681f424,11146550,0,0x0,8
tick,0x7ffdf681f424,11148525,0,0x0,8
tick,0x7ffdf681f424,11150417,0,0x0,8
tick,0x7ffdf681f424,11152362,0,0x0,8
tick,0x7ffdf681f424,11154359,0,0x0,8
tick,0x7ffdf681f424,11156366,0,0x0,8
tick,0x7ffdf681f424,11158366,0,0x0,8
tick,0x7ffdf681f424,11160347,0,0x0,8
tick,0x7ffdf681f424,11162344,0,0x0,8
tick,0x7ffdf681f424,11164341,0,0x0,8
tick,0x7ffdf681f424,11166329,0,0x0,8
tick,0x7ffdf681f424,11168387,0,0x0,8
tick,0x7ffdf681f424,11170342,0,0x0,8
tick,0x7ffdf681f424,11172342,0,0x0,8
tick,0x7ffdf681f424,11174321,0,0x0,8
tick,0x7ffdf681f424,11176381,0,0x0,8
tick,0x7ffdf681f424,11178367,0,0x0,8
tick,0x7ffdf681f424,11180399,0,0x0,8
tick,0x7ffdf681f424,11182365,0,0x0,8
tick,0x7ffdf681f424,11184340,0,0x0,8
tick,0x7ffdf681f424,11186380,0,0x0,8
tick,0x7ffdf681f424,11188372,0,0x0,8
tick,0x7ffdf681f424,11189529,0,0x0,8
tick,0x7ffdf681f424,11190738,0,0x0,8
tick,0x7ffdf681f424,11192673,0,0x0,8
tick,0x7ffdf681f424,11194728,0,0x0,8
tick,0x7ffdf681f424,11196754,0,0x0,8
tick,0x7ffdf681f424,11197947,0,0x0,8
tick,0x7ffdf681f424,11199161,0,0x0,8
tick,0x7ffdf681f424,11201137,0,0x0,8
tick,0x7ffdf681f424,11203059,0,0x0,8
tick,0x7ffdf681f424,11205111,0,0x0,8
tick,0x7ffdf681f424,11207306,0,0x0,8
tick,0x7ffdf681f424,11209172,0,0x0,8
tick,0x7ffdf681f424,11211198,0,0x0,8
tick,0x7ffdf681f424,11213210,0,0x0,8
tick,0x7ffdf681f424,11215224,0,0x0,8
tick,0x7ffdf681f424,11217133,0,0x0,8
tick,0x7ffdf681f424,11219240,0,0x0,8
tick,0x7ffdf681f424,11221228,0,0x0,8
tick,0x7ffdf681f424,11223214,0,0x0,8
tick,0x7ffdf681f424,11225260,0,0x0,8
tick,0x7ffdf681f424,11227203,0,0x0,8
tick,0x7ffdf681f424,11229097,0,0x0,8
tick,0x7ffdf681f424,11231214,0,0x0,8
tick,0x7ffdf681f424,11233109,0,0x0,8
tick,0x7ffdf681f424,11235181,0,0x0,8
tick,0x7ffdf681f424,11237172,0,0x0,8
tick,0x7ffdf681f424,11239171,0,0x0,8
tick,0x7ffdf681f424,11241155,0,0x0,8
tick,0x7ffdf681f424,11243149,0,0x0,8
tick,0x7ffdf681f424,11245157,0,0x0,8
tick,0x7ffdf681f424,11247160,0,0x0,8
tick,0x7ffdf681f424,11249138,0,0x0,8
tick,0x7ffdf681f424,11251134,0,0x0,8
tick,0x7ffdf681f424,11253127,0,0x0,8
tick,0x7ffdf681f424,11255068,0,0x0,8
tick,0x7ffdf681f424,11257103,0,0x0,8
tick,0x7ffdf681f424,11259056,0,0x0,8
tick,0x7ffdf681f424,11261037,0,0x0,8
tick,0x7ffdf681f424,11262986,0,0x0,8
tick,0x7ffdf681f424,11265010,0,0x0,8
tick,0x7ffdf681f424,11267084,0,0x0,8
tick,0x7ffdf681f424,11269039,0,0x0,8
tick,0x7ffdf681f424,11271026,0,0x0,8
tick,0x7ffdf681f424,11273036,0,0x0,8
tick,0x7ffdf681f424,11275015,0,0x0,8
tick,0x7ffdf681f424,11277005,0,0x0,8
tick,0x7ffdf681f424,11279002,0,0x0,8
tick,0x7ffdf681f424,11280999,0,0x0,8
tick,0x7ffdf681f424,11283011,0,0x0,8
tick,0x7ffdf681f424,11284985,0,0x0,8
tick,0x7ffdf681f424,11287030,0,0x0,8
tick,0x7ffdf681f424,11288975,0,0x0,8
tick,0x7ffdf681f424,11291018,0,0x0,8
tick,0x7ffdf681f424,11292942,0,0x0,8
tick,0x7ffdf681f424,11294965,0,0x0,8
tick,0x7ffdf681f424,11296918,0,0x0,8
tick,0x7ffdf681f424,11298955,0,0x0,8
tick,0x7ffdf681f424,11300966,0,0x0,8
tick,0x7ffdf681f424,11302910,0,0x0,8
tick,0x7ffdf681f424,11304832,0,0x0,8
tick,0x7ffdf681f424,11306832,0,0x0,8
tick,0x7ffdf681f424,11308856,0,0x0,8
tick,0x7ffdf681f424,11310906,0,0x0,8
tick,0x7ffdf681f424,11312854,0,0x0,8
tick,0x7ffdf681f424,11314865,0,0x0,8
tick,0x7ffdf681f424,11316909,0,0x0,8
tick,0x7ffdf681f424,11318848,0,0x0,8
tick,0x7ffdf681f424,11320860,0,0x0,8
tick,0x7ffdf681f424,11322911,0,0x0,8
tick,0x7ffdf681f424,11324857,0,0x0,8
tick,0x7ffdf681f424,11326866,0,0x0,8
tick,0x7ffdf681f424,11328777,0,0x0,8
tick,0x7ffdf681f424,11330781,0,0x0,8
tick,0x7ffdf681f424,11332889,0,0x0,8
tick,0x7ffdf681f424,11334792,0,0x0,8
tick,0x7ffdf681f424,11336796,0,0x0,8
tick,0x7ffdf681f424,11338779,0,0x0,8
tick,0x7ffdf681f424,11340798,0,0x0,8
tick,0x7ffdf681f424,11342835,0,0x0,8
tick,0x7ffdf681f424,11344799,0,0x0,8
tick,0x7ffdf681f424,11346778,0,0x0,8
tick,0x7ffdf681f424,11348714,0,0x0,8
tick,0x7ffdf681f424,11350829,0,0x0,8
tick,0x7ffdf681f424,11352756,0,0x0,8
tick,0x7ffdf681f424,11354831,0,0x0,8
tick,0x7ffdf681f424,11356854,0,0x0,8
tick,0x7ffdf681f424,11358779,0,0x0,8
tick,0x7ffdf681f424,11360803,0,0x0,8
tick,0x7ffdf681f424,11362809,0,0x0,8
tick,0x7ffdf681f424,11364784,0,0x0,8
tick,0x7ffdf681f424,11366830,0,0x0,8
tick,0x7ffdf681f424,11368760,0,0x0,8
tick,0x7ffdf681f424,11370719,0,0x0,8
tick,0x7ffdf681f424,11372673,0,0x0,8
tick,0x7ffdf681f424,11374667,0,0x0,8
tick,0x7ffdf681f424,11376668,0,0x0,8
tick,0x7ffdf681f424,11378635,0,0x0,8
tick,0x7ffdf681f424,11380632,0,0x0,8
tick,0x7ffdf681f424,11382661,0,0x0,8
tick,0x7ffdf681f424,11384640,0,0x0,8
tick,0x7ffdf681f424,11386613,0,0x0,8
tick,0x7ffdf681f424,11388599,0,0x0,8
tick,0x7ffdf681f424,11390655,0,0x0,8
tick,0x7ffdf681f424,11392632,0,0x0,8
tick,0x7ffdf681f424,11394643,0,0x0,8
tick,0x7ffdf681f424,11396615,0,0x0,8
tick,0x7ffdf681f424,11398616,0,0x0,8
tick,0x7ffdf681f424,11400610,0,0x0,8
tick,0x7ffdf681f424,11402649,0,0x0,8
tick,0x7ffdf681f424,11404760,0,0x0,8
tick,0x7ffdf681f424,11406680,0,0x0,8
tick,0x7ffdf681f424,11408719,0,0x0,8
tick,0x7ffdf681f424,11410593,0,0x0,8
tick,0x7ffdf681f424,11412567,0,0x0,8
tick,0x7ffdf681f424,11414643,0,0x0,8
tick,0x7ffdf681f424,11416585,0,0x0,8
tick,0x7ffdf681f424,11418580,0,0x0,8
tick,0x7ffdf681f424,11420626,0,0x0,8
tick,0x7ffdf681f424,11422541,0,0x0,8
tick,0x7ffdf681f424,11424527,0,0x0,8
tick,0x7ffdf681f424,11426570,0,0x0,8
tick,0x7ffdf681f424,11428523,0,0x0,8
tick,0x7ffdf681f424,11430518,0,0x0,8
tick,0x7ffdf681f424,11432630,0,0x0,8
tick,0x7ffdf681f424,11434585,0,0x0,8
tick,0x7ffdf681f424,11436590,0,0x0,8
tick,0x7ffdf681f424,11438491,0,0x0,8
tick,0x7ffdf681f424,11440461,0,0x0,8
tick,0x7ffdf681f424,11442535,0,0x0,8
tick,0x7ffdf681f424,11444480,0,0x0,8
tick,0x7ffdf681f424,11446473,0,0x0,8
tick,0x7ffdf681f424,11448466,0,0x0,8
tick,0x7ffdf681f424,11450502,0,0x0,8
tick,0x7ffdf681f424,11452456,0,0x0,8
tick,0x7ffdf681f424,11454521,0,0x0,8
tick,0x7ffdf681f424,11456566,0,0x0,8
tick,0x7ffdf681f424,11458518,0,0x0,8
tick,0x7ffdf681f424,11460500,0,0x0,8
tick,0x7ffdf681f424,11462620,0,0x0,8
tick,0x7ffdf681f424,11464561,0,0x0,8
tick,0x7ffdf681f424,11466485,0,0x0,8
tick,0x7ffdf681f424,11468473,0,0x0,8
tick,0x7ffdf681f424,11470457,0,0x0,8
tick,0x7ffdf681f424,11472432,0,0x0,8
tick,0x7ffdf681f424,11474527,0,0x0,8
tick,0x7ffdf681f424,11476422,0,0x0,8
tick,0x7ffdf681f424,11478539,0,0x0,8
tick,0x7ffdf681f424,11480676,0,0x0,8
tick,0x7ffdf681f424,11482804,0,0x0,8
tick,0x7ffdf681f424,11484647,0,0x0,8
tick,0x7ffdf681f424,11486743,0,0x0,8
tick,0x7ffdf681f424,11488685,0,0x0,8
tick,0x7ffdf681f424,11490646,0,0x0,8
tick,0x7ffdf681f424,11492692,0,0x0,8
tick,0x7ffdf681f424,11494752,0,0x0,8
tick,0x7ffdf681f424,11496738,0,0x0,8
tick,0x7ffdf681f424,11498738,0,0x0,8
tick,0x7ffdf681f424,11500681,0,0x0,8
tick,0x7ffdf681f424,11502731,0,0x0,8
tick,0x7ffdf681f424,11504617,0,0x0,8
tick,0x7ffdf681f424,11506621,0,0x0,8
tick,0x7ffdf681f424,11508596,0,0x0,8
tick,0x7ffdf681f424,11510568,0,0x0,8
tick,0x7ffdf681f424,11512556,0,0x0,8
tick,0x7ffdf681f424,11514664,0,0x0,8
tick,0x7ffdf681f424,11516655,0,0x0,8
tick,0x7ffdf681f424,11518656,0,0x0,8
tick,0x7ffdf681f424,11520677,0,0x0,8
tick,0x7ffdf681f424,11522667,0,0x0,8
tick,0x7ffdf681f424,11524546,0,0x0,8
tick,0x7ffdf681f424,11526563,0,0x0,8
tick,0x7ffdf681f424,11528520,0,0x0,8
tick,0x7ffdf681f424,11530565,0,0x0,8
tick,0x7ffdf681f424,11532508,0,0x0,8
tick,0x7ffdf681f424,11534529,0,0x0,8
tick,0x7ffdf681f424,11536498,0,0x0,8
tick,0x7ffdf681f424,11538619,0,0x0,8
tick,0x7ffdf681f424,11540605,0,0x0,8
tick,0x7ffdf681f424,11542537,0,0x0,8
tick,0x7ffdf681f424,11544525,0,0x0,8
tick,0x7ffdf681f424,11546495,0,0x0,8
tick,0x7ffdf681f424,11548474,0,0x0,8
tick,0x7ffdf681f424,11550477,0,0x0,8
tick,0x7ffdf681f424,11552428,0,0x0,8
tick,0x7ffdf681f424,11554489,0,0x0,8
tick,0x7ffdf681f424,11556480,0,0x0,8
tick,0x7ffdf681f424,11558557,0,0x0,8
tick,0x7ffdf681f424,11560412,0,0x0,8
tick,0x7ffdf681f424,11562587,0,0x0,8
tick,0x7ffdf681f424,11564422,0,0x0,8
tick,0x7ffdf681f424,11566421,0,0x0,8
tick,0x7ffdf681f424,11568413,0,0x0,8
tick,0x7ffdf681f424,11570407,0,0x0,8
tick,0x7ffdf681f424,11572427,0,0x0,8
tick,0x7ffdf681f424,11574450,0,0x0,8
tick,0x7ffdf681f424,11576368,0,0x0,8
tick,0x7ffdf681f424,11578387,0,0x0,8
tick,0x7ffdf681f424,11580394,0,0x0,8
tick,0x7ffdf681f424,11582375,0,0x0,8
tick,0x7ffdf681f424,11584385,0,0x0,8
tick,0x7ffdf681f424,11586407,0,0x0,8
tick,0x7ffdf681f424,11588353,0,0x0,8
tick,0x7ffdf681f424,11590374,0,0x0,8
tick,0x7ffdf681f424,11592352,0,0x0,8
tick,0x7ffdf681f424,11594407,0,0x0,8
tick,0x7ffdf681f424,11596435,0,0x0,8
tick,0x7ffdf681f424,11598356,0,0x0,8
tick,0x7ffdf681f424,11600345,0,0x0,8
tick,0x7ffdf681f424,11602376,0,0x0,8
tick,0x7ffdf681f424,11604316,0,0x0,8
tick,0x7ffdf681f424,11606337,0,0x0,8
tick,0x7ffdf681f424,11608340,0,0x0,8
tick,0x7ffdf681f424,11610313,0,0x0,8
tick,0x7ffdf681f424,11612269,0,0x0,8
tick,0x7ffdf681f424,11614262,0,0x0,8
tick,0x7ffdf681f424,11616311,0,0x0,8
tick,0x7ffdf681f424,11618291,0,0x0,8
tick,0x7ffdf681f424,11620387,0,0x0,8
tick,0x7ffdf681f424,11622373,0,0x0,8
tick,0x7ffdf681f424,11624353,0,0x0,8
tick,0x7ffdf681f424,11626372,0,0x0,8
tick,0x7ffdf681f424,11628342,0,0x0,8
tick,0x7ffdf681f424,11630433,0,0x0,8
tick,0x7ffdf681f424,11632428,0,0x0,8
tick,0x7ffdf681f424,11634324,0,0x0,8
tick,0x7ffdf681f424,11636314,0,0x0,8
tick,0x7ffdf681f424,11638343,0,0x0,8
tick,0x7ffdf681f424,11640320,0,0x0,8
tick,0x7ffdf681f424,11642308,0,0x0,8
tick,0x7ffdf681f424,11644313,0,0x0,8
tick,0x7ffdf681f424,11646249,0,0x0,8
tick,0x7ffdf681f424,11648186,0,0x0,8
tick,0x7ffdf681f424,11650370,0,0x0,8
tick,0x7ffdf681f424,11652382,0,0x0,8
tick,0x7ffdf681f424,11654263,0,0x0,8
tick,0x7ffdf681f424,11656295,0,0x0,8
tick,0x7ffdf681f424,11658276,0,0x0,8
tick,0x7ffdf681f424,11660234,0,0x0,8
tick,0x7ffdf681f424,11662269,0,0x0,8
tick,0x7ffdf681f424,11664252,0,0x0,8
tick,0x7ffdf681f424,11666246,0,0x0,8
tick,0x7ffdf681f424,11668249,0,0x0,8
tick,0x7ffdf681f424,11670230,0,0x0,8
tick,0x7ffdf681f424,11672208,0,0x0,8
tick,0x7ffdf681f424,11674159,0,0x0,8
tick,0x7ffdf681f424,11676122,0,0x0,8
tick,0x7ffdf681f424,11678167,0,0x0,8
tick,0x7ffdf681f424,11680171,0,0x0,8
tick,0x7ffdf681f424,11682110,0,0x0,8
tick,0x7ffdf681f424,11684155,0,0x0,8
tick,0x7ffdf681f424,11686284,0,0x0,8
tick,0x7ffdf681f424,11688170,0,0x0,8
tick,0x7ffdf681f424,11690175,0,0x0,8
tick,0x7ffdf681f424,11692093,0,0x0,8
tick,0x7ffdf681f424,11694105,0,0x0,8
tick,0x7ffdf681f424,11696068,0,0x0,8
tick,0x7ffdf681f424,11698067,0,0x0,8
tick,0x7ffdf681f424,11700207,0,0x0,8
tick,0x7ffdf681f424,11702209,0,0x0,8
tick,0x7ffdf681f424,11704153,0,0x0,8
tick,0x7ffdf681f424,11706089,0,0x0,8
tick,0x7ffdf681f424,11708118,0,0x0,8
tick,0x7ffdf681f424,11710087,0,0x0,8
tick,0x7ffdf681f424,11712126,0,0x0,8
tick,0x7ffdf681f424,11714070,0,0x0,8
tick,0x7ffdf681f424,11716072,0,0x0,8
tick,0x7ffdf681f424,11718094,0,0x0,8
tick,0x7ffdf681f424,11720195,0,0x0,8
tick,0x7ffdf681f424,11722188,0,0x0,8
tick,0x7ffdf681f424,11724046,0,0x0,8
tick,0x7ffdf681f424,11726092,0,0x0,8
tick,0x7ffdf681f424,11728020,0,0x0,8
tick,0x7ffdf681f424,11730002,0,0x0,8
tick,0x7ffdf681f424,11732065,0,0x0,8
tick,0x7ffdf681f424,11734023,0,0x0,8
tick,0x7ffdf681f424,11736018,0,0x0,8
tick,0x7ffdf681f424,11737954,0,0x0,8
tick,0x7ffdf681f424,11740024,0,0x0,8
tick,0x7ffdf681f424,11741997,0,0x0,8
tick,0x7ffdf681f424,11743967,0,0x0,8
tick,0x7ffdf681f424,11745937,0,0x0,8
tick,0x7ffdf681f424,11747932,0,0x0,8
tick,0x7ffdf681f424,11749927,0,0x0,8
tick,0x7ffdf681f424,11751926,0,0x0,8
tick,0x7ffdf681f424,11753962,0,0x0,8
tick,0x7ffdf681f424,11755929,0,0x0,8
tick,0x7ffdf681f424,11757937,0,0x0,8
tick,0x7ffdf681f424,11759913,0,0x0,8
tick,0x7ffdf681f424,11762027,0,0x0,8
tick,0x7ffdf681f424,11763991,0,0x0,8
tick,0x7ffdf681f424,11765950,0,0x0,8
tick,0x7ffdf681f424,11767951,0,0x0,8
tick,0x7ffdf681f424,11769911,0,0x0,8
tick,0x7ffdf681f424,11772010,0,0x0,8
tick,0x7ffdf681f424,11773999,0,0x0,8
tick,0x7ffdf681f424,11775950,0,0x0,8
tick,0x7ffdf681f424,11777894,0,0x0,8
tick,0x7ffdf681f424,11779958,0,0x0,8
tick,0x7ffdf681f424,11781974,0,0x0,8
tick,0x7ffdf681f424,11783867,0,0x0,8
tick,0x7ffdf681f424,11785843,0,0x0,8
tick,0x7ffdf681f424,11787828,0,0x0,8
tick,0x7ffdf681f424,11789847,0,0x0,8
tick,0x7ffdf681f424,11791849,0,0x0,8
tick,0x7ffdf681f424,11793818,0,0x0,8
tick,0x7ffdf681f424,11795826,0,0x0,8
tick,0x7ffdf681f424,11797842,0,0x0,8
tick,0x7ffdf681f424,11799837,0,0x0,8
tick,0x7ffdf681f424,11801852,0,0x0,8
tick,0x7ffdf681f424,11803848,0,0x0,8
tick,0x7ffdf681f424,11805847,0,0x0,8
tick,0x7ffdf681f424,11807907,0,0x0,8
tick,0x7ffdf681f424,11809851,0,0x0,8
tick,0x7ffdf681f424,11811867,0,0x0,8
tick,0x7ffdf681f424,11814004,0,0x0,8
tick,0x7ffdf681f424,11815952,0,0x0,8
tick,0x7ffdf681f424,11817865,0,0x0,8
tick,0x7ffdf681f424,11819944,0,0x0,8
tick,0x7ffdf681f424,11821933,0,0x0,8
tick,0x7ffdf681f424,11823927,0,0x0,8
tick,0x7ffdf681f424,11825798,0,0x0,8
tick,0x7ffdf681f424,11827901,0,0x0,8
tick,0x7ffdf681f424,11829795,0,0x0,8
tick,0x7ffdf681f424,11831892,0,0x0,8
tick,0x7ffdf681f424,11833824,0,0x0,8
tick,0x7ffdf681f424,11835846,0,0x0,8
tick,0x7ffdf681f424,11837879,0,0x0,8
tick,0x7ffdf681f424,11839868,0,0x0,8
tick,0x7ffdf681f424,11841762,0,0x0,8
tick,0x7ffdf681f424,11843742,0,0x0,8
tick,0x7ffdf681f424,11845710,0,0x0,8
tick,0x7ffdf681f424,11847784,0,0x0,8
tick,0x7ffdf681f424,11849831,0,0x0,8
tick,0x7ffdf681f424,11851703,0,0x0,8
tick,0x7ffdf681f424,11853770,0,0x0,8
tick,0x7ffdf681f424,11855759,0,0x0,8
tick,0x7ffdf681f424,11857780,0,0x0,8
tick,0x7ffdf681f424,11859747,0,0x0,8
tick,0x7ffdf681f424,11861608,0,0x0,8
tick,0x7ffdf681f424,11863597,0,0x0,8
tick,0x7ffdf681f424,11865684,0,0x0,8
tick,0x7ffdf681f424,11867653,0,0x0,8
tick,0x7ffdf681f424,11869743,0,0x0,8
tick,0x7ffdf681f424,11871724,0,0x0,8
tick,0x7ffdf681f424,11873733,0,0x0,8
tick,0x7ffdf681f424,11875688,0,0x0,8
tick,0x7ffdf681f424,11877623,0,0x0,8
tick,0x7ffdf681f424,11879714,0,0x0,8
tick,0x7ffdf681f424,11881726,0,0x0,8
tick,0x7ffdf681f424,11883687,0,0x0,8
tick,0x7ffdf681f424,11885695,0,0x0,8
tick,0x7ffdf681f424,11887690,0,0x0,8
tick,0x7ffdf681f424,11889713,0,0x0,8
tick,0x7ffdf681f424,11891716,0,0x0,8
tick,0x7ffdf681f424,11893685,0,0x0,8
tick,0x7ffdf681f424,11895656,0,0x0,8
tick,0x7ffdf681f424,11897670,0,0x0,8
tick,0x7ffdf681f424,11899727,0,0x0,8
tick,0x7ffdf681f424,11901750,0,0x0,8
tick,0x7ffdf681f424,11903710,0,0x0,8
tick,0x7ffdf681f424,11905706,0,0x0,8
tick,0x7ffdf681f424,11907714,0,0x0,8
tick,0x7ffdf681f424,11909694,0,0x0,8
tick,0x7ffdf681f424,11911714,0,0x0,8
tick,0x7ffdf681f424,11913679,0,0x0,8
tick,0x7ffdf681f424,11915679,0,0x0,8
tick,0x7ffdf681f424,11917671,0,0x0,8
tick,0x7ffdf681f424,11919557,0,0x0,8
tick,0x7ffdf681f424,11921658,0,0x0,8
tick,0x7ffdf681f424,11923689,0,0x0,8
tick,0x7ffdf681f424,11925499,0,0x0,8
tick,0x7ffdf681f424,11927665,0,0x0,8
tick,0x7ffdf681f424,11929634,0,0x0,8
tick,0x7ffdf681f424,11931628,0,0x0,8
tick,0x7ffdf681f424,11933645,0,0x0,8
tick,0x7ffdf681f424,11935623,0,0x0,8
tick,0x7ffdf681f424,11937616,0,0x0,8
tick,0x7ffdf681f424,11939606,0,0x0,8
tick,0x7ffdf681f424,11941607,0,0x0,8
tick,0x7ffdf681f424,11943596,0,0x0,8
tick,0x7ffdf681f424,11945627,0,0x0,8
tick,0x7ffdf681f424,11947593,0,0x0,8
tick,0x7ffdf681f424,11949578,0,0x0,8
tick,0x7ffdf681f424,11951585,0,0x0,8
tick,0x7ffdf681f424,11953569,0,0x0,8
tick,0x7ffdf681f424,11955603,0,0x0,8
tick,0x7ffdf681f424,11957578,0,0x0,8
tick,0x7ffdf681f424,11959553,0,0x0,8
tick,0x7ffdf681f424,11961564,0,0x0,8
tick,0x7ffdf681f424,11963551,0,0x0,8
tick,0x7ffdf681f424,11965537,0,0x0,8
tick,0x7ffdf681f424,11967460,0,0x0,8
tick,0x7ffdf681f424,11969514,0,0x0,8
tick,0x7ffdf681f424,11971519,0,0x0,8
tick,0x7ffdf681f424,11973521,0,0x0,8
tick,0x7ffdf681f424,11975518,0,0x0,8
tick,0x7ffdf681f424,11977525,0,0x0,8
tick,0x7ffdf681f424,11979527,0,0x0,8
tick,0x7ffdf681f424,11981495,0,0x0,8
tick,0x7ffdf681f424,11983497,0,0x0,8
tick,0x7ffdf681f424,11985490,0,0x0,8
tick,0x7ffdf681f424,11987489,0,0x0,8
tick,0x7ffdf681f424,11989528,0,0x0,8
tick,0x7ffdf681f424,11991481,0,0x0,8
tick,0x7ffdf681f424,11993486,0,0x0,8
tick,0x7ffdf681f424,11995353,0,0x0,8
tick,0x7ffdf681f424,11997385,0,0x0,8
tick,0x7ffdf681f424,11999589,0,0x0,8
tick,0x7ffdf681f424,12001406,0,0x0,8
tick,0x7ffdf681f424,12003412,0,0x0,8
tick,0x7ffdf681f424,12005441,0,0x0,8
tick,0x7ffdf681f424,12007434,0,0x0,8
tick,0x7ffdf681f424,12009427,0,0x0,8
tick,0x7ffdf681f424,12011470,0,0x0,8
tick,0x7ffdf681f424,12013307,0,0x0,8
tick,0x7ffdf681f424,12015305,0,0x0,8
tick,0x7ffdf681f424,12017391,0,0x0,8
tick,0x7ffdf681f424,12019338,0,0x0,8
tick,0x7ffdf681f424,12021310,0,0x0,8
tick,0x7ffdf681f424,12023369,0,0x0,8
tick,0x7ffdf681f424,12025371,0,0x0,8
tick,0x7ffdf681f424,12027299,0,0x0,8
tick,0x7ffdf681f424,12029370,0,0x0,8
tick,0x7ffdf681f424,12031395,0,0x0,8
tick,0x7ffdf681f424,12033272,0,0x0,8
tick,0x7ffdf681f424,12035251,0,0x0,8
tick,0x7ffdf681f424,12037238,0,0x0,8
tick,0x7ffdf681f424,12039261,0,0x0,8
tick,0x7ffdf681f424,12041229,0,0x0,8
tick,0x7ffdf681f424,12043340,0,0x0,8
tick,0x7ffdf681f424,12045233,0,0x0,8
tick,0x7ffdf681f424,12047320,0,0x0,8
tick,0x7ffdf681f424,12049221,0,0x0,8
tick,0x7ffdf681f424,12051251,0,0x0,8
tick,0x7ffdf681f424,12053191,0,0x0,8
tick,0x7ffdf681f424,12055209,0,0x0,8
tick,0x7ffdf681f424,12057188,0,0x0,8
tick,0x7ffdf681f424,12059224,0,0x0,8
tick,0x7ffdf681f424,12061178,0,0x0,8
tick,0x7ffdf681f424,12063280,0,0x0,8
tick,0x7ffdf681f424,12065293,0,0x0,8
tick,0x7ffdf681f424,12067162,0,0x0,8
tick,0x7ffdf681f424,12069140,0,0x0,8
tick,0x7ffdf681f424,12071146,0,0x0,8
tick,0x7ffdf681f424,12073139,0,0x0,8
tick,0x7ffdf681f424,12075119,0,0x0,8
tick,0x7ffdf681f424,12077269,0,0x0,8
tick,0x7ffdf681f424,12079184,0,0x0,8
tick,0x7ffdf681f424,12081237,0,0x0,8
tick,0x7ffdf681f424,12083148,0,0x0,8
tick,0x7ffdf681f424,12085105,0,0x0,8
tick,0x7ffdf681f424,12087235,0,0x0,8
tick,0x7ffdf681f424,12089218,0,0x0,8
tick,0x7ffdf681f424,12091230,0,0x0,8
tick,0x7ffdf681f424,12093197,0,0x0,8
tick,0x7ffdf681f424,12095194,0,0x0,8
tick,0x7ffdf681f424,12097185,0,0x0,8
tick,0x7ffdf681f424,12099151,0,0x0,8
tick,0x7ffdf681f424,12101173,0,0x0,8
tick,0x7ffdf681f424,12103172,0,0x0,8
tick,0x7ffdf681f424,12105167,0,0x0,8
tick,0x7ffdf681f424,12107175,0,0x0,8
tick,0x7ffdf681f424,12109060,0,0x0,8
tick,0x7ffdf681f424,12111166,0,0x0,8
tick,0x7ffdf681f424,12113155,0,0x0,8
tick,0x7ffdf681f424,12115174,0,0x0,8
tick,0x7ffdf681f424,12117130,0,0x0,8
tick,0x7ffdf681f424,12119140,0,0x0,8
tick,0x7ffdf681f424,12121086,0,0x0,8
tick,0x7ffdf681f424,12123138,0,0x0,8
tick,0x7ffdf681f424,12125016,0,0x0,8
tick,0x7ffdf681f424,12127015,0,0x0,8
tick,0x7ffdf681f424,12129136,0,0x0,8
tick,0x7ffdf681f424,12131158,0,0x0,8
tick,0x7ffdf681f424,12133080,0,0x0,8
tick,0x7ffdf681f424,12135071,0,0x0,8
tick,0x7ffdf681f424,12137080,0,0x0,8
tick,0x7ffdf681f424,12139055,0,0x0,8
tick,0x7ffdf681f424,12141041,0,0x0,8
tick,0x7ffdf681f424,12143032,0,0x0,8
tick,0x7ffdf681f424,12145034,0,0x0,8
tick,0x7ffdf681f424,12147041,0,0x0,8
tick,0x7ffdf681f424,12148952,0,0x0,8
tick,0x7ffdf681f424,12151048,0,0x0,8
tick,0x7ffdf681f424,12152999,0,0x0,8
tick,0x7ffdf681f424,12155032,0,0x0,8
tick,0x7ffdf681f424,12157028,0,0x0,8
tick,0x7ffdf681f424,12158914,0,0x0,8
tick,0x7ffdf681f424,12161047,0,0x0,8
tick,0x7ffdf681f424,12163029,0,0x0,8
tick,0x7ffdf681f424,12165010,0,0x0,8
tick,0x7ffdf681f424,12167014,0,0x0,8
tick,0x7ffdf681f424,12169007,0,0x0,8
tick,0x7ffdf681f424,12171022,0,0x0,8
tick,0x7ffdf681f424,12172989,0,0x0,8
tick,0x7ffdf681f424,12175003,0,0x0,8
tick,0x7ffdf681f424,12176981,0,0x0,8
tick,0x7ffdf681f424,12178968,0,0x0,8
tick,0x7ffdf681f424,12180970,0,0x0,8
tick,0x7ffdf681f424,12182991,0,0x0,8
tick,0x7ffdf681f424,12184871,0,0x0,8
tick,0x7ffdf681f424,12186847,0,0x0,8
tick,0x7ffdf681f424,12188856,0,0x0,8
tick,0x7ffdf681f424,12190846,0,0x0,8
tick,0x7ffdf681f424,12192835,0,0x0,8
tick,0x7ffdf681f424,12194828,0,0x0,8
tick,0x7ffdf681f424,12196803,0,0x0,8
tick,0x7ffdf681f424,12198826,0,0x0,8
tick,0x7ffdf681f424,12200784,0,0x0,8
tick,0x7ffdf681f424,12202799,0,0x0,8
tick,0x7ffdf681f424,12204754,0,0x0,8
tick,0x7ffdf681f424,12206752,0,0x0,8
tick,0x7ffdf681f424,12208792,0,0x0,8
tick,0x7ffdf681f424,12210743,0,0x0,8
tick,0x7ffdf681f424,12212862,0,0x0,8
tick,0x7ffdf681f424,12214865,0,0x0,8
tick,0x7ffdf681f424,12216862,0,0x0,8
tick,0x7ffdf681f424,12218881,0,0x0,8
tick,0x7ffdf681f424,12220850,0,0x0,8
tick,0x7ffdf681f424,12222849,0,0x0,8
tick,0x7ffdf681f424,12224843,0,0x0,8
tick,0x7ffdf681f424,12226747,0,0x0,8
tick,0x7ffdf681f424,12228833,0,0x0,8
tick,0x7ffdf681f424,12230825,0,0x0,8
tick,0x7ffdf681f424,12232823,0,0x0,8
tick,0x7ffdf681f424,12234823,0,0x0,8
tick,0x7ffdf681f424,12236812,0,0x0,8
tick,0x7ffdf681f424,12238810,0,0x0,8
tick,0x7ffdf681f424,12240751,0,0x0,8
tick,0x7ffdf681f424,12242799,0,0x0,8
tick,0x7ffdf681f424,12244789,0,0x0,8
tick,0x7ffdf681f424,12246785,0,0x0,8
tick,0x7ffdf681f424,12248775,0,0x0,8
tick,0x7ffdf681f424,12250671,0,0x0,8
tick,0x7ffdf681f424,12252774,0,0x0,8
tick,0x7ffdf681f424,12254776,0,0x0,8
tick,0x7ffdf681f424,12256756,0,0x0,8
tick,0x7ffdf681f424,12258759,0,0x0,8
tick,0x7ffdf681f424,12260746,0,0x0,8
tick,0x7ffdf681f424,12262770,0,0x0,8
tick,0x7ffdf681f424,12264737,0,0x0,8
tick,0x7ffdf681f424,12266695,0,0x0,8
tick,0x7ffdf681f424,12268724,0,0x0,8
tick,0x7ffdf681f424,12270719,0,0x0,8
tick,0x7ffdf681f424,12272716,0,0x0,8
tick,0x7ffdf681f424,12274711,0,0x0,8
tick,0x7ffdf681f424,12276711,0,0x0,8
tick,0x7ffdf681f424,12278712,0,0x0,8
tick,0x7ffdf681f424,12280704,0,0x0,8
tick,0x7ffdf681f424,12282693,0,0x0,8
tick,0x7ffdf681f424,12284647,0,0x0,8
tick,0x7ffdf681f424,12286680,0,0x0,8
tick,0x7ffdf681f424,12288674,0,0x0,8
tick,0x7ffdf681f424,12290674,0,0x0,8
tick,0x7ffdf681f424,12292662,0,0x0,8
tick,0x7ffdf681f424,12294658,0,0x0,8
tick,0x7ffdf681f424,12296612,0,0x0,8
tick,0x7ffdf681f424,12298659,0,0x0,8
tick,0x7ffdf681f424,12300595,0,0x0,8
tick,0x7ffdf681f424,12302643,0,0x0,8
tick,0x7ffdf681f424,12304530,0,0x0,8
tick,0x7ffdf681f424,12306588,0,0x0,8
tick,0x7ffdf681f424,12308629,0,0x0,8
tick,0x7ffdf681f424,12310625,0,0x0,8
tick,0x7ffdf681f424,12312618,0,0x0,8
tick,0x7ffdf681f424,12314605,0,0x0,8
tick,0x7ffdf681f424,12316602,0,0x0,8
tick,0x7ffdf681f424,12318606,0,0x0,8
tick,0x7ffdf681f424,12320595,0,0x0,8
tick,0x7ffdf681f424,12322607,0,0x0,8
tick,0x7ffdf681f424,12324481,0,0x0,8
tick,0x7ffdf681f424,12326466,0,0x0,8
tick,0x7ffdf681f424,12328385,0,0x0,8
tick,0x7ffdf681f424,12330536,0,0x0,8
tick,0x7ffdf681f424,12332558,0,0x0,8
tick,0x7ffdf681f424,12334466,0,0x0,8
tick,0x7ffdf681f424,12336435,0,0x0,8
tick,0x7ffdf681f424,12338529,0,0x0,8
tick,0x7ffdf681f424,12340557,0,0x0,8
tick,0x7ffdf681f424,12342431,0,0x0,8
tick,0x7ffdf681f424,12344519,0,0x0,8
tick,0x7ffdf681f424,12346504,0,0x0,8
tick,0x7ffdf681f424,12348403,0,0x0,8
tick,0x7ffdf681f424,12350457,0,0x0,8
tick,0x7ffdf681f424,12352505,0,0x0,8
tick,0x7ffdf681f424,12354459,0,0x0,8
tick,0x7ffdf681f424,12356490,0,0x0,8
tick,0x7ffdf681f424,12358485,0,0x0,8
tick,0x7ffdf681f424,12360487,0,0x0,8
tick,0x7ffdf681f424,12362316,0,0x0,8
tick,0x7ffdf681f424,12364368,0,0x0,8
tick,0x7ffdf681f424,12366415,0,0x0,8
tick,0x7ffdf681f424,12368423,0,0x0,8
tick,0x7ffdf681f424,12370473,0,0x0,8
tick,0x7ffdf681f424,12372451,0,0x0,8
tick,0x7ffdf681f424,12374400,0,0x0,8
tick,0x7ffdf681f424,12376387,0,0x0,8
tick,0x7ffdf681f424,12378448,0,0x0,8
tick,0x7ffdf681f424,12380304,0,0x0,8
tick,0x7ffdf681f424,12382425,0,0x0,8
tick,0x7ffdf681f424,12384333,0,0x0,8
tick,0x7ffdf681f424,12386420,0,0x0,8
tick,0x7ffdf681f424,12388312,0,0x0,8
tick,0x7ffdf681f424,12390290,0,0x0,8
tick,0x7ffdf681f424,12392208,0,0x0,8
tick,0x7ffdf681f424,12394331,0,0x0,8
tick,0x7ffdf681f424,12396334,0,0x0,8
tick,0x7ffdf681f424,12398391,0,0x0,8
tick,0x7ffdf681f424,12400386,0,0x0,8
tick,0x7ffdf681f424,12402387,0,0x0,8
tick,0x7ffdf681f424,12404383,0,0x0,8
tick,0x7ffdf681f424,12406379,0,0x0,8
tick,0x7ffdf681f424,12408368,0,0x0,8
tick,0x7ffdf681f424,12410366,0,0x0,8
tick,0x7ffdf681f424,12412353,0,0x0,8
tick,0x7ffdf681f424,12414364,0,0x0,8
tick,0x7ffdf681f424,12416287,0,0x0,8
tick,0x7ffdf681f424,12418246,0,0x0,8
tick,0x7ffdf681f424,12420323,0,0x0,8
tick,0x7ffdf681f424,12422313,0,0x0,8
tick,0x7ffdf681f424,12424327,0,0x0,8
tick,0x7ffdf681f424,12426249,0,0x0,8
tick,0x7ffdf681f424,12428313,0,0x0,8
tick,0x7ffdf681f424,12430305,0,0x0,8
tick,0x7ffdf681f424,12432295,0,0x0,8
tick,0x7ffdf681f424,12434186,0,0x0,8
tick,0x7ffdf681f424,12436287,0,0x0,8
tick,0x7ffdf681f424,12438318,0,0x0,8
tick,0x7ffdf681f424,12440279,0,0x0,8
tick,0x7ffdf681f424,12442265,0,0x0,8
tick,0x7ffdf681f424,12444260,0,0x0,8
tick,0x7ffdf681f424,12446258,0,0x0,8
tick,0x7ffdf681f424,12448256,0,0x0,8
tick,0x7ffdf681f424,12450251,0,0x0,8
tick,0x7ffdf681f424,12452244,0,0x0,8
tick,0x7ffdf681f424,12454251,0,0x0,8
tick,0x7ffdf681f424,12456225,0,0x0,8
tick,0x7ffdf681f424,12458139,0,0x0,8
tick,0x7ffdf681f424,12460240,0,0x0,8
tick,0x7ffdf681f424,12462211,0,0x0,8
tick,0x7ffdf681f424,12464218,0,0x0,8
tick,0x7ffdf681f424,12466216,0,0x0,8
tick,0x7ffdf681f424,12468197,0,0x0,8
tick,0x7ffdf681f424,12470189,0,0x0,8
tick,0x7ffdf681f424,12472183,0,0x0,8
tick,0x7ffdf681f424,12474185,0,0x0,8
tick,0x7ffdf681f424,12476185,0,0x0,8
tick,0x7ffdf681f424,12478166,0,0x0,8
tick,0x7ffdf681f424,12480166,0,0x0,8
tick,0x7ffdf681f424,12482120,0,0x0,8
tick,0x7ffdf681f424,12484049,0,0x0,8
tick,0x7ffdf681f424,12486154,0,0x0,8
tick,0x7ffdf681f424,12488153,0,0x0,8
tick,0x7ffdf681f424,12490150,0,0x0,8
tick,0x7ffdf681f424,12492135,0,0x0,8
tick,0x7ffdf681f424,12494141,0,0x0,8
tick,0x7ffdf681f424,12496136,0,0x0,8
tick,0x7ffdf681f424,12498094,0,0x0,8
tick,0x7ffdf681f424,12500127,0,0x0,8
tick,0x7ffdf681f424,12502111,0,0x0,8
tick,0x7ffdf681f424,12504063,0,0x0,8
tick,0x7ffdf681f424,12506104,0,0x0,8
tick,0x7ffdf681f424,12508099,0,0x0,8
tick,0x7ffdf681f424,12510098,0,0x0,8
tick,0x7ffdf681f424,12512087,0,0x0,8
tick,0x7ffdf681f424,12514080,0,0x0,8
tick,0x7ffdf681f424,12516076,0,0x0,8
tick,0x7ffdf681f424,12518068,0,0x0,8
tick,0x7ffdf681f424,12520067,0,0x0,8
tick,0x7ffdf681f424,12522058,0,0x0,8
tick,0x7ffdf681f424,12524052,0,0x0,8
tick,0x7ffdf681f424,12526012,0,0x0,8
tick,0x7ffdf681f424,12528051,0,0x0,8
tick,0x7ffdf681f424,12530043,0,0x0,8
tick,0x7ffdf681f424,12532041,0,0x0,8
tick,0x7ffdf681f424,12533940,0,0x0,8
tick,0x7ffdf681f424,12536028,0,0x0,8
tick,0x7ffdf681f424,12537986,0,0x0,8
tick,0x7ffdf681f424,12540013,0,0x0,8
tick,0x7ffdf681f424,12542008,0,0x0,8
tick,0x7ffdf681f424,12543995,0,0x0,8
tick,0x7ffdf681f424,12546000,0,0x0,8
tick,0x7ffdf681f424,12547992,0,0x0,8
tick,0x7ffdf681f424,12549991,0,0x0,8
tick,0x7ffdf681f424,12551977,0,0x0,8
tick,0x7ffdf681f424,12553978,0,0x0,8
tick,0x7ffdf681f424,12555975,0,0x0,8
tick,0x7ffdf681f424,12557975,0,0x0,8
tick,0x7ffdf681f424,12559846,0,0x0,8
tick,0x7ffdf681f424,12561983,0,0x0,8
tick,0x7ffdf681f424,12563947,0,0x0,8
tick,0x7ffdf681f424,12565948,0,0x0,8
tick,0x7ffdf681f424,12567945,0,0x0,8
tick,0x7ffdf681f424,12569926,0,0x0,8
tick,0x7ffdf681f424,12571840,0,0x0,8
tick,0x7ffdf681f424,12573826,0,0x0,8
tick,0x7ffdf681f424,12575813,0,0x0,8
tick,0x7ffdf681f424,12577883,0,0x0,8
tick,0x7ffdf681f424,12579921,0,0x0,8
tick,0x7ffdf681f424,12581871,0,0x0,8
tick,0x7ffdf681f424,12583931,0,0x0,8
tick,0x7ffdf681f424,12585888,0,0x0,8
tick,0x7ffdf681f424,12587881,0,0x0,8
tick,0x7ffdf681f424,12589876,0,0x0,8
tick,0x7ffdf681f424,12591901,0,0x0,8
tick,0x7ffdf681f424,12593865,0,0x0,8
tick,0x7ffdf681f424,12595861,0,0x0,8
tick,0x7ffdf681f424,12597853,0,0x0,8
tick,0x7ffdf681f424,12599851,0,0x0,8
tick,0x7ffdf681f424,12601881,0,0x0,8
tick,0x7ffdf681f424,12603846,0,0x0,8
tick,0x7ffdf681f424,12605839,0,0x0,8
tick,0x7ffdf681f424,12607849,0,0x0,8
tick,0x7ffdf681f424,12609831,0,0x0,8
tick,0x7ffdf681f424,12611799,0,0x0,8
tick,0x7ffdf681f424,12613851,0,0x0,8
tick,0x7ffdf681f424,12615812,0,0x0,8
tick,0x7ffdf681f424,12617703,0,0x0,8
tick,0x7ffdf681f424,12619797,0,0x0,8
tick,0x7ffdf681f424,12621795,0,0x0,8
tick,0x7ffdf681f424,12623838,0,0x0,8
tick,0x7ffdf681f424,12625668,0,0x0,8
tick,0x7ffdf681f424,12627778,0,0x0,8
tick,0x7ffdf681f424,12629773,0,0x0,8
tick,0x7ffdf681f424,12631771,0,0x0,8
tick,0x7ffdf681f424,12633760,0,0x0,8
tick,0x7ffdf681f424,12635763,0,0x0,8
tick,0x7ffdf681f424,12637749,0,0x0,8
tick,0x7ffdf681f424,12639741,0,0x0,8
tick,0x7ffdf681f424,12641739,0,0x0,8
tick,0x7ffdf681f424,12643741,0,0x0,8
tick,0x7ffdf681f424,12645801,0,0x0,8
tick,0x7ffdf681f424,12647724,0,0x0,8
tick,0x7ffdf681f424,12649719,0,0x0,8
tick,0x7ffdf681f424,12651739,0,0x0,8
tick,0x7ffdf681f424,12653602,0,0x0,8
tick,0x7ffdf681f424,12655631,0,0x0,8
tick,0x7ffdf681f424,12657582,0,0x0,8
tick,0x7ffdf681f424,12659570,0,0x0,8
tick,0x7ffdf681f424,12661682,0,0x0,8
tick,0x7ffdf681f424,12663684,0,0x0,8
tick,0x7ffdf681f424,12665675,0,0x0,8
tick,0x7ffdf681f424,12667532,0,0x0,8
tick,0x7ffdf681f424,12669557,0,0x0,8
tick,0x7ffdf681f424,12671691,0,0x0,8
tick,0x7ffdf681f424,12673654,0,0x0,8
tick,0x7ffdf681f424,12675630,0,0x0,8
tick,0x7ffdf681f424,12677650,0,0x0,8
tick,0x7ffdf681f424,12679651,0,0x0,8
tick,0x7ffdf681f424,12681634,0,0x0,8
tick,0x7ffdf681f424,12683607,0,0x0,8
tick,0x7ffdf681f424,12685554,0,0x0,8
tick,0x7ffdf681f424,12687517,0,0x0,8
tick,0x7ffdf681f424,12689561,0,0x0,8
tick,0x7ffdf681f424,12691599,0,0x0,8
tick,0x7ffdf681f424,12693488,0,0x0,8
tick,0x7ffdf681f424,12695581,0,0x0,8
tick,0x7ffdf681f424,12697590,0,0x0,8
tick,0x7ffdf681f424,12699552,0,0x0,8
tick,0x7ffdf681f424,12701588,0,0x0,8
tick,0x7ffdf681f424,12703564,0,0x0,8
tick,0x7ffdf681f424,12705561,0,0x0,8
tick,0x7ffdf681f424,12707554,0,0x0,8
tick,0x7ffdf681f424,12709546,0,0x0,8
tick,0x7ffdf681f424,12711600,0,0x0,8
tick,0x7ffdf681f424,12713539,0,0x0,8
tick,0x7ffdf681f424,12715529,0,0x0,8
tick,0x7ffdf681f424,12717430,0,0x0,8
tick,0x7ffdf681f424,12719529,0,0x0,8
tick,0x7ffdf681f424,12721519,0,0x0,8
tick,0x7ffdf681f424,12723522,0,0x0,8
tick,0x7ffdf681f424,12725519,0,0x0,8
tick,0x7ffdf681f424,12727498,0,0x0,8
tick,0x7ffdf681f424,12729495,0,0x0,8
tick,0x7ffdf681f424,12731492,0,0x0,8
tick,0x7ffdf681f424,12733518,0,0x0,8
tick,0x7ffdf681f424,12735481,0,0x0,8
tick,0x7ffdf681f424,12737474,0,0x0,8
tick,0x7ffdf681f424,12739490,0,0x0,8
tick,0x7ffdf681f424,12741465,0,0x0,8
tick,0x7ffdf681f424,12743464,0,0x0,8
tick,0x7ffdf681f424,12745425,0,0x0,8
tick,0x7ffdf681f424,12747459,0,0x0,8
tick,0x7ffdf681f424,12749458,0,0x0,8
tick,0x7ffdf681f424,12751440,0,0x0,8
tick,0x7ffdf681f424,12753436,0,0x0,8
tick,0x7ffdf681f424,12755473,0,0x0,8
tick,0x7ffdf681f424,12757426,0,0x0,8
tick,0x7ffdf681f424,12759415,0,0x0,8
tick,0x7ffdf681f424,12761406,0,0x0,8
tick,0x7ffdf681f424,12763300,0,0x0,8
tick,0x7ffdf681f424,12765323,0,0x0,8
tick,0x7ffdf681f424,12767345,0,0x0,8
tick,0x7ffdf681f424,12769392,0,0x0,8
tick,0x7ffdf681f424,12771384,0,0x0,8
tick,0x7ffdf681f424,12773376,0,0x0,8
tick,0x7ffdf681f424,12775385,0,0x0,8
tick,0x7ffdf681f424,12777414,0,0x0,8
tick,0x7ffdf681f424,12779360,0,0x0,8
tick,0x7ffdf681f424,12781366,0,0x0,8
tick,0x7ffdf681f424,12783356,0,0x0,8
tick,0x7ffdf681f424,12785346,0,0x0,8
tick,0x7ffdf681f424,12787340,0,0x0,8
tick,0x7ffdf681f424,12789357,0,0x0,8
tick,0x7ffdf681f424,12791338,0,0x0,8
tick,0x7ffdf681f424,12793344,0,0x0,8
tick,0x7ffdf681f424,12795326,0,0x0,8
tick,0x7ffdf681f424,12797312,0,0x0,8
tick,0x7ffdf681f424,12799393,0,0x0,8
tick,0x7ffdf681f424,12801303,0,0x0,8
tick,0x7ffdf681f424,12803299,0,0x0,8
tick,0x7ffdf681f424,12805319,0,0x0,8
tick,0x7ffdf681f424,12807292,0,0x0,8
tick,0x7ffdf681f424,12809183,0,0x0,8
tick,0x7ffdf681f424,12811299,0,0x0,8
tick,0x7ffdf681f424,12813282,0,0x0,8
tick,0x7ffdf681f424,12815269,0,0x0,8
tick,0x7ffdf681f424,12817269,0,0x0,8
tick,0x7ffdf681f424,12819263,0,0x0,8
tick,0x7ffdf681f424,12821309,0,0x0,8
tick,0x7ffdf681f424,12823150,0,0x0,8
tick,0x7ffdf681f424,12825244,0,0x0,8
tick,0x7ffdf681f424,12827250,0,0x0,8
tick,0x7ffdf681f424,12829232,0,0x0,8
tick,0x7ffdf681f424,12831233,0,0x0,8
tick,0x7ffdf681f424,12833237,0,0x0,8
tick,0x7ffdf681f424,12835225,0,0x0,8
tick,0x7ffdf681f424,12837206,0,0x0,8
tick,0x7ffdf681f424,12839203,0,0x0,8
tick,0x7ffdf681f424,12841064,0,0x0,8
tick,0x7ffdf681f424,12843246,0,0x0,8
tick,0x7ffdf681f424,12845188,0,0x0,8
tick,0x7ffdf681f424,12847186,0,0x0,8
tick,0x7ffdf681f424,12849182,0,0x0,8
tick,0x7ffdf681f424,12851070,0,0x0,8
tick,0x7ffdf681f424,12853164,0,0x0,8
tick,0x7ffdf681f424,12855168,0,0x0,8
tick,0x7ffdf681f424,12857164,0,0x0,8
tick,0x7ffdf681f424,12859049,0,0x0,8
tick,0x7ffdf681f424,12861140,0,0x0,8
tick,0x7ffdf681f424,12863145,0,0x0,8
tick,0x7ffdf681f424,12865154,0,0x0,8
tick,0x7ffdf681f424,12867129,0,0x0,8
tick,0x7ffdf681f424,12869119,0,0x0,8
tick,0x7ffdf681f424,12871119,0,0x0,8
tick,0x7ffdf681f424,12873112,0,0x0,8
tick,0x7ffdf681f424,12875104,0,0x0,8
tick,0x7ffdf681f424,12877125,0,0x0,8
tick,0x7ffdf681f424,12879102,0,0x0,8
tick,0x7ffdf681f424,12881029,0,0x0,8
tick,0x7ffdf681f424,12883091,0,0x0,8
tick,0x7ffdf681f424,12885081,0,0x0,8
tick,0x7ffdf681f424,12887117,0,0x0,8
tick,0x7ffdf681f424,12889073,0,0x0,8
tick,0x7ffdf681f424,12891069,0,0x0,8
tick,0x7ffdf681f424,12893062,0,0x0,8
tick,0x7ffdf681f424,12895053,0,0x0,8
tick,0x7ffdf681f424,12897047,0,0x0,8
tick,0x7ffdf681f424,12899060,0,0x0,8
tick,0x7ffdf681f424,12900930,0,0x0,8
tick,0x7ffdf681f424,12903035,0,0x0,8
tick,0x7ffdf681f424,12905034,0,0x0,8
tick,0x7ffdf681f424,12907049,0,0x0,8
tick,0x7ffdf681f424,12909052,0,0x0,8
tick,0x7ffdf681f424,12911015,0,0x0,8
tick,0x7ffdf681f424,12913014,0,0x0,8
tick,0x7ffdf681f424,12915016,0,0x0,8
tick,0x7ffdf681f424,12916892,0,0x0,8
tick,0x7ffdf681f424,12918911,0,0x0,8
tick,0x7ffdf681f424,12920943,0,0x0,8
tick,0x7ffdf681f424,12922985,0,0x0,8
tick,0x7ffdf681f424,12924973,0,0x0,8
tick,0x7ffdf681f424,12926866,0,0x0,8
tick,0x7ffdf681f424,12928969,0,0x0,8
tick,0x7ffdf681f424,12930983,0,0x0,8
tick,0x7ffdf681f424,12932947,0,0x0,8
tick,0x7ffdf681f424,12934948,0,0x0,8
tick,0x7ffdf681f424,12936952,0,0x0,8
tick,0x7ffdf681f424,12938941,0,0x0,8
tick,0x7ffdf681f424,12940939,0,0x0,8
tick,0x7ffdf681f424,12942885,0,0x0,8
tick,0x7ffdf681f424,12944933,0,0x0,8
tick,0x7ffdf681f424,12946914,0,0x0,8
tick,0x7ffdf681f424,12948909,0,0x0,8
tick,0x7ffdf681f424,12950811,0,0x0,8
tick,0x7ffdf681f424,12952919,0,0x0,8
tick,0x7ffdf681f424,12954894,0,0x0,8
tick,0x7ffdf681f424,12956891,0,0x0,8
tick,0x7ffdf681f424,12958891,0,0x0,8
tick,0x7ffdf681f424,12960880,0,0x0,8
tick,0x7ffdf681f424,12962872,0,0x0,8
tick,0x7ffdf681f424,12964826,0,0x0,8
tick,0x7ffdf681f424,12966864,0,0x0,8
tick,0x7ffdf681f424,12968858,0,0x0,8
tick,0x7ffdf681f424,12970862,0,0x0,8
tick,0x7ffdf681f424,12972848,0,0x0,8
tick,0x7ffdf681f424,12974884,0,0x0,8
tick,0x7ffdf681f424,12976834,0,0x0,8
tick,0x7ffdf681f424,12978836,0,0x0,8
tick,0x7ffdf681f424,12980824,0,0x0,8
tick,0x7ffdf681f424,12982817,0,0x0,8
tick,0x7ffdf681f424,12984821,0,0x0,8
tick,0x7ffdf681f424,12986763,0,0x0,8
tick,0x7ffdf681f424,12988817,0,0x0,8
tick,0x7ffdf681f424,12990805,0,0x0,8
tick,0x7ffdf681f424,12992796,0,0x0,8
tick,0x7ffdf681f424,12994716,0,0x0,8
tick,0x7ffdf681f424,12996832,0,0x0,8
tick,0x7ffdf681f424,12998789,0,0x0,8
tick,0x7ffdf681f424,13000693,0,0x0,8
tick,0x7ffdf681f424,13002763,0,0x0,8
tick,0x7ffdf681f424,13004761,0,0x0,8
tick,0x7ffdf681f424,13006757,0,0x0,8
tick,0x7ffdf681f424,13008759,0,0x0,8
tick,0x7ffdf681f424,13010750,0,0x0,8
tick,0x7ffdf681f424,13012739,0,0x0,8
tick,0x7ffdf681f424,13014732,0,0x0,8
tick,0x7ffdf681f424,13016735,0,0x0,8
tick,0x7ffdf681f424,13018739,0,0x0,8
tick,0x7ffdf681f424,13020726,0,0x0,8
tick,0x7ffdf681f424,13022721,0,0x0,8
tick,0x7ffdf681f424,13024711,0,0x0,8
tick,0x7ffdf681f424,13026714,0,0x0,8
tick,0x7ffdf681f424,13028694,0,0x0,8
tick,0x7ffdf681f424,13030663,0,0x0,8
tick,0x7ffdf681f424,13032684,0,0x0,8
tick,0x7ffdf681f424,13034682,0,0x0,8
tick,0x7ffdf681f424,13036674,0,0x0,8
tick,0x7ffdf681f424,13038683,0,0x0,8
tick,0x7ffdf681f424,13040641,0,0x0,8
tick,0x7ffdf681f424,13042561,0,0x0,8
tick,0x7ffdf681f424,13044665,0,0x0,8
tick,0x7ffdf681f424,13046655,0,0x0,8
tick,0x7ffdf681f424,13048642,0,0x0,8
tick,0x7ffdf681f424,13050637,0,0x0,8
tick,0x7ffdf681f424,13052606,0,0x0,8
tick,0x7ffdf681f424,13054632,0,0x0,8
tick,0x7ffdf681f424,13056621,0,0x0,8
tick,0x7ffdf681f424,13058614,0,0x0,8
tick,0x7ffdf681f424,13060627,0,0x0,8
tick,0x7ffdf681f424,13062623,0,0x0,8
tick,0x7ffdf681f424,13064600,0,0x0,8
tick,0x7ffdf681f424,13066590,0,0x0,8
tick,0x7ffdf681f424,13068608,0,0x0,8
tick,0x7ffdf681f424,13070557,0,0x0,8
tick,0x7ffdf681f424,13072484,0,0x0,8
tick,0x7ffdf681f424,13074543,0,0x0,8
tick,0x7ffdf681f424,13076567,0,0x0,8
tick,0x7ffdf681f424,13078571,0,0x0,8
tick,0x7ffdf681f424,13080562,0,0x0,8
tick,0x7ffdf681f424,13082554,0,0x0,8
tick,0x7ffdf681f424,13084500,0,0x0,8
tick,0x7ffdf681f424,13086542,0,0x0,8
tick,0x7ffdf681f424,13088539,0,0x0,8
tick,0x7ffdf681f424,13090534,0,0x0,8
tick,0x7ffdf681f424,13092426,0,0x0,8
tick,0x7ffdf681f424,13094523,0,0x0,8
tick,0x7ffdf681f424,13096472,0,0x0,8
tick,0x7ffdf681f424,13098520,0,0x0,8
tick,0x7ffdf681f424,13100505,0,0x0,8
tick,0x7ffdf681f424,13102512,0,0x0,8
tick,0x7ffdf681f424,13104493,0,0x0,8
tick,0x7ffdf681f424,13106528,0,0x0,8
tick,0x7ffdf681f424,13108488,0,0x0,8
tick,0x7ffdf681f424,13110495,0,0x0,8
tick,0x7ffdf681f424,13112471,0,0x0,8
tick,0x7ffdf681f424,13114468,0,0x0,8
tick,0x7ffdf681f424,13116460,0,0x0,8
tick,0x7ffdf681f424,13118420,0,0x0,8
tick,0x7ffdf681f424,13120452,0,0x0,8
tick,0x7ffdf681f424,13122444,0,0x0,8
tick,0x7ffdf681f424,13124446,0,0x0,8
tick,0x7ffdf681f424,13126435,0,0x0,8
tick,0x7ffdf681f424,13128483,0,0x0,8
tick,0x7ffdf681f424,13130435,0,0x0,8
tick,0x7ffdf681f424,13132418,0,0x0,8
tick,0x7ffdf681f424,13134344,0,0x0,8
tick,0x7ffdf681f424,13136407,0,0x0,8
tick,0x7ffdf681f424,13138402,0,0x0,8
tick,0x7ffdf681f424,13140412,0,0x0,8
tick,0x7ffdf681f424,13142365,0,0x0,8
tick,0x7ffdf681f424,13144386,0,0x0,8
tick,0x7ffdf681f424,13146383,0,0x0,8
tick,0x7ffdf681f424,13148285,0,0x0,8
tick,0x7ffdf681f424,13150323,0,0x0,8
tick,0x7ffdf681f424,13152370,0,0x0,8
tick,0x7ffdf681f424,13154378,0,0x0,8
tick,0x7ffdf681f424,13156360,0,0x0,8
tick,0x7ffdf681f424,13158357,0,0x0,8
tick,0x7ffdf681f424,13160267,0,0x0,8
tick,0x7ffdf681f424,13162292,0,0x0,8
tick,0x7ffdf681f424,13164330,0,0x0,8
tick,0x7ffdf681f424,13166327,0,0x0,8
tick,0x7ffdf681f424,13168323,0,0x0,8
tick,0x7ffdf681f424,13170316,0,0x0,8
tick,0x7ffdf681f424,13172289,0,0x0,8
tick,0x7ffdf681f424,13174303,0,0x0,8
tick,0x7ffdf681f424,13176305,0,0x0,8
tick,0x7ffdf681f424,13178297,0,0x0,8
tick,0x7ffdf681f424,13180289,0,0x0,8
tick,0x7ffdf681f424,13182283,0,0x0,8
tick,0x7ffdf681f424,13184176,0,0x0,8
tick,0x7ffdf681f424,13186274,0,0x0,8
tick,0x7ffdf681f424,13188172,0,0x0,8
tick,0x7ffdf681f424,13190271,0,0x0,8
tick,0x7ffdf681f424,13192265,0,0x0,8
tick,0x7ffdf681f424,13194278,0,0x0,8
tick,0x7ffdf681f424,13196257,0,0x0,8
tick,0x7ffdf681f424,13198244,0,0x0,8
tick,0x7ffdf681f424,13200244,0,0x0,8
tick,0x7ffdf681f424,13202238,0,0x0,8
tick,0x7ffdf681f424,13204228,0,0x0,8
tick,0x7ffdf681f424,13206235,0,0x0,8
tick,0x7ffdf681f424,13208220,0,0x0,8
tick,0x7ffdf681f424,13210218,0,0x0,8
tick,0x7ffdf681f424,13212206,0,0x0,8
tick,0x7ffdf681f424,13214200,0,0x0,8
tick,0x7ffdf681f424,13216244,0,0x0,8
tick,0x7ffdf681f424,13218189,0,0x0,8
tick,0x7ffdf681f424,13220197,0,0x0,8
tick,0x7ffdf681f424,13222198,0,0x0,8
tick,0x7ffdf681f424,13224068,0,0x0,8
tick,0x7ffdf681f424,13226089,0,0x0,8
tick,0x7ffdf681f424,13228192,0,0x0,8
tick,0x7ffdf681f424,13230163,0,0x0,8
tick,0x7ffdf681f424,13232153,0,0x0,8
tick,0x7ffdf681f424,13234057,0,0x0,8
tick,0x7ffdf681f424,13236152,0,0x0,8
tick,0x7ffdf681f424,13238187,0,0x0,8
tick,0x7ffdf681f424,13240135,0,0x0,8
tick,0x7ffdf681f424,13242127,0,0x0,8
tick,0x7ffdf681f424,13244127,0,0x0,8
tick,0x7ffdf681f424,13246116,0,0x0,8
tick,0x7ffdf681f424,13248109,0,0x0,8
tick,0x7ffdf681f424,13250124,0,0x0,8
tick,0x7ffdf681f424,13252094,0,0x0,8
tick,0x7ffdf681f424,13254101,0,0x0,8
tick,0x7ffdf681f424,13256097,0,0x0,8
tick,0x7ffdf681f424,13258081,0,0x0,8
tick,0x7ffdf681f424,13260132,0,0x0,8
tick,0x7ffdf681f424,13262079,0,0x0,8
tick,0x7ffdf681f424,13264071,0,0x0,8
tick,0x7ffdf681f424,13266066,0,0x0,8
tick,0x7ffdf681f424,13268063,0,0x0,8
tick,0x7ffdf681f424,13270050,0,0x0,8
tick,0x7ffdf681f424,13272066,0,0x0,8
tick,0x7ffdf681f424,13274041,0,0x0,8
tick,0x7ffdf681f424,13275932,0,0x0,8
tick,0x7ffdf681f424,13278026,0,0x0,8
tick,0x7ffdf681f424,13280027,0,0x0,8
tick,0x7ffdf681f424,13282034,0,0x0,8
tick,0x7ffdf681f424,13283916,0,0x0,8
tick,0x7ffdf681f424,13286009,0,0x0,8
tick,0x7ffdf681f424,13288005,0,0x0,8
tick,0x7ffdf681f424,13290000,0,0x0,8
tick,0x7ffdf681f424,13291993,0,0x0,8
tick,0x7ffdf681f424,13294000,0,0x0,8
tick,0x7ffdf681f424,13295983,0,0x0,8
tick,0x7ffdf681f424,13297974,0,0x0,8
tick,0x7ffdf681f424,13299969,0,0x0,8
tick,0x7ffdf681f424,13301876,0,0x0,8
tick,0x7ffdf681f424,13303917,0,0x0,8
tick,0x7ffdf681f424,13305951,0,0x0,8
tick,0x7ffdf681f424,13307957,0,0x0,8
tick,0x7ffdf681f424,13309946,0,0x0,8
tick,0x7ffdf681f424,13311938,0,0x0,8
tick,0x7ffdf681f424,13313938,0,0x0,8
tick,0x7ffdf681f424,13315950,0,0x0,8
tick,0x7ffdf681f424,13317934,0,0x0,8
tick,0x7ffdf681f424,13319919,0,0x0,8
tick,0x7ffdf681f424,13321917,0,0x0,8
tick,0x7ffdf681f424,13323917,0,0x0,8
tick,0x7ffdf681f424,13325847,0,0x0,8
tick,0x7ffdf681f424,13327898,0,0x0,8
tick,0x7ffdf681f424,13329929,0,0x0,8
tick,0x7ffdf681f424,13331885,0,0x0,8
tick,0x7ffdf681f424,13333776,0,0x0,8
tick,0x7ffdf681f424,13335749,0,0x0,8
tick,0x7ffdf681f424,13337854,0,0x0,8
tick,0x7ffdf681f424,13339868,0,0x0,8
tick,0x7ffdf681f424,13341861,0,0x0,8
tick,0x7ffdf681f424,13343858,0,0x0,8
tick,0x7ffdf681f424,13345855,0,0x0,8
tick,0x7ffdf681f424,13347859,0,0x0,8
tick,0x7ffdf681f424,13349842,0,0x0,8
tick,0x7ffdf681f424,13351833,0,0x0,8
tick,0x7ffdf681f424,13353833,0,0x0,8
tick,0x7ffdf681f424,13355821,0,0x0,8
tick,0x7ffdf681f424,13357909,0,0x0,8
tick,0x7ffdf681f424,13359823,0,0x0,8
tick,0x7ffdf681f424,13361688,0,0x0,8
tick,0x7ffdf681f424,13363801,0,0x0,8
tick,0x7ffdf681f424,13365702,0,0x0,8
tick,0x7ffdf681f424,13367723,0,0x0,8
tick,0x7ffdf681f424,13369784,0,0x0,8
tick,0x7ffdf681f424,13371674,0,0x0,8
tick,0x7ffdf681f424,13373767,0,0x0,8
tick,0x7ffdf681f424,13375740,0,0x0,8
tick,0x7ffdf681f424,13377718,0,0x0,8
tick,0x7ffdf681f424,13379628,0,0x0,8
tick,0x7ffdf681f424,13381781,0,0x0,8
tick,0x7ffdf681f424,13383762,0,0x0,8
tick,0x7ffdf681f424,13385747,0,0x0,8
tick,0x7ffdf681f424,13387744,0,0x0,8
tick,0x7ffdf681f424,13389739,0,0x0,8
tick,0x7ffdf681f424,13391733,0,0x0,8
tick,0x7ffdf681f424,13393718,0,0x0,8
tick,0x7ffdf681f424,13395616,0,0x0,8
tick,0x7ffdf681f424,13397730,0,0x0,8
tick,0x7ffdf681f424,13399606,0,0x0,8
tick,0x7ffdf681f424,13401750,0,0x0,8
tick,0x7ffdf681f424,13403705,0,0x0,8
tick,0x7ffdf681f424,13405689,0,0x0,8
tick,0x7ffdf681f424,13407685,0,0x0,8
tick,0x7ffdf681f424,13409675,0,0x0,8
tick,0x7ffdf681f424,13411668,0,0x0,8
tick,0x7ffdf681f424,13413674,0,0x0,8
tick,0x7ffdf681f424,13415688,0,0x0,8
tick,0x7ffdf681f424,13417562,0,0x0,8
tick,0x7ffdf681f424,13419662,0,0x0,8
tick,0x7ffdf681f424,13421652,0,0x0,8
tick,0x7ffdf681f424,13423684,0,0x0,8
tick,0x7ffdf681f424,13425649,0,0x0,8
tick,0x7ffdf681f424,13427628,0,0x0,8
tick,0x7ffdf681f424,13429610,0,0x0,8
tick,0x7ffdf681f424,13431629,0,0x0,8
tick,0x7ffdf681f424,13433513,0,0x0,8
tick,0x7ffdf681f424,13435626,0,0x0,8
tick,0x7ffdf681f424,13437610,0,0x0,8
tick,0x7ffdf681f424,13439596,0,0x0,8
tick,0x7ffdf681f424,13441592,0,0x0,8
tick,0x7ffdf681f424,13443595,0,0x0,8
tick,0x7ffdf681f424,13445608,0,0x0,8
tick,0x7ffdf681f424,13447595,0,0x0,8
tick,0x7ffdf681f424,13449568,0,0x0,8
tick,0x7ffdf681f424,13451574,0,0x0,8
tick,0x7ffdf681f424,13453569,0,0x0,8
tick,0x7ffdf681f424,13455431,0,0x0,8
tick,0x7ffdf681f424,13457548,0,0x0,8
tick,0x7ffdf681f424,13459439,0,0x0,8
tick,0x7ffdf681f424,13461547,0,0x0,8
tick,0x7ffdf681f424,13463537,0,0x0,8
tick,0x7ffdf681f424,13465534,0,0x0,8
tick,0x7ffdf681f424,13467385,0,0x0,8
tick,0x7ffdf681f424,13469526,0,0x0,8
tick,0x7ffdf681f424,13471532,0,0x0,8
tick,0x7ffdf681f424,13473507,0,0x0,8
tick,0x7ffdf681f424,13475507,0,0x0,8
tick,0x7ffdf681f424,13477499,0,0x0,8
tick,0x7ffdf681f424,13479501,0,0x0,8
tick,0x7ffdf681f424,13481495,0,0x0,8
tick,0x7ffdf681f424,13483481,0,0x0,8
tick,0x7ffdf681f424,13485483,0,0x0,8
tick,0x7ffdf681f424,13487471,0,0x0,8
tick,0x7ffdf681f424,13489515,0,0x0,8
tick,0x7ffdf681f424,13491470,0,0x0,8
tick,0x7ffdf681f424,13493450,0,0x0,8
tick,0x7ffdf681f424,13495344,0,0x0,8
tick,0x7ffdf681f424,13497443,0,0x0,8
tick,0x7ffdf681f424,13499440,0,0x0,8
tick,0x7ffdf681f424,13501433,0,0x0,8
tick,0x7ffdf681f424,13503426,0,0x0,8
tick,0x7ffdf681f424,13505428,0,0x0,8
tick,0x7ffdf681f424,13507412,0,0x0,8
tick,0x7ffdf681f424,13509327,0,0x0,8
tick,0x7ffdf681f424,13511449,0,0x0,8
tick,0x7ffdf681f424,13513213,0,0x0,8
tick,0x7ffdf681f424,13515244,0,0x0,8
tick,0x7ffdf681f424,13517203,0,0x0,8
tick,0x7ffdf681f424,13519170,0,0x0,8
tick,0x7ffdf681f424,13521331,0,0x0,8
tick,0x7ffdf681f424,13523336,0,0x0,8
tick,0x7ffdf681f424,13525326,0,0x0,8
tick,0x7ffdf681f424,13527364,0,0x0,8
tick,0x7ffdf681f424,13529315,0,0x0,8
tick,0x7ffdf681f424,13531200,0,0x0,8
tick,0x7ffdf681f424,13533207,0,0x0,8
tick,0x7ffdf681f424,13535313,0,0x0,8
tick,0x7ffdf681f424,13537285,0,0x0,8
tick,0x7ffdf681f424,13539340,0,0x0,8
tick,0x7ffdf681f424,13541286,0,0x0,8
tick,0x7ffdf681f424,13543318,0,0x0,8
tick,0x7ffdf681f424,13545326,0,0x0,8
tick,0x7ffdf681f424,13547308,0,0x0,8
tick,0x7ffdf681f424,13549308,0,0x0,8
tick,0x7ffdf681f424,13551265,0,0x0,8
tick,0x7ffdf681f424,13553290,0,0x0,8
tick,0x7ffdf681f424,13555336,0,0x0,8
tick,0x7ffdf681f424,13557292,0,0x0,8
tick,0x7ffdf681f424,13559203,0,0x0,8
tick,0x7ffdf681f424,13561314,0,0x0,8
tick,0x7ffdf681f424,13563288,0,0x0,8
tick,0x7ffdf681f424,13565255,0,0x0,8
tick,0x7ffdf681f424,13567335,0,0x0,8
tick,0x7ffdf681f424,13569252,0,0x0,8
tick,0x7ffdf681f424,13571274,0,0x0,8
tick,0x7ffdf681f424,13573292,0,0x0,8
tick,0x7ffdf681f424,13575402,0,0x0,8
tick,0x7ffdf681f424,13577317,0,0x0,8
tick,0x7ffdf681f424,13579359,0,0x0,8
tick,0x7ffdf681f424,13580500,0,0x0,8
tick,0x7ffdf681f424,13582538,0,0x0,8
tick,0x7ffdf681f424,13584413,0,0x0,8
tick,0x7ffdf681f424,13586506,0,0x0,8
tick,0x7ffdf681f424,13588498,0,0x0,8
tick,0x7ffdf681f424,13590508,0,0x0,8
tick,0x7ffdf681f424,13592431,0,0x0,8
tick,0x7ffdf681f424,13594495,0,0x0,8
tick,0x7ffdf681f424,13596500,0,0x0,8
tick,0x7ffdf681f424,13598515,0,0x0,8
tick,0x7ffdf681f424,13600405,0,0x0,8
tick,0x7ffdf681f424,13602476,0,0x0,8
tick,0x7ffdf681f424,13604468,0,0x0,8
tick,0x7ffdf681f424,13606462,0,0x0,8
tick,0x7ffdf681f424,13608418,0,0x0,8
tick,0x7ffdf681f424,13610462,0,0x0,8
tick,0x7ffdf681f424,13612441,0,0x0,8
tick,0x7ffdf681f424,13614444,0,0x0,8
tick,0x7ffdf681f424,13616439,0,0x0,8
tick,0x7ffdf681f424,13618454,0,0x0,8
tick,0x7ffdf681f424,13620445,0,0x0,8
tick,0x7ffdf681f424,13622450,0,0x0,8
tick,0x7ffdf681f424,13624416,0,0x0,8
tick,0x7ffdf681f424,13626416,0,0x0,8
tick,0x7ffdf681f424,13628411,0,0x0,8
tick,0x7ffdf681f424,13630402,0,0x0,8
tick,0x7ffdf681f424,13632395,0,0x0,8
tick,0x7ffdf681f424,13634286,0,0x0,8
tick,0x7ffdf681f424,13636385,0,0x0,8
tick,0x7ffdf681f424,13638381,0,0x0,8
tick,0x7ffdf681f424,13640390,0,0x0,8
tick,0x7ffdf681f424,13642389,0,0x0,8
tick,0x7ffdf681f424,13644348,0,0x0,8
tick,0x7ffdf681f424,13646350,0,0x0,8
tick,0x7ffdf681f424,13648354,0,0x0,8
tick,0x7ffdf681f424,13650352,0,0x0,8
tick,0x7ffdf681f424,13652333,0,0x0,8
tick,0x7ffdf681f424,13654338,0,0x0,8
tick,0x7ffdf681f424,13656333,0,0x0,8
tick,0x7ffdf681f424,13658328,0,0x0,8
tick,0x7ffdf681f424,13660321,0,0x0,8
tick,0x7ffdf681f424,13662352,0,0x0,8
tick,0x7ffdf681f424,13664320,0,0x0,8
tick,0x7ffdf681f424,13666308,0,0x0,8
tick,0x7ffdf681f424,13668308,0,0x0,8
tick,0x7ffdf681f424,13670293,0,0x0,8
tick,0x7ffdf681f424,13672288,0,0x0,8
tick,0x7ffdf681f424,13674291,0,0x0,8
tick,0x7ffdf681f424,13676277,0,0x0,8
tick,0x7ffdf681f424,13678274,0,0x0,8
tick,0x7ffdf681f424,13680271,0,0x0,8
tick,0x7ffdf681f424,13682321,0,0x0,8
tick,0x7ffdf681f424,13684209,0,0x0,8
tick,0x7ffdf681f424,13686161,0,0x0,8
tick,0x7ffdf681f424,13688292,0,0x0,8
tick,0x7ffdf681f424,13690249,0,0x0,8
tick,0x7ffdf681f424,13692256,0,0x0,8
tick,0x7ffdf681f424,13694230,0,0x0,8
tick,0x7ffdf681f424,13696236,0,0x0,8
tick,0x7ffdf681f424,13698224,0,0x0,8
tick,0x7ffdf681f424,13700114,0,0x0,8
tick,0x7ffdf681f424,13702213,0,0x0,8
tick,0x7ffdf681f424,13704211,0,0x0,8
tick,0x7ffdf681f424,13706246,0,0x0,8
tick,0x7ffdf681f424,13708205,0,0x0,8
tick,0x7ffdf681f424,13710207,0,0x0,8
tick,0x7ffdf681f424,13712190,0,0x0,8
tick,0x7ffdf681f424,13714172,0,0x0,8
tick,0x7ffdf681f424,13716179,0,0x0,8
tick,0x7ffdf681f424,13718173,0,0x0,8
tick,0x7ffdf681f424,13720162,0,0x0,8
tick,0x7ffdf681f424,13722162,0,0x0,8
tick,0x7ffdf681f424,13724178,0,0x0,8
tick,0x7ffdf681f424,13726052,0,0x0,8
tick,0x7ffdf681f424,13728208,0,0x0,8
tick,0x7ffdf681f424,13730138,0,0x0,8
tick,0x7ffdf681f424,13732151,0,0x0,8
tick,0x7ffdf681f424,13734122,0,0x0,8
tick,0x7ffdf681f424,13736124,0,0x0,8
tick,0x7ffdf681f424,13738120,0,0x0,8
tick,0x7ffdf681f424,13740124,0,0x0,8
tick,0x7ffdf681f424,13742106,0,0x0,8
tick,0x7ffdf681f424,13744101,0,0x0,8
tick,0x7ffdf681f424,13746103,0,0x0,8
tick,0x7ffdf681f424,13748102,0,0x0,8
tick,0x7ffdf681f424,13750163,0,0x0,8
tick,0x7ffdf681f424,13752089,0,0x0,8
tick,0x7ffdf681f424,13754044,0,0x0,8
tick,0x7ffdf681f424,13756106,0,0x0,8
tick,0x7ffdf681f424,13758066,0,0x0,8
tick,0x7ffdf681f424,13760059,0,0x0,8
tick,0x7ffdf681f424,13761993,0,0x0,8
tick,0x7ffdf681f424,13764058,0,0x0,8
tick,0x7ffdf681f424,13766044,0,0x0,8
tick,0x7ffdf681f424,13767927,0,0x0,8
tick,0x7ffdf681f424,13770035,0,0x0,8
tick,0x7ffdf681f424,13771919,0,0x0,8
tick,0x7ffdf681f424,13774023,0,0x0,8
tick,0x7ffdf681f424,13775921,0,0x0,8
tick,0x7ffdf681f424,13777949,0,0x0,8
tick,0x7ffdf681f424,13779905,0,0x0,8
tick,0x7ffdf681f424,13781872,0,0x0,8
tick,0x7ffdf681f424,13783826,0,0x0,8
tick,0x7ffdf681f424,13785842,0,0x0,8
tick,0x7ffdf681f424,13787944,0,0x0,8
tick,0x7ffdf681f424,13789952,0,0x0,8
tick,0x7ffdf681f424,13791966,0,0x0,8
tick,0x7ffdf681f424,13793879,0,0x0,8
tick,0x7ffdf681f424,13795872,0,0x0,8
tick,0x7ffdf681f424,13797927,0,0x0,8
tick,0x7ffdf681f424,13799944,0,0x0,8
tick,0x7ffdf681f424,13801952,0,0x0,8
tick,0x7ffdf681f424,13803928,0,0x0,8
tick,0x7ffdf681f424,13805923,0,0x0,8
tick,0x7ffdf681f424,13807930,0,0x0,8
tick,0x7ffdf681f424,13809913,0,0x0,8
tick,0x7ffdf681f424,13811901,0,0x0,8
tick,0x7ffdf681f424,13813912,0,0x0,8
tick,0x7ffdf681f424,13815904,0,0x0,8
tick,0x7ffdf681f424,13817899,0,0x0,8
tick,0x7ffdf681f424,13819875,0,0x0,8
tick,0x7ffdf681f424,13821874,0,0x0,8
tick,0x7ffdf681f424,13823895,0,0x0,8
tick,0x7ffdf681f424,13825788,0,0x0,8
tick,0x7ffdf681f424,13827869,0,0x0,8
tick,0x7ffdf681f424,13829854,0,0x0,8
tick,0x7ffdf681f424,13831869,0,0x0,8
tick,0x7ffdf681f424,13833744,0,0x0,8
tick,0x7ffdf681f424,13835900,0,0x0,8
tick,0x7ffdf681f424,13837786,0,0x0,8
tick,0x7ffdf681f424,13839741,0,0x0,8
tick,0x7ffdf681f424,13841888,0,0x0,8
tick,0x7ffdf681f424,13843732,0,0x0,8
tick,0x7ffdf681f424,13845817,0,0x0,8
tick,0x7ffdf681f424,13847834,0,0x0,8
tick,0x7ffdf681f424,13849809,0,0x0,8
tick,0x7ffdf681f424,13851817,0,0x0,8
tick,0x7ffdf681f424,13853802,0,0x0,8
tick,0x7ffdf681f424,13855796,0,0x0,8
tick,0x7ffdf681f424,13857792,0,0x0,8
tick,0x7ffdf681f424,13859784,0,0x0,8
tick,0x7ffdf681f424,13861786,0,0x0,8
tick,0x7ffdf681f424,13863745,0,0x0,8
tick,0x7ffdf681f424,13865784,0,0x0,8
tick,0x7ffdf681f424,13867662,0,0x0,8
tick,0x7ffdf681f424,13869769,0,0x0,8
tick,0x7ffdf681f424,13871772,0,0x0,8
tick,0x7ffdf681f424,13873753,0,0x0,8
tick,0x7ffdf681f424,13875750,0,0x0,8
tick,0x7ffdf681f424,13877726,0,0x0,8
tick,0x7ffdf681f424,13879730,0,0x0,8
tick,0x7ffdf681f424,13881779,0,0x0,8
tick,0x7ffdf681f424,13883724,0,0x0,8
tick,0x7ffdf681f424,13885691,0,0x0,8
tick,0x7ffdf681f424,13887719,0,0x0,8
tick,0x7ffdf681f424,13889712,0,0x0,8
tick,0x7ffdf681f424,13891778,0,0x0,8
tick,0x7ffdf681f424,13893701,0,0x0,8
tick,0x7ffdf681f424,13895698,0,0x0,8
tick,0x7ffdf681f424,13897691,0,0x0,8
tick,0x7ffdf681f424,13899687,0,0x0,8
tick,0x7ffdf681f424,13901681,0,0x0,8
tick,0x7ffdf681f424,13903724,0,0x0,8
tick,0x7ffdf681f424,13905671,0,0x0,8
tick,0x7ffdf681f424,13907639,0,0x0,8
tick,0x7ffdf681f424,13909670,0,0x0,8
tick,0x7ffdf681f424,13911655,0,0x0,8
tick,0x7ffdf681f424,13913655,0,0x0,8
tick,0x7ffdf681f424,13915682,0,0x0,8
tick,0x7ffdf681f424,13917519,0,0x0,8
tick,0x7ffdf681f424,13919533,0,0x0,8
tick,0x7ffdf681f424,13921633,0,0x0,8
tick,0x7ffdf681f424,13923469,0,0x0,8
tick,0x7ffdf681f424,13925421,0,0x0,8
tick,0x7ffdf681f424,13927415,0,0x0,8
tick,0x7ffdf681f424,13929496,0,0x0,8
tick,0x7ffdf681f424,13931583,0,0x0,8
tick,0x7ffdf681f424,13933618,0,0x0,8
tick,0x7ffdf681f424,13935456,0,0x0,8
tick,0x7ffdf681f424,13937585,0,0x0,8
tick,0x7ffdf681f424,13939568,0,0x0,8
tick,0x7ffdf681f424,13941542,0,0x0,8
tick,0x7ffdf681f424,13943550,0,0x0,8
tick,0x7ffdf681f424,13945528,0,0x0,8
tick,0x7ffdf681f424,13947566,0,0x0,8
tick,0x7ffdf681f424,13949503,0,0x0,8
tick,0x7ffdf681f424,13951524,0,0x0,8
tick,0x7ffdf681f424,13953513,0,0x0,8
tick,0x7ffdf681f424,13955488,0,0x0,8
tick,0x7ffdf681f424,13957514,0,0x0,8
tick,0x7ffdf681f424,13959447,0,0x0,8
tick,0x7ffdf681f424,13961471,0,0x0,8
tick,0x7ffdf681f424,13963484,0,0x0,8
tick,0x7ffdf681f424,13965460,0,0x0,8
tick,0x7ffdf681f424,13967526,0,0x0,8
tick,0x7ffdf681f424,13969377,0,0x0,8
tick,0x7ffdf681f424,13971459,0,0x0,8
tick,0x7ffdf681f424,13973547,0,0x0,8
tick,0x7ffdf681f424,13975377,0,0x0,8
tick,0x7ffdf681f424,13977488,0,0x0,8
tick,0x7ffdf681f424,13979473,0,0x0,8
tick,0x7ffdf681f424,13981472,0,0x0,8
tick,0x7ffdf681f424,13983476,0,0x0,8
tick,0x7ffdf681f424,13985451,0,0x0,8
tick,0x7ffdf681f424,13987456,0,0x0,8
tick,0x7ffdf681f424,13989493,0,0x0,8
tick,0x7ffdf681f424,13991324,0,0x0,8
tick,0x7ffdf681f424,13993324,0,0x0,8
tick,0x7ffdf681f424,13995465,0,0x0,8
tick,0x7ffdf681f424,13997416,0,0x0,8
tick,0x7ffdf681f424,13999406,0,0x0,8
tick,0x7ffdf681f424,14001321,0,0x0,8
tick,0x7ffdf681f424,14003406,0,0x0,8
tick,0x7ffdf681f424,14005397,0,0x0,8
tick,0x7ffdf681f424,14007289,0,0x0,8
tick,0x7ffdf681f424,14009296,0,0x0,8
tick,0x7ffdf681f424,14011273,0,0x0,8
tick,0x7ffdf681f424,14013391,0,0x0,8
tick,0x7ffdf681f424,14015376,0,0x0,8
tick,0x7ffdf681f424,14017380,0,0x0,8
tick,0x7ffdf681f424,14019359,0,0x0,8
tick,0x7ffdf681f424,14021354,0,0x0,8
tick,0x7ffdf681f424,14023355,0,0x0,8
tick,0x7ffdf681f424,14025352,0,0x0,8
tick,0x7ffdf681f424,14027338,0,0x0,8
tick,0x7ffdf681f424,14029326,0,0x0,8
tick,0x7ffdf681f424,14031329,0,0x0,8
tick,0x7ffdf681f424,14033341,0,0x0,8
tick,0x7ffdf681f424,14035326,0,0x0,8
tick,0x7ffdf681f424,14037305,0,0x0,8
tick,0x7ffdf681f424,14039325,0,0x0,8
tick,0x7ffdf681f424,14041305,0,0x0,8
tick,0x7ffdf681f424,14043288,0,0x0,8
tick,0x7ffdf681f424,14045318,0,0x0,8
tick,0x7ffdf681f424,14047284,0,0x0,8
tick,0x7ffdf681f424,14049280,0,0x0,8
tick,0x7ffdf681f424,14051281,0,0x0,8
tick,0x7ffdf681f424,14053276,0,0x0,8
tick,0x7ffdf681f424,14055268,0,0x0,8
tick,0x7ffdf681f424,14057307,0,0x0,8
tick,0x7ffdf681f424,14059165,0,0x0,8
tick,0x7ffdf681f424,14061260,0,0x0,8
tick,0x7ffdf681f424,14063246,0,0x0,8
tick,0x7ffdf681f424,14065232,0,0x0,8
tick,0x7ffdf681f424,14067254,0,0x0,8
tick,0x7ffdf681f424,14069197,0,0x0,8
tick,0x7ffdf681f424,14071216,0,0x0,8
tick,0x7ffdf681f424,14073214,0,0x0,8
tick,0x7ffdf681f424,14075227,0,0x0,8
tick,0x7ffdf681f424,14077107,0,0x0,8
tick,0x7ffdf681f424,14079209,0,0x0,8
tick,0x7ffdf681f424,14081211,0,0x0,8
tick,0x7ffdf681f424,14083170,0,0x0,8
tick,0x7ffdf681f424,14085074,0,0x0,8
tick,0x7ffdf681f424,14087069,0,0x0,8
tick,0x7ffdf681f424,14089055,0,0x0,8
tick,0x7ffdf681f424,14091133,0,0x0,8
tick,0x7ffdf681f424,14092995,0,0x0,8
tick,0x7ffdf681f424,14094966,0,0x0,8
tick,0x7ffdf681f424,14097106,0,0x0,8
tick,0x7ffdf681f424,14099167,0,0x0,8
tick,0x7ffdf681f424,14101037,0,0x0,8
tick,0x7ffdf681f424,14103030,0,0x0,8
tick,0x7ffdf681f424,14105134,0,0x0,8
tick,0x7ffdf681f424,14107122,0,0x0,8
tick,0x7ffdf681f424,14109137,0,0x0,8
tick,0x7ffdf681f424,14111102,0,0x0,8
tick,0x7ffdf681f424,14113097,0,0x0,8
tick,0x7ffdf681f424,14115107,0,0x0,8
tick,0x7ffdf681f424,14117084,0,0x0,8
tick,0x7ffdf681f424,14119080,0,0x0,8
tick,0x7ffdf681f424,14121118,0,0x0,8
tick,0x7ffdf681f424,14123097,0,0x0,8
tick,0x7ffdf681f424,14125066,0,0x0,8
tick,0x7ffdf681f424,14127036,0,0x0,8
tick,0x7ffdf681f424,14129053,0,0x0,8
tick,0x7ffdf681f424,14131065,0,0x0,8
tick,0x7ffdf681f424,14133051,0,0x0,8
tick,0x7ffdf681f424,14135062,0,0x0,8
tick,0x7ffdf681f424,14137033,0,0x0,8
tick,0x7ffdf681f424,14139044,0,0x0,8
tick,0x7ffdf681f424,14141030,0,0x0,8
tick,0x7ffdf681f424,14143062,0,0x0,8
tick,0x7ffdf681f424,14144929,0,0x0,8
tick,0x7ffdf681f424,14146908,0,0x0,8
tick,0x7ffdf681f424,14149052,0,0x0,8
tick,0x7ffdf681f424,14150899,0,0x0,8
tick,0x7ffdf681f424,14152991,0,0x0,8
tick,0x7ffdf681f424,14155026,0,0x0,8
tick,0x7ffdf681f424,14156982,0,0x0,8
tick,0x7ffdf681f424,14158991,0,0x0,8
tick,0x7ffdf681f424,14160984,0,0x0,8
tick,0x7ffdf681f424,14162977,0,0x0,8
tick,0x7ffdf681f424,14164980,0,0x0,8
tick,0x7ffdf681f424,14167028,0,0x0,8
tick,0x7ffdf681f424,14168969,0,0x0,8
tick,0x7ffdf681f424,14170935,0,0x0,8
tick,0x7ffdf681f424,14172901,0,0x0,8
tick,0x7ffdf681f424,14174938,0,0x0,8
tick,0x7ffdf681f424,14176939,0,0x0,8
tick,0x7ffdf681f424,14178937,0,0x0,8
tick,0x7ffdf681f424,14180937,0,0x0,8
tick,0x7ffdf681f424,14182923,0,0x0,8
tick,0x7ffdf681f424,14184910,0,0x0,8
tick,0x7ffdf681f424,14186909,0,0x0,8
tick,0x7ffdf681f424,14188900,0,0x0,8
tick,0x7ffdf681f424,14190903,0,0x0,8
tick,0x7ffdf681f424,14192814,0,0x0,8
tick,0x7ffdf681f424,14194885,0,0x0,8
tick,0x7ffdf681f424,14196901,0,0x0,8
tick,0x7ffdf681f424,14198877,0,0x0,8
tick,0x7ffdf681f424,14200840,0,0x0,8
tick,0x7ffdf681f424,14202888,0,0x0,8
tick,0x7ffdf681f424,14204873,0,0x0,8
tick,0x7ffdf681f424,14206864,0,0x0,8
tick,0x7ffdf681f424,14208865,0,0x0,8
tick,0x7ffdf681f424,14210878,0,0x0,8
tick,0x7ffdf681f424,14212847,0,0x0,8
tick,0x7ffdf681f424,14214849,0,0x0,8
tick,0x7ffdf681f424,14216842,0,0x0,8
tick,0x7ffdf681f424,14218821,0,0x0,8
tick,0x7ffdf681f424,14220825,0,0x0,8
tick,0x7ffdf681f424,14222748,0,0x0,8
tick,0x7ffdf681f424,14224813,0,0x0,8
tick,0x7ffdf681f424,14226829,0,0x0,8
tick,0x7ffdf681f424,14228804,0,0x0,8
tick,0x7ffdf681f424,14230799,0,0x0,8
tick,0x7ffdf681f424,14232801,0,0x0,8
tick,0x7ffdf681f424,14234686,0,0x0,8
tick,0x7ffdf681f424,14236791,0,0x0,8
tick,0x7ffdf681f424,14238775,0,0x0,8
tick,0x7ffdf681f424,14240773,0,0x0,8
tick,0x7ffdf681f424,14242655,0,0x0,8
tick,0x7ffdf681f424,14244757,0,0x0,8
tick,0x7ffdf681f424,14246763,0,0x0,8
tick,0x7ffdf681f424,14248746,0,0x0,8
tick,0x7ffdf681f424,14250751,0,0x0,8
tick,0x7ffdf681f424,14252752,0,0x0,8
tick,0x7ffdf681f424,14254742,0,0x0,8
tick,0x7ffdf681f424,14256722,0,0x0,8
tick,0x7ffdf681f424,14258733,0,0x0,8
tick,0x7ffdf681f424,14260719,0,0x0,8
tick,0x7ffdf681f424,14262708,0,0x0,8
tick,0x7ffdf681f424,14264700,0,0x0,8
tick,0x7ffdf681f424,14266692,0,0x0,8
tick,0x7ffdf681f424,14268705,0,0x0,8
tick,0x7ffdf681f424,14270689,0,0x0,8
tick,0x7ffdf681f424,14272693,0,0x0,8
tick,0x7ffdf681f424,14274694,0,0x0,8
tick,0x7ffdf681f424,14276683,0,0x0,8
tick,0x7ffdf681f424,14278666,0,0x0,8
tick,0x7ffdf681f424,14280674,0,0x0,8
tick,0x7ffdf681f424,14282656,0,0x0,8
tick,0x7ffdf681f424,14284639,0,0x0,8
tick,0x7ffdf681f424,14286643,0,0x0,8
tick,0x7ffdf681f424,14288647,0,0x0,8
tick,0x7ffdf681f424,14290634,0,0x0,8
tick,0x7ffdf681f424,14292545,0,0x0,8
tick,0x7ffdf681f424,14294632,0,0x0,8
tick,0x7ffdf681f424,14296687,0,0x0,8
tick,0x7ffdf681f424,14298542,0,0x0,8
tick,0x7ffdf681f424,14300507,0,0x0,8
tick,0x7ffdf681f424,14302573,0,0x0,8
tick,0x7ffdf681f424,14304608,0,0x0,8
tick,0x7ffdf681f424,14306598,0,0x0,8
tick,0x7ffdf681f424,14308594,0,0x0,8
tick,0x7ffdf681f424,14310478,0,0x0,8
tick,0x7ffdf681f424,14312584,0,0x0,8
tick,0x7ffdf681f424,14314469,0,0x0,8
tick,0x7ffdf681f424,14316570,0,0x0,8
tick,0x7ffdf681f424,14318575,0,0x0,8
tick,0x7ffdf681f424,14320567,0,0x0,8
tick,0x7ffdf681f424,14322558,0,0x0,8
tick,0x7ffdf681f424,14324562,0,0x0,8
tick,0x7ffdf681f424,14326576,0,0x0,8
tick,0x7ffdf681f424,14328546,0,0x0,8
tick,0x7ffdf681f424,14330549,0,0x0,8
tick,0x7ffdf681f424,14332528,0,0x0,8
tick,0x7ffdf681f424,14334433,0,0x0,8
tick,0x7ffdf681f424,14336528,0,0x0,8
tick,0x7ffdf681f424,14338507,0,0x0,8
tick,0x7ffdf681f424,14340505,0,0x0,8
tick,0x7ffdf681f424,14342517,0,0x0,8
tick,0x7ffdf681f424,14344491,0,0x0,8
tick,0x7ffdf681f424,14346502,0,0x0,8
tick,0x7ffdf681f424,14348488,0,0x0,8
tick,0x7ffdf681f424,14350487,0,0x0,8
tick,0x7ffdf681f424,14352475,0,0x0,8
tick,0x7ffdf681f424,14354472,0,0x0,8
tick,0x7ffdf681f424,14356464,0,0x0,8
tick,0x7ffdf681f424,14358467,0,0x0,8
tick,0x7ffdf681f424,14360456,0,0x0,8
tick,0x7ffdf681f424,14362478,0,0x0,8
tick,0x7ffdf681f424,14364294,0,0x0,8
tick,0x7ffdf681f424,14366318,0,0x0,8
tick,0x7ffdf681f424,14368276,0,0x0,8
tick,0x7ffdf681f424,14370342,0,0x0,8
tick,0x7ffdf681f424,14372441,0,0x0,8
tick,0x7ffdf681f424,14374449,0,0x0,8
tick,0x7ffdf681f424,14376411,0,0x0,8
tick,0x7ffdf681f424,14378294,0,0x0,8
tick,0x7ffdf681f424,14380417,0,0x0,8
tick,0x7ffdf681f424,14382445,0,0x0,8
tick,0x7ffdf681f424,14384299,0,0x0,8
tick,0x7ffdf681f424,14385412,0,0x0,8
tick,0x7ffdf681f424,14386519,0,0x0,8
tick,0x7ffdf681f424,14388505,0,0x0,8
tick,0x7ffdf681f424,14390512,0,0x0,8
tick,0x7ffdf681f424,14392515,0,0x0,8
tick,0x7ffdf681f424,14394478,0,0x0,8
tick,0x7ffdf681f424,14396471,0,0x0,8
tick,0x7ffdf681f424,14398460,0,0x0,8
tick,0x7ffdf681f424,14400455,0,0x0,8
tick,0x7ffdf681f424,14402468,0,0x0,8
tick,0x7ffdf681f424,14404485,0,0x0,8
tick,0x7ffdf681f424,14406500,0,0x0,8
tick,0x7ffdf681f424,14408487,0,0x0,8
tick,0x7ffdf681f424,14410358,0,0x0,8
tick,0x7ffdf681f424,14412449,0,0x0,8
tick,0x7ffdf681f424,14414442,0,0x0,8
tick,0x7ffdf681f424,14416448,0,0x0,8
tick,0x7ffdf681f424,14418444,0,0x0,8
tick,0x7ffdf681f424,14420435,0,0x0,8
tick,0x7ffdf681f424,14422425,0,0x0,8
tick,0x7ffdf681f424,14424417,0,0x0,8
tick,0x7ffdf681f424,14426454,0,0x0,8
tick,0x7ffdf681f424,14428440,0,0x0,8
tick,0x7ffdf681f424,14430410,0,0x0,8
tick,0x7ffdf681f424,14432393,0,0x0,8
tick,0x7ffdf681f424,14434292,0,0x0,8
tick,0x7ffdf681f424,14436389,0,0x0,8
tick,0x7ffdf681f424,14438381,0,0x0,8
tick,0x7ffdf681f424,14440373,0,0x0,8
tick,0x7ffdf681f424,14442377,0,0x0,8
tick,0x7ffdf681f424,14444374,0,0x0,8
tick,0x7ffdf681f424,14446361,0,0x0,8
tick,0x7ffdf681f424,14448365,0,0x0,8
tick,0x7ffdf681f424,14450385,0,0x0,8
tick,0x7ffdf681f424,14452237,0,0x0,8
tick,0x7ffdf681f424,14454237,0,0x0,8
tick,0x7ffdf681f424,14456321,0,0x0,8
tick,0x7ffdf681f424,14458336,0,0x0,8
tick,0x7ffdf681f424,14460306,0,0x0,8
tick,0x7ffdf681f424,14462325,0,0x0,8
tick,0x7ffdf681f424,14464315,0,0x0,8
tick,0x7ffdf681f424,14466314,0,0x0,8
tick,0x7ffdf681f424,14468301,0,0x0,8
tick,0x7ffdf681f424,14470309,0,0x0,8
tick,0x7ffdf681f424,14472322,0,0x0,8
tick,0x7ffdf681f424,14474288,0,0x0,8
tick,0x7ffdf681f424,14476285,0,0x0,8
tick,0x7ffdf681f424,14478273,0,0x0,8
tick,0x7ffdf681f424,14480274,0,0x0,8
tick,0x7ffdf681f424,14482270,0,0x0,8
tick,0x7ffdf681f424,14484222,0,0x0,8
tick,0x7ffdf681f424,14486250,0,0x0,8
tick,0x7ffdf681f424,14488257,0,0x0,8
tick,0x7ffdf681f424,14490254,0,0x0,8
tick,0x7ffdf681f424,14492250,0,0x0,8
tick,0x7ffdf681f424,14494274,0,0x0,8
tick,0x7ffdf681f424,14496238,0,0x0,8
tick,0x7ffdf681f424,14498235,0,0x0,8
tick,0x7ffdf681f424,14500231,0,0x0,8
tick,0x7ffdf681f424,14502220,0,0x0,8
tick,0x7ffdf681f424,14504218,0,0x0,8
tick,0x7ffdf681f424,14506206,0,0x0,8
tick,0x7ffdf681f424,14508212,0,0x0,8
tick,0x7ffdf681f424,14510205,0,0x0,8
tick,0x7ffdf681f424,14512196,0,0x0,8
tick,0x7ffdf681f424,14514205,0,0x0,8
tick,0x7ffdf681f424,14516218,0,0x0,8
tick,0x7ffdf681f424,14518181,0,0x0,8
tick,0x7ffdf681f424,14520190,0,0x0,8
tick,0x7ffdf681f424,14522101,0,0x0,8
tick,0x7ffdf681f424,14524172,0,0x0,8
tick,0x7ffdf681f424,14526100,0,0x0,8
tick,0x7ffdf681f424,14528129,0,0x0,8
tick,0x7ffdf681f424,14530063,0,0x0,8
tick,0x7ffdf681f424,14532093,0,0x0,8
tick,0x7ffdf681f424,14534129,0,0x0,8
tick,0x7ffdf681f424,14536133,0,0x0,8
tick,0x7ffdf681f424,14538167,0,0x0,8
tick,0x7ffdf681f424,14540126,0,0x0,8
tick,0x7ffdf681f424,14542114,0,0x0,8
tick,0x7ffdf681f424,14544111,0,0x0,8
tick,0x7ffdf681f424,14546107,0,0x0,8
tick,0x7ffdf681f424,14548124,0,0x0,8
tick,0x7ffdf681f424,14550092,0,0x0,8
tick,0x7ffdf681f424,14552092,0,0x0,8
tick,0x7ffdf681f424,14554121,0,0x0,8
tick,0x7ffdf681f424,14556082,0,0x0,8
tick,0x7ffdf681f424,14558074,0,0x0,8
tick,0x7ffdf681f424,14559988,0,0x0,8
tick,0x7ffdf681f424,14562120,0,0x0,8
tick,0x7ffdf681f424,14564066,0,0x0,8
tick,0x7ffdf681f424,14566089,0,0x0,8
tick,0x7ffdf681f424,14567218,0,0x0,8
tick,0x7ffdf681f424,14569180,0,0x0,8
tick,0x7ffdf681f424,14571188,0,0x0,8
tick,0x7ffdf681f424,14573088,0,0x0,8
tick,0x7ffdf681f424,14574268,0,0x0,8
tick,0x7ffdf681f424,14576206,0,0x0,8
tick,0x7ffdf681f424,14578233,0,0x0,8
tick,0x7ffdf681f424,14580303,0,0x0,8
tick,0x7ffdf681f424,14582357,0,0x0,8
tick,0x7ffdf681f424,14584298,0,0x0,8
tick,0x7ffdf681f424,14586354,0,0x0,8
tick,0x7ffdf681f424,14588335,0,0x0,8
tick,0x7ffdf681f424,14590298,0,0x0,8
tick,0x7ffdf681f424,14591420,0,0x0,8
tick,0x7ffdf681f424,14592518,0,0x0,8
tick,0x7ffdf681f424,14594549,0,0x0,8
tick,0x7ffdf681f424,14596607,0,0x0,8
tick,0x7ffdf681f424,14597739,0,0x0,8
tick,0x7ffdf681f424,14599785,0,0x0,8
tick,0x7ffdf681f424,14601775,0,0x0,8
tick,0x7ffdf681f424,14603829,0,0x0,8
tick,0x7ffdf681f424,14605907,0,0x0,8
tick,0x7ffdf681f424,14607865,0,0x0,8
tick,0x7ffdf681f424,14609955,0,0x0,8
tick,0x7ffdf681f424,14611870,0,0x0,8
tick,0x7ffdf681f424,14613904,0,0x0,8
tick,0x7ffdf681f424,14615990,0,0x0,8
tick,0x7ffdf681f424,14617949,0,0x0,8
tick,0x7ffdf681f424,14619955,0,0x0,8
tick,0x7ffdf681f424,14621930,0,0x0,8
tick,0x7ffdf681f424,14624003,0,0x0,8
tick,0x7ffdf681f424,14626021,0,0x0,8
tick,0x7ffdf681f424,14627954,0,0x0,8
tick,0x7ffdf681f424,14630002,0,0x0,8
tick,0x7ffdf681f424,14632006,0,0x0,8
tick,0x7ffdf681f424,14634084,0,0x0,8
tick,0x7ffdf681f424,14636080,0,0x0,8
tick,0x7ffdf681f424,14638029,0,0x0,8
tick,0x7ffdf681f424,14640003,0,0x0,8
tick,0x7ffdf681f424,14642069,0,0x0,8
tick,0x7ffdf681f424,14644007,0,0x0,8
tick,0x7ffdf681f424,14645962,0,0x0,8
tick,0x7ffdf681f424,14648084,0,0x0,8
tick,0x7ffdf681f424,14650044,0,0x0,8
tick,0x7ffdf681f424,14652062,0,0x0,8
tick,0x7ffdf681f424,14654046,0,0x0,8
tick,0x7ffdf681f424,14656122,0,0x0,8
tick,0x7ffdf681f424,14658207,0,0x0,8
tick,0x7ffdf681f424,14660242,0,0x0,8
tick,0x7ffdf681f424,14662253,0,0x0,8
tick,0x7ffdf681f424,14664205,0,0x0,8
tick,0x7ffdf681f424,14666173,0,0x0,8
tick,0x7ffdf681f424,14668276,0,0x0,8
tick,0x7ffdf681f424,14670215,0,0x0,8
tick,0x7ffdf681f424,14672265,0,0x0,8
tick,0x7ffdf681f424,14674293,0,0x0,8
tick,0x7ffdf681f424,14676449,0,0x0,8
tick,0x7ffdf681f424,14678511,0,0x0,8
tick,0x7ffdf681f424,14680579,0,0x0,8
tick,0x7ffdf681f424,14682535,0,0x0,8
tick,0x7ffdf681f424,14684562,0,0x0,8
tick,0x7ffdf681f424,14686636,0,0x0,8
tick,0x7ffdf681f424,14688712,0,0x0,8
tick,0x7ffdf681f424,14690723,0,0x0,8
tick,0x7ffdf681f424,14692646,0,0x0,8
tick,0x7ffdf681f424,14694697,0,0x0,8
tick,0x7ffdf681f424,14696761,0,0x0,8
tick,0x7ffdf681f424,14698838,0,0x0,8
tick,0x7ffdf681f424,14700828,0,0x0,8
tick,0x7ffdf681f424,14702839,0,0x0,8
tick,0x7ffdf681f424,14704864,0,0x0,8
tick,0x7ffdf681f424,14706844,0,0x0,8
tick,0x7ffdf681f424,14708941,0,0x0,8
tick,0x7ffdf681f424,14710951,0,0x0,8
tick,0x7ffdf681f424,14712922,0,0x0,8
tick,0x7ffdf681f424,14715042,0,0x0,8
tick,0x7ffdf681f424,14717215,0,0x0,8
tick,0x7ffdf681f424,14718298,0,0x0,8
tick,0x7ffdf681f424,14720300,0,0x0,8
tick,0x7ffdf681f424,14722350,0,0x0,8
tick,0x7ffdf681f424,14724274,0,0x0,8
tick,0x7ffdf681f424,14726352,0,0x0,8
tick,0x7ffdf681f424,14728395,0,0x0,8
tick,0x7ffdf681f424,14730352,0,0x0,8
tick,0x7ffdf681f424,14732377,0,0x0,8
tick,0x7ffdf681f424,14734335,0,0x0,8
tick,0x7ffdf681f424,14736291,0,0x0,8
tick,0x7ffdf681f424,14738395,0,0x0,8
tick,0x7ffdf681f424,14740460,0,0x0,8
tick,0x7ffdf681f424,14742555,0,0x0,8
tick,0x7ffdf681f424,14744505,0,0x0,8
tick,0x7ffdf681f424,14746592,0,0x0,8
tick,0x7ffdf681f424,14748651,0,0x0,8
tick,0x7ffdf681f424,14750699,0,0x0,8
tick,0x7ffdf681f424,14752724,0,0x0,8
tick,0x7ffdf681f424,14754702,0,0x0,8
tick,0x7ffdf681f424,14756705,0,0x0,8
tick,0x7ffdf681f424,14758661,0,0x0,8
tick,0x7ffdf681f424,14760696,0,0x0,8
tick,0x7ffdf681f424,14762672,0,0x0,8
tick,0x7ffdf681f424,14764710,0,0x0,8
tick,0x7ffdf681f424,14766755,0,0x0,8
tick,0x7ffdf681f424,14768824,0,0x0,8
tick,0x7ffdf681f424,14770846,0,0x0,8
tick,0x7ffdf681f424,14772918,0,0x0,8
tick,0x7ffdf681f424,14774970,0,0x0,8
tick,0x7ffdf681f424,14777028,0,0x0,8
tick,0x7ffdf681f424,14779092,0,0x0,8
tick,0x7ffdf681f424,14781114,0,0x0,8
tick,0x7ffdf681f424,14783121,0,0x0,8
tick,0x7ffdf681f424,14785104,0,0x0,8
tick,0x7ffdf681f424,14787170,0,0x0,8
tick,0x7ffdf681f424,14789270,0,0x0,8
tick,0x7ffdf681f424,14791372,0,0x0,8
tick,0x7ffdf681f424,14793456,0,0x0,8
tick,0x7ffdf681f424,14795461,0,0x0,8
tick,0x7ffdf681f424,14797547,0,0x0,8
tick,0x7ffdf681f424,14799622,0,0x0,8
tick,0x7ffdf681f424,14801724,0,0x0,8
tick,0x7ffdf681f424,14803809,0,0x0,8
tick,0x7ffdf681f424,14805835,0,0x0,8
tick,0x7ffdf681f424,14807899,0,0x0,8
tick,0x7ffdf681f424,14809946,0,0x0,8
tick,0x7ffdf681f424,14811932,0,0x0,8
tick,0x7ffdf681f424,14814025,0,0x0,8
tick,0x7ffdf681f424,14816063,0,0x0,8
tick,0x7ffdf681f424,14818164,0,0x0,8
tick,0x7ffdf681f424,14820281,0,0x0,8
tick,0x7ffdf681f424,14822218,0,0x0,8
tick,0x7ffdf681f424,14824242,0,0x0,8
tick,0x7ffdf681f424,14826228,0,0x0,8
tick,0x7ffdf681f424,14828093,0,0x0,8
tick,0x7ffdf681f424,14830086,0,0x0,8
tick,0x7ffdf681f424,14832168,0,0x0,8
tick,0x7ffdf681f424,14834089,0,0x0,8
tick,0x7ffdf681f424,14836081,0,0x0,8
tick,0x7ffdf681f424,14838198,0,0x0,8
tick,0x7ffdf681f424,14840178,0,0x0,8
tick,0x7ffdf681f424,14842154,0,0x0,8
tick,0x7ffdf681f424,14844153,0,0x0,8
tick,0x7ffdf681f424,14846131,0,0x0,8
tick,0x7ffdf681f424,14848184,0,0x0,8
tick,0x7ffdf681f424,14850142,0,0x0,8
tick,0x7ffdf681f424,14852141,0,0x0,8
tick,0x7ffdf681f424,14854134,0,0x0,8
tick,0x7ffdf681f424,14856110,0,0x0,8
tick,0x7ffdf681f424,14858150,0,0x0,8
tick,0x7ffdf681f424,14860109,0,0x0,8
tick,0x7ffdf681f424,14862255,0,0x0,8
tick,0x7ffdf681f424,14864250,0,0x0,8
tick,0x7ffdf681f424,14866274,0,0x0,8
tick,0x7ffdf681f424,14868296,0,0x0,8
tick,0x7ffdf681f424,14870262,0,0x0,8
tick,0x7ffdf681f424,14872337,0,0x0,8
tick,0x7ffdf681f424,14874310,0,0x0,8
tick,0x7ffdf681f424,14876433,0,0x0,8
tick,0x7ffdf681f424,14878386,0,0x0,8
tick,0x7ffdf681f424,14880391,0,0x0,8
tick,0x7ffdf681f424,14882389,0,0x0,8
tick,0x7ffdf681f424,14884387,0,0x0,8
tick,0x7ffdf681f424,14886403,0,0x0,8
tick,0x7ffdf681f424,14888324,0,0x0,8
tick,0x7ffdf681f424,14890312,0,0x0,8
tick,0x7ffdf681f424,14892483,0,0x0,8
tick,0x7ffdf681f424,14894496,0,0x0,8
tick,0x7ffdf681f424,14896396,0,0x0,8
tick,0x7ffdf681f424,14898368,0,0x0,8
tick,0x7ffdf681f424,14900437,0,0x0,8
tick,0x7ffdf681f424,14901654,0,0x0,8
tick,0x7ffdf681f424,14903634,0,0x0,8
tick,0x7ffdf681f424,14905903,0,0x0,8
tick,0x7ffdf681f424,14907072,0,0x0,8
tick,0x7ffdf681f424,14909131,0,0x0,8
tick,0x7ffdf681f424,14910990,0,0x0,8
tick,0x7ffdf681f424,14913012,0,0x0,8
tick,0x7ffdf681f424,14914206,0,0x0,8
tick,0x7ffdf681f424,14915322,0,0x0,8
tick,0x7ffdf681f424,14916547,0,0x0,8
tick,0x7ffdf681f424,14917649,0,0x0,8
tick,0x7ffdf681f424,14919741,0,0x0,8
tick,0x7ffdf681f424,14921716,0,0x0,8
tick,0x7ffdf681f424,14922866,0,0x0,8
tick,0x7ffdf681f424,14924022,0,0x0,8
tick,0x7ffdf681f424,14925957,0,0x0,8
tick,0x7ffdf681f424,14927990,0,0x0,8
tick,0x7ffdf681f424,14930036,0,0x0,8
tick,0x7ffdf681f424,14932058,0,0x0,8
tick,0x7ffdf681f424,14933149,0,0x0,8
tick,0x7ffdf681f424,14934291,0,0x0,8
tick,0x7ffdf681f424,14936301,0,0x0,8
tick,0x7ffdf681f424,14937501,0,0x0,8
tick,0x7ffdf681f424,14939561,0,0x0,8
tick,0x7ffdf681f424,14941535,0,0x0,8
tick,0x7ffdf681f424,14943542,0,0x0,8
tick,0x7ffdf681f424,14945537,0,0x0,8
tick,0x7ffdf681f424,14947526,0,0x0,8
tick,0x7ffdf681f424,14949537,0,0x0,8
tick,0x7ffdf681f424,14951532,0,0x0,8
tick,0x7ffdf681f424,14953590,0,0x0,8
tick,0x7ffdf681f424,14955555,0,0x0,8
tick,0x7ffdf681f424,14957543,0,0x0,8
tick,0x7ffdf681f424,14959437,0,0x0,8
tick,0x7ffdf681f424,14961537,0,0x0,8
tick,0x7ffdf681f424,14963549,0,0x0,8
tick,0x7ffdf681f424,14965522,0,0x0,8
tick,0x7ffdf681f424,14967540,0,0x0,8
tick,0x7ffdf681f424,14969515,0,0x0,8
tick,0x7ffdf681f424,14971507,0,0x0,8
tick,0x7ffdf681f424,14973527,0,0x0,8
tick,0x7ffdf681f424,14975469,0,0x0,8
tick,0x7ffdf681f424,14977491,0,0x0,8
tick,0x7ffdf681f424,14979488,0,0x0,8
tick,0x7ffdf681f424,14981484,0,0x0,8
tick,0x7ffdf681f424,14983477,0,0x0,8
tick,0x7ffdf681f424,14985487,0,0x0,8
tick,0x7ffdf681f424,14987488,0,0x0,8
tick,0x7ffdf681f424,14989457,0,0x0,8
tick,0x7ffdf681f424,14991462,0,0x0,8
tick,0x7ffdf681f424,14993454,0,0x0,8
tick,0x7ffdf681f424,14995449,0,0x0,8
tick,0x7ffdf681f424,14997411,0,0x0,8
tick,0x7ffdf681f424,14999434,0,0x0,8
tick,0x7ffdf681f424,15001356,0,0x0,8
tick,0x7ffdf681f424,15003423,0,0x0,8
tick,0x7ffdf681f424,15005418,0,0x0,8
tick,0x7ffdf681f424,15007429,0,0x0,8
tick,0x7ffdf681f424,15009338,0,0x0,8
tick,0x7ffdf681f424,15011399,0,0x0,8
tick,0x7ffdf681f424,15013394,0,0x0,8
tick,0x7ffdf681f424,15015397,0,0x0,8
tick,0x7ffdf681f424,15017392,0,0x0,8
tick,0x7ffdf681f424,15019408,0,0x0,8
tick,0x7ffdf681f424,15021379,0,0x0,8
tick,0x7ffdf681f424,15023367,0,0x0,8
tick,0x7ffdf681f424,15025366,0,0x0,8
tick,0x7ffdf681f424,15027356,0,0x0,8
tick,0x7ffdf681f424,15029389,0,0x0,8
tick,0x7ffdf681f424,15031246,0,0x0,8
tick,0x7ffdf681f424,15033344,0,0x0,8
tick,0x7ffdf681f424,15035336,0,0x0,8
tick,0x7ffdf681f424,15037333,0,0x0,8
tick,0x7ffdf681f424,15039327,0,0x0,8
tick,0x7ffdf681f424,15041361,0,0x0,8
tick,0x7ffdf681f424,15043321,0,0x0,8
tick,0x7ffdf681f424,15045308,0,0x0,8
tick,0x7ffdf681f424,15047301,0,0x0,8
tick,0x7ffdf681f424,15049302,0,0x0,8
tick,0x7ffdf681f424,15051215,0,0x0,8
tick,0x7ffdf681f424,15053292,0,0x0,8
tick,0x7ffdf681f424,15055283,0,0x0,8
tick,0x7ffdf681f424,15057278,0,0x0,8
tick,0x7ffdf681f424,15059275,0,0x0,8
tick,0x7ffdf681f424,15061263,0,0x0,8
tick,0x7ffdf681f424,15063163,0,0x0,8
tick,0x7ffdf681f424,15065166,0,0x0,8
tick,0x7ffdf681f424,15067233,0,0x0,8
tick,0x7ffdf681f424,15069252,0,0x0,8
tick,0x7ffdf681f424,15071244,0,0x0,8
tick,0x7ffdf681f424,15073270,0,0x0,8
tick,0x7ffdf681f424,15075238,0,0x0,8
tick,0x7ffdf681f424,15077123,0,0x0,8
tick,0x7ffdf681f424,15079219,0,0x0,8
tick,0x7ffdf681f424,15081217,0,0x0,8
tick,0x7ffdf681f424,15083230,0,0x0,8
tick,0x7ffdf681f424,15085234,0,0x0,8
tick,0x7ffdf681f424,15087099,0,0x0,8
tick,0x7ffdf681f424,15089093,0,0x0,8
tick,0x7ffdf681f424,15091051,0,0x0,8
tick,0x7ffdf681f424,15093127,0,0x0,8
tick,0x7ffdf681f424,15095185,0,0x0,8
tick,0x7ffdf681f424,15097182,0,0x0,8
tick,0x7ffdf681f424,15099174,0,0x0,8
tick,0x7ffdf681f424,15101061,0,0x0,8
tick,0x7ffdf681f424,15103167,0,0x0,8
tick,0x7ffdf681f424,15105164,0,0x0,8
tick,0x7ffdf681f424,15107165,0,0x0,8
tick,0x7ffdf681f424,15109160,0,0x0,8
tick,0x7ffdf681f424,15111140,0,0x0,8
tick,0x7ffdf681f424,15113145,0,0x0,8
tick,0x7ffdf681f424,15115136,0,0x0,8
tick,0x7ffdf681f424,15117121,0,0x0,8
tick,0x7ffdf681f424,15119115,0,0x0,8
tick,0x7ffdf681f424,15121121,0,0x0,8
tick,0x7ffdf681f424,15123107,0,0x0,8
tick,0x7ffdf681f424,15125101,0,0x0,8
tick,0x7ffdf681f424,15126998,0,0x0,8
tick,0x7ffdf681f424,15129105,0,0x0,8
tick,0x7ffdf681f424,15131097,0,0x0,8
tick,0x7ffdf681f424,15133089,0,0x0,8
tick,0x7ffdf681f424,15135078,0,0x0,8
tick,0x7ffdf681f424,15137075,0,0x0,8
tick,0x7ffdf681f424,15139113,0,0x0,8
tick,0x7ffdf681f424,15140962,0,0x0,8
tick,0x7ffdf681f424,15142985,0,0x0,8
tick,0x7ffdf681f424,15145051,0,0x0,8
tick,0x7ffdf681f424,15147049,0,0x0,8
tick,0x7ffdf681f424,15148927,0,0x0,8
tick,0x7ffdf681f424,15150973,0,0x0,8
tick,0x7ffdf681f424,15153030,0,0x0,8
tick,0x7ffdf681f424,15155025,0,0x0,8
tick,0x7ffdf681f424,15157022,0,0x0,8
tick,0x7ffdf681f424,15159024,0,0x0,8
tick,0x7ffdf681f424,15161054,0,0x0,8
tick,0x7ffdf681f424,15162995,0,0x0,8
tick,0x7ffdf681f424,15164993,0,0x0,8
tick,0x7ffdf681f424,15166985,0,0x0,8
tick,0x7ffdf681f424,15168985,0,0x0,8
tick,0x7ffdf681f424,15170986,0,0x0,8
tick,0x7ffdf681f424,15172943,0,0x0,8
tick,0x7ffdf681f424,15174983,0,0x0,8
tick,0x7ffdf681f424,15176962,0,0x0,8
tick,0x7ffdf681f424,15178963,0,0x0,8
tick,0x7ffdf681f424,15180956,0,0x0,8
tick,0x7ffdf681f424,15182984,0,0x0,8
tick,0x7ffdf681f424,15184948,0,0x0,8
tick,0x7ffdf681f424,15186935,0,0x0,8
tick,0x7ffdf681f424,15188938,0,0x0,8
tick,0x7ffdf681f424,15190928,0,0x0,8
tick,0x7ffdf681f424,15192812,0,0x0,8
tick,0x7ffdf681f424,15194921,0,0x0,8
tick,0x7ffdf681f424,15196912,0,0x0,8
tick,0x7ffdf681f424,15198914,0,0x0,8
tick,0x7ffdf681f424,15200905,0,0x0,8
tick,0x7ffdf681f424,15202892,0,0x0,8
tick,0x7ffdf681f424,15204910,0,0x0,8
tick,0x7ffdf681f424,15206885,0,0x0,8
tick,0x7ffdf681f424,15208876,0,0x0,8
tick,0x7ffdf681f424,15210880,0,0x0,8
tick,0x7ffdf681f424,15212866,0,0x0,8
tick,0x7ffdf681f424,15214852,0,0x0,8
tick,0x7ffdf681f424,15216863,0,0x0,8
tick,0x7ffdf681f424,15218751,0,0x0,8
tick,0x7ffdf681f424,15220830,0,0x0,8
tick,0x7ffdf681f424,15222845,0,0x0,8
tick,0x7ffdf681f424,15224841,0,0x0,8
tick,0x7ffdf681f424,15226848,0,0x0,8
tick,0x7ffdf681f424,15228833,0,0x0,8
tick,0x7ffdf681f424,15230823,0,0x0,8
tick,0x7ffdf681f424,15232821,0,0x0,8
tick,0x7ffdf681f424,15234798,0,0x0,8
tick,0x7ffdf681f424,15236811,0,0x0,8
tick,0x7ffdf681f424,15238769,0,0x0,8
tick,0x7ffdf681f424,15240795,0,0x0,8
tick,0x7ffdf681f424,15242704,0,0x0,8
tick,0x7ffdf681f424,15244785,0,0x0,8
tick,0x7ffdf681f424,15246774,0,0x0,8
tick,0x7ffdf681f424,15248789,0,0x0,8
tick,0x7ffdf681f424,15250765,0,0x0,8
tick,0x7ffdf681f424,15252759,0,0x0,8
tick,0x7ffdf681f424,15254768,0,0x0,8
tick,0x7ffdf681f424,15256755,0,0x0,8
tick,0x7ffdf681f424,15258751,0,0x0,8
tick,0x7ffdf681f424,15260729,0,0x0,8
tick,0x7ffdf681f424,15262743,0,0x0,8
tick,0x7ffdf681f424,15264727,0,0x0,8
tick,0x7ffdf681f424,15266723,0,0x0,8
tick,0x7ffdf681f424,15268690,0,0x0,8
tick,0x7ffdf681f424,15270772,0,0x0,8
tick,0x7ffdf681f424,15272705,0,0x0,8
tick,0x7ffdf681f424,15274716,0,0x0,8
tick,0x7ffdf681f424,15276700,0,0x0,8
tick,0x7ffdf681f424,15278691,0,0x0,8
tick,0x7ffdf681f424,15280691,0,0x0,8
tick,0x7ffdf681f424,15282650,0,0x0,8
tick,0x7ffdf681f424,15284574,0,0x0,8
tick,0x7ffdf681f424,15286677,0,0x0,8
tick,0x7ffdf681f424,15288662,0,0x0,8
tick,0x7ffdf681f424,15290649,0,0x0,8
tick,0x7ffdf681f424,15292699,0,0x0,8
tick,0x7ffdf681f424,15294556,0,0x0,8
tick,0x7ffdf681f424,15296782,0,0x0,8
tick,0x7ffdf681f424,15298889,0,0x0,8
tick,0x7ffdf681f424,15300899,0,0x0,8
tick,0x7ffdf681f424,15302925,0,0x0,8
tick,0x7ffdf681f424,15304853,0,0x0,8
tick,0x7ffdf681f424,15306863,0,0x0,8
tick,0x7ffdf681f424,15308882,0,0x0,8
tick,0x7ffdf681f424,15310900,0,0x0,8
tick,0x7ffdf681f424,15312852,0,0x0,8
tick,0x7ffdf681f424,15314855,0,0x0,8
tick,0x7ffdf681f424,15316864,0,0x0,8
tick,0x7ffdf681f424,15318830,0,0x0,8
tick,0x7ffdf681f424,15320840,0,0x0,8
tick,0x7ffdf681f424,15322831,0,0x0,8
tick,0x7ffdf681f424,15324850,0,0x0,8
tick,0x7ffdf681f424,15326824,0,0x0,8
tick,0x7ffdf681f424,15328809,0,0x0,8
tick,0x7ffdf681f424,15330816,0,0x0,8
tick,0x7ffdf681f424,15332801,0,0x0,8
tick,0x7ffdf681f424,15334746,0,0x0,8
tick,0x7ffdf681f424,15336805,0,0x0,8
tick,0x7ffdf681f424,15338734,0,0x0,8
tick,0x7ffdf681f424,15340790,0,0x0,8
tick,0x7ffdf681f424,15342720,0,0x0,8
tick,0x7ffdf681f424,15344765,0,0x0,8
tick,0x7ffdf681f424,15346792,0,0x0,8
tick,0x7ffdf681f424,15348769,0,0x0,8
tick,0x7ffdf681f424,15350754,0,0x0,8
tick,0x7ffdf681f424,15352748,0,0x0,8
tick,0x7ffdf681f424,15354740,0,0x0,8
tick,0x7ffdf681f424,15356742,0,0x0,8
tick,0x7ffdf681f424,15358733,0,0x0,8
tick,0x7ffdf681f424,15360730,0,0x0,8
tick,0x7ffdf681f424,15362726,0,0x0,8
tick,0x7ffdf681f424,15364633,0,0x0,8
tick,0x7ffdf681f424,15366705,0,0x0,8
tick,0x7ffdf681f424,15368751,0,0x0,8
tick,0x7ffdf681f424,15370597,0,0x0,8
tick,0x7ffdf681f424,15372695,0,0x0,8
tick,0x7ffdf681f424,15374691,0,0x0,8
tick,0x7ffdf681f424,15376572,0,0x0,8
tick,0x7ffdf681f424,15378682,0,0x0,8
tick,0x7ffdf681f424,15380676,0,0x0,8
tick,0x7ffdf681f424,15382665,0,0x0,8
tick,0x7ffdf681f424,15384558,0,0x0,8
tick,0x7ffdf681f424,15386655,0,0x0,8
tick,0x7ffdf681f424,15388647,0,0x0,8
tick,0x7ffdf681f424,15390669,0,0x0,8
tick,0x7ffdf681f424,15392683,0,0x0,8
tick,0x7ffdf681f424,15394628,0,0x0,8
tick,0x7ffdf681f424,15396620,0,0x0,8
tick,0x7ffdf681f424,15398622,0,0x0,8
tick,0x7ffdf681f424,15400619,0,0x0,8
tick,0x7ffdf681f424,15402610,0,0x0,8
tick,0x7ffdf681f424,15404600,0,0x0,8
tick,0x7ffdf681f424,15406604,0,0x0,8
tick,0x7ffdf681f424,15408608,0,0x0,8
tick,0x7ffdf681f424,15410595,0,0x0,8
tick,0x7ffdf681f424,15412612,0,0x0,8
tick,0x7ffdf681f424,15414582,0,0x0,8
tick,0x7ffdf681f424,15416594,0,0x0,8
tick,0x7ffdf681f424,15418567,0,0x0,8
tick,0x7ffdf681f424,15420555,0,0x0,8
tick,0x7ffdf681f424,15422559,0,0x0,8
tick,0x7ffdf681f424,15424564,0,0x0,8
tick,0x7ffdf681f424,15426547,0,0x0,8
tick,0x7ffdf681f424,15428541,0,0x0,8
tick,0x7ffdf681f424,15430536,0,0x0,8
tick,0x7ffdf681f424,15432533,0,0x0,8
tick,0x7ffdf681f424,15434464,0,0x0,8
tick,0x7ffdf681f424,15436526,0,0x0,8
tick,0x7ffdf681f424,15438510,0,0x0,8
tick,0x7ffdf681f424,15440504,0,0x0,8
tick,0x7ffdf681f424,15442517,0,0x0,8
tick,0x7ffdf681f424,15444483,0,0x0,8
tick,0x7ffdf681f424,15446388,0,0x0,8
tick,0x7ffdf681f424,15448378,0,0x0,8
tick,0x7ffdf681f424,15450469,0,0x0,8
tick,0x7ffdf681f424,15452398,0,0x0,8
tick,0x7ffdf681f424,15454465,0,0x0,8
tick,0x7ffdf681f424,15456406,0,0x0,8
tick,0x7ffdf681f424,15458460,0,0x0,8
tick,0x7ffdf681f424,15460451,0,0x0,8
tick,0x7ffdf681f424,15462442,0,0x0,8
tick,0x7ffdf681f424,15464446,0,0x0,8
tick,0x7ffdf681f424,15466445,0,0x0,8
tick,0x7ffdf681f424,15468436,0,0x0,8
tick,0x7ffdf681f424,15470421,0,0x0,8
tick,0x7ffdf681f424,15472427,0,0x0,8
tick,0x7ffdf681f424,15474423,0,0x0,8
tick,0x7ffdf681f424,15476302,0,0x0,8
tick,0x7ffdf681f424,15478419,0,0x0,8
tick,0x7ffdf681f424,15480407,0,0x0,8
tick,0x7ffdf681f424,15482391,0,0x0,8
tick,0x7ffdf681f424,15484396,0,0x0,8
tick,0x7ffdf681f424,15486383,0,0x0,8
tick,0x7ffdf681f424,15488394,0,0x0,8
tick,0x7ffdf681f424,15490383,0,0x0,8
tick,0x7ffdf681f424,15492375,0,0x0,8
tick,0x7ffdf681f424,15494366,0,0x0,8
tick,0x7ffdf681f424,15496363,0,0x0,8
tick,0x7ffdf681f424,15498355,0,0x0,8
tick,0x7ffdf681f424,15500301,0,0x0,8
tick,0x7ffdf681f424,15502346,0,0x0,8
tick,0x7ffdf681f424,15504341,0,0x0,8
tick,0x7ffdf681f424,15506332,0,0x0,8
tick,0x7ffdf681f424,15508332,0,0x0,8
tick,0x7ffdf681f424,15510332,0,0x0,8
tick,0x7ffdf681f424,15512333,0,0x0,8
tick,0x7ffdf681f424,15514313,0,0x0,8
tick,0x7ffdf681f424,15516308,0,0x0,8
tick,0x7ffdf681f424,15518308,0,0x0,8
tick,0x7ffdf681f424,15520302,0,0x0,8
tick,0x7ffdf681f424,15522319,0,0x0,8
tick,0x7ffdf681f424,15524293,0,0x0,8
tick,0x7ffdf681f424,15526216,0,0x0,8
tick,0x7ffdf681f424,15528280,0,0x0,8
tick,0x7ffdf681f424,15530281,0,0x0,8
tick,0x7ffdf681f424,15532270,0,0x0,8
tick,0x7ffdf681f424,15534278,0,0x0,8
tick,0x7ffdf681f424,15536266,0,0x0,8
tick,0x7ffdf681f424,15538250,0,0x0,8
tick,0x7ffdf681f424,15540252,0,0x0,8
tick,0x7ffdf681f424,15542239,0,0x0,8
tick,0x7ffdf681f424,15544251,0,0x0,8
tick,0x7ffdf681f424,15546229,0,0x0,8
tick,0x7ffdf681f424,15548226,0,0x0,8
tick,0x7ffdf681f424,15550217,0,0x0,8
tick,0x7ffdf681f424,15552221,0,0x0,8
tick,0x7ffdf681f424,15554211,0,0x0,8
tick,0x7ffdf681f424,15556213,0,0x0,8
tick,0x7ffdf681f424,15558216,0,0x0,8
tick,0x7ffdf681f424,15560093,0,0x0,8
tick,0x7ffdf681f424,15562217,0,0x0,8
tick,0x7ffdf681f424,15564188,0,0x0,8
tick,0x7ffdf681f424,15566173,0,0x0,8
tick,0x7ffdf681f424,15568174,0,0x0,8
tick,0x7ffdf681f424,15570149,0,0x0,8
tick,0x7ffdf681f424,15572058,0,0x0,8
tick,0x7ffdf681f424,15574136,0,0x0,8
tick,0x7ffdf681f424,15576087,0,0x0,8
tick,0x7ffdf681f424,15578142,0,0x0,8
tick,0x7ffdf681f424,15580114,0,0x0,8
tick,0x7ffdf681f424,15582106,0,0x0,8
tick,0x7ffdf681f424,15584051,0,0x0,8
tick,0x7ffdf681f424,15586095,0,0x0,8
tick,0x7ffdf681f424,15588130,0,0x0,8
tick,0x7ffdf681f424,15590129,0,0x0,8
tick,0x7ffdf681f424,15592116,0,0x0,8
tick,0x7ffdf681f424,15594104,0,0x0,8
tick,0x7ffdf681f424,15596105,0,0x0,8
tick,0x7ffdf681f424,15598153,0,0x0,8
tick,0x7ffdf681f424,15599998,0,0x0,8
tick,0x7ffdf681f424,15602094,0,0x0,8
tick,0x7ffdf681f424,15604064,0,0x0,8
tick,0x7ffdf681f424,15606072,0,0x0,8
tick,0x7ffdf681f424,15608070,0,0x0,8
tick,0x7ffdf681f424,15609948,0,0x0,8
tick,0x7ffdf681f424,15612061,0,0x0,8
tick,0x7ffdf681f424,15614044,0,0x0,8
tick,0x7ffdf681f424,15616054,0,0x0,8
tick,0x7ffdf681f424,15617929,0,0x0,8
tick,0x7ffdf681f424,15620063,0,0x0,8
tick,0x7ffdf681f424,15622038,0,0x0,8
tick,0x7ffdf681f424,15624029,0,0x0,8
tick,0x7ffdf681f424,15626038,0,0x0,8
tick,0x7ffdf681f424,15628013,0,0x0,8
tick,0x7ffdf681f424,15630020,0,0x0,8
tick,0x7ffdf681f424,15632012,0,0x0,8
tick,0x7ffdf681f424,15633996,0,0x0,8
tick,0x7ffdf681f424,15635990,0,0x0,8
tick,0x7ffdf681f424,15637990,0,0x0,8
tick,0x7ffdf681f424,15639980,0,0x0,8
tick,0x7ffdf681f424,15641925,0,0x0,8
tick,0x7ffdf681f424,15643949,0,0x0,8
tick,0x7ffdf681f424,15645894,0,0x0,8
tick,0x7ffdf681f424,15647961,0,0x0,8
tick,0x7ffdf681f424,15649951,0,0x0,8
tick,0x7ffdf681f424,15651951,0,0x0,8
tick,0x7ffdf681f424,15653903,0,0x0,8
tick,0x7ffdf681f424,15655933,0,0x0,8
tick,0x7ffdf681f424,15657930,0,0x0,8
tick,0x7ffdf681f424,15659926,0,0x0,8
tick,0x7ffdf681f424,15661921,0,0x0,8
tick,0x7ffdf681f424,15663874,0,0x0,8
tick,0x7ffdf681f424,15665914,0,0x0,8
tick,0x7ffdf681f424,15667789,0,0x0,8
tick,0x7ffdf681f424,15669899,0,0x0,8
tick,0x7ffdf681f424,15671894,0,0x0,8
tick,0x7ffdf681f424,15673893,0,0x0,8
tick,0x7ffdf681f424,15675902,0,0x0,8
tick,0x7ffdf681f424,15677765,0,0x0,8
tick,0x7ffdf681f424,15679874,0,0x0,8
tick,0x7ffdf681f424,15681875,0,0x0,8
tick,0x7ffdf681f424,15683861,0,0x0,8
tick,0x7ffdf681f424,15685758,0,0x0,8
tick,0x7ffdf681f424,15687862,0,0x0,8
tick,0x7ffdf681f424,15689842,0,0x0,8
tick,0x7ffdf681f424,15691846,0,0x0,8
tick,0x7ffdf681f424,15693834,0,0x0,8
tick,0x7ffdf681f424,15695838,0,0x0,8
tick,0x7ffdf681f424,15697778,0,0x0,8
tick,0x7ffdf681f424,15699815,0,0x0,8
tick,0x7ffdf681f424,15701783,0,0x0,8
tick,0x7ffdf681f424,15703808,0,0x0,8
tick,0x7ffdf681f424,15705804,0,0x0,8
tick,0x7ffdf681f424,15707838,0,0x0,8
tick,0x7ffdf681f424,15709688,0,0x0,8
tick,0x7ffdf681f424,15711801,0,0x0,8
tick,0x7ffdf681f424,15713780,0,0x0,8
tick,0x7ffdf681f424,15715778,0,0x0,8
tick,0x7ffdf681f424,15717773,0,0x0,8
tick,0x7ffdf681f424,15719749,0,0x0,8
tick,0x7ffdf681f424,15721757,0,0x0,8
tick,0x7ffdf681f424,15723648,0,0x0,8
tick,0x7ffdf681f424,15725756,0,0x0,8
tick,0x7ffdf681f424,15727772,0,0x0,8
tick,0x7ffdf681f424,15729745,0,0x0,8
tick,0x7ffdf681f424,15731614,0,0x0,8
tick,0x7ffdf681f424,15733531,0,0x0,8
tick,0x7ffdf681f424,15735545,0,0x0,8
tick,0x7ffdf681f424,15737585,0,0x0,8
tick,0x7ffdf681f424,15739645,0,0x0,8
tick,0x7ffdf681f424,15741638,0,0x0,8
tick,0x7ffdf681f424,15743629,0,0x0,8
tick,0x7ffdf681f424,15745581,0,0x0,8
tick,0x7ffdf681f424,15747694,0,0x0,8
tick,0x7ffdf681f424,15749675,0,0x0,8
tick,0x7ffdf681f424,15751557,0,0x0,8
tick,0x7ffdf681f424,15753708,0,0x0,8
tick,0x7ffdf681f424,15755678,0,0x0,8
tick,0x7ffdf681f424,15757688,0,0x0,8
tick,0x7ffdf681f424,15759602,0,0x0,8
tick,0x7ffdf681f424,15761615,0,0x0,8
tick,0x7ffdf681f424,15763646,0,0x0,8
tick,0x7ffdf681f424,15765639,0,0x0,8
tick,0x7ffdf681f424,15767648,0,0x0,8
tick,0x7ffdf681f424,15769634,0,0x0,8
tick,0x7ffdf681f424,15771629,0,0x0,8
tick,0x7ffdf681f424,15773665,0,0x0,8
tick,0x7ffdf681f424,15775618,0,0x0,8
tick,0x7ffdf681f424,15777614,0,0x0,8
tick,0x7ffdf681f424,15779612,0,0x0,8
tick,0x7ffdf681f424,15781598,0,0x0,8
tick,0x7ffdf681f424,15783597,0,0x0,8
tick,0x7ffdf681f424,15785590,0,0x0,8
tick,0x7ffdf681f424,15787583,0,0x0,8
tick,0x7ffdf681f424,15789566,0,0x0,8
tick,0x7ffdf681f424,15791563,0,0x0,8
tick,0x7ffdf681f424,15793564,0,0x0,8
tick,0x7ffdf681f424,15795545,0,0x0,8
tick,0x7ffdf681f424,15797550,0,0x0,8
tick,0x7ffdf681f424,15799544,0,0x0,8
tick,0x7ffdf681f424,15801515,0,0x0,8
tick,0x7ffdf681f424,15803531,0,0x0,8
tick,0x7ffdf681f424,15805545,0,0x0,8
tick,0x7ffdf681f424,15807532,0,0x0,8
tick,0x7ffdf681f424,15809449,0,0x0,8
tick,0x7ffdf681f424,15811509,0,0x0,8
tick,0x7ffdf681f424,15813517,0,0x0,8
tick,0x7ffdf681f424,15815520,0,0x0,8
tick,0x7ffdf681f424,15817460,0,0x0,8
tick,0x7ffdf681f424,15819493,0,0x0,8
tick,0x7ffdf681f424,15821483,0,0x0,8
tick,0x7ffdf681f424,15823478,0,0x0,8
tick,0x7ffdf681f424,15825486,0,0x0,8
tick,0x7ffdf681f424,15827466,0,0x0,8
tick,0x7ffdf681f424,15829470,0,0x0,8
tick,0x7ffdf681f424,15831368,0,0x0,8
tick,0x7ffdf681f424,15833446,0,0x0,8
tick,0x7ffdf681f424,15835417,0,0x0,8
tick,0x7ffdf681f424,15837303,0,0x0,8
tick,0x7ffdf681f424,15839307,0,0x0,8
tick,0x7ffdf681f424,15841286,0,0x0,8
tick,0x7ffdf681f424,15843213,0,0x0,8
tick,0x7ffdf681f424,15845246,0,0x0,8
tick,0x7ffdf681f424,15847281,0,0x0,8
tick,0x7ffdf681f424,15849367,0,0x0,8
tick,0x7ffdf681f424,15851287,0,0x0,8
tick,0x7ffdf681f424,15853371,0,0x0,8
tick,0x7ffdf681f424,15855348,0,0x0,8
tick,0x7ffdf681f424,15857353,0,0x0,8
tick,0x7ffdf681f424,15859312,0,0x0,8
tick,0x7ffdf681f424,15861320,0,0x0,8
tick,0x7ffdf681f424,15863331,0,0x0,8
tick,0x7ffdf681f424,15865348,0,0x0,8
tick,0x7ffdf681f424,15867313,0,0x0,8
tick,0x7ffdf681f424,15869325,0,0x0,8
tick,0x7ffdf681f424,15871281,0,0x0,8
tick,0x7ffdf681f424,15873299,0,0x0,8
tick,0x7ffdf681f424,15875293,0,0x0,8
tick,0x7ffdf681f424,15877290,0,0x0,8
tick,0x7ffdf681f424,15879283,0,0x0,8
tick,0x7ffdf681f424,15881328,0,0x0,8
tick,0x7ffdf681f424,15883326,0,0x0,8
tick,0x7ffdf681f424,15885307,0,0x0,8
tick,0x7ffdf681f424,15887323,0,0x0,8
tick,0x7ffdf681f424,15889311,0,0x0,8
tick,0x7ffdf681f424,15891300,0,0x0,8
tick,0x7ffdf681f424,15893299,0,0x0,8
tick,0x7ffdf681f424,15895295,0,0x0,8
tick,0x7ffdf681f424,15897283,0,0x0,8
tick,0x7ffdf681f424,15899272,0,0x0,8
tick,0x7ffdf681f424,15901171,0,0x0,8
tick,0x7ffdf681f424,15903269,0,0x0,8
tick,0x7ffdf681f424,15905293,0,0x0,8
tick,0x7ffdf681f424,15907157,0,0x0,8
tick,0x7ffdf681f424,15909144,0,0x0,8
tick,0x7ffdf681f424,15911236,0,0x0,8
tick,0x7ffdf681f424,15913239,0,0x0,8
tick,0x7ffdf681f424,15915240,0,0x0,8
tick,0x7ffdf681f424,15917118,0,0x0,8
tick,0x7ffdf681f424,15919122,0,0x0,8
tick,0x7ffdf681f424,15921147,0,0x0,8
tick,0x7ffdf681f424,15923073,0,0x0,8
tick,0x7ffdf681f424,15924998,0,0x0,8
tick,0x7ffdf681f424,15927017,0,0x0,8
tick,0x7ffdf681f424,15929071,0,0x0,8
tick,0x7ffdf681f424,15931124,0,0x0,8
tick,0x7ffdf681f424,15933134,0,0x0,8
tick,0x7ffdf681f424,15935098,0,0x0,8
tick,0x7ffdf681f424,15937151,0,0x0,8
tick,0x7ffdf681f424,15939132,0,0x0,8
tick,0x7ffdf681f424,15941117,0,0x0,8
tick,0x7ffdf681f424,15943011,0,0x0,8
tick,0x7ffdf681f424,15945100,0,0x0,8
tick,0x7ffdf681f424,15947111,0,0x0,8
tick,0x7ffdf681f424,15949118,0,0x0,8
tick,0x7ffdf681f424,15951093,0,0x0,8
tick,0x7ffdf681f424,15952971,0,0x0,8
tick,0x7ffdf681f424,15955106,0,0x0,8
tick,0x7ffdf681f424,15957083,0,0x0,8
tick,0x7ffdf681f424,15959075,0,0x0,8
tick,0x7ffdf681f424,15961082,0,0x0,8
tick,0x7ffdf681f424,15963058,0,0x0,8
tick,0x7ffdf681f424,15965086,0,0x0,8
tick,0x7ffdf681f424,15967047,0,0x0,8
tick,0x7ffdf681f424,15969069,0,0x0,8
tick,0x7ffdf681f424,15971072,0,0x0,8
tick,0x7ffdf681f424,15973038,0,0x0,8
tick,0x7ffdf681f424,15974980,0,0x0,8
tick,0x7ffdf681f424,15976998,0,0x0,8
tick,0x7ffdf681f424,15979022,0,0x0,8
tick,0x7ffdf681f424,15981056,0,0x0,8
tick,0x7ffdf681f424,15983060,0,0x0,8
tick,0x7ffdf681f424,15984931,0,0x0,8
tick,0x7ffdf681f424,15987051,0,0x0,8
tick,0x7ffdf681f424,15989056,0,0x0,8
tick,0x7ffdf681f424,15991032,0,0x0,8
tick,0x7ffdf681f424,15992974,0,0x0,8
tick,0x7ffdf681f424,15995039,0,0x0,8
tick,0x7ffdf681f424,15997029,0,0x0,8
tick,0x7ffdf681f424,15999025,0,0x0,8
tick,0x7ffdf681f424,16001038,0,0x0,8
tick,0x7ffdf681f424,16003010,0,0x0,8
tick,0x7ffdf681f424,16005012,0,0x0,8
tick,0x7ffdf681f424,16007010,0,0x0,8
tick,0x7ffdf681f424,16008813,0,0x0,8
tick,0x7ffdf681f424,16010797,0,0x0,8
tick,0x7ffdf681f424,16012814,0,0x0,8
tick,0x7ffdf681f424,16014902,0,0x0,8
tick,0x7ffdf681f424,16016882,0,0x0,8
tick,0x7ffdf681f424,16018899,0,0x0,8
tick,0x7ffdf681f424,16020743,0,0x0,8
tick,0x7ffdf681f424,16022801,0,0x0,8
tick,0x7ffdf681f424,16024912,0,0x0,8
tick,0x7ffdf681f424,16026752,0,0x0,8
tick,0x7ffdf681f424,16028882,0,0x0,8
tick,0x7ffdf681f424,16030815,0,0x0,8
tick,0x7ffdf681f424,16032877,0,0x0,8
tick,0x7ffdf681f424,16034777,0,0x0,8
tick,0x7ffdf681f424,16036759,0,0x0,8
tick,0x7ffdf681f424,16038869,0,0x0,8
tick,0x7ffdf681f424,16040844,0,0x0,8
tick,0x7ffdf681f424,16042749,0,0x0,8
tick,0x7ffdf681f424,16044833,0,0x0,8
tick,0x7ffdf681f424,16046851,0,0x0,8
tick,0x7ffdf681f424,16048895,0,0x0,8
tick,0x7ffdf681f424,16050883,0,0x0,8
tick,0x7ffdf681f424,16052876,0,0x0,8
tick,0x7ffdf681f424,16054862,0,0x0,8
tick,0x7ffdf681f424,16056855,0,0x0,8
tick,0x7ffdf681f424,16058848,0,0x0,8
tick,0x7ffdf681f424,16060772,0,0x0,8
tick,0x7ffdf681f424,16062740,0,0x0,8
tick,0x7ffdf681f424,16064816,0,0x0,8
tick,0x7ffdf681f424,16066826,0,0x0,8
tick,0x7ffdf681f424,16068825,0,0x0,8
tick,0x7ffdf681f424,16070818,0,0x0,8
tick,0x7ffdf681f424,16072809,0,0x0,8
tick,0x7ffdf681f424,16074812,0,0x0,8
tick,0x7ffdf681f424,16076798,0,0x0,8
tick,0x7ffdf681f424,16078793,0,0x0,8
tick,0x7ffdf681f424,16080785,0,0x0,8
tick,0x7ffdf681f424,16082789,0,0x0,8
tick,0x7ffdf681f424,16084650,0,0x0,8
tick,0x7ffdf681f424,16086772,0,0x0,8
tick,0x7ffdf681f424,16088783,0,0x0,8
tick,0x7ffdf681f424,16090764,0,0x0,8
tick,0x7ffdf681f424,16092763,0,0x0,8
tick,0x7ffdf681f424,16094750,0,0x0,8
tick,0x7ffdf681f424,16096748,0,0x0,8
tick,0x7ffdf681f424,16098746,0,0x0,8
tick,0x7ffdf681f424,16100737,0,0x0,8
tick,0x7ffdf681f424,16102724,0,0x0,8
tick,0x7ffdf681f424,16104729,0,0x0,8
tick,0x7ffdf681f424,16106716,0,0x0,8
tick,0x7ffdf681f424,16108720,0,0x0,8
tick,0x7ffdf681f424,16110711,0,0x0,8
tick,0x7ffdf681f424,16112704,0,0x0,8
tick,0x7ffdf681f424,16114702,0,0x0,8
tick,0x7ffdf681f424,16116693,0,0x0,8
tick,0x7ffdf681f424,16118725,0,0x0,8
tick,0x7ffdf681f424,16120690,0,0x0,8
tick,0x7ffdf681f424,16122685,0,0x0,8
tick,0x7ffdf681f424,16124664,0,0x0,8
tick,0x7ffdf681f424,16126675,0,0x0,8
tick,0x7ffdf681f424,16128571,0,0x0,8
tick,0x7ffdf681f424,16130656,0,0x0,8
tick,0x7ffdf681f424,16132650,0,0x0,8
tick,0x7ffdf681f424,16134543,0,0x0,8
tick,0x7ffdf681f424,16136645,0,0x0,8
tick,0x7ffdf681f424,16138509,0,0x0,8
tick,0x7ffdf681f424,16140634,0,0x0,8
tick,0x7ffdf681f424,16142644,0,0x0,8
tick,0x7ffdf681f424,16144643,0,0x0,8
tick,0x7ffdf681f424,16146639,0,0x0,8
tick,0x7ffdf681f424,16148616,0,0x0,8
tick,0x7ffdf681f424,16150610,0,0x0,8
tick,0x7ffdf681f424,16152599,0,0x0,8
tick,0x7ffdf681f424,16154592,0,0x0,8
tick,0x7ffdf681f424,16156590,0,0x0,8
tick,0x7ffdf681f424,16158583,0,0x0,8
tick,0x7ffdf681f424,16160579,0,0x0,8
tick,0x7ffdf681f424,16162530,0,0x0,8
tick,0x7ffdf681f424,16164564,0,0x0,8
tick,0x7ffdf681f424,16166559,0,0x0,8
tick,0x7ffdf681f424,16168542,0,0x0,8
tick,0x7ffdf681f424,16170557,0,0x0,8
tick,0x7ffdf681f424,16172545,0,0x0,8
tick,0x7ffdf681f424,16174543,0,0x0,8
tick,0x7ffdf681f424,16176430,0,0x0,8
tick,0x7ffdf681f424,16178535,0,0x0,8
tick,0x7ffdf681f424,16180527,0,0x0,8
tick,0x7ffdf681f424,16182530,0,0x0,8
tick,0x7ffdf681f424,16184449,0,0x0,8
tick,0x7ffdf681f424,16186508,0,0x0,8
tick,0x7ffdf681f424,16188499,0,0x0,8
tick,0x7ffdf681f424,16190486,0,0x0,8
tick,0x7ffdf681f424,16192425,0,0x0,8
tick,0x7ffdf681f424,16194494,0,0x0,8
tick,0x7ffdf681f424,16196489,0,0x0,8
tick,0x7ffdf681f424,16198478,0,0x0,8
tick,0x7ffdf681f424,16200476,0,0x0,8
tick,0x7ffdf681f424,16202483,0,0x0,8
tick,0x7ffdf681f424,16204468,0,0x0,8
tick,0x7ffdf681f424,16206427,0,0x0,8
tick,0x7ffdf681f424,16208462,0,0x0,8
tick,0x7ffdf681f424,16210453,0,0x0,8
tick,0x7ffdf681f424,16212428,0,0x0,8
tick,0x7ffdf681f424,16214326,0,0x0,8
tick,0x7ffdf681f424,16216345,0,0x0,8
tick,0x7ffdf681f424,16218412,0,0x0,8
tick,0x7ffdf681f424,16220422,0,0x0,8
tick,0x7ffdf681f424,16222421,0,0x0,8
tick,0x7ffdf681f424,16224416,0,0x0,8
tick,0x7ffdf681f424,16226308,0,0x0,8
tick,0x7ffdf681f424,16228408,0,0x0,8
tick,0x7ffdf681f424,16230400,0,0x0,8
tick,0x7ffdf681f424,16232390,0,0x0,8
tick,0x7ffdf681f424,16234393,0,0x0,8
tick,0x7ffdf681f424,16236390,0,0x0,8
tick,0x7ffdf681f424,16238377,0,0x0,8
tick,0x7ffdf681f424,16240369,0,0x0,8
tick,0x7ffdf681f424,16242364,0,0x0,8
tick,0x7ffdf681f424,16244365,0,0x0,8
tick,0x7ffdf681f424,16246360,0,0x0,8
tick,0x7ffdf681f424,16248348,0,0x0,8
tick,0x7ffdf681f424,16250356,0,0x0,8
tick,0x7ffdf681f424,16252340,0,0x0,8
tick,0x7ffdf681f424,16254339,0,0x0,8
tick,0x7ffdf681f424,16256321,0,0x0,8
tick,0x7ffdf681f424,16258322,0,0x0,8
tick,0x7ffdf681f424,16260275,0,0x0,8
tick,0x7ffdf681f424,16262308,0,0x0,8
tick,0x7ffdf681f424,16264305,0,0x0,8
tick,0x7ffdf681f424,16266302,0,0x0,8
tick,0x7ffdf681f424,16268303,0,0x0,8
tick,0x7ffdf681f424,16270296,0,0x0,8
tick,0x7ffdf681f424,16272286,0,0x0,8
tick,0x7ffdf681f424,16274279,0,0x0,8
tick,0x7ffdf681f424,16276187,0,0x0,8
tick,0x7ffdf681f424,16278264,0,0x0,8
tick,0x7ffdf681f424,16280270,0,0x0,8
tick,0x7ffdf681f424,16282265,0,0x0,8
tick,0x7ffdf681f424,16284256,0,0x0,8
tick,0x7ffdf681f424,16286255,0,0x0,8
tick,0x7ffdf681f424,16288241,0,0x0,8
tick,0x7ffdf681f424,16290240,0,0x0,8
tick,0x7ffdf681f424,16292097,0,0x0,8
tick,0x7ffdf681f424,16294232,0,0x0,8
tick,0x7ffdf681f424,16296221,0,0x0,8
tick,0x7ffdf681f424,16298225,0,0x0,8
tick,0x7ffdf681f424,16300225,0,0x0,8
tick,0x7ffdf681f424,16302266,0,0x0,8
tick,0x7ffdf681f424,16304199,0,0x0,8
tick,0x7ffdf681f424,16306193,0,0x0,8
tick,0x7ffdf681f424,16308185,0,0x0,8
tick,0x7ffdf681f424,16310207,0,0x0,8
tick,0x7ffdf681f424,16312183,0,0x0,8
tick,0x7ffdf681f424,16314172,0,0x0,8
tick,0x7ffdf681f424,16316172,0,0x0,8
tick,0x7ffdf681f424,16318092,0,0x0,8
tick,0x7ffdf681f424,16320159,0,0x0,8
tick,0x7ffdf681f424,16322058,0,0x0,8
tick,0x7ffdf681f424,16324152,0,0x0,8
tick,0x7ffdf681f424,16326144,0,0x0,8
tick,0x7ffdf681f424,16327940,0,0x0,8
tick,0x7ffdf681f424,16330009,0,0x0,8
tick,0x7ffdf681f424,16331918,0,0x0,8
tick,0x7ffdf681f424,16334068,0,0x0,8
tick,0x7ffdf681f424,16335919,0,0x0,8
tick,0x7ffdf681f424,16338049,0,0x0,8
tick,0x7ffdf681f424,16340070,0,0x0,8
tick,0x7ffdf681f424,16342095,0,0x0,8
tick,0x7ffdf681f424,16344107,0,0x0,8
tick,0x7ffdf681f424,16346110,0,0x0,8
tick,0x7ffdf681f424,16348107,0,0x0,8
tick,0x7ffdf681f424,16350094,0,0x0,8
tick,0x7ffdf681f424,16352108,0,0x0,8
tick,0x7ffdf681f424,16354083,0,0x0,8
tick,0x7ffdf681f424,16355951,0,0x0,8
tick,0x7ffdf681f424,16358075,0,0x0,8
tick,0x7ffdf681f424,16360067,0,0x0,8
tick,0x7ffdf681f424,16362046,0,0x0,8
tick,0x7ffdf681f424,16363910,0,0x0,8
tick,0x7ffdf681f424,16365867,0,0x0,8
tick,0x7ffdf681f424,16367885,0,0x0,8
tick,0x7ffdf681f424,16370003,0,0x0,8
tick,0x7ffdf681f424,16372021,0,0x0,8
tick,0x7ffdf681f424,16374019,0,0x0,8
tick,0x7ffdf681f424,16376007,0,0x0,8
tick,0x7ffdf681f424,16378007,0,0x0,8
tick,0x7ffdf681f424,16379999,0,0x0,8
tick,0x7ffdf681f424,16381998,0,0x0,8
tick,0x7ffdf681f424,16383994,0,0x0,8
tick,0x7ffdf681f424,16385984,0,0x0,8
tick,0x7ffdf681f424,16387962,0,0x0,8
tick,0x7ffdf681f424,16389974,0,0x0,8
tick,0x7ffdf681f424,16391958,0,0x0,8
tick,0x7ffdf681f424,16393951,0,0x0,8
tick,0x7ffdf681f424,16395948,0,0x0,8
tick,0x7ffdf681f424,16397942,0,0x0,8
tick,0x7ffdf681f424,16399903,0,0x0,8
tick,0x7ffdf681f424,16401938,0,0x0,8
tick,0x7ffdf681f424,16403961,0,0x0,8
tick,0x7ffdf681f424,16405927,0,0x0,8
tick,0x7ffdf681f424,16407921,0,0x0,8
tick,0x7ffdf681f424,16409882,0,0x0,8
tick,0x7ffdf681f424,16411887,0,0x0,8
tick,0x7ffdf681f424,16413918,0,0x0,8
tick,0x7ffdf681f424,16415900,0,0x0,8
tick,0x7ffdf681f424,16417885,0,0x0,8
tick,0x7ffdf681f424,16419888,0,0x0,8
tick,0x7ffdf681f424,16421890,0,0x0,8
tick,0x7ffdf681f424,16423891,0,0x0,8
tick,0x7ffdf681f424,16425872,0,0x0,8
tick,0x7ffdf681f424,16427864,0,0x0,8
tick,0x7ffdf681f424,16429864,0,0x0,8
tick,0x7ffdf681f424,16431806,0,0x0,8
tick,0x7ffdf681f424,16433876,0,0x0,8
tick,0x7ffdf681f424,16435845,0,0x0,8
tick,0x7ffdf681f424,16437841,0,0x0,8
tick,0x7ffdf681f424,16439836,0,0x0,8
tick,0x7ffdf681f424,16441824,0,0x0,8
tick,0x7ffdf681f424,16443830,0,0x0,8
tick,0x7ffdf681f424,16445725,0,0x0,8
tick,0x7ffdf681f424,16447856,0,0x0,8
tick,0x7ffdf681f424,16449792,0,0x0,8
tick,0x7ffdf681f424,16451662,0,0x0,8
tick,0x7ffdf681f424,16453585,0,0x0,8
tick,0x7ffdf681f424,16455579,0,0x0,8
tick,0x7ffdf681f424,16457637,0,0x0,8
tick,0x7ffdf681f424,16459630,0,0x0,8
tick,0x7ffdf681f424,16461601,0,0x0,8
tick,0x7ffdf681f424,16463722,0,0x0,8
tick,0x7ffdf681f424,16465705,0,0x0,8
tick,0x7ffdf681f424,16467714,0,0x0,8
tick,0x7ffdf681f424,16469693,0,0x0,8
tick,0x7ffdf681f424,16471699,0,0x0,8
tick,0x7ffdf681f424,16473687,0,0x0,8
tick,0x7ffdf681f424,16475729,0,0x0,8
tick,0x7ffdf681f424,16477689,0,0x0,8
tick,0x7ffdf681f424,16479678,0,0x0,8
tick,0x7ffdf681f424,16481709,0,0x0,8
tick,0x7ffdf681f424,16483720,0,0x0,8
tick,0x7ffdf681f424,16485719,0,0x0,8
tick,0x7ffdf681f424,16487725,0,0x0,8
tick,0x7ffdf681f424,16489712,0,0x0,8
tick,0x7ffdf681f424,16491699,0,0x0,8
tick,0x7ffdf681f424,16493695,0,0x0,8
tick,0x7ffdf681f424,16495694,0,0x0,8
tick,0x7ffdf681f424,16497711,0,0x0,8
tick,0x7ffdf681f424,16499684,0,0x0,8
tick,0x7ffdf681f424,16501671,0,0x0,8
tick,0x7ffdf681f424,16503668,0,0x0,8
tick,0x7ffdf681f424,16505551,0,0x0,8
tick,0x7ffdf681f424,16507652,0,0x0,8
tick,0x7ffdf681f424,16509573,0,0x0,8
tick,0x7ffdf681f424,16511639,0,0x0,8
tick,0x7ffdf681f424,16513660,0,0x0,8
tick,0x7ffdf681f424,16515629,0,0x0,8
tick,0x7ffdf681f424,16517621,0,0x0,8
tick,0x7ffdf681f424,16519623,0,0x0,8
tick,0x7ffdf681f424,16521505,0,0x0,8
tick,0x7ffdf681f424,16523511,0,0x0,8
tick,0x7ffdf681f424,16525633,0,0x0,8
tick,0x7ffdf681f424,16527500,0,0x0,8
tick,0x7ffdf681f424,16529596,0,0x0,8
tick,0x7ffdf681f424,16531593,0,0x0,8
tick,0x7ffdf681f424,16533583,0,0x0,8
tick,0x7ffdf681f424,16535580,0,0x0,8
tick,0x7ffdf681f424,16537579,0,0x0,8
tick,0x7ffdf681f424,16539467,0,0x0,8
tick,0x7ffdf681f424,16541567,0,0x0,8
tick,0x7ffdf681f424,16543423,0,0x0,8
tick,0x7ffdf681f424,16545374,0,0x0,8
tick,0x7ffdf681f424,16547392,0,0x0,8
tick,0x7ffdf681f424,16549459,0,0x0,8
tick,0x7ffdf681f424,16551377,0,0x0,8
tick,0x7ffdf681f424,16553377,0,0x0,8
tick,0x7ffdf681f424,16555500,0,0x0,8
tick,0x7ffdf681f424,16557546,0,0x0,8
tick,0x7ffdf681f424,16559425,0,0x0,8
tick,0x7ffdf681f424,16561436,0,0x0,8
tick,0x7ffdf681f424,16563457,0,0x0,8
tick,0x7ffdf681f424,16565509,0,0x0,8
tick,0x7ffdf681f424,16567389,0,0x0,8
tick,0x7ffdf681f424,16569502,0,0x0,8
tick,0x7ffdf681f424,16571478,0,0x0,8
tick,0x7ffdf681f424,16573390,0,0x0,8
tick,0x7ffdf681f424,16575476,0,0x0,8
tick,0x7ffdf681f424,16577474,0,0x0,8
tick,0x7ffdf681f424,16579459,0,0x0,8
tick,0x7ffdf681f424,16581477,0,0x0,8
tick,0x7ffdf681f424,16583455,0,0x0,8
tick,0x7ffdf681f424,16585473,0,0x0,8
tick,0x7ffdf681f424,16587393,0,0x0,8
tick,0x7ffdf681f424,16589409,0,0x0,8
tick,0x7ffdf681f424,16591371,0,0x0,8
tick,0x7ffdf681f424,16593351,0,0x0,8
tick,0x7ffdf681f424,16595362,0,0x0,8
tick,0x7ffdf681f424,16597348,0,0x0,8
tick,0x7ffdf681f424,16599372,0,0x0,8
tick,0x7ffdf681f424,16601319,0,0x0,8
tick,0x7ffdf681f424,16603394,0,0x0,8
tick,0x7ffdf681f424,16605396,0,0x0,8
tick,0x7ffdf681f424,16607368,0,0x0,8
tick,0x7ffdf681f424,16609367,0,0x0,8
tick,0x7ffdf681f424,16611373,0,0x0,8
tick,0x7ffdf681f424,16613375,0,0x0,8
tick,0x7ffdf681f424,16615361,0,0x0,8
tick,0x7ffdf681f424,16617362,0,0x0,8
tick,0x7ffdf681f424,16619343,0,0x0,8
tick,0x7ffdf681f424,16621359,0,0x0,8
tick,0x7ffdf681f424,16623354,0,0x0,8
tick,0x7ffdf681f424,16625346,0,0x0,8
tick,0x7ffdf681f424,16627332,0,0x0,8
tick,0x7ffdf681f424,16629331,0,0x0,8
tick,0x7ffdf681f424,16631324,0,0x0,8
tick,0x7ffdf681f424,16633321,0,0x0,8
tick,0x7ffdf681f424,16635310,0,0x0,8
tick,0x7ffdf681f424,16637310,0,0x0,8
tick,0x7ffdf681f424,16639298,0,0x0,8
tick,0x7ffdf681f424,16641305,0,0x0,8
tick,0x7ffdf681f424,16643210,0,0x0,8
tick,0x7ffdf681f424,16645306,0,0x0,8
tick,0x7ffdf681f424,16647275,0,0x0,8
tick,0x7ffdf681f424,16649270,0,0x0,8
tick,0x7ffdf681f424,16651229,0,0x0,8
tick,0x7ffdf681f424,16653169,0,0x0,8
tick,0x7ffdf681f424,16655255,0,0x0,8
tick,0x7ffdf681f424,16657248,0,0x0,8
tick,0x7ffdf681f424,16659263,0,0x0,8
tick,0x7ffdf681f424,16661239,0,0x0,8
tick,0x7ffdf681f424,16663180,0,0x0,8
tick,0x7ffdf681f424,16665244,0,0x0,8
tick,0x7ffdf681f424,16667219,0,0x0,8
tick,0x7ffdf681f424,16669212,0,0x0,8
tick,0x7ffdf681f424,16671217,0,0x0,8
tick,0x7ffdf681f424,16673207,0,0x0,8
tick,0x7ffdf681f424,16675102,0,0x0,8
tick,0x7ffdf681f424,16677110,0,0x0,8
tick,0x7ffdf681f424,16679172,0,0x0,8
tick,0x7ffdf681f424,16681184,0,0x0,8
tick,0x7ffdf681f424,16683205,0,0x0,8
tick,0x7ffdf681f424,16685066,0,0x0,8
tick,0x7ffdf681f424,16687174,0,0x0,8
tick,0x7ffdf681f424,16689170,0,0x0,8
tick,0x7ffdf681f424,16691162,0,0x0,8
tick,0x7ffdf681f424,16693065,0,0x0,8
tick,0x7ffdf681f424,16695175,0,0x0,8
tick,0x7ffdf681f424,16697152,0,0x0,8
tick,0x7ffdf681f424,16699140,0,0x0,8
tick,0x7ffdf681f424,16701169,0,0x0,8
tick,0x7ffdf681f424,16703132,0,0x0,8
tick,0x7ffdf681f424,16705128,0,0x0,8
tick,0x7ffdf681f424,16707135,0,0x0,8
tick,0x7ffdf681f424,16709122,0,0x0,8
tick,0x7ffdf681f424,16711108,0,0x0,8
tick,0x7ffdf681f424,16713108,0,0x0,8
tick,0x7ffdf681f424,16715124,0,0x0,8
tick,0x7ffdf681f424,16717082,0,0x0,8
tick,0x7ffdf681f424,16719100,0,0x0,8
tick,0x7ffdf681f424,16721088,0,0x0,8
tick,0x7ffdf681f424,16723085,0,0x0,8
tick,0x7ffdf681f424,16725095,0,0x0,8
tick,0x7ffdf681f424,16727074,0,0x0,8
tick,0x7ffdf681f424,16728996,0,0x0,8
tick,0x7ffdf681f424,16731062,0,0x0,8
tick,0x7ffdf681f424,16733022,0,0x0,8
tick,0x7ffdf681f424,16735018,0,0x0,8
tick,0x7ffdf681f424,16737043,0,0x0,8
tick,0x7ffdf681f424,16739017,0,0x0,8
tick,0x7ffdf681f424,16741042,0,0x0,8
tick,0x7ffdf681f424,16742970,0,0x0,8
tick,0x7ffdf681f424,16745039,0,0x0,8
tick,0x7ffdf681f424,16747020,0,0x0,8
tick,0x7ffdf681f424,16749013,0,0x0,8
tick,0x7ffdf681f424,16751015,0,0x0,8
tick,0x7ffdf681f424,16752892,0,0x0,8
tick,0x7ffdf681f424,16754992,0,0x0,8
tick,0x7ffdf681f424,16757019,0,0x0,8
tick,0x7ffdf681f424,16758984,0,0x0,8
tick,0x7ffdf681f424,16760913,0,0x0,8
tick,0x7ffdf681f424,16762976,0,0x0,8
tick,0x7ffdf681f424,16764969,0,0x0,8
tick,0x7ffdf681f424,16766961,0,0x0,8
tick,0x7ffdf681f424,16768960,0,0x0,8
tick,0x7ffdf681f424,16770951,0,0x0,8
tick,0x7ffdf681f424,16772773,0,0x0,8
tick,0x7ffdf681f424,16774953,0,0x0,8
tick,0x7ffdf681f424,16776937,0,0x0,8
tick,0x7ffdf681f424,16778939,0,0x0,8
tick,0x7ffdf681f424,16780955,0,0x0,8
tick,0x7ffdf681f424,16782891,0,0x0,8
tick,0x7ffdf681f424,16784825,0,0x0,8
tick,0x7ffdf681f424,16786918,0,0x0,8
tick,0x7ffdf681f424,16788931,0,0x0,8
tick,0x7ffdf681f424,16790900,0,0x0,8
tick,0x7ffdf681f424,16792898,0,0x0,8
tick,0x7ffdf681f424,16794898,0,0x0,8
tick,0x7ffdf681f424,16796899,0,0x0,8
tick,0x7ffdf681f424,16798876,0,0x0,8
tick,0x7ffdf681f424,16800855,0,0x0,8
tick,0x7ffdf681f424,16802828,0,0x0,8
tick,0x7ffdf681f424,16804887,0,0x0,8
tick,0x7ffdf681f424,16806695,0,0x0,8
tick,0x7ffdf681f424,16808630,0,0x0,8
tick,0x7ffdf681f424,16810626,0,0x0,8
tick,0x7ffdf681f424,16812750,0,0x0,8
tick,0x7ffdf681f424,16814816,0,0x0,8
tick,0x7ffdf681f424,16816786,0,0x0,8
tick,0x7ffdf681f424,16818684,0,0x0,8
tick,0x7ffdf681f424,16820650,0,0x0,8
tick,0x7ffdf681f424,16822766,0,0x0,8
tick,0x7ffdf681f424,16824843,0,0x0,8
tick,0x7ffdf681f424,16826757,0,0x0,8
tick,0x7ffdf681f424,16828641,0,0x0,8
tick,0x7ffdf681f424,16830774,0,0x0,8
tick,0x7ffdf681f424,16832755,0,0x0,8
tick,0x7ffdf681f424,16834578,0,0x0,8
tick,0x7ffdf681f424,16836754,0,0x0,8
tick,0x7ffdf681f424,16838726,0,0x0,8
tick,0x7ffdf681f424,16840716,0,0x0,8
tick,0x7ffdf681f424,16842728,0,0x0,8
tick,0x7ffdf681f424,16844728,0,0x0,8
tick,0x7ffdf681f424,16846702,0,0x0,8
tick,0x7ffdf681f424,16848697,0,0x0,8
tick,0x7ffdf681f424,16850700,0,0x0,8
tick,0x7ffdf681f424,16852672,0,0x0,8
tick,0x7ffdf681f424,16854681,0,0x0,8
tick,0x7ffdf681f424,16856676,0,0x0,8
tick,0x7ffdf681f424,16858718,0,0x0,8
tick,0x7ffdf681f424,16860720,0,0x0,8
tick,0x7ffdf681f424,16862723,0,0x0,8
tick,0x7ffdf681f424,16864711,0,0x0,8
tick,0x7ffdf681f424,16866695,0,0x0,8
tick,0x7ffdf681f424,16868691,0,0x0,8
tick,0x7ffdf681f424,16870731,0,0x0,8
tick,0x7ffdf681f424,16872653,0,0x0,8
tick,0x7ffdf681f424,16874687,0,0x0,8
tick,0x7ffdf681f424,16876661,0,0x0,8
tick,0x7ffdf681f424,16878671,0,0x0,8
tick,0x7ffdf681f424,16880663,0,0x0,8
tick,0x7ffdf681f424,16882675,0,0x0,8
tick,0x7ffdf681f424,16884625,0,0x0,8
tick,0x7ffdf681f424,16886621,0,0x0,8
tick,0x7ffdf681f424,16888634,0,0x0,8
tick,0x7ffdf681f424,16890625,0,0x0,8
tick,0x7ffdf681f424,16892618,0,0x0,8
tick,0x7ffdf681f424,16894585,0,0x0,8
tick,0x7ffdf681f424,16896610,0,0x0,8
tick,0x7ffdf681f424,16898605,0,0x0,8
tick,0x7ffdf681f424,16900607,0,0x0,8
tick,0x7ffdf681f424,16902598,0,0x0,8
tick,0x7ffdf681f424,16904604,0,0x0,8
tick,0x7ffdf681f424,16906487,0,0x0,8
tick,0x7ffdf681f424,16908583,0,0x0,8
tick,0x7ffdf681f424,16910572,0,0x0,8
tick,0x7ffdf681f424,16912573,0,0x0,8
tick,0x7ffdf681f424,16914548,0,0x0,8
tick,0x7ffdf681f424,16916545,0,0x0,8
tick,0x7ffdf681f424,16918441,0,0x0,8
tick,0x7ffdf681f424,16920548,0,0x0,8
tick,0x7ffdf681f424,16922536,0,0x0,8
tick,0x7ffdf681f424,16924529,0,0x0,8
tick,0x7ffdf681f424,16926429,0,0x0,8
tick,0x7ffdf681f424,16928521,0,0x0,8
tick,0x7ffdf681f424,16930515,0,0x0,8
tick,0x7ffdf681f424,16932515,0,0x0,8
tick,0x7ffdf681f424,16934500,0,0x0,8
tick,0x7ffdf681f424,16936498,0,0x0,8
tick,0x7ffdf681f424,16938485,0,0x0,8
tick,0x7ffdf681f424,16940498,0,0x0,8
tick,0x7ffdf681f424,16942487,0,0x0,8
tick,0x7ffdf681f424,16944480,0,0x0,8
tick,0x7ffdf681f424,16946476,0,0x0,8
tick,0x7ffdf681f424,16948482,0,0x0,8
tick,0x7ffdf681f424,16950465,0,0x0,8
tick,0x7ffdf681f424,16952460,0,0x0,8
tick,0x7ffdf681f424,16954453,0,0x0,8
tick,0x7ffdf681f424,16956444,0,0x0,8
tick,0x7ffdf681f424,16958468,0,0x0,8
tick,0x7ffdf681f424,16960396,0,0x0,8
tick,0x7ffdf681f424,16962434,0,0x0,8
tick,0x7ffdf681f424,16964436,0,0x0,8
tick,0x7ffdf681f424,16966420,0,0x0,8
tick,0x7ffdf681f424,16968418,0,0x0,8
tick,0x7ffdf681f424,16970377,0,0x0,8
tick,0x7ffdf681f424,16972418,0,0x0,8
tick,0x7ffdf681f424,16974401,0,0x0,8
tick,0x7ffdf681f424,16976302,0,0x0,8
tick,0x7ffdf681f424,16978387,0,0x0,8
tick,0x7ffdf681f424,16980401,0,0x0,8
tick,0x7ffdf681f424,16982294,0,0x0,8
tick,0x7ffdf681f424,16984281,0,0x0,8
tick,0x7ffdf681f424,16986357,0,0x0,8
tick,0x7ffdf681f424,16988377,0,0x0,8
tick,0x7ffdf681f424,16990369,0,0x0,8
tick,0x7ffdf681f424,16992368,0,0x0,8
tick,0x7ffdf681f424,16994240,0,0x0,8
tick,0x7ffdf681f424,16996347,0,0x0,8
tick,0x7ffdf681f424,16998340,0,0x0,8
tick,0x7ffdf681f424,17000363,0,0x0,8
tick,0x7ffdf681f424,17002318,0,0x0,8
tick,0x7ffdf681f424,17004339,0,0x0,8
tick,0x7ffdf681f424,17006321,0,0x0,8
tick,0x7ffdf681f424,17008316,0,0x0,8
tick,0x7ffdf681f424,17010329,0,0x0,8
tick,0x7ffdf681f424,17012307,0,0x0,8
tick,0x7ffdf681f424,17014295,0,0x0,8
tick,0x7ffdf681f424,17016294,0,0x0,8
tick,0x7ffdf681f424,17018183,0,0x0,8
tick,0x7ffdf681f424,17020290,0,0x0,8
tick,0x7ffdf681f424,17022253,0,0x0,8
tick,0x7ffdf681f424,17024258,0,0x0,8
tick,0x7ffdf681f424,17026254,0,0x0,8
tick,0x7ffdf681f424,17028269,0,0x0,8
tick,0x7ffdf681f424,17030255,0,0x0,8
tick,0x7ffdf681f424,17032256,0,0x0,8
tick,0x7ffdf681f424,17034255,0,0x0,8
tick,0x7ffdf681f424,17036250,0,0x0,8
tick,0x7ffdf681f424,17038236,0,0x0,8
tick,0x7ffdf681f424,17040236,0,0x0,8
tick,0x7ffdf681f424,17042227,0,0x0,8
tick,0x7ffdf681f424,17044220,0,0x0,8
tick,0x7ffdf681f424,17046204,0,0x0,8
tick,0x7ffdf681f424,17048223,0,0x0,8
tick,0x7ffdf681f424,17050202,0,0x0,8
tick,0x7ffdf681f424,17052201,0,0x0,8
tick,0x7ffdf681f424,17054191,0,0x0,8
tick,0x7ffdf681f424,17056191,0,0x0,8
tick,0x7ffdf681f424,17058194,0,0x0,8
tick,0x7ffdf681f424,17060097,0,0x0,8
tick,0x7ffdf681f424,17062173,0,0x0,8
tick,0x7ffdf681f424,17064170,0,0x0,8
tick,0x7ffdf681f424,17066172,0,0x0,8
tick,0x7ffdf681f424,17068046,0,0x0,8
tick,0x7ffdf681f424,17070161,0,0x0,8
tick,0x7ffdf681f424,17072034,0,0x0,8
tick,0x7ffdf681f424,17074142,0,0x0,8
tick,0x7ffdf681f424,17076151,0,0x0,8
tick,0x7ffdf681f424,17078129,0,0x0,8
tick,0x7ffdf681f424,17080128,0,0x0,8
tick,0x7ffdf681f424,17082118,0,0x0,8
tick,0x7ffdf681f424,17084121,0,0x0,8
tick,0x7ffdf681f424,17086108,0,0x0,8
tick,0x7ffdf681f424,17088104,0,0x0,8
tick,0x7ffdf681f424,17090084,0,0x0,8
tick,0x7ffdf681f424,17092109,0,0x0,8
tick,0x7ffdf681f424,17094114,0,0x0,8
tick,0x7ffdf681f424,17096084,0,0x0,8
tick,0x7ffdf681f424,17098078,0,0x0,8
tick,0x7ffdf681f424,17100071,0,0x0,8
tick,0x7ffdf681f424,17102077,0,0x0,8
tick,0x7ffdf681f424,17104061,0,0x0,8
tick,0x7ffdf681f424,17106052,0,0x0,8
tick,0x7ffdf681f424,17108050,0,0x0,8
tick,0x7ffdf681f424,17109964,0,0x0,8
tick,0x7ffdf681f424,17112067,0,0x0,8
tick,0x7ffdf681f424,17114044,0,0x0,8
tick,0x7ffdf681f424,17116034,0,0x0,8
tick,0x7ffdf681f424,17117979,0,0x0,8
tick,0x7ffdf681f424,17120019,0,0x0,8
tick,0x7ffdf681f424,17122020,0,0x0,8
tick,0x7ffdf681f424,17124032,0,0x0,8
tick,0x7ffdf681f424,17125999,0,0x0,8
tick,0x7ffdf681f424,17128005,0,0x0,8
tick,0x7ffdf681f424,17130017,0,0x0,8
tick,0x7ffdf681f424,17131986,0,0x0,8
tick,0x7ffdf681f424,17133983,0,0x0,8
tick,0x7ffdf681f424,17135875,0,0x0,8
tick,0x7ffdf681f424,17137884,0,0x0,8
tick,0x7ffdf681f424,17139953,0,0x0,8
tick,0x7ffdf681f424,17141959,0,0x0,8
tick,0x7ffdf681f424,17143960,0,0x0,8
tick,0x7ffdf681f424,17145958,0,0x0,8
tick,0x7ffdf681f424,17147962,0,0x0,8
tick,0x7ffdf681f424,17149935,0,0x0,8
tick,0x7ffdf681f424,17151940,0,0x0,8
tick,0x7ffdf681f424,17153939,0,0x0,8
tick,0x7ffdf681f424,17155940,0,0x0,8
tick,0x7ffdf681f424,17157927,0,0x0,8
tick,0x7ffdf681f424,17159801,0,0x0,8
tick,0x7ffdf681f424,17161909,0,0x0,8
tick,0x7ffdf681f424,17163901,0,0x0,8
tick,0x7ffdf681f424,17165895,0,0x0,8
tick,0x7ffdf681f424,17167916,0,0x0,8
tick,0x7ffdf681f424,17169887,0,0x0,8
tick,0x7ffdf681f424,17171878,0,0x0,8
tick,0x7ffdf681f424,17173881,0,0x0,8
tick,0x7ffdf681f424,17175879,0,0x0,8
tick,0x7ffdf681f424,17177890,0,0x0,8
tick,0x7ffdf681f424,17179869,0,0x0,8
tick,0x7ffdf681f424,17181744,0,0x0,8
tick,0x7ffdf681f424,17183858,0,0x0,8
tick,0x7ffdf681f424,17185843,0,0x0,8
tick,0x7ffdf681f424,17187839,0,0x0,8
tick,0x7ffdf681f424,17189854,0,0x0,8
tick,0x7ffdf681f424,17191838,0,0x0,8
tick,0x7ffdf681f424,17193825,0,0x0,8
tick,0x7ffdf681f424,17195820,0,0x0,8
tick,0x7ffdf681f424,17197818,0,0x0,8
tick,0x7ffdf681f424,17199840,0,0x0,8
tick,0x7ffdf681f424,17201810,0,0x0,8
tick,0x7ffdf681f424,17203796,0,0x0,8
tick,0x7ffdf681f424,17205795,0,0x0,8
tick,0x7ffdf681f424,17207785,0,0x0,8
tick,0x7ffdf681f424,17209677,0,0x0,8
tick,0x7ffdf681f424,17211779,0,0x0,8
tick,0x7ffdf681f424,17213643,0,0x0,8
tick,0x7ffdf681f424,17215766,0,0x0,8
tick,0x7ffdf681f424,17217777,0,0x0,8
tick,0x7ffdf681f424,17219756,0,0x0,8
tick,0x7ffdf681f424,17221768,0,0x0,8
tick,0x7ffdf681f424,17223729,0,0x0,8
tick,0x7ffdf681f424,17225757,0,0x0,8
tick,0x7ffdf681f424,17227746,0,0x0,8
tick,0x7ffdf681f424,17229731,0,0x0,8
tick,0x7ffdf681f424,17231720,0,0x0,8
tick,0x7ffdf681f424,17233722,0,0x0,8
tick,0x7ffdf681f424,17235720,0,0x0,8
tick,0x7ffdf681f424,17237711,0,0x0,8
tick,0x7ffdf681f424,17239698,0,0x0,8
tick,0x7ffdf681f424,17241699,0,0x0,8
tick,0x7ffdf681f424,17243717,0,0x0,8
tick,0x7ffdf681f424,17245699,0,0x0,8
tick,0x7ffdf681f424,17247691,0,0x0,8
tick,0x7ffdf681f424,17249676,0,0x0,8
tick,0x7ffdf681f424,17251560,0,0x0,8
tick,0x7ffdf681f424,17253661,0,0x0,8
tick,0x7ffdf681f424,17255667,0,0x0,8
tick,0x7ffdf681f424,17257656,0,0x0,8
tick,0x7ffdf681f424,17259649,0,0x0,8
tick,0x7ffdf681f424,17261647,0,0x0,8
tick,0x7ffdf681f424,17263637,0,0x0,8
tick,0x7ffdf681f424,17265698,0,0x0,8
tick,0x7ffdf681f424,17267637,0,0x0,8
tick,0x7ffdf681f424,17269638,0,0x0,8
tick,0x7ffdf681f424,17271612,0,0x0,8
tick,0x7ffdf681f424,17273615,0,0x0,8
tick,0x7ffdf681f424,17275608,0,0x0,8
tick,0x7ffdf681f424,17277488,0,0x0,8
tick,0x7ffdf681f424,17279596,0,0x0,8
tick,0x7ffdf681f424,17281597,0,0x0,8
tick,0x7ffdf681f424,17283583,0,0x0,8
tick,0x7ffdf681f424,17285582,0,0x0,8
tick,0x7ffdf681f424,17287626,0,0x0,8
tick,0x7ffdf681f424,17289435,0,0x0,8
tick,0x7ffdf681f424,17291467,0,0x0,8
tick,0x7ffdf681f424,17293541,0,0x0,8
tick,0x7ffdf681f424,17295548,0,0x0,8
tick,0x7ffdf681f424,17297556,0,0x0,8
tick,0x7ffdf681f424,17299548,0,0x0,8
tick,0x7ffdf681f424,17301447,0,0x0,8
tick,0x7ffdf681f424,17303529,0,0x0,8
tick,0x7ffdf681f424,17305523,0,0x0,8
tick,0x7ffdf681f424,17307523,0,0x0,8
tick,0x7ffdf681f424,17309532,0,0x0,8
tick,0x7ffdf681f424,17311497,0,0x0,8
tick,0x7ffdf681f424,17313512,0,0x0,8
tick,0x7ffdf681f424,17315497,0,0x0,8
tick,0x7ffdf681f424,17317495,0,0x0,8
tick,0x7ffdf681f424,17319488,0,0x0,8
tick,0x7ffdf681f424,17321488,0,0x0,8
tick,0x7ffdf681f424,17323480,0,0x0,8
tick,0x7ffdf681f424,17325469,0,0x0,8
tick,0x7ffdf681f424,17327483,0,0x0,8
tick,0x7ffdf681f424,17329462,0,0x0,8
tick,0x7ffdf681f424,17331456,0,0x0,8
tick,0x7ffdf681f424,17333463,0,0x0,8
tick,0x7ffdf681f424,17335450,0,0x0,8
tick,0x7ffdf681f424,17337439,0,0x0,8
tick,0x7ffdf681f424,17339435,0,0x0,8
tick,0x7ffdf681f424,17341425,0,0x0,8
tick,0x7ffdf681f424,17343427,0,0x0,8
tick,0x7ffdf681f424,17345417,0,0x0,8
tick,0x7ffdf681f424,17347422,0,0x0,8
tick,0x7ffdf681f424,17349410,0,0x0,8
tick,0x7ffdf681f424,17351354,0,0x0,8
tick,0x7ffdf681f424,17353426,0,0x0,8
tick,0x7ffdf681f424,17355343,0,0x0,8
tick,0x7ffdf681f424,17357404,0,0x0,8
tick,0x7ffdf681f424,17359381,0,0x0,8
tick,0x7ffdf681f424,17361343,0,0x0,8
tick,0x7ffdf681f424,17363381,0,0x0,8
tick,0x7ffdf681f424,17365255,0,0x0,8
tick,0x7ffdf681f424,17367278,0,0x0,8
tick,0x7ffdf681f424,17369358,0,0x0,8
tick,0x7ffdf681f424,17371395,0,0x0,8
tick,0x7ffdf681f424,17373342,0,0x0,8
tick,0x7ffdf681f424,17375365,0,0x0,8
tick,0x7ffdf681f424,17377322,0,0x0,8
tick,0x7ffdf681f424,17379332,0,0x0,8
tick,0x7ffdf681f424,17381318,0,0x0,8
tick,0x7ffdf681f424,17383319,0,0x0,8
tick,0x7ffdf681f424,17385318,0,0x0,8
tick,0x7ffdf681f424,17387304,0,0x0,8
tick,0x7ffdf681f424,17389302,0,0x0,8
tick,0x7ffdf681f424,17391308,0,0x0,8
tick,0x7ffdf681f424,17393180,0,0x0,8
tick,0x7ffdf681f424,17395284,0,0x0,8
tick,0x7ffdf681f424,17397308,0,0x0,8
tick,0x7ffdf681f424,17399311,0,0x0,8
tick,0x7ffdf681f424,17401287,0,0x0,8
tick,0x7ffdf681f424,17403262,0,0x0,8
tick,0x7ffdf681f424,17405254,0,0x0,8
tick,0x7ffdf681f424,17407251,0,0x0,8
tick,0x7ffdf681f424,17409251,0,0x0,8
tick,0x7ffdf681f424,17411242,0,0x0,8
tick,0x7ffdf681f424,17413236,0,0x0,8
tick,0x7ffdf681f424,17415239,0,0x0,8
tick,0x7ffdf681f424,17417281,0,0x0,8
tick,0x7ffdf681f424,17419258,0,0x0,8
tick,0x7ffdf681f424,17421224,0,0x0,8
tick,0x7ffdf681f424,17423223,0,0x0,8
tick,0x7ffdf681f424,17425214,0,0x0,8
tick,0x7ffdf681f424,17427198,0,0x0,8
tick,0x7ffdf681f424,17429230,0,0x0,8
tick,0x7ffdf681f424,17431198,0,0x0,8
tick,0x7ffdf681f424,17433182,0,0x0,8
tick,0x7ffdf681f424,17435178,0,0x0,8
tick,0x7ffdf681f424,17437177,0,0x0,8
tick,0x7ffdf681f424,17439170,0,0x0,8
tick,0x7ffdf681f424,17441220,0,0x0,8
tick,0x7ffdf681f424,17443063,0,0x0,8
tick,0x7ffdf681f424,17445076,0,0x0,8
tick,0x7ffdf681f424,17447128,0,0x0,8
tick,0x7ffdf681f424,17449147,0,0x0,8
tick,0x7ffdf681f424,17451150,0,0x0,8
tick,0x7ffdf681f424,17453135,0,0x0,8
tick,0x7ffdf681f424,17455124,0,0x0,8
tick,0x7ffdf681f424,17457122,0,0x0,8
tick,0x7ffdf681f424,17459114,0,0x0,8
tick,0x7ffdf681f424,17461119,0,0x0,8
tick,0x7ffdf681f424,17463127,0,0x0,8
tick,0x7ffdf681f424,17465110,0,0x0,8
tick,0x7ffdf681f424,17467119,0,0x0,8
tick,0x7ffdf681f424,17469086,0,0x0,8
tick,0x7ffdf681f424,17471089,0,0x0,8
tick,0x7ffdf681f424,17473078,0,0x0,8
tick,0x7ffdf681f424,17475077,0,0x0,8
tick,0x7ffdf681f424,17477065,0,0x0,8
tick,0x7ffdf681f424,17479061,0,0x0,8
tick,0x7ffdf681f424,17480982,0,0x0,8
tick,0x7ffdf681f424,17482889,0,0x0,8
tick,0x7ffdf681f424,17484872,0,0x0,8
tick,0x7ffdf681f424,17486967,0,0x0,8
tick,0x7ffdf681f424,17488971,0,0x0,8
tick,0x7ffdf681f424,17490828,0,0x0,8
tick,0x7ffdf681f424,17492878,0,0x0,8
tick,0x7ffdf681f424,17494850,0,0x0,8
tick,0x7ffdf681f424,17496801,0,0x0,8
tick,0x7ffdf681f424,17498869,0,0x0,8
tick,0x7ffdf681f424,17500848,0,0x0,8
tick,0x7ffdf681f424,17502811,0,0x0,8
tick,0x7ffdf681f424,17504771,0,0x0,8
tick,0x7ffdf681f424,17506820,0,0x0,8
tick,0x7ffdf681f424,17508764,0,0x0,8
tick,0x7ffdf681f424,17510832,0,0x0,8
tick,0x7ffdf681f424,17512902,0,0x0,8
tick,0x7ffdf681f424,17514929,0,0x0,8
tick,0x7ffdf681f424,17516840,0,0x0,8
tick,0x7ffdf681f424,17518804,0,0x0,8
tick,0x7ffdf681f424,17520812,0,0x0,8
tick,0x7ffdf681f424,17522883,0,0x0,8
tick,0x7ffdf681f424,17524849,0,0x0,8
tick,0x7ffdf681f424,17526896,0,0x0,8
tick,0x7ffdf681f424,17528846,0,0x0,8
tick,0x7ffdf681f424,17530875,0,0x0,8
tick,0x7ffdf681f424,17532874,0,0x0,8
tick,0x7ffdf681f424,17534753,0,0x0,8
tick,0x7ffdf681f424,17536838,0,0x0,8
tick,0x7ffdf681f424,17538947,0,0x0,8
tick,0x7ffdf681f424,17540924,0,0x0,8
tick,0x7ffdf681f424,17542339,0,0x0,8
tick,0x7ffdf681f424,17544146,0,0x0,8
tick,0x7ffdf681f424,17546137,0,0x0,8
tick,0x7ffdf681f424,17548176,0,0x0,8
tick,0x7ffdf681f424,17549977,0,0x0,8
tick,0x7ffdf681f424,17552092,0,0x0,8
tick,0x7ffdf681f424,17554083,0,0x0,8
tick,0x7ffdf681f424,17556097,0,0x0,8
tick,0x7ffdf681f424,17558060,0,0x0,8
tick,0x7ffdf681f424,17560040,0,0x0,8
tick,0x7ffdf681f424,17562068,0,0x0,8
tick,0x7ffdf681f424,17564169,0,0x0,8
tick,0x7ffdf681f424,17565961,0,0x0,8
tick,0x7ffdf681f424,17568000,0,0x0,8
tick,0x7ffdf681f424,17570061,0,0x0,8
tick,0x7ffdf681f424,17571929,0,0x0,8
tick,0x7ffdf681f424,17574039,0,0x0,8
tick,0x7ffdf681f424,17576045,0,0x0,8
tick,0x7ffdf681f424,17578050,0,0x0,8
tick,0x7ffdf681f424,17580047,0,0x0,8
tick,0x7ffdf681f424,17582059,0,0x0,8
tick,0x7ffdf681f424,17583945,0,0x0,8
tick,0x7ffdf681f424,17585848,0,0x0,8
tick,0x7ffdf681f424,17587884,0,0x0,8
tick,0x7ffdf681f424,17589864,0,0x0,8
tick,0x7ffdf681f424,17591884,0,0x0,8
tick,0x7ffdf681f424,17593843,0,0x0,8
tick,0x7ffdf681f424,17595854,0,0x0,8
tick,0x7ffdf681f424,17597846,0,0x0,8
tick,0x7ffdf681f424,17599885,0,0x0,8
tick,0x7ffdf681f424,17601882,0,0x0,8
tick,0x7ffdf681f424,17603861,0,0x0,8
tick,0x7ffdf681f424,17605878,0,0x0,8
tick,0x7ffdf681f424,17607827,0,0x0,8
tick,0x7ffdf681f424,17609813,0,0x0,8
tick,0x7ffdf681f424,17611831,0,0x0,8
tick,0x7ffdf681f424,17613865,0,0x0,8
tick,0x7ffdf681f424,17615750,0,0x0,8
tick,0x7ffdf681f424,17617781,0,0x0,8
tick,0x7ffdf681f424,17619755,0,0x0,8
tick,0x7ffdf681f424,17621729,0,0x0,8
tick,0x7ffdf681f424,17623740,0,0x0,8
tick,0x7ffdf681f424,17625784,0,0x0,8
tick,0x7ffdf681f424,17627753,0,0x0,8
tick,0x7ffdf681f424,17629815,0,0x0,8
tick,0x7ffdf681f424,17631821,0,0x0,8
tick,0x7ffdf681f424,17633812,0,0x0,8
tick,0x7ffdf681f424,17635827,0,0x0,8
tick,0x7ffdf681f424,17637796,0,0x0,8
tick,0x7ffdf681f424,17639806,0,0x0,8
tick,0x7ffdf681f424,17641797,0,0x0,8
tick,0x7ffdf681f424,17643783,0,0x0,8
tick,0x7ffdf681f424,17645733,0,0x0,8
tick,0x7ffdf681f424,17647781,0,0x0,8
tick,0x7ffdf681f424,17649873,0,0x0,8
tick,0x7ffdf681f424,17651760,0,0x0,8
tick,0x7ffdf681f424,17653782,0,0x0,8
tick,0x7ffdf681f424,17655810,0,0x0,8
tick,0x7ffdf681f424,17657824,0,0x0,8
tick,0x7ffdf681f424,17659618,0,0x0,8
tick,0x7ffdf681f424,17661690,0,0x0,8
tick,0x7ffdf681f424,17663645,0,0x0,8
tick,0x7ffdf681f424,17665648,0,0x0,8
tick,0x7ffdf681f424,17667663,0,0x0,8
tick,0x7ffdf681f424,17669689,0,0x0,8
tick,0x7ffdf681f424,17671607,0,0x0,8
tick,0x7ffdf681f424,17673684,0,0x0,8
tick,0x7ffdf681f424,17675623,0,0x0,8
tick,0x7ffdf681f424,17677596,0,0x0,8
tick,0x7ffdf681f424,17679599,0,0x0,8
tick,0x7ffdf681f424,17681646,0,0x0,8
tick,0x7ffdf681f424,17683675,0,0x0,8
tick,0x7ffdf681f424,17685666,0,0x0,8
tick,0x7ffdf681f424,17687672,0,0x0,8
tick,0x7ffdf681f424,17689705,0,0x0,8
tick,0x7ffdf681f424,17691661,0,0x0,8
tick,0x7ffdf681f424,17693638,0,0x0,8
tick,0x7ffdf681f424,17695647,0,0x0,8
tick,0x7ffdf681f424,17697640,0,0x0,8
tick,0x7ffdf681f424,17699635,0,0x0,8
tick,0x7ffdf681f424,17701632,0,0x0,8
tick,0x7ffdf681f424,17703675,0,0x0,8
tick,0x7ffdf681f424,17705550,0,0x0,8
tick,0x7ffdf681f424,17707612,0,0x0,8
tick,0x7ffdf681f424,17709692,0,0x0,8
tick,0x7ffdf681f424,17711599,0,0x0,8
tick,0x7ffdf681f424,17713598,0,0x0,8
tick,0x7ffdf681f424,17715596,0,0x0,8
tick,0x7ffdf681f424,17717586,0,0x0,8
tick,0x7ffdf681f424,17719587,0,0x0,8
tick,0x7ffdf681f424,17721580,0,0x0,8
tick,0x7ffdf681f424,17723573,0,0x0,8
tick,0x7ffdf681f424,17725568,0,0x0,8
tick,0x7ffdf681f424,17727574,0,0x0,8
tick,0x7ffdf681f424,17729555,0,0x0,8
tick,0x7ffdf681f424,17731545,0,0x0,8
tick,0x7ffdf681f424,17733557,0,0x0,8
tick,0x7ffdf681f424,17735543,0,0x0,8
tick,0x7ffdf681f424,17737538,0,0x0,8
tick,0x7ffdf681f424,17739529,0,0x0,8
tick,0x7ffdf681f424,17741526,0,0x0,8
tick,0x7ffdf681f424,17743516,0,0x0,8
tick,0x7ffdf681f424,17745522,0,0x0,8
tick,0x7ffdf681f424,17747530,0,0x0,8
tick,0x7ffdf681f424,17749506,0,0x0,8
tick,0x7ffdf681f424,17751475,0,0x0,8
tick,0x7ffdf681f424,17753514,0,0x0,8
tick,0x7ffdf681f424,17755510,0,0x0,8
tick,0x7ffdf681f424,17757495,0,0x0,8
tick,0x7ffdf681f424,17759486,0,0x0,8
tick,0x7ffdf681f424,17761440,0,0x0,8
tick,0x7ffdf681f424,17763475,0,0x0,8
tick,0x7ffdf681f424,17765439,0,0x0,8
tick,0x7ffdf681f424,17767452,0,0x0,8
tick,0x7ffdf681f424,17769474,0,0x0,8
tick,0x7ffdf681f424,17771440,0,0x0,8
tick,0x7ffdf681f424,17773434,0,0x0,8
tick,0x7ffdf681f424,17775433,0,0x0,8
tick,0x7ffdf681f424,17777432,0,0x0,8
tick,0x7ffdf681f424,17779376,0,0x0,8
tick,0x7ffdf681f424,17781388,0,0x0,8
tick,0x7ffdf681f424,17783361,0,0x0,8
tick,0x7ffdf681f424,17785360,0,0x0,8
tick,0x7ffdf681f424,17787358,0,0x0,8
tick,0x7ffdf681f424,17789331,0,0x0,8
tick,0x7ffdf681f424,17791341,0,0x0,8
tick,0x7ffdf681f424,17793332,0,0x0,8
tick,0x7ffdf681f424,17795346,0,0x0,8
tick,0x7ffdf681f424,17797321,0,0x0,8
tick,0x7ffdf681f424,17799324,0,0x0,8
tick,0x7ffdf681f424,17801295,0,0x0,8
tick,0x7ffdf681f424,17803314,0,0x0,8
tick,0x7ffdf681f424,17805308,0,0x0,8
tick,0x7ffdf681f424,17807308,0,0x0,8
tick,0x7ffdf681f424,17809306,0,0x0,8
tick,0x7ffdf681f424,17811290,0,0x0,8
tick,0x7ffdf681f424,17813276,0,0x0,8
tick,0x7ffdf681f424,17815276,0,0x0,8
tick,0x7ffdf681f424,17817267,0,0x0,8
tick,0x7ffdf681f424,17819265,0,0x0,8
tick,0x7ffdf681f424,17821262,0,0x0,8
tick,0x7ffdf681f424,17823305,0,0x0,8
tick,0x7ffdf681f424,17825261,0,0x0,8
tick,0x7ffdf681f424,17827297,0,0x0,8
tick,0x7ffdf681f424,17829298,0,0x0,8
tick,0x7ffdf681f424,17831241,0,0x0,8
tick,0x7ffdf681f424,17833282,0,0x0,8
tick,0x7ffdf681f424,17835304,0,0x0,8
tick,0x7ffdf681f424,17837272,0,0x0,8
tick,0x7ffdf681f424,17839258,0,0x0,8
tick,0x7ffdf681f424,17841276,0,0x0,8
tick,0x7ffdf681f424,17843308,0,0x0,8
tick,0x7ffdf681f424,17845258,0,0x0,8
tick,0x7ffdf681f424,17847251,0,0x0,8
tick,0x7ffdf681f424,17849239,0,0x0,8
tick,0x7ffdf681f424,17851241,0,0x0,8
tick,0x7ffdf681f424,17853248,0,0x0,8
tick,0x7ffdf681f424,17855222,0,0x0,8
tick,0x7ffdf681f424,17857220,0,0x0,8
tick,0x7ffdf681f424,17859208,0,0x0,8
tick,0x7ffdf681f424,17861209,0,0x0,8
tick,0x7ffdf681f424,17863214,0,0x0,8
tick,0x7ffdf681f424,17865216,0,0x0,8
tick,0x7ffdf681f424,17867194,0,0x0,8
tick,0x7ffdf681f424,17869197,0,0x0,8
tick,0x7ffdf681f424,17871178,0,0x0,8
tick,0x7ffdf681f424,17873176,0,0x0,8
tick,0x7ffdf681f424,17875166,0,0x0,8
tick,0x7ffdf681f424,17877179,0,0x0,8
tick,0x7ffdf681f424,17879163,0,0x0,8
tick,0x7ffdf681f424,17881157,0,0x0,8
tick,0x7ffdf681f424,17883152,0,0x0,8
tick,0x7ffdf681f424,17885140,0,0x0,8
tick,0x7ffdf681f424,17887169,0,0x0,8
tick,0x7ffdf681f424,17889149,0,0x0,8
tick,0x7ffdf681f424,17891137,0,0x0,8
tick,0x7ffdf681f424,17893102,0,0x0,8
tick,0x7ffdf681f424,17895138,0,0x0,8
tick,0x7ffdf681f424,17897108,0,0x0,8
tick,0x7ffdf681f424,17899106,0,0x0,8
tick,0x7ffdf681f424,17901112,0,0x0,8
tick,0x7ffdf681f424,17903101,0,0x0,8
tick,0x7ffdf681f424,17905063,0,0x0,8
tick,0x7ffdf681f424,17907096,0,0x0,8
tick,0x7ffdf681f424,17909064,0,0x0,8
tick,0x7ffdf681f424,17911073,0,0x0,8
tick,0x7ffdf681f424,17913070,0,0x0,8
tick,0x7ffdf681f424,17915066,0,0x0,8
tick,0x7ffdf681f424,17917055,0,0x0,8
tick,0x7ffdf681f424,17919051,0,0x0,8
tick,0x7ffdf681f424,17921055,0,0x0,8
tick,0x7ffdf681f424,17923039,0,0x0,8
tick,0x7ffdf681f424,17925036,0,0x0,8
tick,0x7ffdf681f424,17927046,0,0x0,8
tick,0x7ffdf681f424,17929048,0,0x0,8
tick,0x7ffdf681f424,17931062,0,0x0,8
tick,0x7ffdf681f424,17933051,0,0x0,8
tick,0x7ffdf681f424,17935019,0,0x0,8
tick,0x7ffdf681f424,17937013,0,0x0,8
tick,0x7ffdf681f424,17938995,0,0x0,8
tick,0x7ffdf681f424,17940992,0,0x0,8
tick,0x7ffdf681f424,17943025,0,0x0,8
tick,0x7ffdf681f424,17944978,0,0x0,8
tick,0x7ffdf681f424,17946979,0,0x0,8
tick,0x7ffdf681f424,17948970,0,0x0,8
tick,0x7ffdf681f424,17950969,0,0x0,8
tick,0x7ffdf681f424,17952995,0,0x0,8
tick,0x7ffdf681f424,17954952,0,0x0,8
tick,0x7ffdf681f424,17956951,0,0x0,8
tick,0x7ffdf681f424,17958944,0,0x0,8
tick,0x7ffdf681f424,17960941,0,0x0,8
tick,0x7ffdf681f424,17962955,0,0x0,8
tick,0x7ffdf681f424,17964934,0,0x0,8
tick,0x7ffdf681f424,17966912,0,0x0,8
tick,0x7ffdf681f424,17968915,0,0x0,8
tick,0x7ffdf681f424,17970919,0,0x0,8
tick,0x7ffdf681f424,17972926,0,0x0,8
tick,0x7ffdf681f424,17974898,0,0x0,8
tick,0x7ffdf681f424,17976882,0,0x0,8
tick,0x7ffdf681f424,17978885,0,0x0,8
tick,0x7ffdf681f424,17980894,0,0x0,8
tick,0x7ffdf681f424,17982887,0,0x0,8
tick,0x7ffdf681f424,17984856,0,0x0,8
tick,0x7ffdf681f424,17986841,0,0x0,8
tick,0x7ffdf681f424,17988756,0,0x0,8
tick,0x7ffdf681f424,17990841,0,0x0,8
tick,0x7ffdf681f424,17991949,0,0x0,8
tick,0x7ffdf681f424,17993145,0,0x0,8
tick,0x7ffdf681f424,17995058,0,0x0,8
tick,0x7ffdf681f424,17997097,0,0x0,8
tick,0x7ffdf681f424,17999091,0,0x0,8
tick,0x7ffdf681f424,18000987,0,0x0,8
tick,0x7ffdf681f424,18002989,0,0x0,8
tick,0x7ffdf681f424,18004986,0,0x0,8
tick,0x7ffdf681f424,18006988,0,0x0,8
tick,0x7ffdf681f424,18008935,0,0x0,8
tick,0x7ffdf681f424,18010937,0,0x0,8
tick,0x7ffdf681f424,18012916,0,0x0,8
tick,0x7ffdf681f424,18014895,0,0x0,8
tick,0x7ffdf681f424,18016932,0,0x0,8
tick,0x7ffdf681f424,18018902,0,0x0,8
tick,0x7ffdf681f424,18020894,0,0x0,8
tick,0x7ffdf681f424,18022943,0,0x0,8
tick,0x7ffdf681f424,18024131,0,0x0,8
tick,0x7ffdf681f424,18026274,0,0x0,8
tick,0x7ffdf681f424,18027475,0,0x0,8
tick,0x7ffdf681f424,18029480,0,0x0,8
tick,0x7ffdf681f424,18031474,0,0x0,8
tick,0x7ffdf681f424,18033462,0,0x0,8
tick,0x7ffdf681f424,18035487,0,0x0,8
tick,0x7ffdf681f424,18037451,0,0x0,8
tick,0x7ffdf681f424,18039416,0,0x0,8
tick,0x7ffdf681f424,18041408,0,0x0,8
tick,0x7ffdf681f424,18043422,0,0x0,8
tick,0x7ffdf681f424,18045442,0,0x0,8
tick,0x7ffdf681f424,18047403,0,0x0,8
tick,0x7ffdf681f424,18049476,0,0x0,8
tick,0x7ffdf681f424,18051455,0,0x0,8
tick,0x7ffdf681f424,18053456,0,0x0,8
tick,0x7ffdf681f424,18055442,0,0x0,8
tick,0x7ffdf681f424,18057464,0,0x0,8
tick,0x7ffdf681f424,18059434,0,0x0,8
tick,0x7ffdf681f424,18061425,0,0x0,8
tick,0x7ffdf681f424,18063444,0,0x0,8
tick,0x7ffdf681f424,18065416,0,0x0,8
tick,0x7ffdf681f424,18067433,0,0x0,8
tick,0x7ffdf681f424,18069404,0,0x0,8
tick,0x7ffdf681f424,18071426,0,0x0,8
tick,0x7ffdf681f424,18073403,0,0x0,8
tick,0x7ffdf681f424,18075399,0,0x0,8
tick,0x7ffdf681f424,18077394,0,0x0,8
tick,0x7ffdf681f424,18079405,0,0x0,8
tick,0x7ffdf681f424,18081405,0,0x0,8
tick,0x7ffdf681f424,18083403,0,0x0,8
tick,0x7ffdf681f424,18085355,0,0x0,8
tick,0x7ffdf681f424,18087333,0,0x0,8
tick,0x7ffdf681f424,18089369,0,0x0,8
tick,0x7ffdf681f424,18091361,0,0x0,8
tick,0x7ffdf681f424,18093337,0,0x0,8
tick,0x7ffdf681f424,18095341,0,0x0,8
tick,0x7ffdf681f424,18097340,0,0x0,8
tick,0x7ffdf681f424,18099346,0,0x0,8
tick,0x7ffdf681f424,18101349,0,0x0,8
tick,0x7ffdf681f424,18103300,0,0x0,8
tick,0x7ffdf681f424,18105301,0,0x0,8
tick,0x7ffdf681f424,18107300,0,0x0,8
tick,0x7ffdf681f424,18109245,0,0x0,8
tick,0x7ffdf681f424,18111305,0,0x0,8
tick,0x7ffdf681f424,18113306,0,0x0,8
tick,0x7ffdf681f424,18115309,0,0x0,8
tick,0x7ffdf681f424,18117306,0,0x0,8
tick,0x7ffdf681f424,18119273,0,0x0,8
tick,0x7ffdf681f424,18121273,0,0x0,8
tick,0x7ffdf681f424,18123282,0,0x0,8
tick,0x7ffdf681f424,18125270,0,0x0,8
tick,0x7ffdf681f424,18127264,0,0x0,8
tick,0x7ffdf681f424,18129243,0,0x0,8
tick,0x7ffdf681f424,18131221,0,0x0,8
tick,0x7ffdf681f424,18133296,0,0x0,8
tick,0x7ffdf681f424,18135251,0,0x0,8
tick,0x7ffdf681f424,18137138,0,0x0,8
tick,0x7ffdf681f424,18139244,0,0x0,8
tick,0x7ffdf681f424,18141151,0,0x0,8
tick,0x7ffdf681f424,18143162,0,0x0,8
tick,0x7ffdf681f424,18145152,0,0x0,8
tick,0x7ffdf681f424,18147178,0,0x0,8
tick,0x7ffdf681f424,18149182,0,0x0,8
tick,0x7ffdf681f424,18151206,0,0x0,8
tick,0x7ffdf681f424,18153180,0,0x0,8
tick,0x7ffdf681f424,18155194,0,0x0,8
tick,0x7ffdf681f424,18157148,0,0x0,8
tick,0x7ffdf681f424,18159217,0,0x0,8
tick,0x7ffdf681f424,18161157,0,0x0,8
tick,0x7ffdf681f424,18163108,0,0x0,8
tick,0x7ffdf681f424,18165168,0,0x0,8
tick,0x7ffdf681f424,18167142,0,0x0,8
tick,0x7ffdf681f424,18169150,0,0x0,8
tick,0x7ffdf681f424,18171173,0,0x0,8
tick,0x7ffdf681f424,18173122,0,0x0,8
tick,0x7ffdf681f424,18175085,0,0x0,8
tick,0x7ffdf681f424,18177154,0,0x0,8
tick,0x7ffdf681f424,18179105,0,0x0,8
tick,0x7ffdf681f424,18181145,0,0x0,8
tick,0x7ffdf681f424,18183090,0,0x0,8
tick,0x7ffdf681f424,18185090,0,0x0,8
tick,0x7ffdf681f424,18187103,0,0x0,8
tick,0x7ffdf681f424,18189080,0,0x0,8
tick,0x7ffdf681f424,18191099,0,0x0,8
tick,0x7ffdf681f424,18193071,0,0x0,8
tick,0x7ffdf681f424,18195088,0,0x0,8
tick,0x7ffdf681f424,18197036,0,0x0,8
tick,0x7ffdf681f424,18199086,0,0x0,8
tick,0x7ffdf681f424,18201068,0,0x0,8
tick,0x7ffdf681f424,18203079,0,0x0,8
tick,0x7ffdf681f424,18205027,0,0x0,8
tick,0x7ffdf681f424,18207038,0,0x0,8
tick,0x7ffdf681f424,18209032,0,0x0,8
tick,0x7ffdf681f424,18211048,0,0x0,8
tick,0x7ffdf681f424,18213045,0,0x0,8
tick,0x7ffdf681f424,18215034,0,0x0,8
tick,0x7ffdf681f424,18217013,0,0x0,8
tick,0x7ffdf681f424,18219013,0,0x0,8
tick,0x7ffdf681f424,18221025,0,0x0,8
tick,0x7ffdf681f424,18222991,0,0x0,8
tick,0x7ffdf681f424,18225038,0,0x0,8
tick,0x7ffdf681f424,18227003,0,0x0,8
tick,0x7ffdf681f424,18229002,0,0x0,8
tick,0x7ffdf681f424,18231004,0,0x0,8
tick,0x7ffdf681f424,18232995,0,0x0,8
tick,0x7ffdf681f424,18235001,0,0x0,8
tick,0x7ffdf681f424,18236942,0,0x0,8
tick,0x7ffdf681f424,18238948,0,0x0,8
tick,0x7ffdf681f424,18240904,0,0x0,8
tick,0x7ffdf681f424,18242954,0,0x0,8
tick,0x7ffdf681f424,18244951,0,0x0,8
tick,0x7ffdf681f424,18246921,0,0x0,8
tick,0x7ffdf681f424,18248928,0,0x0,8
tick,0x7ffdf681f424,18250899,0,0x0,8
tick,0x7ffdf681f424,18252919,0,0x0,8
tick,0x7ffdf681f424,18254927,0,0x0,8
tick,0x7ffdf681f424,18256893,0,0x0,8
tick,0x7ffdf681f424,18258940,0,0x0,8
tick,0x7ffdf681f424,18260903,0,0x0,8
tick,0x7ffdf681f424,18262897,0,0x0,8
tick,0x7ffdf681f424,18264902,0,0x0,8
tick,0x7ffdf681f424,18266908,0,0x0,8
tick,0x7ffdf681f424,18268909,0,0x0,8
tick,0x7ffdf681f424,18270858,0,0x0,8
tick,0x7ffdf681f424,18272852,0,0x0,8
tick,0x7ffdf681f424,18274833,0,0x0,8
tick,0x7ffdf681f424,18276829,0,0x0,8
tick,0x7ffdf681f424,18278769,0,0x0,8
tick,0x7ffdf681f424,18280766,0,0x0,8
tick,0x7ffdf681f424,18282802,0,0x0,8
tick,0x7ffdf681f424,18284785,0,0x0,8
tick,0x7ffdf681f424,18286825,0,0x0,8
tick,0x7ffdf681f424,18288812,0,0x0,8
tick,0x7ffdf681f424,18290827,0,0x0,8
tick,0x7ffdf681f424,18292822,0,0x0,8
tick,0x7ffdf681f424,18294811,0,0x0,8
tick,0x7ffdf681f424,18296786,0,0x0,8
tick,0x7ffdf681f424,18298791,0,0x0,8
tick,0x7ffdf681f424,18300809,0,0x0,8
tick,0x7ffdf681f424,18302813,0,0x0,8
tick,0x7ffdf681f424,18304742,0,0x0,8
tick,0x7ffdf681f424,18306762,0,0x0,8
tick,0x7ffdf681f424,18308713,0,0x0,8
tick,0x7ffdf681f424,18311658,0,0x0,8
tick,0x7ffdf681f424,18313618,0,0x0,8
tick,0x7ffdf681f424,18315614,0,0x0,8
tick,0x7ffdf681f424,18317632,0,0x0,8
tick,0x7ffdf681f424,18319617,0,0x0,8
tick,0x7ffdf681f424,18321625,0,0x0,8
tick,0x7ffdf681f424,18323722,0,0x0,8
tick,0x7ffdf681f424,18325761,0,0x0,8
tick,0x7ffdf681f424,18327665,0,0x0,8
tick,0x7ffdf681f424,18329605,0,0x0,8
tick,0x7ffdf681f424,18331626,0,0x0,8
tick,0x7ffdf681f424,18333740,0,0x0,8
tick,0x7ffdf681f424,18335715,0,0x0,8
tick,0x7ffdf681f424,18337683,0,0x0,8
tick,0x7ffdf681f424,18339700,0,0x0,8
tick,0x7ffdf681f424,18341691,0,0x0,8
tick,0x7ffdf681f424,18343671,0,0x0,8
tick,0x7ffdf681f424,18345663,0,0x0,8
tick,0x7ffdf681f424,18347645,0,0x0,8
tick,0x7ffdf681f424,18349670,0,0x0,8
tick,0x7ffdf681f424,18351667,0,0x0,8
tick,0x7ffdf681f424,18353640,0,0x0,8
tick,0x7ffdf681f424,18355648,0,0x0,8
tick,0x7ffdf681f424,18357639,0,0x0,8
tick,0x7ffdf681f424,18359675,0,0x0,8
tick,0x7ffdf681f424,18361642,0,0x0,8
tick,0x7ffdf681f424,18363620,0,0x0,8
tick,0x7ffdf681f424,18365587,0,0x0,8
tick,0x7ffdf681f424,18367513,0,0x0,8
tick,0x7ffdf681f424,18369518,0,0x0,8
tick,0x7ffdf681f424,18371578,0,0x0,8
tick,0x7ffdf681f424,18373576,0,0x0,8
tick,0x7ffdf681f424,18375619,0,0x0,8
tick,0x7ffdf681f424,18377587,0,0x0,8
tick,0x7ffdf681f424,18379599,0,0x0,8
tick,0x7ffdf681f424,18381579,0,0x0,8
tick,0x7ffdf681f424,18383578,0,0x0,8
tick,0x7ffdf681f424,18385561,0,0x0,8
tick,0x7ffdf681f424,18387555,0,0x0,8
tick,0x7ffdf681f424,18389563,0,0x0,8
tick,0x7ffdf681f424,18391578,0,0x0,8
tick,0x7ffdf681f424,18393563,0,0x0,8
tick,0x7ffdf681f424,18395541,0,0x0,8
tick,0x7ffdf681f424,18397586,0,0x0,8
tick,0x7ffdf681f424,18399526,0,0x0,8
tick,0x7ffdf681f424,18401523,0,0x0,8
tick,0x7ffdf681f424,18403505,0,0x0,8
tick,0x7ffdf681f424,18405520,0,0x0,8
tick,0x7ffdf681f424,18407531,0,0x0,8
tick,0x7ffdf681f424,18409488,0,0x0,8
tick,0x7ffdf681f424,18411516,0,0x0,8
tick,0x7ffdf681f424,18413509,0,0x0,8
tick,0x7ffdf681f424,18415486,0,0x0,8
tick,0x7ffdf681f424,18417401,0,0x0,8
tick,0x7ffdf681f424,18419456,0,0x0,8
tick,0x7ffdf681f424,18421348,0,0x0,8
tick,0x7ffdf681f424,18423398,0,0x0,8
tick,0x7ffdf681f424,18425333,0,0x0,8
tick,0x7ffdf681f424,18427333,0,0x0,8
tick,0x7ffdf681f424,18429394,0,0x0,8
tick,0x7ffdf681f424,18431337,0,0x0,8
tick,0x7ffdf681f424,18433311,0,0x0,8
tick,0x7ffdf681f424,18435382,0,0x0,8
tick,0x7ffdf681f424,18437304,0,0x0,8
tick,0x7ffdf681f424,18439317,0,0x0,8
tick,0x7ffdf681f424,18441317,0,0x0,8
tick,0x7ffdf681f424,18443364,0,0x0,8
tick,0x7ffdf681f424,18445322,0,0x0,8
tick,0x7ffdf681f424,18447331,0,0x0,8
tick,0x7ffdf681f424,18449332,0,0x0,8
tick,0x7ffdf681f424,18451342,0,0x0,8
tick,0x7ffdf681f424,18453358,0,0x0,8
tick,0x7ffdf681f424,18455315,0,0x0,8
tick,0x7ffdf681f424,18457351,0,0x0,8
tick,0x7ffdf681f424,18459283,0,0x0,8
tick,0x7ffdf681f424,18461350,0,0x0,8
tick,0x7ffdf681f424,18463310,0,0x0,8
tick,0x7ffdf681f424,18465315,0,0x0,8
tick,0x7ffdf681f424,18467372,0,0x0,8
tick,0x7ffdf681f424,18469329,0,0x0,8
tick,0x7ffdf681f424,18471357,0,0x0,8
tick,0x7ffdf681f424,18473336,0,0x0,8
tick,0x7ffdf681f424,18475344,0,0x0,8
tick,0x7ffdf681f424,18477328,0,0x0,8
tick,0x7ffdf681f424,18479306,0,0x0,8
tick,0x7ffdf681f424,18481319,0,0x0,8
tick,0x7ffdf681f424,18483319,0,0x0,8
tick,0x7ffdf681f424,18485283,0,0x0,8
tick,0x7ffdf681f424,18487168,0,0x0,8
tick,0x7ffdf681f424,18489208,0,0x0,8
tick,0x7ffdf681f424,18491303,0,0x0,8
tick,0x7ffdf681f424,18493317,0,0x0,8
tick,0x7ffdf681f424,18495299,0,0x0,8
tick,0x7ffdf681f424,18497241,0,0x0,8
tick,0x7ffdf681f424,18499276,0,0x0,8
tick,0x7ffdf681f424,18501294,0,0x0,8
tick,0x7ffdf681f424,18503285,0,0x0,8
tick,0x7ffdf681f424,18505222,0,0x0,8
tick,0x7ffdf681f424,18507265,0,0x0,8
tick,0x7ffdf681f424,18509241,0,0x0,8
tick,0x7ffdf681f424,18511256,0,0x0,8
tick,0x7ffdf681f424,18513240,0,0x0,8
tick,0x7ffdf681f424,18515260,0,0x0,8
tick,0x7ffdf681f424,18517211,0,0x0,8
tick,0x7ffdf681f424,18519200,0,0x0,8
tick,0x7ffdf681f424,18521226,0,0x0,8
tick,0x7ffdf681f424,18523207,0,0x0,8
tick,0x7ffdf681f424,18525179,0,0x0,8
tick,0x7ffdf681f424,18527226,0,0x0,8
tick,0x7ffdf681f424,18529194,0,0x0,8
tick,0x7ffdf681f424,18531174,0,0x0,8
tick,0x7ffdf681f424,18533209,0,0x0,8
tick,0x7ffdf681f424,18535152,0,0x0,8
tick,0x7ffdf681f424,18537155,0,0x0,8
tick,0x7ffdf681f424,18539223,0,0x0,8
tick,0x7ffdf681f424,18541137,0,0x0,8
tick,0x7ffdf681f424,18543153,0,0x0,8
tick,0x7ffdf681f424,18545161,0,0x0,8
tick,0x7ffdf681f424,18547159,0,0x0,8
tick,0x7ffdf681f424,18549116,0,0x0,8
tick,0x7ffdf681f424,18551136,0,0x0,8
tick,0x7ffdf681f424,18553134,0,0x0,8
tick,0x7ffdf681f424,18555109,0,0x0,8
tick,0x7ffdf681f424,18557124,0,0x0,8
tick,0x7ffdf681f424,18559094,0,0x0,8
tick,0x7ffdf681f424,18561137,0,0x0,8
tick,0x7ffdf681f424,18563077,0,0x0,8
tick,0x7ffdf681f424,18565095,0,0x0,8
tick,0x7ffdf681f424,18567101,0,0x0,8
tick,0x7ffdf681f424,18568967,0,0x0,8
tick,0x7ffdf681f424,18571065,0,0x0,8
tick,0x7ffdf681f424,18573068,0,0x0,8
tick,0x7ffdf681f424,18575056,0,0x0,8
tick,0x7ffdf681f424,18577046,0,0x0,8
tick,0x7ffdf681f424,18579063,0,0x0,8
tick,0x7ffdf681f424,18581034,0,0x0,8
tick,0x7ffdf681f424,18582981,0,0x0,8
tick,0x7ffdf681f424,18585033,0,0x0,8
tick,0x7ffdf681f424,18587032,0,0x0,8
tick,0x7ffdf681f424,18589041,0,0x0,8
tick,0x7ffdf681f424,18590973,0,0x0,8
tick,0x7ffdf681f424,18593063,0,0x0,8
tick,0x7ffdf681f424,18594978,0,0x0,8
tick,0x7ffdf681f424,18597005,0,0x0,8
tick,0x7ffdf681f424,18598991,0,0x0,8
tick,0x7ffdf681f424,18600994,0,0x0,8
tick,0x7ffdf681f424,18603023,0,0x0,8
tick,0x7ffdf681f424,18604909,0,0x0,8
tick,0x7ffdf681f424,18606872,0,0x0,8
tick,0x7ffdf681f424,18608897,0,0x0,8
tick,0x7ffdf681f424,18610847,0,0x0,8
tick,0x7ffdf681f424,18612833,0,0x0,8
tick,0x7ffdf681f424,18614878,0,0x0,8
tick,0x7ffdf681f424,18616840,0,0x0,8
tick,0x7ffdf681f424,18618933,0,0x0,8
tick,0x7ffdf681f424,18620895,0,0x0,8
tick,0x7ffdf681f424,18622881,0,0x0,8
tick,0x7ffdf681f424,18624828,0,0x0,8
tick,0x7ffdf681f424,18626818,0,0x0,8
tick,0x7ffdf681f424,18628839,0,0x0,8
tick,0x7ffdf681f424,18630828,0,0x0,8
tick,0x7ffdf681f424,18632873,0,0x0,8
tick,0x7ffdf681f424,18634814,0,0x0,8
tick,0x7ffdf681f424,18636790,0,0x0,8
tick,0x7ffdf681f424,18638751,0,0x0,8
tick,0x7ffdf681f424,18640806,0,0x0,8
tick,0x7ffdf681f424,18642773,0,0x0,8
tick,0x7ffdf681f424,18644823,0,0x0,8
tick,0x7ffdf681f424,18646791,0,0x0,8
tick,0x7ffdf681f424,18648773,0,0x0,8
tick,0x7ffdf681f424,18650782,0,0x0,8
tick,0x7ffdf681f424,18652834,0,0x0,8
tick,0x7ffdf681f424,18654794,0,0x0,8
tick,0x7ffdf681f424,18656763,0,0x0,8
tick,0x7ffdf681f424,18658748,0,0x0,8
tick,0x7ffdf681f424,18660761,0,0x0,8
tick,0x7ffdf681f424,18662772,0,0x0,8
tick,0x7ffdf681f424,18664760,0,0x0,8
tick,0x7ffdf681f424,18666727,0,0x0,8
tick,0x7ffdf681f424,18668758,0,0x0,8
tick,0x7ffdf681f424,18670754,0,0x0,8
tick,0x7ffdf681f424,18672740,0,0x0,8
tick,0x7ffdf681f424,18674809,0,0x0,8
tick,0x7ffdf681f424,18676765,0,0x0,8
tick,0x7ffdf681f424,18678735,0,0x0,8
tick,0x7ffdf681f424,18680764,0,0x0,8
tick,0x7ffdf681f424,18682707,0,0x0,8
tick,0x7ffdf681f424,18684801,0,0x0,8
tick,0x7ffdf681f424,18686755,0,0x0,8
tick,0x7ffdf681f424,18688760,0,0x0,8
tick,0x7ffdf681f424,18690762,0,0x0,8
tick,0x7ffdf681f424,18692730,0,0x0,8
tick,0x7ffdf681f424,18694783,0,0x0,8
tick,0x7ffdf681f424,18696738,0,0x0,8
tick,0x7ffdf681f424,18698721,0,0x0,8
tick,0x7ffdf681f424,18700732,0,0x0,8
tick,0x7ffdf681f424,18702754,0,0x0,8
tick,0x7ffdf681f424,18704716,0,0x0,8
tick,0x7ffdf681f424,18706691,0,0x0,8
tick,0x7ffdf681f424,18708712,0,0x0,8
tick,0x7ffdf681f424,18710694,0,0x0,8
tick,0x7ffdf681f424,18712676,0,0x0,8
tick,0x7ffdf681f424,18714680,0,0x0,8
tick,0x7ffdf681f424,18716687,0,0x0,8
tick,0x7ffdf681f424,18718667,0,0x0,8
tick,0x7ffdf681f424,18720667,0,0x0,8
tick,0x7ffdf681f424,18722682,0,0x0,8
tick,0x7ffdf681f424,18724667,0,0x0,8
tick,0x7ffdf681f424,18726645,0,0x0,8
tick,0x7ffdf681f424,18728681,0,0x0,8
tick,0x7ffdf681f424,18730663,0,0x0,8
tick,0x7ffdf681f424,18732623,0,0x0,8
tick,0x7ffdf681f424,18734661,0,0x0,8
tick,0x7ffdf681f424,18736630,0,0x0,8
tick,0x7ffdf681f424,18738623,0,0x0,8
tick,0x7ffdf681f424,18740612,0,0x0,8
tick,0x7ffdf681f424,18742592,0,0x0,8
tick,0x7ffdf681f424,18744603,0,0x0,8
tick,0x7ffdf681f424,18746537,0,0x0,8
tick,0x7ffdf681f424,18748619,0,0x0,8
tick,0x7ffdf681f424,18750550,0,0x0,8
tick,0x7ffdf681f424,18752590,0,0x0,8
tick,0x7ffdf681f424,18754595,0,0x0,8
tick,0x7ffdf681f424,18756582,0,0x0,8
tick,0x7ffdf681f424,18758555,0,0x0,8
tick,0x7ffdf681f424,18760565,0,0x0,8
tick,0x7ffdf681f424,18762581,0,0x0,8
tick,0x7ffdf681f424,18764529,0,0x0,8
tick,0x7ffdf681f424,18766561,0,0x0,8
tick,0x7ffdf681f424,18768580,0,0x0,8
tick,0x7ffdf681f424,18770533,0,0x0,8
tick,0x7ffdf681f424,18772547,0,0x0,8
tick,0x7ffdf681f424,18774527,0,0x0,8
tick,0x7ffdf681f424,18776518,0,0x0,8
tick,0x7ffdf681f424,18778527,0,0x0,8
tick,0x7ffdf681f424,18780499,0,0x0,8
tick,0x7ffdf681f424,18782492,0,0x0,8
tick,0x7ffdf681f424,18784505,0,0x0,8
tick,0x7ffdf681f424,18786488,0,0x0,8
tick,0x7ffdf681f424,18788487,0,0x0,8
tick,0x7ffdf681f424,18790530,0,0x0,8
tick,0x7ffdf681f424,18792462,0,0x0,8
tick,0x7ffdf681f424,18794486,0,0x0,8
tick,0x7ffdf681f424,18796491,0,0x0,8
tick,0x7ffdf681f424,18798454,0,0x0,8
tick,0x7ffdf681f424,18800458,0,0x0,8
tick,0x7ffdf681f424,18802431,0,0x0,8
tick,0x7ffdf681f424,18804436,0,0x0,8
tick,0x7ffdf681f424,18806462,0,0x0,8
tick,0x7ffdf681f424,18808459,0,0x0,8
tick,0x7ffdf681f424,18810380,0,0x0,8
tick,0x7ffdf681f424,18812459,0,0x0,8
tick,0x7ffdf681f424,18814406,0,0x0,8
tick,0x7ffdf681f424,18816441,0,0x0,8
tick,0x7ffdf681f424,18818431,0,0x0,8
tick,0x7ffdf681f424,18820393,0,0x0,8
tick,0x7ffdf681f424,18822432,0,0x0,8
tick,0x7ffdf681f424,18824373,0,0x0,8
tick,0x7ffdf681f424,18826455,0,0x0,8
tick,0x7ffdf681f424,18828406,0,0x0,8
tick,0x7ffdf681f424,18830358,0,0x0,8
tick,0x7ffdf681f424,18832365,0,0x0,8
tick,0x7ffdf681f424,18834395,0,0x0,8
tick,0x7ffdf681f424,18836364,0,0x0,8
tick,0x7ffdf681f424,18838318,0,0x0,8
tick,0x7ffdf681f424,18840352,0,0x0,8
tick,0x7ffdf681f424,18842331,0,0x0,8
tick,0x7ffdf681f424,18844329,0,0x0,8
tick,0x7ffdf681f424,18846344,0,0x0,8
tick,0x7ffdf681f424,18848340,0,0x0,8
tick,0x7ffdf681f424,18850337,0,0x0,8
tick,0x7ffdf681f424,18852341,0,0x0,8
tick,0x7ffdf681f424,18854316,0,0x0,8
tick,0x7ffdf681f424,18856338,0,0x0,8
tick,0x7ffdf681f424,18858323,0,0x0,8
tick,0x7ffdf681f424,18860299,0,0x0,8
tick,0x7ffdf681f424,18862290,0,0x0,8
tick,0x7ffdf681f424,18864132,0,0x0,8
tick,0x7ffdf681f424,18866162,0,0x0,8
tick,0x7ffdf681f424,18868193,0,0x0,8
tick,0x7ffdf681f424,18870200,0,0x0,8
tick,0x7ffdf681f424,18872203,0,0x0,8
tick,0x7ffdf681f424,18874211,0,0x0,8
tick,0x7ffdf681f424,18876265,0,0x0,8
tick,0x7ffdf681f424,18878239,0,0x0,8
tick,0x7ffdf681f424,18880236,0,0x0,8
tick,0x7ffdf681f424,18882272,0,0x0,8
tick,0x7ffdf681f424,18884217,0,0x0,8
tick,0x7ffdf681f424,18886255,0,0x0,8
tick,0x7ffdf681f424,18888219,0,0x0,8
tick,0x7ffdf681f424,18890235,0,0x0,8
tick,0x7ffdf681f424,18892221,0,0x0,8
tick,0x7ffdf681f424,18894077,0,0x0,8
tick,0x7ffdf681f424,18896089,0,0x0,8
tick,0x7ffdf681f424,18898072,0,0x0,8
tick,0x7ffdf681f424,18900085,0,0x0,8
tick,0x7ffdf681f424,18902107,0,0x0,8
tick,0x7ffdf681f424,18904155,0,0x0,8
tick,0x7ffdf681f424,18906114,0,0x0,8
tick,0x7ffdf681f424,18908229,0,0x0,8
tick,0x7ffdf681f424,18910036,0,0x0,8
tick,0x7ffdf681f424,18912250,0,0x0,8
tick,0x7ffdf681f424,18913365,0,0x0,8
tick,0x7ffdf681f424,18915487,0,0x0,8
tick,0x7ffdf681f424,18916662,0,0x0,8
tick,0x7ffdf681f424,18917817,0,0x0,8
tick,0x7ffdf681f424,18919639,0,0x0,8
tick,0x7ffdf681f424,18921603,0,0x0,8
tick,0x7ffdf681f424,18923720,0,0x0,8
tick,0x7ffdf681f424,18925655,0,0x0,8
tick,0x7ffdf681f424,18927742,0,0x0,8
tick,0x7ffdf681f424,18929657,0,0x0,8
tick,0x7ffdf681f424,18931626,0,0x0,8
tick,0x7ffdf681f424,18933612,0,0x0,8
tick,0x7ffdf681f424,18935547,0,0x0,8
tick,0x7ffdf681f424,18937595,0,0x0,8
tick,0x7ffdf681f424,18939614,0,0x0,8
tick,0x7ffdf681f424,18941634,0,0x0,8
tick,0x7ffdf681f424,18943634,0,0x0,8
tick,0x7ffdf681f424,18945708,0,0x0,8
tick,0x7ffdf681f424,18947654,0,0x0,8
tick,0x7ffdf681f424,18949703,0,0x0,8
tick,0x7ffdf681f424,18951665,0,0x0,8
tick,0x7ffdf681f424,18953581,0,0x0,8
tick,0x7ffdf681f424,18955577,0,0x0,8
tick,0x7ffdf681f424,18957545,0,0x0,8
tick,0x7ffdf681f424,18959624,0,0x0,8
tick,0x7ffdf681f424,18961620,0,0x0,8
tick,0x7ffdf681f424,18963635,0,0x0,8
tick,0x7ffdf681f424,18965614,0,0x0,8
tick,0x7ffdf681f424,18967570,0,0x0,8
tick,0x7ffdf681f424,18969654,0,0x0,8
tick,0x7ffdf681f424,18971546,0,0x0,8
tick,0x7ffdf681f424,18973612,0,0x0,8
tick,0x7ffdf681f424,18975640,0,0x0,8
tick,0x7ffdf681f424,18977570,0,0x0,8
tick,0x7ffdf681f424,18979531,0,0x0,8
tick,0x7ffdf681f424,18981493,0,0x0,8
tick,0x7ffdf681f424,18983664,0,0x0,8
tick,0x7ffdf681f424,18985628,0,0x0,8
tick,0x7ffdf681f424,18987617,0,0x0,8
tick,0x7ffdf681f424,18989713,0,0x0,8
tick,0x7ffdf681f424,18991845,0,0x0,8
tick,0x7ffdf681f424,18993727,0,0x0,8
tick,0x7ffdf681f424,18995739,0,0x0,8
tick,0x7ffdf681f424,18997751,0,0x0,8
tick,0x7ffdf681f424,18998946,0,0x0,8
tick,0x7ffdf681f424,19000923,0,0x0,8
tick,0x7ffdf681f424,19002879,0,0x0,8
tick,0x7ffdf681f424,19005002,0,0x0,8
tick,0x7ffdf681f424,19006800,0,0x0,8
tick,0x7ffdf681f424,19008908,0,0x0,8
tick,0x7ffdf681f424,19010759,0,0x0,8
tick,0x7ffdf681f424,19012765,0,0x0,8
tick,0x7ffdf681f424,19014748,0,0x0,8
tick,0x7ffdf681f424,19016841,0,0x0,8
tick,0x7ffdf681f424,19018736,0,0x0,8
tick,0x7ffdf681f424,19020695,0,0x0,8
tick,0x7ffdf681f424,19022795,0,0x0,8
tick,0x7ffdf681f424,19024691,0,0x0,8
tick,0x7ffdf681f424,19026753,0,0x0,8
tick,0x7ffdf681f424,19028733,0,0x0,8
tick,0x7ffdf681f424,19030831,0,0x0,8
tick,0x7ffdf681f424,19032864,0,0x0,8
tick,0x7ffdf681f424,19034834,0,0x0,8
tick,0x7ffdf681f424,19036729,0,0x0,8
tick,0x7ffdf681f424,19038802,0,0x0,8
tick,0x7ffdf681f424,19040794,0,0x0,8
tick,0x7ffdf681f424,19042810,0,0x0,8
tick,0x7ffdf681f424,19044661,0,0x0,8
tick,0x7ffdf681f424,19046764,0,0x0,8
tick,0x7ffdf681f424,19048800,0,0x0,8
tick,0x7ffdf681f424,19050773,0,0x0,8
tick,0x7ffdf681f424,19052663,0,0x0,8
tick,0x7ffdf681f424,19054832,0,0x0,8
tick,0x7ffdf681f424,19056658,0,0x0,8
tick,0x7ffdf681f424,19058749,0,0x0,8
tick,0x7ffdf681f424,19060758,0,0x0,8
tick,0x7ffdf681f424,19062732,0,0x0,8
tick,0x7ffdf681f424,19064734,0,0x0,8
tick,0x7ffdf681f424,19066723,0,0x0,8
tick,0x7ffdf681f424,19068681,0,0x0,8
tick,0x7ffdf681f424,19070731,0,0x0,8
tick,0x7ffdf681f424,19072704,0,0x0,8
tick,0x7ffdf681f424,19074704,0,0x0,8
tick,0x7ffdf681f424,19076626,0,0x0,8
tick,0x7ffdf681f424,19078701,0,0x0,8
tick,0x7ffdf681f424,19080692,0,0x0,8
tick,0x7ffdf681f424,19082697,0,0x0,8
tick,0x7ffdf681f424,19084584,0,0x0,8
tick,0x7ffdf681f424,19086676,0,0x0,8
tick,0x7ffdf681f424,19088675,0,0x0,8
tick,0x7ffdf681f424,19090669,0,0x0,8
tick,0x7ffdf681f424,19092679,0,0x0,8
tick,0x7ffdf681f424,19094654,0,0x0,8
tick,0x7ffdf681f424,19096666,0,0x0,8
tick,0x7ffdf681f424,19098626,0,0x0,8
tick,0x7ffdf681f424,19100646,0,0x0,8
tick,0x7ffdf681f424,19102652,0,0x0,8
tick,0x7ffdf681f424,19104625,0,0x0,8
tick,0x7ffdf681f424,19106628,0,0x0,8
tick,0x7ffdf681f424,19108626,0,0x0,8
tick,0x7ffdf681f424,19110619,0,0x0,8
tick,0x7ffdf681f424,19112630,0,0x0,8
tick,0x7ffdf681f424,19114621,0,0x0,8
tick,0x7ffdf681f424,19116597,0,0x0,8
tick,0x7ffdf681f424,19118521,0,0x0,8
tick,0x7ffdf681f424,19120582,0,0x0,8
tick,0x7ffdf681f424,19122591,0,0x0,8
tick,0x7ffdf681f424,19124583,0,0x0,8
tick,0x7ffdf681f424,19126579,0,0x0,8
tick,0x7ffdf681f424,19128606,0,0x0,8
tick,0x7ffdf681f424,19130564,0,0x0,8
tick,0x7ffdf681f424,19132456,0,0x0,8
tick,0x7ffdf681f424,19134587,0,0x0,8
tick,0x7ffdf681f424,19136574,0,0x0,8
tick,0x7ffdf681f424,19138540,0,0x0,8
tick,0x7ffdf681f424,19140543,0,0x0,8
tick,0x7ffdf681f424,19142509,0,0x0,8
tick,0x7ffdf681f424,19144521,0,0x0,8
tick,0x7ffdf681f424,19146520,0,0x0,8
tick,0x7ffdf681f424,19148524,0,0x0,8
tick,0x7ffdf681f424,19150509,0,0x0,8
tick,0x7ffdf681f424,19152501,0,0x0,8
tick,0x7ffdf681f424,19154498,0,0x0,8
tick,0x7ffdf681f424,19156508,0,0x0,8
tick,0x7ffdf681f424,19158499,0,0x0,8
tick,0x7ffdf681f424,19160487,0,0x0,8
tick,0x7ffdf681f424,19162484,0,0x0,8
tick,0x7ffdf681f424,19164467,0,0x0,8
tick,0x7ffdf681f424,19166476,0,0x0,8
tick,0x7ffdf681f424,19168358,0,0x0,8
tick,0x7ffdf681f424,19170458,0,0x0,8
tick,0x7ffdf681f424,19172458,0,0x0,8
tick,0x7ffdf681f424,19174445,0,0x0,8
tick,0x7ffdf681f424,19176440,0,0x0,8
tick,0x7ffdf681f424,19178435,0,0x0,8
tick,0x7ffdf681f424,19180441,0,0x0,8
tick,0x7ffdf681f424,19182433,0,0x0,8
tick,0x7ffdf681f424,19184418,0,0x0,8
tick,0x7ffdf681f424,19186416,0,0x0,8
tick,0x7ffdf681f424,19188412,0,0x0,8
tick,0x7ffdf681f424,19190409,0,0x0,8
tick,0x7ffdf681f424,19192411,0,0x0,8
tick,0x7ffdf681f424,19194409,0,0x0,8
tick,0x7ffdf681f424,19196399,0,0x0,8
tick,0x7ffdf681f424,19198387,0,0x0,8
tick,0x7ffdf681f424,19200398,0,0x0,8
tick,0x7ffdf681f424,19202401,0,0x0,8
tick,0x7ffdf681f424,19204395,0,0x0,8
tick,0x7ffdf681f424,19206369,0,0x0,8
tick,0x7ffdf681f424,19208339,0,0x0,8
tick,0x7ffdf681f424,19210280,0,0x0,8
tick,0x7ffdf681f424,19212352,0,0x0,8
tick,0x7ffdf681f424,19214356,0,0x0,8
tick,0x7ffdf681f424,19216342,0,0x0,8
tick,0x7ffdf681f424,19218276,0,0x0,8
tick,0x7ffdf681f424,19220322,0,0x0,8
tick,0x7ffdf681f424,19222325,0,0x0,8
tick,0x7ffdf681f424,19224329,0,0x0,8
tick,0x7ffdf681f424,19226317,0,0x0,8
tick,0x7ffdf681f424,19228311,0,0x0,8
tick,0x7ffdf681f424,19230364,0,0x0,8
tick,0x7ffdf681f424,19232299,0,0x0,8
tick,0x7ffdf681f424,19234295,0,0x0,8
tick,0x7ffdf681f424,19236288,0,0x0,8
tick,0x7ffdf681f424,19238274,0,0x0,8
tick,0x7ffdf681f424,19240288,0,0x0,8
tick,0x7ffdf681f424,19242167,0,0x0,8
tick,0x7ffdf681f424,19244267,0,0x0,8
tick,0x7ffdf681f424,19246268,0,0x0,8
tick,0x7ffdf681f424,19248264,0,0x0,8
tick,0x7ffdf681f424,19250244,0,0x0,8
tick,0x7ffdf681f424,19252244,0,0x0,8
tick,0x7ffdf681f424,19254242,0,0x0,8
tick,0x7ffdf681f424,19256237,0,0x0,8
tick,0x7ffdf681f424,19258235,0,0x0,8
tick,0x7ffdf681f424,19260118,0,0x0,8
tick,0x7ffdf681f424,19262225,0,0x0,8
tick,0x7ffdf681f424,19264214,0,0x0,8
tick,0x7ffdf681f424,19266219,0,0x0,8
tick,0x7ffdf681f424,19268245,0,0x0,8
tick,0x7ffdf681f424,19270198,0,0x0,8
tick,0x7ffdf681f424,19272194,0,0x0,8
tick,0x7ffdf681f424,19274187,0,0x0,8
tick,0x7ffdf681f424,19276189,0,0x0,8
tick,0x7ffdf681f424,19278179,0,0x0,8
tick,0x7ffdf681f424,19280164,0,0x0,8
tick,0x7ffdf681f424,19282206,0,0x0,8
tick,0x7ffdf681f424,19284100,0,0x0,8
tick,0x7ffdf681f424,19286048,0,0x0,8
tick,0x7ffdf681f424,19288253,0,0x0,8
tick,0x7ffdf681f424,19290168,0,0x0,8
tick,0x7ffdf681f424,19292134,0,0x0,8
tick,0x7ffdf681f424,19294148,0,0x0,8
tick,0x7ffdf681f424,19296103,0,0x0,8
tick,0x7ffdf681f424,19298124,0,0x0,8
tick,0x7ffdf681f424,19300117,0,0x0,8
tick,0x7ffdf681f424,19302114,0,0x0,8
tick,0x7ffdf681f424,19304106,0,0x0,8
tick,0x7ffdf681f424,19306099,0,0x0,8
tick,0x7ffdf681f424,19308098,0,0x0,8
tick,0x7ffdf681f424,19309979,0,0x0,8
tick,0x7ffdf681f424,19312094,0,0x0,8
tick,0x7ffdf681f424,19314078,0,0x0,8
tick,0x7ffdf681f424,19316067,0,0x0,8
tick,0x7ffdf681f424,19318044,0,0x0,8
tick,0x7ffdf681f424,19320064,0,0x0,8
tick,0x7ffdf681f424,19322059,0,0x0,8
tick,0x7ffdf681f424,19324047,0,0x0,8
tick,0x7ffdf681f424,19326049,0,0x0,8
tick,0x7ffdf681f424,19328048,0,0x0,8
tick,0x7ffdf681f424,19330070,0,0x0,8
tick,0x7ffdf681f424,19331966,0,0x0,8
tick,0x7ffdf681f424,19334100,0,0x0,8
tick,0x7ffdf681f424,19336020,0,0x0,8
tick,0x7ffdf681f424,19338020,0,0x0,8
tick,0x7ffdf681f424,19340005,0,0x0,8
tick,0x7ffdf681f424,19342005,0,0x0,8
tick,0x7ffdf681f424,19343993,0,0x0,8
tick,0x7ffdf681f424,19345995,0,0x0,8
tick,0x7ffdf681f424,19348000,0,0x0,8
tick,0x7ffdf681f424,19349981,0,0x0,8
tick,0x7ffdf681f424,19351869,0,0x0,8
tick,0x7ffdf681f424,19353967,0,0x0,8
tick,0x7ffdf681f424,19356014,0,0x0,8
tick,0x7ffdf681f424,19357965,0,0x0,8
tick,0x7ffdf681f424,19359970,0,0x0,8
tick,0x7ffdf681f424,19361863,0,0x0,8
tick,0x7ffdf681f424,19363956,0,0x0,8
tick,0x7ffdf681f424,19365952,0,0x0,8
tick,0x7ffdf681f424,19367934,0,0x0,8
tick,0x7ffdf681f424,19369924,0,0x0,8
tick,0x7ffdf681f424,19371921,0,0x0,8
tick,0x7ffdf681f424,19373925,0,0x0,8
tick,0x7ffdf681f424,19375913,0,0x0,8
tick,0x7ffdf681f424,19377917,0,0x0,8
tick,0x7ffdf681f424,19379896,0,0x0,8
tick,0x7ffdf681f424,19381899,0,0x0,8
tick,0x7ffdf681f424,19383874,0,0x0,8
tick,0x7ffdf681f424,19385887,0,0x0,8
tick,0x7ffdf681f424,19387873,0,0x0,8
tick,0x7ffdf681f424,19389922,0,0x0,8
tick,0x7ffdf681f424,19391873,0,0x0,8
tick,0x7ffdf681f424,19393869,0,0x0,8
tick,0x7ffdf681f424,19395862,0,0x0,8
tick,0x7ffdf681f424,19397856,0,0x0,8
tick,0x7ffdf681f424,19399864,0,0x0,8
tick,0x7ffdf681f424,19401742,0,0x0,8
tick,0x7ffdf681f424,19403835,0,0x0,8
tick,0x7ffdf681f424,19405898,0,0x0,8
tick,0x7ffdf681f424,19407827,0,0x0,8
tick,0x7ffdf681f424,19409833,0,0x0,8
tick,0x7ffdf681f424,19411811,0,0x0,8
tick,0x7ffdf681f424,19413814,0,0x0,8
tick,0x7ffdf681f424,19415809,0,0x0,8
tick,0x7ffdf681f424,19417786,0,0x0,8
tick,0x7ffdf681f424,19419801,0,0x0,8
tick,0x7ffdf681f424,19421798,0,0x0,8
tick,0x7ffdf681f424,19423791,0,0x0,8
tick,0x7ffdf681f424,19425780,0,0x0,8
tick,0x7ffdf681f424,19427803,0,0x0,8
tick,0x7ffdf681f424,19429782,0,0x0,8
tick,0x7ffdf681f424,19431833,0,0x0,8
tick,0x7ffdf681f424,19433763,0,0x0,8
tick,0x7ffdf681f424,19435807,0,0x0,8
tick,0x7ffdf681f424,19437734,0,0x0,8
tick,0x7ffdf681f424,19439635,0,0x0,8
tick,0x7ffdf681f424,19441770,0,0x0,8
tick,0x7ffdf681f424,19443663,0,0x0,8
tick,0x7ffdf681f424,19445726,0,0x0,8
tick,0x7ffdf681f424,19447730,0,0x0,8
tick,0x7ffdf681f424,19449778,0,0x0,8
tick,0x7ffdf681f424,19451644,0,0x0,8
tick,0x7ffdf681f424,19453715,0,0x0,8
tick,0x7ffdf681f424,19455706,0,0x0,8
tick,0x7ffdf681f424,19457699,0,0x0,8
tick,0x7ffdf681f424,19459692,0,0x0,8
tick,0x7ffdf681f424,19461695,0,0x0,8
tick,0x7ffdf681f424,19463675,0,0x0,8
tick,0x7ffdf681f424,19465557,0,0x0,8
tick,0x7ffdf681f424,19467618,0,0x0,8
tick,0x7ffdf681f424,19469673,0,0x0,8
tick,0x7ffdf681f424,19471675,0,0x0,8
tick,0x7ffdf681f424,19473645,0,0x0,8
tick,0x7ffdf681f424,19475692,0,0x0,8
tick,0x7ffdf681f424,19477606,0,0x0,8
tick,0x7ffdf681f424,19479620,0,0x0,8
tick,0x7ffdf681f424,19481612,0,0x0,8
tick,0x7ffdf681f424,19483515,0,0x0,8
tick,0x7ffdf681f424,19484611,0,0x0,8
tick,0x7ffdf681f424,19485772,0,0x0,8
tick,0x7ffdf681f424,19486818,0,0x0,8
tick,0x7ffdf681f424,19488811,0,0x0,8
tick,0x7ffdf681f424,19490807,0,0x0,8
tick,0x7ffdf681f424,19492834,0,0x0,8
tick,0x7ffdf681f424,19494796,0,0x0,8
tick,0x7ffdf681f424,19496790,0,0x0,8
tick,0x7ffdf681f424,19498751,0,0x0,8
tick,0x7ffdf681f424,19500678,0,0x0,8
tick,0x7ffdf681f424,19502704,0,0x0,8
tick,0x7ffdf681f424,19504673,0,0x0,8
tick,0x7ffdf681f424,19506607,0,0x0,8
tick,0x7ffdf681f424,19508659,0,0x0,8
tick,0x7ffdf681f424,19510778,0,0x0,8
tick,0x7ffdf681f424,19512762,0,0x0,8
tick,0x7ffdf681f424,19514827,0,0x0,8
tick,0x7ffdf681f424,19516784,0,0x0,8
tick,0x7ffdf681f424,19518682,0,0x0,8
tick,0x7ffdf681f424,19520774,0,0x0,8
tick,0x7ffdf681f424,19522844,0,0x0,8
tick,0x7ffdf681f424,19524767,0,0x0,8
tick,0x7ffdf681f424,19526671,0,0x0,8
tick,0x7ffdf681f424,19528766,0,0x0,8
tick,0x7ffdf681f424,19530682,0,0x0,8
tick,0x7ffdf681f424,19532741,0,0x0,8
tick,0x7ffdf681f424,19534729,0,0x0,8
tick,0x7ffdf681f424,19536778,0,0x0,8
tick,0x7ffdf681f424,19538728,0,0x0,8
tick,0x7ffdf681f424,19540725,0,0x0,8
tick,0x7ffdf681f424,19542711,0,0x0,8
tick,0x7ffdf681f424,19544710,0,0x0,8
tick,0x7ffdf681f424,19546699,0,0x0,8
tick,0x7ffdf681f424,19548702,0,0x0,8
tick,0x7ffdf681f424,19550710,0,0x0,8
tick,0x7ffdf681f424,19552684,0,0x0,8
tick,0x7ffdf681f424,19554691,0,0x0,8
tick,0x7ffdf681f424,19556669,0,0x0,8
tick,0x7ffdf681f424,19558676,0,0x0,8
tick,0x7ffdf681f424,19560559,0,0x0,8
tick,0x7ffdf681f424,19562662,0,0x0,8
tick,0x7ffdf681f424,19564697,0,0x0,8
tick,0x7ffdf681f424,19566663,0,0x0,8
tick,0x7ffdf681f424,19568538,0,0x0,8
tick,0x7ffdf681f424,19570631,0,0x0,8
tick,0x7ffdf681f424,19572620,0,0x0,8
tick,0x7ffdf681f424,19574623,0,0x0,8
tick,0x7ffdf681f424,19576637,0,0x0,8
tick,0x7ffdf681f424,19578616,0,0x0,8
tick,0x7ffdf681f424,19580587,0,0x0,8
tick,0x7ffdf681f424,19582609,0,0x0,8
tick,0x7ffdf681f424,19584493,0,0x0,8
tick,0x7ffdf681f424,19586600,0,0x0,8
tick,0x7ffdf681f424,19588597,0,0x0,8
tick,0x7ffdf681f424,19590479,0,0x0,8
tick,0x7ffdf681f424,19592495,0,0x0,8
tick,0x7ffdf681f424,19594677,0,0x0,8
tick,0x7ffdf681f424,19596574,0,0x0,8
tick,0x7ffdf681f424,19598564,0,0x0,8
tick,0x7ffdf681f424,19600569,0,0x0,8
tick,0x7ffdf681f424,19602535,0,0x0,8
tick,0x7ffdf681f424,19604546,0,0x0,8
tick,0x7ffdf681f424,19606545,0,0x0,8
tick,0x7ffdf681f424,19608544,0,0x0,8
tick,0x7ffdf681f424,19610536,0,0x0,8
tick,0x7ffdf681f424,19612531,0,0x0,8
tick,0x7ffdf681f424,19614518,0,0x0,8
tick,0x7ffdf681f424,19616529,0,0x0,8
tick,0x7ffdf681f424,19618403,0,0x0,8
tick,0x7ffdf681f424,19620509,0,0x0,8
tick,0x7ffdf681f424,19622497,0,0x0,8
tick,0x7ffdf681f424,19624463,0,0x0,8
tick,0x7ffdf681f424,19626492,0,0x0,8
tick,0x7ffdf681f424,19628483,0,0x0,8
tick,0x7ffdf681f424,19630378,0,0x0,8
tick,0x7ffdf681f424,19632481,0,0x0,8
tick,0x7ffdf681f424,19634475,0,0x0,8
tick,0x7ffdf681f424,19636420,0,0x0,8
tick,0x7ffdf681f424,19638467,0,0x0,8
tick,0x7ffdf681f424,19640462,0,0x0,8
tick,0x7ffdf681f424,19642451,0,0x0,8
tick,0x7ffdf681f424,19644441,0,0x0,8
tick,0x7ffdf681f424,19646423,0,0x0,8
tick,0x7ffdf681f424,19648450,0,0x0,8
tick,0x7ffdf681f424,19650429,0,0x0,8
tick,0x7ffdf681f424,19652421,0,0x0,8
tick,0x7ffdf681f424,19654414,0,0x0,8
tick,0x7ffdf681f424,19656422,0,0x0,8
tick,0x7ffdf681f424,19658410,0,0x0,8
tick,0x7ffdf681f424,19660346,0,0x0,8
tick,0x7ffdf681f424,19662392,0,0x0,8
tick,0x7ffdf681f424,19664387,0,0x0,8
tick,0x7ffdf681f424,19666401,0,0x0,8
tick,0x7ffdf681f424,19668325,0,0x0,8
tick,0x7ffdf681f424,19670370,0,0x0,8
tick,0x7ffdf681f424,19672365,0,0x0,8
tick,0x7ffdf681f424,19674368,0,0x0,8
tick,0x7ffdf681f424,19676364,0,0x0,8
tick,0x7ffdf681f424,19678356,0,0x0,8
tick,0x7ffdf681f424,19680347,0,0x0,8
tick,0x7ffdf681f424,19682357,0,0x0,8
tick,0x7ffdf681f424,19684340,0,0x0,8
tick,0x7ffdf681f424,19686333,0,0x0,8
tick,0x7ffdf681f424,19688328,0,0x0,8
tick,0x7ffdf681f424,19690289,0,0x0,8
tick,0x7ffdf681f424,19692313,0,0x0,8
tick,0x7ffdf681f424,19694315,0,0x0,8
tick,0x7ffdf681f424,19696301,0,0x0,8
tick,0x7ffdf681f424,19698307,0,0x0,8
tick,0x7ffdf681f424,19700301,0,0x0,8
tick,0x7ffdf681f424,19702285,0,0x0,8
tick,0x7ffdf681f424,19704325,0,0x0,8
tick,0x7ffdf681f424,19706278,0,0x0,8
tick,0x7ffdf681f424,19708282,0,0x0,8
tick,0x7ffdf681f424,19710171,0,0x0,8
tick,0x7ffdf681f424,19712228,0,0x0,8
tick,0x7ffdf681f424,19714259,0,0x0,8
tick,0x7ffdf681f424,19716241,0,0x0,8
tick,0x7ffdf681f424,19718257,0,0x0,8
tick,0x7ffdf681f424,19720245,0,0x0,8
tick,0x7ffdf681f424,19722123,0,0x0,8
tick,0x7ffdf681f424,19724222,0,0x0,8
tick,0x7ffdf681f424,19726238,0,0x0,8
tick,0x7ffdf681f424,19728225,0,0x0,8
tick,0x7ffdf681f424,19730212,0,0x0,8
tick,0x7ffdf681f424,19732199,0,0x0,8
tick,0x7ffdf681f424,19734181,0,0x0,8
tick,0x7ffdf681f424,19736195,0,0x0,8
tick,0x7ffdf681f424,19738189,0,0x0,8
tick,0x7ffdf681f424,19740177,0,0x0,8
tick,0x7ffdf681f424,19742228,0,0x0,8
tick,0x7ffdf681f424,19744058,0,0x0,8
tick,0x7ffdf681f424,19746055,0,0x0,8
tick,0x7ffdf681f424,19748263,0,0x0,8
tick,0x7ffdf681f424,19750161,0,0x0,8
tick,0x7ffdf681f424,19752053,0,0x0,8
tick,0x7ffdf681f424,19754149,0,0x0,8
tick,0x7ffdf681f424,19756116,0,0x0,8
tick,0x7ffdf681f424,19758133,0,0x0,8
tick,0x7ffdf681f424,19760021,0,0x0,8
tick,0x7ffdf681f424,19762125,0,0x0,8
tick,0x7ffdf681f424,19764131,0,0x0,8
tick,0x7ffdf681f424,19766125,0,0x0,8
tick,0x7ffdf681f424,19768120,0,0x0,8
tick,0x7ffdf681f424,19770204,0,0x0,8
tick,0x7ffdf681f424,19772101,0,0x0,8
tick,0x7ffdf681f424,19774092,0,0x0,8
tick,0x7ffdf681f424,19776091,0,0x0,8
tick,0x7ffdf681f424,19778061,0,0x0,8
tick,0x7ffdf681f424,19780075,0,0x0,8
tick,0x7ffdf681f424,19782075,0,0x0,8
tick,0x7ffdf681f424,19784068,0,0x0,8
tick,0x7ffdf681f424,19786070,0,0x0,8
tick,0x7ffdf681f424,19788028,0,0x0,8
tick,0x7ffdf681f424,19790067,0,0x0,8
tick,0x7ffdf681f424,19792058,0,0x0,8
tick,0x7ffdf681f424,19794040,0,0x0,8
tick,0x7ffdf681f424,19796045,0,0x0,8
tick,0x7ffdf681f424,19798029,0,0x0,8
tick,0x7ffdf681f424,19799993,0,0x0,8
tick,0x7ffdf681f424,19801914,0,0x0,8
tick,0x7ffdf681f424,19804006,0,0x0,8
tick,0x7ffdf681f424,19806007,0,0x0,8
tick,0x7ffdf681f424,19808009,0,0x0,8
tick,0x7ffdf681f424,19810020,0,0x0,8
tick,0x7ffdf681f424,19811991,0,0x0,8
tick,0x7ffdf681f424,19813991,0,0x0,8
tick,0x7ffdf681f424,19815991,0,0x0,8
tick,0x7ffdf681f424,19817900,0,0x0,8
tick,0x7ffdf681f424,19819932,0,0x0,8
tick,0x7ffdf681f424,19821887,0,0x0,8
tick,0x7ffdf681f424,19824021,0,0x0,8
tick,0x7ffdf681f424,19825152,0,0x0,8
tick,0x7ffdf681f424,19826385,0,0x0,8
tick,0x7ffdf681f424,19827545,0,0x0,8
tick,0x7ffdf681f424,19828763,0,0x0,8
tick,0x7ffdf681f424,19830735,0,0x0,8
tick,0x7ffdf681f424,19832732,0,0x0,8
tick,0x7ffdf681f424,19833868,0,0x0,8
tick,0x7ffdf681f424,19835897,0,0x0,8
tick,0x7ffdf681f424,19837865,0,0x0,8
tick,0x7ffdf681f424,19838996,0,0x0,8
tick,0x7ffdf681f424,19840987,0,0x0,8
tick,0x7ffdf681f424,19843007,0,0x0,8
tick,0x7ffdf681f424,19845147,0,0x0,8
tick,0x7ffdf681f424,19847231,0,0x0,8
tick,0x7ffdf681f424,19848376,0,0x0,8
tick,0x7ffdf681f424,19850411,0,0x0,8
tick,0x7ffdf681f424,19851503,0,0x0,8
tick,0x7ffdf681f424,19853534,0,0x0,8
tick,0x7ffdf681f424,19854663,0,0x0,8
tick,0x7ffdf681f424,19856661,0,0x0,8
tick,0x7ffdf681f424,19857815,0,0x0,8
tick,0x7ffdf681f424,19858964,0,0x0,8
tick,0x7ffdf681f424,19861074,0,0x0,8
tick,0x7ffdf681f424,19863020,0,0x0,8
tick,0x7ffdf681f424,19865044,0,0x0,8
tick,0x7ffdf681f424,19867070,0,0x0,8
tick,0x7ffdf681f424,19869017,0,0x0,8
tick,0x7ffdf681f424,19870194,0,0x0,8
tick,0x7ffdf681f424,19872183,0,0x0,8
tick,0x7ffdf681f424,19874181,0,0x0,8
tick,0x7ffdf681f424,19876282,0,0x0,8
tick,0x7ffdf681f424,19878373,0,0x0,8
tick,0x7ffdf681f424,19880463,0,0x0,8
tick,0x7ffdf681f424,19882487,0,0x0,8
tick,0x7ffdf681f424,19884465,0,0x0,8
tick,0x7ffdf681f424,19886476,0,0x0,8
tick,0x7ffdf681f424,19888429,0,0x0,8
tick,0x7ffdf681f424,19890503,0,0x0,8
tick,0x7ffdf681f424,19892516,0,0x0,8
tick,0x7ffdf681f424,19894517,0,0x0,8
tick,0x7ffdf681f424,19896555,0,0x0,8
tick,0x7ffdf681f424,19898485,0,0x0,8
tick,0x7ffdf681f424,19900549,0,0x0,8
tick,0x7ffdf681f424,19902566,0,0x0,8
tick,0x7ffdf681f424,19904568,0,0x0,8
tick,0x7ffdf681f424,19906572,0,0x0,8
tick,0x7ffdf681f424,19908657,0,0x0,8
tick,0x7ffdf681f424,19910645,0,0x0,8
tick,0x7ffdf681f424,19912686,0,0x0,8
tick,0x7ffdf681f424,19914678,0,0x0,8
tick,0x7ffdf681f424,19915835,0,0x0,8
tick,0x7ffdf681f424,19917827,0,0x0,8
tick,0x7ffdf681f424,19919827,0,0x0,8
tick,0x7ffdf681f424,19921859,0,0x0,8
tick,0x7ffdf681f424,19923844,0,0x0,8
tick,0x7ffdf681f424,19925805,0,0x0,8
tick,0x7ffdf681f424,19927835,0,0x0,8
tick,0x7ffdf681f424,19929834,0,0x0,8
tick,0x7ffdf681f424,19931780,0,0x0,8
tick,0x7ffdf681f424,19933778,0,0x0,8
tick,0x7ffdf681f424,19935782,0,0x0,8
tick,0x7ffdf681f424,19937760,0,0x0,8
tick,0x7ffdf681f424,19939787,0,0x0,8
tick,0x7ffdf681f424,19941760,0,0x0,8
tick,0x7ffdf681f424,19943763,0,0x0,8
tick,0x7ffdf681f424,19945757,0,0x0,8
tick,0x7ffdf681f424,19947708,0,0x0,8
tick,0x7ffdf681f424,19949725,0,0x0,8
tick,0x7ffdf681f424,19951712,0,0x0,8
tick,0x7ffdf681f424,19953713,0,0x0,8
tick,0x7ffdf681f424,19955697,0,0x0,8
tick,0x7ffdf681f424,19957678,0,0x0,8
tick,0x7ffdf681f424,19959728,0,0x0,8
tick,0x7ffdf681f424,19961652,0,0x0,8
tick,0x7ffdf681f424,19963651,0,0x0,8
tick,0x7ffdf681f424,19965663,0,0x0,8
tick,0x7ffdf681f424,19967649,0,0x0,8
tick,0x7ffdf681f424,19969659,0,0x0,8
tick,0x7ffdf681f424,19971648,0,0x0,8
tick,0x7ffdf681f424,19972793,0,0x0,8
tick,0x7ffdf681f424,19974771,0,0x0,8
tick,0x7ffdf681f424,19976804,0,0x0,8
tick,0x7ffdf681f424,19978874,0,0x0,8
tick,0x7ffdf681f424,19980925,0,0x0,8
tick,0x7ffdf681f424,19982919,0,0x0,8
tick,0x7ffdf681f424,19984925,0,0x0,8
tick,0x7ffdf681f424,19986969,0,0x0,8
tick,0x7ffdf681f424,19988908,0,0x0,8
tick,0x7ffdf681f424,19990959,0,0x0,8
tick,0x7ffdf681f424,19992886,0,0x0,8
tick,0x7ffdf681f424,19994884,0,0x0,8
tick,0x7ffdf681f424,19997021,0,0x0,8
tick,0x7ffdf681f424,19998923,0,0x0,8
tick,0x7ffdf681f424,20000911,0,0x0,8
tick,0x7ffdf681f424,20002911,0,0x0,8
tick,0x7ffdf681f424,20004803,0,0x0,8
tick,0x7ffdf681f424,20006930,0,0x0,8
tick,0x7ffdf681f424,20008930,0,0x0,8
tick,0x7ffdf681f424,20010901,0,0x0,8
tick,0x7ffdf681f424,20012904,0,0x0,8
tick,0x7ffdf681f424,20014877,0,0x0,8
tick,0x7ffdf681f424,20016873,0,0x0,8
tick,0x7ffdf681f424,20018867,0,0x0,8
tick,0x7ffdf681f424,20020862,0,0x0,8
tick,0x7ffdf681f424,20022852,0,0x0,8
tick,0x7ffdf681f424,20024854,0,0x0,8
tick,0x7ffdf681f424,20026733,0,0x0,8
tick,0x7ffdf681f424,20028846,0,0x0,8
tick,0x7ffdf681f424,20030843,0,0x0,8
tick,0x7ffdf681f424,20032836,0,0x0,8
tick,0x7ffdf681f424,20034889,0,0x0,8
tick,0x7ffdf681f424,20036818,0,0x0,8
tick,0x7ffdf681f424,20038816,0,0x0,8
tick,0x7ffdf681f424,20040817,0,0x0,8
tick,0x7ffdf681f424,20042750,0,0x0,8
tick,0x7ffdf681f424,20044796,0,0x0,8
tick,0x7ffdf681f424,20046821,0,0x0,8
tick,0x7ffdf681f424,20048756,0,0x0,8
tick,0x7ffdf681f424,20050691,0,0x0,8
tick,0x7ffdf681f424,20052820,0,0x0,8
tick,0x7ffdf681f424,20054775,0,0x0,8
tick,0x7ffdf681f424,20056776,0,0x0,8
tick,0x7ffdf681f424,20058766,0,0x0,8
tick,0x7ffdf681f424,20060696,0,0x0,8
tick,0x7ffdf681f424,20062750,0,0x0,8
tick,0x7ffdf681f424,20064742,0,0x0,8
tick,0x7ffdf681f424,20066745,0,0x0,8
tick,0x7ffdf681f424,20068637,0,0x0,8
tick,0x7ffdf681f424,20070731,0,0x0,8
tick,0x7ffdf681f424,20072728,0,0x0,8
tick,0x7ffdf681f424,20074729,0,0x0,8
tick,0x7ffdf681f424,20076725,0,0x0,8
tick,0x7ffdf681f424,20078725,0,0x0,8
tick,0x7ffdf681f424,20080706,0,0x0,8
tick,0x7ffdf681f424,20082696,0,0x0,8
tick,0x7ffdf681f424,20084586,0,0x0,8
tick,0x7ffdf681f424,20086686,0,0x0,8
tick,0x7ffdf681f424,20088687,0,0x0,8
tick,0x7ffdf681f424,20090695,0,0x0,8
tick,0x7ffdf681f424,20092685,0,0x0,8
tick,0x7ffdf681f424,20094676,0,0x0,8
tick,0x7ffdf681f424,20096674,0,0x0,8
tick,0x7ffdf681f424,20098670,0,0x0,8
tick,0x7ffdf681f424,20100710,0,0x0,8
tick,0x7ffdf681f424,20102658,0,0x0,8
tick,0x7ffdf681f424,20104644,0,0x0,8
tick,0x7ffdf681f424,20106644,0,0x0,8
tick,0x7ffdf681f424,20108633,0,0x0,8
tick,0x7ffdf681f424,20110638,0,0x0,8
tick,0x7ffdf681f424,20112617,0,0x0,8
tick,0x7ffdf681f424,20114612,0,0x0,8
tick,0x7ffdf681f424,20116621,0,0x0,8
tick,0x7ffdf681f424,20118495,0,0x0,8
tick,0x7ffdf681f424,20120608,0,0x0,8
tick,0x7ffdf681f424,20122640,0,0x0,8
tick,0x7ffdf681f424,20124592,0,0x0,8
tick,0x7ffdf681f424,20126515,0,0x0,8
tick,0x7ffdf681f424,20128580,0,0x0,8
tick,0x7ffdf681f424,20130576,0,0x0,8
tick,0x7ffdf681f424,20132492,0,0x0,8
tick,0x7ffdf681f424,20134566,0,0x0,8
tick,0x7ffdf681f424,20136495,0,0x0,8
tick,0x7ffdf681f424,20138562,0,0x0,8
tick,0x7ffdf681f424,20140556,0,0x0,8
tick,0x7ffdf681f424,20142551,0,0x0,8
tick,0x7ffdf681f424,20144549,0,0x0,8
tick,0x7ffdf681f424,20146532,0,0x0,8
tick,0x7ffdf681f424,20148522,0,0x0,8
tick,0x7ffdf681f424,20150523,0,0x0,8
tick,0x7ffdf681f424,20152522,0,0x0,8
tick,0x7ffdf681f424,20154509,0,0x0,8
tick,0x7ffdf681f424,20156506,0,0x0,8
tick,0x7ffdf681f424,20158504,0,0x0,8
tick,0x7ffdf681f424,20160369,0,0x0,8
tick,0x7ffdf681f424,20162504,0,0x0,8
tick,0x7ffdf681f424,20164494,0,0x0,8
tick,0x7ffdf681f424,20166553,0,0x0,8
tick,0x7ffdf681f424,20168416,0,0x0,8
tick,0x7ffdf681f424,20170478,0,0x0,8
tick,0x7ffdf681f424,20172471,0,0x0,8
tick,0x7ffdf681f424,20174465,0,0x0,8
tick,0x7ffdf681f424,20176453,0,0x0,8
tick,0x7ffdf681f424,20178455,0,0x0,8
tick,0x7ffdf681f424,20180448,0,0x0,8
tick,0x7ffdf681f424,20182447,0,0x0,8
tick,0x7ffdf681f424,20184439,0,0x0,8
tick,0x7ffdf681f424,20186428,0,0x0,8
tick,0x7ffdf681f424,20188427,0,0x0,8
tick,0x7ffdf681f424,20190427,0,0x0,8
tick,0x7ffdf681f424,20192411,0,0x0,8
tick,0x7ffdf681f424,20194406,0,0x0,8
tick,0x7ffdf681f424,20196394,0,0x0,8
tick,0x7ffdf681f424,20198395,0,0x0,8
tick,0x7ffdf681f424,20200420,0,0x0,8
tick,0x7ffdf681f424,20202389,0,0x0,8
tick,0x7ffdf681f424,20204273,0,0x0,8
tick,0x7ffdf681f424,20206413,0,0x0,8
tick,0x7ffdf681f424,20208373,0,0x0,8
tick,0x7ffdf681f424,20210258,0,0x0,8
tick,0x7ffdf681f424,20212358,0,0x0,8
tick,0x7ffdf681f424,20214353,0,0x0,8
tick,0x7ffdf681f424,20216345,0,0x0,8
tick,0x7ffdf681f424,20218353,0,0x0,8
tick,0x7ffdf681f424,20220335,0,0x0,8
tick,0x7ffdf681f424,20222333,0,0x0,8
tick,0x7ffdf681f424,20224317,0,0x0,8
tick,0x7ffdf681f424,20226324,0,0x0,8
tick,0x7ffdf681f424,20228318,0,0x0,8
tick,0x7ffdf681f424,20230316,0,0x0,8
tick,0x7ffdf681f424,20232316,0,0x0,8
tick,0x7ffdf681f424,20234307,0,0x0,8
tick,0x7ffdf681f424,20236222,0,0x0,8
tick,0x7ffdf681f424,20238288,0,0x0,8
tick,0x7ffdf681f424,20240282,0,0x0,8
tick,0x7ffdf681f424,20242284,0,0x0,8
tick,0x7ffdf681f424,20244283,0,0x0,8
tick,0x7ffdf681f424,20246279,0,0x0,8
tick,0x7ffdf681f424,20248266,0,0x0,8
tick,0x7ffdf681f424,20250300,0,0x0,8
tick,0x7ffdf681f424,20252128,0,0x0,8
tick,0x7ffdf681f424,20254265,0,0x0,8
tick,0x7ffdf681f424,20256251,0,0x0,8
tick,0x7ffdf681f424,20258230,0,0x0,8
tick,0x7ffdf681f424,20260121,0,0x0,8
tick,0x7ffdf681f424,20262227,0,0x0,8
tick,0x7ffdf681f424,20264220,0,0x0,8
tick,0x7ffdf681f424,20266218,0,0x0,8
tick,0x7ffdf681f424,20268207,0,0x0,8
tick,0x7ffdf681f424,20270206,0,0x0,8
tick,0x7ffdf681f424,20272199,0,0x0,8
tick,0x7ffdf681f424,20274190,0,0x0,8
tick,0x7ffdf681f424,20276243,0,0x0,8
tick,0x7ffdf681f424,20278182,0,0x0,8
tick,0x7ffdf681f424,20280088,0,0x0,8
tick,0x7ffdf681f424,20282172,0,0x0,8
tick,0x7ffdf681f424,20284166,0,0x0,8
tick,0x7ffdf681f424,20286170,0,0x0,8
tick,0x7ffdf681f424,20288147,0,0x0,8
tick,0x7ffdf681f424,20290154,0,0x0,8
tick,0x7ffdf681f424,20292163,0,0x0,8
tick,0x7ffdf681f424,20294152,0,0x0,8
tick,0x7ffdf681f424,20296140,0,0x0,8
tick,0x7ffdf681f424,20298147,0,0x0,8
tick,0x7ffdf681f424,20300129,0,0x0,8
tick,0x7ffdf681f424,20302012,0,0x0,8
tick,0x7ffdf681f424,20304111,0,0x0,8
tick,0x7ffdf681f424,20306103,0,0x0,8
tick,0x7ffdf681f424,20308093,0,0x0,8
tick,0x7ffdf681f424,20310100,0,0x0,8
tick,0x7ffdf681f424,20312106,0,0x0,8
tick,0x7ffdf681f424,20314081,0,0x0,8
tick,0x7ffdf681f424,20316086,0,0x0,8
tick,0x7ffdf681f424,20318085,0,0x0,8
tick,0x7ffdf681f424,20320075,0,0x0,8
tick,0x7ffdf681f424,20322073,0,0x0,8
tick,0x7ffdf681f424,20324060,0,0x0,8
tick,0x7ffdf681f424,20326053,0,0x0,8
tick,0x7ffdf681f424,20328049,0,0x0,8
tick,0x7ffdf681f424,20330047,0,0x0,8
tick,0x7ffdf681f424,20332031,0,0x0,8
tick,0x7ffdf681f424,20334051,0,0x0,8
tick,0x7ffdf681f424,20336043,0,0x0,8
tick,0x7ffdf681f424,20338035,0,0x0,8
tick,0x7ffdf681f424,20339942,0,0x0,8
tick,0x7ffdf681f424,20342249,0,0x0,8
tick,0x7ffdf681f424,20343846,0,0x0,8
tick,0x7ffdf681f424,20345944,0,0x0,8
tick,0x7ffdf681f424,20348004,0,0x0,8
tick,0x7ffdf681f424,20349864,0,0x0,8
tick,0x7ffdf681f424,20351818,0,0x0,8
tick,0x7ffdf681f424,20353822,0,0x0,8
tick,0x7ffdf681f424,20355803,0,0x0,8
tick,0x7ffdf681f424,20357942,0,0x0,8
tick,0x7ffdf681f424,20359944,0,0x0,8
tick,0x7ffdf681f424,20361861,0,0x0,8
tick,0x7ffdf681f424,20364036,0,0x0,8
tick,0x7ffdf681f424,20365842,0,0x0,8
tick,0x7ffdf681f424,20367742,0,0x0,8
tick,0x7ffdf681f424,20369848,0,0x0,8
tick,0x7ffdf681f424,20371896,0,0x0,8
tick,0x7ffdf681f424,20373967,0,0x0,8
tick,0x7ffdf681f424,20375958,0,0x0,8
tick,0x7ffdf681f424,20377919,0,0x0,8
tick,0x7ffdf681f424,20379921,0,0x0,8
tick,0x7ffdf681f424,20381921,0,0x0,8
tick,0x7ffdf681f424,20383933,0,0x0,8
tick,0x7ffdf681f424,20385957,0,0x0,8
tick,0x7ffdf681f424,20387936,0,0x0,8
tick,0x7ffdf681f424,20389930,0,0x0,8
tick,0x7ffdf681f424,20391930,0,0x0,8
tick,0x7ffdf681f424,20393109,0,0x0,8
tick,0x7ffdf681f424,20395077,0,0x0,8
tick,0x7ffdf681f424,20396271,0,0x0,8
tick,0x7ffdf681f424,20398276,0,0x0,8
tick,0x7ffdf681f424,20400242,0,0x0,8
tick,0x7ffdf681f424,20402228,0,0x0,8
tick,0x7ffdf681f424,20404233,0,0x0,8
tick,0x7ffdf681f424,20406211,0,0x0,8
tick,0x7ffdf681f424,20408233,0,0x0,8
tick,0x7ffdf681f424,20410157,0,0x0,8
tick,0x7ffdf681f424,20412183,0,0x0,8
tick,0x7ffdf681f424,20414208,0,0x0,8
tick,0x7ffdf681f424,20416168,0,0x0,8
tick,0x7ffdf681f424,20418223,0,0x0,8
tick,0x7ffdf681f424,20420203,0,0x0,8
tick,0x7ffdf681f424,20422147,0,0x0,8
tick,0x7ffdf681f424,20424185,0,0x0,8
tick,0x7ffdf681f424,20426187,0,0x0,8
tick,0x7ffdf681f424,20428181,0,0x0,8
tick,0x7ffdf681f424,20430187,0,0x0,8
tick,0x7ffdf681f424,20432115,0,0x0,8
tick,0x7ffdf681f424,20434066,0,0x0,8
tick,0x7ffdf681f424,20436197,0,0x0,8
tick,0x7ffdf681f424,20438147,0,0x0,8
tick,0x7ffdf681f424,20440152,0,0x0,8
tick,0x7ffdf681f424,20442154,0,0x0,8
tick,0x7ffdf681f424,20444030,0,0x0,8
tick,0x7ffdf681f424,20446124,0,0x0,8
tick,0x7ffdf681f424,20448129,0,0x0,8
tick,0x7ffdf681f424,20450118,0,0x0,8
tick,0x7ffdf681f424,20451962,0,0x0,8
tick,0x7ffdf681f424,20454109,0,0x0,8
tick,0x7ffdf681f424,20456103,0,0x0,8
tick,0x7ffdf681f424,20458098,0,0x0,8
tick,0x7ffdf681f424,20460122,0,0x0,8
tick,0x7ffdf681f424,20462083,0,0x0,8
tick,0x7ffdf681f424,20464086,0,0x0,8
tick,0x7ffdf681f424,20466026,0,0x0,8
tick,0x7ffdf681f424,20468063,0,0x0,8
tick,0x7ffdf681f424,20470069,0,0x0,8
tick,0x7ffdf681f424,20472059,0,0x0,8
tick,0x7ffdf681f424,20474054,0,0x0,8
tick,0x7ffdf681f424,20476036,0,0x0,8
tick,0x7ffdf681f424,20478046,0,0x0,8
tick,0x7ffdf681f424,20480048,0,0x0,8
tick,0x7ffdf681f424,20482021,0,0x0,8
tick,0x7ffdf681f424,20484027,0,0x0,8
tick,0x7ffdf681f424,20486028,0,0x0,8
tick,0x7ffdf681f424,20488022,0,0x0,8
tick,0x7ffdf681f424,20490019,0,0x0,8
tick,0x7ffdf681f424,20492023,0,0x0,8
tick,0x7ffdf681f424,20494009,0,0x0,8
tick,0x7ffdf681f424,20495998,0,0x0,8
tick,0x7ffdf681f424,20497994,0,0x0,8
tick,0x7ffdf681f424,20499995,0,0x0,8
tick,0x7ffdf681f424,20501878,0,0x0,8
tick,0x7ffdf681f424,20503971,0,0x0,8
tick,0x7ffdf681f424,20505972,0,0x0,8
tick,0x7ffdf681f424,20507978,0,0x0,8
tick,0x7ffdf681f424,20509865,0,0x0,8
tick,0x7ffdf681f424,20511912,0,0x0,8
tick,0x7ffdf681f424,20513986,0,0x0,8
tick,0x7ffdf681f424,20515946,0,0x0,8
tick,0x7ffdf681f424,20517943,0,0x0,8
tick,0x7ffdf681f424,20519829,0,0x0,8
tick,0x7ffdf681f424,20521933,0,0x0,8
tick,0x7ffdf681f424,20523929,0,0x0,8
tick,0x7ffdf681f424,20525980,0,0x0,8
tick,0x7ffdf681f424,20527879,0,0x0,8
tick,0x7ffdf681f424,20529883,0,0x0,8
tick,0x7ffdf681f424,20531904,0,0x0,8
tick,0x7ffdf681f424,20533828,0,0x0,8
tick,0x7ffdf681f424,20535897,0,0x0,8
tick,0x7ffdf681f424,20537900,0,0x0,8
tick,0x7ffdf681f424,20539845,0,0x0,8
tick,0x7ffdf681f424,20541685,0,0x0,8
tick,0x7ffdf681f424,20543651,0,0x0,8
tick,0x7ffdf681f424,20545753,0,0x0,8
tick,0x7ffdf681f424,20547772,0,0x0,8
tick,0x7ffdf681f424,20549850,0,0x0,8
tick,0x7ffdf681f424,20551758,0,0x0,8
tick,0x7ffdf681f424,20553698,0,0x0,8
tick,0x7ffdf681f424,20555810,0,0x0,8
tick,0x7ffdf681f424,20557800,0,0x0,8
tick,0x7ffdf681f424,20559667,0,0x0,8
tick,0x7ffdf681f424,20561732,0,0x0,8
tick,0x7ffdf681f424,20563790,0,0x0,8
tick,0x7ffdf681f424,20565788,0,0x0,8
tick,0x7ffdf681f424,20567791,0,0x0,8
tick,0x7ffdf681f424,20569772,0,0x0,8
tick,0x7ffdf681f424,20571730,0,0x0,8
tick,0x7ffdf681f424,20573813,0,0x0,8
tick,0x7ffdf681f424,20574981,0,0x0,8
tick,0x7ffdf681f424,20576880,0,0x0,8
tick,0x7ffdf681f424,20578975,0,0x0,8
tick,0x7ffdf681f424,20580929,0,0x0,8
tick,0x7ffdf681f424,20582937,0,0x0,8
tick,0x7ffdf681f424,20584749,0,0x0,8
tick,0x7ffdf681f424,20586770,0,0x0,8
tick,0x7ffdf681f424,20588933,0,0x0,8
tick,0x7ffdf681f424,20590904,0,0x0,8
tick,0x7ffdf681f424,20592844,0,0x0,8
tick,0x7ffdf681f424,20594948,0,0x0,8
tick,0x7ffdf681f424,20597045,0,0x0,8
tick,0x7ffdf681f424,20599040,0,0x0,8
tick,0x7ffdf681f424,20601037,0,0x0,8
tick,0x7ffdf681f424,20603031,0,0x0,8
tick,0x7ffdf681f424,20605052,0,0x0,8
tick,0x7ffdf681f424,20607008,0,0x0,8
tick,0x7ffdf681f424,20609000,0,0x0,8
tick,0x7ffdf681f424,20611045,0,0x0,8
tick,0x7ffdf681f424,20613011,0,0x0,8
tick,0x7ffdf681f424,20615025,0,0x0,8
tick,0x7ffdf681f424,20617017,0,0x0,8
tick,0x7ffdf681f424,20618978,0,0x0,8
tick,0x7ffdf681f424,20620961,0,0x0,8
tick,0x7ffdf681f424,20623000,0,0x0,8
tick,0x7ffdf681f424,20625013,0,0x0,8
tick,0x7ffdf681f424,20626881,0,0x0,8
tick,0x7ffdf681f424,20628975,0,0x0,8
tick,0x7ffdf681f424,20630975,0,0x0,8
tick,0x7ffdf681f424,20632981,0,0x0,8
tick,0x7ffdf681f424,20634984,0,0x0,8
tick,0x7ffdf681f424,20636954,0,0x0,8
tick,0x7ffdf681f424,20638960,0,0x0,8
tick,0x7ffdf681f424,20640947,0,0x0,8
tick,0x7ffdf681f424,20642921,0,0x0,8
tick,0x7ffdf681f424,20644949,0,0x0,8
tick,0x7ffdf681f424,20646930,0,0x0,8
tick,0x7ffdf681f424,20648920,0,0x0,8
tick,0x7ffdf681f424,20650931,0,0x0,8
tick,0x7ffdf681f424,20652919,0,0x0,8
tick,0x7ffdf681f424,20654910,0,0x0,8
tick,0x7ffdf681f424,20656901,0,0x0,8
tick,0x7ffdf681f424,20658898,0,0x0,8
tick,0x7ffdf681f424,20660896,0,0x0,8
tick,0x7ffdf681f424,20662817,0,0x0,8
tick,0x7ffdf681f424,20664719,0,0x0,8
tick,0x7ffdf681f424,20666668,0,0x0,8
tick,0x7ffdf681f424,20668698,0,0x0,8
tick,0x7ffdf681f424,20670767,0,0x0,8
tick,0x7ffdf681f424,20672819,0,0x0,8
tick,0x7ffdf681f424,20674808,0,0x0,8
tick,0x7ffdf681f424,20676894,0,0x0,8
tick,0x7ffdf681f424,20678855,0,0x0,8
tick,0x7ffdf681f424,20680791,0,0x0,8
tick,0x7ffdf681f424,20682793,0,0x0,8
tick,0x7ffdf681f424,20684803,0,0x0,8
tick,0x7ffdf681f424,20686771,0,0x0,8
tick,0x7ffdf681f424,20688763,0,0x0,8
tick,0x7ffdf681f424,20690742,0,0x0,8
tick,0x7ffdf681f424,20692758,0,0x0,8
tick,0x7ffdf681f424,20694810,0,0x0,8
tick,0x7ffdf681f424,20696809,0,0x0,8
tick,0x7ffdf681f424,20698757,0,0x0,8
tick,0x7ffdf681f424,20700787,0,0x0,8
tick,0x7ffdf681f424,20702807,0,0x0,8
tick,0x7ffdf681f424,20704791,0,0x0,8
tick,0x7ffdf681f424,20706787,0,0x0,8
tick,0x7ffdf681f424,20708771,0,0x0,8
tick,0x7ffdf681f424,20710770,0,0x0,8
tick,0x7ffdf681f424,20712751,0,0x0,8
tick,0x7ffdf681f424,20714761,0,0x0,8
tick,0x7ffdf681f424,20716740,0,0x0,8
tick,0x7ffdf681f424,20718670,0,0x0,8
tick,0x7ffdf681f424,20720738,0,0x0,8
tick,0x7ffdf681f424,20722737,0,0x0,8
tick,0x7ffdf681f424,20724718,0,0x0,8
tick,0x7ffdf681f424,20726747,0,0x0,8
tick,0x7ffdf681f424,20728596,0,0x0,8
tick,0x7ffdf681f424,20730539,0,0x0,8
tick,0x7ffdf681f424,20732633,0,0x0,8
tick,0x7ffdf681f424,20734629,0,0x0,8
tick,0x7ffdf681f424,20736573,0,0x0,8
tick,0x7ffdf681f424,20738500,0,0x0,8
tick,0x7ffdf681f424,20740532,0,0x0,8
tick,0x7ffdf681f424,20742607,0,0x0,8
tick,0x7ffdf681f424,20744503,0,0x0,8
tick,0x7ffdf681f424,20746581,0,0x0,8
tick,0x7ffdf681f424,20748488,0,0x0,8
tick,0x7ffdf681f424,20750604,0,0x0,8
tick,0x7ffdf681f424,20752597,0,0x0,8
tick,0x7ffdf681f424,20754649,0,0x0,8
tick,0x7ffdf681f424,20756641,0,0x0,8
tick,0x7ffdf681f424,20758642,0,0x0,8
tick,0x7ffdf681f424,20760514,0,0x0,8
tick,0x7ffdf681f424,20762625,0,0x0,8
tick,0x7ffdf681f424,20764640,0,0x0,8
tick,0x7ffdf681f424,20766620,0,0x0,8
tick,0x7ffdf681f424,20768533,0,0x0,8
tick,0x7ffdf681f424,20770639,0,0x0,8
tick,0x7ffdf681f424,20772596,0,0x0,8
tick,0x7ffdf681f424,20774529,0,0x0,8
tick,0x7ffdf681f424,20776587,0,0x0,8
tick,0x7ffdf681f424,20778623,0,0x0,8
tick,0x7ffdf681f424,20780587,0,0x0,8
tick,0x7ffdf681f424,20782577,0,0x0,8
tick,0x7ffdf681f424,20784570,0,0x0,8
tick,0x7ffdf681f424,20786584,0,0x0,8
tick,0x7ffdf681f424,20788562,0,0x0,8
tick,0x7ffdf681f424,20790489,0,0x0,8
tick,0x7ffdf681f424,20792555,0,0x0,8
tick,0x7ffdf681f424,20794540,0,0x0,8
tick,0x7ffdf681f424,20796564,0,0x0,8
tick,0x7ffdf681f424,20798530,0,0x0,8
tick,0x7ffdf681f424,20800536,0,0x0,8
tick,0x7ffdf681f424,20802520,0,0x0,8
tick,0x7ffdf681f424,20804510,0,0x0,8
tick,0x7ffdf681f424,20806497,0,0x0,8
tick,0x7ffdf681f424,20808501,0,0x0,8
tick,0x7ffdf681f424,20810403,0,0x0,8
tick,0x7ffdf681f424,20812502,0,0x0,8
tick,0x7ffdf681f424,20814492,0,0x0,8
tick,0x7ffdf681f424,20816407,0,0x0,8
tick,0x7ffdf681f424,20818498,0,0x0,8
tick,0x7ffdf681f424,20820462,0,0x0,8
tick,0x7ffdf681f424,20822467,0,0x0,8
tick,0x7ffdf681f424,20824451,0,0x0,8
tick,0x7ffdf681f424,20826447,0,0x0,8
tick,0x7ffdf681f424,20828446,0,0x0,8
tick,0x7ffdf681f424,20830337,0,0x0,8
tick,0x7ffdf681f424,20832440,0,0x0,8
tick,0x7ffdf681f424,20834428,0,0x0,8
tick,0x7ffdf681f424,20836427,0,0x0,8
tick,0x7ffdf681f424,20838410,0,0x0,8
tick,0x7ffdf681f424,20840355,0,0x0,8
tick,0x7ffdf681f424,20842436,0,0x0,8
tick,0x7ffdf681f424,20844401,0,0x0,8
tick,0x7ffdf681f424,20846393,0,0x0,8
tick,0x7ffdf681f424,20848402,0,0x0,8
tick,0x7ffdf681f424,20850387,0,0x0,8
tick,0x7ffdf681f424,20852383,0,0x0,8
tick,0x7ffdf681f424,20854400,0,0x0,8
tick,0x7ffdf681f424,20856365,0,0x0,8
tick,0x7ffdf681f424,20858371,0,0x0,8
tick,0x7ffdf681f424,20860258,0,0x0,8
tick,0x7ffdf681f424,20862191,0,0x0,8
tick,0x7ffdf681f424,20864351,0,0x0,8
tick,0x7ffdf681f424,20866315,0,0x0,8
tick,0x7ffdf681f424,20868232,0,0x0,8
tick,0x7ffdf681f424,20870332,0,0x0,8
tick,0x7ffdf681f424,20872374,0,0x0,8
tick,0x7ffdf681f424,20874327,0,0x0,8
tick,0x7ffdf681f424,20876323,0,0x0,8
tick,0x7ffdf681f424,20878347,0,0x0,8
tick,0x7ffdf681f424,20880313,0,0x0,8
tick,0x7ffdf681f424,20882301,0,0x0,8
tick,0x7ffdf681f424,20884251,0,0x0,8
tick,0x7ffdf681f424,20886287,0,0x0,8
tick,0x7ffdf681f424,20888290,0,0x0,8
tick,0x7ffdf681f424,20890232,0,0x0,8
tick,0x7ffdf681f424,20892126,0,0x0,8
tick,0x7ffdf681f424,20894164,0,0x0,8
tick,0x7ffdf681f424,20896249,0,0x0,8
tick,0x7ffdf681f424,20898266,0,0x0,8
tick,0x7ffdf681f424,20900218,0,0x0,8
tick,0x7ffdf681f424,20902156,0,0x0,8
tick,0x7ffdf681f424,20904262,0,0x0,8
tick,0x7ffdf681f424,20906243,0,0x0,8
tick,0x7ffdf681f424,20908238,0,0x0,8
tick,0x7ffdf681f424,20910206,0,0x0,8
tick,0x7ffdf681f424,20912231,0,0x0,8
tick,0x7ffdf681f424,20914236,0,0x0,8
tick,0x7ffdf681f424,20916218,0,0x0,8
tick,0x7ffdf681f424,20918227,0,0x0,8
tick,0x7ffdf681f424,20920204,0,0x0,8
tick,0x7ffdf681f424,20922198,0,0x0,8
tick,0x7ffdf681f424,20924194,0,0x0,8
tick,0x7ffdf681f424,20926188,0,0x0,8
tick,0x7ffdf681f424,20928201,0,0x0,8
tick,0x7ffdf681f424,20930175,0,0x0,8
tick,0x7ffdf681f424,20932194,0,0x0,8
tick,0x7ffdf681f424,20934172,0,0x0,8
tick,0x7ffdf681f424,20936161,0,0x0,8
tick,0x7ffdf681f424,20938153,0,0x0,8
tick,0x7ffdf681f424,20940149,0,0x0,8
tick,0x7ffdf681f424,20942144,0,0x0,8
tick,0x7ffdf681f424,20944137,0,0x0,8
tick,0x7ffdf681f424,20946174,0,0x0,8
tick,0x7ffdf681f424,20948150,0,0x0,8
tick,0x7ffdf681f424,20950129,0,0x0,8
tick,0x7ffdf681f424,20952021,0,0x0,8
tick,0x7ffdf681f424,20954127,0,0x0,8
tick,0x7ffdf681f424,20956103,0,0x0,8
tick,0x7ffdf681f424,20958115,0,0x0,8
tick,0x7ffdf681f424,20960105,0,0x0,8
tick,0x7ffdf681f424,20962150,0,0x0,8
tick,0x7ffdf681f424,20963980,0,0x0,8
tick,0x7ffdf681f424,20966080,0,0x0,8
tick,0x7ffdf681f424,20968084,0,0x0,8
tick,0x7ffdf681f424,20969997,0,0x0,8
tick,0x7ffdf681f424,20972117,0,0x0,8
tick,0x7ffdf681f424,20974073,0,0x0,8
tick,0x7ffdf681f424,20976056,0,0x0,8
tick,0x7ffdf681f424,20977993,0,0x0,8
tick,0x7ffdf681f424,20980051,0,0x0,8
tick,0x7ffdf681f424,20982038,0,0x0,8
tick,0x7ffdf681f424,20984011,0,0x0,8
tick,0x7ffdf681f424,20986063,0,0x0,8
tick,0x7ffdf681f424,20987861,0,0x0,8
tick,0x7ffdf681f424,20989803,0,0x0,8
tick,0x7ffdf681f424,20991794,0,0x0,8
tick,0x7ffdf681f424,20992938,0,0x0,8
tick,0x7ffdf681f424,20994822,0,0x0,8
tick,0x7ffdf681f424,20996978,0,0x0,8
tick,0x7ffdf681f424,20998937,0,0x0,8
tick,0x7ffdf681f424,21001019,0,0x0,8
tick,0x7ffdf681f424,21002955,0,0x0,8
tick,0x7ffdf681f424,21004923,0,0x0,8
tick,0x7ffdf681f424,21007075,0,0x0,8
tick,0x7ffdf681f424,21008989,0,0x0,8
tick,0x7ffdf681f424,21010959,0,0x0,8
tick,0x7ffdf681f424,21013002,0,0x0,8
tick,0x7ffdf681f424,21015027,0,0x0,8
tick,0x7ffdf681f424,21017045,0,0x0,8
tick,0x7ffdf681f424,21019013,0,0x0,8
tick,0x7ffdf681f424,21020976,0,0x0,8
tick,0x7ffdf681f424,21022998,0,0x0,8
tick,0x7ffdf681f424,21024948,0,0x0,8
tick,0x7ffdf681f424,21026906,0,0x0,8
tick,0x7ffdf681f424,21029030,0,0x0,8
tick,0x7ffdf681f424,21030172,0,0x0,8
tick,0x7ffdf681f424,21032183,0,0x0,8
tick,0x7ffdf681f424,21033371,0,0x0,8
tick,0x7ffdf681f424,21035278,0,0x0,8
tick,0x7ffdf681f424,21036457,0,0x0,8
tick,0x7ffdf681f424,21038434,0,0x0,8
tick,0x7ffdf681f424,21039608,0,0x0,8
tick,0x7ffdf681f424,21041595,0,0x0,8
tick,0x7ffdf681f424,21043547,0,0x0,8
tick,0x7ffdf681f424,21045625,0,0x0,8
tick,0x7ffdf681f424,21047600,0,0x0,8
tick,0x7ffdf681f424,21049667,0,0x0,8
tick,0x7ffdf681f424,21051706,0,0x0,8
tick,0x7ffdf681f424,21053717,0,0x0,8
tick,0x7ffdf681f424,21054949,0,0x0,8
tick,0x7ffdf681f424,21056919,0,0x0,8
tick,0x7ffdf681f424,21058108,0,0x0,8
tick,0x7ffdf681f424,21060191,0,0x0,8
tick,0x7ffdf681f424,21062121,0,0x0,8
tick,0x7ffdf681f424,21064052,0,0x0,8
tick,0x7ffdf681f424,21066127,0,0x0,8
tick,0x7ffdf681f424,21068063,0,0x0,8
tick,0x7ffdf681f424,21070079,0,0x0,8
tick,0x7ffdf681f424,21071236,0,0x0,8
tick,0x7ffdf681f424,21073298,0,0x0,8
tick,0x7ffdf681f424,21075266,0,0x0,8
tick,0x7ffdf681f424,21077232,0,0x0,8
tick,0x7ffdf681f424,21078321,0,0x0,8
tick,0x7ffdf681f424,21080412,0,0x0,8
tick,0x7ffdf681f424,21082356,0,0x0,8
tick,0x7ffdf681f424,21084308,0,0x0,8
tick,0x7ffdf681f424,21086424,0,0x0,8
tick,0x7ffdf681f424,21088393,0,0x0,8
tick,0x7ffdf681f424,21090392,0,0x0,8
tick,0x7ffdf681f424,21092383,0,0x0,8
tick,0x7ffdf681f424,21094393,0,0x0,8
tick,0x7ffdf681f424,21096375,0,0x0,8
tick,0x7ffdf681f424,21098259,0,0x0,8
tick,0x7ffdf681f424,21100205,0,0x0,8
tick,0x7ffdf681f424,21102208,0,0x0,8
tick,0x7ffdf681f424,21104222,0,0x0,8
tick,0x7ffdf681f424,21106304,0,0x0,8
tick,0x7ffdf681f424,21108304,0,0x0,8
tick,0x7ffdf681f424,21110187,0,0x0,8
tick,0x7ffdf681f424,21112170,0,0x0,8
tick,0x7ffdf681f424,21114292,0,0x0,8
tick,0x7ffdf681f424,21116297,0,0x0,8
tick,0x7ffdf681f424,21118271,0,0x0,8
tick,0x7ffdf681f424,21120281,0,0x0,8
tick,0x7ffdf681f424,21122187,0,0x0,8
tick,0x7ffdf681f424,21124212,0,0x0,8
tick,0x7ffdf681f424,21126265,0,0x0,8
tick,0x7ffdf681f424,21128146,0,0x0,8
tick,0x7ffdf681f424,21130277,0,0x0,8
tick,0x7ffdf681f424,21132242,0,0x0,8
tick,0x7ffdf681f424,21134240,0,0x0,8
tick,0x7ffdf681f424,21136221,0,0x0,8
tick,0x7ffdf681f424,21138227,0,0x0,8
tick,0x7ffdf681f424,21140223,0,0x0,8
tick,0x7ffdf681f424,21142212,0,0x0,8
tick,0x7ffdf681f424,21144213,0,0x0,8
tick,0x7ffdf681f424,21146233,0,0x0,8
tick,0x7ffdf681f424,21148213,0,0x0,8
tick,0x7ffdf681f424,21150200,0,0x0,8
tick,0x7ffdf681f424,21152103,0,0x0,8
tick,0x7ffdf681f424,21154185,0,0x0,8
tick,0x7ffdf681f424,21156182,0,0x0,8
tick,0x7ffdf681f424,21158173,0,0x0,8
tick,0x7ffdf681f424,21160213,0,0x0,8
tick,0x7ffdf681f424,21162207,0,0x0,8
tick,0x7ffdf681f424,21164192,0,0x0,8
tick,0x7ffdf681f424,21166186,0,0x0,8
tick,0x7ffdf681f424,21168197,0,0x0,8
tick,0x7ffdf681f424,21170169,0,0x0,8
tick,0x7ffdf681f424,21172170,0,0x0,8
tick,0x7ffdf681f424,21174172,0,0x0,8
tick,0x7ffdf681f424,21176163,0,0x0,8
tick,0x7ffdf681f424,21178163,0,0x0,8
tick,0x7ffdf681f424,21180147,0,0x0,8
tick,0x7ffdf681f424,21182151,0,0x0,8
tick,0x7ffdf681f424,21184138,0,0x0,8
tick,0x7ffdf681f424,21186139,0,0x0,8
tick,0x7ffdf681f424,21188131,0,0x0,8
tick,0x7ffdf681f424,21190146,0,0x0,8
tick,0x7ffdf681f424,21192125,0,0x0,8
tick,0x7ffdf681f424,21194119,0,0x0,8
tick,0x7ffdf681f424,21196158,0,0x0,8
tick,0x7ffdf681f424,21198098,0,0x0,8
tick,0x7ffdf681f424,21200011,0,0x0,8
tick,0x7ffdf681f424,21201985,0,0x0,8
tick,0x7ffdf681f424,21204084,0,0x0,8
tick,0x7ffdf681f424,21206087,0,0x0,8
tick,0x7ffdf681f424,21208086,0,0x0,8
tick,0x7ffdf681f424,21210069,0,0x0,8
tick,0x7ffdf681f424,21212001,0,0x0,8
tick,0x7ffdf681f424,21214063,0,0x0,8
tick,0x7ffdf681f424,21216054,0,0x0,8
tick,0x7ffdf681f424,21217957,0,0x0,8
tick,0x7ffdf681f424,21219898,0,0x0,8
tick,0x7ffdf681f424,21221876,0,0x0,8
tick,0x7ffdf681f424,21224000,0,0x0,8
tick,0x7ffdf681f424,21225984,0,0x0,8
tick,0x7ffdf681f424,21227932,0,0x0,8
tick,0x7ffdf681f424,21229974,0,0x0,8
tick,0x7ffdf681f424,21231959,0,0x0,8
tick,0x7ffdf681f424,21233998,0,0x0,8
tick,0x7ffdf681f424,21235960,0,0x0,8
tick,0x7ffdf681f424,21237978,0,0x0,8
tick,0x7ffdf681f424,21239985,0,0x0,8
tick,0x7ffdf681f424,21241948,0,0x0,8
tick,0x7ffdf681f424,21243832,0,0x0,8
tick,0x7ffdf681f424,21245926,0,0x0,8
tick,0x7ffdf681f424,21247934,0,0x0,8
tick,0x7ffdf681f424,21249945,0,0x0,8
tick,0x7ffdf681f424,21251858,0,0x0,8
tick,0x7ffdf681f424,21253901,0,0x0,8
tick,0x7ffdf681f424,21255924,0,0x0,8
tick,0x7ffdf681f424,21257834,0,0x0,8
tick,0x7ffdf681f424,21259865,0,0x0,8
tick,0x7ffdf681f424,21261923,0,0x0,8
tick,0x7ffdf681f424,21263902,0,0x0,8
tick,0x7ffdf681f424,21265869,0,0x0,8
tick,0x7ffdf681f424,21267864,0,0x0,8
tick,0x7ffdf681f424,21269867,0,0x0,8
tick,0x7ffdf681f424,21271860,0,0x0,8
tick,0x7ffdf681f424,21273858,0,0x0,8
tick,0x7ffdf681f424,21275946,0,0x0,8
tick,0x7ffdf681f424,21277796,0,0x0,8
tick,0x7ffdf681f424,21278952,0,0x0,8
tick,0x7ffdf681f424,21280879,0,0x0,8
tick,0x7ffdf681f424,21282958,0,0x0,8
tick,0x7ffdf681f424,21284867,0,0x0,8
tick,0x7ffdf681f424,21286851,0,0x0,8
tick,0x7ffdf681f424,21288857,0,0x0,8
tick,0x7ffdf681f424,21290824,0,0x0,8
tick,0x7ffdf681f424,21292857,0,0x0,8
tick,0x7ffdf681f424,21294837,0,0x0,8
tick,0x7ffdf681f424,21296834,0,0x0,8
tick,0x7ffdf681f424,21298852,0,0x0,8
tick,0x7ffdf681f424,21300828,0,0x0,8
tick,0x7ffdf681f424,21302831,0,0x0,8
tick,0x7ffdf681f424,21304840,0,0x0,8
tick,0x7ffdf681f424,21306814,0,0x0,8
tick,0x7ffdf681f424,21308808,0,0x0,8
tick,0x7ffdf681f424,21310793,0,0x0,8
tick,0x7ffdf681f424,21312808,0,0x0,8
tick,0x7ffdf681f424,21314789,0,0x0,8
tick,0x7ffdf681f424,21316787,0,0x0,8
tick,0x7ffdf681f424,21318696,0,0x0,8
tick,0x7ffdf681f424,21320790,0,0x0,8
tick,0x7ffdf681f424,21322780,0,0x0,8
tick,0x7ffdf681f424,21324768,0,0x0,8
tick,0x7ffdf681f424,21326768,0,0x0,8
tick,0x7ffdf681f424,21328757,0,0x0,8
tick,0x7ffdf681f424,21330746,0,0x0,8
tick,0x7ffdf681f424,21332747,0,0x0,8
tick,0x7ffdf681f424,21334745,0,0x0,8
tick,0x7ffdf681f424,21336736,0,0x0,8
tick,0x7ffdf681f424,21338620,0,0x0,8
tick,0x7ffdf681f424,21340556,0,0x0,8
tick,0x7ffdf681f424,21342528,0,0x0,8
tick,0x7ffdf681f424,21344593,0,0x0,8
tick,0x7ffdf681f424,21346657,0,0x0,8
tick,0x7ffdf681f424,21348665,0,0x0,8
tick,0x7ffdf681f424,21350681,0,0x0,8
tick,0x7ffdf681f424,21352561,0,0x0,8
tick,0x7ffdf681f424,21354683,0,0x0,8
tick,0x7ffdf681f424,21356650,0,0x0,8
tick,0x7ffdf681f424,21358640,0,0x0,8
tick,0x7ffdf681f424,21360528,0,0x0,8
tick,0x7ffdf681f424,21362623,0,0x0,8
tick,0x7ffdf681f424,21364617,0,0x0,8
tick,0x7ffdf681f424,21366603,0,0x0,8
tick,0x7ffdf681f424,21368505,0,0x0,8
tick,0x7ffdf681f424,21370596,0,0x0,8
tick,0x7ffdf681f424,21372506,0,0x0,8
tick,0x7ffdf681f424,21374615,0,0x0,8
tick,0x7ffdf681f424,21376594,0,0x0,8
tick,0x7ffdf681f424,21378579,0,0x0,8
tick,0x7ffdf681f424,21380586,0,0x0,8
tick,0x7ffdf681f424,21382556,0,0x0,8
tick,0x7ffdf681f424,21384571,0,0x0,8
tick,0x7ffdf681f424,21386598,0,0x0,8
tick,0x7ffdf681f424,21388559,0,0x0,8
tick,0x7ffdf681f424,21390544,0,0x0,8
tick,0x7ffdf681f424,21392597,0,0x0,8
tick,0x7ffdf681f424,21394528,0,0x0,8
tick,0x7ffdf681f424,21396538,0,0x0,8
tick,0x7ffdf681f424,21398517,0,0x0,8
tick,0x7ffdf681f424,21400535,0,0x0,8
tick,0x7ffdf681f424,21402507,0,0x0,8
tick,0x7ffdf681f424,21404522,0,0x0,8
tick,0x7ffdf681f424,21406496,0,0x0,8
tick,0x7ffdf681f424,21408505,0,0x0,8
tick,0x7ffdf681f424,21410413,0,0x0,8
tick,0x7ffdf681f424,21412498,0,0x0,8
tick,0x7ffdf681f424,21414530,0,0x0,8
tick,0x7ffdf681f424,21416484,0,0x0,8
tick,0x7ffdf681f424,21418480,0,0x0,8
tick,0x7ffdf681f424,21420464,0,0x0,8
tick,0x7ffdf681f424,21422471,0,0x0,8
tick,0x7ffdf681f424,21424465,0,0x0,8
tick,0x7ffdf681f424,21426474,0,0x0,8
tick,0x7ffdf681f424,21428496,0,0x0,8
tick,0x7ffdf681f424,21430484,0,0x0,8
tick,0x7ffdf681f424,21432415,0,0x0,8
tick,0x7ffdf681f424,21434486,0,0x0,8
tick,0x7ffdf681f424,21436480,0,0x0,8
tick,0x7ffdf681f424,21438476,0,0x0,8
tick,0x7ffdf681f424,21440459,0,0x0,8
tick,0x7ffdf681f424,21442453,0,0x0,8
tick,0x7ffdf681f424,21444464,0,0x0,8
tick,0x7ffdf681f424,21446435,0,0x0,8
tick,0x7ffdf681f424,21448433,0,0x0,8
tick,0x7ffdf681f424,21450438,0,0x0,8
tick,0x7ffdf681f424,21452432,0,0x0,8
tick,0x7ffdf681f424,21454425,0,0x0,8
tick,0x7ffdf681f424,21456424,0,0x0,8
tick,0x7ffdf681f424,21458422,0,0x0,8
tick,0x7ffdf681f424,21460287,0,0x0,8
tick,0x7ffdf681f424,21462421,0,0x0,8
tick,0x7ffdf681f424,21464386,0,0x0,8
tick,0x7ffdf681f424,21466392,0,0x0,8
tick,0x7ffdf681f424,21468385,0,0x0,8
tick,0x7ffdf681f424,21470379,0,0x0,8
tick,0x7ffdf681f424,21472370,0,0x0,8
tick,0x7ffdf681f424,21474372,0,0x0,8
tick,0x7ffdf681f424,21476363,0,0x0,8
tick,0x7ffdf681f424,21478354,0,0x0,8
tick,0x7ffdf681f424,21480291,0,0x0,8
tick,0x7ffdf681f424,21482213,0,0x0,8
tick,0x7ffdf681f424,21484354,0,0x0,8
tick,0x7ffdf681f424,21486327,0,0x0,8
tick,0x7ffdf681f424,21488260,0,0x0,8
tick,0x7ffdf681f424,21490222,0,0x0,8
tick,0x7ffdf681f424,21492126,0,0x0,8
tick,0x7ffdf681f424,21494124,0,0x0,8
tick,0x7ffdf681f424,21496209,0,0x0,8
tick,0x7ffdf681f424,21498167,0,0x0,8
tick,0x7ffdf681f424,21500174,0,0x0,8
tick,0x7ffdf681f424,21502127,0,0x0,8
tick,0x7ffdf681f424,21504160,0,0x0,8
tick,0x7ffdf681f424,21506156,0,0x0,8
tick,0x7ffdf681f424,21508191,0,0x0,8
tick,0x7ffdf681f424,21510251,0,0x0,8
tick,0x7ffdf681f424,21512273,0,0x0,8
tick,0x7ffdf681f424,21514223,0,0x0,8
tick,0x7ffdf681f424,21516149,0,0x0,8
tick,0x7ffdf681f424,21518123,0,0x0,8
tick,0x7ffdf681f424,21520177,0,0x0,8
tick,0x7ffdf681f424,21522145,0,0x0,8
tick,0x7ffdf681f424,21524167,0,0x0,8
tick,0x7ffdf681f424,21526158,0,0x0,8
tick,0x7ffdf681f424,21528157,0,0x0,8
tick,0x7ffdf681f424,21530093,0,0x0,8
tick,0x7ffdf681f424,21532072,0,0x0,8
tick,0x7ffdf681f424,21534124,0,0x0,8
tick,0x7ffdf681f424,21536085,0,0x0,8
tick,0x7ffdf681f424,21538089,0,0x0,8
tick,0x7ffdf681f424,21540133,0,0x0,8
tick,0x7ffdf681f424,21542068,0,0x0,8
tick,0x7ffdf681f424,21544083,0,0x0,8
tick,0x7ffdf681f424,21546173,0,0x0,8
tick,0x7ffdf681f424,21548167,0,0x0,8
tick,0x7ffdf681f424,21550231,0,0x0,8
tick,0x7ffdf681f424,21552085,0,0x0,8
tick,0x7ffdf681f424,21553211,0,0x0,8
tick,0x7ffdf681f424,21554967,0,0x0,8
tick,0x7ffdf681f424,21557102,0,0x0,8
tick,0x7ffdf681f424,21559042,0,0x0,8
tick,0x7ffdf681f424,21561073,0,0x0,8
tick,0x7ffdf681f424,21562988,0,0x0,8
tick,0x7ffdf681f424,21565063,0,0x0,8
tick,0x7ffdf681f424,21566979,0,0x0,8
tick,0x7ffdf681f424,21569034,0,0x0,8
tick,0x7ffdf681f424,21571068,0,0x0,8
tick,0x7ffdf681f424,21573032,0,0x0,8
tick,0x7ffdf681f424,21575032,0,0x0,8
tick,0x7ffdf681f424,21576281,0,0x0,8
tick,0x7ffdf681f424,21578239,0,0x0,8
tick,0x7ffdf681f424,21580248,0,0x0,8
tick,0x7ffdf681f424,21581440,0,0x0,8
tick,0x7ffdf681f424,21583458,0,0x0,8
tick,0x7ffdf681f424,21585524,0,0x0,8
tick,0x7ffdf681f424,21587443,0,0x0,8
tick,0x7ffdf681f424,21589475,0,0x0,8
tick,0x7ffdf681f424,21591498,0,0x0,8
tick,0x7ffdf681f424,21593462,0,0x0,8
tick,0x7ffdf681f424,21595496,0,0x0,8
tick,0x7ffdf681f424,21597371,0,0x0,8
tick,0x7ffdf681f424,21599439,0,0x0,8
tick,0x7ffdf681f424,21601394,0,0x0,8
tick,0x7ffdf681f424,21603378,0,0x0,8
tick,0x7ffdf681f424,21605394,0,0x0,8
tick,0x7ffdf681f424,21607399,0,0x0,8
tick,0x7ffdf681f424,21609529,0,0x0,8
tick,0x7ffdf681f424,21611485,0,0x0,8
tick,0x7ffdf681f424,21613490,0,0x0,8
tick,0x7ffdf681f424,21615423,0,0x0,8
tick,0x7ffdf681f424,21617489,0,0x0,8
tick,0x7ffdf681f424,21619467,0,0x0,8
tick,0x7ffdf681f424,21621476,0,0x0,8
tick,0x7ffdf681f424,21623441,0,0x0,8
tick,0x7ffdf681f424,21625424,0,0x0,8
tick,0x7ffdf681f424,21627396,0,0x0,8
tick,0x7ffdf681f424,21629425,0,0x0,8
tick,0x7ffdf681f424,21631573,0,0x0,8
tick,0x7ffdf681f424,21633484,0,0x0,8
tick,0x7ffdf681f424,21635432,0,0x0,8
tick,0x7ffdf681f424,21637448,0,0x0,8
tick,0x7ffdf681f424,21639419,0,0x0,8
tick,0x7ffdf681f424,21641342,0,0x0,8
tick,0x7ffdf681f424,21643289,0,0x0,8
tick,0x7ffdf681f424,21645289,0,0x0,8
tick,0x7ffdf681f424,21647284,0,0x0,8
tick,0x7ffdf681f424,21649265,0,0x0,8
tick,0x7ffdf681f424,21651335,0,0x0,8
tick,0x7ffdf681f424,21653221,0,0x0,8
tick,0x7ffdf681f424,21655207,0,0x0,8
tick,0x7ffdf681f424,21657250,0,0x0,8
tick,0x7ffdf681f424,21659256,0,0x0,8
tick,0x7ffdf681f424,21661224,0,0x0,8
tick,0x7ffdf681f424,21663274,0,0x0,8
tick,0x7ffdf681f424,21665297,0,0x0,8
tick,0x7ffdf681f424,21667340,0,0x0,8
tick,0x7ffdf681f424,21669287,0,0x0,8
tick,0x7ffdf681f424,21671309,0,0x0,8
tick,0x7ffdf681f424,21673338,0,0x0,8
tick,0x7ffdf681f424,21675327,0,0x0,8
tick,0x7ffdf681f424,21677268,0,0x0,8
tick,0x7ffdf681f424,21679224,0,0x0,8
tick,0x7ffdf681f424,21681301,0,0x0,8
tick,0x7ffdf681f424,21683263,0,0x0,8
tick,0x7ffdf681f424,21685202,0,0x0,8
tick,0x7ffdf681f424,21687276,0,0x0,8
tick,0x7ffdf681f424,21689276,0,0x0,8
tick,0x7ffdf681f424,21691277,0,0x0,8
tick,0x7ffdf681f424,21693257,0,0x0,8
tick,0x7ffdf681f424,21695238,0,0x0,8
tick,0x7ffdf681f424,21697241,0,0x0,8
tick,0x7ffdf681f424,21699253,0,0x0,8
tick,0x7ffdf681f424,21701229,0,0x0,8
tick,0x7ffdf681f424,21703247,0,0x0,8
tick,0x7ffdf681f424,21705213,0,0x0,8
tick,0x7ffdf681f424,21707221,0,0x0,8
tick,0x7ffdf681f424,21709209,0,0x0,8
tick,0x7ffdf681f424,21711208,0,0x0,8
tick,0x7ffdf681f424,21713206,0,0x0,8
tick,0x7ffdf681f424,21715187,0,0x0,8
tick,0x7ffdf681f424,21717207,0,0x0,8
tick,0x7ffdf681f424,21719204,0,0x0,8
tick,0x7ffdf681f424,21721174,0,0x0,8
tick,0x7ffdf681f424,21723168,0,0x0,8
tick,0x7ffdf681f424,21725192,0,0x0,8
tick,0x7ffdf681f424,21727186,0,0x0,8
tick,0x7ffdf681f424,21729086,0,0x0,8
tick,0x7ffdf681f424,21731170,0,0x0,8
tick,0x7ffdf681f424,21733111,0,0x0,8
tick,0x7ffdf681f424,21735063,0,0x0,8
tick,0x7ffdf681f424,21737076,0,0x0,8
tick,0x7ffdf681f424,21739103,0,0x0,8
tick,0x7ffdf681f424,21741142,0,0x0,8
tick,0x7ffdf681f424,21743108,0,0x0,8
tick,0x7ffdf681f424,21745106,0,0x0,8
tick,0x7ffdf681f424,21747118,0,0x0,8
tick,0x7ffdf681f424,21749143,0,0x0,8
tick,0x7ffdf681f424,21751089,0,0x0,8
tick,0x7ffdf681f424,21753048,0,0x0,8
tick,0x7ffdf681f424,21755075,0,0x0,8
tick,0x7ffdf681f424,21757041,0,0x0,8
tick,0x7ffdf681f424,21759043,0,0x0,8
tick,0x7ffdf681f424,21760991,0,0x0,8
tick,0x7ffdf681f424,21763050,0,0x0,8
tick,0x7ffdf681f424,21765012,0,0x0,8
tick,0x7ffdf681f424,21767026,0,0x0,8
tick,0x7ffdf681f424,21768959,0,0x0,8
tick,0x7ffdf681f424,21770989,0,0x0,8
tick,0x7ffdf681f424,21773029,0,0x0,8
tick,0x7ffdf681f424,21775006,0,0x0,8
tick,0x7ffdf681f424,21776985,0,0x0,8
tick,0x7ffdf681f424,21779021,0,0x0,8
tick,0x7ffdf681f424,21780988,0,0x0,8
tick,0x7ffdf681f424,21782972,0,0x0,8
tick,0x7ffdf681f424,21785034,0,0x0,8
tick,0x7ffdf681f424,21786994,0,0x0,8
tick,0x7ffdf681f424,21788999,0,0x0,8
tick,0x7ffdf681f424,21790987,0,0x0,8
tick,0x7ffdf681f424,21792968,0,0x0,8
tick,0x7ffdf681f424,21794999,0,0x0,8
tick,0x7ffdf681f424,21796994,0,0x0,8
tick,0x7ffdf681f424,21798980,0,0x0,8
tick,0x7ffdf681f424,21800992,0,0x0,8
tick,0x7ffdf681f424,21802952,0,0x0,8
tick,0x7ffdf681f424,21804974,0,0x0,8
tick,0x7ffdf681f424,21806940,0,0x0,8
tick,0x7ffdf681f424,21808955,0,0x0,8
tick,0x7ffdf681f424,21810921,0,0x0,8
tick,0x7ffdf681f424,21812944,0,0x0,8
tick,0x7ffdf681f424,21814945,0,0x0,8
tick,0x7ffdf681f424,21816919,0,0x0,8
tick,0x7ffdf681f424,21818966,0,0x0,8
tick,0x7ffdf681f424,21820920,0,0x0,8
tick,0x7ffdf681f424,21822946,0,0x0,8
tick,0x7ffdf681f424,21824946,0,0x0,8
tick,0x7ffdf681f424,21826912,0,0x0,8
tick,0x7ffdf681f424,21828892,0,0x0,8
tick,0x7ffdf681f424,21830909,0,0x0,8
tick,0x7ffdf681f424,21832906,0,0x0,8
tick,0x7ffdf681f424,21834868,0,0x0,8
tick,0x7ffdf681f424,21836887,0,0x0,8
tick,0x7ffdf681f424,21838892,0,0x0,8
tick,0x7ffdf681f424,21840857,0,0x0,8
tick,0x7ffdf681f424,21842882,0,0x0,8
tick,0x7ffdf681f424,21844849,0,0x0,8
tick,0x7ffdf681f424,21846914,0,0x0,8
tick,0x7ffdf681f424,21848832,0,0x0,8
tick,0x7ffdf681f424,21850859,0,0x0,8
tick,0x7ffdf681f424,21852863,0,0x0,8
tick,0x7ffdf681f424,21854785,0,0x0,8
tick,0x7ffdf681f424,21856848,0,0x0,8
tick,0x7ffdf681f424,21858819,0,0x0,8
tick,0x7ffdf681f424,21860807,0,0x0,8
tick,0x7ffdf681f424,21862833,0,0x0,8
tick,0x7ffdf681f424,21864820,0,0x0,8
tick,0x7ffdf681f424,21866807,0,0x0,8
tick,0x7ffdf681f424,21868736,0,0x0,8
tick,0x7ffdf681f424,21870778,0,0x0,8
tick,0x7ffdf681f424,21872794,0,0x0,8
tick,0x7ffdf681f424,21874790,0,0x0,8
tick,0x7ffdf681f424,21876755,0,0x0,8
tick,0x7ffdf681f424,21878788,0,0x0,8
tick,0x7ffdf681f424,21880755,0,0x0,8
tick,0x7ffdf681f424,21882774,0,0x0,8
tick,0x7ffdf681f424,21884731,0,0x0,8
tick,0x7ffdf681f424,21886758,0,0x0,8
tick,0x7ffdf681f424,21888737,0,0x0,8
tick,0x7ffdf681f424,21890673,0,0x0,8
tick,0x7ffdf681f424,21892771,0,0x0,8
tick,0x7ffdf681f424,21894722,0,0x0,8
tick,0x7ffdf681f424,21896728,0,0x0,8
tick,0x7ffdf681f424,21898727,0,0x0,8
tick,0x7ffdf681f424,21900702,0,0x0,8
tick,0x7ffdf681f424,21902713,0,0x0,8
tick,0x7ffdf681f424,21904723,0,0x0,8
tick,0x7ffdf681f424,21906715,0,0x0,8
tick,0x7ffdf681f424,21908701,0,0x0,8
tick,0x7ffdf681f424,21910697,0,0x0,8
tick,0x7ffdf681f424,21912714,0,0x0,8
tick,0x7ffdf681f424,21914652,0,0x0,8
tick,0x7ffdf681f424,21916680,0,0x0,8
tick,0x7ffdf681f424,21918660,0,0x0,8
tick,0x7ffdf681f424,21920674,0,0x0,8
tick,0x7ffdf681f424,21922608,0,0x0,8
tick,0x7ffdf681f424,21924669,0,0x0,8
tick,0x7ffdf681f424,21926634,0,0x0,8
tick,0x7ffdf681f424,21928634,0,0x0,8
tick,0x7ffdf681f424,21930616,0,0x0,8
tick,0x7ffdf681f424,21932609,0,0x0,8
tick,0x7ffdf681f424,21934586,0,0x0,8
tick,0x7ffdf681f424,21936614,0,0x0,8
tick,0x7ffdf681f424,21938597,0,0x0,8
tick,0x7ffdf681f424,21940608,0,0x0,8
tick,0x7ffdf681f424,21942615,0,0x0,8
tick,0x7ffdf681f424,21944575,0,0x0,8
tick,0x7ffdf681f424,21946614,0,0x0,8
tick,0x7ffdf681f424,21948476,0,0x0,8
tick,0x7ffdf681f424,21950523,0,0x0,8
tick,0x7ffdf681f424,21952541,0,0x0,8
tick,0x7ffdf681f424,21954576,0,0x0,8
tick,0x7ffdf681f424,21956470,0,0x0,8
tick,0x7ffdf681f424,21958574,0,0x0,8
tick,0x7ffdf681f424,21960443,0,0x0,8
tick,0x7ffdf681f424,21962529,0,0x0,8
tick,0x7ffdf681f424,21964528,0,0x0,8
tick,0x7ffdf681f424,21966531,0,0x0,8
tick,0x7ffdf681f424,21968457,0,0x0,8
tick,0x7ffdf681f424,21970439,0,0x0,8
tick,0x7ffdf681f424,21972412,0,0x0,8
tick,0x7ffdf681f424,21974526,0,0x0,8
tick,0x7ffdf681f424,21976491,0,0x0,8
tick,0x7ffdf681f424,21978370,0,0x0,8
tick,0x7ffdf681f424,21980403,0,0x0,8
tick,0x7ffdf681f424,21982364,0,0x0,8
tick,0x7ffdf681f424,21984360,0,0x0,8
tick,0x7ffdf681f424,21986358,0,0x0,8
tick,0x7ffdf681f424,21988370,0,0x0,8
tick,0x7ffdf681f424,21990367,0,0x0,8
tick,0x7ffdf681f424,21992410,0,0x0,8
tick,0x7ffdf681f424,21994417,0,0x0,8
tick,0x7ffdf681f424,21996345,0,0x0,8
tick,0x7ffdf681f424,21998320,0,0x0,8
tick,0x7ffdf681f424,22000347,0,0x0,8
tick,0x7ffdf681f424,22002422,0,0x0,8
tick,0x7ffdf681f424,22004328,0,0x0,8
tick,0x7ffdf681f424,22006290,0,0x0,8
tick,0x7ffdf681f424,22008296,0,0x0,8
tick,0x7ffdf681f424,22010329,0,0x0,8
tick,0x7ffdf681f424,22012351,0,0x0,8
tick,0x7ffdf681f424,22014323,0,0x0,8
tick,0x7ffdf681f424,22016349,0,0x0,8
tick,0x7ffdf681f424,22018365,0,0x0,8
tick,0x7ffdf681f424,22020339,0,0x0,8
tick,0x7ffdf681f424,22022373,0,0x0,8
tick,0x7ffdf681f424,22024352,0,0x0,8
tick,0x7ffdf681f424,22026335,0,0x0,8
tick,0x7ffdf681f424,22028303,0,0x0,8
tick,0x7ffdf681f424,22030339,0,0x0,8
tick,0x7ffdf681f424,22032310,0,0x0,8
tick,0x7ffdf681f424,22034305,0,0x0,8
tick,0x7ffdf681f424,22036318,0,0x0,8
tick,0x7ffdf681f424,22038294,0,0x0,8
tick,0x7ffdf681f424,22040288,0,0x0,8
tick,0x7ffdf681f424,22042274,0,0x0,8
tick,0x7ffdf681f424,22044239,0,0x0,8
tick,0x7ffdf681f424,22046244,0,0x0,8
tick,0x7ffdf681f424,22048264,0,0x0,8
tick,0x7ffdf681f424,22050240,0,0x0,8
tick,0x7ffdf681f424,22052243,0,0x0,8
tick,0x7ffdf681f424,22054271,0,0x0,8
tick,0x7ffdf681f424,22056257,0,0x0,8
tick,0x7ffdf681f424,22058283,0,0x0,8
tick,0x7ffdf681f424,22060283,0,0x0,8
tick,0x7ffdf681f424,22062256,0,0x0,8
tick,0x7ffdf681f424,22064276,0,0x0,8
tick,0x7ffdf681f424,22066290,0,0x0,8
tick,0x7ffdf681f424,22068238,0,0x0,8
tick,0x7ffdf681f424,22070285,0,0x0,8
tick,0x7ffdf681f424,22072236,0,0x0,8
tick,0x7ffdf681f424,22074258,0,0x0,8
tick,0x7ffdf681f424,22076228,0,0x0,8
tick,0x7ffdf681f424,22078250,0,0x0,8
tick,0x7ffdf681f424,22080239,0,0x0,8
tick,0x7ffdf681f424,22082224,0,0x0,8
tick,0x7ffdf681f424,22084212,0,0x0,8
tick,0x7ffdf681f424,22086191,0,0x0,8
tick,0x7ffdf681f424,22088146,0,0x0,8
tick,0x7ffdf681f424,22090192,0,0x0,8
tick,0x7ffdf681f424,22092191,0,0x0,8
tick,0x7ffdf681f424,22094136,0,0x0,8
tick,0x7ffdf681f424,22096164,0,0x0,8
tick,0x7ffdf681f424,22098139,0,0x0,8
tick,0x7ffdf681f424,22100153,0,0x0,8
tick,0x7ffdf681f424,22102129,0,0x0,8
tick,0x7ffdf681f424,22104145,0,0x0,8
tick,0x7ffdf681f424,22106117,0,0x0,8
tick,0x7ffdf681f424,22108133,0,0x0,8
tick,0x7ffdf681f424,22110129,0,0x0,8
tick,0x7ffdf681f424,22112111,0,0x0,8
tick,0x7ffdf681f424,22114137,0,0x0,8
tick,0x7ffdf681f424,22116083,0,0x0,8
tick,0x7ffdf681f424,22118094,0,0x0,8
tick,0x7ffdf681f424,22120067,0,0x0,8
tick,0x7ffdf681f424,22122111,0,0x0,8
tick,0x7ffdf681f424,22124109,0,0x0,8
tick,0x7ffdf681f424,22126121,0,0x0,8
tick,0x7ffdf681f424,22128089,0,0x0,8
tick,0x7ffdf681f424,22130061,0,0x0,8
tick,0x7ffdf681f424,22132091,0,0x0,8
tick,0x7ffdf681f424,22134081,0,0x0,8
tick,0x7ffdf681f424,22136041,0,0x0,8
tick,0x7ffdf681f424,22138063,0,0x0,8
tick,0x7ffdf681f424,22140079,0,0x0,8
tick,0x7ffdf681f424,22142088,0,0x0,8
tick,0x7ffdf681f424,22144056,0,0x0,8
tick,0x7ffdf681f424,22146046,0,0x0,8
tick,0x7ffdf681f424,22148051,0,0x0,8
tick,0x7ffdf681f424,22150019,0,0x0,8
tick,0x7ffdf681f424,22152025,0,0x0,8
tick,0x7ffdf681f424,22154053,0,0x0,8
tick,0x7ffdf681f424,22156031,0,0x0,8
tick,0x7ffdf681f424,22158024,0,0x0,8
tick,0x7ffdf681f424,22160004,0,0x0,8
tick,0x7ffdf681f424,22162002,0,0x0,8
tick,0x7ffdf681f424,22164034,0,0x0,8
tick,0x7ffdf681f424,22165991,0,0x0,8
tick,0x7ffdf681f424,22168006,0,0x0,8
tick,0x7ffdf681f424,22169970,0,0x0,8
tick,0x7ffdf681f424,22171994,0,0x0,8
tick,0x7ffdf681f424,22174010,0,0x0,8
tick,0x7ffdf681f424,22175957,0,0x0,8
tick,0x7ffdf681f424,22178002,0,0x0,8
tick,0x7ffdf681f424,22179926,0,0x0,8
tick,0x7ffdf681f424,22181877,0,0x0,8
tick,0x7ffdf681f424,22183936,0,0x0,8
tick,0x7ffdf681f424,22185942,0,0x0,8
tick,0x7ffdf681f424,22187931,0,0x0,8
tick,0x7ffdf681f424,22189922,0,0x0,8
tick,0x7ffdf681f424,22191858,0,0x0,8
tick,0x7ffdf681f424,22193902,0,0x0,8
tick,0x7ffdf681f424,22195887,0,0x0,8
tick,0x7ffdf681f424,22197903,0,0x0,8
tick,0x7ffdf681f424,22199836,0,0x0,8
tick,0x7ffdf681f424,22201892,0,0x0,8
tick,0x7ffdf681f424,22203891,0,0x0,8
tick,0x7ffdf681f424,22205884,0,0x0,8
tick,0x7ffdf681f424,22207840,0,0x0,8
tick,0x7ffdf681f424,22209899,0,0x0,8
tick,0x7ffdf681f424,22211871,0,0x0,8
tick,0x7ffdf681f424,22213868,0,0x0,8
tick,0x7ffdf681f424,22215855,0,0x0,8
tick,0x7ffdf681f424,22217858,0,0x0,8
tick,0x7ffdf681f424,22219820,0,0x0,8
tick,0x7ffdf681f424,22221841,0,0x0,8
tick,0x7ffdf681f424,22223863,0,0x0,8
tick,0x7ffdf681f424,22225816,0,0x0,8
tick,0x7ffdf681f424,22227772,0,0x0,8
tick,0x7ffdf681f424,22229704,0,0x0,8
tick,0x7ffdf681f424,22231724,0,0x0,8
tick,0x7ffdf681f424,22233723,0,0x0,8
tick,0x7ffdf681f424,22235698,0,0x0,8
tick,0x7ffdf681f424,22237717,0,0x0,8
tick,0x7ffdf681f424,22239710,0,0x0,8
tick,0x7ffdf681f424,22241743,0,0x0,8
tick,0x7ffdf681f424,22243694,0,0x0,8
tick,0x7ffdf681f424,22245771,0,0x0,8
tick,0x7ffdf681f424,22247812,0,0x0,8
tick,0x7ffdf681f424,22249801,0,0x0,8
tick,0x7ffdf681f424,22251797,0,0x0,8
tick,0x7ffdf681f424,22253761,0,0x0,8
tick,0x7ffdf681f424,22255771,0,0x0,8
tick,0x7ffdf681f424,22257769,0,0x0,8
tick,0x7ffdf681f424,22259766,0,0x0,8
tick,0x7ffdf681f424,22261778,0,0x0,8
tick,0x7ffdf681f424,22263745,0,0x0,8
tick,0x7ffdf681f424,22265732,0,0x0,8
tick,0x7ffdf681f424,22267775,0,0x0,8
tick,0x7ffdf681f424,22269706,0,0x0,8
tick,0x7ffdf681f424,22271737,0,0x0,8
tick,0x7ffdf681f424,22273723,0,0x0,8
tick,0x7ffdf681f424,22275687,0,0x0,8
tick,0x7ffdf681f424,22277700,0,0x0,8
tick,0x7ffdf681f424,22279696,0,0x0,8
tick,0x7ffdf681f424,22281704,0,0x0,8
tick,0x7ffdf681f424,22283743,0,0x0,8
tick,0x7ffdf681f424,22285688,0,0x0,8
tick,0x7ffdf681f424,22287682,0,0x0,8
tick,0x7ffdf681f424,22289675,0,0x0,8
tick,0x7ffdf681f424,22291671,0,0x0,8
tick,0x7ffdf681f424,22293703,0,0x0,8
tick,0x7ffdf681f424,22295675,0,0x0,8
tick,0x7ffdf681f424,22297670,0,0x0,8
tick,0x7ffdf681f424,22299652,0,0x0,8
tick,0x7ffdf681f424,22301650,0,0x0,8
tick,0x7ffdf681f424,22303661,0,0x0,8
tick,0x7ffdf681f424,22305638,0,0x0,8
tick,0x7ffdf681f424,22307637,0,0x0,8
tick,0x7ffdf681f424,22309637,0,0x0,8
tick,0x7ffdf681f424,22311626,0,0x0,8
tick,0x7ffdf681f424,22313613,0,0x0,8
tick,0x7ffdf681f424,22315687,0,0x0,8
tick,0x7ffdf681f424,22317585,0,0x0,8
tick,0x7ffdf681f424,22319604,0,0x0,8
tick,0x7ffdf681f424,22321572,0,0x0,8
tick,0x7ffdf681f424,22323502,0,0x0,8
tick,0x7ffdf681f424,22325557,0,0x0,8
tick,0x7ffdf681f424,22327564,0,0x0,8
tick,0x7ffdf681f424,22329497,0,0x0,8
tick,0x7ffdf681f424,22331486,0,0x0,8
tick,0x7ffdf681f424,22333539,0,0x0,8
tick,0x7ffdf681f424,22335579,0,0x0,8
tick,0x7ffdf681f424,22337570,0,0x0,8
tick,0x7ffdf681f424,22339551,0,0x0,8
tick,0x7ffdf681f424,22341545,0,0x0,8
tick,0x7ffdf681f424,22343551,0,0x0,8
tick,0x7ffdf681f424,22345545,0,0x0,8
tick,0x7ffdf681f424,22347519,0,0x0,8
tick,0x7ffdf681f424,22349523,0,0x0,8
tick,0x7ffdf681f424,22351491,0,0x0,8
tick,0x7ffdf681f424,22353517,0,0x0,8
tick,0x7ffdf681f424,22355523,0,0x0,8
tick,0x7ffdf681f424,22357515,0,0x0,8
tick,0x7ffdf681f424,22359499,0,0x0,8
tick,0x7ffdf681f424,22361491,0,0x0,8
tick,0x7ffdf681f424,22363477,0,0x0,8
tick,0x7ffdf681f424,22365419,0,0x0,8
tick,0x7ffdf681f424,22367391,0,0x0,8
tick,0x7ffdf681f424,22369391,0,0x0,8
tick,0x7ffdf681f424,22371432,0,0x0,8
tick,0x7ffdf681f424,22373457,0,0x0,8
tick,0x7ffdf681f424,22375426,0,0x0,8
tick,0x7ffdf681f424,22377449,0,0x0,8
tick,0x7ffdf681f424,22379469,0,0x0,8
tick,0x7ffdf681f424,22381440,0,0x0,8
tick,0x7ffdf681f424,22383430,0,0x0,8
tick,0x7ffdf681f424,22385431,0,0x0,8
tick,0x7ffdf681f424,22387442,0,0x0,8
tick,0x7ffdf681f424,22389421,0,0x0,8
tick,0x7ffdf681f424,22391422,0,0x0,8
tick,0x7ffdf681f424,22393408,0,0x0,8
tick,0x7ffdf681f424,22395372,0,0x0,8
tick,0x7ffdf681f424,22397375,0,0x0,8
tick,0x7ffdf681f424,22399368,0,0x0,8
tick,0x7ffdf681f424,22401433,0,0x0,8
tick,0x7ffdf681f424,22403382,0,0x0,8
tick,0x7ffdf681f424,22405376,0,0x0,8
tick,0x7ffdf681f424,22407374,0,0x0,8
tick,0x7ffdf681f424,22409362,0,0x0,8
tick,0x7ffdf681f424,22411361,0,0x0,8
tick,0x7ffdf681f424,22413352,0,0x0,8
tick,0x7ffdf681f424,22415358,0,0x0,8
tick,0x7ffdf681f424,22417343,0,0x0,8
tick,0x7ffdf681f424,22419375,0,0x0,8
tick,0x7ffdf681f424,22421332,0,0x0,8
tick,0x7ffdf681f424,22423369,0,0x0,8
tick,0x7ffdf681f424,22425329,0,0x0,8
tick,0x7ffdf681f424,22427348,0,0x0,8
tick,0x7ffdf681f424,22429302,0,0x0,8
tick,0x7ffdf681f424,22431300,0,0x0,8
tick,0x7ffdf681f424,22433289,0,0x0,8
tick,0x7ffdf681f424,22435289,0,0x0,8
tick,0x7ffdf681f424,22437281,0,0x0,8
tick,0x7ffdf681f424,22439278,0,0x0,8
tick,0x7ffdf681f424,22441272,0,0x0,8
tick,0x7ffdf681f424,22443262,0,0x0,8
tick,0x7ffdf681f424,22445248,0,0x0,8
tick,0x7ffdf681f424,22447284,0,0x0,8
tick,0x7ffdf681f424,22449242,0,0x0,8
tick,0x7ffdf681f424,22451240,0,0x0,8
tick,0x7ffdf681f424,22453248,0,0x0,8
tick,0x7ffdf681f424,22455240,0,0x0,8
tick,0x7ffdf681f424,22457233,0,0x0,8
tick,0x7ffdf681f424,22459236,0,0x0,8
tick,0x7ffdf681f424,22461237,0,0x0,8
tick,0x7ffdf681f424,22463210,0,0x0,8
tick,0x7ffdf681f424,22465214,0,0x0,8
tick,0x7ffdf681f424,22467206,0,0x0,8
tick,0x7ffdf681f424,22469204,0,0x0,8
tick,0x7ffdf681f424,22471156,0,0x0,8
tick,0x7ffdf681f424,22473196,0,0x0,8
tick,0x7ffdf681f424,22475184,0,0x0,8
tick,0x7ffdf681f424,22477182,0,0x0,8
tick,0x7ffdf681f424,22479177,0,0x0,8
tick,0x7ffdf681f424,22481173,0,0x0,8
tick,0x7ffdf681f424,22483160,0,0x0,8
tick,0x7ffdf681f424,22485145,0,0x0,8
tick,0x7ffdf681f424,22487125,0,0x0,8
tick,0x7ffdf681f424,22489122,0,0x0,8
tick,0x7ffdf681f424,22491107,0,0x0,8
tick,0x7ffdf681f424,22493132,0,0x0,8
tick,0x7ffdf681f424,22495134,0,0x0,8
tick,0x7ffdf681f424,22497146,0,0x0,8
tick,0x7ffdf681f424,22499117,0,0x0,8
tick,0x7ffdf681f424,22501122,0,0x0,8
tick,0x7ffdf681f424,22503111,0,0x0,8
tick,0x7ffdf681f424,22505098,0,0x0,8
tick,0x7ffdf681f424,22507101,0,0x0,8
tick,0x7ffdf681f424,22509095,0,0x0,8
tick,0x7ffdf681f424,22511131,0,0x0,8
tick,0x7ffdf681f424,22513079,0,0x0,8
tick,0x7ffdf681f424,22515076,0,0x0,8
tick,0x7ffdf681f424,22517055,0,0x0,8
tick,0x7ffdf681f424,22519061,0,0x0,8
tick,0x7ffdf681f424,22521058,0,0x0,8
tick,0x7ffdf681f424,22523050,0,0x0,8
tick,0x7ffdf681f424,22525029,0,0x0,8
tick,0x7ffdf681f424,22527001,0,0x0,8
tick,0x7ffdf681f424,22529024,0,0x0,8
tick,0x7ffdf681f424,22531031,0,0x0,8
tick,0x7ffdf681f424,22533082,0,0x0,8
tick,0x7ffdf681f424,22535027,0,0x0,8
tick,0x7ffdf681f424,22537019,0,0x0,8
tick,0x7ffdf681f424,22539012,0,0x0,8
tick,0x7ffdf681f424,22541011,0,0x0,8
tick,0x7ffdf681f424,22542974,0,0x0,8
tick,0x7ffdf681f424,22544921,0,0x0,8
tick,0x7ffdf681f424,22546921,0,0x0,8
tick,0x7ffdf681f424,22548977,0,0x0,8
tick,0x7ffdf681f424,22550979,0,0x0,8
tick,0x7ffdf681f424,22552937,0,0x0,8
tick,0x7ffdf681f424,22554975,0,0x0,8
tick,0x7ffdf681f424,22556962,0,0x0,8
tick,0x7ffdf681f424,22558966,0,0x0,8
tick,0x7ffdf681f424,22560900,0,0x0,8
tick,0x7ffdf681f424,22562951,0,0x0,8
tick,0x7ffdf681f424,22564821,0,0x0,8
tick,0x7ffdf681f424,22565873,0,0x0,8
tick,0x7ffdf681f424,22567910,0,0x0,8
tick,0x7ffdf681f424,22569878,0,0x0,8
tick,0x7ffdf681f424,22571906,0,0x0,8
tick,0x7ffdf681f424,22573865,0,0x0,8
tick,0x7ffdf681f424,22575925,0,0x0,8
tick,0x7ffdf681f424,22577889,0,0x0,8
tick,0x7ffdf681f424,22579852,0,0x0,8
tick,0x7ffdf681f424,22581886,0,0x0,8
tick,0x7ffdf681f424,22583932,0,0x0,8
tick,0x7ffdf681f424,22585852,0,0x0,8
tick,0x7ffdf681f424,22587811,0,0x0,8
tick,0x7ffdf681f424,22589748,0,0x0,8
tick,0x7ffdf681f424,22591767,0,0x0,8
tick,0x7ffdf681f424,22593764,0,0x0,8
tick,0x7ffdf681f424,22595774,0,0x0,8
tick,0x7ffdf681f424,22597822,0,0x0,8
tick,0x7ffdf681f424,22599803,0,0x0,8
tick,0x7ffdf681f424,22601815,0,0x0,8
tick,0x7ffdf681f424,22603851,0,0x0,8
tick,0x7ffdf681f424,22605832,0,0x0,8
tick,0x7ffdf681f424,22607855,0,0x0,8
tick,0x7ffdf681f424,22609864,0,0x0,8
tick,0x7ffdf681f424,22611828,0,0x0,8
tick,0x7ffdf681f424,22613831,0,0x0,8
tick,0x7ffdf681f424,22615860,0,0x0,8
tick,0x7ffdf681f424,22617859,0,0x0,8
tick,0x7ffdf681f424,22619715,0,0x0,8
tick,0x7ffdf681f424,22621732,0,0x0,8
tick,0x7ffdf681f424,22623739,0,0x0,8
tick,0x7ffdf681f424,22625721,0,0x0,8
tick,0x7ffdf681f424,22627780,0,0x0,8
tick,0x7ffdf681f424,22629707,0,0x0,8
tick,0x7ffdf681f424,22631706,0,0x0,8
tick,0x7ffdf681f424,22633818,0,0x0,8
tick,0x7ffdf681f424,22635773,0,0x0,8
tick,0x7ffdf681f424,22637809,0,0x0,8
tick,0x7ffdf681f424,22639771,0,0x0,8
tick,0x7ffdf681f424,22641833,0,0x0,8
tick,0x7ffdf681f424,22643658,0,0x0,8
tick,0x7ffdf681f424,22645773,0,0x0,8
tick,0x7ffdf681f424,22647811,0,0x0,8
tick,0x7ffdf681f424,22649840,0,0x0,8
tick,0x7ffdf681f424,22651879,0,0x0,8
tick,0x7ffdf681f424,22653846,0,0x0,8
tick,0x7ffdf681f424,22655729,0,0x0,8
tick,0x7ffdf681f424,22657720,0,0x0,8
tick,0x7ffdf681f424,22659676,0,0x0,8
tick,0x7ffdf681f424,22661620,0,0x0,8
tick,0x7ffdf681f424,22663653,0,0x0,8
tick,0x7ffdf681f424,22665611,0,0x0,8
tick,0x7ffdf681f424,22667622,0,0x0,8
tick,0x7ffdf681f424,22669604,0,0x0,8
tick,0x7ffdf681f424,22671639,0,0x0,8
tick,0x7ffdf681f424,22673638,0,0x0,8
tick,0x7ffdf681f424,22675661,0,0x0,8
tick,0x7ffdf681f424,22677670,0,0x0,8
tick,0x7ffdf681f424,22679658,0,0x0,8
tick,0x7ffdf681f424,22681639,0,0x0,8
tick,0x7ffdf681f424,22683684,0,0x0,8
tick,0x7ffdf681f424,22685528,0,0x0,8
tick,0x7ffdf681f424,22687744,0,0x0,8
tick,0x7ffdf681f424,22689716,0,0x0,8
tick,0x7ffdf681f424,22691671,0,0x0,8
tick,0x7ffdf681f424,22693750,0,0x0,8
tick,0x7ffdf681f424,22695611,0,0x0,8
tick,0x7ffdf681f424,22697654,0,0x0,8
tick,0x7ffdf681f424,22699653,0,0x0,8
tick,0x7ffdf681f424,22701768,0,0x0,8
tick,0x7ffdf681f424,22703590,0,0x0,8
tick,0x7ffdf681f424,22705699,0,0x0,8
tick,0x7ffdf681f424,22706879,0,0x0,8
tick,0x7ffdf681f424,22708822,0,0x0,8
tick,0x7ffdf681f424,22710769,0,0x0,8
tick,0x7ffdf681f424,22712803,0,0x0,8
tick,0x7ffdf681f424,22714811,0,0x0,8
tick,0x7ffdf681f424,22716778,0,0x0,8
tick,0x7ffdf681f424,22718706,0,0x0,8
tick,0x7ffdf681f424,22720671,0,0x0,8
tick,0x7ffdf681f424,22722696,0,0x0,8
tick,0x7ffdf681f424,22724661,0,0x0,8
tick,0x7ffdf681f424,22726694,0,0x0,8
tick,0x7ffdf681f424,22728740,0,0x0,8
tick,0x7ffdf681f424,22730686,0,0x0,8
tick,0x7ffdf681f424,22732674,0,0x0,8
tick,0x7ffdf681f424,22734627,0,0x0,8
tick,0x7ffdf681f424,22736641,0,0x0,8
tick,0x7ffdf681f424,22738759,0,0x0,8
tick,0x7ffdf681f424,22740695,0,0x0,8
tick,0x7ffdf681f424,22742784,0,0x0,8
tick,0x7ffdf681f424,22744625,0,0x0,8
tick,0x7ffdf681f424,22746621,0,0x0,8
tick,0x7ffdf681f424,22748720,0,0x0,8
tick,0x7ffdf681f424,22750733,0,0x0,8
tick,0x7ffdf681f424,22752702,0,0x0,8
tick,0x7ffdf681f424,22754742,0,0x0,8
tick,0x7ffdf681f424,22755932,0,0x0,8
tick,0x7ffdf681f424,22757818,0,0x0,8
tick,0x7ffdf681f424,22759836,0,0x0,8
tick,0x7ffdf681f424,22761802,0,0x0,8
tick,0x7ffdf681f424,22763779,0,0x0,8
tick,0x7ffdf681f424,22765747,0,0x0,8
tick,0x7ffdf681f424,22767889,0,0x0,8
tick,0x7ffdf681f424,22769793,0,0x0,8
tick,0x7ffdf681f424,22771670,0,0x0,8
tick,0x7ffdf681f424,22773808,0,0x0,8
tick,0x7ffdf681f424,22775805,0,0x0,8
tick,0x7ffdf681f424,22777727,0,0x0,8
tick,0x7ffdf681f424,22779793,0,0x0,8
tick,0x7ffdf681f424,22781818,0,0x0,8
tick,0x7ffdf681f424,22783793,0,0x0,8
tick,0x7ffdf681f424,22785722,0,0x0,8
tick,0x7ffdf681f424,22787784,0,0x0,8
tick,0x7ffdf681f424,22789822,0,0x0,8
tick,0x7ffdf681f424,22791758,0,0x0,8
tick,0x7ffdf681f424,22793791,0,0x0,8
tick,0x7ffdf681f424,22795690,0,0x0,8
tick,0x7ffdf681f424,22797795,0,0x0,8
tick,0x7ffdf681f424,22799783,0,0x0,8
tick,0x7ffdf681f424,22801789,0,0x0,8
tick,0x7ffdf681f424,22803785,0,0x0,8
tick,0x7ffdf681f424,22805762,0,0x0,8
tick,0x7ffdf681f424,22807768,0,0x0,8
tick,0x7ffdf681f424,22809758,0,0x0,8
tick,0x7ffdf681f424,22811779,0,0x0,8
tick,0x7ffdf681f424,22813676,0,0x0,8
tick,0x7ffdf681f424,22815742,0,0x0,8
tick,0x7ffdf681f424,22817734,0,0x0,8
tick,0x7ffdf681f424,22819740,0,0x0,8
tick,0x7ffdf681f424,22821726,0,0x0,8
tick,0x7ffdf681f424,22823716,0,0x0,8
tick,0x7ffdf681f424,22825727,0,0x0,8
tick,0x7ffdf681f424,22827703,0,0x0,8
tick,0x7ffdf681f424,22829715,0,0x0,8
tick,0x7ffdf681f424,22831707,0,0x0,8
tick,0x7ffdf681f424,22833723,0,0x0,8
tick,0x7ffdf681f424,22835587,0,0x0,8
tick,0x7ffdf681f424,22837600,0,0x0,8
tick,0x7ffdf681f424,22839682,0,0x0,8
tick,0x7ffdf681f424,22841678,0,0x0,8
tick,0x7ffdf681f424,22843674,0,0x0,8
tick,0x7ffdf681f424,22845669,0,0x0,8
tick,0x7ffdf681f424,22847670,0,0x0,8
tick,0x7ffdf681f424,22849546,0,0x0,8
tick,0x7ffdf681f424,22851650,0,0x0,8
tick,0x7ffdf681f424,22853641,0,0x0,8
tick,0x7ffdf681f424,22855680,0,0x0,8
tick,0x7ffdf681f424,22857638,0,0x0,8
tick,0x7ffdf681f424,22859628,0,0x0,8
tick,0x7ffdf681f424,22861627,0,0x0,8
tick,0x7ffdf681f424,22863623,0,0x0,8
tick,0x7ffdf681f424,22865619,0,0x0,8
tick,0x7ffdf681f424,22867609,0,0x0,8
tick,0x7ffdf681f424,22869620,0,0x0,8
tick,0x7ffdf681f424,22871596,0,0x0,8
tick,0x7ffdf681f424,22873595,0,0x0,8
tick,0x7ffdf681f424,22875583,0,0x0,8
tick,0x7ffdf681f424,22877588,0,0x0,8
tick,0x7ffdf681f424,22879567,0,0x0,8
tick,0x7ffdf681f424,22881566,0,0x0,8
tick,0x7ffdf681f424,22883556,0,0x0,8
tick,0x7ffdf681f424,22885484,0,0x0,8
tick,0x7ffdf681f424,22887583,0,0x0,8
tick,0x7ffdf681f424,22889475,0,0x0,8
tick,0x7ffdf681f424,22891528,0,0x0,8
tick,0x7ffdf681f424,22893572,0,0x0,8
tick,0x7ffdf681f424,22895541,0,0x0,8
tick,0x7ffdf681f424,22897533,0,0x0,8
tick,0x7ffdf681f424,22899558,0,0x0,8
tick,0x7ffdf681f424,22901536,0,0x0,8
tick,0x7ffdf681f424,22903397,0,0x0,8
tick,0x7ffdf681f424,22905509,0,0x0,8
tick,0x7ffdf681f424,22907503,0,0x0,8
tick,0x7ffdf681f424,22909390,0,0x0,8
tick,0x7ffdf681f424,22911495,0,0x0,8
tick,0x7ffdf681f424,22913505,0,0x0,8
tick,0x7ffdf681f424,22915423,0,0x0,8
tick,0x7ffdf681f424,22917476,0,0x0,8
tick,0x7ffdf681f424,22919474,0,0x0,8
tick,0x7ffdf681f424,22921508,0,0x0,8
tick,0x7ffdf681f424,22923461,0,0x0,8
tick,0x7ffdf681f424,22925453,0,0x0,8
tick,0x7ffdf681f424,22927343,0,0x0,8
tick,0x7ffdf681f424,22929460,0,0x0,8
tick,0x7ffdf681f424,22931445,0,0x0,8
tick,0x7ffdf681f424,22933435,0,0x0,8
tick,0x7ffdf681f424,22935448,0,0x0,8
tick,0x7ffdf681f424,22937424,0,0x0,8
tick,0x7ffdf681f424,22939447,0,0x0,8
tick,0x7ffdf681f424,22941417,0,0x0,8
tick,0x7ffdf681f424,22943479,0,0x0,8
tick,0x7ffdf681f424,22945413,0,0x0,8
tick,0x7ffdf681f424,22947405,0,0x0,8
tick,0x7ffdf681f424,22949407,0,0x0,8
tick,0x7ffdf681f424,22951395,0,0x0,8
tick,0x7ffdf681f424,22953391,0,0x0,8
tick,0x7ffdf681f424,22955368,0,0x0,8
tick,0x7ffdf681f424,22957370,0,0x0,8
tick,0x7ffdf681f424,22959365,0,0x0,8
tick,0x7ffdf681f424,22961339,0,0x0,8
tick,0x7ffdf681f424,22963374,0,0x0,8
tick,0x7ffdf681f424,22965418,0,0x0,8
tick,0x7ffdf681f424,22967366,0,0x0,8
tick,0x7ffdf681f424,22969338,0,0x0,8
tick,0x7ffdf681f424,22971333,0,0x0,8
tick,0x7ffdf681f424,22973334,0,0x0,8
tick,0x7ffdf681f424,22975329,0,0x0,8
tick,0x7ffdf681f424,22977211,0,0x0,8
tick,0x7ffdf681f424,22979319,0,0x0,8
tick,0x7ffdf681f424,22981304,0,0x0,8
tick,0x7ffdf681f424,22983270,0,0x0,8
tick,0x7ffdf681f424,22985292,0,0x0,8
tick,0x7ffdf681f424,22987303,0,0x0,8
tick,0x7ffdf681f424,22989277,0,0x0,8
tick,0x7ffdf681f424,22991284,0,0x0,8
tick,0x7ffdf681f424,22993277,0,0x0,8
tick,0x7ffdf681f424,22995268,0,0x0,8
tick,0x7ffdf681f424,22997260,0,0x0,8
tick,0x7ffdf681f424,22999263,0,0x0,8
tick,0x7ffdf681f424,23001261,0,0x0,8
tick,0x7ffdf681f424,23003248,0,0x0,8
tick,0x7ffdf681f424,23005245,0,0x0,8
tick,0x7ffdf681f424,23007243,0,0x0,8
tick,0x7ffdf681f424,23009245,0,0x0,8
tick,0x7ffdf681f424,23011226,0,0x0,8
tick,0x7ffdf681f424,23013235,0,0x0,8
tick,0x7ffdf681f424,23015215,0,0x0,8
tick,0x7ffdf681f424,23017213,0,0x0,8
tick,0x7ffdf681f424,23019168,0,0x0,8
tick,0x7ffdf681f424,23021195,0,0x0,8
tick,0x7ffdf681f424,23023202,0,0x0,8
tick,0x7ffdf681f424,23025192,0,0x0,8
tick,0x7ffdf681f424,23027146,0,0x0,8
tick,0x7ffdf681f424,23029191,0,0x0,8
tick,0x7ffdf681f424,23031212,0,0x0,8
tick,0x7ffdf681f424,23033171,0,0x0,8
tick,0x7ffdf681f424,23035162,0,0x0,8
tick,0x7ffdf681f424,23037155,0,0x0,8
tick,0x7ffdf681f424,23039151,0,0x0,8
tick,0x7ffdf681f424,23041172,0,0x0,8
tick,0x7ffdf681f424,23043168,0,0x0,8
tick,0x7ffdf681f424,23045027,0,0x0,8
tick,0x7ffdf681f424,23047236,0,0x0,8
tick,0x7ffdf681f424,23049099,0,0x0,8
tick,0x7ffdf681f424,23051119,0,0x0,8
tick,0x7ffdf681f424,23053192,0,0x0,8
tick,0x7ffdf681f424,23055109,0,0x0,8
tick,0x7ffdf681f424,23057107,0,0x0,8
tick,0x7ffdf681f424,23059097,0,0x0,8
tick,0x7ffdf681f424,23061104,0,0x0,8
tick,0x7ffdf681f424,23063092,0,0x0,8
tick,0x7ffdf681f424,23065083,0,0x0,8
tick,0x7ffdf681f424,23067085,0,0x0,8
tick,0x7ffdf681f424,23068964,0,0x0,8
tick,0x7ffdf681f424,23071039,0,0x0,8
tick,0x7ffdf681f424,23073061,0,0x0,8
tick,0x7ffdf681f424,23075067,0,0x0,8
tick,0x7ffdf681f424,23077058,0,0x0,8
tick,0x7ffdf681f424,23079057,0,0x0,8
tick,0x7ffdf681f424,23081041,0,0x0,8
tick,0x7ffdf681f424,23083034,0,0x0,8
tick,0x7ffdf681f424,23084917,0,0x0,8
tick,0x7ffdf681f424,23087023,0,0x0,8
tick,0x7ffdf681f424,23089031,0,0x0,8
tick,0x7ffdf681f424,23091013,0,0x0,8
tick,0x7ffdf681f424,23092987,0,0x0,8
tick,0x7ffdf681f424,23095007,0,0x0,8
tick,0x7ffdf681f424,23097043,0,0x0,8
tick,0x7ffdf681f424,23098994,0,0x0,8
tick,0x7ffdf681f424,23100990,0,0x0,8
tick,0x7ffdf681f424,23102985,0,0x0,8
tick,0x7ffdf681f424,23104975,0,0x0,8
tick,0x7ffdf681f424,23106983,0,0x0,8
tick,0x7ffdf681f424,23108964,0,0x0,8
tick,0x7ffdf681f424,23110966,0,0x0,8
tick,0x7ffdf681f424,23112966,0,0x0,8
tick,0x7ffdf681f424,23114928,0,0x0,8
tick,0x7ffdf681f424,23116943,0,0x0,8
tick,0x7ffdf681f424,23118876,0,0x0,8
tick,0x7ffdf681f424,23120851,0,0x0,8
tick,0x7ffdf681f424,23122935,0,0x0,8
tick,0x7ffdf681f424,23124932,0,0x0,8
tick,0x7ffdf681f424,23126920,0,0x0,8
tick,0x7ffdf681f424,23128919,0,0x0,8
tick,0x7ffdf681f424,23130913,0,0x0,8
tick,0x7ffdf681f424,23132916,0,0x0,8
tick,0x7ffdf681f424,23134906,0,0x0,8
tick,0x7ffdf681f424,23136859,0,0x0,8
tick,0x7ffdf681f424,23138885,0,0x0,8
tick,0x7ffdf681f424,23140947,0,0x0,8
tick,0x7ffdf681f424,23142874,0,0x0,8
tick,0x7ffdf681f424,23144866,0,0x0,8
tick,0x7ffdf681f424,23146863,0,0x0,8
tick,0x7ffdf681f424,23148856,0,0x0,8
tick,0x7ffdf681f424,23150853,0,0x0,8
tick,0x7ffdf681f424,23152857,0,0x0,8
tick,0x7ffdf681f424,23154848,0,0x0,8
tick,0x7ffdf681f424,23156837,0,0x0,8
tick,0x7ffdf681f424,23158802,0,0x0,8
tick,0x7ffdf681f424,23160714,0,0x0,8
tick,0x7ffdf681f424,23162799,0,0x0,8
tick,0x7ffdf681f424,23164718,0,0x0,8
tick,0x7ffdf681f424,23166815,0,0x0,8
tick,0x7ffdf681f424,23168698,0,0x0,8
tick,0x7ffdf681f424,23170801,0,0x0,8
tick,0x7ffdf681f424,23172792,0,0x0,8
tick,0x7ffdf681f424,23174786,0,0x0,8
tick,0x7ffdf681f424,23176755,0,0x0,8
tick,0x7ffdf681f424,23178779,0,0x0,8
tick,0x7ffdf681f424,23180772,0,0x0,8
tick,0x7ffdf681f424,23182775,0,0x0,8
tick,0x7ffdf681f424,23184800,0,0x0,8
tick,0x7ffdf681f424,23186757,0,0x0,8
tick,0x7ffdf681f424,23188748,0,0x0,8
tick,0x7ffdf681f424,23190751,0,0x0,8
tick,0x7ffdf681f424,23192752,0,0x0,8
tick,0x7ffdf681f424,23194779,0,0x0,8
tick,0x7ffdf681f424,23196705,0,0x0,8
tick,0x7ffdf681f424,23198611,0,0x0,8
tick,0x7ffdf681f424,23200831,0,0x0,8
tick,0x7ffdf681f424,23202608,0,0x0,8
tick,0x7ffdf681f424,23204706,0,0x0,8
tick,0x7ffdf681f424,23206684,0,0x0,8
tick,0x7ffdf681f424,23208678,0,0x0,8
tick,0x7ffdf681f424,23210584,0,0x0,8
tick,0x7ffdf681f424,23212686,0,0x0,8
tick,0x7ffdf681f424,23214682,0,0x0,8
tick,0x7ffdf681f424,23216700,0,0x0,8
tick,0x7ffdf681f424,23218678,0,0x0,8
tick,0x7ffdf681f424,23220675,0,0x0,8
tick,0x7ffdf681f424,23222657,0,0x0,8
tick,0x7ffdf681f424,23224628,0,0x0,8
tick,0x7ffdf681f424,23226647,0,0x0,8
tick,0x7ffdf681f424,23228651,0,0x0,8
tick,0x7ffdf681f424,23230643,0,0x0,8
tick,0x7ffdf681f424,23232630,0,0x0,8
tick,0x7ffdf681f424,23234624,0,0x0,8
tick,0x7ffdf681f424,23236623,0,0x0,8
tick,0x7ffdf681f424,23238613,0,0x0,8
tick,0x7ffdf681f424,23240624,0,0x0,8
tick,0x7ffdf681f424,23242606,0,0x0,8
tick,0x7ffdf681f424,23244600,0,0x0,8
tick,0x7ffdf681f424,23246558,0,0x0,8
tick,0x7ffdf681f424,23248592,0,0x0,8
tick,0x7ffdf681f424,23250566,0,0x0,8
tick,0x7ffdf681f424,23252563,0,0x0,8
tick,0x7ffdf681f424,23254578,0,0x0,8
tick,0x7ffdf681f424,23256570,0,0x0,8
tick,0x7ffdf681f424,23258558,0,0x0,8
tick,0x7ffdf681f424,23260546,0,0x0,8
tick,0x7ffdf681f424,23262450,0,0x0,8
tick,0x7ffdf681f424,23264564,0,0x0,8
tick,0x7ffdf681f424,23266550,0,0x0,8
tick,0x7ffdf681f424,23268507,0,0x0,8
tick,0x7ffdf681f424,23270535,0,0x0,8
tick,0x7ffdf681f424,23272590,0,0x0,8
tick,0x7ffdf681f424,23274550,0,0x0,8
tick,0x7ffdf681f424,23276512,0,0x0,8
tick,0x7ffdf681f424,23278513,0,0x0,8
tick,0x7ffdf681f424,23280510,0,0x0,8
tick,0x7ffdf681f424,23282501,0,0x0,8
tick,0x7ffdf681f424,23284506,0,0x0,8
tick,0x7ffdf681f424,23286500,0,0x0,8
tick,0x7ffdf681f424,23288485,0,0x0,8
tick,0x7ffdf681f424,23290451,0,0x0,8
tick,0x7ffdf681f424,23292478,0,0x0,8
tick,0x7ffdf681f424,23294449,0,0x0,8
tick,0x7ffdf681f424,23296464,0,0x0,8
tick,0x7ffdf681f424,23298467,0,0x0,8
tick,0x7ffdf681f424,23300454,0,0x0,8
tick,0x7ffdf681f424,23302340,0,0x0,8
tick,0x7ffdf681f424,23304444,0,0x0,8
tick,0x7ffdf681f424,23306448,0,0x0,8
tick,0x7ffdf681f424,23308431,0,0x0,8
tick,0x7ffdf681f424,23310429,0,0x0,8
tick,0x7ffdf681f424,23312393,0,0x0,8
tick,0x7ffdf681f424,23314416,0,0x0,8
tick,0x7ffdf681f424,23316391,0,0x0,8
tick,0x7ffdf681f424,23318415,0,0x0,8
tick,0x7ffdf681f424,23320402,0,0x0,8
tick,0x7ffdf681f424,23322396,0,0x0,8
tick,0x7ffdf681f424,23324388,0,0x0,8
tick,0x7ffdf681f424,23326389,0,0x0,8
tick,0x7ffdf681f424,23328388,0,0x0,8
tick,0x7ffdf681f424,23330379,0,0x0,8
tick,0x7ffdf681f424,23332378,0,0x0,8
tick,0x7ffdf681f424,23334334,0,0x0,8
tick,0x7ffdf681f424,23336358,0,0x0,8
tick,0x7ffdf681f424,23338363,0,0x0,8
tick,0x7ffdf681f424,23340339,0,0x0,8
tick,0x7ffdf681f424,23342349,0,0x0,8
tick,0x7ffdf681f424,23344230,0,0x0,8
tick,0x7ffdf681f424,23346330,0,0x0,8
tick,0x7ffdf681f424,23348363,0,0x0,8
tick,0x7ffdf681f424,23350307,0,0x0,8
tick,0x7ffdf681f424,23352221,0,0x0,8
tick,0x7ffdf681f424,23354426,0,0x0,8
tick,0x7ffdf681f424,23356277,0,0x0,8
tick,0x7ffdf681f424,23358305,0,0x0,8
tick,0x7ffdf681f424,23360273,0,0x0,8
tick,0x7ffdf681f424,23362293,0,0x0,8
tick,0x7ffdf681f424,23364296,0,0x0,8
tick,0x7ffdf681f424,23366282,0,0x0,8
tick,0x7ffdf681f424,23368268,0,0x0,8
tick,0x7ffdf681f424,23370266,0,0x0,8
tick,0x7ffdf681f424,23372264,0,0x0,8
tick,0x7ffdf681f424,23374261,0,0x0,8
tick,0x7ffdf681f424,23376253,0,0x0,8
tick,0x7ffdf681f424,23378221,0,0x0,8
tick,0x7ffdf681f424,23380142,0,0x0,8
tick,0x7ffdf681f424,23382216,0,0x0,8
tick,0x7ffdf681f424,23384229,0,0x0,8
tick,0x7ffdf681f424,23386220,0,0x0,8
tick,0x7ffdf681f424,23388222,0,0x0,8
tick,0x7ffdf681f424,23390217,0,0x0,8
tick,0x7ffdf681f424,23392207,0,0x0,8
tick,0x7ffdf681f424,23394159,0,0x0,8
tick,0x7ffdf681f424,23396196,0,0x0,8
tick,0x7ffdf681f424,23398191,0,0x0,8
tick,0x7ffdf681f424,23400158,0,0x0,8
tick,0x7ffdf681f424,23402188,0,0x0,8
tick,0x7ffdf681f424,23404156,0,0x0,8
tick,0x7ffdf681f424,23406171,0,0x0,8
tick,0x7ffdf681f424,23408169,0,0x0,8
tick,0x7ffdf681f424,23410159,0,0x0,8
tick,0x7ffdf681f424,23412154,0,0x0,8
tick,0x7ffdf681f424,23414151,0,0x0,8
tick,0x7ffdf681f424,23416153,0,0x0,8
tick,0x7ffdf681f424,23418137,0,0x0,8
tick,0x7ffdf681f424,23420176,0,0x0,8
tick,0x7ffdf681f424,23422098,0,0x0,8
tick,0x7ffdf681f424,23424123,0,0x0,8
tick,0x7ffdf681f424,23426099,0,0x0,8
tick,0x7ffdf681f424,23428028,0,0x0,8
tick,0x7ffdf681f424,23430111,0,0x0,8
tick,0x7ffdf681f424,23432102,0,0x0,8
tick,0x7ffdf681f424,23434102,0,0x0,8
tick,0x7ffdf681f424,23435985,0,0x0,8
tick,0x7ffdf681f424,23438090,0,0x0,8
tick,0x7ffdf681f424,23440095,0,0x0,8
tick,0x7ffdf681f424,23442074,0,0x0,8
tick,0x7ffdf681f424,23443950,0,0x0,8
tick,0x7ffdf681f424,23446066,0,0x0,8
tick,0x7ffdf681f424,23448064,0,0x0,8
tick,0x7ffdf681f424,23450048,0,0x0,8
tick,0x7ffdf681f424,23452051,0,0x0,8
tick,0x7ffdf681f424,23454059,0,0x0,8
tick,0x7ffdf681f424,23456037,0,0x0,8
tick,0x7ffdf681f424,23458042,0,0x0,8
tick,0x7ffdf681f424,23460038,0,0x0,8
tick,0x7ffdf681f424,23462032,0,0x0,8
tick,0x7ffdf681f424,23464018,0,0x0,8
tick,0x7ffdf681f424,23466016,0,0x0,8
tick,0x7ffdf681f424,23468007,0,0x0,8
tick,0x7ffdf681f424,23470010,0,0x0,8
tick,0x7ffdf681f424,23472001,0,0x0,8
tick,0x7ffdf681f424,23473989,0,0x0,8
tick,0x7ffdf681f424,23475984,0,0x0,8
tick,0x7ffdf681f424,23477976,0,0x0,8
tick,0x7ffdf681f424,23479973,0,0x0,8
tick,0x7ffdf681f424,23481883,0,0x0,8
tick,0x7ffdf681f424,23483971,0,0x0,8
tick,0x7ffdf681f424,23485850,0,0x0,8
tick,0x7ffdf681f424,23487975,0,0x0,8
tick,0x7ffdf681f424,23489947,0,0x0,8
tick,0x7ffdf681f424,23491946,0,0x0,8
tick,0x7ffdf681f424,23493900,0,0x0,8
tick,0x7ffdf681f424,23495931,0,0x0,8
tick,0x7ffdf681f424,23497924,0,0x0,8
tick,0x7ffdf681f424,23499922,0,0x0,8
tick,0x7ffdf681f424,23501942,0,0x0,8
tick,0x7ffdf681f424,23503807,0,0x0,8
tick,0x7ffdf681f424,23505809,0,0x0,8
tick,0x7ffdf681f424,23508009,0,0x0,8
tick,0x7ffdf681f424,23509899,0,0x0,8
tick,0x7ffdf681f424,23511773,0,0x0,8
tick,0x7ffdf681f424,23513920,0,0x0,8
tick,0x7ffdf681f424,23515875,0,0x0,8
tick,0x7ffdf681f424,23517877,0,0x0,8
tick,0x7ffdf681f424,23519873,0,0x0,8
tick,0x7ffdf681f424,23521874,0,0x0,8
tick,0x7ffdf681f424,23523858,0,0x0,8
tick,0x7ffdf681f424,23525856,0,0x0,8
tick,0x7ffdf681f424,23527856,0,0x0,8
tick,0x7ffdf681f424,23529885,0,0x0,8
tick,0x7ffdf681f424,23531804,0,0x0,8
tick,0x7ffdf681f424,23533833,0,0x0,8
tick,0x7ffdf681f424,23535685,0,0x0,8
tick,0x7ffdf681f424,23537819,0,0x0,8
tick,0x7ffdf681f424,23539807,0,0x0,8
tick,0x7ffdf681f424,23541811,0,0x0,8
tick,0x7ffdf681f424,23543804,0,0x0,8
tick,0x7ffdf681f424,23545793,0,0x0,8
tick,0x7ffdf681f424,23547733,0,0x0,8
tick,0x7ffdf681f424,23549799,0,0x0,8
tick,0x7ffdf681f424,23551776,0,0x0,8
tick,0x7ffdf681f424,23553784,0,0x0,8
tick,0x7ffdf681f424,23555779,0,0x0,8
tick,0x7ffdf681f424,23557777,0,0x0,8
tick,0x7ffdf681f424,23559651,0,0x0,8
tick,0x7ffdf681f424,23561754,0,0x0,8
tick,0x7ffdf681f424,23563742,0,0x0,8
tick,0x7ffdf681f424,23565746,0,0x0,8
tick,0x7ffdf681f424,23567744,0,0x0,8
tick,0x7ffdf681f424,23569634,0,0x0,8
tick,0x7ffdf681f424,23571682,0,0x0,8
tick,0x7ffdf681f424,23573728,0,0x0,8
tick,0x7ffdf681f424,23575725,0,0x0,8
tick,0x7ffdf681f424,23577721,0,0x0,8
tick,0x7ffdf681f424,23579717,0,0x0,8
tick,0x7ffdf681f424,23581618,0,0x0,8
tick,0x7ffdf681f424,23583695,0,0x0,8
tick,0x7ffdf681f424,23585589,0,0x0,8
tick,0x7ffdf681f424,23587591,0,0x0,8
tick,0x7ffdf681f424,23589574,0,0x0,8
tick,0x7ffdf681f424,23591529,0,0x0,8
tick,0x7ffdf681f424,23593571,0,0x0,8
tick,0x7ffdf681f424,23595523,0,0x0,8
tick,0x7ffdf681f424,23597551,0,0x0,8
tick,0x7ffdf681f424,23599621,0,0x0,8
tick,0x7ffdf681f424,23601604,0,0x0,8
tick,0x7ffdf681f424,23603656,0,0x0,8
tick,0x7ffdf681f424,23605636,0,0x0,8
tick,0x7ffdf681f424,23607648,0,0x0,8
tick,0x7ffdf681f424,23609623,0,0x0,8
tick,0x7ffdf681f424,23611635,0,0x0,8
tick,0x7ffdf681f424,23613624,0,0x0,8
tick,0x7ffdf681f424,23615621,0,0x0,8
tick,0x7ffdf681f424,23617607,0,0x0,8
tick,0x7ffdf681f424,23619599,0,0x0,8
tick,0x7ffdf681f424,23621598,0,0x0,8
tick,0x7ffdf681f424,23623556,0,0x0,8
tick,0x7ffdf681f424,23625585,0,0x0,8
tick,0x7ffdf681f424,23627474,0,0x0,8
tick,0x7ffdf681f424,23629578,0,0x0,8
tick,0x7ffdf681f424,23631569,0,0x0,8
tick,0x7ffdf681f424,23633570,0,0x0,8
tick,0x7ffdf681f424,23635567,0,0x0,8
tick,0x7ffdf681f424,23637563,0,0x0,8
tick,0x7ffdf681f424,23639543,0,0x0,8
tick,0x7ffdf681f424,23641550,0,0x0,8
tick,0x7ffdf681f424,23643542,0,0x0,8
tick,0x7ffdf681f424,23645562,0,0x0,8
tick,0x7ffdf681f424,23647527,0,0x0,8
tick,0x7ffdf681f424,23649522,0,0x0,8
tick,0x7ffdf681f424,23651512,0,0x0,8
tick,0x7ffdf681f424,23653513,0,0x0,8
tick,0x7ffdf681f424,23655536,0,0x0,8
tick,0x7ffdf681f424,23657510,0,0x0,8
tick,0x7ffdf681f424,23659388,0,0x0,8
tick,0x7ffdf681f424,23661602,0,0x0,8
tick,0x7ffdf681f424,23663498,0,0x0,8
tick,0x7ffdf681f424,23665484,0,0x0,8
tick,0x7ffdf681f424,23667538,0,0x0,8
tick,0x7ffdf681f424,23669356,0,0x0,8
tick,0x7ffdf681f424,23671463,0,0x0,8
tick,0x7ffdf681f424,23673458,0,0x0,8
tick,0x7ffdf681f424,23675465,0,0x0,8
tick,0x7ffdf681f424,23677345,0,0x0,8
tick,0x7ffdf681f424,23679415,0,0x0,8
tick,0x7ffdf681f424,23681448,0,0x0,8
tick,0x7ffdf681f424,23683440,0,0x0,8
tick,0x7ffdf681f424,23685434,0,0x0,8
tick,0x7ffdf681f424,23687422,0,0x0,8
tick,0x7ffdf681f424,23689434,0,0x0,8
tick,0x7ffdf681f424,23691411,0,0x0,8
tick,0x7ffdf681f424,23693409,0,0x0,8
tick,0x7ffdf681f424,23695399,0,0x0,8
tick,0x7ffdf681f424,23697396,0,0x0,8
tick,0x7ffdf681f424,23699389,0,0x0,8
tick,0x7ffdf681f424,23701380,0,0x0,8
tick,0x7ffdf681f424,23703392,0,0x0,8
tick,0x7ffdf681f424,23705368,0,0x0,8
tick,0x7ffdf681f424,23707368,0,0x0,8
tick,0x7ffdf681f424,23709368,0,0x0,8
tick,0x7ffdf681f424,23711367,0,0x0,8
tick,0x7ffdf681f424,23713350,0,0x0,8
tick,0x7ffdf681f424,23715346,0,0x0,8
tick,0x7ffdf681f424,23717343,0,0x0,8
tick,0x7ffdf681f424,23719266,0,0x0,8
tick,0x7ffdf681f424,23721329,0,0x0,8
tick,0x7ffdf681f424,23723330,0,0x0,8
tick,0x7ffdf681f424,23725327,0,0x0,8
tick,0x7ffdf681f424,23727278,0,0x0,8
tick,0x7ffdf681f424,23729307,0,0x0,8
tick,0x7ffdf681f424,23731304,0,0x0,8
tick,0x7ffdf681f424,23733358,0,0x0,8
tick,0x7ffdf681f424,23735192,0,0x0,8
tick,0x7ffdf681f424,23737300,0,0x0,8
tick,0x7ffdf681f424,23739282,0,0x0,8
tick,0x7ffdf681f424,23741282,0,0x0,8
tick,0x7ffdf681f424,23743273,0,0x0,8
tick,0x7ffdf681f424,23745163,0,0x0,8
tick,0x7ffdf681f424,23747268,0,0x0,8
tick,0x7ffdf681f424,23749256,0,0x0,8
tick,0x7ffdf681f424,23751259,0,0x0,8
tick,0x7ffdf681f424,23753247,0,0x0,8
tick,0x7ffdf681f424,23755324,0,0x0,8
tick,0x7ffdf681f424,23757240,0,0x0,8
tick,0x7ffdf681f424,23759251,0,0x0,8
tick,0x7ffdf681f424,23761234,0,0x0,8
tick,0x7ffdf681f424,23763225,0,0x0,8
tick,0x7ffdf681f424,23765221,0,0x0,8
tick,0x7ffdf681f424,23767250,0,0x0,8
tick,0x7ffdf681f424,23769097,0,0x0,8
tick,0x7ffdf681f424,23771209,0,0x0,8
tick,0x7ffdf681f424,23773187,0,0x0,8
tick,0x7ffdf681f424,23775186,0,0x0,8
tick,0x7ffdf681f424,23777208,0,0x0,8
tick,0x7ffdf681f424,23779175,0,0x0,8
tick,0x7ffdf681f424,23781172,0,0x0,8
tick,0x7ffdf681f424,23783166,0,0x0,8
tick,0x7ffdf681f424,23785159,0,0x0,8
tick,0x7ffdf681f424,23787154,0,0x0,8
tick,0x7ffdf681f424,23789161,0,0x0,8
tick,0x7ffdf681f424,23791152,0,0x0,8
tick,0x7ffdf681f424,23793137,0,0x0,8
tick,0x7ffdf681f424,23795106,0,0x0,8
tick,0x7ffdf681f424,23797129,0,0x0,8
tick,0x7ffdf681f424,23799145,0,0x0,8
tick,0x7ffdf681f424,23801118,0,0x0,8
tick,0x7ffdf681f424,23803122,0,0x0,8
tick,0x7ffdf681f424,23805113,0,0x0,8
tick,0x7ffdf681f424,23807102,0,0x0,8
tick,0x7ffdf681f424,23809128,0,0x0,8
tick,0x7ffdf681f424,23811098,0,0x0,8
tick,0x7ffdf681f424,23812997,0,0x0,8
tick,0x7ffdf681f424,23815182,0,0x0,8
tick,0x7ffdf681f424,23817079,0,0x0,8
tick,0x7ffdf681f424,23818946,0,0x0,8
tick,0x7ffdf681f424,23821143,0,0x0,8
tick,0x7ffdf681f424,23823052,0,0x0,8
tick,0x7ffdf681f424,23825057,0,0x0,8
tick,0x7ffdf681f424,23827048,0,0x0,8
tick,0x7ffdf681f424,23829044,0,0x0,8
tick,0x7ffdf681f424,23831034,0,0x0,8
tick,0x7ffdf681f424,23833032,0,0x0,8
tick,0x7ffdf681f424,23835038,0,0x0,8
tick,0x7ffdf681f424,23837032,0,0x0,8
tick,0x7ffdf681f424,23838995,0,0x0,8
tick,0x7ffdf681f424,23841009,0,0x0,8
tick,0x7ffdf681f424,23843025,0,0x0,8
tick,0x7ffdf681f424,23845003,0,0x0,8
tick,0x7ffdf681f424,23847003,0,0x0,8
tick,0x7ffdf681f424,23848995,0,0x0,8
tick,0x7ffdf681f424,23850993,0,0x0,8
tick,0x7ffdf681f424,23852977,0,0x0,8
tick,0x7ffdf681f424,23854971,0,0x0,8
tick,0x7ffdf681f424,23856983,0,0x0,8
tick,0x7ffdf681f424,23858963,0,0x0,8
tick,0x7ffdf681f424,23860857,0,0x0,8
tick,0x7ffdf681f424,23862947,0,0x0,8
tick,0x7ffdf681f424,23864956,0,0x0,8
tick,0x7ffdf681f424,23866944,0,0x0,8
tick,0x7ffdf681f424,23868980,0,0x0,8
tick,0x7ffdf681f424,23870933,0,0x0,8
tick,0x7ffdf681f424,23872924,0,0x0,8
tick,0x7ffdf681f424,23874919,0,0x0,8
tick,0x7ffdf681f424,23876911,0,0x0,8
tick,0x7ffdf681f424,23878908,0,0x0,8
tick,0x7ffdf681f424,23880903,0,0x0,8
tick,0x7ffdf681f424,23882898,0,0x0,8
tick,0x7ffdf681f424,23884897,0,0x0,8
tick,0x7ffdf681f424,23886947,0,0x0,8
tick,0x7ffdf681f424,23888897,0,0x0,8
tick,0x7ffdf681f424,23890877,0,0x0,8
tick,0x7ffdf681f424,23892866,0,0x0,8
tick,0x7ffdf681f424,23894936,0,0x0,8
tick,0x7ffdf681f424,23896861,0,0x0,8
tick,0x7ffdf681f424,23898862,0,0x0,8
tick,0x7ffdf681f424,23900845,0,0x0,8
tick,0x7ffdf681f424,23902859,0,0x0,8
tick,0x7ffdf681f424,23904845,0,0x0,8
tick,0x7ffdf681f424,23906838,0,0x0,8
tick,0x7ffdf681f424,23908901,0,0x0,8
tick,0x7ffdf681f424,23910751,0,0x0,8
tick,0x7ffdf681f424,23912816,0,0x0,8
tick,0x7ffdf681f424,23914813,0,0x0,8
tick,0x7ffdf681f424,23916796,0,0x0,8
tick,0x7ffdf681f424,23918802,0,0x0,8
tick,0x7ffdf681f424,23920848,0,0x0,8
tick,0x7ffdf681f424,23922791,0,0x0,8
tick,0x7ffdf681f424,23924781,0,0x0,8
tick,0x7ffdf681f424,23926795,0,0x0,8
tick,0x7ffdf681f424,23928793,0,0x0,8
tick,0x7ffdf681f424,23930752,0,0x0,8
tick,0x7ffdf681f424,23932790,0,0x0,8
tick,0x7ffdf681f424,23934758,0,0x0,8
tick,0x7ffdf681f424,23936758,0,0x0,8
tick,0x7ffdf681f424,23938745,0,0x0,8
tick,0x7ffdf681f424,23940745,0,0x0,8
tick,0x7ffdf681f424,23942745,0,0x0,8
tick,0x7ffdf681f424,23944736,0,0x0,8
tick,0x7ffdf681f424,23946727,0,0x0,8
tick,0x7ffdf681f424,23948722,0,0x0,8
tick,0x7ffdf681f424,23950707,0,0x0,8
tick,0x7ffdf681f424,23952646,0,0x0,8
tick,0x7ffdf681f424,23954713,0,0x0,8
tick,0x7ffdf681f424,23956705,0,0x0,8
tick,0x7ffdf681f424,23958699,0,0x0,8
tick,0x7ffdf681f424,23960642,0,0x0,8
tick,0x7ffdf681f424,23962717,0,0x0,8
tick,0x7ffdf681f424,23964585,0,0x0,8
tick,0x7ffdf681f424,23966573,0,0x0,8
tick,0x7ffdf681f424,23968680,0,0x0,8
tick,0x7ffdf681f424,23970686,0,0x0,8
tick,0x7ffdf681f424,23972648,0,0x0,8
tick,0x7ffdf681f424,23974669,0,0x0,8
tick,0x7ffdf681f424,23976644,0,0x0,8
tick,0x7ffdf681f424,23978528,0,0x0,8
tick,0x7ffdf681f424,23980634,0,0x0,8
tick,0x7ffdf681f424,23982625,0,0x0,8
tick,0x7ffdf681f424,23984624,0,0x0,8
tick,0x7ffdf681f424,23986625,0,0x0,8
tick,0x7ffdf681f424,23988626,0,0x0,8
tick,0x7ffdf681f424,23990608,0,0x0,8
tick,0x7ffdf681f424,23992611,0,0x0,8
tick,0x7ffdf681f424,23994537,0,0x0,8
tick,0x7ffdf681f424,23996609,0,0x0,8
tick,0x7ffdf681f424,23998592,0,0x0,8
tick,0x7ffdf681f424,24000582,0,0x0,8
tick,0x7ffdf681f424,24002482,0,0x0,8
tick,0x7ffdf681f424,24004573,0,0x0,8
tick,0x7ffdf681f424,24006561,0,0x0,8
tick,0x7ffdf681f424,24008572,0,0x0,8
tick,0x7ffdf681f424,24010594,0,0x0,8
tick,0x7ffdf681f424,24012557,0,0x0,8
tick,0x7ffdf681f424,24014553,0,0x0,8
tick,0x7ffdf681f424,24016539,0,0x0,8
tick,0x7ffdf681f424,24018621,0,0x0,8
tick,0x7ffdf681f424,24020534,0,0x0,8
tick,0x7ffdf681f424,24022522,0,0x0,8
tick,0x7ffdf681f424,24024519,0,0x0,8
tick,0x7ffdf681f424,24026516,0,0x0,8
tick,0x7ffdf681f424,24028513,0,0x0,8
tick,0x7ffdf681f424,24030518,0,0x0,8
tick,0x7ffdf681f424,24032511,0,0x0,8
tick,0x7ffdf681f424,24034497,0,0x0,8
tick,0x7ffdf681f424,24036496,0,0x0,8
tick,0x7ffdf681f424,24038481,0,0x0,8
tick,0x7ffdf681f424,24040459,0,0x0,8
tick,0x7ffdf681f424,24042426,0,0x0,8
tick,0x7ffdf681f424,24044434,0,0x0,8
tick,0x7ffdf681f424,24046451,0,0x0,8
tick,0x7ffdf681f424,24048453,0,0x0,8
tick,0x7ffdf681f424,24050441,0,0x0,8
tick,0x7ffdf681f424,24052325,0,0x0,8
tick,0x7ffdf681f424,24054444,0,0x0,8
tick,0x7ffdf681f424,24056427,0,0x0,8
tick,0x7ffdf681f424,24058435,0,0x0,8
tick,0x7ffdf681f424,24060425,0,0x0,8
tick,0x7ffdf681f424,24062484,0,0x0,8
tick,0x7ffdf681f424,24064411,0,0x0,8
tick,0x7ffdf681f424,24066406,0,0x0,8
tick,0x7ffdf681f424,24068402,0,0x0,8
tick,0x7ffdf681f424,24070395,0,0x0,8
tick,0x7ffdf681f424,24072388,0,0x0,8
tick,0x7ffdf681f424,24074388,0,0x0,8
tick,0x7ffdf681f424,24076385,0,0x0,8
tick,0x7ffdf681f424,24078376,0,0x0,8
tick,0x7ffdf681f424,24080369,0,0x0,8
tick,0x7ffdf681f424,24082363,0,0x0,8
tick,0x7ffdf681f424,24084225,0,0x0,8
tick,0x7ffdf681f424,24086352,0,0x0,8
tick,0x7ffdf681f424,24088231,0,0x0,8
tick,0x7ffdf681f424,24090230,0,0x0,8
tick,0x7ffdf681f424,24092240,0,0x0,8
tick,0x7ffdf681f424,24094254,0,0x0,8
tick,0x7ffdf681f424,24096168,0,0x0,8
tick,0x7ffdf681f424,24098335,0,0x0,8
tick,0x7ffdf681f424,24100207,0,0x0,8
tick,0x7ffdf681f424,24102353,0,0x0,8
tick,0x7ffdf681f424,24104303,0,0x0,8
tick,0x7ffdf681f424,24106367,0,0x0,8
tick,0x7ffdf681f424,24108295,0,0x0,8
tick,0x7ffdf681f424,24110290,0,0x0,8
tick,0x7ffdf681f424,24112281,0,0x0,8
tick,0x7ffdf681f424,24114282,0,0x0,8
tick,0x7ffdf681f424,24116301,0,0x0,8
tick,0x7ffdf681f424,24118250,0,0x0,8
tick,0x7ffdf681f424,24120166,0,0x0,8
tick,0x7ffdf681f424,24122367,0,0x0,8
tick,0x7ffdf681f424,24124225,0,0x0,8
tick,0x7ffdf681f424,24126244,0,0x0,8
tick,0x7ffdf681f424,24128319,0,0x0,8
tick,0x7ffdf681f424,24130231,0,0x0,8
tick,0x7ffdf681f424,24132232,0,0x0,8
tick,0x7ffdf681f424,24134225,0,0x0,8
tick,0x7ffdf681f424,24136218,0,0x0,8
tick,0x7ffdf681f424,24138221,0,0x0,8
tick,0x7ffdf681f424,24140226,0,0x0,8
tick,0x7ffdf681f424,24142202,0,0x0,8
tick,0x7ffdf681f424,24144090,0,0x0,8
tick,0x7ffdf681f424,24146199,0,0x0,8
tick,0x7ffdf681f424,24148188,0,0x0,8
tick,0x7ffdf681f424,24150256,0,0x0,8
tick,0x7ffdf681f424,24152181,0,0x0,8
tick,0x7ffdf681f424,24154174,0,0x0,8
tick,0x7ffdf681f424,24156172,0,0x0,8
tick,0x7ffdf681f424,24158155,0,0x0,8
tick,0x7ffdf681f424,24160158,0,0x0,8
tick,0x7ffdf681f424,24162158,0,0x0,8
tick,0x7ffdf681f424,24164153,0,0x0,8
tick,0x7ffdf681f424,24166151,0,0x0,8
tick,0x7ffdf681f424,24168143,0,0x0,8
tick,0x7ffdf681f424,24170139,0,0x0,8
tick,0x7ffdf681f424,24172171,0,0x0,8
tick,0x7ffdf681f424,24174129,0,0x0,8
tick,0x7ffdf681f424,24176115,0,0x0,8
tick,0x7ffdf681f424,24178107,0,0x0,8
tick,0x7ffdf681f424,24180098,0,0x0,8
tick,0x7ffdf681f424,24182078,0,0x0,8
tick,0x7ffdf681f424,24184099,0,0x0,8
tick,0x7ffdf681f424,24185980,0,0x0,8
tick,0x7ffdf681f424,24188084,0,0x0,8
tick,0x7ffdf681f424,24190074,0,0x0,8
tick,0x7ffdf681f424,24192056,0,0x0,8
tick,0x7ffdf681f424,24194031,0,0x0,8
tick,0x7ffdf681f424,24196014,0,0x0,8
tick,0x7ffdf681f424,24198046,0,0x0,8
tick,0x7ffdf681f424,24200035,0,0x0,8
tick,0x7ffdf681f424,24202037,0,0x0,8
tick,0x7ffdf681f424,24204033,0,0x0,8
tick,0x7ffdf681f424,24206034,0,0x0,8
tick,0x7ffdf681f424,24208027,0,0x0,8
tick,0x7ffdf681f424,24210012,0,0x0,8
tick,0x7ffdf681f424,24212016,0,0x0,8
tick,0x7ffdf681f424,24214010,0,0x0,8
tick,0x7ffdf681f424,24216022,0,0x0,8
tick,0x7ffdf681f424,24217993,0,0x0,8
tick,0x7ffdf681f424,24219981,0,0x0,8
tick,0x7ffdf681f424,24221983,0,0x0,8
tick,0x7ffdf681f424,24223981,0,0x0,8
tick,0x7ffdf681f424,24225971,0,0x0,8
tick,0x7ffdf681f424,24227971,0,0x0,8
tick,0x7ffdf681f424,24229967,0,0x0,8
tick,0x7ffdf681f424,24231958,0,0x0,8
tick,0x7ffdf681f424,24233954,0,0x0,8
tick,0x7ffdf681f424,24235836,0,0x0,8
tick,0x7ffdf681f424,24237932,0,0x0,8
tick,0x7ffdf681f424,24239933,0,0x0,8
tick,0x7ffdf681f424,24241926,0,0x0,8
tick,0x7ffdf681f424,24243930,0,0x0,8
tick,0x7ffdf681f424,24245911,0,0x0,8
tick,0x7ffdf681f424,24247922,0,0x0,8
tick,0x7ffdf681f424,24249914,0,0x0,8
tick,0x7ffdf681f424,24251913,0,0x0,8
tick,0x7ffdf681f424,24253897,0,0x0,8
tick,0x7ffdf681f424,24255905,0,0x0,8
tick,0x7ffdf681f424,24257891,0,0x0,8
tick,0x7ffdf681f424,24259909,0,0x0,8
tick,0x7ffdf681f424,24261879,0,0x0,8
tick,0x7ffdf681f424,24263864,0,0x0,8
tick,0x7ffdf681f424,24265860,0,0x0,8
tick,0x7ffdf681f424,24267863,0,0x0,8
tick,0x7ffdf681f424,24269891,0,0x0,8
tick,0x7ffdf681f424,24271847,0,0x0,8
tick,0x7ffdf681f424,24273758,0,0x0,8
tick,0x7ffdf681f424,24275881,0,0x0,8
tick,0x7ffdf681f424,24277738,0,0x0,8
tick,0x7ffdf681f424,24279823,0,0x0,8
tick,0x7ffdf681f424,24281841,0,0x0,8
tick,0x7ffdf681f424,24283812,0,0x0,8
tick,0x7ffdf681f424,24285694,0,0x0,8
tick,0x7ffdf681f424,24287807,0,0x0,8
tick,0x7ffdf681f424,24289809,0,0x0,8
tick,0x7ffdf681f424,24291797,0,0x0,8
tick,0x7ffdf681f424,24293835,0,0x0,8
tick,0x7ffdf681f424,24295685,0,0x0,8
tick,0x7ffdf681f424,24297669,0,0x0,8
tick,0x7ffdf681f424,24299797,0,0x0,8
tick,0x7ffdf681f424,24301777,0,0x0,8
tick,0x7ffdf681f424,24303843,0,0x0,8
tick,0x7ffdf681f424,24305753,0,0x0,8
tick,0x7ffdf681f424,24307767,0,0x0,8
tick,0x7ffdf681f424,24309754,0,0x0,8
tick,0x7ffdf681f424,24311744,0,0x0,8
tick,0x7ffdf681f424,24313743,0,0x0,8
tick,0x7ffdf681f424,24315752,0,0x0,8
tick,0x7ffdf681f424,24317744,0,0x0,8
tick,0x7ffdf681f424,24319728,0,0x0,8
tick,0x7ffdf681f424,24321722,0,0x0,8
tick,0x7ffdf681f424,24323719,0,0x0,8
tick,0x7ffdf681f424,24325735,0,0x0,8
tick,0x7ffdf681f424,24327594,0,0x0,8
tick,0x7ffdf681f424,24329713,0,0x0,8
tick,0x7ffdf681f424,24331693,0,0x0,8
tick,0x7ffdf681f424,24333693,0,0x0,8
tick,0x7ffdf681f424,24335681,0,0x0,8
tick,0x7ffdf681f424,24337730,0,0x0,8
tick,0x7ffdf681f424,24339734,0,0x0,8
tick,0x7ffdf681f424,24341667,0,0x0,8
tick,0x7ffdf681f424,24343563,0,0x0,8
tick,0x7ffdf681f424,24345661,0,0x0,8
tick,0x7ffdf681f424,24347718,0,0x0,8
tick,0x7ffdf681f424,24349594,0,0x0,8
tick,0x7ffdf681f424,24351637,0,0x0,8
tick,0x7ffdf681f424,24353645,0,0x0,8
tick,0x7ffdf681f424,24355634,0,0x0,8
tick,0x7ffdf681f424,24357627,0,0x0,8
tick,0x7ffdf681f424,24359632,0,0x0,8
tick,0x7ffdf681f424,24361619,0,0x0,8
tick,0x7ffdf681f424,24363605,0,0x0,8
tick,0x7ffdf681f424,24365413,0,0x0,8
tick,0x7ffdf681f424,24367479,0,0x0,8
tick,0x7ffdf681f424,24369439,0,0x0,8
tick,0x7ffdf681f424,24371476,0,0x0,8
tick,0x7ffdf681f424,24373450,0,0x0,8
tick,0x7ffdf681f424,24375579,0,0x0,8
tick,0x7ffdf681f424,24377465,0,0x0,8
tick,0x7ffdf681f424,24379575,0,0x0,8
tick,0x7ffdf681f424,24381572,0,0x0,8
tick,0x7ffdf681f424,24383559,0,0x0,8
tick,0x7ffdf681f424,24385542,0,0x0,8
tick,0x7ffdf681f424,24387544,0,0x0,8
tick,0x7ffdf681f424,24389535,0,0x0,8
tick,0x7ffdf681f424,24391585,0,0x0,8
tick,0x7ffdf681f424,24393525,0,0x0,8
tick,0x7ffdf681f424,24395515,0,0x0,8
tick,0x7ffdf681f424,24397508,0,0x0,8
tick,0x7ffdf681f424,24399505,0,0x0,8
tick,0x7ffdf681f424,24401500,0,0x0,8
tick,0x7ffdf681f424,24403507,0,0x0,8
tick,0x7ffdf681f424,24405494,0,0x0,8
tick,0x7ffdf681f424,24407486,0,0x0,8
tick,0x7ffdf681f424,24409488,0,0x0,8
tick,0x7ffdf681f424,24411485,0,0x0,8
tick,0x7ffdf681f424,24413438,0,0x0,8
tick,0x7ffdf681f424,24415468,0,0x0,8
tick,0x7ffdf681f424,24417476,0,0x0,8
tick,0x7ffdf681f424,24419357,0,0x0,8
tick,0x7ffdf681f424,24421462,0,0x0,8
tick,0x7ffdf681f424,24423471,0,0x0,8
tick,0x7ffdf681f424,24425404,0,0x0,8
tick,0x7ffdf681f424,24427323,0,0x0,8
tick,0x7ffdf681f424,24429472,0,0x0,8
tick,0x7ffdf681f424,24431428,0,0x0,8
tick,0x7ffdf681f424,24433415,0,0x0,8
tick,0x7ffdf681f424,24435440,0,0x0,8
tick,0x7ffdf681f424,24437398,0,0x0,8
tick,0x7ffdf681f424,24439289,0,0x0,8
tick,0x7ffdf681f424,24441395,0,0x0,8
tick,0x7ffdf681f424,24443390,0,0x0,8
tick,0x7ffdf681f424,24445354,0,0x0,8
tick,0x7ffdf681f424,24447393,0,0x0,8
tick,0x7ffdf681f424,24449374,0,0x0,8
tick,0x7ffdf681f424,24451370,0,0x0,8
tick,0x7ffdf681f424,24453390,0,0x0,8
tick,0x7ffdf681f424,24455364,0,0x0,8
tick,0x7ffdf681f424,24457320,0,0x0,8
tick,0x7ffdf681f424,24459351,0,0x0,8
tick,0x7ffdf681f424,24461349,0,0x0,8
tick,0x7ffdf681f424,24463330,0,0x0,8
tick,0x7ffdf681f424,24465330,0,0x0,8
tick,0x7ffdf681f424,24467325,0,0x0,8
tick,0x7ffdf681f424,24469228,0,0x0,8
tick,0x7ffdf681f424,24471316,0,0x0,8
tick,0x7ffdf681f424,24473305,0,0x0,8
tick,0x7ffdf681f424,24475302,0,0x0,8
tick,0x7ffdf681f424,24477309,0,0x0,8
tick,0x7ffdf681f424,24479328,0,0x0,8
tick,0x7ffdf681f424,24481288,0,0x0,8
tick,0x7ffdf681f424,24483285,0,0x0,8
tick,0x7ffdf681f424,24485278,0,0x0,8
tick,0x7ffdf681f424,24487276,0,0x0,8
tick,0x7ffdf681f424,24489270,0,0x0,8
tick,0x7ffdf681f424,24491266,0,0x0,8
tick,0x7ffdf681f424,24493272,0,0x0,8
tick,0x7ffdf681f424,24495258,0,0x0,8
tick,0x7ffdf681f424,24497257,0,0x0,8
tick,0x7ffdf681f424,24499270,0,0x0,8
tick,0x7ffdf681f424,24501254,0,0x0,8
tick,0x7ffdf681f424,24503264,0,0x0,8
tick,0x7ffdf681f424,24505235,0,0x0,8
tick,0x7ffdf681f424,24507222,0,0x0,8
tick,0x7ffdf681f424,24509221,0,0x0,8
tick,0x7ffdf681f424,24511112,0,0x0,8
tick,0x7ffdf681f424,24513215,0,0x0,8
tick,0x7ffdf681f424,24515204,0,0x0,8
tick,0x7ffdf681f424,24517201,0,0x0,8
tick,0x7ffdf681f424,24519049,0,0x0,8
tick,0x7ffdf681f424,24521191,0,0x0,8
tick,0x7ffdf681f424,24523281,0,0x0,8
tick,0x7ffdf681f424,24525180,0,0x0,8
tick,0x7ffdf681f424,24527179,0,0x0,8
tick,0x7ffdf681f424,24529168,0,0x0,8
tick,0x7ffdf681f424,24531166,0,0x0,8
tick,0x7ffdf681f424,24533157,0,0x0,8
tick,0x7ffdf681f424,24535159,0,0x0,8
tick,0x7ffdf681f424,24537150,0,0x0,8
tick,0x7ffdf681f424,24539145,0,0x0,8
tick,0x7ffdf681f424,24541151,0,0x0,8
tick,0x7ffdf681f424,24543136,0,0x0,8
tick,0x7ffdf681f424,24545140,0,0x0,8
tick,0x7ffdf681f424,24547122,0,0x0,8
tick,0x7ffdf681f424,24549110,0,0x0,8
tick,0x7ffdf681f424,24551108,0,0x0,8
tick,0x7ffdf681f424,24553107,0,0x0,8
tick,0x7ffdf681f424,24555103,0,0x0,8
tick,0x7ffdf681f424,24556976,0,0x0,8
tick,0x7ffdf681f424,24559102,0,0x0,8
tick,0x7ffdf681f424,24560978,0,0x0,8
tick,0x7ffdf681f424,24563087,0,0x0,8
tick,0x7ffdf681f424,24565072,0,0x0,8
tick,0x7ffdf681f424,24567045,0,0x0,8
tick,0x7ffdf681f424,24568943,0,0x0,8
tick,0x7ffdf681f424,24571060,0,0x0,8
tick,0x7ffdf681f424,24573067,0,0x0,8
tick,0x7ffdf681f424,24575025,0,0x0,8
tick,0x7ffdf681f424,24577103,0,0x0,8
tick,0x7ffdf681f424,24578926,0,0x0,8
tick,0x7ffdf681f424,24580967,0,0x0,8
tick,0x7ffdf681f424,24583146,0,0x0,8
tick,0x7ffdf681f424,24584890,0,0x0,8
tick,0x7ffdf681f424,24586894,0,0x0,8
tick,0x7ffdf681f424,24588915,0,0x0,8
tick,0x7ffdf681f424,24591001,0,0x0,8
tick,0x7ffdf681f424,24592998,0,0x0,8
tick,0x7ffdf681f424,24594994,0,0x0,8
tick,0x7ffdf681f424,24596989,0,0x0,8
tick,0x7ffdf681f424,24598980,0,0x0,8
tick,0x7ffdf681f424,24600986,0,0x0,8
tick,0x7ffdf681f424,24602968,0,0x0,8
tick,0x7ffdf681f424,24604958,0,0x0,8
tick,0x7ffdf681f424,24606958,0,0x0,8
tick,0x7ffdf681f424,24608952,0,0x0,8
tick,0x7ffdf681f424,24610915,0,0x0,8
tick,0x7ffdf681f424,24612945,0,0x0,8
tick,0x7ffdf681f424,24614938,0,0x0,8
tick,0x7ffdf681f424,24616935,0,0x0,8
tick,0x7ffdf681f424,24618931,0,0x0,8
tick,0x7ffdf681f424,24620925,0,0x0,8
tick,0x7ffdf681f424,24622928,0,0x0,8
tick,0x7ffdf681f424,24624903,0,0x0,8
tick,0x7ffdf681f424,24626909,0,0x0,8
tick,0x7ffdf681f424,24628908,0,0x0,8
tick,0x7ffdf681f424,24630896,0,0x0,8
tick,0x7ffdf681f424,24632865,0,0x0,8
tick,0x7ffdf681f424,24634890,0,0x0,8
tick,0x7ffdf681f424,24636874,0,0x0,8
tick,0x7ffdf681f424,24638874,0,0x0,8
tick,0x7ffdf681f424,24640871,0,0x0,8
tick,0x7ffdf681f424,24642867,0,0x0,8
tick,0x7ffdf681f424,24644867,0,0x0,8
tick,0x7ffdf681f424,24646852,0,0x0,8
tick,0x7ffdf681f424,24648847,0,0x0,8
tick,0x7ffdf681f424,24650844,0,0x0,8
tick,0x7ffdf681f424,24652840,0,0x0,8
tick,0x7ffdf681f424,24654910,0,0x0,8
tick,0x7ffdf681f424,24656830,0,0x0,8
tick,0x7ffdf681f424,24658824,0,0x0,8
tick,0x7ffdf681f424,24660744,0,0x0,8
tick,0x7ffdf681f424,24662821,0,0x0,8
tick,0x7ffdf681f424,24664812,0,0x0,8
tick,0x7ffdf681f424,24666827,0,0x0,8
tick,0x7ffdf681f424,24668790,0,0x0,8
tick,0x7ffdf681f424,24670788,0,0x0,8
tick,0x7ffdf681f424,24672788,0,0x0,8
tick,0x7ffdf681f424,24674774,0,0x0,8
tick,0x7ffdf681f424,24676740,0,0x0,8
tick,0x7ffdf681f424,24678760,0,0x0,8
tick,0x7ffdf681f424,24680761,0,0x0,8
tick,0x7ffdf681f424,24682759,0,0x0,8
tick,0x7ffdf681f424,24684754,0,0x0,8
tick,0x7ffdf681f424,24686752,0,0x0,8
tick,0x7ffdf681f424,24688752,0,0x0,8
tick,0x7ffdf681f424,24690738,0,0x0,8
tick,0x7ffdf681f424,24692730,0,0x0,8
tick,0x7ffdf681f424,24694725,0,0x0,8
tick,0x7ffdf681f424,24696717,0,0x0,8
tick,0x7ffdf681f424,24698744,0,0x0,8
tick,0x7ffdf681f424,24700717,0,0x0,8
tick,0x7ffdf681f424,24702596,0,0x0,8
tick,0x7ffdf681f424,24704700,0,0x0,8
tick,0x7ffdf681f424,24706686,0,0x0,8
tick,0x7ffdf681f424,24708691,0,0x0,8
tick,0x7ffdf681f424,24710700,0,0x0,8
tick,0x7ffdf681f424,24712676,0,0x0,8
tick,0x7ffdf681f424,24714668,0,0x0,8
tick,0x7ffdf681f424,24716667,0,0x0,8
tick,0x7ffdf681f424,24718661,0,0x0,8
tick,0x7ffdf681f424,24720717,0,0x0,8
tick,0x7ffdf681f424,24722653,0,0x0,8
tick,0x7ffdf681f424,24724635,0,0x0,8
tick,0x7ffdf681f424,24726640,0,0x0,8
tick,0x7ffdf681f424,24728633,0,0x0,8
tick,0x7ffdf681f424,24730661,0,0x0,8
tick,0x7ffdf681f424,24732612,0,0x0,8
tick,0x7ffdf681f424,24734506,0,0x0,8
tick,0x7ffdf681f424,24736719,0,0x0,8
tick,0x7ffdf681f424,24738582,0,0x0,8
tick,0x7ffdf681f424,24740603,0,0x0,8
tick,0x7ffdf681f424,24742674,0,0x0,8
tick,0x7ffdf681f424,24744520,0,0x0,8
tick,0x7ffdf681f424,24746592,0,0x0,8
tick,0x7ffdf681f424,24748582,0,0x0,8
tick,0x7ffdf681f424,24750575,0,0x0,8
tick,0x7ffdf681f424,24752437,0,0x0,8
tick,0x7ffdf681f424,24754580,0,0x0,8
tick,0x7ffdf681f424,24756566,0,0x0,8
tick,0x7ffdf681f424,24758554,0,0x0,8
tick,0x7ffdf681f424,24760561,0,0x0,8
tick,0x7ffdf681f424,24762541,0,0x0,8
tick,0x7ffdf681f424,24764555,0,0x0,8
tick,0x7ffdf681f424,24766532,0,0x0,8
tick,0x7ffdf681f424,24768529,0,0x0,8
tick,0x7ffdf681f424,24770517,0,0x0,8
tick,0x7ffdf681f424,24772518,0,0x0,8
tick,0x7ffdf681f424,24774517,0,0x0,8
tick,0x7ffdf681f424,24776508,0,0x0,8
tick,0x7ffdf681f424,24778496,0,0x0,8
tick,0x7ffdf681f424,24780496,0,0x0,8
tick,0x7ffdf681f424,24782498,0,0x0,8
tick,0x7ffdf681f424,24784486,0,0x0,8
tick,0x7ffdf681f424,24786446,0,0x0,8
tick,0x7ffdf681f424,24788468,0,0x0,8
tick,0x7ffdf681f424,24790482,0,0x0,8
tick,0x7ffdf681f424,24792463,0,0x0,8
tick,0x7ffdf681f424,24794351,0,0x0,8
tick,0x7ffdf681f424,24796456,0,0x0,8
tick,0x7ffdf681f424,24798463,0,0x0,8
tick,0x7ffdf681f424,24800445,0,0x0,8
tick,0x7ffdf681f424,24802433,0,0x0,8
tick,0x7ffdf681f424,24804432,0,0x0,8
tick,0x7ffdf681f424,24806426,0,0x0,8
tick,0x7ffdf681f424,24808440,0,0x0,8
tick,0x7ffdf681f424,24810444,0,0x0,8
tick,0x7ffdf681f424,24812412,0,0x0,8
tick,0x7ffdf681f424,24814408,0,0x0,8
tick,0x7ffdf681f424,24816405,0,0x0,8
tick,0x7ffdf681f424,24818403,0,0x0,8
tick,0x7ffdf681f424,24820278,0,0x0,8
tick,0x7ffdf681f424,24822384,0,0x0,8
tick,0x7ffdf681f424,24824382,0,0x0,8
tick,0x7ffdf681f424,24826347,0,0x0,8
tick,0x7ffdf681f424,24828375,0,0x0,8
tick,0x7ffdf681f424,24830417,0,0x0,8
tick,0x7ffdf681f424,24832360,0,0x0,8
tick,0x7ffdf681f424,24834260,0,0x0,8
tick,0x7ffdf681f424,24836355,0,0x0,8
tick,0x7ffdf681f424,24838234,0,0x0,8
tick,0x7ffdf681f424,24840334,0,0x0,8
tick,0x7ffdf681f424,24842336,0,0x0,8
tick,0x7ffdf681f424,24844219,0,0x0,8
tick,0x7ffdf681f424,24846335,0,0x0,8
tick,0x7ffdf681f424,24848313,0,0x0,8
tick,0x7ffdf681f424,24850304,0,0x0,8
tick,0x7ffdf681f424,24852351,0,0x0,8
tick,0x7ffdf681f424,24854291,0,0x0,8
tick,0x7ffdf681f424,24856292,0,0x0,8
tick,0x7ffdf681f424,24858296,0,0x0,8
tick,0x7ffdf681f424,24860283,0,0x0,8
tick,0x7ffdf681f424,24862272,0,0x0,8
tick,0x7ffdf681f424,24864280,0,0x0,8
tick,0x7ffdf681f424,24866269,0,0x0,8
tick,0x7ffdf681f424,24868271,0,0x0,8
tick,0x7ffdf681f424,24870255,0,0x0,8
tick,0x7ffdf681f424,24872247,0,0x0,8
tick,0x7ffdf681f424,24874284,0,0x0,8
tick,0x7ffdf681f424,24876240,0,0x0,8
tick,0x7ffdf681f424,24878234,0,0x0,8
tick,0x7ffdf681f424,24880225,0,0x0,8
tick,0x7ffdf681f424,24882226,0,0x0,8
tick,0x7ffdf681f424,24884246,0,0x0,8
tick,0x7ffdf681f424,24886233,0,0x0,8
tick,0x7ffdf681f424,24888109,0,0x0,8
tick,0x7ffdf681f424,24890311,0,0x0,8
tick,0x7ffdf681f424,24892201,0,0x0,8
tick,0x7ffdf681f424,24894107,0,0x0,8
tick,0x7ffdf681f424,24896153,0,0x0,8
tick,0x7ffdf681f424,24898184,0,0x0,8
tick,0x7ffdf681f424,24900181,0,0x0,8
tick,0x7ffdf681f424,24902189,0,0x0,8
tick,0x7ffdf681f424,24904162,0,0x0,8
tick,0x7ffdf681f424,24906154,0,0x0,8
tick,0x7ffdf681f424,24908166,0,0x0,8
tick,0x7ffdf681f424,24910149,0,0x0,8
tick,0x7ffdf681f424,24912153,0,0x0,8
tick,0x7ffdf681f424,24914153,0,0x0,8
tick,0x7ffdf681f424,24916133,0,0x0,8
tick,0x7ffdf681f424,24918164,0,0x0,8
tick,0x7ffdf681f424,24920127,0,0x0,8
tick,0x7ffdf681f424,24922123,0,0x0,8
tick,0x7ffdf681f424,24924111,0,0x0,8
tick,0x7ffdf681f424,24926108,0,0x0,8
tick,0x7ffdf681f424,24928104,0,0x0,8
tick,0x7ffdf681f424,24930102,0,0x0,8
tick,0x7ffdf681f424,24932091,0,0x0,8
tick,0x7ffdf681f424,24934085,0,0x0,8
tick,0x7ffdf681f424,24935975,0,0x0,8
tick,0x7ffdf681f424,24938074,0,0x0,8
tick,0x7ffdf681f424,24940114,0,0x0,8
tick,0x7ffdf681f424,24942061,0,0x0,8
tick,0x7ffdf681f424,24944065,0,0x0,8
tick,0x7ffdf681f424,24946058,0,0x0,8
tick,0x7ffdf681f424,24948059,0,0x0,8
tick,0x7ffdf681f424,24950043,0,0x0,8
tick,0x7ffdf681f424,24951938,0,0x0,8
tick,0x7ffdf681f424,24954037,0,0x0,8
tick,0x7ffdf681f424,24956040,0,0x0,8
tick,0x7ffdf681f424,24958032,0,0x0,8
tick,0x7ffdf681f424,24960013,0,0x0,8
tick,0x7ffdf681f424,24962038,0,0x0,8
tick,0x7ffdf681f424,24964063,0,0x0,8
tick,0x7ffdf681f424,24965999,0,0x0,8
tick,0x7ffdf681f424,24967996,0,0x0,8
tick,0x7ffdf681f424,24969875,0,0x0,8
tick,0x7ffdf681f424,24971986,0,0x0,8
tick,0x7ffdf681f424,24973992,0,0x0,8
tick,0x7ffdf681f424,24975987,0,0x0,8
tick,0x7ffdf681f424,24977879,0,0x0,8
tick,0x7ffdf681f424,24979975,0,0x0,8
tick,0x7ffdf681f424,24981957,0,0x0,8
tick,0x7ffdf681f424,24984005,0,0x0,8
tick,0x7ffdf681f424,24985907,0,0x0,8
tick,0x7ffdf681f424,24987936,0,0x0,8
tick,0x7ffdf681f424,24989946,0,0x0,8
tick,0x7ffdf681f424,24991930,0,0x0,8
tick,0x7ffdf681f424,24993930,0,0x0,8
tick,0x7ffdf681f424,24995931,0,0x0,8
tick,0x7ffdf681f424,24997914,0,0x0,8
tick,0x7ffdf681f424,24999902,0,0x0,8
tick,0x7ffdf681f424,25001909,0,0x0,8
tick,0x7ffdf681f424,25003901,0,0x0,8
tick,0x7ffdf681f424,25005887,0,0x0,8
tick,0x7ffdf681f424,25007888,0,0x0,8
tick,0x7ffdf681f424,25009874,0,0x0,8
tick,0x7ffdf681f424,25011877,0,0x0,8
tick,0x7ffdf681f424,25013871,0,0x0,8
tick,0x7ffdf681f424,25015870,0,0x0,8
tick,0x7ffdf681f424,25017866,0,0x0,8
tick,0x7ffdf681f424,25019856,0,0x0,8
tick,0x7ffdf681f424,25021850,0,0x0,8
tick,0x7ffdf681f424,25023844,0,0x0,8
tick,0x7ffdf681f424,25025839,0,0x0,8
tick,0x7ffdf681f424,25027774,0,0x0,8
tick,0x7ffdf681f424,25029827,0,0x0,8
tick,0x7ffdf681f424,25031826,0,0x0,8
tick,0x7ffdf681f424,25033818,0,0x0,8
tick,0x7ffdf681f424,25035803,0,0x0,8
tick,0x7ffdf681f424,25037856,0,0x0,8
tick,0x7ffdf681f424,25039761,0,0x0,8
tick,0x7ffdf681f424,25041690,0,0x0,8
tick,0x7ffdf681f424,25043821,0,0x0,8
tick,0x7ffdf681f424,25045783,0,0x0,8
tick,0x7ffdf681f424,25047785,0,0x0,8
tick,0x7ffdf681f424,25049854,0,0x0,8
tick,0x7ffdf681f424,25051770,0,0x0,8
tick,0x7ffdf681f424,25053649,0,0x0,8
tick,0x7ffdf681f424,25055757,0,0x0,8
tick,0x7ffdf681f424,25057754,0,0x0,8
tick,0x7ffdf681f424,25059757,0,0x0,8
tick,0x7ffdf681f424,25061754,0,0x0,8
tick,0x7ffdf681f424,25063740,0,0x0,8
tick,0x7ffdf681f424,25065731,0,0x0,8
tick,0x7ffdf681f424,25067738,0,0x0,8
tick,0x7ffdf681f424,25069720,0,0x0,8
tick,0x7ffdf681f424,25071728,0,0x0,8
tick,0x7ffdf681f424,25073720,0,0x0,8
tick,0x7ffdf681f424,25075716,0,0x0,8
tick,0x7ffdf681f424,25077599,0,0x0,8
tick,0x7ffdf681f424,25079695,0,0x0,8
tick,0x7ffdf681f424,25081695,0,0x0,8
tick,0x7ffdf681f424,25083704,0,0x0,8
tick,0x7ffdf681f424,25085688,0,0x0,8
tick,0x7ffdf681f424,25087667,0,0x0,8
tick,0x7ffdf681f424,25089684,0,0x0,8
tick,0x7ffdf681f424,25091661,0,0x0,8
tick,0x7ffdf681f424,25093711,0,0x0,8
tick,0x7ffdf681f424,25095652,0,0x0,8
tick,0x7ffdf681f424,25097654,0,0x0,8
tick,0x7ffdf681f424,25099645,0,0x0,8
tick,0x7ffdf681f424,25101630,0,0x0,8
tick,0x7ffdf681f424,25103638,0,0x0,8
tick,0x7ffdf681f424,25105630,0,0x0,8
tick,0x7ffdf681f424,25107622,0,0x0,8
tick,0x7ffdf681f424,25109610,0,0x0,8
tick,0x7ffdf681f424,25111619,0,0x0,8
tick,0x7ffdf681f424,25113599,0,0x0,8
tick,0x7ffdf681f424,25115629,0,0x0,8
tick,0x7ffdf681f424,25117616,0,0x0,8
tick,0x7ffdf681f424,25119526,0,0x0,8
tick,0x7ffdf681f424,25121586,0,0x0,8
tick,0x7ffdf681f424,25123580,0,0x0,8
tick,0x7ffdf681f424,25125579,0,0x0,8
tick,0x7ffdf681f424,25127484,0,0x0,8
tick,0x7ffdf681f424,25129562,0,0x0,8
tick,0x7ffdf681f424,25131555,0,0x0,8
tick,0x7ffdf681f424,25133555,0,0x0,8
tick,0x7ffdf681f424,25135552,0,0x0,8
tick,0x7ffdf681f424,25137570,0,0x0,8
tick,0x7ffdf681f424,25139551,0,0x0,8
tick,0x7ffdf681f424,25141530,0,0x0,8
tick,0x7ffdf681f424,25143529,0,0x0,8
tick,0x7ffdf681f424,25145528,0,0x0,8
tick,0x7ffdf681f424,25147530,0,0x0,8
tick,0x7ffdf681f424,25149518,0,0x0,8
tick,0x7ffdf681f424,25151502,0,0x0,8
tick,0x7ffdf681f424,25153513,0,0x0,8
tick,0x7ffdf681f424,25155500,0,0x0,8
tick,0x7ffdf681f424,25157505,0,0x0,8
tick,0x7ffdf681f424,25159517,0,0x0,8
tick,0x7ffdf681f424,25161477,0,0x0,8
tick,0x7ffdf681f424,25163474,0,0x0,8
tick,0x7ffdf681f424,25165466,0,0x0,8
tick,0x7ffdf681f424,25167461,0,0x0,8
tick,0x7ffdf681f424,25169380,0,0x0,8
tick,0x7ffdf681f424,25171454,0,0x0,8
tick,0x7ffdf681f424,25173442,0,0x0,8
tick,0x7ffdf681f424,25175444,0,0x0,8
tick,0x7ffdf681f424,25177454,0,0x0,8
tick,0x7ffdf681f424,25179436,0,0x0,8
tick,0x7ffdf681f424,25181473,0,0x0,8
tick,0x7ffdf681f424,25183446,0,0x0,8
tick,0x7ffdf681f424,25185416,0,0x0,8
tick,0x7ffdf681f424,25187404,0,0x0,8
tick,0x7ffdf681f424,25189402,0,0x0,8
tick,0x7ffdf681f424,25191432,0,0x0,8
tick,0x7ffdf681f424,25193367,0,0x0,8
tick,0x7ffdf681f424,25195278,0,0x0,8
tick,0x7ffdf681f424,25197419,0,0x0,8
tick,0x7ffdf681f424,25199379,0,0x0,8
tick,0x7ffdf681f424,25201372,0,0x0,8
tick,0x7ffdf681f424,25203401,0,0x0,8
tick,0x7ffdf681f424,25205359,0,0x0,8
tick,0x7ffdf681f424,25207358,0,0x0,8
tick,0x7ffdf681f424,25209354,0,0x0,8
tick,0x7ffdf681f424,25211343,0,0x0,8
tick,0x7ffdf681f424,25213339,0,0x0,8
tick,0x7ffdf681f424,25215344,0,0x0,8
tick,0x7ffdf681f424,25217330,0,0x0,8
tick,0x7ffdf681f424,25219218,0,0x0,8
tick,0x7ffdf681f424,25221320,0,0x0,8
tick,0x7ffdf681f424,25223314,0,0x0,8
tick,0x7ffdf681f424,25225314,0,0x0,8
tick,0x7ffdf681f424,25227302,0,0x0,8
tick,0x7ffdf681f424,25229301,0,0x0,8
tick,0x7ffdf681f424,25231291,0,0x0,8
tick,0x7ffdf681f424,25233284,0,0x0,8
tick,0x7ffdf681f424,25235292,0,0x0,8
tick,0x7ffdf681f424,25237280,0,0x0,8
tick,0x7ffdf681f424,25239280,0,0x0,8
tick,0x7ffdf681f424,25241269,0,0x0,8
tick,0x7ffdf681f424,25243258,0,0x0,8
tick,0x7ffdf681f424,25245252,0,0x0,8
tick,0x7ffdf681f424,25247286,0,0x0,8
tick,0x7ffdf681f424,25249235,0,0x0,8
tick,0x7ffdf681f424,25251233,0,0x0,8
tick,0x7ffdf681f424,25253235,0,0x0,8
tick,0x7ffdf681f424,25255228,0,0x0,8
tick,0x7ffdf681f424,25257221,0,0x0,8
tick,0x7ffdf681f424,25259232,0,0x0,8
tick,0x7ffdf681f424,25261109,0,0x0,8
tick,0x7ffdf681f424,25263207,0,0x0,8
tick,0x7ffdf681f424,25265124,0,0x0,8
tick,0x7ffdf681f424,25267192,0,0x0,8
tick,0x7ffdf681f424,25269201,0,0x0,8
tick,0x7ffdf681f424,25271102,0,0x0,8
tick,0x7ffdf681f424,25273178,0,0x0,8
tick,0x7ffdf681f424,25275166,0,0x0,8
tick,0x7ffdf681f424,25277169,0,0x0,8
tick,0x7ffdf681f424,25279164,0,0x0,8
tick,0x7ffdf681f424,25281203,0,0x0,8
tick,0x7ffdf681f424,25283156,0,0x0,8
tick,0x7ffdf681f424,25285146,0,0x0,8
tick,0x7ffdf681f424,25287140,0,0x0,8
tick,0x7ffdf681f424,25289140,0,0x0,8
tick,0x7ffdf681f424,25291190,0,0x0,8
tick,0x7ffdf681f424,25293123,0,0x0,8
tick,0x7ffdf681f424,25295137,0,0x0,8
tick,0x7ffdf681f424,25297117,0,0x0,8
tick,0x7ffdf681f424,25299110,0,0x0,8
tick,0x7ffdf681f424,25301103,0,0x0,8
tick,0x7ffdf681f424,25303108,0,0x0,8
tick,0x7ffdf681f424,25305099,0,0x0,8
tick,0x7ffdf681f424,25307091,0,0x0,8
tick,0x7ffdf681f424,25309090,0,0x0,8
tick,0x7ffdf681f424,25310975,0,0x0,8
tick,0x7ffdf681f424,25313100,0,0x0,8
tick,0x7ffdf681f424,25315067,0,0x0,8
tick,0x7ffdf681f424,25317074,0,0x0,8
tick,0x7ffdf681f424,25319054,0,0x0,8
tick,0x7ffdf681f424,25321056,0,0x0,8
tick,0x7ffdf681f424,25323063,0,0x0,8
tick,0x7ffdf681f424,25325043,0,0x0,8
tick,0x7ffdf681f424,25327028,0,0x0,8
tick,0x7ffdf681f424,25329031,0,0x0,8
tick,0x7ffdf681f424,25331031,0,0x0,8
tick,0x7ffdf681f424,25333017,0,0x0,8
tick,0x7ffdf681f424,25335054,0,0x0,8
tick,0x7ffdf681f424,25337014,0,0x0,8
tick,0x7ffdf681f424,25338997,0,0x0,8
tick,0x7ffdf681f424,25340997,0,0x0,8
tick,0x7ffdf681f424,25343002,0,0x0,8
tick,0x7ffdf681f424,25345013,0,0x0,8
tick,0x7ffdf681f424,25346928,0,0x0,8
tick,0x7ffdf681f424,25348867,0,0x0,8
tick,0x7ffdf681f424,25350992,0,0x0,8
tick,0x7ffdf681f424,25352843,0,0x0,8
tick,0x7ffdf681f424,25354973,0,0x0,8
tick,0x7ffdf681f424,25356999,0,0x0,8
tick,0x7ffdf681f424,25358950,0,0x0,8
tick,0x7ffdf681f424,25360844,0,0x0,8
tick,0x7ffdf681f424,25362938,0,0x0,8
tick,0x7ffdf681f424,25364942,0,0x0,8
tick,0x7ffdf681f424,25366832,0,0x0,8
tick,0x7ffdf681f424,25368935,0,0x0,8
tick,0x7ffdf681f424,25370916,0,0x0,8
tick,0x7ffdf681f424,25372911,0,0x0,8
tick,0x7ffdf681f424,25374915,0,0x0,8
tick,0x7ffdf681f424,25376896,0,0x0,8
tick,0x7ffdf681f424,25378909,0,0x0,8
tick,0x7ffdf681f424,25380855,0,0x0,8
tick,0x7ffdf681f424,25382879,0,0x0,8
tick,0x7ffdf681f424,25384879,0,0x0,8
tick,0x7ffdf681f424,25386869,0,0x0,8
tick,0x7ffdf681f424,25388869,0,0x0,8
tick,0x7ffdf681f424,25390873,0,0x0,8
tick,0x7ffdf681f424,25392868,0,0x0,8
tick,0x7ffdf681f424,25394851,0,0x0,8
tick,0x7ffdf681f424,25396855,0,0x0,8
tick,0x7ffdf681f424,25398853,0,0x0,8
tick,0x7ffdf681f424,25400886,0,0x0,8
tick,0x7ffdf681f424,25402737,0,0x0,8
tick,0x7ffdf681f424,25404826,0,0x0,8
tick,0x7ffdf681f424,25406818,0,0x0,8
tick,0x7ffdf681f424,25408811,0,0x0,8
tick,0x7ffdf681f424,25410819,0,0x0,8
tick,0x7ffdf681f424,25412816,0,0x0,8
tick,0x7ffdf681f424,25414802,0,0x0,8
tick,0x7ffdf681f424,25416795,0,0x0,8
tick,0x7ffdf681f424,25418802,0,0x0,8
tick,0x7ffdf681f424,25420852,0,0x0,8
tick,0x7ffdf681f424,25422822,0,0x0,8
tick,0x7ffdf681f424,25424796,0,0x0,8
tick,0x7ffdf681f424,25426765,0,0x0,8
tick,0x7ffdf681f424,25428762,0,0x0,8
tick,0x7ffdf681f424,25430761,0,0x0,8
tick,0x7ffdf681f424,25432756,0,0x0,8
tick,0x7ffdf681f424,25434765,0,0x0,8
tick,0x7ffdf681f424,25436740,0,0x0,8
tick,0x7ffdf681f424,25438631,0,0x0,8
tick,0x7ffdf681f424,25440740,0,0x0,8
tick,0x7ffdf681f424,25442730,0,0x0,8
tick,0x7ffdf681f424,25444756,0,0x0,8
tick,0x7ffdf681f424,25446711,0,0x0,8
tick,0x7ffdf681f424,25448709,0,0x0,8
tick,0x7ffdf681f424,25450709,0,0x0,8
tick,0x7ffdf681f424,25452594,0,0x0,8
tick,0x7ffdf681f424,25454700,0,0x0,8
tick,0x7ffdf681f424,25456720,0,0x0,8
tick,0x7ffdf681f424,25458682,0,0x0,8
tick,0x7ffdf681f424,25460676,0,0x0,8
tick,0x7ffdf681f424,25462678,0,0x0,8
tick,0x7ffdf681f424,25464671,0,0x0,8
tick,0x7ffdf681f424,25466691,0,0x0,8
tick,0x7ffdf681f424,25468653,0,0x0,8
tick,0x7ffdf681f424,25470653,0,0x0,8
tick,0x7ffdf681f424,25472640,0,0x0,8
tick,0x7ffdf681f424,25474644,0,0x0,8
tick,0x7ffdf681f424,25476629,0,0x0,8
tick,0x7ffdf681f424,25478641,0,0x0,8
tick,0x7ffdf681f424,25480625,0,0x0,8
tick,0x7ffdf681f424,25482626,0,0x0,8
tick,0x7ffdf681f424,25484620,0,0x0,8
tick,0x7ffdf681f424,25486604,0,0x0,8
tick,0x7ffdf681f424,25488641,0,0x0,8
tick,0x7ffdf681f424,25490597,0,0x0,8
tick,0x7ffdf681f424,25492587,0,0x0,8
tick,0x7ffdf681f424,25494487,0,0x0,8
tick,0x7ffdf681f424,25496586,0,0x0,8
tick,0x7ffdf681f424,25498611,0,0x0,8
tick,0x7ffdf681f424,25500506,0,0x0,8
tick,0x7ffdf681f424,25502432,0,0x0,8
tick,0x7ffdf681f424,25504566,0,0x0,8
tick,0x7ffdf681f424,25506567,0,0x0,8
tick,0x7ffdf681f424,25508550,0,0x0,8
tick,0x7ffdf681f424,25510572,0,0x0,8
tick,0x7ffdf681f424,25512540,0,0x0,8
tick,0x7ffdf681f424,25514534,0,0x0,8
tick,0x7ffdf681f424,25516533,0,0x0,8
tick,0x7ffdf681f424,25518524,0,0x0,8
tick,0x7ffdf681f424,25520519,0,0x0,8
tick,0x7ffdf681f424,25522521,0,0x0,8
tick,0x7ffdf681f424,25524506,0,0x0,8
tick,0x7ffdf681f424,25526505,0,0x0,8
tick,0x7ffdf681f424,25528503,0,0x0,8
tick,0x7ffdf681f424,25530487,0,0x0,8
tick,0x7ffdf681f424,25532512,0,0x0,8
tick,0x7ffdf681f424,25534481,0,0x0,8
tick,0x7ffdf681f424,25536478,0,0x0,8
tick,0x7ffdf681f424,25538470,0,0x0,8
tick,0x7ffdf681f424,25540463,0,0x0,8
tick,0x7ffdf681f424,25542461,0,0x0,8
tick,0x7ffdf681f424,25544357,0,0x0,8
tick,0x7ffdf681f424,25546450,0,0x0,8
tick,0x7ffdf681f424,25548449,0,0x0,8
tick,0x7ffdf681f424,25550450,0,0x0,8
tick,0x7ffdf681f424,25552441,0,0x0,8
tick,0x7ffdf681f424,25554462,0,0x0,8
tick,0x7ffdf681f424,25556428,0,0x0,8
tick,0x7ffdf681f424,25558445,0,0x0,8
tick,0x7ffdf681f424,25560300,0,0x0,8
tick,0x7ffdf681f424,25562416,0,0x0,8
tick,0x7ffdf681f424,25564405,0,0x0,8
tick,0x7ffdf681f424,25566410,0,0x0,8
tick,0x7ffdf681f424,25568384,0,0x0,8
tick,0x7ffdf681f424,25570385,0,0x0,8
tick,0x7ffdf681f424,25572384,0,0x0,8
tick,0x7ffdf681f424,25574372,0,0x0,8
tick,0x7ffdf681f424,25576404,0,0x0,8
tick,0x7ffdf681f424,25578403,0,0x0,8
tick,0x7ffdf681f424,25580357,0,0x0,8
tick,0x7ffdf681f424,25582322,0,0x0,8
tick,0x7ffdf681f424,25584243,0,0x0,8
tick,0x7ffdf681f424,25586225,0,0x0,8
tick,0x7ffdf681f424,25588219,0,0x0,8
tick,0x7ffdf681f424,25590334,0,0x0,8
tick,0x7ffdf681f424,25592330,0,0x0,8
tick,0x7ffdf681f424,25594213,0,0x0,8
tick,0x7ffdf681f424,25596194,0,0x0,8
tick,0x7ffdf681f424,25598245,0,0x0,8
tick,0x7ffdf681f424,25600195,0,0x0,8
tick,0x7ffdf681f424,25602276,0,0x0,8
tick,0x7ffdf681f424,25604181,0,0x0,8
tick,0x7ffdf681f424,25606322,0,0x0,8
tick,0x7ffdf681f424,25608282,0,0x0,8
tick,0x7ffdf681f424,25610288,0,0x0,8
tick,0x7ffdf681f424,25612285,0,0x0,8
tick,0x7ffdf681f424,25614266,0,0x0,8
tick,0x7ffdf681f424,25616229,0,0x0,8
tick,0x7ffdf681f424,25618256,0,0x0,8
tick,0x7ffdf681f424,25620327,0,0x0,8
tick,0x7ffdf681f424,25622249,0,0x0,8
tick,0x7ffdf681f424,25624239,0,0x0,8
tick,0x7ffdf681f424,25626244,0,0x0,8
tick,0x7ffdf681f424,25628232,0,0x0,8
tick,0x7ffdf681f424,25630225,0,0x0,8
tick,0x7ffdf681f424,25632227,0,0x0,8
tick,0x7ffdf681f424,25634218,0,0x0,8
tick,0x7ffdf681f424,25636100,0,0x0,8
tick,0x7ffdf681f424,25638190,0,0x0,8
tick,0x7ffdf681f424,25640189,0,0x0,8
tick,0x7ffdf681f424,25642269,0,0x0,8
tick,0x7ffdf681f424,25644204,0,0x0,8
tick,0x7ffdf681f424,25646188,0,0x0,8
tick,0x7ffdf681f424,25648183,0,0x0,8
tick,0x7ffdf681f424,25650170,0,0x0,8
tick,0x7ffdf681f424,25652210,0,0x0,8
tick,0x7ffdf681f424,25654061,0,0x0,8
tick,0x7ffdf681f424,25656051,0,0x0,8
tick,0x7ffdf681f424,25658188,0,0x0,8
tick,0x7ffdf681f424,25660119,0,0x0,8
tick,0x7ffdf681f424,25662025,0,0x0,8
tick,0x7ffdf681f424,25664198,0,0x0,8
tick,0x7ffdf681f424,25666124,0,0x0,8
tick,0x7ffdf681f424,25668122,0,0x0,8
tick,0x7ffdf681f424,25670117,0,0x0,8
tick,0x7ffdf681f424,25672115,0,0x0,8
tick,0x7ffdf681f424,25674107,0,0x0,8
tick,0x7ffdf681f424,25676112,0,0x0,8
tick,0x7ffdf681f424,25678096,0,0x0,8
tick,0x7ffdf681f424,25680095,0,0x0,8
tick,0x7ffdf681f424,25682102,0,0x0,8
tick,0x7ffdf681f424,25684079,0,0x0,8
tick,0x7ffdf681f424,25685999,0,0x0,8
tick,0x7ffdf681f424,25688082,0,0x0,8
tick,0x7ffdf681f424,25690066,0,0x0,8
tick,0x7ffdf681f424,25692067,0,0x0,8
tick,0x7ffdf681f424,25694054,0,0x0,8
tick,0x7ffdf681f424,25696053,0,0x0,8
tick,0x7ffdf681f424,25698055,0,0x0,8
tick,0x7ffdf681f424,25700033,0,0x0,8
tick,0x7ffdf681f424,25702038,0,0x0,8
tick,0x7ffdf681f424,25704018,0,0x0,8
tick,0x7ffdf681f424,25706014,0,0x0,8
tick,0x7ffdf681f424,25708054,0,0x0,8
tick,0x7ffdf681f424,25710010,0,0x0,8
tick,0x7ffdf681f424,25712007,0,0x0,8
tick,0x7ffdf681f424,25713990,0,0x0,8
tick,0x7ffdf681f424,25715988,0,0x0,8
tick,0x7ffdf681f424,25717993,0,0x0,8
tick,0x7ffdf681f424,25720003,0,0x0,8
tick,0x7ffdf681f424,25721978,0,0x0,8
tick,0x7ffdf681f424,25723973,0,0x0,8
tick,0x7ffdf681f424,25725959,0,0x0,8
tick,0x7ffdf681f424,25727861,0,0x0,8
tick,0x7ffdf681f424,25729985,0,0x0,8
tick,0x7ffdf681f424,25731981,0,0x0,8
tick,0x7ffdf681f424,25733955,0,0x0,8
tick,0x7ffdf681f424,25735898,0,0x0,8
tick,0x7ffdf681f424,25737938,0,0x0,8
tick,0x7ffdf681f424,25739930,0,0x0,8
tick,0x7ffdf681f424,25741931,0,0x0,8
tick,0x7ffdf681f424,25743922,0,0x0,8
tick,0x7ffdf681f424,25745914,0,0x0,8
tick,0x7ffdf681f424,25747895,0,0x0,8
tick,0x7ffdf681f424,25749916,0,0x0,8
tick,0x7ffdf681f424,25751939,0,0x0,8
tick,0x7ffdf681f424,25753892,0,0x0,8
tick,0x7ffdf681f424,25755883,0,0x0,8
tick,0x7ffdf681f424,25757884,0,0x0,8
tick,0x7ffdf681f424,25759871,0,0x0,8
tick,0x7ffdf681f424,25761880,0,0x0,8
tick,0x7ffdf681f424,25763877,0,0x0,8
tick,0x7ffdf681f424,25765863,0,0x0,8
tick,0x7ffdf681f424,25767858,0,0x0,8
tick,0x7ffdf681f424,25769847,0,0x0,8
tick,0x7ffdf681f424,25771844,0,0x0,8
tick,0x7ffdf681f424,25773918,0,0x0,8
tick,0x7ffdf681f424,25775836,0,0x0,8
tick,0x7ffdf681f424,25777726,0,0x0,8
tick,0x7ffdf681f424,25779824,0,0x0,8
tick,0x7ffdf681f424,25781843,0,0x0,8
tick,0x7ffdf681f424,25783821,0,0x0,8
tick,0x7ffdf681f424,25785821,0,0x0,8
tick,0x7ffdf681f424,25787798,0,0x0,8
tick,0x7ffdf681f424,25789797,0,0x0,8
tick,0x7ffdf681f424,25791783,0,0x0,8
tick,0x7ffdf681f424,25793787,0,0x0,8
tick,0x7ffdf681f424,25795794,0,0x0,8
tick,0x7ffdf681f424,25797778,0,0x0,8
tick,0x7ffdf681f424,25799774,0,0x0,8
tick,0x7ffdf681f424,25801781,0,0x0,8
tick,0x7ffdf681f424,25803759,0,0x0,8
tick,0x7ffdf681f424,25805789,0,0x0,8
tick,0x7ffdf681f424,25807684,0,0x0,8
tick,0x7ffdf681f424,25809634,0,0x0,8
tick,0x7ffdf681f424,25811749,0,0x0,8
tick,0x7ffdf681f424,25813725,0,0x0,8
tick,0x7ffdf681f424,25815732,0,0x0,8
tick,0x7ffdf681f424,25817752,0,0x0,8
tick,0x7ffdf681f424,25819620,0,0x0,8
tick,0x7ffdf681f424,25821719,0,0x0,8
tick,0x7ffdf681f424,25823708,0,0x0,8
tick,0x7ffdf681f424,25825703,0,0x0,8
tick,0x7ffdf681f424,25827585,0,0x0,8
tick,0x7ffdf681f424,25829701,0,0x0,8
tick,0x7ffdf681f424,25831680,0,0x0,8
tick,0x7ffdf681f424,25833677,0,0x0,8
tick,0x7ffdf681f424,25835653,0,0x0,8
tick,0x7ffdf681f424,25837670,0,0x0,8
tick,0x7ffdf681f424,25839730,0,0x0,8
tick,0x7ffdf681f424,25841661,0,0x0,8
tick,0x7ffdf681f424,25843653,0,0x0,8
tick,0x7ffdf681f424,25845651,0,0x0,8
tick,0x7ffdf681f424,25847647,0,0x0,8
tick,0x7ffdf681f424,25849636,0,0x0,8
tick,0x7ffdf681f424,25851645,0,0x0,8
tick,0x7ffdf681f424,25853626,0,0x0,8
tick,0x7ffdf681f424,25855624,0,0x0,8
tick,0x7ffdf681f424,25857587,0,0x0,8
tick,0x7ffdf681f424,25859603,0,0x0,8
tick,0x7ffdf681f424,25861651,0,0x0,8
tick,0x7ffdf681f424,25863618,0,0x0,8
tick,0x7ffdf681f424,25865594,0,0x0,8
tick,0x7ffdf681f424,25867581,0,0x0,8
tick,0x7ffdf681f424,25869477,0,0x0,8
tick,0x7ffdf681f424,25871474,0,0x0,8
tick,0x7ffdf681f424,25873502,0,0x0,8
tick,0x7ffdf681f424,25875543,0,0x0,8
tick,0x7ffdf681f424,25877610,0,0x0,8
tick,0x7ffdf681f424,25879424,0,0x0,8
tick,0x7ffdf681f424,25881549,0,0x0,8
tick,0x7ffdf681f424,25883597,0,0x0,8
tick,0x7ffdf681f424,25885482,0,0x0,8
tick,0x7ffdf681f424,25887521,0,0x0,8
tick,0x7ffdf681f424,25889540,0,0x0,8
tick,0x7ffdf681f424,25891530,0,0x0,8
tick,0x7ffdf681f424,25893532,0,0x0,8
tick,0x7ffdf681f424,25895472,0,0x0,8
tick,0x7ffdf681f424,25897511,0,0x0,8
tick,0x7ffdf681f424,25899504,0,0x0,8
tick,0x7ffdf681f424,25901467,0,0x0,8
tick,0x7ffdf681f424,25903504,0,0x0,8
tick,0x7ffdf681f424,25905511,0,0x0,8
tick,0x7ffdf681f424,25907485,0,0x0,8
tick,0x7ffdf681f424,25909481,0,0x0,8
tick,0x7ffdf681f424,25911437,0,0x0,8
tick,0x7ffdf681f424,25913465,0,0x0,8
tick,0x7ffdf681f424,25915461,0,0x0,8
tick,0x7ffdf681f424,25917467,0,0x0,8
tick,0x7ffdf681f424,25919343,0,0x0,8
tick,0x7ffdf681f424,25921446,0,0x0,8
tick,0x7ffdf681f424,25923409,0,0x0,8
tick,0x7ffdf681f424,25925436,0,0x0,8
tick,0x7ffdf681f424,25927314,0,0x0,8
tick,0x7ffdf681f424,25929441,0,0x0,8
tick,0x7ffdf681f424,25931431,0,0x0,8
tick,0x7ffdf681f424,25933448,0,0x0,8
tick,0x7ffdf681f424,25935411,0,0x0,8
tick,0x7ffdf681f424,25937329,0,0x0,8
tick,0x7ffdf681f424,25939411,0,0x0,8
tick,0x7ffdf681f424,25941396,0,0x0,8
tick,0x7ffdf681f424,25943269,0,0x0,8
tick,0x7ffdf681f424,25945283,0,0x0,8
tick,0x7ffdf681f424,25947273,0,0x0,8
tick,0x7ffdf681f424,25949297,0,0x0,8
tick,0x7ffdf681f424,25951282,0,0x0,8
tick,0x7ffdf681f424,25953253,0,0x0,8
tick,0x7ffdf681f424,25955262,0,0x0,8
tick,0x7ffdf681f424,25957235,0,0x0,8
tick,0x7ffdf681f424,25959283,0,0x0,8
tick,0x7ffdf681f424,25961274,0,0x0,8
tick,0x7ffdf681f424,25963239,0,0x0,8
tick,0x7ffdf681f424,25965378,0,0x0,8
tick,0x7ffdf681f424,25967244,0,0x0,8
tick,0x7ffdf681f424,25969194,0,0x0,8
tick,0x7ffdf681f424,25971253,0,0x0,8
tick,0x7ffdf681f424,25973194,0,0x0,8
tick,0x7ffdf681f424,25975180,0,0x0,8
tick,0x7ffdf681f424,25977176,0,0x0,8
tick,0x7ffdf681f424,25979180,0,0x0,8
tick,0x7ffdf681f424,25981170,0,0x0,8
tick,0x7ffdf681f424,25983215,0,0x0,8
tick,0x7ffdf681f424,25985173,0,0x0,8
tick,0x7ffdf681f424,25987157,0,0x0,8
tick,0x7ffdf681f424,25989253,0,0x0,8
tick,0x7ffdf681f424,25991157,0,0x0,8
tick,0x7ffdf681f424,25993162,0,0x0,8
tick,0x7ffdf681f424,25995156,0,0x0,8
tick,0x7ffdf681f424,25997126,0,0x0,8
tick,0x7ffdf681f424,25999218,0,0x0,8
tick,0x7ffdf681f424,26001108,0,0x0,8
tick,0x7ffdf681f424,26003103,0,0x0,8
tick,0x7ffdf681f424,26005125,0,0x0,8
tick,0x7ffdf681f424,26007094,0,0x0,8
tick,0x7ffdf681f424,26009096,0,0x0,8
tick,0x7ffdf681f424,26011113,0,0x0,8
tick,0x7ffdf681f424,26013084,0,0x0,8
tick,0x7ffdf681f424,26015130,0,0x0,8
tick,0x7ffdf681f424,26017080,0,0x0,8
tick,0x7ffdf681f424,26019054,0,0x0,8
tick,0x7ffdf681f424,26021069,0,0x0,8
tick,0x7ffdf681f424,26023056,0,0x0,8
tick,0x7ffdf681f424,26025044,0,0x0,8
tick,0x7ffdf681f424,26027041,0,0x0,8
tick,0x7ffdf681f424,26029036,0,0x0,8
tick,0x7ffdf681f424,26031037,0,0x0,8
tick,0x7ffdf681f424,26033040,0,0x0,8
tick,0x7ffdf681f424,26035039,0,0x0,8
tick,0x7ffdf681f424,26037024,0,0x0,8
tick,0x7ffdf681f424,26039044,0,0x0,8
tick,0x7ffdf681f424,26040987,0,0x0,8
tick,0x7ffdf681f424,26042988,0,0x0,8
tick,0x7ffdf681f424,26045026,0,0x0,8
tick,0x7ffdf681f424,26046985,0,0x0,8
tick,0x7ffdf681f424,26048964,0,0x0,8
tick,0x7ffdf681f424,26051078,0,0x0,8
tick,0x7ffdf681f424,26052981,0,0x0,8
tick,0x7ffdf681f424,26054980,0,0x0,8
tick,0x7ffdf681f424,26057068,0,0x0,8
tick,0x7ffdf681f424,26059030,0,0x0,8
tick,0x7ffdf681f424,26060993,0,0x0,8
tick,0x7ffdf681f424,26062980,0,0x0,8
tick,0x7ffdf681f424,26065041,0,0x0,8
tick,0x7ffdf681f424,26067036,0,0x0,8
tick,0x7ffdf681f424,26069039,0,0x0,8
tick,0x7ffdf681f424,26071002,0,0x0,8
tick,0x7ffdf681f424,26073013,0,0x0,8
tick,0x7ffdf681f424,26075018,0,0x0,8
tick,0x7ffdf681f424,26077014,0,0x0,8
tick,0x7ffdf681f424,26079002,0,0x0,8
tick,0x7ffdf681f424,26080931,0,0x0,8
tick,0x7ffdf681f424,26082890,0,0x0,8
tick,0x7ffdf681f424,26084859,0,0x0,8
tick,0x7ffdf681f424,26086963,0,0x0,8
tick,0x7ffdf681f424,26088893,0,0x0,8
tick,0x7ffdf681f424,26090988,0,0x0,8
tick,0x7ffdf681f424,26092984,0,0x0,8
tick,0x7ffdf681f424,26094978,0,0x0,8
tick,0x7ffdf681f424,26096972,0,0x0,8
tick,0x7ffdf681f424,26098963,0,0x0,8
tick,0x7ffdf681f424,26100960,0,0x0,8
tick,0x7ffdf681f424,26102838,0,0x0,8
tick,0x7ffdf681f424,26104949,0,0x0,8
tick,0x7ffdf681f424,26106954,0,0x0,8
tick,0x7ffdf681f424,26108937,0,0x0,8
tick,0x7ffdf681f424,26110938,0,0x0,8
tick,0x7ffdf681f424,26112972,0,0x0,8
tick,0x7ffdf681f424,26114832,0,0x0,8
tick,0x7ffdf681f424,26116829,0,0x0,8
tick,0x7ffdf681f424,26118851,0,0x0,8
tick,0x7ffdf681f424,26120854,0,0x0,8
tick,0x7ffdf681f424,26122905,0,0x0,8
tick,0x7ffdf681f424,26124922,0,0x0,8
tick,0x7ffdf681f424,26126934,0,0x0,8
tick,0x7ffdf681f424,26128903,0,0x0,8
tick,0x7ffdf681f424,26130883,0,0x0,8
tick,0x7ffdf681f424,26132879,0,0x0,8
tick,0x7ffdf681f424,26134877,0,0x0,8
tick,0x7ffdf681f424,26136758,0,0x0,8
tick,0x7ffdf681f424,26138870,0,0x0,8
tick,0x7ffdf681f424,26140860,0,0x0,8
tick,0x7ffdf681f424,26142856,0,0x0,8
tick,0x7ffdf681f424,26144735,0,0x0,8
tick,0x7ffdf681f424,26146890,0,0x0,8
tick,0x7ffdf681f424,26148864,0,0x0,8
tick,0x7ffdf681f424,26150833,0,0x0,8
tick,0x7ffdf681f424,26152746,0,0x0,8
tick,0x7ffdf681f424,26154856,0,0x0,8
tick,0x7ffdf681f424,26156849,0,0x0,8
tick,0x7ffdf681f424,26158815,0,0x0,8
tick,0x7ffdf681f424,26160786,0,0x0,8
tick,0x7ffdf681f424,26162784,0,0x0,8
tick,0x7ffdf681f424,26164780,0,0x0,8
tick,0x7ffdf681f424,26166776,0,0x0,8
tick,0x7ffdf681f424,26168836,0,0x0,8
tick,0x7ffdf681f424,26170776,0,0x0,8
tick,0x7ffdf681f424,26172729,0,0x0,8
tick,0x7ffdf681f424,26174756,0,0x0,8
tick,0x7ffdf681f424,26176747,0,0x0,8
tick,0x7ffdf681f424,26178748,0,0x0,8
tick,0x7ffdf681f424,26180747,0,0x0,8
tick,0x7ffdf681f424,26182727,0,0x0,8
tick,0x7ffdf681f424,26184733,0,0x0,8
tick,0x7ffdf681f424,26186647,0,0x0,8
tick,0x7ffdf681f424,26188685,0,0x0,8
tick,0x7ffdf681f424,26190725,0,0x0,8
tick,0x7ffdf681f424,26192696,0,0x0,8
tick,0x7ffdf681f424,26194590,0,0x0,8
tick,0x7ffdf681f424,26196664,0,0x0,8
tick,0x7ffdf681f424,26198668,0,0x0,8
tick,0x7ffdf681f424,26200663,0,0x0,8
tick,0x7ffdf681f424,26202600,0,0x0,8
tick,0x7ffdf681f424,26204649,0,0x0,8
tick,0x7ffdf681f424,26206633,0,0x0,8
tick,0x7ffdf681f424,26208651,0,0x0,8
tick,0x7ffdf681f424,26210629,0,0x0,8
tick,0x7ffdf681f424,26212655,0,0x0,8
tick,0x7ffdf681f424,26214573,0,0x0,8
tick,0x7ffdf681f424,26216622,0,0x0,8
tick,0x7ffdf681f424,26218609,0,0x0,8
tick,0x7ffdf681f424,26220608,0,0x0,8
tick,0x7ffdf681f424,26222603,0,0x0,8
tick,0x7ffdf681f424,26224575,0,0x0,8
tick,0x7ffdf681f424,26226566,0,0x0,8
tick,0x7ffdf681f424,26228580,0,0x0,8
tick,0x7ffdf681f424,26230578,0,0x0,8
tick,0x7ffdf681f424,26232544,0,0x0,8
tick,0x7ffdf681f424,26234576,0,0x0,8
tick,0x7ffdf681f424,26236447,0,0x0,8
tick,0x7ffdf681f424,26238563,0,0x0,8
tick,0x7ffdf681f424,26240557,0,0x0,8
tick,0x7ffdf681f424,26242510,0,0x0,8
tick,0x7ffdf681f424,26244462,0,0x0,8
tick,0x7ffdf681f424,26246439,0,0x0,8
tick,0x7ffdf681f424,26248543,0,0x0,8
tick,0x7ffdf681f424,26250494,0,0x0,8
tick,0x7ffdf681f424,26252471,0,0x0,8
tick,0x7ffdf681f424,26254527,0,0x0,8
tick,0x7ffdf681f424,26256445,0,0x0,8
tick,0x7ffdf681f424,26258399,0,0x0,8
tick,0x7ffdf681f424,26260505,0,0x0,8
tick,0x7ffdf681f424,26262500,0,0x0,8
tick,0x7ffdf681f424,26264383,0,0x0,8
tick,0x7ffdf681f424,26266490,0,0x0,8
tick,0x7ffdf681f424,26268381,0,0x0,8
tick,0x7ffdf681f424,26270367,0,0x0,8
tick,0x7ffdf681f424,26272480,0,0x0,8
tick,0x7ffdf681f424,26274461,0,0x0,8
tick,0x7ffdf681f424,26276339,0,0x0,8
tick,0x7ffdf681f424,26278413,0,0x0,8
tick,0x7ffdf681f424,26280337,0,0x0,8
tick,0x7ffdf681f424,26282346,0,0x0,8
tick,0x7ffdf681f424,26284327,0,0x0,8
tick,0x7ffdf681f424,26286390,0,0x0,8
tick,0x7ffdf681f424,26288314,0,0x0,8
tick,0x7ffdf681f424,26290404,0,0x0,8
tick,0x7ffdf681f424,26292349,0,0x0,8
tick,0x7ffdf681f424,26294297,0,0x0,8
tick,0x7ffdf681f424,26296408,0,0x0,8
tick,0x7ffdf681f424,26298330,0,0x0,8
tick,0x7ffdf681f424,26300418,0,0x0,8
tick,0x7ffdf681f424,26302431,0,0x0,8
tick,0x7ffdf681f424,26304417,0,0x0,8
tick,0x7ffdf681f424,26306384,0,0x0,8
tick,0x7ffdf681f424,26308301,0,0x0,8
tick,0x7ffdf681f424,26310406,0,0x0,8
tick,0x7ffdf681f424,26312410,0,0x0,8
tick,0x7ffdf681f424,26314280,0,0x0,8
tick,0x7ffdf681f424,26316381,0,0x0,8
tick,0x7ffdf681f424,26318389,0,0x0,8
tick,0x7ffdf681f424,26320365,0,0x0,8
tick,0x7ffdf681f424,26322419,0,0x0,8
tick,0x7ffdf681f424,26324359,0,0x0,8
tick,0x7ffdf681f424,26326308,0,0x0,8
tick,0x7ffdf681f424,26328355,0,0x0,8
tick,0x7ffdf681f424,26330338,0,0x0,8
tick,0x7ffdf681f424,26332344,0,0x0,8
tick,0x7ffdf681f424,26334346,0,0x0,8
tick,0x7ffdf681f424,26336238,0,0x0,8
tick,0x7ffdf681f424,26338316,0,0x0,8
tick,0x7ffdf681f424,26340322,0,0x0,8
tick,0x7ffdf681f424,26342316,0,0x0,8
tick,0x7ffdf681f424,26344343,0,0x0,8
tick,0x7ffdf681f424,26346223,0,0x0,8
tick,0x7ffdf681f424,26348296,0,0x0,8
tick,0x7ffdf681f424,26350295,0,0x0,8
tick,0x7ffdf681f424,26352289,0,0x0,8
tick,0x7ffdf681f424,26354295,0,0x0,8
tick,0x7ffdf681f424,26356302,0,0x0,8
tick,0x7ffdf681f424,26358271,0,0x0,8
tick,0x7ffdf681f424,26360272,0,0x0,8
tick,0x7ffdf681f424,26362267,0,0x0,8
tick,0x7ffdf681f424,26364253,0,0x0,8
tick,0x7ffdf681f424,26366125,0,0x0,8
tick,0x7ffdf681f424,26368106,0,0x0,8
tick,0x7ffdf681f424,26370201,0,0x0,8
tick,0x7ffdf681f424,26372206,0,0x0,8
tick,0x7ffdf681f424,26374232,0,0x0,8
tick,0x7ffdf681f424,26376227,0,0x0,8
tick,0x7ffdf681f424,26378229,0,0x0,8
tick,0x7ffdf681f424,26380216,0,0x0,8
tick,0x7ffdf681f424,26382219,0,0x0,8
tick,0x7ffdf681f424,26384225,0,0x0,8
tick,0x7ffdf681f424,26386104,0,0x0,8
tick,0x7ffdf681f424,26388180,0,0x0,8
tick,0x7ffdf681f424,26390208,0,0x0,8
tick,0x7ffdf681f424,26392186,0,0x0,8
tick,0x7ffdf681f424,26394199,0,0x0,8
tick,0x7ffdf681f424,26396178,0,0x0,8
tick,0x7ffdf681f424,26398173,0,0x0,8
tick,0x7ffdf681f424,26400187,0,0x0,8
tick,0x7ffdf681f424,26402159,0,0x0,8
tick,0x7ffdf681f424,26404152,0,0x0,8
tick,0x7ffdf681f424,26406155,0,0x0,8
tick,0x7ffdf681f424,26408146,0,0x0,8
tick,0x7ffdf681f424,26410117,0,0x0,8
tick,0x7ffdf681f424,26412141,0,0x0,8
tick,0x7ffdf681f424,26414127,0,0x0,8
tick,0x7ffdf681f424,26416115,0,0x0,8
tick,0x7ffdf681f424,26418118,0,0x0,8
tick,0x7ffdf681f424,26420144,0,0x0,8
tick,0x7ffdf681f424,26422034,0,0x0,8
tick,0x7ffdf681f424,26424022,0,0x0,8
tick,0x7ffdf681f424,26426212,0,0x0,8
tick,0x7ffdf681f424,26427991,0,0x0,8
tick,0x7ffdf681f424,26430091,0,0x0,8
tick,0x7ffdf681f424,26432062,0,0x0,8
tick,0x7ffdf681f424,26434083,0,0x0,8
tick,0x7ffdf681f424,26436005,0,0x0,8
tick,0x7ffdf681f424,26438063,0,0x0,8
tick,0x7ffdf681f424,26440061,0,0x0,8
tick,0x7ffdf681f424,26442052,0,0x0,8
tick,0x7ffdf681f424,26444058,0,0x0,8
tick,0x7ffdf681f424,26446042,0,0x0,8
tick,0x7ffdf681f424,26448040,0,0x0,8
tick,0x7ffdf681f424,26450041,0,0x0,8
tick,0x7ffdf681f424,26452031,0,0x0,8
tick,0x7ffdf681f424,26454001,0,0x0,8
tick,0x7ffdf681f424,26456020,0,0x0,8
tick,0x7ffdf681f424,26458031,0,0x0,8
tick,0x7ffdf681f424,26460006,0,0x0,8
tick,0x7ffdf681f424,26462013,0,0x0,8
tick,0x7ffdf681f424,26464004,0,0x0,8
tick,0x7ffdf681f424,26466006,0,0x0,8
tick,0x7ffdf681f424,26467980,0,0x0,8
tick,0x7ffdf681f424,26469977,0,0x0,8
tick,0x7ffdf681f424,26471983,0,0x0,8
tick,0x7ffdf681f424,26473967,0,0x0,8
tick,0x7ffdf681f424,26475966,0,0x0,8
tick,0x7ffdf681f424,26477847,0,0x0,8
tick,0x7ffdf681f424,26479951,0,0x0,8
tick,0x7ffdf681f424,26481947,0,0x0,8
tick,0x7ffdf681f424,26483945,0,0x0,8
tick,0x7ffdf681f424,26485941,0,0x0,8
tick,0x7ffdf681f424,26487940,0,0x0,8
tick,0x7ffdf681f424,26489925,0,0x0,8
tick,0x7ffdf681f424,26491921,0,0x0,8
tick,0x7ffdf681f424,26493852,0,0x0,8
tick,0x7ffdf681f424,26495915,0,0x0,8
tick,0x7ffdf681f424,26497932,0,0x0,8
tick,0x7ffdf681f424,26500026,0,0x0,8
tick,0x7ffdf681f424,26501884,0,0x0,8
tick,0x7ffdf681f424,26503890,0,0x0,8
tick,0x7ffdf681f424,26505882,0,0x0,8
tick,0x7ffdf681f424,26507877,0,0x0,8
tick,0x7ffdf681f424,26509891,0,0x0,8
tick,0x7ffdf681f424,26511881,0,0x0,8
tick,0x7ffdf681f424,26513888,0,0x0,8
tick,0x7ffdf681f424,26515868,0,0x0,8
tick,0x7ffdf681f424,26517861,0,0x0,8
tick,0x7ffdf681f424,26519814,0,0x0,8
tick,0x7ffdf681f424,26521846,0,0x0,8
tick,0x7ffdf681f424,26523836,0,0x0,8
tick,0x7ffdf681f424,26525836,0,0x0,8
tick,0x7ffdf681f424,26527713,0,0x0,8
tick,0x7ffdf681f424,26529709,0,0x0,8
tick,0x7ffdf681f424,26531826,0,0x0,8
tick,0x7ffdf681f424,26533807,0,0x0,8
tick,0x7ffdf681f424,26535809,0,0x0,8
tick,0x7ffdf681f424,26537814,0,0x0,8
tick,0x7ffdf681f424,26539787,0,0x0,8
tick,0x7ffdf681f424,26541789,0,0x0,8
tick,0x7ffdf681f424,26543787,0,0x0,8
tick,0x7ffdf681f424,26545783,0,0x0,8
tick,0x7ffdf681f424,26547778,0,0x0,8
tick,0x7ffdf681f424,26549770,0,0x0,8
tick,0x7ffdf681f424,26551761,0,0x0,8
tick,0x7ffdf681f424,26553765,0,0x0,8
tick,0x7ffdf681f424,26555762,0,0x0,8
tick,0x7ffdf681f424,26557758,0,0x0,8
tick,0x7ffdf681f424,26559657,0,0x0,8
tick,0x7ffdf681f424,26561730,0,0x0,8
tick,0x7ffdf681f424,26563810,0,0x0,8
tick,0x7ffdf681f424,26565727,0,0x0,8
tick,0x7ffdf681f424,26567742,0,0x0,8
tick,0x7ffdf681f424,26569595,0,0x0,8
tick,0x7ffdf681f424,26571707,0,0x0,8
tick,0x7ffdf681f424,26573705,0,0x0,8
tick,0x7ffdf681f424,26575586,0,0x0,8
tick,0x7ffdf681f424,26577573,0,0x0,8
tick,0x7ffdf681f424,26579799,0,0x0,8
tick,0x7ffdf681f424,26581686,0,0x0,8
tick,0x7ffdf681f424,26583671,0,0x0,8
tick,0x7ffdf681f424,26585651,0,0x0,8
tick,0x7ffdf681f424,26587601,0,0x0,8
tick,0x7ffdf681f424,26589659,0,0x0,8
tick,0x7ffdf681f424,26591654,0,0x0,8
tick,0x7ffdf681f424,26593640,0,0x0,8
tick,0x7ffdf681f424,26595638,0,0x0,8
tick,0x7ffdf681f424,26597642,0,0x0,8
tick,0x7ffdf681f424,26599634,0,0x0,8
tick,0x7ffdf681f424,26601629,0,0x0,8
tick,0x7ffdf681f424,26603628,0,0x0,8
tick,0x7ffdf681f424,26605619,0,0x0,8
tick,0x7ffdf681f424,26607589,0,0x0,8
tick,0x7ffdf681f424,26609608,0,0x0,8
tick,0x7ffdf681f424,26611604,0,0x0,8
tick,0x7ffdf681f424,26613593,0,0x0,8
tick,0x7ffdf681f424,26615584,0,0x0,8
tick,0x7ffdf681f424,26617603,0,0x0,8
tick,0x7ffdf681f424,26619463,0,0x0,8
tick,0x7ffdf681f424,26621577,0,0x0,8
tick,0x7ffdf681f424,26623569,0,0x0,8
tick,0x7ffdf681f424,26625578,0,0x0,8
tick,0x7ffdf681f424,26627573,0,0x0,8
tick,0x7ffdf681f424,26629519,0,0x0,8
tick,0x7ffdf681f424,26631556,0,0x0,8
tick,0x7ffdf681f424,26633540,0,0x0,8
tick,0x7ffdf681f424,26635536,0,0x0,8
tick,0x7ffdf681f424,26637532,0,0x0,8
tick,0x7ffdf681f424,26639525,0,0x0,8
tick,0x7ffdf681f424,26641525,0,0x0,8
tick,0x7ffdf681f424,26643531,0,0x0,8
tick,0x7ffdf681f424,26645513,0,0x0,8
tick,0x7ffdf681f424,26647480,0,0x0,8
tick,0x7ffdf681f424,26649500,0,0x0,8
tick,0x7ffdf681f424,26651567,0,0x0,8
tick,0x7ffdf681f424,26653509,0,0x0,8
tick,0x7ffdf681f424,26655484,0,0x0,8
tick,0x7ffdf681f424,26657476,0,0x0,8
tick,0x7ffdf681f424,26659469,0,0x0,8
tick,0x7ffdf681f424,26661373,0,0x0,8
tick,0x7ffdf681f424,26663470,0,0x0,8
tick,0x7ffdf681f424,26665455,0,0x0,8
tick,0x7ffdf681f424,26667451,0,0x0,8
tick,0x7ffdf681f424,26669339,0,0x0,8
tick,0x7ffdf681f424,26671440,0,0x0,8
tick,0x7ffdf681f424,26673503,0,0x0,8
tick,0x7ffdf681f424,26675427,0,0x0,8
tick,0x7ffdf681f424,26677428,0,0x0,8
tick,0x7ffdf681f424,26679420,0,0x0,8
tick,0x7ffdf681f424,26681419,0,0x0,8
tick,0x7ffdf681f424,26683409,0,0x0,8
tick,0x7ffdf681f424,26685414,0,0x0,8
tick,0x7ffdf681f424,26687397,0,0x0,8
tick,0x7ffdf681f424,26689388,0,0x0,8
tick,0x7ffdf681f424,26691354,0,0x0,8
tick,0x7ffdf681f424,26693382,0,0x0,8
tick,0x7ffdf681f424,26695377,0,0x0,8
tick,0x7ffdf681f424,26697376,0,0x0,8
tick,0x7ffdf681f424,26699365,0,0x0,8
tick,0x7ffdf681f424,26701364,0,0x0,8
tick,0x7ffdf681f424,26703355,0,0x0,8
tick,0x7ffdf681f424,26705332,0,0x0,8
tick,0x7ffdf681f424,26707362,0,0x0,8
tick,0x7ffdf681f424,26709345,0,0x0,8
tick,0x7ffdf681f424,26711221,0,0x0,8
tick,0x7ffdf681f424,26713297,0,0x0,8
tick,0x7ffdf681f424,26715330,0,0x0,8
tick,0x7ffdf681f424,26717322,0,0x0,8
tick,0x7ffdf681f424,26719320,0,0x0,8
tick,0x7ffdf681f424,26721306,0,0x0,8
tick,0x7ffdf681f424,26723303,0,0x0,8
tick,0x7ffdf681f424,26725291,0,0x0,8
tick,0x7ffdf681f424,26727329,0,0x0,8
tick,0x7ffdf681f424,26729170,0,0x0,8
tick,0x7ffdf681f424,26731173,0,0x0,8
tick,0x7ffdf681f424,26733382,0,0x0,8
tick,0x7ffdf681f424,26735246,0,0x0,8
tick,0x7ffdf681f424,26737153,0,0x0,8
tick,0x7ffdf681f424,26739337,0,0x0,8
tick,0x7ffdf681f424,26741263,0,0x0,8
tick,0x7ffdf681f424,26743242,0,0x0,8
tick,0x7ffdf681f424,26745241,0,0x0,8
tick,0x7ffdf681f424,26747233,0,0x0,8
tick,0x7ffdf681f424,26749238,0,0x0,8
tick,0x7ffdf681f424,26751230,0,0x0,8
tick,0x7ffdf681f424,26753220,0,0x0,8
tick,0x7ffdf681f424,26755214,0,0x0,8
tick,0x7ffdf681f424,26757179,0,0x0,8
tick,0x7ffdf681f424,26759216,0,0x0,8
tick,0x7ffdf681f424,26761101,0,0x0,8
tick,0x7ffdf681f424,26763212,0,0x0,8
tick,0x7ffdf681f424,26765192,0,0x0,8
tick,0x7ffdf681f424,26767183,0,0x0,8
tick,0x7ffdf681f424,26769184,0,0x0,8
tick,0x7ffdf681f424,26771177,0,0x0,8
tick,0x7ffdf681f424,26773176,0,0x0,8
tick,0x7ffdf681f424,26775164,0,0x0,8
tick,0x7ffdf681f424,26777160,0,0x0,8
tick,0x7ffdf681f424,26779130,0,0x0,8
tick,0x7ffdf681f424,26781145,0,0x0,8
tick,0x7ffdf681f424,26783201,0,0x0,8
tick,0x7ffdf681f424,26785156,0,0x0,8
tick,0x7ffdf681f424,26787131,0,0x0,8
tick,0x7ffdf681f424,26789168,0,0x0,8
tick,0x7ffdf681f424,26791136,0,0x0,8
tick,0x7ffdf681f424,26793124,0,0x0,8
tick,0x7ffdf681f424,26795123,0,0x0,8
tick,0x7ffdf681f424,26797103,0,0x0,8
tick,0x7ffdf681f424,26799107,0,0x0,8
tick,0x7ffdf681f424,26800964,0,0x0,8
tick,0x7ffdf681f424,26802980,0,0x0,8
tick,0x7ffdf681f424,26805094,0,0x0,8
tick,0x7ffdf681f424,26807090,0,0x0,8
tick,0x7ffdf681f424,26809072,0,0x0,8
tick,0x7ffdf681f424,26811062,0,0x0,8
tick,0x7ffdf681f424,26813060,0,0x0,8
tick,0x7ffdf681f424,26815056,0,0x0,8
tick,0x7ffdf681f424,26817061,0,0x0,8
tick,0x7ffdf681f424,26819044,0,0x0,8
tick,0x7ffdf681f424,26821040,0,0x0,8
tick,0x7ffdf681f424,26823009,0,0x0,8
tick,0x7ffdf681f424,26825030,0,0x0,8
tick,0x7ffdf681f424,26827086,0,0x0,8
tick,0x7ffdf681f424,26829019,0,0x0,8
tick,0x7ffdf681f424,26831003,0,0x0,8
tick,0x7ffdf681f424,26833007,0,0x0,8
tick,0x7ffdf681f424,26835007,0,0x0,8
tick,0x7ffdf681f424,26837001,0,0x0,8
tick,0x7ffdf681f424,26839006,0,0x0,8
tick,0x7ffdf681f424,26840987,0,0x0,8
tick,0x7ffdf681f424,26842982,0,0x0,8
tick,0x7ffdf681f424,26844947,0,0x0,8
tick,0x7ffdf681f424,26846972,0,0x0,8
tick,0x7ffdf681f424,26848992,0,0x0,8
tick,0x7ffdf681f424,26850970,0,0x0,8
tick,0x7ffdf681f424,26852847,0,0x0,8
tick,0x7ffdf681f424,26854942,0,0x0,8
tick,0x7ffdf681f424,26856944,0,0x0,8
tick,0x7ffdf681f424,26858939,0,0x0,8
tick,0x7ffdf681f424,26860946,0,0x0,8
tick,0x7ffdf681f424,26862928,0,0x0,8
tick,0x7ffdf681f424,26864946,0,0x0,8
tick,0x7ffdf681f424,26866894,0,0x0,8
tick,0x7ffdf681f424,26868916,0,0x0,8
tick,0x7ffdf681f424,26870949,0,0x0,8
tick,0x7ffdf681f424,26872915,0,0x0,8
tick,0x7ffdf681f424,26874904,0,0x0,8
tick,0x7ffdf681f424,26876881,0,0x0,8
tick,0x7ffdf681f424,26878877,0,0x0,8
tick,0x7ffdf681f424,26880906,0,0x0,8
tick,0x7ffdf681f424,26882846,0,0x0,8
tick,0x7ffdf681f424,26884781,0,0x0,8
tick,0x7ffdf681f424,26886910,0,0x0,8
tick,0x7ffdf681f424,26888829,0,0x0,8
tick,0x7ffdf681f424,26890854,0,0x0,8
tick,0x7ffdf681f424,26892881,0,0x0,8
tick,0x7ffdf681f424,26894740,0,0x0,8
tick,0x7ffdf681f424,26896827,0,0x0,8
tick,0x7ffdf681f424,26898831,0,0x0,8
tick,0x7ffdf681f424,26900831,0,0x0,8
tick,0x7ffdf681f424,26902737,0,0x0,8
tick,0x7ffdf681f424,26904824,0,0x0,8
tick,0x7ffdf681f424,26906812,0,0x0,8
tick,0x7ffdf681f424,26908807,0,0x0,8
tick,0x7ffdf681f424,26910771,0,0x0,8
tick,0x7ffdf681f424,26912795,0,0x0,8
tick,0x7ffdf681f424,26914826,0,0x0,8
tick,0x7ffdf681f424,26916820,0,0x0,8
tick,0x7ffdf681f424,26918772,0,0x0,8
tick,0x7ffdf681f424,26920778,0,0x0,8
tick,0x7ffdf681f424,26922768,0,0x0,8
tick,0x7ffdf681f424,26924766,0,0x0,8
tick,0x7ffdf681f424,26926763,0,0x0,8
tick,0x7ffdf681f424,26928751,0,0x0,8
tick,0x7ffdf681f424,26930750,0,0x0,8
tick,0x7ffdf681f424,26932713,0,0x0,8
tick,0x7ffdf681f424,26934737,0,0x0,8
tick,0x7ffdf681f424,26936796,0,0x0,8
tick,0x7ffdf681f424,26938723,0,0x0,8
tick,0x7ffdf681f424,26940726,0,0x0,8
tick,0x7ffdf681f424,26942715,0,0x0,8
tick,0x7ffdf681f424,26944596,0,0x0,8
tick,0x7ffdf681f424,26946711,0,0x0,8
tick,0x7ffdf681f424,26948707,0,0x0,8
tick,0x7ffdf681f424,26950695,0,0x0,8
tick,0x7ffdf681f424,26952686,0,0x0,8
tick,0x7ffdf681f424,26954660,0,0x0,8
tick,0x7ffdf681f424,26956682,0,0x0,8
tick,0x7ffdf681f424,26958653,0,0x0,8
tick,0x7ffdf681f424,26960717,0,0x0,8
tick,0x7ffdf681f424,26962665,0,0x0,8
tick,0x7ffdf681f424,26964655,0,0x0,8
tick,0x7ffdf681f424,26966656,0,0x0,8
tick,0x7ffdf681f424,26968645,0,0x0,8
tick,0x7ffdf681f424,26970559,0,0x0,8
tick,0x7ffdf681f424,26972637,0,0x0,8
tick,0x7ffdf681f424,26974631,0,0x0,8
tick,0x7ffdf681f424,26976590,0,0x0,8
tick,0x7ffdf681f424,26978620,0,0x0,8
tick,0x7ffdf681f424,26980592,0,0x0,8
tick,0x7ffdf681f424,26982617,0,0x0,8
tick,0x7ffdf681f424,26984601,0,0x0,8
tick,0x7ffdf681f424,26986559,0,0x0,8
tick,0x7ffdf681f424,26988589,0,0x0,8
tick,0x7ffdf681f424,26990565,0,0x0,8
tick,0x7ffdf681f424,26992597,0,0x0,8
tick,0x7ffdf681f424,26994472,0,0x0,8
tick,0x7ffdf681f424,26996575,0,0x0,8
tick,0x7ffdf681f424,26998534,0,0x0,8
tick,0x7ffdf681f424,27000556,0,0x0,8
tick,0x7ffdf681f424,27002532,0,0x0,8
tick,0x7ffdf681f424,27004558,0,0x0,8
tick,0x7ffdf681f424,27006545,0,0x0,8
tick,0x7ffdf681f424,27008532,0,0x0,8
tick,0x7ffdf681f424,27010536,0,0x0,8
tick,0x7ffdf681f424,27012453,0,0x0,8
tick,0x7ffdf681f424,27014537,0,0x0,8
tick,0x7ffdf681f424,27016516,0,0x0,8
tick,0x7ffdf681f424,27018514,0,0x0,8
tick,0x7ffdf681f424,27020478,0,0x0,8
tick,0x7ffdf681f424,27022507,0,0x0,8
tick,0x7ffdf681f424,27024474,0,0x0,8
tick,0x7ffdf681f424,27026498,0,0x0,8
tick,0x7ffdf681f424,27028492,0,0x0,8
tick,0x7ffdf681f424,27030478,0,0x0,8
tick,0x7ffdf681f424,27032474,0,0x0,8
tick,0x7ffdf681f424,27034509,0,0x0,8
tick,0x7ffdf681f424,27036454,0,0x0,8
tick,0x7ffdf681f424,27038345,0,0x0,8
tick,0x7ffdf681f424,27040490,0,0x0,8
tick,0x7ffdf681f424,27042417,0,0x0,8
tick,0x7ffdf681f424,27044431,0,0x0,8
tick,0x7ffdf681f424,27046417,0,0x0,8
tick,0x7ffdf681f424,27048446,0,0x0,8
tick,0x7ffdf681f424,27050427,0,0x0,8
tick,0x7ffdf681f424,27052424,0,0x0,8
tick,0x7ffdf681f424,27054408,0,0x0,8
tick,0x7ffdf681f424,27056409,0,0x0,8
tick,0x7ffdf681f424,27058408,0,0x0,8
tick,0x7ffdf681f424,27060398,0,0x0,8
tick,0x7ffdf681f424,27062394,0,0x0,8
tick,0x7ffdf681f424,27064358,0,0x0,8
tick,0x7ffdf681f424,27066385,0,0x0,8
tick,0x7ffdf681f424,27068344,0,0x0,8
tick,0x7ffdf681f424,27070374,0,0x0,8
tick,0x7ffdf681f424,27072367,0,0x0,8
tick,0x7ffdf681f424,27074362,0,0x0,8
tick,0x7ffdf681f424,27076356,0,0x0,8
tick,0x7ffdf681f424,27078354,0,0x0,8
tick,0x7ffdf681f424,27080354,0,0x0,8
tick,0x7ffdf681f424,27082341,0,0x0,8
tick,0x7ffdf681f424,27084229,0,0x0,8
tick,0x7ffdf681f424,27086237,0,0x0,8
tick,0x7ffdf681f424,27088324,0,0x0,8
tick,0x7ffdf681f424,27090233,0,0x0,8
tick,0x7ffdf681f424,27092324,0,0x0,8
tick,0x7ffdf681f424,27094317,0,0x0,8
tick,0x7ffdf681f424,27096303,0,0x0,8
tick,0x7ffdf681f424,27098299,0,0x0,8
tick,0x7ffdf681f424,27100292,0,0x0,8
tick,0x7ffdf681f424,27102297,0,0x0,8
tick,0x7ffdf681f424,27104288,0,0x0,8
tick,0x7ffdf681f424,27106279,0,0x0,8
tick,0x7ffdf681f424,27108179,0,0x0,8
tick,0x7ffdf681f424,27110276,0,0x0,8
tick,0x7ffdf681f424,27112331,0,0x0,8
tick,0x7ffdf681f424,27114341,0,0x0,8
tick,0x7ffdf681f424,27116260,0,0x0,8
tick,0x7ffdf681f424,27118270,0,0x0,8
tick,0x7ffdf681f424,27120200,0,0x0,8
tick,0x7ffdf681f424,27122238,0,0x0,8
tick,0x7ffdf681f424,27124284,0,0x0,8
tick,0x7ffdf681f424,27126226,0,0x0,8
tick,0x7ffdf681f424,27128143,0,0x0,8
tick,0x7ffdf681f424,27130162,0,0x0,8
tick,0x7ffdf681f424,27132207,0,0x0,8
tick,0x7ffdf681f424,27134212,0,0x0,8
tick,0x7ffdf681f424,27136111,0,0x0,8
tick,0x7ffdf681f424,27138189,0,0x0,8
tick,0x7ffdf681f424,27140186,0,0x0,8
tick,0x7ffdf681f424,27142183,0,0x0,8
tick,0x7ffdf681f424,27144176,0,0x0,8
tick,0x7ffdf681f424,27146178,0,0x0,8
tick,0x7ffdf681f424,27148162,0,0x0,8
tick,0x7ffdf681f424,27150160,0,0x0,8
tick,0x7ffdf681f424,27152122,0,0x0,8
tick,0x7ffdf681f424,27154153,0,0x0,8
tick,0x7ffdf681f424,27156205,0,0x0,8
tick,0x7ffdf681f424,27158146,0,0x0,8
tick,0x7ffdf681f424,27160137,0,0x0,8
tick,0x7ffdf681f424,27162140,0,0x0,8
tick,0x7ffdf681f424,27164127,0,0x0,8
tick,0x7ffdf681f424,27166118,0,0x0,8
tick,0x7ffdf681f424,27168123,0,0x0,8
tick,0x7ffdf681f424,27170121,0,0x0,8
tick,0x7ffdf681f424,27172101,0,0x0,8
tick,0x7ffdf681f424,27174071,0,0x0,8
tick,0x7ffdf681f424,27176083,0,0x0,8
tick,0x7ffdf681f424,27178011,0,0x0,8
tick,0x7ffdf681f424,27180083,0,0x0,8
tick,0x7ffdf681f424,27182070,0,0x0,8
tick,0x7ffdf681f424,27184069,0,0x0,8
tick,0x7ffdf681f424,27186072,0,0x0,8
tick,0x7ffdf681f424,27188085,0,0x0,8
tick,0x7ffdf681f424,27190036,0,0x0,8
tick,0x7ffdf681f424,27191969,0,0x0,8
tick,0x7ffdf681f424,27194091,0,0x0,8
tick,0x7ffdf681f424,27196008,0,0x0,8
tick,0x7ffdf681f424,27198033,0,0x0,8
tick,0x7ffdf681f424,27200037,0,0x0,8
tick,0x7ffdf681f424,27202027,0,0x0,8
tick,0x7ffdf681f424,27204005,0,0x0,8
tick,0x7ffdf681f424,27206003,0,0x0,8
tick,0x7ffdf681f424,27208013,0,0x0,8
tick,0x7ffdf681f424,27210000,0,0x0,8
tick,0x7ffdf681f424,27211997,0,0x0,8
tick,0x7ffdf681f424,27213992,0,0x0,8
tick,0x7ffdf681f424,27215983,0,0x0,8
tick,0x7ffdf681f424,27217947,0,0x0,8
tick,0x7ffdf681f424,27219978,0,0x0,8
tick,0x7ffdf681f424,27221981,0,0x0,8
tick,0x7ffdf681f424,27223969,0,0x0,8
tick,0x7ffdf681f424,27225958,0,0x0,8
tick,0x7ffdf681f424,27227844,0,0x0,8
tick,0x7ffdf681f424,27229948,0,0x0,8
tick,0x7ffdf681f424,27231933,0,0x0,8
tick,0x7ffdf681f424,27233941,0,0x0,8
tick,0x7ffdf681f424,27235929,0,0x0,8
tick,0x7ffdf681f424,27237927,0,0x0,8
tick,0x7ffdf681f424,27239888,0,0x0,8
tick,0x7ffdf681f424,27241914,0,0x0,8
tick,0x7ffdf681f424,27243995,0,0x0,8
tick,0x7ffdf681f424,27245910,0,0x0,8
tick,0x7ffdf681f424,27247889,0,0x0,8
tick,0x7ffdf681f424,27249897,0,0x0,8
tick,0x7ffdf681f424,27251892,0,0x0,8
tick,0x7ffdf681f424,27253877,0,0x0,8
tick,0x7ffdf681f424,27255884,0,0x0,8
tick,0x7ffdf681f424,27257868,0,0x0,8
tick,0x7ffdf681f424,27259869,0,0x0,8
tick,0x7ffdf681f424,27261834,0,0x0,8
tick,0x7ffdf681f424,27263852,0,0x0,8
tick,0x7ffdf681f424,27265856,0,0x0,8
tick,0x7ffdf681f424,27267884,0,0x0,8
tick,0x7ffdf681f424,27269732,0,0x0,8
tick,0x7ffdf681f424,27271842,0,0x0,8
tick,0x7ffdf681f424,27273835,0,0x0,8
tick,0x7ffdf681f424,27275821,0,0x0,8
tick,0x7ffdf681f424,27277818,0,0x0,8
tick,0x7ffdf681f424,27279818,0,0x0,8
tick,0x7ffdf681f424,27281825,0,0x0,8
tick,0x7ffdf681f424,27283789,0,0x0,8
tick,0x7ffdf681f424,27285796,0,0x0,8
tick,0x7ffdf681f424,27287862,0,0x0,8
tick,0x7ffdf681f424,27289799,0,0x0,8
tick,0x7ffdf681f424,27291783,0,0x0,8
tick,0x7ffdf681f424,27293779,0,0x0,8
tick,0x7ffdf681f424,27295776,0,0x0,8
tick,0x7ffdf681f424,27297767,0,0x0,8
tick,0x7ffdf681f424,27299777,0,0x0,8
tick,0x7ffdf681f424,27301757,0,0x0,8
tick,0x7ffdf681f424,27303741,0,0x0,8
tick,0x7ffdf681f424,27305752,0,0x0,8
tick,0x7ffdf681f424,27307740,0,0x0,8
tick,0x7ffdf681f424,27309800,0,0x0,8
tick,0x7ffdf681f424,27311734,0,0x0,8
tick,0x7ffdf681f424,27313721,0,0x0,8
tick,0x7ffdf681f424,27315721,0,0x0,8
tick,0x7ffdf681f424,27317713,0,0x0,8
tick,0x7ffdf681f424,27319614,0,0x0,8
tick,0x7ffdf681f424,27321721,0,0x0,8
tick,0x7ffdf681f424,27323690,0,0x0,8
tick,0x7ffdf681f424,27325692,0,0x0,8
tick,0x7ffdf681f424,27327712,0,0x0,8
tick,0x7ffdf681f424,27329725,0,0x0,8
tick,0x7ffdf681f424,27331686,0,0x0,8
tick,0x7ffdf681f424,27333678,0,0x0,8
tick,0x7ffdf681f424,27335663,0,0x0,8
tick,0x7ffdf681f424,27337659,0,0x0,8
tick,0x7ffdf681f424,27339656,0,0x0,8
tick,0x7ffdf681f424,27341682,0,0x0,8
tick,0x7ffdf681f424,27343659,0,0x0,8
tick,0x7ffdf681f424,27345546,0,0x0,8
tick,0x7ffdf681f424,27347728,0,0x0,8
tick,0x7ffdf681f424,27349632,0,0x0,8
tick,0x7ffdf681f424,27351616,0,0x0,8
tick,0x7ffdf681f424,27353669,0,0x0,8
tick,0x7ffdf681f424,27355632,0,0x0,8
tick,0x7ffdf681f424,27357606,0,0x0,8
tick,0x7ffdf681f424,27359598,0,0x0,8
tick,0x7ffdf681f424,27361544,0,0x0,8
tick,0x7ffdf681f424,27363597,0,0x0,8
tick,0x7ffdf681f424,27365612,0,0x0,8
tick,0x7ffdf681f424,27367465,0,0x0,8
tick,0x7ffdf681f424,27369484,0,0x0,8
tick,0x7ffdf681f424,27371573,0,0x0,8
tick,0x7ffdf681f424,27373568,0,0x0,8
tick,0x7ffdf681f424,27375622,0,0x0,8
tick,0x7ffdf681f424,27377562,0,0x0,8
tick,0x7ffdf681f424,27379550,0,0x0,8
tick,0x7ffdf681f424,27381543,0,0x0,8
tick,0x7ffdf681f424,27383535,0,0x0,8
tick,0x7ffdf681f424,27385532,0,0x0,8
tick,0x7ffdf681f424,27387534,0,0x0,8
tick,0x7ffdf681f424,27389452,0,0x0,8
tick,0x7ffdf681f424,27391435,0,0x0,8
tick,0x7ffdf681f424,27393410,0,0x0,8
tick,0x7ffdf681f424,27395354,0,0x0,8
tick,0x7ffdf681f424,27397479,0,0x0,8
tick,0x7ffdf681f424,27399498,0,0x0,8
tick,0x7ffdf681f424,27401482,0,0x0,8
tick,0x7ffdf681f424,27403484,0,0x0,8
tick,0x7ffdf681f424,27405479,0,0x0,8
tick,0x7ffdf681f424,27407473,0,0x0,8
tick,0x7ffdf681f424,27409471,0,0x0,8
tick,0x7ffdf681f424,27411353,0,0x0,8
tick,0x7ffdf681f424,27413457,0,0x0,8
tick,0x7ffdf681f424,27415355,0,0x0,8
tick,0x7ffdf681f424,27417446,0,0x0,8
tick,0x7ffdf681f424,27419473,0,0x0,8
tick,0x7ffdf681f424,27421311,0,0x0,8
tick,0x7ffdf681f424,27423428,0,0x0,8
tick,0x7ffdf681f424,27425423,0,0x0,8
tick,0x7ffdf681f424,27427419,0,0x0,8
tick,0x7ffdf681f424,27429388,0,0x0,8
tick,0x7ffdf681f424,27431416,0,0x0,8
tick,0x7ffdf681f424,27433403,0,0x0,8
tick,0x7ffdf681f424,27435399,0,0x0,8
tick,0x7ffdf681f424,27437398,0,0x0,8
tick,0x7ffdf681f424,27439398,0,0x0,8
tick,0x7ffdf681f424,27441392,0,0x0,8
tick,0x7ffdf681f424,27443395,0,0x0,8
tick,0x7ffdf681f424,27445375,0,0x0,8
tick,0x7ffdf681f424,27447378,0,0x0,8
tick,0x7ffdf681f424,27449361,0,0x0,8
tick,0x7ffdf681f424,27451359,0,0x0,8
tick,0x7ffdf681f424,27453358,0,0x0,8
tick,0x7ffdf681f424,27455337,0,0x0,8
tick,0x7ffdf681f424,27457338,0,0x0,8
tick,0x7ffdf681f424,27459340,0,0x0,8
tick,0x7ffdf681f424,27461217,0,0x0,8
tick,0x7ffdf681f424,27463395,0,0x0,8
tick,0x7ffdf681f424,27465325,0,0x0,8
tick,0x7ffdf681f424,27467315,0,0x0,8
tick,0x7ffdf681f424,27469301,0,0x0,8
tick,0x7ffdf681f424,27471311,0,0x0,8
tick,0x7ffdf681f424,27473300,0,0x0,8
tick,0x7ffdf681f424,27475303,0,0x0,8
tick,0x7ffdf681f424,27477302,0,0x0,8
tick,0x7ffdf681f424,27479280,0,0x0,8
tick,0x7ffdf681f424,27481273,0,0x0,8
tick,0x7ffdf681f424,27483273,0,0x0,8
tick,0x7ffdf681f424,27485329,0,0x0,8
tick,0x7ffdf681f424,27487255,0,0x0,8
tick,0x7ffdf681f424,27489254,0,0x0,8
tick,0x7ffdf681f424,27491247,0,0x0,8
tick,0x7ffdf681f424,27493246,0,0x0,8
tick,0x7ffdf681f424,27495268,0,0x0,8
tick,0x7ffdf681f424,27497162,0,0x0,8
tick,0x7ffdf681f424,27499132,0,0x0,8
tick,0x7ffdf681f424,27501326,0,0x0,8
tick,0x7ffdf681f424,27503109,0,0x0,8
tick,0x7ffdf681f424,27505214,0,0x0,8
tick,0x7ffdf681f424,27507271,0,0x0,8
tick,0x7ffdf681f424,27509199,0,0x0,8
tick,0x7ffdf681f424,27511169,0,0x0,8
tick,0x7ffdf681f424,27513191,0,0x0,8
tick,0x7ffdf681f424,27515186,0,0x0,8
tick,0x7ffdf681f424,27517183,0,0x0,8
tick,0x7ffdf681f424,27519191,0,0x0,8
tick,0x7ffdf681f424,27521174,0,0x0,8
tick,0x7ffdf681f424,27523157,0,0x0,8
tick,0x7ffdf681f424,27525133,0,0x0,8
tick,0x7ffdf681f424,27527157,0,0x0,8
tick,0x7ffdf681f424,27529177,0,0x0,8
tick,0x7ffdf681f424,27531200,0,0x0,8
tick,0x7ffdf681f424,27533136,0,0x0,8
tick,0x7ffdf681f424,27535130,0,0x0,8
tick,0x7ffdf681f424,27537129,0,0x0,8
tick,0x7ffdf681f424,27539124,0,0x0,8
tick,0x7ffdf681f424,27541123,0,0x0,8
tick,0x7ffdf681f424,27543106,0,0x0,8
tick,0x7ffdf681f424,27545110,0,0x0,8
tick,0x7ffdf681f424,27547108,0,0x0,8
tick,0x7ffdf681f424,27549093,0,0x0,8
tick,0x7ffdf681f424,27551159,0,0x0,8
tick,0x7ffdf681f424,27552981,0,0x0,8
tick,0x7ffdf681f424,27555077,0,0x0,8
tick,0x7ffdf681f424,27557074,0,0x0,8
tick,0x7ffdf681f424,27558975,0,0x0,8
tick,0x7ffdf681f424,27561068,0,0x0,8
tick,0x7ffdf681f424,27563090,0,0x0,8
tick,0x7ffdf681f424,27565066,0,0x0,8
tick,0x7ffdf681f424,27567044,0,0x0,8
tick,0x7ffdf681f424,27569045,0,0x0,8
tick,0x7ffdf681f424,27571038,0,0x0,8
tick,0x7ffdf681f424,27573095,0,0x0,8
tick,0x7ffdf681f424,27574977,0,0x0,8
tick,0x7ffdf681f424,27577031,0,0x0,8
tick,0x7ffdf681f424,27579006,0,0x0,8
tick,0x7ffdf681f424,27581009,0,0x0,8
tick,0x7ffdf681f424,27583002,0,0x0,8
tick,0x7ffdf681f424,27584889,0,0x0,8
tick,0x7ffdf681f424,27586965,0,0x0,8
tick,0x7ffdf681f424,27588920,0,0x0,8
tick,0x7ffdf681f424,27590986,0,0x0,8
tick,0x7ffdf681f424,27592976,0,0x0,8
tick,0x7ffdf681f424,27594932,0,0x0,8
tick,0x7ffdf681f424,27596962,0,0x0,8
tick,0x7ffdf681f424,27598959,0,0x0,8
tick,0x7ffdf681f424,27600958,0,0x0,8
tick,0x7ffdf681f424,27602849,0,0x0,8
tick,0x7ffdf681f424,27604938,0,0x0,8
tick,0x7ffdf681f424,27606949,0,0x0,8
tick,0x7ffdf681f424,27608939,0,0x0,8
tick,0x7ffdf681f424,27610936,0,0x0,8
tick,0x7ffdf681f424,27612932,0,0x0,8
tick,0x7ffdf681f424,27614917,0,0x0,8
tick,0x7ffdf681f424,27617001,0,0x0,8
tick,0x7ffdf681f424,27618931,0,0x0,8
tick,0x7ffdf681f424,27620904,0,0x0,8
tick,0x7ffdf681f424,27622895,0,0x0,8
tick,0x7ffdf681f424,27624891,0,0x0,8
tick,0x7ffdf681f424,27626789,0,0x0,8
tick,0x7ffdf681f424,27628903,0,0x0,8
tick,0x7ffdf681f424,27630898,0,0x0,8
tick,0x7ffdf681f424,27632871,0,0x0,8
tick,0x7ffdf681f424,27634860,0,0x0,8
tick,0x7ffdf681f424,27636857,0,0x0,8
tick,0x7ffdf681f424,27638931,0,0x0,8
tick,0x7ffdf681f424,27640849,0,0x0,8
tick,0x7ffdf681f424,27642842,0,0x0,8
tick,0x7ffdf681f424,27644729,0,0x0,8
tick,0x7ffdf681f424,27646831,0,0x0,8
tick,0x7ffdf681f424,27648843,0,0x0,8
tick,0x7ffdf681f424,27650763,0,0x0,8
tick,0x7ffdf681f424,27652719,0,0x0,8
tick,0x7ffdf681f424,27654853,0,0x0,8
tick,0x7ffdf681f424,27656811,0,0x0,8
tick,0x7ffdf681f424,27658798,0,0x0,8
tick,0x7ffdf681f424,27660841,0,0x0,8
tick,0x7ffdf681f424,27662790,0,0x0,8
tick,0x7ffdf681f424,27664789,0,0x0,8
tick,0x7ffdf681f424,27666776,0,0x0,8
tick,0x7ffdf681f424,27668772,0,0x0,8
tick,0x7ffdf681f424,27670770,0,0x0,8
tick,0x7ffdf681f424,27672772,0,0x0,8
tick,0x7ffdf681f424,27674769,0,0x0,8
tick,0x7ffdf681f424,27676776,0,0x0,8
tick,0x7ffdf681f424,27678754,0,0x0,8
tick,0x7ffdf681f424,27680743,0,0x0,8
tick,0x7ffdf681f424,27682747,0,0x0,8
tick,0x7ffdf681f424,27684733,0,0x0,8
tick,0x7ffdf681f424,27686724,0,0x0,8
tick,0x7ffdf681f424,27688718,0,0x0,8
tick,0x7ffdf681f424,27690722,0,0x0,8
tick,0x7ffdf681f424,27692725,0,0x0,8
tick,0x7ffdf681f424,27694599,0,0x0,8
tick,0x7ffdf681f424,27696710,0,0x0,8
tick,0x7ffdf681f424,27698697,0,0x0,8
tick,0x7ffdf681f424,27700695,0,0x0,8
tick,0x7ffdf681f424,27702682,0,0x0,8
tick,0x7ffdf681f424,27704750,0,0x0,8
tick,0x7ffdf681f424,27706666,0,0x0,8
tick,0x7ffdf681f424,27708670,0,0x0,8
tick,0x7ffdf681f424,27710651,0,0x0,8
tick,0x7ffdf681f424,27712649,0,0x0,8
tick,0x7ffdf681f424,27714645,0,0x0,8
tick,0x7ffdf681f424,27716654,0,0x0,8
tick,0x7ffdf681f424,27718649,0,0x0,8
tick,0x7ffdf681f424,27720626,0,0x0,8
tick,0x7ffdf681f424,27722530,0,0x0,8
tick,0x7ffdf681f424,27724616,0,0x0,8
tick,0x7ffdf681f424,27726682,0,0x0,8
tick,0x7ffdf681f424,27728638,0,0x0,8
tick,0x7ffdf681f424,27730610,0,0x0,8
tick,0x7ffdf681f424,27732601,0,0x0,8
tick,0x7ffdf681f424,27734616,0,0x0,8
tick,0x7ffdf681f424,27736486,0,0x0,8
tick,0x7ffdf681f424,27738593,0,0x0,8
tick,0x7ffdf681f424,27740584,0,0x0,8
tick,0x7ffdf681f424,27742568,0,0x0,8
tick,0x7ffdf681f424,27744537,0,0x0,8
tick,0x7ffdf681f424,27746564,0,0x0,8
tick,0x7ffdf681f424,27748638,0,0x0,8
tick,0x7ffdf681f424,27750554,0,0x0,8
tick,0x7ffdf681f424,27752544,0,0x0,8
tick,0x7ffdf681f424,27754541,0,0x0,8
tick,0x7ffdf681f424,27756542,0,0x0,8
tick,0x7ffdf681f424,27758528,0,0x0,8
tick,0x7ffdf681f424,27760535,0,0x0,8
tick,0x7ffdf681f424,27762529,0,0x0,8
tick,0x7ffdf681f424,27764550,0,0x0,8
tick,0x7ffdf681f424,27766524,0,0x0,8
tick,0x7ffdf681f424,27768508,0,0x0,8
tick,0x7ffdf681f424,27770549,0,0x0,8
tick,0x7ffdf681f424,27772513,0,0x0,8
tick,0x7ffdf681f424,27774496,0,0x0,8
tick,0x7ffdf681f424,27776482,0,0x0,8
tick,0x7ffdf681f424,27778479,0,0x0,8
tick,0x7ffdf681f424,27780489,0,0x0,8
tick,0x7ffdf681f424,27782471,0,0x0,8
tick,0x7ffdf681f424,27784480,0,0x0,8
tick,0x7ffdf681f424,27786351,0,0x0,8
tick,0x7ffdf681f424,27788456,0,0x0,8
tick,0x7ffdf681f424,27790452,0,0x0,8
tick,0x7ffdf681f424,27792521,0,0x0,8
tick,0x7ffdf681f424,27794443,0,0x0,8
tick,0x7ffdf681f424,27796440,0,0x0,8
tick,0x7ffdf681f424,27798392,0,0x0,8
tick,0x7ffdf681f424,27800422,0,0x0,8
tick,0x7ffdf681f424,27802457,0,0x0,8
tick,0x7ffdf681f424,27804289,0,0x0,8
tick,0x7ffdf681f424,27806291,0,0x0,8
tick,0x7ffdf681f424,27808502,0,0x0,8
tick,0x7ffdf681f424,27810402,0,0x0,8
tick,0x7ffdf681f424,27812299,0,0x0,8
tick,0x7ffdf681f424,27814463,0,0x0,8
tick,0x7ffdf681f424,27816372,0,0x0,8
tick,0x7ffdf681f424,27818368,0,0x0,8
tick,0x7ffdf681f424,27820409,0,0x0,8
tick,0x7ffdf681f424,27822361,0,0x0,8
tick,0x7ffdf681f424,27824361,0,0x0,8
tick,0x7ffdf681f424,27826357,0,0x0,8
tick,0x7ffdf681f424,27828239,0,0x0,8
tick,0x7ffdf681f424,27830345,0,0x0,8
tick,0x7ffdf681f424,27832335,0,0x0,8
tick,0x7ffdf681f424,27834333,0,0x0,8
tick,0x7ffdf681f424,27836241,0,0x0,8
tick,0x7ffdf681f424,27838217,0,0x0,8
tick,0x7ffdf681f424,27840316,0,0x0,8
tick,0x7ffdf681f424,27842308,0,0x0,8
tick,0x7ffdf681f424,27844306,0,0x0,8
tick,0x7ffdf681f424,27846309,0,0x0,8
tick,0x7ffdf681f424,27848299,0,0x0,8
tick,0x7ffdf681f424,27850295,0,0x0,8
tick,0x7ffdf681f424,27852292,0,0x0,8
tick,0x7ffdf681f424,27854294,0,0x0,8
tick,0x7ffdf681f424,27856271,0,0x0,8
tick,0x7ffdf681f424,27858331,0,0x0,8
tick,0x7ffdf681f424,27860260,0,0x0,8
tick,0x7ffdf681f424,27862255,0,0x0,8
tick,0x7ffdf681f424,27864257,0,0x0,8
tick,0x7ffdf681f424,27866244,0,0x0,8
tick,0x7ffdf681f424,27868244,0,0x0,8
tick,0x7ffdf681f424,27870248,0,0x0,8
tick,0x7ffdf681f424,27872229,0,0x0,8
tick,0x7ffdf681f424,27874223,0,0x0,8
tick,0x7ffdf681f424,27876223,0,0x0,8
tick,0x7ffdf681f424,27878108,0,0x0,8
tick,0x7ffdf681f424,27880221,0,0x0,8
tick,0x7ffdf681f424,27882161,0,0x0,8
tick,0x7ffdf681f424,27884194,0,0x0,8
tick,0x7ffdf681f424,27886192,0,0x0,8
tick,0x7ffdf681f424,27888190,0,0x0,8
tick,0x7ffdf681f424,27890185,0,0x0,8
tick,0x7ffdf681f424,27892182,0,0x0,8
tick,0x7ffdf681f424,27894180,0,0x0,8
tick,0x7ffdf681f424,27896182,0,0x0,8
tick,0x7ffdf681f424,27898171,0,0x0,8
tick,0x7ffdf681f424,27900150,0,0x0,8
tick,0x7ffdf681f424,27902206,0,0x0,8
tick,0x7ffdf681f424,27904142,0,0x0,8
tick,0x7ffdf681f424,27906140,0,0x0,8
tick,0x7ffdf681f424,27908135,0,0x0,8
tick,0x7ffdf681f424,27910128,0,0x0,8
tick,0x7ffdf681f424,27912118,0,0x0,8
tick,0x7ffdf681f424,27914124,0,0x0,8
tick,0x7ffdf681f424,27916117,0,0x0,8
tick,0x7ffdf681f424,27918105,0,0x0,8
tick,0x7ffdf681f424,27920107,0,0x0,8
tick,0x7ffdf681f424,27922102,0,0x0,8
tick,0x7ffdf681f424,27924134,0,0x0,8
tick,0x7ffdf681f424,27926085,0,0x0,8
tick,0x7ffdf681f424,27927987,0,0x0,8
tick,0x7ffdf681f424,27930084,0,0x0,8
tick,0x7ffdf681f424,27932086,0,0x0,8
tick,0x7ffdf681f424,27933992,0,0x0,8
tick,0x7ffdf681f424,27936090,0,0x0,8
tick,0x7ffdf681f424,27938072,0,0x0,8
tick,0x7ffdf681f424,27940050,0,0x0,8
tick,0x7ffdf681f424,27942049,0,0x0,8
tick,0x7ffdf681f424,27944037,0,0x0,8
tick,0x7ffdf681f424,27946103,0,0x0,8
tick,0x7ffdf681f424,27948026,0,0x0,8
tick,0x7ffdf681f424,27950016,0,0x0,8
tick,0x7ffdf681f424,27952020,0,0x0,8
tick,0x7ffdf681f424,27954017,0,0x0,8
tick,0x7ffdf681f424,27956038,0,0x0,8
tick,0x7ffdf681f424,27957986,0,0x0,8
tick,0x7ffdf681f424,27959888,0,0x0,8
tick,0x7ffdf681f424,27962085,0,0x0,8
tick,0x7ffdf681f424,27963993,0,0x0,8
tick,0x7ffdf681f424,27965984,0,0x0,8
tick,0x7ffdf681f424,27968011,0,0x0,8
tick,0x7ffdf681f424,27969864,0,0x0,8
tick,0x7ffdf681f424,27971964,0,0x0,8
tick,0x7ffdf681f424,27973957,0,0x0,8
tick,0x7ffdf681f424,27975952,0,0x0,8
tick,0x7ffdf681f424,27977901,0,0x0,8
tick,0x7ffdf681f424,27979947,0,0x0,8
tick,0x7ffdf681f424,27981943,0,0x0,8
tick,0x7ffdf681f424,27983932,0,0x0,8
tick,0x7ffdf681f424,27985932,0,0x0,8
tick,0x7ffdf681f424,27987927,0,0x0,8
tick,0x7ffdf681f424,27990008,0,0x0,8
tick,0x7ffdf681f424,27991911,0,0x0,8
tick,0x7ffdf681f424,27993906,0,0x0,8
tick,0x7ffdf681f424,27995895,0,0x0,8
tick,0x7ffdf681f424,27997895,0,0x0,8
tick,0x7ffdf681f424,27999864,0,0x0,8
tick,0x7ffdf681f424,28001888,0,0x0,8
tick,0x7ffdf681f424,28003883,0,0x0,8
tick,0x7ffdf681f424,28005870,0,0x0,8
tick,0x7ffdf681f424,28007874,0,0x0,8
tick,0x7ffdf681f424,28009869,0,0x0,8
tick,0x7ffdf681f424,28011940,0,0x0,8
tick,0x7ffdf681f424,28013850,0,0x0,8
tick,0x7ffdf681f424,28015849,0,0x0,8
tick,0x7ffdf681f424,28017849,0,0x0,8
tick,0x7ffdf681f424,28019740,0,0x0,8
tick,0x7ffdf681f424,28021832,0,0x0,8
tick,0x7ffdf681f424,28023835,0,0x0,8
tick,0x7ffdf681f424,28025829,0,0x0,8
tick,0x7ffdf681f424,28027822,0,0x0,8
tick,0x7ffdf681f424,28029819,0,0x0,8
tick,0x7ffdf681f424,28031805,0,0x0,8
tick,0x7ffdf681f424,28033875,0,0x0,8
tick,0x7ffdf681f424,28035815,0,0x0,8
tick,0x7ffdf681f424,28037788,0,0x0,8
tick,0x7ffdf681f424,28039676,0,0x0,8
tick,0x7ffdf681f424,28041778,0,0x0,8
tick,0x7ffdf681f424,28043773,0,0x0,8
tick,0x7ffdf681f424,28045669,0,0x0,8
tick,0x7ffdf681f424,28047768,0,0x0,8
tick,0x7ffdf681f424,28049759,0,0x0,8
tick,0x7ffdf681f424,28051756,0,0x0,8
tick,0x7ffdf681f424,28053743,0,0x0,8
tick,0x7ffdf681f424,28055827,0,0x0,8
tick,0x7ffdf681f424,28057694,0,0x0,8
tick,0x7ffdf681f424,28059728,0,0x0,8
tick,0x7ffdf681f424,28061728,0,0x0,8
tick,0x7ffdf681f424,28063759,0,0x0,8
tick,0x7ffdf681f424,28065711,0,0x0,8
tick,0x7ffdf681f424,28067715,0,0x0,8
tick,0x7ffdf681f424,28069601,0,0x0,8
tick,0x7ffdf681f424,28071696,0,0x0,8
tick,0x7ffdf681f424,28073690,0,0x0,8
tick,0x7ffdf681f424,28075685,0,0x0,8
tick,0x7ffdf681f424,28077660,0,0x0,8
tick,0x7ffdf681f424,28079678,0,0x0,8
tick,0x7ffdf681f424,28081668,0,0x0,8
tick,0x7ffdf681f424,28083662,0,0x0,8
tick,0x7ffdf681f424,28085670,0,0x0,8
tick,0x7ffdf681f424,28087650,0,0x0,8
tick,0x7ffdf681f424,28089646,0,0x0,8
tick,0x7ffdf681f424,28091647,0,0x0,8
tick,0x7ffdf681f424,28093636,0,0x0,8
tick,0x7ffdf681f424,28095631,0,0x0,8
tick,0x7ffdf681f424,28097634,0,0x0,8
tick,0x7ffdf681f424,28099641,0,0x0,8
tick,0x7ffdf681f424,28101615,0,0x0,8
tick,0x7ffdf681f424,28103605,0,0x0,8
tick,0x7ffdf681f424,28105607,0,0x0,8
tick,0x7ffdf681f424,28107592,0,0x0,8
tick,0x7ffdf681f424,28109612,0,0x0,8
tick,0x7ffdf681f424,28111537,0,0x0,8
tick,0x7ffdf681f424,28113482,0,0x0,8
tick,0x7ffdf681f424,28115616,0,0x0,8
tick,0x7ffdf681f424,28117581,0,0x0,8
tick,0x7ffdf681f424,28119566,0,0x0,8
tick,0x7ffdf681f424,28121568,0,0x0,8
tick,0x7ffdf681f424,28123553,0,0x0,8
tick,0x7ffdf681f424,28125554,0,0x0,8
tick,0x7ffdf681f424,28127549,0,0x0,8
tick,0x7ffdf681f424,28129543,0,0x0,8
tick,0x7ffdf681f424,28131538,0,0x0,8
tick,0x7ffdf681f424,28133534,0,0x0,8
tick,0x7ffdf681f424,28135527,0,0x0,8
tick,0x7ffdf681f424,28137521,0,0x0,8
tick,0x7ffdf681f424,28139527,0,0x0,8
tick,0x7ffdf681f424,28141507,0,0x0,8
tick,0x7ffdf681f424,28143484,0,0x0,8
tick,0x7ffdf681f424,28145503,0,0x0,8
tick,0x7ffdf681f424,28147493,0,0x0,8
tick,0x7ffdf681f424,28149521,0,0x0,8
tick,0x7ffdf681f424,28151483,0,0x0,8
tick,0x7ffdf681f424,28153454,0,0x0,8
tick,0x7ffdf681f424,28155484,0,0x0,8
tick,0x7ffdf681f424,28157477,0,0x0,8
tick,0x7ffdf681f424,28159474,0,0x0,8
tick,0x7ffdf681f424,28161343,0,0x0,8
tick,0x7ffdf681f424,28163453,0,0x0,8
tick,0x7ffdf681f424,28165455,0,0x0,8
tick,0x7ffdf681f424,28167448,0,0x0,8
tick,0x7ffdf681f424,28169454,0,0x0,8
tick,0x7ffdf681f424,28171429,0,0x0,8
tick,0x7ffdf681f424,28173426,0,0x0,8
tick,0x7ffdf681f424,28175422,0,0x0,8
tick,0x7ffdf681f424,28177421,0,0x0,8
tick,0x7ffdf681f424,28179422,0,0x0,8
tick,0x7ffdf681f424,28181426,0,0x0,8
tick,0x7ffdf681f424,28183410,0,0x0,8
tick,0x7ffdf681f424,28185396,0,0x0,8
tick,0x7ffdf681f424,28187445,0,0x0,8
tick,0x7ffdf681f424,28189399,0,0x0,8
tick,0x7ffdf681f424,28191393,0,0x0,8
tick,0x7ffdf681f424,28193370,0,0x0,8
tick,0x7ffdf681f424,28195315,0,0x0,8
tick,0x7ffdf681f424,28197352,0,0x0,8
tick,0x7ffdf681f424,28199395,0,0x0,8
tick,0x7ffdf681f424,28201364,0,0x0,8
tick,0x7ffdf681f424,28203231,0,0x0,8
tick,0x7ffdf681f424,28205345,0,0x0,8
tick,0x7ffdf681f424,28207337,0,0x0,8
tick,0x7ffdf681f424,28209395,0,0x0,8
tick,0x7ffdf681f424,28211276,0,0x0,8
tick,0x7ffdf681f424,28213311,0,0x0,8
tick,0x7ffdf681f424,28215313,0,0x0,8
tick,0x7ffdf681f424,28217309,0,0x0,8
tick,0x7ffdf681f424,28219301,0,0x0,8
tick,0x7ffdf681f424,28221300,0,0x0,8
tick,0x7ffdf681f424,28223300,0,0x0,8
tick,0x7ffdf681f424,28225284,0,0x0,8
tick,0x7ffdf681f424,28227293,0,0x0,8
tick,0x7ffdf681f424,28229273,0,0x0,8
tick,0x7ffdf681f424,28231311,0,0x0,8
tick,0x7ffdf681f424,28233278,0,0x0,8
tick,0x7ffdf681f424,28235258,0,0x0,8
tick,0x7ffdf681f424,28237253,0,0x0,8
tick,0x7ffdf681f424,28239251,0,0x0,8
tick,0x7ffdf681f424,28241134,0,0x0,8
tick,0x7ffdf681f424,28243242,0,0x0,8
tick,0x7ffdf681f424,28245238,0,0x0,8
tick,0x7ffdf681f424,28247226,0,0x0,8
tick,0x7ffdf681f424,28249234,0,0x0,8
tick,0x7ffdf681f424,28251222,0,0x0,8
tick,0x7ffdf681f424,28253170,0,0x0,8
tick,0x7ffdf681f424,28255214,0,0x0,8
tick,0x7ffdf681f424,28257199,0,0x0,8
tick,0x7ffdf681f424,28259196,0,0x0,8
tick,0x7ffdf681f424,28261199,0,0x0,8
tick,0x7ffdf681f424,28263221,0,0x0,8
tick,0x7ffdf681f424,28265157,0,0x0,8
tick,0x7ffdf681f424,28267064,0,0x0,8
tick,0x7ffdf681f424,28269198,0,0x0,8
tick,0x7ffdf681f424,28271133,0,0x0,8
tick,0x7ffdf681f424,28273161,0,0x0,8
tick,0x7ffdf681f424,28275132,0,0x0,8
tick,0x7ffdf681f424,28277147,0,0x0,8
tick,0x7ffdf681f424,28279147,0,0x0,8
tick,0x7ffdf681f424,28281141,0,0x0,8
tick,0x7ffdf681f424,28283126,0,0x0,8
tick,0x7ffdf681f424,28285124,0,0x0,8
tick,0x7ffdf681f424,28287124,0,0x0,8
tick,0x7ffdf681f424,28289122,0,0x0,8
tick,0x7ffdf681f424,28291114,0,0x0,8
tick,0x7ffdf681f424,28293117,0,0x0,8
tick,0x7ffdf681f424,28295098,0,0x0,8
tick,0x7ffdf681f424,28297073,0,0x0,8
tick,0x7ffdf681f424,28299087,0,0x0,8
tick,0x7ffdf681f424,28301073,0,0x0,8
tick,0x7ffdf681f424,28302987,0,0x0,8
tick,0x7ffdf681f424,28305076,0,0x0,8
tick,0x7ffdf681f424,28307065,0,0x0,8
tick,0x7ffdf681f424,28309058,0,0x0,8
tick,0x7ffdf681f424,28311054,0,0x0,8
tick,0x7ffdf681f424,28313052,0,0x0,8
tick,0x7ffdf681f424,28315055,0,0x0,8
tick,0x7ffdf681f424,28317040,0,0x0,8
tick,0x7ffdf681f424,28319018,0,0x0,8
tick,0x7ffdf681f424,28321028,0,0x0,8
tick,0x7ffdf681f424,28323026,0,0x0,8
tick,0x7ffdf681f424,28325018,0,0x0,8
tick,0x7ffdf681f424,28327019,0,0x0,8
tick,0x7ffdf681f424,28329003,0,0x0,8
tick,0x7ffdf681f424,28331007,0,0x0,8
tick,0x7ffdf681f424,28333041,0,0x0,8
tick,0x7ffdf681f424,28334996,0,0x0,8
tick,0x7ffdf681f424,28336889,0,0x0,8
tick,0x7ffdf681f424,28338987,0,0x0,8
tick,0x7ffdf681f424,28341045,0,0x0,8
tick,0x7ffdf681f424,28343013,0,0x0,8
tick,0x7ffdf681f424,28344850,0,0x0,8
tick,0x7ffdf681f424,28346972,0,0x0,8
tick,0x7ffdf681f424,28348953,0,0x0,8
tick,0x7ffdf681f424,28350950,0,0x0,8
tick,0x7ffdf681f424,28352948,0,0x0,8
tick,0x7ffdf681f424,28354939,0,0x0,8
tick,0x7ffdf681f424,28356924,0,0x0,8
tick,0x7ffdf681f424,28358926,0,0x0,8
tick,0x7ffdf681f424,28360924,0,0x0,8
tick,0x7ffdf681f424,28362883,0,0x0,8
tick,0x7ffdf681f424,28364903,0,0x0,8
tick,0x7ffdf681f424,28366790,0,0x0,8
tick,0x7ffdf681f424,28368782,0,0x0,8
tick,0x7ffdf681f424,28370913,0,0x0,8
tick,0x7ffdf681f424,28372893,0,0x0,8
tick,0x7ffdf681f424,28374860,0,0x0,8
tick,0x7ffdf681f424,28376888,0,0x0,8
tick,0x7ffdf681f424,28378875,0,0x0,8
tick,0x7ffdf681f424,28380872,0,0x0,8
tick,0x7ffdf681f424,28382864,0,0x0,8
tick,0x7ffdf681f424,28384869,0,0x0,8
tick,0x7ffdf681f424,28386863,0,0x0,8
tick,0x7ffdf681f424,28388817,0,0x0,8
tick,0x7ffdf681f424,28390846,0,0x0,8
tick,0x7ffdf681f424,28392841,0,0x0,8
tick,0x7ffdf681f424,28394733,0,0x0,8
tick,0x7ffdf681f424,28396835,0,0x0,8
tick,0x7ffdf681f424,28398827,0,0x0,8
tick,0x7ffdf681f424,28400823,0,0x0,8
tick,0x7ffdf681f424,28402818,0,0x0,8
tick,0x7ffdf681f424,28404804,0,0x0,8
tick,0x7ffdf681f424,28406816,0,0x0,8
tick,0x7ffdf681f424,28408797,0,0x0,8
tick,0x7ffdf681f424,28410790,0,0x0,8
tick,0x7ffdf681f424,28412783,0,0x0,8
tick,0x7ffdf681f424,28414780,0,0x0,8
tick,0x7ffdf681f424,28416807,0,0x0,8
tick,0x7ffdf681f424,28418786,0,0x0,8
tick,0x7ffdf681f424,28420715,0,0x0,8
tick,0x7ffdf681f424,28422799,0,0x0,8
tick,0x7ffdf681f424,28424751,0,0x0,8
tick,0x7ffdf681f424,28426752,0,0x0,8
tick,0x7ffdf681f424,28428778,0,0x0,8
tick,0x7ffdf681f424,28430741,0,0x0,8
tick,0x7ffdf681f424,28432735,0,0x0,8
tick,0x7ffdf681f424,28434724,0,0x0,8
tick,0x7ffdf681f424,28436615,0,0x0,8
tick,0x7ffdf681f424,28438715,0,0x0,8
tick,0x7ffdf681f424,28440720,0,0x0,8
tick,0x7ffdf681f424,28442712,0,0x0,8
tick,0x7ffdf681f424,28444625,0,0x0,8
tick,0x7ffdf681f424,28446702,0,0x0,8
tick,0x7ffdf681f424,28448687,0,0x0,8
tick,0x7ffdf681f424,28450749,0,0x0,8
tick,0x7ffdf681f424,28452677,0,0x0,8
tick,0x7ffdf681f424,28454672,0,0x0,8
tick,0x7ffdf681f424,28456669,0,0x0,8
tick,0x7ffdf681f424,28458666,0,0x0,8
tick,0x7ffdf681f424,28460661,0,0x0,8
tick,0x7ffdf681f424,28462654,0,0x0,8
tick,0x7ffdf681f424,28464660,0,0x0,8
tick,0x7ffdf681f424,28466633,0,0x0,8
tick,0x7ffdf681f424,28468634,0,0x0,8
tick,0x7ffdf681f424,28470630,0,0x0,8
tick,0x7ffdf681f424,28472647,0,0x0,8
tick,0x7ffdf681f424,28474619,0,0x0,8
tick,0x7ffdf681f424,28476612,0,0x0,8
tick,0x7ffdf681f424,28478610,0,0x0,8
tick,0x7ffdf681f424,28480603,0,0x0,8
tick,0x7ffdf681f424,28482589,0,0x0,8
tick,0x7ffdf681f424,28484600,0,0x0,8
tick,0x7ffdf681f424,28486480,0,0x0,8
tick,0x7ffdf681f424,28488582,0,0x0,8
tick,0x7ffdf681f424,28490583,0,0x0,8
tick,0x7ffdf681f424,28492571,0,0x0,8
tick,0x7ffdf681f424,28494594,0,0x0,8
tick,0x7ffdf681f424,28496597,0,0x0,8
tick,0x7ffdf681f424,28498553,0,0x0,8
tick,0x7ffdf681f424,28500555,0,0x0,8
tick,0x7ffdf681f424,28502545,0,0x0,8
tick,0x7ffdf681f424,28504494,0,0x0,8
tick,0x7ffdf681f424,28506541,0,0x0,8
tick,0x7ffdf681f424,28508533,0,0x0,8
tick,0x7ffdf681f424,28510533,0,0x0,8
tick,0x7ffdf681f424,28512524,0,0x0,8
tick,0x7ffdf681f424,28514514,0,0x0,8
tick,0x7ffdf681f424,28516583,0,0x0,8
tick,0x7ffdf681f424,28518501,0,0x0,8
tick,0x7ffdf681f424,28520499,0,0x0,8
tick,0x7ffdf681f424,28522492,0,0x0,8
tick,0x7ffdf681f424,28524484,0,0x0,8
tick,0x7ffdf681f424,28526483,0,0x0,8
tick,0x7ffdf681f424,28528491,0,0x0,8
tick,0x7ffdf681f424,28530485,0,0x0,8
tick,0x7ffdf681f424,28532463,0,0x0,8
tick,0x7ffdf681f424,28534467,0,0x0,8
tick,0x7ffdf681f424,28536344,0,0x0,8
tick,0x7ffdf681f424,28538517,0,0x0,8
tick,0x7ffdf681f424,28540439,0,0x0,8
tick,0x7ffdf681f424,28542438,0,0x0,8
tick,0x7ffdf681f424,28544432,0,0x0,8
tick,0x7ffdf681f424,28546431,0,0x0,8
tick,0x7ffdf681f424,28548311,0,0x0,8
tick,0x7ffdf681f424,28550425,0,0x0,8
tick,0x7ffdf681f424,28552421,0,0x0,8
tick,0x7ffdf681f424,28554405,0,0x0,8
tick,0x7ffdf681f424,28556412,0,0x0,8
tick,0x7ffdf681f424,28558407,0,0x0,8
tick,0x7ffdf681f424,28560370,0,0x0,8
tick,0x7ffdf681f424,28562296,0,0x0,8
tick,0x7ffdf681f424,28564422,0,0x0,8
tick,0x7ffdf681f424,28566512,0,0x0,8
tick,0x7ffdf681f424,28568428,0,0x0,8
tick,0x7ffdf681f424,28570422,0,0x0,8
tick,0x7ffdf681f424,28572246,0,0x0,8
tick,0x7ffdf681f424,28574266,0,0x0,8
tick,0x7ffdf681f424,28576313,0,0x0,8
tick,0x7ffdf681f424,28578272,0,0x0,8
tick,0x7ffdf681f424,28580358,0,0x0,8
tick,0x7ffdf681f424,28582352,0,0x0,8
tick,0x7ffdf681f424,28584246,0,0x0,8
tick,0x7ffdf681f424,28586392,0,0x0,8
tick,0x7ffdf681f424,28588272,0,0x0,8
tick,0x7ffdf681f424,28590359,0,0x0,8
tick,0x7ffdf681f424,28592349,0,0x0,8
tick,0x7ffdf681f424,28594308,0,0x0,8
tick,0x7ffdf681f424,28596345,0,0x0,8
tick,0x7ffdf681f424,28597469,0,0x0,8
tick,0x7ffdf681f424,28598617,0,0x0,8
tick,0x7ffdf681f424,28600617,0,0x0,8
tick,0x7ffdf681f424,28602592,0,0x0,8
tick,0x7ffdf681f424,28604605,0,0x0,8
tick,0x7ffdf681f424,28605693,0,0x0,8
tick,0x7ffdf681f424,28607698,0,0x0,8
tick,0x7ffdf681f424,28608837,0,0x0,8
tick,0x7ffdf681f424,28610804,0,0x0,8
tick,0x7ffdf681f424,28612834,0,0x0,8
tick,0x7ffdf681f424,28614820,0,0x0,8
tick,0x7ffdf681f424,28615960,0,0x0,8
tick,0x7ffdf681f424,28617969,0,0x0,8
tick,0x7ffdf681f424,28619119,0,0x0,8
tick,0x7ffdf681f424,28621106,0,0x0,8
tick,0x7ffdf681f424,28623098,0,0x0,8
tick,0x7ffdf681f424,28625108,0,0x0,8
tick,0x7ffdf681f424,28626241,0,0x0,8
tick,0x7ffdf681f424,28628190,0,0x0,8
tick,0x7ffdf681f424,28630242,0,0x0,8
tick,0x7ffdf681f424,28632264,0,0x0,8
tick,0x7ffdf681f424,28634215,0,0x0,8
tick,0x7ffdf681f424,28636341,0,0x0,8
tick,0x7ffdf681f424,28638323,0,0x0,8
tick,0x7ffdf681f424,28639432,0,0x0,8
tick,0x7ffdf681f424,28641429,0,0x0,8
tick,0x7ffdf681f424,28643434,0,0x0,8
tick,0x7ffdf681f424,28645472,0,0x0,8
tick,0x7ffdf681f424,28647449,0,0x0,8
tick,0x7ffdf681f424,28649361,0,0x0,8
tick,0x7ffdf681f424,28651400,0,0x0,8
tick,0x7ffdf681f424,28653328,0,0x0,8
tick,0x7ffdf681f424,28655458,0,0x0,8
tick,0x7ffdf681f424,28657432,0,0x0,8
tick,0x7ffdf681f424,28659430,0,0x0,8
tick,0x7ffdf681f424,28661359,0,0x0,8
tick,0x7ffdf681f424,28663402,0,0x0,8
tick,0x7ffdf681f424,28665417,0,0x0,8
tick,0x7ffdf681f424,28667413,0,0x0,8
tick,0x7ffdf681f424,28669418,0,0x0,8
tick,0x7ffdf681f424,28671401,0,0x0,8
tick,0x7ffdf681f424,28673368,0,0x0,8
tick,0x7ffdf681f424,28675386,0,0x0,8
tick,0x7ffdf681f424,28677348,0,0x0,8
tick,0x7ffdf681f424,28679391,0,0x0,8
tick,0x7ffdf681f424,28681377,0,0x0,8
tick,0x7ffdf681f424,28683357,0,0x0,8
tick,0x7ffdf681f424,28685322,0,0x0,8
tick,0x7ffdf681f424,28687393,0,0x0,8
tick,0x7ffdf681f424,28689343,0,0x0,8
tick,0x7ffdf681f424,28691351,0,0x0,8
tick,0x7ffdf681f424,28693335,0,0x0,8
tick,0x7ffdf681f424,28695277,0,0x0,8
tick,0x7ffdf681f424,28697320,0,0x0,8
tick,0x7ffdf681f424,28699273,0,0x0,8
tick,0x7ffdf681f424,28701308,0,0x0,8
tick,0x7ffdf681f424,28703211,0,0x0,8
tick,0x7ffdf681f424,28705311,0,0x0,8
tick,0x7ffdf681f424,28707262,0,0x0,8
tick,0x7ffdf681f424,28709295,0,0x0,8
tick,0x7ffdf681f424,28711293,0,0x0,8
tick,0x7ffdf681f424,28713289,0,0x0,8
tick,0x7ffdf681f424,28715273,0,0x0,8
tick,0x7ffdf681f424,28717226,0,0x0,8
tick,0x7ffdf681f424,28719265,0,0x0,8
tick,0x7ffdf681f424,28721293,0,0x0,8
tick,0x7ffdf681f424,28723259,0,0x0,8
tick,0x7ffdf681f424,28725150,0,0x0,8
tick,0x7ffdf681f424,28727247,0,0x0,8
tick,0x7ffdf681f424,28729260,0,0x0,8
tick,0x7ffdf681f424,28731242,0,0x0,8
tick,0x7ffdf681f424,28733222,0,0x0,8
tick,0x7ffdf681f424,28735268,0,0x0,8
tick,0x7ffdf681f424,28737209,0,0x0,8
tick,0x7ffdf681f424,28739168,0,0x0,8
tick,0x7ffdf681f424,28741206,0,0x0,8
tick,0x7ffdf681f424,28743219,0,0x0,8
tick,0x7ffdf681f424,28745236,0,0x0,8
tick,0x7ffdf681f424,28747190,0,0x0,8
tick,0x7ffdf681f424,28749188,0,0x0,8
tick,0x7ffdf681f424,28751155,0,0x0,8
tick,0x7ffdf681f424,28753086,0,0x0,8
tick,0x7ffdf681f424,28755180,0,0x0,8
tick,0x7ffdf681f424,28757165,0,0x0,8
tick,0x7ffdf681f424,28759157,0,0x0,8
tick,0x7ffdf681f424,28761110,0,0x0,8
tick,0x7ffdf681f424,28763153,0,0x0,8
tick,0x7ffdf681f424,28765160,0,0x0,8
tick,0x7ffdf681f424,28767130,0,0x0,8
tick,0x7ffdf681f424,28769152,0,0x0,8
tick,0x7ffdf681f424,28771123,0,0x0,8
tick,0x7ffdf681f424,28773097,0,0x0,8
tick,0x7ffdf681f424,28775125,0,0x0,8
tick,0x7ffdf681f424,28777115,0,0x0,8
tick,0x7ffdf681f424,28779112,0,0x0,8
tick,0x7ffdf681f424,28781097,0,0x0,8
tick,0x7ffdf681f424,28783050,0,0x0,8
tick,0x7ffdf681f424,28785088,0,0x0,8
tick,0x7ffdf681f424,28787100,0,0x0,8
tick,0x7ffdf681f424,28789078,0,0x0,8
tick,0x7ffdf681f424,28791068,0,0x0,8
tick,0x7ffdf681f424,28793072,0,0x0,8
tick,0x7ffdf681f424,28794901,0,0x0,8
tick,0x7ffdf681f424,28797070,0,0x0,8
tick,0x7ffdf681f424,28799066,0,0x0,8
tick,0x7ffdf681f424,28800940,0,0x0,8
tick,0x7ffdf681f424,28802935,0,0x0,8
tick,0x7ffdf681f424,28804998,0,0x0,8
tick,0x7ffdf681f424,28807030,0,0x0,8
tick,0x7ffdf681f424,28809036,0,0x0,8
tick,0x7ffdf681f424,28811017,0,0x0,8
tick,0x7ffdf681f424,28813014,0,0x0,8
tick,0x7ffdf681f424,28815015,0,0x0,8
tick,0x7ffdf681f424,28816970,0,0x0,8
tick,0x7ffdf681f424,28819014,0,0x0,8
tick,0x7ffdf681f424,28820996,0,0x0,8
tick,0x7ffdf681f424,28822998,0,0x0,8
tick,0x7ffdf681f424,28824987,0,0x0,8
tick,0x7ffdf681f424,28826931,0,0x0,8
tick,0x7ffdf681f424,28828971,0,0x0,8
tick,0x7ffdf681f424,28830965,0,0x0,8
tick,0x7ffdf681f424,28832973,0,0x0,8
tick,0x7ffdf681f424,28834968,0,0x0,8
tick,0x7ffdf681f424,28836955,0,0x0,8
tick,0x7ffdf681f424,28838885,0,0x0,8
tick,0x7ffdf681f424,28840947,0,0x0,8
tick,0x7ffdf681f424,28842932,0,0x0,8
tick,0x7ffdf681f424,28844826,0,0x0,8
tick,0x7ffdf681f424,28846927,0,0x0,8
tick,0x7ffdf681f424,28848861,0,0x0,8
tick,0x7ffdf681f424,28850918,0,0x0,8
tick,0x7ffdf681f424,28852932,0,0x0,8
tick,0x7ffdf681f424,28854900,0,0x0,8
tick,0x7ffdf681f424,28856907,0,0x0,8
tick,0x7ffdf681f424,28858897,0,0x0,8
tick,0x7ffdf681f424,28860853,0,0x0,8
tick,0x7ffdf681f424,28862884,0,0x0,8
tick,0x7ffdf681f424,28864875,0,0x0,8
tick,0x7ffdf681f424,28866875,0,0x0,8
tick,0x7ffdf681f424,28868862,0,0x0,8
tick,0x7ffdf681f424,28870818,0,0x0,8
tick,0x7ffdf681f424,28872863,0,0x0,8
tick,0x7ffdf681f424,28874877,0,0x0,8
tick,0x7ffdf681f424,28876849,0,0x0,8
tick,0x7ffdf681f424,28878745,0,0x0,8
tick,0x7ffdf681f424,28880834,0,0x0,8
tick,0x7ffdf681f424,28882801,0,0x0,8
tick,0x7ffdf681f424,28884842,0,0x0,8
tick,0x7ffdf681f424,28886713,0,0x0,8
tick,0x7ffdf681f424,28888823,0,0x0,8
tick,0x7ffdf681f424,28890814,0,0x0,8
tick,0x7ffdf681f424,28892757,0,0x0,8
tick,0x7ffdf681f424,28894722,0,0x0,8
tick,0x7ffdf681f424,28896815,0,0x0,8
tick,0x7ffdf681f424,28898785,0,0x0,8
tick,0x7ffdf681f424,28900777,0,0x0,8
tick,0x7ffdf681f424,28902784,0,0x0,8
tick,0x7ffdf681f424,28904752,0,0x0,8
tick,0x7ffdf681f424,28906771,0,0x0,8
tick,0x7ffdf681f424,28908768,0,0x0,8
tick,0x7ffdf681f424,28910760,0,0x0,8
tick,0x7ffdf681f424,28912751,0,0x0,8
tick,0x7ffdf681f424,28914697,0,0x0,8
tick,0x7ffdf681f424,28916746,0,0x0,8
tick,0x7ffdf681f424,28918740,0,0x0,8
tick,0x7ffdf681f424,28920725,0,0x0,8
tick,0x7ffdf681f424,28922726,0,0x0,8
tick,0x7ffdf681f424,28924725,0,0x0,8
tick,0x7ffdf681f424,28926673,0,0x0,8
tick,0x7ffdf681f424,28928713,0,0x0,8
tick,0x7ffdf681f424,28930706,0,0x0,8
tick,0x7ffdf681f424,28932725,0,0x0,8
tick,0x7ffdf681f424,28934608,0,0x0,8
tick,0x7ffdf681f424,28936532,0,0x0,8
tick,0x7ffdf681f424,28938676,0,0x0,8
tick,0x7ffdf681f424,28940702,0,0x0,8
tick,0x7ffdf681f424,28942670,0,0x0,8
tick,0x7ffdf681f424,28944667,0,0x0,8
tick,0x7ffdf681f424,28946660,0,0x0,8
tick,0x7ffdf681f424,28948677,0,0x0,8
tick,0x7ffdf681f424,28950656,0,0x0,8
tick,0x7ffdf681f424,28952671,0,0x0,8
tick,0x7ffdf681f424,28954538,0,0x0,8
tick,0x7ffdf681f424,28956521,0,0x0,8
tick,0x7ffdf681f424,28958756,0,0x0,8
tick,0x7ffdf681f424,28960624,0,0x0,8
tick,0x7ffdf681f424,28962519,0,0x0,8
tick,0x7ffdf681f424,28964609,0,0x0,8
tick,0x7ffdf681f424,28966610,0,0x0,8
tick,0x7ffdf681f424,28968598,0,0x0,8
tick,0x7ffdf681f424,28970563,0,0x0,8
tick,0x7ffdf681f424,28972612,0,0x0,8
tick,0x7ffdf681f424,28974594,0,0x0,8
tick,0x7ffdf681f424,28976581,0,0x0,8
tick,0x7ffdf681f424,28978580,0,0x0,8
tick,0x7ffdf681f424,28980521,0,0x0,8
tick,0x7ffdf681f424,28982558,0,0x0,8
tick,0x7ffdf681f424,28984570,0,0x0,8
tick,0x7ffdf681f424,28986439,0,0x0,8
tick,0x7ffdf681f424,28988546,0,0x0,8
tick,0x7ffdf681f424,28990550,0,0x0,8
tick,0x7ffdf681f424,28992511,0,0x0,8
tick,0x7ffdf681f424,28994546,0,0x0,8
tick,0x7ffdf681f424,28996532,0,0x0,8
tick,0x7ffdf681f424,28998524,0,0x0,8
tick,0x7ffdf681f424,29000513,0,0x0,8
tick,0x7ffdf681f424,29002466,0,0x0,8
tick,0x7ffdf681f424,29004555,0,0x0,8
tick,0x7ffdf681f424,29006463,0,0x0,8
tick,0x7ffdf681f424,29008492,0,0x0,8
tick,0x7ffdf681f424,29010491,0,0x0,8
tick,0x7ffdf681f424,29012485,0,0x0,8
tick,0x7ffdf681f424,29014481,0,0x0,8
tick,0x7ffdf681f424,29016485,0,0x0,8
tick,0x7ffdf681f424,29018470,0,0x0,8
tick,0x7ffdf681f424,29020466,0,0x0,8
tick,0x7ffdf681f424,29022454,0,0x0,8
tick,0x7ffdf681f424,29024406,0,0x0,8
tick,0x7ffdf681f424,29026447,0,0x0,8
tick,0x7ffdf681f424,29028341,0,0x0,8
tick,0x7ffdf681f424,29030433,0,0x0,8
tick,0x7ffdf681f424,29032320,0,0x0,8
tick,0x7ffdf681f424,29034454,0,0x0,8
tick,0x7ffdf681f424,29036374,0,0x0,8
tick,0x7ffdf681f424,29038419,0,0x0,8
tick,0x7ffdf681f424,29040294,0,0x0,8
tick,0x7ffdf681f424,29042413,0,0x0,8
tick,0x7ffdf681f424,29044396,0,0x0,8
tick,0x7ffdf681f424,29046344,0,0x0,8
tick,0x7ffdf681f424,29048381,0,0x0,8
tick,0x7ffdf681f424,29050391,0,0x0,8
tick,0x7ffdf681f424,29052374,0,0x0,8
tick,0x7ffdf681f424,29054366,0,0x0,8
tick,0x7ffdf681f424,29056363,0,0x0,8
tick,0x7ffdf681f424,29058325,0,0x0,8
tick,0x7ffdf681f424,29060265,0,0x0,8
tick,0x7ffdf681f424,29062350,0,0x0,8
tick,0x7ffdf681f424,29064352,0,0x0,8
tick,0x7ffdf681f424,29066336,0,0x0,8
tick,0x7ffdf681f424,29068287,0,0x0,8
tick,0x7ffdf681f424,29070323,0,0x0,8
tick,0x7ffdf681f424,29072340,0,0x0,8
tick,0x7ffdf681f424,29074345,0,0x0,8
tick,0x7ffdf681f424,29076320,0,0x0,8
tick,0x7ffdf681f424,29078203,0,0x0,8
tick,0x7ffdf681f424,29080271,0,0x0,8
tick,0x7ffdf681f424,29082303,0,0x0,8
tick,0x7ffdf681f424,29084188,0,0x0,8
tick,0x7ffdf681f424,29086290,0,0x0,8
tick,0x7ffdf681f424,29088278,0,0x0,8
tick,0x7ffdf681f424,29090229,0,0x0,8
tick,0x7ffdf681f424,29092265,0,0x0,8
tick,0x7ffdf681f424,29094277,0,0x0,8
tick,0x7ffdf681f424,29096253,0,0x0,8
tick,0x7ffdf681f424,29098253,0,0x0,8
tick,0x7ffdf681f424,29100255,0,0x0,8
tick,0x7ffdf681f424,29102227,0,0x0,8
tick,0x7ffdf681f424,29104247,0,0x0,8
tick,0x7ffdf681f424,29106254,0,0x0,8
tick,0x7ffdf681f424,29108133,0,0x0,8
tick,0x7ffdf681f424,29110119,0,0x0,8
tick,0x7ffdf681f424,29112186,0,0x0,8
tick,0x7ffdf681f424,29114214,0,0x0,8
tick,0x7ffdf681f424,29116220,0,0x0,8
tick,0x7ffdf681f424,29118196,0,0x0,8
tick,0x7ffdf681f424,29120103,0,0x0,8
tick,0x7ffdf681f424,29122192,0,0x0,8
tick,0x7ffdf681f424,29124148,0,0x0,8
tick,0x7ffdf681f424,29126187,0,0x0,8
tick,0x7ffdf681f424,29128119,0,0x0,8
tick,0x7ffdf681f424,29130173,0,0x0,8
tick,0x7ffdf681f424,29132166,0,0x0,8
tick,0x7ffdf681f424,29134112,0,0x0,8
tick,0x7ffdf681f424,29136153,0,0x0,8
tick,0x7ffdf681f424,29138179,0,0x0,8
tick,0x7ffdf681f424,29140146,0,0x0,8
tick,0x7ffdf681f424,29142132,0,0x0,8
tick,0x7ffdf681f424,29144129,0,0x0,8
tick,0x7ffdf681f424,29146094,0,0x0,8
tick,0x7ffdf681f424,29148127,0,0x0,8
tick,0x7ffdf681f424,29150115,0,0x0,8
tick,0x7ffdf681f424,29152117,0,0x0,8
tick,0x7ffdf681f424,29154140,0,0x0,8
tick,0x7ffdf681f424,29155938,0,0x0,8
tick,0x7ffdf681f424,29158092,0,0x0,8
tick,0x7ffdf681f424,29160112,0,0x0,8
tick,0x7ffdf681f424,29162087,0,0x0,8
tick,0x7ffdf681f424,29164085,0,0x0,8
tick,0x7ffdf681f424,29166070,0,0x0,8
tick,0x7ffdf681f424,29168048,0,0x0,8
tick,0x7ffdf681f424,29169953,0,0x0,8
tick,0x7ffdf681f424,29172052,0,0x0,8
tick,0x7ffdf681f424,29174057,0,0x0,8
tick,0x7ffdf681f424,29176051,0,0x0,8
tick,0x7ffdf681f424,29178006,0,0x0,8
tick,0x7ffdf681f424,29180033,0,0x0,8
tick,0x7ffdf681f424,29182038,0,0x0,8
tick,0x7ffdf681f424,29184023,0,0x0,8
tick,0x7ffdf681f424,29185961,0,0x0,8
tick,0x7ffdf681f424,29188042,0,0x0,8
tick,0x7ffdf681f424,29190036,0,0x0,8
tick,0x7ffdf681f424,29192005,0,0x0,8
tick,0x7ffdf681f424,29193993,0,0x0,8
tick,0x7ffdf681f424,29195896,0,0x0,8
tick,0x7ffdf681f424,29197982,0,0x0,8
tick,0x7ffdf681f424,29199935,0,0x0,8
tick,0x7ffdf681f424,29201982,0,0x0,8
tick,0x7ffdf681f424,29203990,0,0x0,8
tick,0x7ffdf681f424,29205971,0,0x0,8
tick,0x7ffdf681f424,29207995,0,0x0,8
tick,0x7ffdf681f424,29209854,0,0x0,8
tick,0x7ffdf681f424,29211782,0,0x0,8
tick,0x7ffdf681f424,29213942,0,0x0,8
tick,0x7ffdf681f424,29215937,0,0x0,8
tick,0x7ffdf681f424,29217928,0,0x0,8
tick,0x7ffdf681f424,29219766,0,0x0,8
tick,0x7ffdf681f424,29221874,0,0x0,8
tick,0x7ffdf681f424,29223911,0,0x0,8
tick,0x7ffdf681f424,29225924,0,0x0,8
tick,0x7ffdf681f424,29227908,0,0x0,8
tick,0x7ffdf681f424,29229896,0,0x0,8
tick,0x7ffdf681f424,29231891,0,0x0,8
tick,0x7ffdf681f424,29233891,0,0x0,8
tick,0x7ffdf681f424,29235898,0,0x0,8
tick,0x7ffdf681f424,29237874,0,0x0,8
tick,0x7ffdf681f424,29239878,0,0x0,8
tick,0x7ffdf681f424,29241875,0,0x0,8
tick,0x7ffdf681f424,29243809,0,0x0,8
tick,0x7ffdf681f424,29245853,0,0x0,8
tick,0x7ffdf681f424,29247864,0,0x0,8
tick,0x7ffdf681f424,29249835,0,0x0,8
tick,0x7ffdf681f424,29251843,0,0x0,8
tick,0x7ffdf681f424,29253719,0,0x0,8
tick,0x7ffdf681f424,29255868,0,0x0,8
tick,0x7ffdf681f424,29257798,0,0x0,8
tick,0x7ffdf681f424,29259778,0,0x0,8
tick,0x7ffdf681f424,29261710,0,0x0,8
tick,0x7ffdf681f424,29263739,0,0x0,8
tick,0x7ffdf681f424,29265758,0,0x0,8
tick,0x7ffdf681f424,29267749,0,0x0,8
tick,0x7ffdf681f424,29269861,0,0x0,8
tick,0x7ffdf681f424,29271765,0,0x0,8
tick,0x7ffdf681f424,29273739,0,0x0,8
tick,0x7ffdf681f424,29275732,0,0x0,8
tick,0x7ffdf681f424,29277712,0,0x0,8
tick,0x7ffdf681f424,29279712,0,0x0,8
tick,0x7ffdf681f424,29281715,0,0x0,8
tick,0x7ffdf681f424,29283716,0,0x0,8
tick,0x7ffdf681f424,29285710,0,0x0,8
tick,0x7ffdf681f424,29287705,0,0x0,8
tick,0x7ffdf681f424,29289683,0,0x0,8
tick,0x7ffdf681f424,29291684,0,0x0,8
tick,0x7ffdf681f424,29293673,0,0x0,8
tick,0x7ffdf681f424,29295566,0,0x0,8
tick,0x7ffdf681f424,29297666,0,0x0,8
tick,0x7ffdf681f424,29299671,0,0x0,8
tick,0x7ffdf681f424,29301657,0,0x0,8
tick,0x7ffdf681f424,29303552,0,0x0,8
tick,0x7ffdf681f424,29305673,0,0x0,8
tick,0x7ffdf681f424,29307660,0,0x0,8
tick,0x7ffdf681f424,29309638,0,0x0,8
tick,0x7ffdf681f424,29311496,0,0x0,8
tick,0x7ffdf681f424,29313626,0,0x0,8
tick,0x7ffdf681f424,29315573,0,0x0,8
tick,0x7ffdf681f424,29317575,0,0x0,8
tick,0x7ffdf681f424,29319592,0,0x0,8
tick,0x7ffdf681f424,29321540,0,0x0,8
tick,0x7ffdf681f424,29323591,0,0x0,8
tick,0x7ffdf681f424,29325523,0,0x0,8
tick,0x7ffdf681f424,29327554,0,0x0,8
tick,0x7ffdf681f424,29329522,0,0x0,8
tick,0x7ffdf681f424,29331496,0,0x0,8
tick,0x7ffdf681f424,29333547,0,0x0,8
tick,0x7ffdf681f424,29335503,0,0x0,8
tick,0x7ffdf681f424,29337449,0,0x0,8
tick,0x7ffdf681f424,29339467,0,0x0,8
tick,0x7ffdf681f424,29341524,0,0x0,8
tick,0x7ffdf681f424,29343520,0,0x0,8
tick,0x7ffdf681f424,29345435,0,0x0,8
tick,0x7ffdf681f424,29347415,0,0x0,8
tick,0x7ffdf681f424,29349525,0,0x0,8
tick,0x7ffdf681f424,29351411,0,0x0,8
tick,0x7ffdf681f424,29353421,0,0x0,8
tick,0x7ffdf681f424,29355429,0,0x0,8
tick,0x7ffdf681f424,29357392,0,0x0,8
tick,0x7ffdf681f424,29359495,0,0x0,8
tick,0x7ffdf681f424,29361403,0,0x0,8
tick,0x7ffdf681f424,29363481,0,0x0,8
tick,0x7ffdf681f424,29365424,0,0x0,8
tick,0x7ffdf681f424,29367363,0,0x0,8
tick,0x7ffdf681f424,29369423,0,0x0,8
tick,0x7ffdf681f424,29371458,0,0x0,8
tick,0x7ffdf681f424,29373487,0,0x0,8
tick,0x7ffdf681f424,29375356,0,0x0,8
tick,0x7ffdf681f424,29377470,0,0x0,8
tick,0x7ffdf681f424,29379426,0,0x0,8
tick,0x7ffdf681f424,29381329,0,0x0,8
tick,0x7ffdf681f424,29383323,0,0x0,8
tick,0x7ffdf681f424,29385444,0,0x0,8
tick,0x7ffdf681f424,29387438,0,0x0,8
tick,0x7ffdf681f424,29389470,0,0x0,8
tick,0x7ffdf681f424,29391467,0,0x0,8
tick,0x7ffdf681f424,29393459,0,0x0,8
tick,0x7ffdf681f424,29395470,0,0x0,8
tick,0x7ffdf681f424,29397465,0,0x0,8
tick,0x7ffdf681f424,29399447,0,0x0,8
tick,0x7ffdf681f424,29401452,0,0x0,8
tick,0x7ffdf681f424,29403319,0,0x0,8
tick,0x7ffdf681f424,29405428,0,0x0,8
tick,0x7ffdf681f424,29407443,0,0x0,8
tick,0x7ffdf681f424,29409440,0,0x0,8
tick,0x7ffdf681f424,29411422,0,0x0,8
tick,0x7ffdf681f424,29413417,0,0x0,8
tick,0x7ffdf681f424,29415303,0,0x0,8
tick,0x7ffdf681f424,29417293,0,0x0,8
tick,0x7ffdf681f424,29419315,0,0x0,8
tick,0x7ffdf681f424,29421377,0,0x0,8
tick,0x7ffdf681f424,29423392,0,0x0,8
tick,0x7ffdf681f424,29425367,0,0x0,8
tick,0x7ffdf681f424,29427361,0,0x0,8
tick,0x7ffdf681f424,29429246,0,0x0,8
tick,0x7ffdf681f424,29431202,0,0x0,8
tick,0x7ffdf681f424,29433325,0,0x0,8
tick,0x7ffdf681f424,29435357,0,0x0,8
tick,0x7ffdf681f424,29437344,0,0x0,8
tick,0x7ffdf681f424,29439327,0,0x0,8
tick,0x7ffdf681f424,29441333,0,0x0,8
tick,0x7ffdf681f424,29443322,0,0x0,8
tick,0x7ffdf681f424,29445347,0,0x0,8
tick,0x7ffdf681f424,29447304,0,0x0,8
tick,0x7ffdf681f424,29449312,0,0x0,8
tick,0x7ffdf681f424,29451301,0,0x0,8
tick,0x7ffdf681f424,29453134,0,0x0,8
tick,0x7ffdf681f424,29455270,0,0x0,8
tick,0x7ffdf681f424,29457298,0,0x0,8
tick,0x7ffdf681f424,29459285,0,0x0,8
tick,0x7ffdf681f424,29461279,0,0x0,8
tick,0x7ffdf681f424,29463280,0,0x0,8
tick,0x7ffdf681f424,29465260,0,0x0,8
tick,0x7ffdf681f424,29467277,0,0x0,8
tick,0x7ffdf681f424,29469248,0,0x0,8
tick,0x7ffdf681f424,29471249,0,0x0,8
tick,0x7ffdf681f424,29473237,0,0x0,8
tick,0x7ffdf681f424,29475204,0,0x0,8
tick,0x7ffdf681f424,29477215,0,0x0,8
tick,0x7ffdf681f424,29479235,0,0x0,8
tick,0x7ffdf681f424,29481186,0,0x0,8
tick,0x7ffdf681f424,29483214,0,0x0,8
tick,0x7ffdf681f424,29485214,0,0x0,8
tick,0x7ffdf681f424,29487210,0,0x0,8
tick,0x7ffdf681f424,29489241,0,0x0,8
tick,0x7ffdf681f424,29491097,0,0x0,8
tick,0x7ffdf681f424,29493111,0,0x0,8
tick,0x7ffdf681f424,29495083,0,0x0,8
tick,0x7ffdf681f424,29497150,0,0x0,8
tick,0x7ffdf681f424,29499115,0,0x0,8
tick,0x7ffdf681f424,29501092,0,0x0,8
tick,0x7ffdf681f424,29503102,0,0x0,8
tick,0x7ffdf681f424,29505087,0,0x0,8
tick,0x7ffdf681f424,29507083,0,0x0,8
tick,0x7ffdf681f424,29509046,0,0x0,8
tick,0x7ffdf681f424,29511023,0,0x0,8
tick,0x7ffdf681f424,29513035,0,0x0,8
tick,0x7ffdf681f424,29515148,0,0x0,8
tick,0x7ffdf681f424,29517157,0,0x0,8
tick,0x7ffdf681f424,29519136,0,0x0,8
tick,0x7ffdf681f424,29521137,0,0x0,8
tick,0x7ffdf681f424,29523113,0,0x0,8
tick,0x7ffdf681f424,29525110,0,0x0,8
tick,0x7ffdf681f424,29527101,0,0x0,8
tick,0x7ffdf681f424,29529103,0,0x0,8
tick,0x7ffdf681f424,29531095,0,0x0,8
tick,0x7ffdf681f424,29533093,0,0x0,8
tick,0x7ffdf681f424,29535080,0,0x0,8
tick,0x7ffdf681f424,29537003,0,0x0,8
tick,0x7ffdf681f424,29538962,0,0x0,8
tick,0x7ffdf681f424,29541061,0,0x0,8
tick,0x7ffdf681f424,29543067,0,0x0,8
tick,0x7ffdf681f424,29544942,0,0x0,8
tick,0x7ffdf681f424,29546935,0,0x0,8
tick,0x7ffdf681f424,29548956,0,0x0,8
tick,0x7ffdf681f424,29550990,0,0x0,8
tick,0x7ffdf681f424,29553068,0,0x0,8
tick,0x7ffdf681f424,29554929,0,0x0,8
tick,0x7ffdf681f424,29557023,0,0x0,8
tick,0x7ffdf681f424,29558994,0,0x0,8
tick,0x7ffdf681f424,29560899,0,0x0,8
tick,0x7ffdf681f424,29563005,0,0x0,8
tick,0x7ffdf681f424,29564995,0,0x0,8
tick,0x7ffdf681f424,29567000,0,0x0,8
tick,0x7ffdf681f424,29568871,0,0x0,8
tick,0x7ffdf681f424,29570944,0,0x0,8
tick,0x7ffdf681f424,29572974,0,0x0,8
tick,0x7ffdf681f424,29574868,0,0x0,8
tick,0x7ffdf681f424,29577000,0,0x0,8
tick,0x7ffdf681f424,29578843,0,0x0,8
tick,0x7ffdf681f424,29580955,0,0x0,8
tick,0x7ffdf681f424,29582963,0,0x0,8
tick,0x7ffdf681f424,29584839,0,0x0,8
tick,0x7ffdf681f424,29586788,0,0x0,8
tick,0x7ffdf681f424,29588844,0,0x0,8
tick,0x7ffdf681f424,29590928,0,0x0,8
tick,0x7ffdf681f424,29592933,0,0x0,8
tick,0x7ffdf681f424,29594774,0,0x0,8
tick,0x7ffdf681f424,29596920,0,0x0,8
tick,0x7ffdf681f424,29598913,0,0x0,8
tick,0x7ffdf681f424,29600907,0,0x0,8
tick,0x7ffdf681f424,29602902,0,0x0,8
tick,0x7ffdf681f424,29604898,0,0x0,8
tick,0x7ffdf681f424,29606891,0,0x0,8
tick,0x7ffdf681f424,29608897,0,0x0,8
tick,0x7ffdf681f424,29610884,0,0x0,8
tick,0x7ffdf681f424,29612831,0,0x0,8
tick,0x7ffdf681f424,29614703,0,0x0,8
tick,0x7ffdf681f424,29616797,0,0x0,8
tick,0x7ffdf681f424,29618856,0,0x0,8
tick,0x7ffdf681f424,29620852,0,0x0,8
tick,0x7ffdf681f424,29622838,0,0x0,8
tick,0x7ffdf681f424,29624732,0,0x0,8
tick,0x7ffdf681f424,29626836,0,0x0,8
tick,0x7ffdf681f424,29628835,0,0x0,8
tick,0x7ffdf681f424,29630825,0,0x0,8
tick,0x7ffdf681f424,29632805,0,0x0,8
tick,0x7ffdf681f424,29634806,0,0x0,8
tick,0x7ffdf681f424,29636715,0,0x0,8
tick,0x7ffdf681f424,29638814,0,0x0,8
tick,0x7ffdf681f424,29640688,0,0x0,8
tick,0x7ffdf681f424,29642799,0,0x0,8
tick,0x7ffdf681f424,29644788,0,0x0,8
tick,0x7ffdf681f424,29646679,0,0x0,8
tick,0x7ffdf681f424,29648780,0,0x0,8
tick,0x7ffdf681f424,29650770,0,0x0,8
tick,0x7ffdf681f424,29652770,0,0x0,8
tick,0x7ffdf681f424,29654785,0,0x0,8
tick,0x7ffdf681f424,29656750,0,0x0,8
tick,0x7ffdf681f424,29658741,0,0x0,8
tick,0x7ffdf681f424,29660701,0,0x0,8
tick,0x7ffdf681f424,29662729,0,0x0,8
tick,0x7ffdf681f424,29664760,0,0x0,8
tick,0x7ffdf681f424,29666727,0,0x0,8
tick,0x7ffdf681f424,29668720,0,0x0,8
tick,0x7ffdf681f424,29670715,0,0x0,8
tick,0x7ffdf681f424,29672704,0,0x0,8
tick,0x7ffdf681f424,29674596,0,0x0,8
tick,0x7ffdf681f424,29676694,0,0x0,8
tick,0x7ffdf681f424,29678699,0,0x0,8
tick,0x7ffdf681f424,29680694,0,0x0,8
tick,0x7ffdf681f424,29682644,0,0x0,8
tick,0x7ffdf681f424,29684673,0,0x0,8
tick,0x7ffdf681f424,29686570,0,0x0,8
tick,0x7ffdf681f424,29688626,0,0x0,8
tick,0x7ffdf681f424,29690670,0,0x0,8
tick,0x7ffdf681f424,29692664,0,0x0,8
tick,0x7ffdf681f424,29694659,0,0x0,8
tick,0x7ffdf681f424,29696653,0,0x0,8
tick,0x7ffdf681f424,29698659,0,0x0,8
tick,0x7ffdf681f424,29700637,0,0x0,8
tick,0x7ffdf681f424,29702634,0,0x0,8
tick,0x7ffdf681f424,29704644,0,0x0,8
tick,0x7ffdf681f424,29706623,0,0x0,8
tick,0x7ffdf681f424,29708579,0,0x0,8
tick,0x7ffdf681f424,29710612,0,0x0,8
tick,0x7ffdf681f424,29712609,0,0x0,8
tick,0x7ffdf681f424,29714610,0,0x0,8
tick,0x7ffdf681f424,29716600,0,0x0,8
tick,0x7ffdf681f424,29718596,0,0x0,8
tick,0x7ffdf681f424,29720602,0,0x0,8
tick,0x7ffdf681f424,29722472,0,0x0,8
tick,0x7ffdf681f424,29724475,0,0x0,8
tick,0x7ffdf681f424,29726591,0,0x0,8
tick,0x7ffdf681f424,29728469,0,0x0,8
tick,0x7ffdf681f424,29730564,0,0x0,8
tick,0x7ffdf681f424,29732572,0,0x0,8
tick,0x7ffdf681f424,29734449,0,0x0,8
tick,0x7ffdf681f424,29736520,0,0x0,8
tick,0x7ffdf681f424,29738548,0,0x0,8
tick,0x7ffdf681f424,29740538,0,0x0,8
tick,0x7ffdf681f424,29742528,0,0x0,8
tick,0x7ffdf681f424,29744408,0,0x0,8
tick,0x7ffdf681f424,29746406,0,0x0,8
tick,0x7ffdf681f424,29748477,0,0x0,8
tick,0x7ffdf681f424,29750464,0,0x0,8
tick,0x7ffdf681f424,29752455,0,0x0,8
tick,0x7ffdf681f424,29754328,0,0x0,8
tick,0x7ffdf681f424,29756326,0,0x0,8
tick,0x7ffdf681f424,29758358,0,0x0,8
tick,0x7ffdf681f424,29760313,0,0x0,8
tick,0x7ffdf681f424,29762317,0,0x0,8
tick,0x7ffdf681f424,29764356,0,0x0,8
tick,0x7ffdf681f424,29766337,0,0x0,8
tick,0x7ffdf681f424,29768321,0,0x0,8
tick,0x7ffdf681f424,29770284,0,0x0,8
tick,0x7ffdf681f424,29772279,0,0x0,8
tick,0x7ffdf681f424,29774340,0,0x0,8
tick,0x7ffdf681f424,29776316,0,0x0,8
tick,0x7ffdf681f424,29778331,0,0x0,8
tick,0x7ffdf681f424,29780260,0,0x0,8
tick,0x7ffdf681f424,29782266,0,0x0,8
tick,0x7ffdf681f424,29784265,0,0x0,8
tick,0x7ffdf681f424,29786239,0,0x0,8
tick,0x7ffdf681f424,29788273,0,0x0,8
tick,0x7ffdf681f424,29790291,0,0x0,8
tick,0x7ffdf681f424,29792233,0,0x0,8
tick,0x7ffdf681f424,29794224,0,0x0,8
tick,0x7ffdf681f424,29796258,0,0x0,8
tick,0x7ffdf681f424,29798211,0,0x0,8
tick,0x7ffdf681f424,29800263,0,0x0,8
tick,0x7ffdf681f424,29802219,0,0x0,8
tick,0x7ffdf681f424,29804199,0,0x0,8
tick,0x7ffdf681f424,29806208,0,0x0,8
tick,0x7ffdf681f424,29808207,0,0x0,8
tick,0x7ffdf681f424,29810184,0,0x0,8
tick,0x7ffdf681f424,29812204,0,0x0,8
tick,0x7ffdf681f424,29814195,0,0x0,8
tick,0x7ffdf681f424,29816179,0,0x0,8
tick,0x7ffdf681f424,29818163,0,0x0,8
tick,0x7ffdf681f424,29820180,0,0x0,8
tick,0x7ffdf681f424,29822147,0,0x0,8
tick,0x7ffdf681f424,29824154,0,0x0,8
tick,0x7ffdf681f424,29826194,0,0x0,8
tick,0x7ffdf681f424,29828131,0,0x0,8
tick,0x7ffdf681f424,29830125,0,0x0,8
tick,0x7ffdf681f424,29832185,0,0x0,8
tick,0x7ffdf681f424,29834122,0,0x0,8
tick,0x7ffdf681f424,29836125,0,0x0,8
tick,0x7ffdf681f424,29838109,0,0x0,8
tick,0x7ffdf681f424,29840098,0,0x0,8
tick,0x7ffdf681f424,29842098,0,0x0,8
tick,0x7ffdf681f424,29844093,0,0x0,8
tick,0x7ffdf681f424,29846094,0,0x0,8
tick,0x7ffdf681f424,29848085,0,0x0,8
tick,0x7ffdf681f424,29850078,0,0x0,8
tick,0x7ffdf681f424,29852070,0,0x0,8
tick,0x7ffdf681f424,29854064,0,0x0,8
tick,0x7ffdf681f424,29856062,0,0x0,8
tick,0x7ffdf681f424,29858039,0,0x0,8
tick,0x7ffdf681f424,29860056,0,0x0,8
tick,0x7ffdf681f424,29862041,0,0x0,8
tick,0x7ffdf681f424,29864038,0,0x0,8
tick,0x7ffdf681f424,29866038,0,0x0,8
tick,0x7ffdf681f424,29868041,0,0x0,8
tick,0x7ffdf681f424,29870079,0,0x0,8
tick,0x7ffdf681f424,29872017,0,0x0,8
tick,0x7ffdf681f424,29874122,0,0x0,8
tick,0x7ffdf681f424,29876007,0,0x0,8
tick,0x7ffdf681f424,29878002,0,0x0,8
tick,0x7ffdf681f424,29880166,0,0x0,8
tick,0x7ffdf681f424,29882048,0,0x0,8
tick,0x7ffdf681f424,29884124,0,0x0,8
tick,0x7ffdf681f424,29886042,0,0x0,8
tick,0x7ffdf681f424,29887982,0,0x0,8
tick,0x7ffdf681f424,29889999,0,0x0,8
tick,0x7ffdf681f424,29892028,0,0x0,8
tick,0x7ffdf681f424,29894027,0,0x0,8
tick,0x7ffdf681f424,29896125,0,0x0,8
tick,0x7ffdf681f424,29898069,0,0x0,8
tick,0x7ffdf681f424,29900013,0,0x0,8
tick,0x7ffdf681f424,29902064,0,0x0,8
tick,0x7ffdf681f424,29904111,0,0x0,8
tick,0x7ffdf681f424,29906015,0,0x0,8
tick,0x7ffdf681f424,29907967,0,0x0,8
tick,0x7ffdf681f424,29910070,0,0x0,8
tick,0x7ffdf681f424,29911968,0,0x0,8
tick,0x7ffdf681f424,29914058,0,0x0,8
tick,0x7ffdf681f424,29916062,0,0x0,8
tick,0x7ffdf681f424,29917994,0,0x0,8
tick,0x7ffdf681f424,29919948,0,0x0,8
tick,0x7ffdf681f424,29922026,0,0x0,8
tick,0x7ffdf681f424,29924002,0,0x0,8
tick,0x7ffdf681f424,29926025,0,0x0,8
tick,0x7ffdf681f424,29928054,0,0x0,8
tick,0x7ffdf681f424,29930017,0,0x0,8
tick,0x7ffdf681f424,29932014,0,0x0,8
tick,0x7ffdf681f424,29934004,0,0x0,8
tick,0x7ffdf681f424,29936002,0,0x0,8
tick,0x7ffdf681f424,29937991,0,0x0,8
tick,0x7ffdf681f424,29940018,0,0x0,8
tick,0x7ffdf681f424,29941934,0,0x0,8
tick,0x7ffdf681f424,29943981,0,0x0,8
tick,0x7ffdf681f424,29945983,0,0x0,8
tick,0x7ffdf681f424,29947975,0,0x0,8
tick,0x7ffdf681f424,29949990,0,0x0,8
tick,0x7ffdf681f424,29951861,0,0x0,8
tick,0x7ffdf681f424,29953863,0,0x0,8
tick,0x7ffdf681f424,29955955,0,0x0,8
tick,0x7ffdf681f424,29957947,0,0x0,8
tick,0x7ffdf681f424,29959943,0,0x0,8
tick,0x7ffdf681f424,29961844,0,0x0,8
tick,0x7ffdf681f424,29963934,0,0x0,8
tick,0x7ffdf681f424,29965820,0,0x0,8
tick,0x7ffdf681f424,29967962,0,0x0,8
tick,0x7ffdf681f424,29969903,0,0x0,8
tick,0x7ffdf681f424,29971972,0,0x0,8
tick,0x7ffdf681f424,29973908,0,0x0,8
tick,0x7ffdf681f424,29975918,0,0x0,8
tick,0x7ffdf681f424,29977917,0,0x0,8
tick,0x7ffdf681f424,29979883,0,0x0,8
tick,0x7ffdf681f424,29981785,0,0x0,8
tick,0x7ffdf681f424,29983881,0,0x0,8
tick,0x7ffdf681f424,29985884,0,0x0,8
tick,0x7ffdf681f424,29987861,0,0x0,8
tick,0x7ffdf681f424,29989869,0,0x0,8
tick,0x7ffdf681f424,29991864,0,0x0,8
tick,0x7ffdf681f424,29993857,0,0x0,8
tick,0x7ffdf681f424,29995729,0,0x0,8
tick,0x7ffdf681f424,29997735,0,0x0,8
tick,0x7ffdf681f424,29999841,0,0x0,8
tick,0x7ffdf681f424,30001845,0,0x0,8
tick,0x7ffdf681f424,30003840,0,0x0,8
tick,0x7ffdf681f424,30005805,0,0x0,8
tick,0x7ffdf681f424,30007817,0,0x0,8
tick,0x7ffdf681f424,30009802,0,0x0,8
tick,0x7ffdf681f424,30011705,0,0x0,8
tick,0x7ffdf681f424,30013806,0,0x0,8
tick,0x7ffdf681f424,30015752,0,0x0,8
tick,0x7ffdf681f424,30017785,0,0x0,8
tick,0x7ffdf681f424,30019770,0,0x0,8
tick,0x7ffdf681f424,30021790,0,0x0,8
tick,0x7ffdf681f424,30023761,0,0x0,8
tick,0x7ffdf681f424,30025757,0,0x0,8
tick,0x7ffdf681f424,30027742,0,0x0,8
tick,0x7ffdf681f424,30029634,0,0x0,8
tick,0x7ffdf681f424,30031683,0,0x0,8
tick,0x7ffdf681f424,30033674,0,0x0,8
tick,0x7ffdf681f424,30035687,0,0x0,8
tick,0x7ffdf681f424,30037571,0,0x0,8
tick,0x7ffdf681f424,30039677,0,0x0,8
tick,0x7ffdf681f424,30041670,0,0x0,8
tick,0x7ffdf681f424,30043675,0,0x0,8
tick,0x7ffdf681f424,30045546,0,0x0,8
tick,0x7ffdf681f424,30047656,0,0x0,8
tick,0x7ffdf681f424,30049645,0,0x0,8
tick,0x7ffdf681f424,30051645,0,0x0,8
tick,0x7ffdf681f424,30053620,0,0x0,8
tick,0x7ffdf681f424,30055643,0,0x0,8
tick,0x7ffdf681f424,30057631,0,0x0,8
tick,0x7ffdf681f424,30059633,0,0x0,8
tick,0x7ffdf681f424,30061518,0,0x0,8
tick,0x7ffdf681f424,30063617,0,0x0,8
tick,0x7ffdf681f424,30065594,0,0x0,8
tick,0x7ffdf681f424,30067577,0,0x0,8
tick,0x7ffdf681f424,30069574,0,0x0,8
tick,0x7ffdf681f424,30071478,0,0x0,8
tick,0x7ffdf681f424,30073538,0,0x0,8
tick,0x7ffdf681f424,30075536,0,0x0,8
tick,0x7ffdf681f424,30077547,0,0x0,8
tick,0x7ffdf681f424,30079456,0,0x0,8
tick,0x7ffdf681f424,30081448,0,0x0,8
tick,0x7ffdf681f424,30083493,0,0x0,8
tick,0x7ffdf681f424,30085437,0,0x0,8
tick,0x7ffdf681f424,30087436,0,0x0,8
tick,0x7ffdf681f424,30089453,0,0x0,8
tick,0x7ffdf681f424,30091427,0,0x0,8
tick,0x7ffdf681f424,30093415,0,0x0,8
tick,0x7ffdf681f424,30095438,0,0x0,8
tick,0x7ffdf681f424,30097427,0,0x0,8
tick,0x7ffdf681f424,30099404,0,0x0,8
tick,0x7ffdf681f424,30101394,0,0x0,8
tick,0x7ffdf681f424,30103466,0,0x0,8
tick,0x7ffdf681f424,30105386,0,0x0,8
tick,0x7ffdf681f424,30107387,0,0x0,8
tick,0x7ffdf681f424,30109387,0,0x0,8
tick,0x7ffdf681f424,30111404,0,0x0,8
tick,0x7ffdf681f424,30113434,0,0x0,8
tick,0x7ffdf681f424,30115364,0,0x0,8
tick,0x7ffdf681f424,30117357,0,0x0,8
tick,0x7ffdf681f424,30119346,0,0x0,8
tick,0x7ffdf681f424,30121352,0,0x0,8
tick,0x7ffdf681f424,30123356,0,0x0,8
tick,0x7ffdf681f424,30125340,0,0x0,8
tick,0x7ffdf681f424,30127327,0,0x0,8
tick,0x7ffdf681f424,30129331,0,0x0,8
tick,0x7ffdf681f424,30131391,0,0x0,8
tick,0x7ffdf681f424,30133376,0,0x0,8
tick,0x7ffdf681f424,30135316,0,0x0,8
tick,0x7ffdf681f424,30137348,0,0x0,8
tick,0x7ffdf681f424,30139304,0,0x0,8
tick,0x7ffdf681f424,30141315,0,0x0,8
tick,0x7ffdf681f424,30143284,0,0x0,8
tick,0x7ffdf681f424,30145322,0,0x0,8
tick,0x7ffdf681f424,30147286,0,0x0,8
tick,0x7ffdf681f424,30149267,0,0x0,8
tick,0x7ffdf681f424,30151262,0,0x0,8
tick,0x7ffdf681f424,30153304,0,0x0,8
tick,0x7ffdf681f424,30155255,0,0x0,8
tick,0x7ffdf681f424,30157253,0,0x0,8
tick,0x7ffdf681f424,30159270,0,0x0,8
tick,0x7ffdf681f424,30161255,0,0x0,8
tick,0x7ffdf681f424,30163270,0,0x0,8
tick,0x7ffdf681f424,30165228,0,0x0,8
tick,0x7ffdf681f424,30167326,0,0x0,8
tick,0x7ffdf681f424,30169224,0,0x0,8
tick,0x7ffdf681f424,30171274,0,0x0,8
tick,0x7ffdf681f424,30173319,0,0x0,8
tick,0x7ffdf681f424,30175363,0,0x0,8
tick,0x7ffdf681f424,30177362,0,0x0,8
tick,0x7ffdf681f424,30179259,0,0x0,8
tick,0x7ffdf681f424,30181360,0,0x0,8
tick,0x7ffdf681f424,30183248,0,0x0,8
tick,0x7ffdf681f424,30185241,0,0x0,8
tick,0x7ffdf681f424,30187182,0,0x0,8
tick,0x7ffdf681f424,30189357,0,0x0,8
tick,0x7ffdf681f424,30191342,0,0x0,8
tick,0x7ffdf681f424,30193323,0,0x0,8
tick,0x7ffdf681f424,30195207,0,0x0,8
tick,0x7ffdf681f424,30197314,0,0x0,8
tick,0x7ffdf681f424,30199305,0,0x0,8
tick,0x7ffdf681f424,30201305,0,0x0,8
tick,0x7ffdf681f424,30203255,0,0x0,8
tick,0x7ffdf681f424,30205209,0,0x0,8
tick,0x7ffdf681f424,30207275,0,0x0,8
tick,0x7ffdf681f424,30209244,0,0x0,8
tick,0x7ffdf681f424,30211266,0,0x0,8
tick,0x7ffdf681f424,30213190,0,0x0,8
tick,0x7ffdf681f424,30215253,0,0x0,8
tick,0x7ffdf681f424,30217257,0,0x0,8
tick,0x7ffdf681f424,30219251,0,0x0,8
tick,0x7ffdf681f424,30221160,0,0x0,8
tick,0x7ffdf681f424,30223253,0,0x0,8
tick,0x7ffdf681f424,30225241,0,0x0,8
tick,0x7ffdf681f424,30227207,0,0x0,8
tick,0x7ffdf681f424,30229115,0,0x0,8
tick,0x7ffdf681f424,30231162,0,0x0,8
tick,0x7ffdf681f424,30233204,0,0x0,8
tick,0x7ffdf681f424,30235209,0,0x0,8
tick,0x7ffdf681f424,30237094,0,0x0,8
tick,0x7ffdf681f424,30239191,0,0x0,8
tick,0x7ffdf681f424,30241201,0,0x0,8
tick,0x7ffdf681f424,30243184,0,0x0,8
tick,0x7ffdf681f424,30245092,0,0x0,8
tick,0x7ffdf681f424,30247173,0,0x0,8
tick,0x7ffdf681f424,30249180,0,0x0,8
tick,0x7ffdf681f424,30251163,0,0x0,8
tick,0x7ffdf681f424,30253153,0,0x0,8
tick,0x7ffdf681f424,30255150,0,0x0,8
tick,0x7ffdf681f424,30257150,0,0x0,8
tick,0x7ffdf681f424,30259140,0,0x0,8
tick,0x7ffdf681f424,30261050,0,0x0,8
tick,0x7ffdf681f424,30263134,0,0x0,8
tick,0x7ffdf681f424,30265125,0,0x0,8
tick,0x7ffdf681f424,30267133,0,0x0,8
tick,0x7ffdf681f424,30269108,0,0x0,8
tick,0x7ffdf681f424,30271012,0,0x0,8
tick,0x7ffdf681f424,30273099,0,0x0,8
tick,0x7ffdf681f424,30275063,0,0x0,8
tick,0x7ffdf681f424,30277088,0,0x0,8
tick,0x7ffdf681f424,30279046,0,0x0,8
tick,0x7ffdf681f424,30281078,0,0x0,8
tick,0x7ffdf681f424,30283070,0,0x0,8
tick,0x7ffdf681f424,30285079,0,0x0,8
tick,0x7ffdf681f424,30287000,0,0x0,8
tick,0x7ffdf681f424,30288992,0,0x0,8
tick,0x7ffdf681f424,30291053,0,0x0,8
tick,0x7ffdf681f424,30293061,0,0x0,8
tick,0x7ffdf681f424,30294920,0,0x0,8
tick,0x7ffdf681f424,30296999,0,0x0,8
tick,0x7ffdf681f424,30299040,0,0x0,8
tick,0x7ffdf681f424,30301056,0,0x0,8
tick,0x7ffdf681f424,30303020,0,0x0,8
tick,0x7ffdf681f424,30305019,0,0x0,8
tick,0x7ffdf681f424,30306962,0,0x0,8
tick,0x7ffdf681f424,30309000,0,0x0,8
tick,0x7ffdf681f424,30311003,0,0x0,8
tick,0x7ffdf681f424,30312993,0,0x0,8
tick,0x7ffdf681f424,30314865,0,0x0,8
tick,0x7ffdf681f424,30316916,0,0x0,8
tick,0x7ffdf681f424,30318826,0,0x0,8
tick,0x7ffdf681f424,30320790,0,0x0,8
tick,0x7ffdf681f424,30321833,0,0x0,8
tick,0x7ffdf681f424,30323761,0,0x0,8
tick,0x7ffdf681f424,30325781,0,0x0,8
tick,0x7ffdf681f424,30327799,0,0x0,8
tick,0x7ffdf681f424,30329796,0,0x0,8
tick,0x7ffdf681f424,30331860,0,0x0,8
tick,0x7ffdf681f424,30333917,0,0x0,8
tick,0x7ffdf681f424,30335841,0,0x0,8
tick,0x7ffdf681f424,30337839,0,0x0,8
tick,0x7ffdf681f424,30339760,0,0x0,8
tick,0x7ffdf681f424,30341811,0,0x0,8
tick,0x7ffdf681f424,30343830,0,0x0,8
tick,0x7ffdf681f424,30345765,0,0x0,8
tick,0x7ffdf681f424,30347774,0,0x0,8
tick,0x7ffdf681f424,30349787,0,0x0,8
tick,0x7ffdf681f424,30351750,0,0x0,8
tick,0x7ffdf681f424,30353767,0,0x0,8
tick,0x7ffdf681f424,30355774,0,0x0,8
tick,0x7ffdf681f424,30357819,0,0x0,8
tick,0x7ffdf681f424,30359791,0,0x0,8
tick,0x7ffdf681f424,30361739,0,0x0,8
tick,0x7ffdf681f424,30363786,0,0x0,8
tick,0x7ffdf681f424,30365836,0,0x0,8
tick,0x7ffdf681f424,30367735,0,0x0,8
tick,0x7ffdf681f424,30369727,0,0x0,8
tick,0x7ffdf681f424,30371754,0,0x0,8
tick,0x7ffdf681f424,30373746,0,0x0,8
tick,0x7ffdf681f424,30375775,0,0x0,8
tick,0x7ffdf681f424,30377775,0,0x0,8
tick,0x7ffdf681f424,30379781,0,0x0,8
tick,0x7ffdf681f424,30381773,0,0x0,8
tick,0x7ffdf681f424,30383810,0,0x0,8
tick,0x7ffdf681f424,30385791,0,0x0,8
tick,0x7ffdf681f424,30387755,0,0x0,8
tick,0x7ffdf681f424,30389755,0,0x0,8
tick,0x7ffdf681f424,30391700,0,0x0,8
tick,0x7ffdf681f424,30393725,0,0x0,8
tick,0x7ffdf681f424,30395717,0,0x0,8
tick,0x7ffdf681f424,30397730,0,0x0,8
tick,0x7ffdf681f424,30399707,0,0x0,8
tick,0x7ffdf681f424,30401696,0,0x0,8
tick,0x7ffdf681f424,30403677,0,0x0,8
tick,0x7ffdf681f424,30405611,0,0x0,8
tick,0x7ffdf681f424,30407644,0,0x0,8
tick,0x7ffdf681f424,30409689,0,0x0,8
tick,0x7ffdf681f424,30411688,0,0x0,8
tick,0x7ffdf681f424,30413643,0,0x0,8
tick,0x7ffdf681f424,30415646,0,0x0,8
tick,0x7ffdf681f424,30417675,0,0x0,8
tick,0x7ffdf681f424,30419679,0,0x0,8
tick,0x7ffdf681f424,30421657,0,0x0,8
tick,0x7ffdf681f424,30423616,0,0x0,8
tick,0x7ffdf681f424,30425620,0,0x0,8
tick,0x7ffdf681f424,30427674,0,0x0,8
tick,0x7ffdf681f424,30429634,0,0x0,8
tick,0x7ffdf681f424,30431621,0,0x0,8
tick,0x7ffdf681f424,30433593,0,0x0,8
tick,0x7ffdf681f424,30435651,0,0x0,8
tick,0x7ffdf681f424,30437606,0,0x0,8
tick,0x7ffdf681f424,30439553,0,0x0,8
tick,0x7ffdf681f424,30441589,0,0x0,8
tick,0x7ffdf681f424,30443565,0,0x0,8
tick,0x7ffdf681f424,30445593,0,0x0,8
tick,0x7ffdf681f424,30447567,0,0x0,8
tick,0x7ffdf681f424,30449580,0,0x0,8
tick,0x7ffdf681f424,30451580,0,0x0,8
tick,0x7ffdf681f424,30453571,0,0x0,8
tick,0x7ffdf681f424,30455540,0,0x0,8
tick,0x7ffdf681f424,30457474,0,0x0,8
tick,0x7ffdf681f424,30459470,0,0x0,8
tick,0x7ffdf681f424,30461432,0,0x0,8
tick,0x7ffdf681f424,30463523,0,0x0,8
tick,0x7ffdf681f424,30465449,0,0x0,8
tick,0x7ffdf681f424,30467519,0,0x0,8
tick,0x7ffdf681f424,30469496,0,0x0,8
tick,0x7ffdf681f424,30471538,0,0x0,8
tick,0x7ffdf681f424,30473513,0,0x0,8
tick,0x7ffdf681f424,30475479,0,0x0,8
tick,0x7ffdf681f424,30477529,0,0x0,8
tick,0x7ffdf681f424,30479492,0,0x0,8
tick,0x7ffdf681f424,30481435,0,0x0,8
tick,0x7ffdf681f424,30483392,0,0x0,8
tick,0x7ffdf681f424,30485459,0,0x0,8
tick,0x7ffdf681f424,30487413,0,0x0,8
tick,0x7ffdf681f424,30489435,0,0x0,8
tick,0x7ffdf681f424,30491448,0,0x0,8
tick,0x7ffdf681f424,30493439,0,0x0,8
tick,0x7ffdf681f424,30495446,0,0x0,8
tick,0x7ffdf681f424,30497397,0,0x0,8
tick,0x7ffdf681f424,30499404,0,0x0,8
tick,0x7ffdf681f424,30501348,0,0x0,8
tick,0x7ffdf681f424,30503340,0,0x0,8
tick,0x7ffdf681f424,30505349,0,0x0,8
tick,0x7ffdf681f424,30507381,0,0x0,8
tick,0x7ffdf681f424,30509310,0,0x0,8
tick,0x7ffdf681f424,30511379,0,0x0,8
tick,0x7ffdf681f424,30513368,0,0x0,8
tick,0x7ffdf681f424,30515316,0,0x0,8
tick,0x7ffdf681f424,30517338,0,0x0,8
tick,0x7ffdf681f424,30519335,0,0x0,8
tick,0x7ffdf681f424,30521302,0,0x0,8
tick,0x7ffdf681f424,30523339,0,0x0,8
tick,0x7ffdf681f424,30525291,0,0x0,8
tick,0x7ffdf681f424,30527350,0,0x0,8
tick,0x7ffdf681f424,30529243,0,0x0,8
tick,0x7ffdf681f424,30531364,0,0x0,8
tick,0x7ffdf681f424,30533351,0,0x0,8
tick,0x7ffdf681f424,30535387,0,0x0,8
tick,0x7ffdf681f424,30537373,0,0x0,8
tick,0x7ffdf681f424,30539365,0,0x0,8
tick,0x7ffdf681f424,30541334,0,0x0,8
tick,0x7ffdf681f424,30543355,0,0x0,8
tick,0x7ffdf681f424,30545328,0,0x0,8
tick,0x7ffdf681f424,30547325,0,0x0,8
tick,0x7ffdf681f424,30549305,0,0x0,8
tick,0x7ffdf681f424,30551314,0,0x0,8
tick,0x7ffdf681f424,30553346,0,0x0,8
tick,0x7ffdf681f424,30555311,0,0x0,8
tick,0x7ffdf681f424,30557243,0,0x0,8
tick,0x7ffdf681f424,30559244,0,0x0,8
tick,0x7ffdf681f424,30561324,0,0x0,8
tick,0x7ffdf681f424,30563286,0,0x0,8
tick,0x7ffdf681f424,30565301,0,0x0,8
tick,0x7ffdf681f424,30567269,0,0x0,8
tick,0x7ffdf681f424,30569333,0,0x0,8
tick,0x7ffdf681f424,30571293,0,0x0,8
tick,0x7ffdf681f424,30573268,0,0x0,8
tick,0x7ffdf681f424,30575235,0,0x0,8
tick,0x7ffdf681f424,30577253,0,0x0,8
tick,0x7ffdf681f424,30579251,0,0x0,8
tick,0x7ffdf681f424,30581247,0,0x0,8
tick,0x7ffdf681f424,30583281,0,0x0,8
tick,0x7ffdf681f424,30585244,0,0x0,8
tick,0x7ffdf681f424,30587239,0,0x0,8
tick,0x7ffdf681f424,30589219,0,0x0,8
tick,0x7ffdf681f424,30591205,0,0x0,8
tick,0x7ffdf681f424,30593185,0,0x0,8
tick,0x7ffdf681f424,30595189,0,0x0,8
tick,0x7ffdf681f424,30597158,0,0x0,8
tick,0x7ffdf681f424,30599153,0,0x0,8
tick,0x7ffdf681f424,30601147,0,0x0,8
tick,0x7ffdf681f424,30603156,0,0x0,8
tick,0x7ffdf681f424,30605178,0,0x0,8
tick,0x7ffdf681f424,30607125,0,0x0,8
tick,0x7ffdf681f424,30609167,0,0x0,8
tick,0x7ffdf681f424,30611182,0,0x0,8
tick,0x7ffdf681f424,30613143,0,0x0,8
tick,0x7ffdf681f424,30615119,0,0x0,8
tick,0x7ffdf681f424,30617128,0,0x0,8
tick,0x7ffdf681f424,30619129,0,0x0,8
tick,0x7ffdf681f424,30621108,0,0x0,8
tick,0x7ffdf681f424,30623092,0,0x0,8
tick,0x7ffdf681f424,30625114,0,0x0,8
tick,0x7ffdf681f424,30627110,0,0x0,8
tick,0x7ffdf681f424,30629098,0,0x0,8
tick,0x7ffdf681f424,30631074,0,0x0,8
tick,0x7ffdf681f424,30633082,0,0x0,8
tick,0x7ffdf681f424,30635063,0,0x0,8
tick,0x7ffdf681f424,30637090,0,0x0,8
tick,0x7ffdf681f424,30639048,0,0x0,8
tick,0x7ffdf681f424,30641068,0,0x0,8
tick,0x7ffdf681f424,30643032,0,0x0,8
tick,0x7ffdf681f424,30645019,0,0x0,8
tick,0x7ffdf681f424,30647065,0,0x0,8
tick,0x7ffdf681f424,30649049,0,0x0,8
tick,0x7ffdf681f424,30651068,0,0x0,8
tick,0x7ffdf681f424,30653060,0,0x0,8
tick,0x7ffdf681f424,30655023,0,0x0,8
tick,0x7ffdf681f424,30657060,0,0x0,8
tick,0x7ffdf681f424,30659062,0,0x0,8
tick,0x7ffdf681f424,30660936,0,0x0,8
tick,0x7ffdf681f424,30663000,0,0x0,8
tick,0x7ffdf681f424,30665031,0,0x0,8
tick,0x7ffdf681f424,30667008,0,0x0,8
tick,0x7ffdf681f424,30669029,0,0x0,8
tick,0x7ffdf681f424,30670975,0,0x0,8
tick,0x7ffdf681f424,30672984,0,0x0,8
tick,0x7ffdf681f424,30674959,0,0x0,8
tick,0x7ffdf681f424,30676902,0,0x0,8
tick,0x7ffdf681f424,30678835,0,0x0,8
tick,0x7ffdf681f424,30680879,0,0x0,8
tick,0x7ffdf681f424,30682824,0,0x0,8
tick,0x7ffdf681f424,30684929,0,0x0,8
tick,0x7ffdf681f424,30686836,0,0x0,8
tick,0x7ffdf681f424,30688834,0,0x0,8
tick,0x7ffdf681f424,30690842,0,0x0,8
tick,0x7ffdf681f424,30692827,0,0x0,8
tick,0x7ffdf681f424,30694816,0,0x0,8
tick,0x7ffdf681f424,30696803,0,0x0,8
tick,0x7ffdf681f424,30698806,0,0x0,8
tick,0x7ffdf681f424,30700804,0,0x0,8
tick,0x7ffdf681f424,30702797,0,0x0,8
tick,0x7ffdf681f424,30704853,0,0x0,8
tick,0x7ffdf681f424,30706786,0,0x0,8
tick,0x7ffdf681f424,30708744,0,0x0,8
tick,0x7ffdf681f424,30710769,0,0x0,8
tick,0x7ffdf681f424,30712794,0,0x0,8
tick,0x7ffdf681f424,30714751,0,0x0,8
tick,0x7ffdf681f424,30716738,0,0x0,8
tick,0x7ffdf681f424,30718814,0,0x0,8
tick,0x7ffdf681f424,30720799,0,0x0,8
tick,0x7ffdf681f424,30722791,0,0x0,8
tick,0x7ffdf681f424,30724802,0,0x0,8
tick,0x7ffdf681f424,30726728,0,0x0,8
tick,0x7ffdf681f424,30728803,0,0x0,8
tick,0x7ffdf681f424,30730772,0,0x0,8
tick,0x7ffdf681f424,30732701,0,0x0,8
tick,0x7ffdf681f424,30734715,0,0x0,8
tick,0x7ffdf681f424,30736804,0,0x0,8
tick,0x7ffdf681f424,30738707,0,0x0,8
tick,0x7ffdf681f424,30740738,0,0x0,8
tick,0x7ffdf681f424,30742773,0,0x0,8
tick,0x7ffdf681f424,30744762,0,0x0,8
tick,0x7ffdf681f424,30746720,0,0x0,8
tick,0x7ffdf681f424,30748709,0,0x0,8
tick,0x7ffdf681f424,30750750,0,0x0,8
tick,0x7ffdf681f424,30752688,0,0x0,8
tick,0x7ffdf681f424,30754742,0,0x0,8
tick,0x7ffdf681f424,30756640,0,0x0,8
tick,0x7ffdf681f424,30758677,0,0x0,8
tick,0x7ffdf681f424,30760719,0,0x0,8
tick,0x7ffdf681f424,30762711,0,0x0,8
tick,0x7ffdf681f424,30764666,0,0x0,8
tick,0x7ffdf681f424,30766663,0,0x0,8
tick,0x7ffdf681f424,30768612,0,0x0,8
tick,0x7ffdf681f424,30770694,0,0x0,8
tick,0x7ffdf681f424,30772708,0,0x0,8
tick,0x7ffdf681f424,30774647,0,0x0,8
tick,0x7ffdf681f424,30776649,0,0x0,8
tick,0x7ffdf681f424,30778696,0,0x0,8
tick,0x7ffdf681f424,30780638,0,0x0,8
tick,0x7ffdf681f424,30782541,0,0x0,8
tick,0x7ffdf681f424,30784596,0,0x0,8
tick,0x7ffdf681f424,30786537,0,0x0,8
tick,0x7ffdf681f424,30788616,0,0x0,8
tick,0x7ffdf681f424,30790599,0,0x0,8
tick,0x7ffdf681f424,30792572,0,0x0,8
tick,0x7ffdf681f424,30794583,0,0x0,8
tick,0x7ffdf681f424,30796617,0,0x0,8
tick,0x7ffdf681f424,30798597,0,0x0,8
tick,0x7ffdf681f424,30800530,0,0x0,8
tick,0x7ffdf681f424,30802517,0,0x0,8
tick,0x7ffdf681f424,30804509,0,0x0,8
tick,0x7ffdf681f424,30806583,0,0x0,8
tick,0x7ffdf681f424,30808553,0,0x0,8
tick,0x7ffdf681f424,30810492,0,0x0,8
tick,0x7ffdf681f424,30812495,0,0x0,8
tick,0x7ffdf681f424,30814578,0,0x0,8
tick,0x7ffdf681f424,30816513,0,0x0,8
tick,0x7ffdf681f424,30818497,0,0x0,8
tick,0x7ffdf681f424,30820480,0,0x0,8
tick,0x7ffdf681f424,30822515,0,0x0,8
tick,0x7ffdf681f424,30824508,0,0x0,8
tick,0x7ffdf681f424,30826460,0,0x0,8
tick,0x7ffdf681f424,30828462,0,0x0,8
tick,0x7ffdf681f424,30830551,0,0x0,8
tick,0x7ffdf681f424,30832438,0,0x0,8
tick,0x7ffdf681f424,30834430,0,0x0,8
tick,0x7ffdf681f424,30836398,0,0x0,8
tick,0x7ffdf681f424,30838413,0,0x0,8
tick,0x7ffdf681f424,30840445,0,0x0,8
tick,0x7ffdf681f424,30842451,0,0x0,8
tick,0x7ffdf681f424,30844423,0,0x0,8
tick,0x7ffdf681f424,30846444,0,0x0,8
tick,0x7ffdf681f424,30848400,0,0x0,8
tick,0x7ffdf681f424,30850446,0,0x0,8
tick,0x7ffdf681f424,30852470,0,0x0,8
tick,0x7ffdf681f424,30854485,0,0x0,8
tick,0x7ffdf681f424,30856453,0,0x0,8
tick,0x7ffdf681f424,30858404,0,0x0,8
tick,0x7ffdf681f424,30860442,0,0x0,8
tick,0x7ffdf681f424,30862466,0,0x0,8
tick,0x7ffdf681f424,30864417,0,0x0,8
tick,0x7ffdf681f424,30866384,0,0x0,8
tick,0x7ffdf681f424,30868351,0,0x0,8
tick,0x7ffdf681f424,30870343,0,0x0,8
tick,0x7ffdf681f424,30872374,0,0x0,8
tick,0x7ffdf681f424,30874373,0,0x0,8
tick,0x7ffdf681f424,30876348,0,0x0,8
tick,0x7ffdf681f424,30878315,0,0x0,8
tick,0x7ffdf681f424,30880363,0,0x0,8
tick,0x7ffdf681f424,30882387,0,0x0,8
tick,0x7ffdf681f424,30884377,0,0x0,8
tick,0x7ffdf681f424,30886390,0,0x0,8
tick,0x7ffdf681f424,30888382,0,0x0,8
tick,0x7ffdf681f424,30890358,0,0x0,8
tick,0x7ffdf681f424,30892340,0,0x0,8
tick,0x7ffdf681f424,30894409,0,0x0,8
tick,0x7ffdf681f424,30896340,0,0x0,8
tick,0x7ffdf681f424,30898371,0,0x0,8
tick,0x7ffdf681f424,30900282,0,0x0,8
tick,0x7ffdf681f424,30902342,0,0x0,8
tick,0x7ffdf681f424,30904236,0,0x0,8
tick,0x7ffdf681f424,30906274,0,0x0,8
tick,0x7ffdf681f424,30908249,0,0x0,8
tick,0x7ffdf681f424,30910258,0,0x0,8
tick,0x7ffdf681f424,30912265,0,0x0,8
tick,0x7ffdf681f424,30914221,0,0x0,8
tick,0x7ffdf681f424,30916218,0,0x0,8
tick,0x7ffdf681f424,30918225,0,0x0,8
tick,0x7ffdf681f424,30920220,0,0x0,8
tick,0x7ffdf681f424,30922237,0,0x0,8
tick,0x7ffdf681f424,30924196,0,0x0,8
tick,0x7ffdf681f424,30926260,0,0x0,8
tick,0x7ffdf681f424,30928223,0,0x0,8
tick,0x7ffdf681f424,30930209,0,0x0,8
tick,0x7ffdf681f424,30932171,0,0x0,8
tick,0x7ffdf681f424,30934170,0,0x0,8
tick,0x7ffdf681f424,30936164,0,0x0,8
tick,0x7ffdf681f424,30938169,0,0x0,8
tick,0x7ffdf681f424,30940127,0,0x0,8
tick,0x7ffdf681f424,30942160,0,0x0,8
tick,0x7ffdf681f424,30944209,0,0x0,8
tick,0x7ffdf681f424,30946131,0,0x0,8
tick,0x7ffdf681f424,30948194,0,0x0,8
tick,0x7ffdf681f424,30950184,0,0x0,8
tick,0x7ffdf681f424,30952148,0,0x0,8
tick,0x7ffdf681f424,30954181,0,0x0,8
tick,0x7ffdf681f424,30956198,0,0x0,8
tick,0x7ffdf681f424,30958266,0,0x0,8
tick,0x7ffdf681f424,30960162,0,0x0,8
tick,0x7ffdf681f424,30962117,0,0x0,8
tick,0x7ffdf681f424,30964166,0,0x0,8
tick,0x7ffdf681f424,30966110,0,0x0,8
tick,0x7ffdf681f424,30968187,0,0x0,8
tick,0x7ffdf681f424,30970100,0,0x0,8
tick,0x7ffdf681f424,30972149,0,0x0,8
tick,0x7ffdf681f424,30974134,0,0x0,8
tick,0x7ffdf681f424,30976138,0,0x0,8
tick,0x7ffdf681f424,30978159,0,0x0,8
tick,0x7ffdf681f424,30980131,0,0x0,8
tick,0x7ffdf681f424,30982101,0,0x0,8
tick,0x7ffdf681f424,30984118,0,0x0,8
tick,0x7ffdf681f424,30986152,0,0x0,8
tick,0x7ffdf681f424,30988120,0,0x0,8
tick,0x7ffdf681f424,30990115,0,0x0,8
tick,0x7ffdf681f424,30992096,0,0x0,8
tick,0x7ffdf681f424,30994144,0,0x0,8
tick,0x7ffdf681f424,30996110,0,0x0,8
tick,0x7ffdf681f424,30998059,0,0x0,8
tick,0x7ffdf681f424,31000051,0,0x0,8
tick,0x7ffdf681f424,31002102,0,0x0,8
tick,0x7ffdf681f424,31004005,0,0x0,8
tick,0x7ffdf681f424,31006062,0,0x0,8
tick,0x7ffdf681f424,31008097,0,0x0,8
tick,0x7ffdf681f424,31010004,0,0x0,8
tick,0x7ffdf681f424,31012084,0,0x0,8
tick,0x7ffdf681f424,31014014,0,0x0,8
tick,0x7ffdf681f424,31015974,0,0x0,8
tick,0x7ffdf681f424,31017966,0,0x0,8
tick,0x7ffdf681f424,31019955,0,0x0,8
tick,0x7ffdf681f424,31021995,0,0x0,8
tick,0x7ffdf681f424,31024001,0,0x0,8
tick,0x7ffdf681f424,31025928,0,0x0,8
tick,0x7ffdf681f424,31027903,0,0x0,8
tick,0x7ffdf681f424,31029950,0,0x0,8
tick,0x7ffdf681f424,31031951,0,0x0,8
tick,0x7ffdf681f424,31033977,0,0x0,8
tick,0x7ffdf681f424,31035969,0,0x0,8
tick,0x7ffdf681f424,31037937,0,0x0,8
tick,0x7ffdf681f424,31039938,0,0x0,8
tick,0x7ffdf681f424,31041942,0,0x0,8
tick,0x7ffdf681f424,31043929,0,0x0,8
tick,0x7ffdf681f424,31045864,0,0x0,8
tick,0x7ffdf681f424,31047881,0,0x0,8
tick,0x7ffdf681f424,31049901,0,0x0,8
tick,0x7ffdf681f424,31051879,0,0x0,8
tick,0x7ffdf681f424,31053834,0,0x0,8
tick,0x7ffdf681f424,31055858,0,0x0,8
tick,0x7ffdf681f424,31057835,0,0x0,8
tick,0x7ffdf681f424,31059825,0,0x0,8
tick,0x7ffdf681f424,31061854,0,0x0,8
tick,0x7ffdf681f424,31063843,0,0x0,8
tick,0x7ffdf681f424,31065811,0,0x0,8
tick,0x7ffdf681f424,31067812,0,0x0,8
tick,0x7ffdf681f424,31069779,0,0x0,8
tick,0x7ffdf681f424,31071797,0,0x0,8
tick,0x7ffdf681f424,31073882,0,0x0,8
tick,0x7ffdf681f424,31075765,0,0x0,8
tick,0x7ffdf681f424,31077754,0,0x0,8
tick,0x7ffdf681f424,31079862,0,0x0,8
tick,0x7ffdf681f424,31081846,0,0x0,8
tick,0x7ffdf681f424,31083864,0,0x0,8
tick,0x7ffdf681f424,31085815,0,0x0,8
tick,0x7ffdf681f424,31087820,0,0x0,8
tick,0x7ffdf681f424,31089786,0,0x0,8
tick,0x7ffdf681f424,31091754,0,0x0,8
tick,0x7ffdf681f424,31093749,0,0x0,8
tick,0x7ffdf681f424,31095786,0,0x0,8
tick,0x7ffdf681f424,31097742,0,0x0,8
tick,0x7ffdf681f424,31099771,0,0x0,8
tick,0x7ffdf681f424,31101730,0,0x0,8
tick,0x7ffdf681f424,31103695,0,0x0,8
tick,0x7ffdf681f424,31105731,0,0x0,8
tick,0x7ffdf681f424,31107761,0,0x0,8
tick,0x7ffdf681f424,31109759,0,0x0,8
tick,0x7ffdf681f424,31111691,0,0x0,8
tick,0x7ffdf681f424,31113724,0,0x0,8
tick,0x7ffdf681f424,31115686,0,0x0,8
tick,0x7ffdf681f424,31117733,0,0x0,8
tick,0x7ffdf681f424,31119720,0,0x0,8
tick,0x7ffdf681f424,31121707,0,0x0,8
tick,0x7ffdf681f424,31123710,0,0x0,8
tick,0x7ffdf681f424,31125668,0,0x0,8
tick,0x7ffdf681f424,31127642,0,0x0,8
tick,0x7ffdf681f424,31129736,0,0x0,8
tick,0x7ffdf681f424,31131687,0,0x0,8
tick,0x7ffdf681f424,31133633,0,0x0,8
tick,0x7ffdf681f424,31135661,0,0x0,8
tick,0x7ffdf681f424,31137729,0,0x0,8
tick,0x7ffdf681f424,31139651,0,0x0,8
tick,0x7ffdf681f424,31141649,0,0x0,8
tick,0x7ffdf681f424,31143613,0,0x0,8
tick,0x7ffdf681f424,31145649,0,0x0,8
tick,0x7ffdf681f424,31147640,0,0x0,8
tick,0x7ffdf681f424,31149657,0,0x0,8
tick,0x7ffdf681f424,31151636,0,0x0,8
tick,0x7ffdf681f424,31153604,0,0x0,8
tick,0x7ffdf681f424,31155683,0,0x0,8
tick,0x7ffdf681f424,31157569,0,0x0,8
tick,0x7ffdf681f424,31159622,0,0x0,8
tick,0x7ffdf681f424,31161595,0,0x0,8
tick,0x7ffdf681f424,31163633,0,0x0,8
tick,0x7ffdf681f424,31165658,0,0x0,8
tick,0x7ffdf681f424,31167563,0,0x0,8
tick,0x7ffdf681f424,31169625,0,0x0,8
tick,0x7ffdf681f424,31171576,0,0x0,8
tick,0x7ffdf681f424,31173494,0,0x0,8
tick,0x7ffdf681f424,31175517,0,0x0,8
tick,0x7ffdf681f424,31177485,0,0x0,8
tick,0x7ffdf681f424,31179538,0,0x0,8
tick,0x7ffdf681f424,31181546,0,0x0,8
tick,0x7ffdf681f424,31183497,0,0x0,8
tick,0x7ffdf681f424,31185538,0,0x0,8
tick,0x7ffdf681f424,31187567,0,0x0,8
tick,0x7ffdf681f424,31189528,0,0x0,8
tick,0x7ffdf681f424,31191453,0,0x0,8
tick,0x7ffdf681f424,31193504,0,0x0,8
tick,0x7ffdf681f424,31195588,0,0x0,8
tick,0x7ffdf681f424,31197564,0,0x0,8
tick,0x7ffdf681f424,31199488,0,0x0,8
tick,0x7ffdf681f424,31201492,0,0x0,8
tick,0x7ffdf681f424,31203533,0,0x0,8
tick,0x7ffdf681f424,31205504,0,0x0,8
tick,0x7ffdf681f424,31207440,0,0x0,8
tick,0x7ffdf681f424,31209442,0,0x0,8
tick,0x7ffdf681f424,31211454,0,0x0,8
tick,0x7ffdf681f424,31213406,0,0x0,8
tick,0x7ffdf681f424,31215447,0,0x0,8
tick,0x7ffdf681f424,31217457,0,0x0,8
tick,0x7ffdf681f424,31219425,0,0x0,8
tick,0x7ffdf681f424,31221519,0,0x0,8
tick,0x7ffdf681f424,31223519,0,0x0,8
tick,0x7ffdf681f424,31225431,0,0x0,8
tick,0x7ffdf681f424,31227491,0,0x0,8
tick,0x7ffdf681f424,31229452,0,0x0,8
tick,0x7ffdf681f424,31231464,0,0x0,8
tick,0x7ffdf681f424,31233344,0,0x0,8
tick,0x7ffdf681f424,31234486,0,0x0,8
tick,0x7ffdf681f424,31236435,0,0x0,8
tick,0x7ffdf681f424,31238447,0,0x0,8
tick,0x7ffdf681f424,31240364,0,0x0,8
tick,0x7ffdf681f424,31242424,0,0x0,8
tick,0x7ffdf681f424,31244400,0,0x0,8
tick,0x7ffdf681f424,31246411,0,0x0,8
tick,0x7ffdf681f424,31248420,0,0x0,8
tick,0x7ffdf681f424,31250346,0,0x0,8
tick,0x7ffdf681f424,31252337,0,0x0,8
tick,0x7ffdf681f424,31254375,0,0x0,8
tick,0x7ffdf681f424,31256373,0,0x0,8
tick,0x7ffdf681f424,31258363,0,0x0,8
tick,0x7ffdf681f424,31260307,0,0x0,8
tick,0x7ffdf681f424,31262369,0,0x0,8
tick,0x7ffdf681f424,31264350,0,0x0,8
tick,0x7ffdf681f424,31266347,0,0x0,8
tick,0x7ffdf681f424,31268345,0,0x0,8
tick,0x7ffdf681f424,31270295,0,0x0,8
tick,0x7ffdf681f424,31272338,0,0x0,8
tick,0x7ffdf681f424,31274277,0,0x0,8
tick,0x7ffdf681f424,31276267,0,0x0,8
tick,0x7ffdf681f424,31278326,0,0x0,8
tick,0x7ffdf681f424,31280324,0,0x0,8
tick,0x7ffdf681f424,31282256,0,0x0,8
tick,0x7ffdf681f424,31284252,0,0x0,8
tick,0x7ffdf681f424,31286233,0,0x0,8
tick,0x7ffdf681f424,31288227,0,0x0,8
tick,0x7ffdf681f424,31290278,0,0x0,8
tick,0x7ffdf681f424,31292239,0,0x0,8
tick,0x7ffdf681f424,31294292,0,0x0,8
tick,0x7ffdf681f424,31296218,0,0x0,8
tick,0x7ffdf681f424,31298203,0,0x0,8
tick,0x7ffdf681f424,31300194,0,0x0,8
tick,0x7ffdf681f424,31302181,0,0x0,8
tick,0x7ffdf681f424,31304158,0,0x0,8
tick,0x7ffdf681f424,31306232,0,0x0,8
tick,0x7ffdf681f424,31308267,0,0x0,8
tick,0x7ffdf681f424,31310255,0,0x0,8
tick,0x7ffdf681f424,31312235,0,0x0,8
tick,0x7ffdf681f424,31314247,0,0x0,8
tick,0x7ffdf681f424,31316215,0,0x0,8
tick,0x7ffdf681f424,31318209,0,0x0,8
tick,0x7ffdf681f424,31320148,0,0x0,8
tick,0x7ffdf681f424,31322238,0,0x0,8
tick,0x7ffdf681f424,31324169,0,0x0,8
tick,0x7ffdf681f424,31326141,0,0x0,8
tick,0x7ffdf681f424,31328264,0,0x0,8
tick,0x7ffdf681f424,31330183,0,0x0,8
tick,0x7ffdf681f424,31332197,0,0x0,8
tick,0x7ffdf681f424,31334186,0,0x0,8
tick,0x7ffdf681f424,31336215,0,0x0,8
tick,0x7ffdf681f424,31338138,0,0x0,8
tick,0x7ffdf681f424,31340175,0,0x0,8
tick,0x7ffdf681f424,31342154,0,0x0,8
tick,0x7ffdf681f424,31344188,0,0x0,8
tick,0x7ffdf681f424,31346201,0,0x0,8
tick,0x7ffdf681f424,31348150,0,0x0,8
tick,0x7ffdf681f424,31350143,0,0x0,8
tick,0x7ffdf681f424,31352126,0,0x0,8
tick,0x7ffdf681f424,31354121,0,0x0,8
tick,0x7ffdf681f424,31356110,0,0x0,8
tick,0x7ffdf681f424,31358133,0,0x0,8
tick,0x7ffdf681f424,31360088,0,0x0,8
tick,0x7ffdf681f424,31362068,0,0x0,8
tick,0x7ffdf681f424,31364022,0,0x0,8
tick,0x7ffdf681f424,31366141,0,0x0,8
tick,0x7ffdf681f424,31368017,0,0x0,8
tick,0x7ffdf681f424,31370105,0,0x0,8
tick,0x7ffdf681f424,31372091,0,0x0,8
tick,0x7ffdf681f424,31374078,0,0x0,8
tick,0x7ffdf681f424,31376061,0,0x0,8
tick,0x7ffdf681f424,31378065,0,0x0,8
tick,0x7ffdf681f424,31380063,0,0x0,8
tick,0x7ffdf681f424,31382053,0,0x0,8
tick,0x7ffdf681f424,31384032,0,0x0,8
tick,0x7ffdf681f424,31386044,0,0x0,8
tick,0x7ffdf681f424,31388065,0,0x0,8
tick,0x7ffdf681f424,31390014,0,0x0,8
tick,0x7ffdf681f424,31392022,0,0x0,8
tick,0x7ffdf681f424,31394023,0,0x0,8
tick,0x7ffdf681f424,31396036,0,0x0,8
tick,0x7ffdf681f424,31398000,0,0x0,8
tick,0x7ffdf681f424,31400012,0,0x0,8
tick,0x7ffdf681f424,31401994,0,0x0,8
tick,0x7ffdf681f424,31403992,0,0x0,8
tick,0x7ffdf681f424,31405981,0,0x0,8
tick,0x7ffdf681f424,31407963,0,0x0,8
tick,0x7ffdf681f424,31410008,0,0x0,8
tick,0x7ffdf681f424,31411991,0,0x0,8
tick,0x7ffdf681f424,31413961,0,0x0,8
tick,0x7ffdf681f424,31415968,0,0x0,8
tick,0x7ffdf681f424,31418007,0,0x0,8
tick,0x7ffdf681f424,31419915,0,0x0,8
tick,0x7ffdf681f424,31421933,0,0x0,8
tick,0x7ffdf681f424,31423928,0,0x0,8
tick,0x7ffdf681f424,31425872,0,0x0,8
tick,0x7ffdf681f424,31427867,0,0x0,8
tick,0x7ffdf681f424,31429916,0,0x0,8
tick,0x7ffdf681f424,31431858,0,0x0,8
tick,0x7ffdf681f424,31433865,0,0x0,8
tick,0x7ffdf681f424,31435852,0,0x0,8
tick,0x7ffdf681f424,31437859,0,0x0,8
tick,0x7ffdf681f424,31439909,0,0x0,8
tick,0x7ffdf681f424,31441888,0,0x0,8
tick,0x7ffdf681f424,31443923,0,0x0,8
tick,0x7ffdf681f424,31445864,0,0x0,8
tick,0x7ffdf681f424,31447874,0,0x0,8
tick,0x7ffdf681f424,31449876,0,0x0,8
tick,0x7ffdf681f424,31451836,0,0x0,8
tick,0x7ffdf681f424,31453771,0,0x0,8
tick,0x7ffdf681f424,31455904,0,0x0,8
tick,0x7ffdf681f424,31457855,0,0x0,8
tick,0x7ffdf681f424,31459862,0,0x0,8
tick,0x7ffdf681f424,31461842,0,0x0,8
tick,0x7ffdf681f424,31463848,0,0x0,8
tick,0x7ffdf681f424,31465813,0,0x0,8
tick,0x7ffdf681f424,31467777,0,0x0,8
tick,0x7ffdf681f424,31469839,0,0x0,8
tick,0x7ffdf681f424,31471795,0,0x0,8
tick,0x7ffdf681f424,31473807,0,0x0,8
tick,0x7ffdf681f424,31475771,0,0x0,8
tick,0x7ffdf681f424,31477790,0,0x0,8
tick,0x7ffdf681f424,31479834,0,0x0,8
tick,0x7ffdf681f424,31481729,0,0x0,8
tick,0x7ffdf681f424,31483723,0,0x0,8
tick,0x7ffdf681f424,31485720,0,0x0,8
tick,0x7ffdf681f424,31487719,0,0x0,8
tick,0x7ffdf681f424,31489727,0,0x0,8
tick,0x7ffdf681f424,31491730,0,0x0,8
tick,0x7ffdf681f424,31493739,0,0x0,8
tick,0x7ffdf681f424,31495764,0,0x0,8
tick,0x7ffdf681f424,31497696,0,0x0,8
tick,0x7ffdf681f424,31499683,0,0x0,8
tick,0x7ffdf681f424,31501673,0,0x0,8
tick,0x7ffdf681f424,31503746,0,0x0,8
tick,0x7ffdf681f424,31505733,0,0x0,8
tick,0x7ffdf681f424,31507659,0,0x0,8
tick,0x7ffdf681f424,31509652,0,0x0,8
tick,0x7ffdf681f424,31511639,0,0x0,8
tick,0x7ffdf681f424,31513641,0,0x0,8
tick,0x7ffdf681f424,31515689,0,0x0,8
tick,0x7ffdf681f424,31517709,0,0x0,8
tick,0x7ffdf681f424,31519686,0,0x0,8
tick,0x7ffdf681f424,31521673,0,0x0,8
tick,0x7ffdf681f424,31523663,0,0x0,8
tick,0x7ffdf681f424,31525664,0,0x0,8
tick,0x7ffdf681f424,31537801,0,0x0,8
tick,0x7ffdf681f424,31543031,0,0x0,8
tick,0x7ffdf681f424,31544583,0,0x0,8
tick,0x7ffdf681f424,31546656,0,0x0,8
tick,0x7ffdf681f424,31548542,0,0x0,8
tick,0x7ffdf681f424,31550535,0,0x0,8
tick,0x7ffdf681f424,31552499,0,0x0,8
tick,0x7ffdf681f424,31554493,0,0x0,8
tick,0x7ffdf681f424,31556499,0,0x0,8
tick,0x7ffdf681f424,31558572,0,0x0,8
tick,0x7ffdf681f424,31560489,0,0x0,8
tick,0x7ffdf681f424,31562481,0,0x0,8
tick,0x7ffdf681f424,31564503,0,0x0,8
tick,0x7ffdf681f424,31566538,0,0x0,8
tick,0x7ffdf681f424,31568548,0,0x0,8
tick,0x7ffdf681f424,31570457,0,0x0,8
tick,0x7ffdf681f424,31572507,0,0x0,8
tick,0x7ffdf681f424,31574572,0,0x0,8
tick,0x7ffdf681f424,31576561,0,0x0,8
tick,0x7ffdf681f424,31578568,0,0x0,8
tick,0x7ffdf681f424,31580561,0,0x0,8
tick,0x7ffdf681f424,31582543,0,0x0,8
tick,0x7ffdf681f424,31584532,0,0x0,8
tick,0x7ffdf681f424,31586426,0,0x0,8
tick,0x7ffdf681f424,31588422,0,0x0,8
tick,0x7ffdf681f424,31590522,0,0x0,8
tick,0x7ffdf681f424,31592503,0,0x0,8
tick,0x7ffdf681f424,31594511,0,0x0,8
tick,0x7ffdf681f424,31596503,0,0x0,8
tick,0x7ffdf681f424,31598459,0,0x0,8
tick,0x7ffdf681f424,31600394,0,0x0,8
tick,0x7ffdf681f424,31602426,0,0x0,8
tick,0x7ffdf681f424,31604383,0,0x0,8
tick,0x7ffdf681f424,31606443,0,0x0,8
tick,0x7ffdf681f424,31608368,0,0x0,8
tick,0x7ffdf681f424,31610453,0,0x0,8
tick,0x7ffdf681f424,31612444,0,0x0,8
tick,0x7ffdf681f424,31614322,0,0x0,8
tick,0x7ffdf681f424,31616341,0,0x0,8
tick,0x7ffdf681f424,31618344,0,0x0,8
tick,0x7ffdf681f424,31620301,0,0x0,8
tick,0x7ffdf681f424,31622412,0,0x0,8
tick,0x7ffdf681f424,31624313,0,0x0,8
tick,0x7ffdf681f424,31626431,0,0x0,8
tick,0x7ffdf681f424,31628346,0,0x0,8
tick,0x7ffdf681f424,31630321,0,0x0,8
tick,0x7ffdf681f424,31632292,0,0x0,8
tick,0x7ffdf681f424,31634274,0,0x0,8
tick,0x7ffdf681f424,31636367,0,0x0,8
tick,0x7ffdf681f424,31638323,0,0x0,8
tick,0x7ffdf681f424,31640311,0,0x0,8
tick,0x7ffdf681f424,31642315,0,0x0,8
tick,0x7ffdf681f424,31644327,0,0x0,8
tick,0x7ffdf681f424,31646367,0,0x0,8
tick,0x7ffdf681f424,31648298,0,0x0,8
tick,0x7ffdf681f424,31650346,0,0x0,8
tick,0x7ffdf681f424,31652256,0,0x0,8
tick,0x7ffdf681f424,31654321,0,0x0,8
tick,0x7ffdf681f424,31656244,0,0x0,8
tick,0x7ffdf681f424,31658240,0,0x0,8
tick,0x7ffdf681f424,31660223,0,0x0,8
tick,0x7ffdf681f424,31662223,0,0x0,8
tick,0x7ffdf681f424,31664272,0,0x0,8
tick,0x7ffdf681f424,31666202,0,0x0,8
tick,0x7ffdf681f424,31668824,0,0x0,8
tick,0x7ffdf681f424,31670337,0,0x0,8
tick,0x7ffdf681f424,31672263,0,0x0,8
tick,0x7ffdf681f424,31674338,0,0x0,8
tick,0x7ffdf681f424,31676266,0,0x0,8
tick,0x7ffdf681f424,31678246,0,0x0,8
tick,0x7ffdf681f424,31680287,0,0x0,8
tick,0x7ffdf681f424,31682188,0,0x0,8
tick,0x7ffdf681f424,31684223,0,0x0,8
tick,0x7ffdf681f424,31686229,0,0x0,8
tick,0x7ffdf681f424,31688229,0,0x0,8
tick,0x7ffdf681f424,31690153,0,0x0,8
tick,0x7ffdf681f424,31692176,0,0x0,8
tick,0x7ffdf681f424,31694204,0,0x0,8
tick,0x7ffdf681f424,31696181,0,0x0,8
tick,0x7ffdf681f424,31698150,0,0x0,8
tick,0x7ffdf681f424,31700160,0,0x0,8
tick,0x7ffdf681f424,31702225,0,0x0,8
tick,0x7ffdf681f424,31704154,0,0x0,8
tick,0x7ffdf681f424,31706173,0,0x0,8
tick,0x7ffdf681f424,31708169,0,0x0,8
tick,0x7ffdf681f424,31710194,0,0x0,8
tick,0x7ffdf681f424,31712165,0,0x0,8
tick,0x7ffdf681f424,31714099,0,0x0,8
tick,0x7ffdf681f424,31716120,0,0x0,8
tick,0x7ffdf681f424,31718102,0,0x0,8
tick,0x7ffdf681f424,31720185,0,0x0,8
tick,0x7ffdf681f424,31722182,0,0x0,8
tick,0x7ffdf681f424,31724180,0,0x0,8
tick,0x7ffdf681f424,31726050,0,0x0,8
tick,0x7ffdf681f424,31728042,0,0x0,8
tick,0x7ffdf681f424,31730125,0,0x0,8
tick,0x7ffdf681f424,31732157,0,0x0,8
tick,0x7ffdf681f424,31734118,0,0x0,8
tick,0x7ffdf681f424,31736136,0,0x0,8
tick,0x7ffdf681f424,31738125,0,0x0,8
tick,0x7ffdf681f424,31740129,0,0x0,8
tick,0x7ffdf681f424,31742107,0,0x0,8
tick,0x7ffdf681f424,31744103,0,0x0,8
tick,0x7ffdf681f424,31746070,0,0x0,8
tick,0x7ffdf681f424,31748073,0,0x0,8
tick,0x7ffdf681f424,31750016,0,0x0,8
tick,0x7ffdf681f424,31752003,0,0x0,8
tick,0x7ffdf681f424,31754042,0,0x0,8
tick,0x7ffdf681f424,31756041,0,0x0,8
tick,0x7ffdf681f424,31758051,0,0x0,8
tick,0x7ffdf681f424,31760070,0,0x0,8
tick,0x7ffdf681f424,31762073,0,0x0,8
tick,0x7ffdf681f424,31764057,0,0x0,8
tick,0x7ffdf681f424,31766050,0,0x0,8
tick,0x7ffdf681f424,31767939,0,0x0,8
tick,0x7ffdf681f424,31770029,0,0x0,8
tick,0x7ffdf681f424,31771988,0,0x0,8
tick,0x7ffdf681f424,31773931,0,0x0,8
tick,0x7ffdf681f424,31775920,0,0x0,8
tick,0x7ffdf681f424,31777888,0,0x0,8
tick,0x7ffdf681f424,31779909,0,0x0,8
tick,0x7ffdf681f424,31781906,0,0x0,8
tick,0x7ffdf681f424,31783947,0,0x0,8
tick,0x7ffdf681f424,31785938,0,0x0,8
tick,0x7ffdf681f424,31787855,0,0x0,8
tick,0x7ffdf681f424,31789924,0,0x0,8
tick,0x7ffdf681f424,31791899,0,0x0,8
tick,0x7ffdf681f424,31793978,0,0x0,8
tick,0x7ffdf681f424,31795939,0,0x0,8
tick,0x7ffdf681f424,31797936,0,0x0,8
tick,0x7ffdf681f424,31799902,0,0x0,8
tick,0x7ffdf681f424,31801941,0,0x0,8
tick,0x7ffdf681f424,31803876,0,0x0,8
tick,0x7ffdf681f424,31805860,0,0x0,8
tick,0x7ffdf681f424,31807882,0,0x0,8
tick,0x7ffdf681f424,31809829,0,0x0,8
tick,0x7ffdf681f424,31811788,0,0x0,8
tick,0x7ffdf681f424,31813857,0,0x0,8
tick,0x7ffdf681f424,31815851,0,0x0,8
tick,0x7ffdf681f424,31817878,0,0x0,8
tick,0x7ffdf681f424,31819805,0,0x0,8
tick,0x7ffdf681f424,31821802,0,0x0,8
tick,0x7ffdf681f424,31823865,0,0x0,8
tick,0x7ffdf681f424,31825793,0,0x0,8
tick,0x7ffdf681f424,31827829,0,0x0,8
tick,0x7ffdf681f424,31829870,0,0x0,8
tick,0x7ffdf681f424,31831839,0,0x0,8
tick,0x7ffdf681f424,31833840,0,0x0,8
tick,0x7ffdf681f424,31835906,0,0x0,8
tick,0x7ffdf681f424,31837952,0,0x0,8
tick,0x7ffdf681f424,31839896,0,0x0,8
tick,0x7ffdf681f424,31840992,0,0x0,8
tick,0x7ffdf681f424,31842997,0,0x0,8
tick,0x7ffdf681f424,31845061,0,0x0,8
tick,0x7ffdf681f424,31846967,0,0x0,8
tick,0x7ffdf681f424,31849010,0,0x0,8
tick,0x7ffdf681f424,31850957,0,0x0,8
tick,0x7ffdf681f424,31853011,0,0x0,8
tick,0x7ffdf681f424,31854972,0,0x0,8
tick,0x7ffdf681f424,31857003,0,0x0,8
tick,0x7ffdf681f424,31858965,0,0x0,8
tick,0x7ffdf681f424,31860969,0,0x0,8
tick,0x7ffdf681f424,31862984,0,0x0,8
tick,0x7ffdf681f424,31864968,0,0x0,8
tick,0x7ffdf681f424,31867007,0,0x0,8
tick,0x7ffdf681f424,31869015,0,0x0,8
tick,0x7ffdf681f424,31870934,0,0x0,8
tick,0x7ffdf681f424,31872884,0,0x0,8
tick,0x7ffdf681f424,31874917,0,0x0,8
tick,0x7ffdf681f424,31877012,0,0x0,8
tick,0x7ffdf681f424,31878896,0,0x0,8
tick,0x7ffdf681f424,31880883,0,0x0,8
tick,0x7ffdf681f424,31888207,0,0x0,8
tick,0x7ffdf681f424,31891844,0,0x0,8
tick,0x7ffdf681f424,31894690,0,0x0,8
tick,0x7ffdf681f424,31895923,0,0x0,8
tick,0x7ffdf681f424,31897890,0,0x0,8
tick,0x7ffdf681f424,31899768,0,0x0,8
tick,0x7ffdf681f424,31901791,0,0x0,8
tick,0x7ffdf681f424,31903761,0,0x0,8
tick,0x7ffdf681f424,31905955,0,0x0,8
tick,0x7ffdf681f424,31907828,0,0x0,8
tick,0x7ffdf681f424,31909986,0,0x0,8
tick,0x7ffdf681f424,31911816,0,0x0,8
tick,0x7ffdf681f424,31913966,0,0x0,8
tick,0x7ffdf681f424,31915921,0,0x0,8
tick,0x7ffdf681f424,31917993,0,0x0,8
tick,0x7ffdf681f424,31919931,0,0x0,8
tick,0x7ffdf681f424,31921765,0,0x0,8
tick,0x7ffdf681f424,31923869,0,0x0,8
tick,0x7ffdf681f424,31925860,0,0x0,8
tick,0x7ffdf681f424,31927840,0,0x0,8
tick,0x7ffdf681f424,31929915,0,0x0,8
tick,0x7ffdf681f424,31931889,0,0x0,8
tick,0x7ffdf681f424,31933873,0,0x0,8
tick,0x7ffdf681f424,31935886,0,0x0,8
tick,0x7ffdf681f424,31937772,0,0x0,8
tick,0x7ffdf681f424,31939800,0,0x0,8
tick,0x7ffdf681f424,31941827,0,0x0,8
tick,0x7ffdf681f424,31943850,0,0x0,8
tick,0x7ffdf681f424,31945800,0,0x0,8
tick,0x7ffdf681f424,31947678,0,0x0,8
tick,0x7ffdf681f424,31949799,0,0x0,8
tick,0x7ffdf681f424,31951691,0,0x0,8
tick,0x7ffdf681f424,31953700,0,0x0,8
tick,0x7ffdf681f424,31955711,0,0x0,8
tick,0x7ffdf681f424,31957780,0,0x0,8
tick,0x7ffdf681f424,31959804,0,0x0,8
tick,0x7ffdf681f424,31961779,0,0x0,8
tick,0x7ffdf681f424,31963808,0,0x0,8
tick,0x7ffdf681f424,31965773,0,0x0,8
tick,0x7ffdf681f424,31967758,0,0x0,8
tick,0x7ffdf681f424,31969730,0,0x0,8
tick,0x7ffdf681f424,31971721,0,0x0,8
tick,0x7ffdf681f424,31973739,0,0x0,8
tick,0x7ffdf681f424,31975736,0,0x0,8
tick,0x7ffdf681f424,31977728,0,0x0,8
tick,0x7ffdf681f424,31979721,0,0x0,8
tick,0x7ffdf681f424,31981717,0,0x0,8
tick,0x7ffdf681f424,31983768,0,0x0,8
tick,0x7ffdf681f424,31985736,0,0x0,8
tick,0x7ffdf681f424,31987596,0,0x0,8
tick,0x7ffdf681f424,31989697,0,0x0,8
tick,0x7ffdf681f424,31991672,0,0x0,8
tick,0x7ffdf681f424,31993695,0,0x0,8
tick,0x7ffdf681f424,31995565,0,0x0,8
tick,0x7ffdf681f424,31997680,0,0x0,8
tick,0x7ffdf681f424,31999671,0,0x0,8
tick,0x7ffdf681f424,32001660,0,0x0,8
tick,0x7ffdf681f424,32003587,0,0x0,8
tick,0x7ffdf681f424,32005650,0,0x0,8
tick,0x7ffdf681f424,32007644,0,0x0,8
tick,0x7ffdf681f424,32009637,0,0x0,8
tick,0x7ffdf681f424,32011636,0,0x0,8
tick,0x7ffdf681f424,32013643,0,0x0,8
tick,0x7ffdf681f424,32015599,0,0x0,8
tick,0x7ffdf681f424,32017612,0,0x0,8
tick,0x7ffdf681f424,32019617,0,0x0,8
tick,0x7ffdf681f424,32021585,0,0x0,8
tick,0x7ffdf681f424,32023539,0,0x0,8
tick,0x7ffdf681f424,32025600,0,0x0,8
tick,0x7ffdf681f424,32027604,0,0x0,8
tick,0x7ffdf681f424,32029514,0,0x0,8
tick,0x7ffdf681f424,32031539,0,0x0,8
tick,0x7ffdf681f424,32033575,0,0x0,8
tick,0x7ffdf681f424,32035500,0,0x0,8
tick,0x7ffdf681f424,32037428,0,0x0,8
tick,0x7ffdf681f424,32039560,0,0x0,8
tick,0x7ffdf681f424,32041444,0,0x0,8
tick,0x7ffdf681f424,32043534,0,0x0,8
tick,0x7ffdf681f424,32045508,0,0x0,8
tick,0x7ffdf681f424,32047537,0,0x0,8
tick,0x7ffdf681f424,32049540,0,0x0,8
tick,0x7ffdf681f424,32051548,0,0x0,8
tick,0x7ffdf681f424,32053414,0,0x0,8
tick,0x7ffdf681f424,32055525,0,0x0,8
tick,0x7ffdf681f424,32057452,0,0x0,8
tick,0x7ffdf681f424,32059491,0,0x0,8
tick,0x7ffdf681f424,32061440,0,0x0,8
tick,0x7ffdf681f424,32063499,0,0x0,8
tick,0x7ffdf681f424,32065496,0,0x0,8
tick,0x7ffdf681f424,32067489,0,0x0,8
tick,0x7ffdf681f424,32069487,0,0x0,8
tick,0x7ffdf681f424,32071364,0,0x0,8
tick,0x7ffdf681f424,32073493,0,0x0,8
tick,0x7ffdf681f424,32075467,0,0x0,8
tick,0x7ffdf681f424,32077350,0,0x0,8
tick,0x7ffdf681f424,32079439,0,0x0,8
tick,0x7ffdf681f424,32081424,0,0x0,8
tick,0x7ffdf681f424,32083448,0,0x0,8
tick,0x7ffdf681f424,32085326,0,0x0,8
tick,0x7ffdf681f424,32087321,0,0x0,8
tick,0x7ffdf681f424,32089323,0,0x0,8
tick,0x7ffdf681f424,32091410,0,0x0,8
tick,0x7ffdf681f424,32093311,0,0x0,8
tick,0x7ffdf681f424,32095289,0,0x0,8
tick,0x7ffdf681f424,32097401,0,0x0,8
tick,0x7ffdf681f424,32099394,0,0x0,8
tick,0x7ffdf681f424,32101282,0,0x0,8
tick,0x7ffdf681f424,32103280,0,0x0,8
tick,0x7ffdf681f424,32105278,0,0x0,8
tick,0x7ffdf681f424,32107305,0,0x0,8
tick,0x7ffdf681f424,32109381,0,0x0,8
tick,0x7ffdf681f424,32111258,0,0x0,8
tick,0x7ffdf681f424,32113304,0,0x0,8
tick,0x7ffdf681f424,32115288,0,0x0,8
tick,0x7ffdf681f424,32117298,0,0x0,8
tick,0x7ffdf681f424,32119236,0,0x0,8
tick,0x7ffdf681f424,32121269,0,0x0,8
tick,0x7ffdf681f424,32123212,0,0x0,8
tick,0x7ffdf681f424,32125215,0,0x0,8
tick,0x7ffdf681f424,32127261,0,0x0,8
tick,0x7ffdf681f424,32129266,0,0x0,8
tick,0x7ffdf681f424,32131313,0,0x0,8
tick,0x7ffdf681f424,32133199,0,0x0,8
tick,0x7ffdf681f424,32135303,0,0x0,8
tick,0x7ffdf681f424,32137196,0,0x0,8
tick,0x7ffdf681f424,32139221,0,0x0,8
tick,0x7ffdf681f424,32141177,0,0x0,8
tick,0x7ffdf681f424,32143287,0,0x0,8
tick,0x7ffdf681f424,32145184,0,0x0,8
tick,0x7ffdf681f424,32147142,0,0x0,8
tick,0x7ffdf681f424,32149160,0,0x0,8
tick,0x7ffdf681f424,32151147,0,0x0,8
tick,0x7ffdf681f424,32153150,0,0x0,8
tick,0x7ffdf681f424,32155265,0,0x0,8
tick,0x7ffdf681f424,32157246,0,0x0,8
tick,0x7ffdf681f424,32159152,0,0x0,8
tick,0x7ffdf681f424,32161154,0,0x0,8
tick,0x7ffdf681f424,32163121,0,0x0,8
tick,0x7ffdf681f424,32165118,0,0x0,8
tick,0x7ffdf681f424,32167114,0,0x0,8
tick,0x7ffdf681f424,32169090,0,0x0,8
tick,0x7ffdf681f424,32171106,0,0x0,8
tick,0x7ffdf681f424,32173102,0,0x0,8
tick,0x7ffdf681f424,32175091,0,0x0,8
tick,0x7ffdf681f424,32177086,0,0x0,8
tick,0x7ffdf681f424,32179139,0,0x0,8
tick,0x7ffdf681f424,32181131,0,0x0,8
tick,0x7ffdf681f424,32183101,0,0x0,8
tick,0x7ffdf681f424,32185065,0,0x0,8
tick,0x7ffdf681f424,32187103,0,0x0,8
tick,0x7ffdf681f424,32189048,0,0x0,8
tick,0x7ffdf681f424,32191049,0,0x0,8
tick,0x7ffdf681f424,32193043,0,0x0,8
tick,0x7ffdf681f424,32195061,0,0x0,8
tick,0x7ffdf681f424,32197097,0,0x0,8
tick,0x7ffdf681f424,32199034,0,0x0,8
tick,0x7ffdf681f424,32201100,0,0x0,8
tick,0x7ffdf681f424,32203022,0,0x0,8
tick,0x7ffdf681f424,32205030,0,0x0,8
tick,0x7ffdf681f424,32207005,0,0x0,8
tick,0x7ffdf681f424,32209005,0,0x0,8
tick,0x7ffdf681f424,32210999,0,0x0,8
tick,0x7ffdf681f424,32213002,0,0x0,8
tick,0x7ffdf681f424,32214984,0,0x0,8
tick,0x7ffdf681f424,32216978,0,0x0,8
tick,0x7ffdf681f424,32218974,0,0x0,8
tick,0x7ffdf681f424,32220970,0,0x0,8
tick,0x7ffdf681f424,32222956,0,0x0,8
tick,0x7ffdf681f424,32225005,0,0x0,8
tick,0x7ffdf681f424,32226947,0,0x0,8
tick,0x7ffdf681f424,32228946,0,0x0,8
tick,0x7ffdf681f424,32230934,0,0x0,8
tick,0x7ffdf681f424,32232996,0,0x0,8
tick,0x7ffdf681f424,32234955,0,0x0,8
tick,0x7ffdf681f424,32236937,0,0x0,8
tick,0x7ffdf681f424,32238951,0,0x0,8
tick,0x7ffdf681f424,32240928,0,0x0,8
tick,0x7ffdf681f424,32242923,0,0x0,8
tick,0x7ffdf681f424,32244908,0,0x0,8
tick,0x7ffdf681f424,32246919,0,0x0,8
tick,0x7ffdf681f424,32248974,0,0x0,8
tick,0x7ffdf681f424,32250941,0,0x0,8
tick,0x7ffdf681f424,32252922,0,0x0,8
tick,0x7ffdf681f424,32254996,0,0x0,8
tick,0x7ffdf681f424,32256928,0,0x0,8
tick,0x7ffdf681f424,32258929,0,0x0,8
tick,0x7ffdf681f424,32260957,0,0x0,8
tick,0x7ffdf681f424,32262957,0,0x0,8
tick,0x7ffdf681f424,32264968,0,0x0,8
tick,0x7ffdf681f424,32266917,0,0x0,8
tick,0x7ffdf681f424,32268950,0,0x0,8
tick,0x7ffdf681f424,32270884,0,0x0,8
tick,0x7ffdf681f424,32272934,0,0x0,8
tick,0x7ffdf681f424,32274917,0,0x0,8
tick,0x7ffdf681f424,32276949,0,0x0,8
tick,0x7ffdf681f424,32278804,0,0x0,8
tick,0x7ffdf681f424,32280935,0,0x0,8
tick,0x7ffdf681f424,32282904,0,0x0,8
tick,0x7ffdf681f424,32284897,0,0x0,8
tick,0x7ffdf681f424,32286904,0,0x0,8
tick,0x7ffdf681f424,32288930,0,0x0,8
tick,0x7ffdf681f424,32290931,0,0x0,8
tick,0x7ffdf681f424,32292909,0,0x0,8
tick,0x7ffdf681f424,32294883,0,0x0,8
tick,0x7ffdf681f424,32296879,0,0x0,8
tick,0x7ffdf681f424,32298855,0,0x0,8
tick,0x7ffdf681f424,32300925,0,0x0,8
tick,0x7ffdf681f424,32302923,0,0x0,8
tick,0x7ffdf681f424,32304798,0,0x0,8
tick,0x7ffdf681f424,32306889,0,0x0,8
tick,0x7ffdf681f424,32308875,0,0x0,8
tick,0x7ffdf681f424,32310869,0,0x0,8
tick,0x7ffdf681f424,32312876,0,0x0,8
tick,0x7ffdf681f424,32314852,0,0x0,8
tick,0x7ffdf681f424,32316860,0,0x0,8
tick,0x7ffdf681f424,32318828,0,0x0,8
tick,0x7ffdf681f424,32320767,0,0x0,8
tick,0x7ffdf681f424,32322785,0,0x0,8
tick,0x7ffdf681f424,32324829,0,0x0,8
tick,0x7ffdf681f424,32326816,0,0x0,8
tick,0x7ffdf681f424,32328754,0,0x0,8
tick,0x7ffdf681f424,32330833,0,0x0,8
tick,0x7ffdf681f424,32332750,0,0x0,8
tick,0x7ffdf681f424,32334713,0,0x0,8
tick,0x7ffdf681f424,32336802,0,0x0,8
tick,0x7ffdf681f424,32338769,0,0x0,8
tick,0x7ffdf681f424,32340755,0,0x0,8
tick,0x7ffdf681f424,32342732,0,0x0,8
tick,0x7ffdf681f424,32344727,0,0x0,8
tick,0x7ffdf681f424,32346736,0,0x0,8
tick,0x7ffdf681f424,32348734,0,0x0,8
tick,0x7ffdf681f424,32350739,0,0x0,8
tick,0x7ffdf681f424,32352733,0,0x0,8
tick,0x7ffdf681f424,32354733,0,0x0,8
tick,0x7ffdf681f424,32356720,0,0x0,8
tick,0x7ffdf681f424,32358735,0,0x0,8
tick,0x7ffdf681f424,32360764,0,0x0,8
tick,0x7ffdf681f424,32362758,0,0x0,8
tick,0x7ffdf681f424,32364763,0,0x0,8
tick,0x7ffdf681f424,32366749,0,0x0,8
tick,0x7ffdf681f424,32368647,0,0x0,8
tick,0x7ffdf681f424,32370626,0,0x0,8
tick,0x7ffdf681f424,32372607,0,0x0,8
tick,0x7ffdf681f424,32374718,0,0x0,8
tick,0x7ffdf681f424,32376726,0,0x0,8
tick,0x7ffdf681f424,32378617,0,0x0,8
tick,0x7ffdf681f424,32380705,0,0x0,8
tick,0x7ffdf681f424,32382696,0,0x0,8
tick,0x7ffdf681f424,32384699,0,0x0,8
tick,0x7ffdf681f424,32386713,0,0x0,8
tick,0x7ffdf681f424,32388609,0,0x0,8
tick,0x7ffdf681f424,32390570,0,0x0,8
tick,0x7ffdf681f424,32392573,0,0x0,8
tick,0x7ffdf681f424,32394560,0,0x0,8
tick,0x7ffdf681f424,32396554,0,0x0,8
tick,0x7ffdf681f424,32398552,0,0x0,8
tick,0x7ffdf681f424,32400554,0,0x0,8
tick,0x7ffdf681f424,32402560,0,0x0,8
tick,0x7ffdf681f424,32404542,0,0x0,8
tick,0x7ffdf681f424,32406519,0,0x0,8
tick,0x7ffdf681f424,32408546,0,0x0,8
tick,0x7ffdf681f424,32410576,0,0x0,8
tick,0x7ffdf681f424,32412562,0,0x0,8
tick,0x7ffdf681f424,32414536,0,0x0,8
tick,0x7ffdf681f424,32416517,0,0x0,8
tick,0x7ffdf681f424,32418390,0,0x0,8
tick,0x7ffdf681f424,32420480,0,0x0,8
tick,0x7ffdf681f424,32422480,0,0x0,8
tick,0x7ffdf681f424,32423547,0,0x0,8
tick,0x7ffdf681f424,32425622,0,0x0,8
tick,0x7ffdf681f424,32427562,0,0x0,8
tick,0x7ffdf681f424,32429798,0,0x0,8
tick,0x7ffdf681f424,32430972,0,0x0,8
tick,0x7ffdf681f424,32432865,0,0x0,8
tick,0x7ffdf681f424,32434930,0,0x0,8
tick,0x7ffdf681f424,32436969,0,0x0,8
tick,0x7ffdf681f424,32438938,0,0x0,8
tick,0x7ffdf681f424,32440919,0,0x0,8
tick,0x7ffdf681f424,32442103,0,0x0,8
tick,0x7ffdf681f424,32443285,0,0x0,8
tick,0x7ffdf681f424,32445241,0,0x0,8
tick,0x7ffdf681f424,32447310,0,0x0,8
tick,0x7ffdf681f424,32448489,0,0x0,8
tick,0x7ffdf681f424,32449653,0,0x0,8
tick,0x7ffdf681f424,32451669,0,0x0,8
tick,0x7ffdf681f424,32453508,0,0x0,8
tick,0x7ffdf681f424,32455453,0,0x0,8
tick,0x7ffdf681f424,32456637,0,0x0,8
tick,0x7ffdf681f424,32458653,0,0x0,8
tick,0x7ffdf681f424,32460686,0,0x0,8
tick,0x7ffdf681f424,32462595,0,0x0,8
tick,0x7ffdf681f424,32464597,0,0x0,8
tick,0x7ffdf681f424,32466585,0,0x0,8
tick,0x7ffdf681f424,32468570,0,0x0,8
tick,0x7ffdf681f424,32470428,0,0x0,8
tick,0x7ffdf681f424,32472561,0,0x0,8
tick,0x7ffdf681f424,32474575,0,0x0,8
tick,0x7ffdf681f424,32476571,0,0x0,8
tick,0x7ffdf681f424,32478555,0,0x0,8
tick,0x7ffdf681f424,32480507,0,0x0,8
tick,0x7ffdf681f424,32482442,0,0x0,8
tick,0x7ffdf681f424,32484601,0,0x0,8
tick,0x7ffdf681f424,32485735,0,0x0,8
tick,0x7ffdf681f424,32487633,0,0x0,8
tick,0x7ffdf681f424,32489815,0,0x0,8
tick,0x7ffdf681f424,32491000,0,0x0,8
tick,0x7ffdf681f424,32493222,0,0x0,8
tick,0x7ffdf681f424,32494340,0,0x0,8
tick,0x7ffdf681f424,32496253,0,0x0,8
tick,0x7ffdf681f424,32498215,0,0x0,8
tick,0x7ffdf681f424,32500243,0,0x0,8
tick,0x7ffdf681f424,32502175,0,0x0,8
tick,0x7ffdf681f424,32504277,0,0x0,8
tick,0x7ffdf681f424,32506266,0,0x0,8
tick,0x7ffdf681f424,32508339,0,0x0,8
tick,0x7ffdf681f424,32509577,0,0x0,8
tick,0x7ffdf681f424,32511541,0,0x0,8
tick,0x7ffdf681f424,32513540,0,0x0,8
tick,0x7ffdf681f424,32514656,0,0x0,8
tick,0x7ffdf681f424,32516686,0,0x0,8
tick,0x7ffdf681f424,32518785,0,0x0,8
tick,0x7ffdf681f424,32520653,0,0x0,8
tick,0x7ffdf681f424,32522736,0,0x0,8
tick,0x7ffdf681f424,32524728,0,0x0,8
tick,0x7ffdf681f424,32526728,0,0x0,8
tick,0x7ffdf681f424,32528617,0,0x0,8
tick,0x7ffdf681f424,32530726,0,0x0,8
tick,0x7ffdf681f424,32532721,0,0x0,8
tick,0x7ffdf681f424,32534693,0,0x0,8
tick,0x7ffdf681f424,32536685,0,0x0,8
tick,0x7ffdf681f424,32538694,0,0x0,8
tick,0x7ffdf681f424,32540705,0,0x0,8
tick,0x7ffdf681f424,32542685,0,0x0,8
tick,0x7ffdf681f424,32544676,0,0x0,8
tick,0x7ffdf681f424,32546675,0,0x0,8
tick,0x7ffdf681f424,32548616,0,0x0,8
tick,0x7ffdf681f424,32550661,0,0x0,8
tick,0x7ffdf681f424,32552661,0,0x0,8
tick,0x7ffdf681f424,32554659,0,0x0,8
tick,0x7ffdf681f424,32556633,0,0x0,8
tick,0x7ffdf681f424,32558707,0,0x0,8
tick,0x7ffdf681f424,32560546,0,0x0,8
tick,0x7ffdf681f424,32562544,0,0x0,8
tick,0x7ffdf681f424,32564572,0,0x0,8
tick,0x7ffdf681f424,32566623,0,0x0,8
tick,0x7ffdf681f424,32568622,0,0x0,8
tick,0x7ffdf681f424,32570453,0,0x0,8
tick,0x7ffdf681f424,32572617,0,0x0,8
tick,0x7ffdf681f424,32574604,0,0x0,8
tick,0x7ffdf681f424,32576597,0,0x0,8
tick,0x7ffdf681f424,32578584,0,0x0,8
tick,0x7ffdf681f424,32580588,0,0x0,8
tick,0x7ffdf681f424,32582608,0,0x0,8
tick,0x7ffdf681f424,32584468,0,0x0,8
tick,0x7ffdf681f424,32586576,0,0x0,8
tick,0x7ffdf681f424,32588518,0,0x0,8
tick,0x7ffdf681f424,32590554,0,0x0,8
tick,0x7ffdf681f424,32592553,0,0x0,8
tick,0x7ffdf681f424,32594547,0,0x0,8
tick,0x7ffdf681f424,32596483,0,0x0,8
tick,0x7ffdf681f424,32598535,0,0x0,8
tick,0x7ffdf681f424,32600519,0,0x0,8
tick,0x7ffdf681f424,32602528,0,0x0,8
tick,0x7ffdf681f424,32604451,0,0x0,8
tick,0x7ffdf681f424,32606446,0,0x0,8
tick,0x7ffdf681f424,32608398,0,0x0,8
tick,0x7ffdf681f424,32610391,0,0x0,8
tick,0x7ffdf681f424,32612406,0,0x0,8
tick,0x7ffdf681f424,32614381,0,0x0,8
tick,0x7ffdf681f424,32616375,0,0x0,8
tick,0x7ffdf681f424,32618373,0,0x0,8
tick,0x7ffdf681f424,32620407,0,0x0,8
tick,0x7ffdf681f424,32622403,0,0x0,8
tick,0x7ffdf681f424,32624357,0,0x0,8
tick,0x7ffdf681f424,32626353,0,0x0,8
tick,0x7ffdf681f424,32628409,0,0x0,8
tick,0x7ffdf681f424,32630345,0,0x0,8
tick,0x7ffdf681f424,32632339,0,0x0,8
tick,0x7ffdf681f424,32634333,0,0x0,8
tick,0x7ffdf681f424,32636322,0,0x0,8
tick,0x7ffdf681f424,32638319,0,0x0,8
tick,0x7ffdf681f424,32640335,0,0x0,8
tick,0x7ffdf681f424,32642306,0,0x0,8
tick,0x7ffdf681f424,32644296,0,0x0,8
tick,0x7ffdf681f424,32646332,0,0x0,8
tick,0x7ffdf681f424,32648311,0,0x0,8
tick,0x7ffdf681f424,32650301,0,0x0,8
tick,0x7ffdf681f424,32652277,0,0x0,8
tick,0x7ffdf681f424,32654273,0,0x0,8
tick,0x7ffdf681f424,32656266,0,0x0,8
tick,0x7ffdf681f424,32658290,0,0x0,8
tick,0x7ffdf681f424,32660256,0,0x0,8
tick,0x7ffdf681f424,32662254,0,0x0,8
tick,0x7ffdf681f424,32664246,0,0x0,8
tick,0x7ffdf681f424,32666237,0,0x0,8
tick,0x7ffdf681f424,32668236,0,0x0,8
tick,0x7ffdf681f424,32670254,0,0x0,8
tick,0x7ffdf681f424,32672246,0,0x0,8
tick,0x7ffdf681f424,32674243,0,0x0,8
tick,0x7ffdf681f424,32676214,0,0x0,8
tick,0x7ffdf681f424,32678207,0,0x0,8
tick,0x7ffdf681f424,32680212,0,0x0,8
tick,0x7ffdf681f424,32682214,0,0x0,8
tick,0x7ffdf681f424,32684170,0,0x0,8
tick,0x7ffdf681f424,32686140,0,0x0,8
tick,0x7ffdf681f424,32688250,0,0x0,8
tick,0x7ffdf681f424,32690215,0,0x0,8
tick,0x7ffdf681f424,32692208,0,0x0,8
tick,0x7ffdf681f424,32694178,0,0x0,8
tick,0x7ffdf681f424,32696203,0,0x0,8
tick,0x7ffdf681f424,32698175,0,0x0,8
tick,0x7ffdf681f424,32700302,0,0x0,8
tick,0x7ffdf681f424,32702169,0,0x0,8
tick,0x7ffdf681f424,32704149,0,0x0,8
tick,0x7ffdf681f424,32706149,0,0x0,8
tick,0x7ffdf681f424,32708136,0,0x0,8
tick,0x7ffdf681f424,32710154,0,0x0,8
tick,0x7ffdf681f424,32712129,0,0x0,8
tick,0x7ffdf681f424,32714175,0,0x0,8
tick,0x7ffdf681f424,32716132,0,0x0,8
tick,0x7ffdf681f424,32718108,0,0x0,8
tick,0x7ffdf681f424,32720199,0,0x0,8
tick,0x7ffdf681f424,32722111,0,0x0,8
tick,0x7ffdf681f424,32724202,0,0x0,8
tick,0x7ffdf681f424,32726201,0,0x0,8
tick,0x7ffdf681f424,32728171,0,0x0,8
tick,0x7ffdf681f424,32730143,0,0x0,8
tick,0x7ffdf681f424,32732042,0,0x0,8
tick,0x7ffdf681f424,32734040,0,0x0,8
tick,0x7ffdf681f424,32736147,0,0x0,8
tick,0x7ffdf681f424,32738183,0,0x0,8
tick,0x7ffdf681f424,32740107,0,0x0,8
tick,0x7ffdf681f424,32742083,0,0x0,8
tick,0x7ffdf681f424,32744106,0,0x0,8
tick,0x7ffdf681f424,32746100,0,0x0,8
tick,0x7ffdf681f424,32748073,0,0x0,8
tick,0x7ffdf681f424,32750064,0,0x0,8
tick,0x7ffdf681f424,32752085,0,0x0,8
tick,0x7ffdf681f424,32754141,0,0x0,8
tick,0x7ffdf681f424,32756095,0,0x0,8
tick,0x7ffdf681f424,32758066,0,0x0,8
tick,0x7ffdf681f424,32759186,0,0x0,8
tick,0x7ffdf681f424,32761180,0,0x0,8
tick,0x7ffdf681f424,32763060,0,0x0,8
tick,0x7ffdf681f424,32765086,0,0x0,8
tick,0x7ffdf681f424,32767071,0,0x0,8
tick,0x7ffdf681f424,32768268,0,0x0,8
tick,0x7ffdf681f424,32770367,0,0x0,8
tick,0x7ffdf681f424,32772337,0,0x0,8
tick,0x7ffdf681f424,32774429,0,0x0,8
tick,0x7ffdf681f424,32776377,0,0x0,8
tick,0x7ffdf681f424,32778436,0,0x0,8
tick,0x7ffdf681f424,32780325,0,0x0,8
tick,0x7ffdf681f424,32782406,0,0x0,8
tick,0x7ffdf681f424,32784403,0,0x0,8
tick,0x7ffdf681f424,32786421,0,0x0,8
tick,0x7ffdf681f424,32788296,0,0x0,8
tick,0x7ffdf681f424,32790314,0,0x0,8
tick,0x7ffdf681f424,32792326,0,0x0,8
tick,0x7ffdf681f424,32794278,0,0x0,8
tick,0x7ffdf681f424,32796299,0,0x0,8
tick,0x7ffdf681f424,32798267,0,0x0,8
tick,0x7ffdf681f424,32800371,0,0x0,8
tick,0x7ffdf681f424,32802371,0,0x0,8
tick,0x7ffdf681f424,32804249,0,0x0,8
tick,0x7ffdf681f424,32806251,0,0x0,8
tick,0x7ffdf681f424,32808312,0,0x0,8
tick,0x7ffdf681f424,32810334,0,0x0,8
tick,0x7ffdf681f424,32812241,0,0x0,8
tick,0x7ffdf681f424,32814341,0,0x0,8
tick,0x7ffdf681f424,32816317,0,0x0,8
tick,0x7ffdf681f424,32818301,0,0x0,8
tick,0x7ffdf681f424,32820275,0,0x0,8
tick,0x7ffdf681f424,32822210,0,0x0,8
tick,0x7ffdf681f424,32824306,0,0x0,8
tick,0x7ffdf681f424,32826290,0,0x0,8
tick,0x7ffdf681f424,32828289,0,0x0,8
tick,0x7ffdf681f424,32830186,0,0x0,8
tick,0x7ffdf681f424,32832239,0,0x0,8
tick,0x7ffdf681f424,32834268,0,0x0,8
tick,0x7ffdf681f424,32836264,0,0x0,8
tick,0x7ffdf681f424,32838183,0,0x0,8
tick,0x7ffdf681f424,32840170,0,0x0,8
tick,0x7ffdf681f424,32842277,0,0x0,8
tick,0x7ffdf681f424,32844245,0,0x0,8
tick,0x7ffdf681f424,32846159,0,0x0,8
tick,0x7ffdf681f424,32848144,0,0x0,8
tick,0x7ffdf681f424,32850250,0,0x0,8
tick,0x7ffdf681f424,32852244,0,0x0,8
tick,0x7ffdf681f424,32854118,0,0x0,8
tick,0x7ffdf681f424,32856229,0,0x0,8
tick,0x7ffdf681f424,32858212,0,0x0,8
tick,0x7ffdf681f424,32860200,0,0x0,8
tick,0x7ffdf681f424,32862114,0,0x0,8
tick,0x7ffdf681f424,32864078,0,0x0,8
tick,0x7ffdf681f424,32866191,0,0x0,8
tick,0x7ffdf681f424,32868194,0,0x0,8
tick,0x7ffdf681f424,32870094,0,0x0,8
tick,0x7ffdf681f424,32872117,0,0x0,8
tick,0x7ffdf681f424,32874083,0,0x0,8
tick,0x7ffdf681f424,32876159,0,0x0,8
tick,0x7ffdf681f424,32878149,0,0x0,8
tick,0x7ffdf681f424,32880051,0,0x0,8
tick,0x7ffdf681f424,32882149,0,0x0,8
tick,0x7ffdf681f424,32884141,0,0x0,8
tick,0x7ffdf681f424,32886148,0,0x0,8
tick,0x7ffdf681f424,32888064,0,0x0,8
tick,0x7ffdf681f424,32890056,0,0x0,8
tick,0x7ffdf681f424,32892115,0,0x0,8
tick,0x7ffdf681f424,32894114,0,0x0,8
tick,0x7ffdf681f424,32896037,0,0x0,8
tick,0x7ffdf681f424,32897999,0,0x0,8
tick,0x7ffdf681f424,32900093,0,0x0,8
tick,0x7ffdf681f424,32902089,0,0x0,8
tick,0x7ffdf681f424,32903981,0,0x0,8
tick,0x7ffdf681f424,32906088,0,0x0,8
tick,0x7ffdf681f424,32908097,0,0x0,8
tick,0x7ffdf681f424,32910062,0,0x0,8
tick,0x7ffdf681f424,32911997,0,0x0,8
tick,0x7ffdf681f424,32913957,0,0x0,8
tick,0x7ffdf681f424,32916049,0,0x0,8
tick,0x7ffdf681f424,32918025,0,0x0,8
tick,0x7ffdf681f424,32920035,0,0x0,8
tick,0x7ffdf681f424,32921931,0,0x0,8
tick,0x7ffdf681f424,32924033,0,0x0,8
tick,0x7ffdf681f424,32926022,0,0x0,8
tick,0x7ffdf681f424,32928024,0,0x0,8
tick,0x7ffdf681f424,32929943,0,0x0,8
tick,0x7ffdf681f424,32932025,0,0x0,8
tick,0x7ffdf681f424,32934038,0,0x0,8
tick,0x7ffdf681f424,32936016,0,0x0,8
tick,0x7ffdf681f424,32937915,0,0x0,8
tick,0x7ffdf681f424,32939947,0,0x0,8
tick,0x7ffdf681f424,32941984,0,0x0,8
tick,0x7ffdf681f424,32943991,0,0x0,8
tick,0x7ffdf681f424,32945832,0,0x0,8
tick,0x7ffdf681f424,32947852,0,0x0,8
tick,0x7ffdf681f424,32949887,0,0x0,8
tick,0x7ffdf681f424,32951998,0,0x0,8
tick,0x7ffdf681f424,32953877,0,0x0,8
tick,0x7ffdf681f424,32955874,0,0x0,8
tick,0x7ffdf681f424,32957937,0,0x0,8
tick,0x7ffdf681f424,32959938,0,0x0,8
tick,0x7ffdf681f424,32961933,0,0x0,8
tick,0x7ffdf681f424,32963832,0,0x0,8
tick,0x7ffdf681f424,32965925,0,0x0,8
tick,0x7ffdf681f424,32967908,0,0x0,8
tick,0x7ffdf681f424,32969880,0,0x0,8
tick,0x7ffdf681f424,32971827,0,0x0,8
tick,0x7ffdf681f424,32973910,0,0x0,8
tick,0x7ffdf681f424,32975900,0,0x0,8
tick,0x7ffdf681f424,32977904,0,0x0,8
tick,0x7ffdf681f424,32979801,0,0x0,8
tick,0x7ffdf681f424,32981785,0,0x0,8
tick,0x7ffdf681f424,32983840,0,0x0,8
tick,0x7ffdf681f424,32985846,0,0x0,8
tick,0x7ffdf681f424,32987768,0,0x0,8
tick,0x7ffdf681f424,32989762,0,0x0,8
tick,0x7ffdf681f424,32991830,0,0x0,8
tick,0x7ffdf681f424,32993856,0,0x0,8
tick,0x7ffdf681f424,32995692,0,0x0,8
tick,0x7ffdf681f424,32997765,0,0x0,8
tick,0x7ffdf681f424,32999848,0,0x0,8
tick,0x7ffdf681f424,33001820,0,0x0,8
tick,0x7ffdf681f424,33003672,0,0x0,8
tick,0x7ffdf681f424,33005760,0,0x0,8
tick,0x7ffdf681f424,33007818,0,0x0,8
tick,0x7ffdf681f424,33009816,0,0x0,8
tick,0x7ffdf681f424,33011785,0,0x0,8
tick,0x7ffdf681f424,33013701,0,0x0,8
tick,0x7ffdf681f424,33015791,0,0x0,8
tick,0x7ffdf681f424,33017805,0,0x0,8
tick,0x7ffdf681f424,33019793,0,0x0,8
tick,0x7ffdf681f424,33021681,0,0x0,8
tick,0x7ffdf681f424,33023670,0,0x0,8
tick,0x7ffdf681f424,33025762,0,0x0,8
tick,0x7ffdf681f424,33027787,0,0x0,8
tick,0x7ffdf681f424,33029656,0,0x0,8
tick,0x7ffdf681f424,33031636,0,0x0,8
tick,0x7ffdf681f424,33033768,0,0x0,8
tick,0x7ffdf681f424,33035725,0,0x0,8
tick,0x7ffdf681f424,33037623,0,0x0,8
tick,0x7ffdf681f424,33039764,0,0x0,8
tick,0x7ffdf681f424,33041716,0,0x0,8
tick,0x7ffdf681f424,33043718,0,0x0,8
tick,0x7ffdf681f424,33045617,0,0x0,8
tick,0x7ffdf681f424,33047599,0,0x0,8
tick,0x7ffdf681f424,33049719,0,0x0,8
tick,0x7ffdf681f424,33051702,0,0x0,8
tick,0x7ffdf681f424,33053640,0,0x0,8
tick,0x7ffdf681f424,33055581,0,0x0,8
tick,0x7ffdf681f424,33057568,0,0x0,8
tick,0x7ffdf681f424,33059658,0,0x0,8
tick,0x7ffdf681f424,33061681,0,0x0,8
tick,0x7ffdf681f424,33063588,0,0x0,8
tick,0x7ffdf681f424,33065648,0,0x0,8
tick,0x7ffdf681f424,33067587,0,0x0,8
tick,0x7ffdf681f424,33069649,0,0x0,8
tick,0x7ffdf681f424,33071567,0,0x0,8
tick,0x7ffdf681f424,33073484,0,0x0,8
tick,0x7ffdf681f424,33075585,0,0x0,8
tick,0x7ffdf681f424,33077572,0,0x0,8
tick,0x7ffdf681f424,33079515,0,0x0,8
tick,0x7ffdf681f424,33081486,0,0x0,8
tick,0x7ffdf681f424,33083554,0,0x0,8
tick,0x7ffdf681f424,33085557,0,0x0,8
tick,0x7ffdf681f424,33087498,0,0x0,8
tick,0x7ffdf681f424,33089605,0,0x0,8
tick,0x7ffdf681f424,33091576,0,0x0,8
tick,0x7ffdf681f424,33093550,0,0x0,8
tick,0x7ffdf681f424,33095399,0,0x0,8
tick,0x7ffdf681f424,33097428,0,0x0,8
tick,0x7ffdf681f424,33099512,0,0x0,8
tick,0x7ffdf681f424,33101519,0,0x0,8
tick,0x7ffdf681f424,33103519,0,0x0,8
tick,0x7ffdf681f424,33105428,0,0x0,8
tick,0x7ffdf681f424,33107499,0,0x0,8
tick,0x7ffdf681f424,33109464,0,0x0,8
tick,0x7ffdf681f424,33111376,0,0x0,8
tick,0x7ffdf681f424,33113377,0,0x0,8
tick,0x7ffdf681f424,33115488,0,0x0,8
tick,0x7ffdf681f424,33117356,0,0x0,8
tick,0x7ffdf681f424,33119437,0,0x0,8
tick,0x7ffdf681f424,33121366,0,0x0,8
tick,0x7ffdf681f424,33123376,0,0x0,8
tick,0x7ffdf681f424,33125401,0,0x0,8
tick,0x7ffdf681f424,33127416,0,0x0,8
tick,0x7ffdf681f424,33129384,0,0x0,8
tick,0x7ffdf681f424,33131360,0,0x0,8
tick,0x7ffdf681f424,33133454,0,0x0,8
tick,0x7ffdf681f424,33135313,0,0x0,8
tick,0x7ffdf681f424,33137281,0,0x0,8
tick,0x7ffdf681f424,33139312,0,0x0,8
tick,0x7ffdf681f424,33141352,0,0x0,8
tick,0x7ffdf681f424,33143303,0,0x0,8
tick,0x7ffdf681f424,33145288,0,0x0,8
tick,0x7ffdf681f424,33147338,0,0x0,8
tick,0x7ffdf681f424,33149263,0,0x0,8
tick,0x7ffdf681f424,33151405,0,0x0,8
tick,0x7ffdf681f424,33153391,0,0x0,8
tick,0x7ffdf681f424,33155324,0,0x0,8
tick,0x7ffdf681f424,33157264,0,0x0,8
tick,0x7ffdf681f424,33159278,0,0x0,8
tick,0x7ffdf681f424,33161351,0,0x0,8
tick,0x7ffdf681f424,33163266,0,0x0,8
tick,0x7ffdf681f424,33165262,0,0x0,8
tick,0x7ffdf681f424,33167341,0,0x0,8
tick,0x7ffdf681f424,33169312,0,0x0,8
tick,0x7ffdf681f424,33171336,0,0x0,8
tick,0x7ffdf681f424,33173269,0,0x0,8
tick,0x7ffdf681f424,33175333,0,0x0,8
tick,0x7ffdf681f424,33177210,0,0x0,8
tick,0x7ffdf681f424,33179249,0,0x0,8
tick,0x7ffdf681f424,33181204,0,0x0,8
tick,0x7ffdf681f424,33183301,0,0x0,8
tick,0x7ffdf681f424,33185299,0,0x0,8
tick,0x7ffdf681f424,33187234,0,0x0,8
tick,0x7ffdf681f424,33189226,0,0x0,8
tick,0x7ffdf681f424,33191337,0,0x0,8
tick,0x7ffdf681f424,33193338,0,0x0,8
tick,0x7ffdf681f424,33195295,0,0x0,8
tick,0x7ffdf681f424,33197157,0,0x0,8
tick,0x7ffdf681f424,33199303,0,0x0,8
tick,0x7ffdf681f424,33201299,0,0x0,8
tick,0x7ffdf681f424,33203262,0,0x0,8
tick,0x7ffdf681f424,33205130,0,0x0,8
tick,0x7ffdf681f424,33207280,0,0x0,8
tick,0x7ffdf681f424,33209276,0,0x0,8
tick,0x7ffdf681f424,33211269,0,0x0,8
tick,0x7ffdf681f424,33213174,0,0x0,8
tick,0x7ffdf681f424,33215230,0,0x0,8
tick,0x7ffdf681f424,33217252,0,0x0,8
tick,0x7ffdf681f424,33219159,0,0x0,8
tick,0x7ffdf681f424,33221148,0,0x0,8
tick,0x7ffdf681f424,33223132,0,0x0,8
tick,0x7ffdf681f424,33225187,0,0x0,8
tick,0x7ffdf681f424,33227221,0,0x0,8
tick,0x7ffdf681f424,33229121,0,0x0,8
tick,0x7ffdf681f424,33231097,0,0x0,8
tick,0x7ffdf681f424,33233188,0,0x0,8
tick,0x7ffdf681f424,33235182,0,0x0,8
tick,0x7ffdf681f424,33237164,0,0x0,8
tick,0x7ffdf681f424,33239083,0,0x0,8
tick,0x7ffdf681f424,33241197,0,0x0,8
tick,0x7ffdf681f424,33243175,0,0x0,8
tick,0x7ffdf681f424,33245165,0,0x0,8
tick,0x7ffdf681f424,33247113,0,0x0,8
tick,0x7ffdf681f424,33249166,0,0x0,8
tick,0x7ffdf681f424,33251164,0,0x0,8
tick,0x7ffdf681f424,33253050,0,0x0,8
tick,0x7ffdf681f424,33255041,0,0x0,8
tick,0x7ffdf681f424,33257062,0,0x0,8
tick,0x7ffdf681f424,33259160,0,0x0,8
tick,0x7ffdf681f424,33261132,0,0x0,8
tick,0x7ffdf681f424,33263033,0,0x0,8
tick,0x7ffdf681f424,33265026,0,0x0,8
tick,0x7ffdf681f424,33267115,0,0x0,8
tick,0x7ffdf681f424,33269068,0,0x0,8
tick,0x7ffdf681f424,33270990,0,0x0,8
tick,0x7ffdf681f424,33272997,0,0x0,8
tick,0x7ffdf681f424,33275090,0,0x0,8
tick,0x7ffdf681f424,33277085,0,0x0,8
tick,0x7ffdf681f424,33278990,0,0x0,8
tick,0x7ffdf681f424,33281114,0,0x0,8
tick,0x7ffdf681f424,33283079,0,0x0,8
tick,0x7ffdf681f424,33285084,0,0x0,8
tick,0x7ffdf681f424,33287079,0,0x0,8
tick,0x7ffdf681f424,33288941,0,0x0,8
tick,0x7ffdf681f424,33291092,0,0x0,8
tick,0x7ffdf681f424,33293046,0,0x0,8
tick,0x7ffdf681f424,33295034,0,0x0,8
tick,0x7ffdf681f424,33296937,0,0x0,8
tick,0x7ffdf681f424,33299024,0,0x0,8
tick,0x7ffdf681f424,33301017,0,0x0,8
tick,0x7ffdf681f424,33303032,0,0x0,8
tick,0x7ffdf681f424,33304910,0,0x0,8
tick,0x7ffdf681f424,33307026,0,0x0,8
tick,0x7ffdf681f424,33309003,0,0x0,8
tick,0x7ffdf681f424,33310979,0,0x0,8
tick,0x7ffdf681f424,33312926,0,0x0,8
tick,0x7ffdf681f424,33314887,0,0x0,8
tick,0x7ffdf681f424,33316986,0,0x0,8
tick,0x7ffdf681f424,33318982,0,0x0,8
tick,0x7ffdf681f424,33320899,0,0x0,8
tick,0x7ffdf681f424,33322881,0,0x0,8
tick,0x7ffdf681f424,33324964,0,0x0,8
tick,0x7ffdf681f424,33326944,0,0x0,8
tick,0x7ffdf681f424,33328854,0,0x0,8
tick,0x7ffdf681f424,33330841,0,0x0,8
tick,0x7ffdf681f424,33332921,0,0x0,8
tick,0x7ffdf681f424,33334944,0,0x0,8
tick,0x7ffdf681f424,33336920,0,0x0,8
tick,0x7ffdf681f424,33338836,0,0x0,8
tick,0x7ffdf681f424,33340929,0,0x0,8
tick,0x7ffdf681f424,33342925,0,0x0,8
tick,0x7ffdf681f424,33344910,0,0x0,8
tick,0x7ffdf681f424,33346825,0,0x0,8
tick,0x7ffdf681f424,33348892,0,0x0,8
tick,0x7ffdf681f424,33350879,0,0x0,8
tick,0x7ffdf681f424,33352881,0,0x0,8
tick,0x7ffdf681f424,33354788,0,0x0,8
tick,0x7ffdf681f424,33356774,0,0x0,8
tick,0x7ffdf681f424,33358742,0,0x0,8
tick,0x7ffdf681f424,33360881,0,0x0,8
tick,0x7ffdf681f424,33362736,0,0x0,8
tick,0x7ffdf681f424,33364721,0,0x0,8
tick,0x7ffdf681f424,33366800,0,0x0,8
tick,0x7ffdf681f424,33368819,0,0x0,8
tick,0x7ffdf681f424,33370726,0,0x0,8
tick,0x7ffdf681f424,33372701,0,0x0,8
tick,0x7ffdf681f424,33374787,0,0x0,8
tick,0x7ffdf681f424,33376807,0,0x0,8
tick,0x7ffdf681f424,33378714,0,0x0,8
tick,0x7ffdf681f424,33380688,0,0x0,8
tick,0x7ffdf681f424,33382794,0,0x0,8
tick,0x7ffdf681f424,33384757,0,0x0,8
tick,0x7ffdf681f424,33386752,0,0x0,8
tick,0x7ffdf681f424,33388664,0,0x0,8
tick,0x7ffdf681f424,33390765,0,0x0,8
tick,0x7ffdf681f424,33392735,0,0x0,8
tick,0x7ffdf681f424,33394739,0,0x0,8
tick,0x7ffdf681f424,33396645,0,0x0,8
tick,0x7ffdf681f424,33398720,0,0x0,8
tick,0x7ffdf681f424,33400697,0,0x0,8
tick,0x7ffdf681f424,33402714,0,0x0,8
tick,0x7ffdf681f424,33404616,0,0x0,8
tick,0x7ffdf681f424,33406613,0,0x0,8
tick,0x7ffdf681f424,33408595,0,0x0,8
tick,0x7ffdf681f424,33410692,0,0x0,8
tick,0x7ffdf681f424,33412577,0,0x0,8
tick,0x7ffdf681f424,33414681,0,0x0,8
tick,0x7ffdf681f424,33416681,0,0x0,8
tick,0x7ffdf681f424,33418665,0,0x0,8
tick,0x7ffdf681f424,33420546,0,0x0,8
tick,0x7ffdf681f424,33422669,0,0x0,8
tick,0x7ffdf681f424,33424664,0,0x0,8
tick,0x7ffdf681f424,33426646,0,0x0,8
tick,0x7ffdf681f424,33428642,0,0x0,8
tick,0x7ffdf681f424,33430637,0,0x0,8
tick,0x7ffdf681f424,33432630,0,0x0,8
tick,0x7ffdf681f424,33434635,0,0x0,8
tick,0x7ffdf681f424,33436604,0,0x0,8
tick,0x7ffdf681f424,33438562,0,0x0,8
tick,0x7ffdf681f424,33440560,0,0x0,8
tick,0x7ffdf681f424,33442557,0,0x0,8
tick,0x7ffdf681f424,33444528,0,0x0,8
tick,0x7ffdf681f424,33446509,0,0x0,8
tick,0x7ffdf681f424,33448538,0,0x0,8
tick,0x7ffdf681f424,33450525,0,0x0,8
tick,0x7ffdf681f424,33452517,0,0x0,8
tick,0x7ffdf681f424,33454518,0,0x0,8
tick,0x7ffdf681f424,33456508,0,0x0,8
tick,0x7ffdf681f424,33458469,0,0x0,8
tick,0x7ffdf681f424,33460483,0,0x0,8
tick,0x7ffdf681f424,33462436,0,0x0,8
tick,0x7ffdf681f424,33464426,0,0x0,8
tick,0x7ffdf681f424,33466425,0,0x0,8
tick,0x7ffdf681f424,33468442,0,0x0,8
tick,0x7ffdf681f424,33470455,0,0x0,8
tick,0x7ffdf681f424,33472409,0,0x0,8
tick,0x7ffdf681f424,33474478,0,0x0,8
tick,0x7ffdf681f424,33476405,0,0x0,8
tick,0x7ffdf681f424,33478391,0,0x0,8
tick,0x7ffdf681f424,33480385,0,0x0,8
tick,0x7ffdf681f424,33482502,0,0x0,8
tick,0x7ffdf681f424,33484377,0,0x0,8
tick,0x7ffdf681f424,33486376,0,0x0,8
tick,0x7ffdf681f424,33488370,0,0x0,8
tick,0x7ffdf681f424,33490363,0,0x0,8
tick,0x7ffdf681f424,33492352,0,0x0,8
tick,0x7ffdf681f424,33494346,0,0x0,8
tick,0x7ffdf681f424,33496395,0,0x0,8
tick,0x7ffdf681f424,33498340,0,0x0,8
tick,0x7ffdf681f424,33500365,0,0x0,8
tick,0x7ffdf681f424,33502325,0,0x0,8
tick,0x7ffdf681f424,33504342,0,0x0,8
tick,0x7ffdf681f424,33506362,0,0x0,8
tick,0x7ffdf681f424,33508354,0,0x0,8
tick,0x7ffdf681f424,33510347,0,0x0,8
tick,0x7ffdf681f424,33512356,0,0x0,8
tick,0x7ffdf681f424,33514340,0,0x0,8
tick,0x7ffdf681f424,33516318,0,0x0,8
tick,0x7ffdf681f424,33518284,0,0x0,8
tick,0x7ffdf681f424,33520343,0,0x0,8
tick,0x7ffdf681f424,33522288,0,0x0,8
tick,0x7ffdf681f424,33524276,0,0x0,8
tick,0x7ffdf681f424,33526288,0,0x0,8
tick,0x7ffdf681f424,33528436,0,0x0,8
tick,0x7ffdf681f424,33530421,0,0x0,8
tick,0x7ffdf681f424,33532385,0,0x0,8
tick,0x7ffdf681f424,33534384,0,0x0,8
tick,0x7ffdf681f424,33536297,0,0x0,8
tick,0x7ffdf681f424,33538391,0,0x0,8
tick,0x7ffdf681f424,33540250,0,0x0,8
tick,0x7ffdf681f424,33542299,0,0x0,8
tick,0x7ffdf681f424,33544345,0,0x0,8
tick,0x7ffdf681f424,33546272,0,0x0,8
tick,0x7ffdf681f424,33548252,0,0x0,8
tick,0x7ffdf681f424,33550272,0,0x0,8
tick,0x7ffdf681f424,33552359,0,0x0,8
tick,0x7ffdf681f424,33554329,0,0x0,8
tick,0x7ffdf681f424,33556354,0,0x0,8
tick,0x7ffdf681f424,33558253,0,0x0,8
tick,0x7ffdf681f424,33560232,0,0x0,8
tick,0x7ffdf681f424,33562259,0,0x0,8
tick,0x7ffdf681f424,33564244,0,0x0,8
tick,0x7ffdf681f424,33566258,0,0x0,8
tick,0x7ffdf681f424,33568227,0,0x0,8
tick,0x7ffdf681f424,33570243,0,0x0,8
tick,0x7ffdf681f424,33572205,0,0x0,8
tick,0x7ffdf681f424,33574208,0,0x0,8
tick,0x7ffdf681f424,33576258,0,0x0,8
tick,0x7ffdf681f424,33578163,0,0x0,8
tick,0x7ffdf681f424,33580160,0,0x0,8
tick,0x7ffdf681f424,33582120,0,0x0,8
tick,0x7ffdf681f424,33584109,0,0x0,8
tick,0x7ffdf681f424,33586211,0,0x0,8
tick,0x7ffdf681f424,33588113,0,0x0,8
tick,0x7ffdf681f424,33590096,0,0x0,8
tick,0x7ffdf681f424,33592116,0,0x0,8
tick,0x7ffdf681f424,33594165,0,0x0,8
tick,0x7ffdf681f424,33596099,0,0x0,8
tick,0x7ffdf681f424,33598079,0,0x0,8
tick,0x7ffdf681f424,33600152,0,0x0,8
tick,0x7ffdf681f424,33602068,0,0x0,8
tick,0x7ffdf681f424,33604061,0,0x0,8
tick,0x7ffdf681f424,33606081,0,0x0,8
tick,0x7ffdf681f424,33608054,0,0x0,8
tick,0x7ffdf681f424,33610044,0,0x0,8
tick,0x7ffdf681f424,33612046,0,0x0,8
tick,0x7ffdf681f424,33614089,0,0x0,8
tick,0x7ffdf681f424,33616031,0,0x0,8
tick,0x7ffdf681f424,33618131,0,0x0,8
tick,0x7ffdf681f424,33620113,0,0x0,8
tick,0x7ffdf681f424,33622120,0,0x0,8
tick,0x7ffdf681f424,33624119,0,0x0,8
tick,0x7ffdf681f424,33626120,0,0x0,8
tick,0x7ffdf681f424,33628159,0,0x0,8
tick,0x7ffdf681f424,33630163,0,0x0,8
tick,0x7ffdf681f424,33632117,0,0x0,8
tick,0x7ffdf681f424,33634024,0,0x0,8
tick,0x7ffdf681f424,33636145,0,0x0,8
tick,0x7ffdf681f424,33638043,0,0x0,8
tick,0x7ffdf681f424,33640002,0,0x0,8
tick,0x7ffdf681f424,33642096,0,0x0,8
tick,0x7ffdf681f424,33644118,0,0x0,8
tick,0x7ffdf681f424,33646000,0,0x0,8
tick,0x7ffdf681f424,33648007,0,0x0,8
tick,0x7ffdf681f424,33650004,0,0x0,8
tick,0x7ffdf681f424,33652014,0,0x0,8
tick,0x7ffdf681f424,33653995,0,0x0,8
tick,0x7ffdf681f424,33655990,0,0x0,8
tick,0x7ffdf681f424,33657980,0,0x0,8
tick,0x7ffdf681f424,33659946,0,0x0,8
tick,0x7ffdf681f424,33661985,0,0x0,8
tick,0x7ffdf681f424,33664008,0,0x0,8
tick,0x7ffdf681f424,33666058,0,0x0,8
tick,0x7ffdf681f424,33667994,0,0x0,8
tick,0x7ffdf681f424,33670002,0,0x0,8
tick,0x7ffdf681f424,33672001,0,0x0,8
tick,0x7ffdf681f424,33674030,0,0x0,8
tick,0x7ffdf681f424,33675965,0,0x0,8
tick,0x7ffdf681f424,33677950,0,0x0,8
tick,0x7ffdf681f424,33680032,0,0x0,8
tick,0x7ffdf681f424,33682001,0,0x0,8
tick,0x7ffdf681f424,33684001,0,0x0,8
tick,0x7ffdf681f424,33685985,0,0x0,8
tick,0x7ffdf681f424,33687995,0,0x0,8
tick,0x7ffdf681f424,33690004,0,0x0,8
tick,0x7ffdf681f424,33691987,0,0x0,8
tick,0x7ffdf681f424,33693986,0,0x0,8
tick,0x7ffdf681f424,33695866,0,0x0,8
tick,0x7ffdf681f424,33698006,0,0x0,8
tick,0x7ffdf681f424,33699967,0,0x0,8
tick,0x7ffdf681f424,33701965,0,0x0,8
tick,0x7ffdf681f424,33703859,0,0x0,8
tick,0x7ffdf681f424,33705959,0,0x0,8
tick,0x7ffdf681f424,33707937,0,0x0,8
tick,0x7ffdf681f424,33709913,0,0x0,8
tick,0x7ffdf681f424,33711995,0,0x0,8
tick,0x7ffdf681f424,33713821,0,0x0,8
tick,0x7ffdf681f424,33715879,0,0x0,8
tick,0x7ffdf681f424,33717939,0,0x0,8
tick,0x7ffdf681f424,33719895,0,0x0,8
tick,0x7ffdf681f424,33721832,0,0x0,8
tick,0x7ffdf681f424,33723906,0,0x0,8
tick,0x7ffdf681f424,33725893,0,0x0,8
tick,0x7ffdf681f424,33727892,0,0x0,8
tick,0x7ffdf681f424,33729895,0,0x0,8
tick,0x7ffdf681f424,33731893,0,0x0,8
tick,0x7ffdf681f424,33733879,0,0x0,8
tick,0x7ffdf681f424,33735860,0,0x0,8
tick,0x7ffdf681f424,33737854,0,0x0,8
tick,0x7ffdf681f424,33739859,0,0x0,8
tick,0x7ffdf681f424,33741867,0,0x0,8
tick,0x7ffdf681f424,33743836,0,0x0,8
tick,0x7ffdf681f424,33745745,0,0x0,8
tick,0x7ffdf681f424,33747849,0,0x0,8
tick,0x7ffdf681f424,33749843,0,0x0,8
tick,0x7ffdf681f424,33751789,0,0x0,8
tick,0x7ffdf681f424,33753781,0,0x0,8
tick,0x7ffdf681f424,33755812,0,0x0,8
tick,0x7ffdf681f424,33757818,0,0x0,8
tick,0x7ffdf681f424,33759825,0,0x0,8
tick,0x7ffdf681f424,33761798,0,0x0,8
tick,0x7ffdf681f424,33763817,0,0x0,8
tick,0x7ffdf681f424,33765785,0,0x0,8
tick,0x7ffdf681f424,33767795,0,0x0,8
tick,0x7ffdf681f424,33769765,0,0x0,8
tick,0x7ffdf681f424,33771760,0,0x0,8
tick,0x7ffdf681f424,33773730,0,0x0,8
tick,0x7ffdf681f424,33775736,0,0x0,8
tick,0x7ffdf681f424,33777746,0,0x0,8
tick,0x7ffdf681f424,33779679,0,0x0,8
tick,0x7ffdf681f424,33781739,0,0x0,8
tick,0x7ffdf681f424,33783731,0,0x0,8
tick,0x7ffdf681f424,33785706,0,0x0,8
tick,0x7ffdf681f424,33787612,0,0x0,8
tick,0x7ffdf681f424,33789623,0,0x0,8
tick,0x7ffdf681f424,33791668,0,0x0,8
tick,0x7ffdf681f424,33793705,0,0x0,8
tick,0x7ffdf681f424,33795541,0,0x0,8
tick,0x7ffdf681f424,33797652,0,0x0,8
tick,0x7ffdf681f424,33799642,0,0x0,8
tick,0x7ffdf681f424,33801627,0,0x0,8
tick,0x7ffdf681f424,33803672,0,0x0,8
tick,0x7ffdf681f424,33805594,0,0x0,8
tick,0x7ffdf681f424,33807623,0,0x0,8
tick,0x7ffdf681f424,33809620,0,0x0,8
tick,0x7ffdf681f424,33811586,0,0x0,8
tick,0x7ffdf681f424,33813608,0,0x0,8
tick,0x7ffdf681f424,33815607,0,0x0,8
tick,0x7ffdf681f424,33817610,0,0x0,8
tick,0x7ffdf681f424,33819543,0,0x0,8
tick,0x7ffdf681f424,33821588,0,0x0,8
tick,0x7ffdf681f424,33823583,0,0x0,8
tick,0x7ffdf681f424,33825516,0,0x0,8
tick,0x7ffdf681f424,33827489,0,0x0,8
tick,0x7ffdf681f424,33829455,0,0x0,8
tick,0x7ffdf681f424,33831560,0,0x0,8
tick,0x7ffdf681f424,33833439,0,0x0,8
tick,0x7ffdf681f424,33835472,0,0x0,8
tick,0x7ffdf681f424,33837435,0,0x0,8
tick,0x7ffdf681f424,33839535,0,0x0,8
tick,0x7ffdf681f424,33841533,0,0x0,8
tick,0x7ffdf681f424,33843529,0,0x0,8
tick,0x7ffdf681f424,33845418,0,0x0,8
tick,0x7ffdf681f424,33847514,0,0x0,8
tick,0x7ffdf681f424,33849515,0,0x0,8
tick,0x7ffdf681f424,33851460,0,0x0,8
tick,0x7ffdf681f424,33853392,0,0x0,8
tick,0x7ffdf681f424,33855501,0,0x0,8
tick,0x7ffdf681f424,33857495,0,0x0,8
tick,0x7ffdf681f424,33859489,0,0x0,8
tick,0x7ffdf681f424,33861494,0,0x0,8
tick,0x7ffdf681f424,33863476,0,0x0,8
tick,0x7ffdf681f424,33865364,0,0x0,8
tick,0x7ffdf681f424,33867355,0,0x0,8
tick,0x7ffdf681f424,33869380,0,0x0,8
tick,0x7ffdf681f424,33871472,0,0x0,8
tick,0x7ffdf681f424,33873441,0,0x0,8
tick,0x7ffdf681f424,33875447,0,0x0,8
tick,0x7ffdf681f424,33877392,0,0x0,8
tick,0x7ffdf681f424,33879324,0,0x0,8
tick,0x7ffdf681f424,33881440,0,0x0,8
tick,0x7ffdf681f424,33883411,0,0x0,8
tick,0x7ffdf681f424,33885413,0,0x0,8
tick,0x7ffdf681f424,33887303,0,0x0,8
tick,0x7ffdf681f424,33889411,0,0x0,8
tick,0x7ffdf681f424,33891409,0,0x0,8
tick,0x7ffdf681f424,33893449,0,0x0,8
tick,0x7ffdf681f424,33895461,0,0x0,8
tick,0x7ffdf681f424,33897442,0,0x0,8
tick,0x7ffdf681f424,33899442,0,0x0,8
tick,0x7ffdf681f424,33901433,0,0x0,8
tick,0x7ffdf681f424,33903416,0,0x0,8
tick,0x7ffdf681f424,33905388,0,0x0,8
tick,0x7ffdf681f424,33907410,0,0x0,8
tick,0x7ffdf681f424,33909410,0,0x0,8
tick,0x7ffdf681f424,33911405,0,0x0,8
tick,0x7ffdf681f424,33913403,0,0x0,8
tick,0x7ffdf681f424,33915396,0,0x0,8
tick,0x7ffdf681f424,33917322,0,0x0,8
tick,0x7ffdf681f424,33919384,0,0x0,8
tick,0x7ffdf681f424,33921336,0,0x0,8
tick,0x7ffdf681f424,33923372,0,0x0,8
tick,0x7ffdf681f424,33925360,0,0x0,8
tick,0x7ffdf681f424,33927429,0,0x0,8
tick,0x7ffdf681f424,33929351,0,0x0,8
tick,0x7ffdf681f424,33931350,0,0x0,8
tick,0x7ffdf681f424,33933345,0,0x0,8
tick,0x7ffdf681f424,33935332,0,0x0,8
tick,0x7ffdf681f424,33937231,0,0x0,8
tick,0x7ffdf681f424,33939367,0,0x0,8
tick,0x7ffdf681f424,33941325,0,0x0,8
tick,0x7ffdf681f424,33943276,0,0x0,8
tick,0x7ffdf681f424,33945215,0,0x0,8
tick,0x7ffdf681f424,33947308,0,0x0,8
tick,0x7ffdf681f424,33949267,0,0x0,8
tick,0x7ffdf681f424,33951300,0,0x0,8
tick,0x7ffdf681f424,33953294,0,0x0,8
tick,0x7ffdf681f424,33955215,0,0x0,8
tick,0x7ffdf681f424,33957282,0,0x0,8
tick,0x7ffdf681f424,33959275,0,0x0,8
tick,0x7ffdf681f424,33961308,0,0x0,8
tick,0x7ffdf681f424,33963272,0,0x0,8
tick,0x7ffdf681f424,33965257,0,0x0,8
tick,0x7ffdf681f424,33967255,0,0x0,8
tick,0x7ffdf681f424,33969201,0,0x0,8
tick,0x7ffdf681f424,33971211,0,0x0,8
tick,0x7ffdf681f424,33973119,0,0x0,8
tick,0x7ffdf681f424,33975183,0,0x0,8
tick,0x7ffdf681f424,33977177,0,0x0,8
tick,0x7ffdf681f424,33979097,0,0x0,8
tick,0x7ffdf681f424,33981225,0,0x0,8
tick,0x7ffdf681f424,33983216,0,0x0,8
tick,0x7ffdf681f424,33985209,0,0x0,8
tick,0x7ffdf681f424,33987136,0,0x0,8
tick,0x7ffdf681f424,33989196,0,0x0,8
tick,0x7ffdf681f424,33991191,0,0x0,8
tick,0x7ffdf681f424,33993203,0,0x0,8
tick,0x7ffdf681f424,33995180,0,0x0,8
tick,0x7ffdf681f424,33997175,0,0x0,8
tick,0x7ffdf681f424,33999173,0,0x0,8
tick,0x7ffdf681f424,34001158,0,0x0,8
tick,0x7ffdf681f424,34003163,0,0x0,8
tick,0x7ffdf681f424,34005176,0,0x0,8
tick,0x7ffdf681f424,34007150,0,0x0,8
tick,0x7ffdf681f424,34009112,0,0x0,8
tick,0x7ffdf681f424,34010995,0,0x0,8
tick,0x7ffdf681f424,34013018,0,0x0,8
tick,0x7ffdf681f424,34014941,0,0x0,8
tick,0x7ffdf681f424,34016930,0,0x0,8
tick,0x7ffdf681f424,34018971,0,0x0,8
tick,0x7ffdf681f424,34020922,0,0x0,8
tick,0x7ffdf681f424,34023035,0,0x0,8
tick,0x7ffdf681f424,34025116,0,0x0,8
tick,0x7ffdf681f424,34027101,0,0x0,8
tick,0x7ffdf681f424,34028928,0,0x0,8
tick,0x7ffdf681f424,34031063,0,0x0,8
tick,0x7ffdf681f424,34033099,0,0x0,8
tick,0x7ffdf681f424,34035077,0,0x0,8
tick,0x7ffdf681f424,34037039,0,0x0,8
tick,0x7ffdf681f424,34039063,0,0x0,8
tick,0x7ffdf681f424,34041075,0,0x0,8
tick,0x7ffdf681f424,34043057,0,0x0,8
tick,0x7ffdf681f424,34045040,0,0x0,8
tick,0x7ffdf681f424,34047041,0,0x0,8
tick,0x7ffdf681f424,34049046,0,0x0,8
tick,0x7ffdf681f424,34051030,0,0x0,8
tick,0x7ffdf681f424,34052982,0,0x0,8
tick,0x7ffdf681f424,34055021,0,0x0,8
tick,0x7ffdf681f424,34057012,0,0x0,8
tick,0x7ffdf681f424,34058977,0,0x0,8
tick,0x7ffdf681f424,34061004,0,0x0,8
tick,0x7ffdf681f424,34063001,0,0x0,8
tick,0x7ffdf681f424,34064989,0,0x0,8
tick,0x7ffdf681f424,34066984,0,0x0,8
tick,0x7ffdf681f424,34068983,0,0x0,8
tick,0x7ffdf681f424,34071000,0,0x0,8
tick,0x7ffdf681f424,34072984,0,0x0,8
tick,0x7ffdf681f424,34074983,0,0x0,8
tick,0x7ffdf681f424,34076967,0,0x0,8
tick,0x7ffdf681f424,34078852,0,0x0,8
tick,0x7ffdf681f424,34080971,0,0x0,8
tick,0x7ffdf681f424,34082940,0,0x0,8
tick,0x7ffdf681f424,34084847,0,0x0,8
tick,0x7ffdf681f424,34086936,0,0x0,8
tick,0x7ffdf681f424,34088925,0,0x0,8
tick,0x7ffdf681f424,34090916,0,0x0,8
tick,0x7ffdf681f424,34092928,0,0x0,8
tick,0x7ffdf681f424,34094900,0,0x0,8
tick,0x7ffdf681f424,34096896,0,0x0,8
tick,0x7ffdf681f424,34098910,0,0x0,8
tick,0x7ffdf681f424,34100890,0,0x0,8
tick,0x7ffdf681f424,34102854,0,0x0,8
tick,0x7ffdf681f424,34104880,0,0x0,8
tick,0x7ffdf681f424,34106756,0,0x0,8
tick,0x7ffdf681f424,34108718,0,0x0,8
tick,0x7ffdf681f424,34110842,0,0x0,8
tick,0x7ffdf681f424,34112820,0,0x0,8
tick,0x7ffdf681f424,34114877,0,0x0,8
tick,0x7ffdf681f424,34116871,0,0x0,8
tick,0x7ffdf681f424,34118866,0,0x0,8
tick,0x7ffdf681f424,34120746,0,0x0,8
tick,0x7ffdf681f424,34122850,0,0x0,8
tick,0x7ffdf681f424,34124791,0,0x0,8
tick,0x7ffdf681f424,34126830,0,0x0,8
tick,0x7ffdf681f424,34128833,0,0x0,8
tick,0x7ffdf681f424,34130812,0,0x0,8
tick,0x7ffdf681f424,34132820,0,0x0,8
tick,0x7ffdf681f424,34134812,0,0x0,8
tick,0x7ffdf681f424,34136807,0,0x0,8
tick,0x7ffdf681f424,34138789,0,0x0,8
tick,0x7ffdf681f424,34140811,0,0x0,8
tick,0x7ffdf681f424,34142793,0,0x0,8
tick,0x7ffdf681f424,34144778,0,0x0,8
tick,0x7ffdf681f424,34146731,0,0x0,8
tick,0x7ffdf681f424,34148772,0,0x0,8
tick,0x7ffdf681f424,34150771,0,0x0,8
tick,0x7ffdf681f424,34152760,0,0x0,8
tick,0x7ffdf681f424,34154761,0,0x0,8
tick,0x7ffdf681f424,34156753,0,0x0,8
tick,0x7ffdf681f424,34158746,0,0x0,8
tick,0x7ffdf681f424,34160743,0,0x0,8
tick,0x7ffdf681f424,34162742,0,0x0,8
tick,0x7ffdf681f424,34164730,0,0x0,8
tick,0x7ffdf681f424,34166724,0,0x0,8
tick,0x7ffdf681f424,34168674,0,0x0,8
tick,0x7ffdf681f424,34170616,0,0x0,8
tick,0x7ffdf681f424,34172709,0,0x0,8
tick,0x7ffdf681f424,34174595,0,0x0,8
tick,0x7ffdf681f424,34176575,0,0x0,8
tick,0x7ffdf681f424,34178698,0,0x0,8
tick,0x7ffdf681f424,34180694,0,0x0,8
tick,0x7ffdf681f424,34182706,0,0x0,8
tick,0x7ffdf681f424,34184642,0,0x0,8
tick,0x7ffdf681f424,34186676,0,0x0,8
tick,0x7ffdf681f424,34188638,0,0x0,8
tick,0x7ffdf681f424,34190623,0,0x0,8
tick,0x7ffdf681f424,34192653,0,0x0,8
tick,0x7ffdf681f424,34194666,0,0x0,8
tick,0x7ffdf681f424,34196659,0,0x0,8
tick,0x7ffdf681f424,34198649,0,0x0,8
tick,0x7ffdf681f424,34200645,0,0x0,8
tick,0x7ffdf681f424,34202637,0,0x0,8
tick,0x7ffdf681f424,34204630,0,0x0,8
tick,0x7ffdf681f424,34206633,0,0x0,8
tick,0x7ffdf681f424,34208615,0,0x0,8
tick,0x7ffdf681f424,34210618,0,0x0,8
tick,0x7ffdf681f424,34212574,0,0x0,8
tick,0x7ffdf681f424,34214607,0,0x0,8
tick,0x7ffdf681f424,34216598,0,0x0,8
tick,0x7ffdf681f424,34218595,0,0x0,8
tick,0x7ffdf681f424,34220528,0,0x0,8
tick,0x7ffdf681f424,34222590,0,0x0,8
tick,0x7ffdf681f424,34224581,0,0x0,8
tick,0x7ffdf681f424,34226574,0,0x0,8
tick,0x7ffdf681f424,34228579,0,0x0,8
tick,0x7ffdf681f424,34230562,0,0x0,8
tick,0x7ffdf681f424,34232563,0,0x0,8
tick,0x7ffdf681f424,34234550,0,0x0,8
tick,0x7ffdf681f424,34236551,0,0x0,8
tick,0x7ffdf681f424,34238546,0,0x0,8
tick,0x7ffdf681f424,34240543,0,0x0,8
tick,0x7ffdf681f424,34242435,0,0x0,8
tick,0x7ffdf681f424,34244351,0,0x0,8
tick,0x7ffdf681f424,34246344,0,0x0,8
tick,0x7ffdf681f424,34248510,0,0x0,8
tick,0x7ffdf681f424,34250476,0,0x0,8
tick,0x7ffdf681f424,34252413,0,0x0,8
tick,0x7ffdf681f424,34254383,0,0x0,8
tick,0x7ffdf681f424,34256382,0,0x0,8
tick,0x7ffdf681f424,34258475,0,0x0,8
tick,0x7ffdf681f424,34260471,0,0x0,8
tick,0x7ffdf681f424,34262355,0,0x0,8
tick,0x7ffdf681f424,34264464,0,0x0,8
tick,0x7ffdf681f424,34266450,0,0x0,8
tick,0x7ffdf681f424,34268459,0,0x0,8
tick,0x7ffdf681f424,34270456,0,0x0,8
tick,0x7ffdf681f424,34272450,0,0x0,8
tick,0x7ffdf681f424,34274432,0,0x0,8
tick,0x7ffdf681f424,34276378,0,0x0,8
tick,0x7ffdf681f424,34278429,0,0x0,8
tick,0x7ffdf681f424,34280417,0,0x0,8
tick,0x7ffdf681f424,34282388,0,0x0,8
tick,0x7ffdf681f424,34284407,0,0x0,8
tick,0x7ffdf681f424,34286400,0,0x0,8
tick,0x7ffdf681f424,34288397,0,0x0,8
tick,0x7ffdf681f424,34290404,0,0x0,8
tick,0x7ffdf681f424,34292386,0,0x0,8
tick,0x7ffdf681f424,34294363,0,0x0,8
tick,0x7ffdf681f424,34296389,0,0x0,8
tick,0x7ffdf681f424,34298375,0,0x0,8
tick,0x7ffdf681f424,34300331,0,0x0,8
tick,0x7ffdf681f424,34302364,0,0x0,8
tick,0x7ffdf681f424,34304359,0,0x0,8
tick,0x7ffdf681f424,34306355,0,0x0,8
tick,0x7ffdf681f424,34308345,0,0x0,8
tick,0x7ffdf681f424,34310341,0,0x0,8
tick,0x7ffdf681f424,34312245,0,0x0,8
tick,0x7ffdf681f424,34314313,0,0x0,8
tick,0x7ffdf681f424,34316285,0,0x0,8
tick,0x7ffdf681f424,34318317,0,0x0,8
tick,0x7ffdf681f424,34320317,0,0x0,8
tick,0x7ffdf681f424,34322270,0,0x0,8
tick,0x7ffdf681f424,34324297,0,0x0,8
tick,0x7ffdf681f424,34326309,0,0x0,8
tick,0x7ffdf681f424,34328181,0,0x0,8
tick,0x7ffdf681f424,34330176,0,0x0,8
tick,0x7ffdf681f424,34332299,0,0x0,8
tick,0x7ffdf681f424,34334285,0,0x0,8
tick,0x7ffdf681f424,34336279,0,0x0,8
tick,0x7ffdf681f424,34338270,0,0x0,8
tick,0x7ffdf681f424,34340266,0,0x0,8
tick,0x7ffdf681f424,34342261,0,0x0,8
tick,0x7ffdf681f424,34344262,0,0x0,8
tick,0x7ffdf681f424,34346239,0,0x0,8
tick,0x7ffdf681f424,34348234,0,0x0,8
tick,0x7ffdf681f424,34350231,0,0x0,8
tick,0x7ffdf681f424,34352226,0,0x0,8
tick,0x7ffdf681f424,34354111,0,0x0,8
tick,0x7ffdf681f424,34356245,0,0x0,8
tick,0x7ffdf681f424,34358204,0,0x0,8
tick,0x7ffdf681f424,34360184,0,0x0,8
tick,0x7ffdf681f424,34362109,0,0x0,8
code-creation,LazyCompile,10,34362648,0x1dc8f4a6c7e,130,exit node:internal/process/per_thread:181:16,0x29f2e358b00,~
code-source-info,0x1dc8f4a6c7e,30,4965,5449,C0O4979C5O4987C17O4999C20O4987C26O5026C31O5043C36O5057C43O5074C47O5089C52O5102C58O5121C64O5138C68O5153C73O5161C86O5182C94O5161C100O5402C105O5410C115O5429C123O5410C129O5448,,
